{
 "*": {
  "data": {
   "imports": [
    "sklearn"
   ]
  },
  "type": "star-import"
 },
 "sklearn": {
  "data": {
   "symbols_in_volume": [
    "NameError",
    "__name__",
    "sklearn.__SKLEARN_SETUP__",
    "sklearn.logging",
    "sklearn.os",
    "sklearn.sys"
   ]
  },
  "type": "module"
 },
 "sklearn.__SKLEARN_SETUP__": {
  "data": {
   "lineno": 66
  },
  "type": "constant"
 },
 "sklearn.__all__": {
  "data": {
   "lineno": 85
  },
  "type": "constant"
 },
 "sklearn.__check_build": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "sklearn.__check_build.raise_build_error"
   ]
  },
  "type": "module"
 },
 "sklearn.__check_build.INPLACE_MSG": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "sklearn.__check_build.STANDARD_MSG": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "sklearn.__check_build.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "sklearn.__check_build.raise_build_error": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "ImportError",
    "enumerate",
    "list",
    "sklearn.__check_build.INPLACE_MSG",
    "sklearn.__check_build.STANDARD_MSG",
    "sklearn.__check_build.os"
   ]
  },
  "type": "function"
 },
 "sklearn.__check_build.setup": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.distutils.core.setup",
    "sklearn.__check_build.setup.configuration"
   ]
  },
  "type": "module"
 },
 "sklearn.__check_build.setup.Configuration": {
  "data": {
   "shadows": "numpy.distutils.misc_util.Configuration"
  },
  "type": "import"
 },
 "sklearn.__check_build.setup.configuration": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "numpy.distutils.misc_util.Configuration",
    "sklearn.__check_build.setup.numpy"
   ]
  },
  "type": "function"
 },
 "sklearn.__check_build.setup.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.__check_build.setup.setup": {
  "data": {
   "shadows": "numpy.distutils.core.setup"
  },
  "type": "import"
 },
 "sklearn.__version__": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "sklearn._build_utils": {
  "data": {},
  "type": "module"
 },
 "sklearn._build_utils.Cython": {
  "data": {
   "shadows": "Cython"
  },
  "type": "import"
 },
 "sklearn._build_utils.DEFAULT_ROOT": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "sklearn._build_utils.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "sklearn._build_utils.Tempita": {
  "data": {
   "shadows": "Cython.Tempita"
  },
  "type": "import"
 },
 "sklearn._build_utils._check_cython_version": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "ModuleNotFoundError",
    "ValueError",
    "distutils.version.LooseVersion",
    "sklearn._build_utils.Cython"
   ]
  },
  "type": "function"
 },
 "sklearn._build_utils.contextlib": {
  "data": {
   "shadows": "contextlib"
  },
  "type": "import"
 },
 "sklearn._build_utils.cythonize": {
  "data": {
   "shadows": "Cython.Build.cythonize"
  },
  "type": "import"
 },
 "sklearn._build_utils.cythonize_extensions": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "Cython.Build.cythonize",
    "ImportError",
    "basic_check_build",
    "check_openmp_support",
    "distutils.version.LooseVersion",
    "sklearn._build_utils._check_cython_version",
    "sklearn._build_utils.contextlib",
    "sklearn._build_utils.joblib",
    "sklearn._build_utils.sklearn"
   ]
  },
  "type": "function"
 },
 "sklearn._build_utils.gen_from_templates": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "Cython.Tempita.sub",
    "open",
    "sklearn._build_utils.os"
   ]
  },
  "type": "function"
 },
 "sklearn._build_utils.joblib": {
  "data": {
   "shadows": "joblib"
  },
  "type": "import"
 },
 "sklearn._build_utils.openmp_helpers": {
  "data": {},
  "type": "module"
 },
 "sklearn._build_utils.openmp_helpers.CompileError": {
  "data": {
   "shadows": "distutils.errors.CompileError"
  },
  "type": "import"
 },
 "sklearn._build_utils.openmp_helpers.LinkError": {
  "data": {
   "shadows": "distutils.errors.LinkError"
  },
  "type": "import"
 },
 "sklearn._build_utils.openmp_helpers.check_openmp_support": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "compile_test_program",
    "distutils.errors.CompileError",
    "distutils.errors.LinkError",
    "int",
    "len",
    "sklearn._build_utils.openmp_helpers.get_openmp_flag",
    "sklearn._build_utils.openmp_helpers.os",
    "sklearn._build_utils.openmp_helpers.subprocess",
    "sklearn._build_utils.openmp_helpers.textwrap",
    "sklearn._build_utils.openmp_helpers.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn._build_utils.openmp_helpers.get_openmp_flag": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "hasattr",
    "sklearn._build_utils.openmp_helpers.os",
    "sklearn._build_utils.openmp_helpers.sys"
   ]
  },
  "type": "function"
 },
 "sklearn._build_utils.openmp_helpers.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "sklearn._build_utils.openmp_helpers.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "sklearn._build_utils.openmp_helpers.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "sklearn._build_utils.openmp_helpers.textwrap": {
  "data": {
   "shadows": "textwrap"
  },
  "type": "import"
 },
 "sklearn._build_utils.openmp_helpers.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn._build_utils.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "sklearn._build_utils.pre_build_helpers": {
  "data": {},
  "type": "module"
 },
 "sklearn._build_utils.pre_build_helpers.Distribution": {
  "data": {
   "shadows": "distutils.dist.Distribution"
  },
  "type": "import"
 },
 "sklearn._build_utils.pre_build_helpers._get_compiler": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "distutils.dist.Distribution",
    "distutils.sysconfig.customize_compiler",
    "numpy.distutils.ccompiler.new_compiler",
    "numpy.distutils.command.config_compiler.config_cc",
    "sklearn._build_utils.pre_build_helpers.os",
    "sklearn._build_utils.pre_build_helpers.sys"
   ]
  },
  "type": "function"
 },
 "sklearn._build_utils.pre_build_helpers.basic_check_build": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "sklearn._build_utils.pre_build_helpers.compile_test_program",
    "sklearn._build_utils.pre_build_helpers.os",
    "sklearn._build_utils.pre_build_helpers.textwrap"
   ]
  },
  "type": "function"
 },
 "sklearn._build_utils.pre_build_helpers.compile_test_program": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "Exception",
    "callable",
    "extra_postargs",
    "extra_preargs",
    "open",
    "sklearn._build_utils.pre_build_helpers._get_compiler",
    "sklearn._build_utils.pre_build_helpers.glob",
    "sklearn._build_utils.pre_build_helpers.os",
    "sklearn._build_utils.pre_build_helpers.subprocess",
    "sklearn._build_utils.pre_build_helpers.sys",
    "sklearn._build_utils.pre_build_helpers.tempfile"
   ]
  },
  "type": "function"
 },
 "sklearn._build_utils.pre_build_helpers.config_cc": {
  "data": {
   "shadows": "numpy.distutils.command.config_compiler.config_cc"
  },
  "type": "import"
 },
 "sklearn._build_utils.pre_build_helpers.customize_compiler": {
  "data": {
   "shadows": "distutils.sysconfig.customize_compiler"
  },
  "type": "import"
 },
 "sklearn._build_utils.pre_build_helpers.glob": {
  "data": {
   "shadows": "glob"
  },
  "type": "import"
 },
 "sklearn._build_utils.pre_build_helpers.new_compiler": {
  "data": {
   "shadows": "numpy.distutils.ccompiler.new_compiler"
  },
  "type": "import"
 },
 "sklearn._build_utils.pre_build_helpers.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "sklearn._build_utils.pre_build_helpers.setuptools": {
  "data": {
   "shadows": "setuptools"
  },
  "type": "import"
 },
 "sklearn._build_utils.pre_build_helpers.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "sklearn._build_utils.pre_build_helpers.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "sklearn._build_utils.pre_build_helpers.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "sklearn._build_utils.pre_build_helpers.textwrap": {
  "data": {
   "shadows": "textwrap"
  },
  "type": "import"
 },
 "sklearn._build_utils.sklearn": {
  "data": {
   "shadows": "sklearn"
  },
  "type": "import"
 },
 "sklearn._config": {
  "data": {
   "symbols_in_volume": [
    "bool",
    "int",
    "sklearn._config.os"
   ]
  },
  "type": "module"
 },
 "sklearn._config._global_config": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "sklearn._config.config_context": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "contextlib.contextmanager",
    "sklearn._config.get_config",
    "sklearn._config.set_config"
   ]
  },
  "type": "function"
 },
 "sklearn._config.contextmanager": {
  "data": {
   "shadows": "contextlib.contextmanager"
  },
  "type": "import"
 },
 "sklearn._config.get_config": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "sklearn._config._global_config"
   ]
  },
  "type": "function"
 },
 "sklearn._config.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "sklearn._config.set_config": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "sklearn._config._global_config"
   ]
  },
  "type": "function"
 },
 "sklearn._distributor_init": {
  "data": {},
  "type": "module"
 },
 "sklearn._loss": {
  "data": {},
  "type": "module"
 },
 "sklearn._loss.glm_distribution": {
  "data": {
   "symbols_in_volume": [
    "collections.namedtuple",
    "sklearn._loss.glm_distribution.GammaDistribution",
    "sklearn._loss.glm_distribution.InverseGaussianDistribution",
    "sklearn._loss.glm_distribution.NormalDistribution",
    "sklearn._loss.glm_distribution.PoissonDistribution"
   ]
  },
  "type": "module"
 },
 "sklearn._loss.glm_distribution.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "sklearn._loss.glm_distribution.DistributionBoundary": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "sklearn._loss.glm_distribution.EDM_DISTRIBUTIONS": {
  "data": {
   "lineno": 350
  },
  "type": "constant"
 },
 "sklearn._loss.glm_distribution.ExponentialDispersionModel": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "abc.ABCMeta"
   ]
  },
  "type": "class"
 },
 "sklearn._loss.glm_distribution.ExponentialDispersionModel.deviance": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "sklearn._loss.glm_distribution.ExponentialDispersionModel.deviance_derivative": {
  "data": {
   "lineno": 158
  },
  "type": "function"
 },
 "sklearn._loss.glm_distribution.ExponentialDispersionModel.in_y_range": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "numpy.greater",
    "numpy.greater_equal",
    "sklearn._loss.glm_distribution.DistributionBoundary"
   ]
  },
  "type": "function"
 },
 "sklearn._loss.glm_distribution.ExponentialDispersionModel.unit_deviance": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "sklearn._loss.glm_distribution.ExponentialDispersionModel.unit_deviance_derivative": {
  "data": {
   "lineno": 116
  },
  "type": "function"
 },
 "sklearn._loss.glm_distribution.ExponentialDispersionModel.unit_variance": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "sklearn._loss.glm_distribution.GammaDistribution": {
  "data": {
   "lineno": 338,
   "symbols_in_volume": [
    "sklearn._loss.glm_distribution.TweedieDistribution"
   ]
  },
  "type": "class"
 },
 "sklearn._loss.glm_distribution.GammaDistribution.__init__": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn._loss.glm_distribution.InverseGaussianDistribution": {
  "data": {
   "lineno": 344,
   "symbols_in_volume": [
    "sklearn._loss.glm_distribution.TweedieDistribution"
   ]
  },
  "type": "class"
 },
 "sklearn._loss.glm_distribution.InverseGaussianDistribution.__init__": {
  "data": {
   "lineno": 346,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn._loss.glm_distribution.NormalDistribution": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": [
    "sklearn._loss.glm_distribution.TweedieDistribution"
   ]
  },
  "type": "class"
 },
 "sklearn._loss.glm_distribution.NormalDistribution.__init__": {
  "data": {
   "lineno": 328,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn._loss.glm_distribution.PoissonDistribution": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": [
    "sklearn._loss.glm_distribution.TweedieDistribution"
   ]
  },
  "type": "class"
 },
 "sklearn._loss.glm_distribution.PoissonDistribution.__init__": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn._loss.glm_distribution.TweedieDistribution": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "sklearn._loss.glm_distribution.ExponentialDispersionModel"
   ]
  },
  "type": "class"
 },
 "sklearn._loss.glm_distribution.TweedieDistribution.__init__": {
  "data": {
   "lineno": 203
  },
  "type": "function"
 },
 "sklearn._loss.glm_distribution.TweedieDistribution.power": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "isinstance",
    "numpy.Inf",
    "sklearn._loss.glm_distribution.DistributionBoundary",
    "sklearn._loss.glm_distribution.numbers"
   ]
  },
  "type": "function"
 },
 "sklearn._loss.glm_distribution.TweedieDistribution.unit_deviance": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "ValueError",
    "numpy.log",
    "numpy.maximum",
    "numpy.power",
    "scipy.special.xlogy"
   ]
  },
  "type": "function"
 },
 "sklearn._loss.glm_distribution.TweedieDistribution.unit_variance": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "numpy.power"
   ]
  },
  "type": "function"
 },
 "sklearn._loss.glm_distribution.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "sklearn._loss.glm_distribution.namedtuple": {
  "data": {
   "shadows": "collections.namedtuple"
  },
  "type": "import"
 },
 "sklearn._loss.glm_distribution.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn._loss.glm_distribution.numbers": {
  "data": {
   "shadows": "numbers"
  },
  "type": "import"
 },
 "sklearn._loss.glm_distribution.xlogy": {
  "data": {
   "shadows": "scipy.special.xlogy"
  },
  "type": "import"
 },
 "sklearn._loss.tests": {
  "data": {},
  "type": "module"
 },
 "sklearn._loss.tests.test_glm_distribution": {
  "data": {},
  "type": "module"
 },
 "sklearn._loss.tests.test_glm_distribution.DistributionBoundary": {
  "data": {
   "shadows": "sklearn._loss.glm_distribution.DistributionBoundary"
  },
  "type": "import"
 },
 "sklearn._loss.tests.test_glm_distribution.GammaDistribution": {
  "data": {
   "shadows": "sklearn._loss.glm_distribution.GammaDistribution"
  },
  "type": "import"
 },
 "sklearn._loss.tests.test_glm_distribution.InverseGaussianDistribution": {
  "data": {
   "shadows": "sklearn._loss.glm_distribution.InverseGaussianDistribution"
  },
  "type": "import"
 },
 "sklearn._loss.tests.test_glm_distribution.NormalDistribution": {
  "data": {
   "shadows": "sklearn._loss.glm_distribution.NormalDistribution"
  },
  "type": "import"
 },
 "sklearn._loss.tests.test_glm_distribution.PoissonDistribution": {
  "data": {
   "shadows": "sklearn._loss.glm_distribution.PoissonDistribution"
  },
  "type": "import"
 },
 "sklearn._loss.tests.test_glm_distribution.TweedieDistribution": {
  "data": {
   "shadows": "sklearn._loss.glm_distribution.TweedieDistribution"
  },
  "type": "import"
 },
 "sklearn._loss.tests.test_glm_distribution.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "sklearn._loss.tests.test_glm_distribution.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn._loss.tests.test_glm_distribution.check_grad": {
  "data": {
   "shadows": "scipy.optimize.check_grad"
  },
  "type": "import"
 },
 "sklearn._loss.tests.test_glm_distribution.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn._loss.tests.test_glm_distribution.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn._loss.tests.test_glm_distribution.test_deviance_derivative": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "abs",
    "float",
    "isinstance",
    "numpy.abs",
    "numpy.fmax",
    "numpy.linalg.norm",
    "numpy.random.RandomState",
    "scipy.optimize.check_grad",
    "sklearn._loss.glm_distribution.GammaDistribution",
    "sklearn._loss.glm_distribution.InverseGaussianDistribution",
    "sklearn._loss.glm_distribution.NormalDistribution",
    "sklearn._loss.glm_distribution.PoissonDistribution",
    "sklearn._loss.glm_distribution.TweedieDistribution",
    "sklearn._loss.tests.test_glm_distribution.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn._loss.tests.test_glm_distribution.test_deviance_zero": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose",
    "sklearn._loss.glm_distribution.GammaDistribution",
    "sklearn._loss.glm_distribution.InverseGaussianDistribution",
    "sklearn._loss.glm_distribution.NormalDistribution",
    "sklearn._loss.glm_distribution.PoissonDistribution",
    "sklearn._loss.glm_distribution.TweedieDistribution",
    "sklearn._loss.tests.test_glm_distribution.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn._loss.tests.test_glm_distribution.test_family_bounds": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "numpy.testing.assert_array_equal",
    "sklearn._loss.glm_distribution.GammaDistribution",
    "sklearn._loss.glm_distribution.InverseGaussianDistribution",
    "sklearn._loss.glm_distribution.NormalDistribution",
    "sklearn._loss.glm_distribution.PoissonDistribution",
    "sklearn._loss.glm_distribution.TweedieDistribution",
    "sklearn._loss.tests.test_glm_distribution.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn._loss.tests.test_glm_distribution.test_invalid_distribution_bound": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "TypeError",
    "sklearn._loss.glm_distribution.TweedieDistribution",
    "sklearn._loss.tests.test_glm_distribution.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn._loss.tests.test_glm_distribution.test_tweedie_distribution_power": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "isinstance",
    "sklearn._loss.glm_distribution.DistributionBoundary",
    "sklearn._loss.glm_distribution.TweedieDistribution",
    "sklearn._loss.tests.test_glm_distribution.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn._min_dependencies": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "dict",
    "print",
    "sklearn._min_dependencies.CYTHON_MIN_VERSION",
    "sklearn._min_dependencies.JOBLIB_MIN_VERSION",
    "sklearn._min_dependencies.NUMPY_MIN_VERSION",
    "sklearn._min_dependencies.PYTEST_MIN_VERSION",
    "sklearn._min_dependencies.SCIPY_MIN_VERSION",
    "sklearn._min_dependencies.THREADPOOLCTL_MIN_VERSION",
    "sklearn._min_dependencies.argparse",
    "sklearn._min_dependencies.args",
    "sklearn._min_dependencies.dependent_packages",
    "sklearn._min_dependencies.min_version",
    "sklearn._min_dependencies.parser",
    "sklearn._min_dependencies.platform"
   ]
  },
  "type": "module"
 },
 "sklearn._min_dependencies.CYTHON_MIN_VERSION": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "sklearn._min_dependencies.JOBLIB_MIN_VERSION": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "sklearn._min_dependencies.NUMPY_MIN_VERSION": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "sklearn._min_dependencies.PYTEST_MIN_VERSION": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "sklearn._min_dependencies.SCIPY_MIN_VERSION": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "sklearn._min_dependencies.THREADPOOLCTL_MIN_VERSION": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "sklearn._min_dependencies.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "sklearn._min_dependencies.args": {
  "data": {
   "lineno": 63
  },
  "type": "constant"
 },
 "sklearn._min_dependencies.dependent_packages": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "sklearn._min_dependencies.min_version": {
  "data": {
   "lineno": 64
  },
  "type": "constant"
 },
 "sklearn._min_dependencies.parser": {
  "data": {
   "lineno": 59
  },
  "type": "constant"
 },
 "sklearn._min_dependencies.platform": {
  "data": {
   "shadows": "platform"
  },
  "type": "import"
 },
 "sklearn.base": {
  "data": {},
  "type": "module"
 },
 "sklearn.base.BaseEstimator": {
  "data": {
   "lineno": 141
  },
  "type": "class"
 },
 "sklearn.base.BaseEstimator.__getstate__": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": [
    "AttributeError",
    "dict",
    "super",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.base.BaseEstimator.__repr__": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "_EstimatorPrettyPrinter",
    "len",
    "sklearn.base.re"
   ]
  },
  "type": "function"
 },
 "sklearn.base.BaseEstimator.__setstate__": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": [
    "AttributeError",
    "UserWarning",
    "sklearn.base.warnings",
    "super",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.base.BaseEstimator._check_n_features": {
  "data": {
   "lineno": 335,
   "symbols_in_volume": [
    "ValueError",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "sklearn.base.BaseEstimator._get_param_names": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "RuntimeError",
    "classmethod",
    "getattr",
    "object.__init__",
    "sklearn.base.inspect",
    "sorted"
   ]
  },
  "type": "function"
 },
 "sklearn.base.BaseEstimator._get_tags": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": [
    "hasattr",
    "reversed",
    "sklearn.base.inspect"
   ]
  },
  "type": "function"
 },
 "sklearn.base.BaseEstimator._more_tags": {
  "data": {
   "lineno": 321
  },
  "type": "function"
 },
 "sklearn.base.BaseEstimator._repr_html_": {
  "data": {
   "lineno": 441,
   "symbols_in_volume": [
    "AttributeError",
    "get_config",
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.base.BaseEstimator._repr_html_inner": {
  "data": {
   "lineno": 455,
   "symbols_in_volume": [
    "estimator_html_repr"
   ]
  },
  "type": "function"
 },
 "sklearn.base.BaseEstimator._repr_mimebundle_": {
  "data": {
   "lineno": 462,
   "symbols_in_volume": [
    "estimator_html_repr",
    "get_config",
    "repr"
   ]
  },
  "type": "function"
 },
 "sklearn.base.BaseEstimator._validate_data": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": [
    "ValueError",
    "check_X_y",
    "check_array",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.base.BaseEstimator.get_params": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "dict",
    "getattr",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "sklearn.base.BaseEstimator.set_params": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "ValueError",
    "collections.defaultdict",
    "dict",
    "setattr"
   ]
  },
  "type": "function"
 },
 "sklearn.base.BiclusterMixin": {
  "data": {
   "lineno": 590
  },
  "type": "class"
 },
 "sklearn.base.BiclusterMixin.biclusters_": {
  "data": {
   "lineno": 593,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.base.BiclusterMixin.get_indices": {
  "data": {
   "lineno": 601,
   "symbols_in_volume": [
    "numpy.nonzero"
   ]
  },
  "type": "function"
 },
 "sklearn.base.BiclusterMixin.get_shape": {
  "data": {
   "lineno": 623,
   "symbols_in_volume": [
    "len",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sklearn.base.BiclusterMixin.get_submatrix": {
  "data": {
   "lineno": 642,
   "symbols_in_volume": [
    "check_array",
    "numpy.newaxis"
   ]
  },
  "type": "function"
 },
 "sklearn.base.ClassifierMixin": {
  "data": {
   "lineno": 470
  },
  "type": "class"
 },
 "sklearn.base.ClassifierMixin._more_tags": {
  "data": {
   "lineno": 502
  },
  "type": "function"
 },
 "sklearn.base.ClassifierMixin.score": {
  "data": {
   "lineno": 475,
   "symbols_in_volume": [
    "accuracy_score"
   ]
  },
  "type": "function"
 },
 "sklearn.base.ClusterMixin": {
  "data": {
   "lineno": 560
  },
  "type": "class"
 },
 "sklearn.base.ClusterMixin._more_tags": {
  "data": {
   "lineno": 586
  },
  "type": "function"
 },
 "sklearn.base.ClusterMixin.fit_predict": {
  "data": {
   "lineno": 564
  },
  "type": "function"
 },
 "sklearn.base.DensityMixin": {
  "data": {
   "lineno": 705
  },
  "type": "class"
 },
 "sklearn.base.DensityMixin.score": {
  "data": {
   "lineno": 709
  },
  "type": "function"
 },
 "sklearn.base.MetaEstimatorMixin": {
  "data": {
   "lineno": 753
  },
  "type": "class"
 },
 "sklearn.base.MultiOutputMixin": {
  "data": {
   "lineno": 758
  },
  "type": "class"
 },
 "sklearn.base.MultiOutputMixin._more_tags": {
  "data": {
   "lineno": 760
  },
  "type": "function"
 },
 "sklearn.base.OutlierMixin": {
  "data": {
   "lineno": 727
  },
  "type": "class"
 },
 "sklearn.base.OutlierMixin.fit_predict": {
  "data": {
   "lineno": 731
  },
  "type": "function"
 },
 "sklearn.base.RegressorMixin": {
  "data": {
   "lineno": 506
  },
  "type": "class"
 },
 "sklearn.base.RegressorMixin._more_tags": {
  "data": {
   "lineno": 556
  },
  "type": "function"
 },
 "sklearn.base.RegressorMixin.score": {
  "data": {
   "lineno": 510,
   "symbols_in_volume": [
    "r2_score"
   ]
  },
  "type": "function"
 },
 "sklearn.base.TransformerMixin": {
  "data": {
   "lineno": 668
  },
  "type": "class"
 },
 "sklearn.base.TransformerMixin.fit_transform": {
  "data": {
   "lineno": 671
  },
  "type": "function"
 },
 "sklearn.base._UnstableArchMixin": {
  "data": {
   "lineno": 764
  },
  "type": "class"
 },
 "sklearn.base._UnstableArchMixin._more_tags": {
  "data": {
   "lineno": 766,
   "symbols_in_volume": [
    "sklearn.base.platform"
   ]
  },
  "type": "function"
 },
 "sklearn.base._is_pairwise": {
  "data": {
   "lineno": 819,
   "symbols_in_volume": [
    "FutureWarning",
    "_safe_tags",
    "getattr",
    "hasattr",
    "sklearn.base.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.base._pprint": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "enumerate",
    "float",
    "len",
    "list",
    "numpy.get_printoptions",
    "numpy.set_printoptions",
    "printer",
    "repr",
    "sorted",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.base.clone": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "RuntimeError",
    "TypeError",
    "estimator_type",
    "frozenset",
    "hasattr",
    "isinstance",
    "klass",
    "list",
    "repr",
    "set",
    "sklearn.base.copy",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.base.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "sklearn.base.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "sklearn.base.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "sklearn.base.is_classifier": {
  "data": {
   "lineno": 771,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "sklearn.base.is_outlier_detector": {
  "data": {
   "lineno": 803,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "sklearn.base.is_regressor": {
  "data": {
   "lineno": 787,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "sklearn.base.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.base.platform": {
  "data": {
   "shadows": "platform"
  },
  "type": "import"
 },
 "sklearn.base.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "sklearn.base.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.cluster": {
  "data": {},
  "type": "module"
 },
 "sklearn.cluster.__all__": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "sklearn.cluster._affinity_propagation": {
  "data": {},
  "type": "module"
 },
 "sklearn.cluster._affinity_propagation.AffinityPropagation": {
  "data": {
   "lineno": 259
  },
  "type": "class"
 },
 "sklearn.cluster._affinity_propagation.AffinityPropagation.__init__": {
  "data": {
   "lineno": 365
  },
  "type": "function"
 },
 "sklearn.cluster._affinity_propagation.AffinityPropagation._more_tags": {
  "data": {
   "lineno": 387
  },
  "type": "function"
 },
 "sklearn.cluster._affinity_propagation.AffinityPropagation._pairwise": {
  "data": {
   "lineno": 381,
   "symbols_in_volume": [
    "deprecated",
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster._affinity_propagation.AffinityPropagation.fit": {
  "data": {
   "lineno": 390,
   "symbols_in_volume": [
    "ValueError",
    "euclidean_distances",
    "sklearn.cluster._affinity_propagation.affinity_propagation",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster._affinity_propagation.AffinityPropagation.fit_predict": {
  "data": {
   "lineno": 465,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster._affinity_propagation.AffinityPropagation.predict": {
  "data": {
   "lineno": 436,
   "symbols_in_volume": [
    "ValueError",
    "check_is_fitted",
    "config_context",
    "hasattr",
    "numpy.array",
    "pairwise_distances_argmin",
    "sklearn.cluster._affinity_propagation.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster._affinity_propagation._equal_similarities_and_preferences": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "all_equal_preferences",
    "all_equal_similarities"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster._affinity_propagation._equal_similarities_and_preferences.all_equal_preferences": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster._affinity_propagation._equal_similarities_and_preferences.all_equal_similarities": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "bool",
    "numpy.all",
    "numpy.fill_diagonal",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster._affinity_propagation.affinity_propagation": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "FutureWarning",
    "ValueError",
    "as_float_array",
    "check_random_state",
    "numpy.add",
    "numpy.arange",
    "numpy.argmax",
    "numpy.array",
    "numpy.diag",
    "numpy.finfo",
    "numpy.flatnonzero",
    "numpy.inf",
    "numpy.max",
    "numpy.maximum",
    "numpy.median",
    "numpy.newaxis",
    "numpy.searchsorted",
    "numpy.subtract",
    "numpy.sum",
    "numpy.unique",
    "numpy.where",
    "numpy.zeros",
    "print",
    "range",
    "repr",
    "sklearn.cluster._affinity_propagation._equal_similarities_and_preferences",
    "sklearn.cluster._affinity_propagation.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster._affinity_propagation.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.cluster._affinity_propagation.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.cluster._agglomerative": {
  "data": {
   "symbols_in_volume": [
    "dict",
    "sklearn.cluster._agglomerative._average_linkage",
    "sklearn.cluster._agglomerative._complete_linkage",
    "sklearn.cluster._agglomerative._single_linkage",
    "sklearn.cluster._agglomerative.ward_tree"
   ]
  },
  "type": "module"
 },
 "sklearn.cluster._agglomerative.AgglomerativeClustering": {
  "data": {
   "lineno": 681
  },
  "type": "class"
 },
 "sklearn.cluster._agglomerative.AgglomerativeClustering.__init__": {
  "data": {
   "lineno": 803,
   "symbols_in_volume": [
    "affinity"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster._agglomerative.AgglomerativeClustering.fit": {
  "data": {
   "lineno": 818,
   "symbols_in_volume": [
    "ValueError",
    "callable",
    "check_array",
    "check_memory",
    "len",
    "max",
    "numpy.copy",
    "numpy.count_nonzero",
    "numpy.searchsorted",
    "numpy.unique",
    "sklearn.cluster._agglomerative._TREE_BUILDERS",
    "sklearn.cluster._agglomerative._hc_cut",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster._agglomerative.AgglomerativeClustering.fit_predict": {
  "data": {
   "lineno": 927,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster._agglomerative.FeatureAgglomeration": {
  "data": {
   "lineno": 949,
   "symbols_in_volume": [
    "sklearn.cluster._agglomerative.AgglomerativeClustering"
   ]
  },
  "type": "class"
 },
 "sklearn.cluster._agglomerative.FeatureAgglomeration.__init__": {
  "data": {
   "lineno": 1071,
   "symbols_in_volume": [
    "affinity",
    "numpy.mean",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster._agglomerative.FeatureAgglomeration.fit": {
  "data": {
   "lineno": 1084,
   "symbols_in_volume": [
    "sklearn.cluster._agglomerative.AgglomerativeClustering"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster._agglomerative.FeatureAgglomeration.fit_predict": {
  "data": {
   "lineno": 1107,
   "symbols_in_volume": [
    "AttributeError",
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster._agglomerative._TREE_BUILDERS": {
  "data": {
   "lineno": 622
  },
  "type": "constant"
 },
 "sklearn.cluster._agglomerative._average_linkage": {
  "data": {
   "lineno": 612,
   "symbols_in_volume": [
    "sklearn.cluster._agglomerative.linkage_tree"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster._agglomerative._complete_linkage": {
  "data": {
   "lineno": 607,
   "symbols_in_volume": [
    "sklearn.cluster._agglomerative.linkage_tree"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster._agglomerative._fix_connectivity": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "ValueError",
    "numpy.min",
    "numpy.where",
    "pairwise_distances",
    "range",
    "scipy.sparse.csgraph.connected_components",
    "scipy.sparse.isspmatrix",
    "scipy.sparse.isspmatrix_lil",
    "scipy.sparse.lil_matrix",
    "sklearn.cluster._agglomerative.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster._agglomerative._hc_cut": {
  "data": {
   "lineno": 632,
   "symbols_in_volume": [
    "ValueError",
    "enumerate",
    "heapq.heappush",
    "heapq.heappushpop",
    "max",
    "numpy.intp",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster._agglomerative._hierarchical": {
  "data": {
   "shadows": "_hierarchical_fast"
  },
  "type": "import"
 },
 "sklearn.cluster._agglomerative._single_linkage": {
  "data": {
   "lineno": 617,
   "symbols_in_volume": [
    "sklearn.cluster._agglomerative.linkage_tree"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster._agglomerative._single_linkage_tree": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "_astype_copy_false",
    "enumerate",
    "int",
    "numpy.arange",
    "numpy.argsort",
    "numpy.finfo",
    "numpy.intp",
    "numpy.vstack",
    "scipy.sparse.csgraph.minimum_spanning_tree"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster._agglomerative.connected_components": {
  "data": {
   "shadows": "scipy.sparse.csgraph.connected_components"
  },
  "type": "import"
 },
 "sklearn.cluster._agglomerative.heapify": {
  "data": {
   "shadows": "heapq.heapify"
  },
  "type": "import"
 },
 "sklearn.cluster._agglomerative.heappop": {
  "data": {
   "shadows": "heapq.heappop"
  },
  "type": "import"
 },
 "sklearn.cluster._agglomerative.heappush": {
  "data": {
   "shadows": "heapq.heappush"
  },
  "type": "import"
 },
 "sklearn.cluster._agglomerative.heappushpop": {
  "data": {
   "shadows": "heapq.heappushpop"
  },
  "type": "import"
 },
 "sklearn.cluster._agglomerative.hierarchy": {
  "data": {
   "shadows": "scipy.cluster.hierarchy"
  },
  "type": "import"
 },
 "sklearn.cluster._agglomerative.linkage_tree": {
  "data": {
   "lineno": 346,
   "symbols_in_volume": [
    "IntFloatDict",
    "KeyError",
    "ValueError",
    "_astype_copy_false",
    "affinity",
    "callable",
    "enumerate",
    "heapq.heapify",
    "heapq.heappop",
    "heapq.heappush",
    "int",
    "join_func",
    "list",
    "numpy.any",
    "numpy.arange",
    "numpy.argsort",
    "numpy.array",
    "numpy.asarray",
    "numpy.ascontiguousarray",
    "numpy.double",
    "numpy.empty",
    "numpy.float64",
    "numpy.intp",
    "numpy.ones",
    "numpy.reshape",
    "numpy.triu_indices",
    "object",
    "paired_distances",
    "range",
    "scipy.cluster.hierarchy.linkage",
    "sklearn.cluster._agglomerative._fix_connectivity",
    "sklearn.cluster._agglomerative._single_linkage_tree",
    "sklearn.cluster._agglomerative.warnings",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster._agglomerative.minimum_spanning_tree": {
  "data": {
   "shadows": "scipy.sparse.csgraph.minimum_spanning_tree"
  },
  "type": "import"
 },
 "sklearn.cluster._agglomerative.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.cluster._agglomerative.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.cluster._agglomerative.ward_tree": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "enumerate",
    "heapq.heapify",
    "heapq.heappop",
    "heapq.heappush",
    "len",
    "list",
    "numpy.arange",
    "numpy.array",
    "numpy.asarray",
    "numpy.empty",
    "numpy.float64",
    "numpy.int8",
    "numpy.intp",
    "numpy.ones",
    "numpy.require",
    "numpy.reshape",
    "numpy.sqrt",
    "numpy.zeros",
    "range",
    "scipy.cluster.hierarchy.ward",
    "sklearn.cluster._agglomerative._fix_connectivity",
    "sklearn.cluster._agglomerative.warnings",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster._agglomerative.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.cluster._bicluster": {
  "data": {},
  "type": "module"
 },
 "sklearn.cluster._bicluster.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "sklearn.cluster._bicluster.BaseSpectral": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "abc.ABCMeta"
   ]
  },
  "type": "class"
 },
 "sklearn.cluster._bicluster.BaseSpectral.__init__": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster._bicluster.BaseSpectral._check_parameters": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster._bicluster.BaseSpectral._k_means": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "KMeans",
    "MiniBatchKMeans"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster._bicluster.BaseSpectral._svd": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "assert_all_finite",
    "check_random_state",
    "numpy.any",
    "numpy.isnan",
    "randomized_svd",
    "safe_sparse_dot",
    "scipy.sparse.linalg.eigsh",
    "scipy.sparse.linalg.svds"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster._bicluster.BaseSpectral.fit": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "FutureWarning",
    "numpy.float64",
    "sklearn.cluster._bicluster.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster._bicluster.SpectralBiclustering": {
  "data": {
   "lineno": 319,
   "symbols_in_volume": [
    "sklearn.cluster._bicluster.BaseSpectral"
   ]
  },
  "type": "class"
 },
 "sklearn.cluster._bicluster.SpectralBiclustering.__init__": {
  "data": {
   "lineno": 439,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster._bicluster.SpectralBiclustering._check_parameters": {
  "data": {
   "lineno": 456,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "int",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster._bicluster.SpectralBiclustering._fit": {
  "data": {
   "lineno": 485,
   "symbols_in_volume": [
    "TypeError",
    "numpy.vstack",
    "range",
    "sklearn.cluster._bicluster._bistochastic_normalize",
    "sklearn.cluster._bicluster._log_normalize",
    "sklearn.cluster._bicluster._scale_normalize"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster._bicluster.SpectralBiclustering._fit_best_piecewise": {
  "data": {
   "lineno": 524,
   "symbols_in_volume": [
    "numpy.apply_along_axis",
    "numpy.argsort",
    "scipy.linalg.norm"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster._bicluster.SpectralBiclustering._fit_best_piecewise.make_piecewise": {
  "data": {
   "lineno": 532
  },
  "type": "function"
 },
 "sklearn.cluster._bicluster.SpectralBiclustering._project_and_cluster": {
  "data": {
   "lineno": 542,
   "symbols_in_volume": [
    "safe_sparse_dot"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster._bicluster.SpectralCoclustering": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "sklearn.cluster._bicluster.BaseSpectral"
   ]
  },
  "type": "class"
 },
 "sklearn.cluster._bicluster.SpectralCoclustering.__init__": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster._bicluster.SpectralCoclustering._fit": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "int",
    "numpy.ceil",
    "numpy.log2",
    "numpy.newaxis",
    "numpy.vstack",
    "range",
    "sklearn.cluster._bicluster._scale_normalize"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster._bicluster.__all__": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "sklearn.cluster._bicluster._bistochastic_normalize": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "make_nonnegative",
    "range",
    "scipy.linalg.norm",
    "scipy.sparse.issparse",
    "sklearn.cluster._bicluster._scale_normalize"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster._bicluster._log_normalize": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "ValueError",
    "make_nonnegative",
    "numpy.log",
    "numpy.newaxis",
    "scipy.sparse.issparse"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster._bicluster._scale_normalize": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "make_nonnegative",
    "numpy.asarray",
    "numpy.isnan",
    "numpy.newaxis",
    "numpy.sqrt",
    "numpy.where",
    "scipy.sparse.dia_matrix",
    "scipy.sparse.issparse"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster._bicluster.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "sklearn.cluster._bicluster.dia_matrix": {
  "data": {
   "shadows": "scipy.sparse.dia_matrix"
  },
  "type": "import"
 },
 "sklearn.cluster._bicluster.eigsh": {
  "data": {
   "shadows": "scipy.sparse.linalg.eigsh"
  },
  "type": "import"
 },
 "sklearn.cluster._bicluster.issparse": {
  "data": {
   "shadows": "scipy.sparse.issparse"
  },
  "type": "import"
 },
 "sklearn.cluster._bicluster.norm": {
  "data": {
   "shadows": "scipy.linalg.norm"
  },
  "type": "import"
 },
 "sklearn.cluster._bicluster.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.cluster._bicluster.svds": {
  "data": {
   "shadows": "scipy.sparse.linalg.svds"
  },
  "type": "import"
 },
 "sklearn.cluster._bicluster.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.cluster._birch": {
  "data": {},
  "type": "module"
 },
 "sklearn.cluster._birch.Birch": {
  "data": {
   "lineno": 326
  },
  "type": "class"
 },
 "sklearn.cluster._birch.Birch.__init__": {
  "data": {
   "lineno": 434
  },
  "type": "function"
 },
 "sklearn.cluster._birch.Birch._check_fit": {
  "data": {
   "lineno": 563,
   "symbols_in_volume": [
    "ValueError",
    "check_is_fitted",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster._birch.Birch._fit": {
  "data": {
   "lineno": 463,
   "symbols_in_volume": [
    "ValueError",
    "getattr",
    "iter",
    "iter_func",
    "numpy.concatenate",
    "scipy.sparse.issparse",
    "sklearn.cluster._birch._CFNode",
    "sklearn.cluster._birch._CFSubcluster",
    "sklearn.cluster._birch._iterate_sparse_X",
    "sklearn.cluster._birch._split_node"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster._birch.Birch._get_leaves": {
  "data": {
   "lineno": 520
  },
  "type": "function"
 },
 "sklearn.cluster._birch.Birch._global_clustering": {
  "data": {
   "lineno": 619,
   "symbols_in_volume": [
    "AgglomerativeClustering",
    "ValueError",
    "hasattr",
    "isinstance",
    "len",
    "numpy.arange",
    "row_norms",
    "sklearn.cluster._birch.numbers",
    "sklearn.cluster._birch.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster._birch.Birch.fit": {
  "data": {
   "lineno": 443
  },
  "type": "function"
 },
 "sklearn.cluster._birch.Birch.partial_fit": {
  "data": {
   "lineno": 536
  },
  "type": "function"
 },
 "sklearn.cluster._birch.Birch.predict": {
  "data": {
   "lineno": 572,
   "symbols_in_volume": [
    "check_is_fitted",
    "config_context",
    "pairwise_distances_argmin"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster._birch.Birch.transform": {
  "data": {
   "lineno": 597,
   "symbols_in_volume": [
    "check_is_fitted",
    "config_context",
    "euclidean_distances"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster._birch._CFNode": {
  "data": {
   "lineno": 92
  },
  "type": "class"
 },
 "sklearn.cluster._birch._CFNode.__init__": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster._birch._CFNode.append_subcluster": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster._birch._CFNode.insert_cf_subcluster": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "len",
    "numpy.argmin",
    "numpy.dot",
    "sklearn.cluster._birch._split_node"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster._birch._CFNode.update_split_subclusters": {
  "data": {
   "lineno": 166
  },
  "type": "function"
 },
 "sklearn.cluster._birch._CFSubcluster": {
  "data": {
   "lineno": 245
  },
  "type": "class"
 },
 "sklearn.cluster._birch._CFSubcluster.__init__": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "numpy.dot"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster._birch._CFSubcluster.merge_subcluster": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": [
    "numpy.dot"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster._birch._CFSubcluster.radius": {
  "data": {
   "lineno": 317,
   "symbols_in_volume": [
    "math.sqrt",
    "numpy.dot",
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster._birch._CFSubcluster.update": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": [
    "numpy.dot"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster._birch._iterate_sparse_X": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster._birch._split_node": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "enumerate",
    "euclidean_distances",
    "numpy.unravel_index",
    "sklearn.cluster._birch._CFNode",
    "sklearn.cluster._birch._CFSubcluster"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster._birch.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.cluster._birch.numbers": {
  "data": {
   "shadows": "numbers"
  },
  "type": "import"
 },
 "sklearn.cluster._birch.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.cluster._birch.sqrt": {
  "data": {
   "shadows": "math.sqrt"
  },
  "type": "import"
 },
 "sklearn.cluster._birch.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.cluster._dbscan": {
  "data": {},
  "type": "module"
 },
 "sklearn.cluster._dbscan.DBSCAN": {
  "data": {
   "lineno": 148
  },
  "type": "class"
 },
 "sklearn.cluster._dbscan.DBSCAN.__init__": {
  "data": {
   "lineno": 272
  },
  "type": "function"
 },
 "sklearn.cluster._dbscan.DBSCAN.fit": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "NearestNeighbors",
    "ValueError",
    "_check_sample_weight",
    "dbscan_inner",
    "len",
    "numpy.array",
    "numpy.asarray",
    "numpy.empty",
    "numpy.full",
    "numpy.intp",
    "numpy.sum",
    "numpy.uint8",
    "numpy.where",
    "scipy.sparse.SparseEfficiencyWarning",
    "scipy.sparse.issparse",
    "sklearn.cluster._dbscan.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster._dbscan.DBSCAN.fit_predict": {
  "data": {
   "lineno": 363
  },
  "type": "function"
 },
 "sklearn.cluster._dbscan.dbscan": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "sklearn.cluster._dbscan.DBSCAN"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster._dbscan.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.cluster._dbscan.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.cluster._dbscan.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.cluster._feature_agglomeration": {
  "data": {},
  "type": "module"
 },
 "sklearn.cluster._feature_agglomeration.AgglomerationTransform": {
  "data": {
   "lineno": 18
  },
  "type": "class"
 },
 "sklearn.cluster._feature_agglomeration.AgglomerationTransform.inverse_transform": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "check_is_fitted",
    "numpy.unique"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster._feature_agglomeration.AgglomerationTransform.transform": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "check_is_fitted",
    "numpy.array",
    "numpy.bincount",
    "numpy.mean",
    "numpy.unique",
    "range",
    "scipy.sparse.issparse"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster._feature_agglomeration.issparse": {
  "data": {
   "shadows": "scipy.sparse.issparse"
  },
  "type": "import"
 },
 "sklearn.cluster._feature_agglomeration.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.cluster._kmeans": {
  "data": {},
  "type": "module"
 },
 "sklearn.cluster._kmeans.KMeans": {
  "data": {
   "lineno": 604
  },
  "type": "class"
 },
 "sklearn.cluster._kmeans.KMeans.__init__": {
  "data": {
   "lineno": 765
  },
  "type": "function"
 },
 "sklearn.cluster._kmeans.KMeans._check_mkl_vcomp": {
  "data": {
   "lineno": 863,
   "symbols_in_volume": [
    "hasattr",
    "int",
    "numpy.ceil",
    "scipy.sparse.issparse",
    "sklearn.cluster._kmeans.warnings",
    "threadpoolctl.threadpool_info"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster._kmeans.KMeans._check_params": {
  "data": {
   "lineno": 783,
   "symbols_in_volume": [
    "FutureWarning",
    "RuntimeWarning",
    "ValueError",
    "_openmp_effective_n_threads",
    "callable",
    "hasattr",
    "isinstance",
    "sklearn.cluster._kmeans._tolerance",
    "sklearn.cluster._kmeans.warnings",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster._kmeans.KMeans._check_test_data": {
  "data": {
   "lineno": 857,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.float64"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster._kmeans.KMeans._init_centroids": {
  "data": {
   "lineno": 895,
   "symbols_in_volume": [
    "callable",
    "check_array",
    "hasattr",
    "init",
    "isinstance",
    "scipy.sparse.issparse",
    "sklearn.cluster._kmeans._kmeans_plusplus",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster._kmeans.KMeans._more_tags": {
  "data": {
   "lineno": 1192
  },
  "type": "function"
 },
 "sklearn.cluster._kmeans.KMeans._transform": {
  "data": {
   "lineno": 1129,
   "symbols_in_volume": [
    "euclidean_distances"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster._kmeans.KMeans._validate_center_shape": {
  "data": {
   "lineno": 846,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster._kmeans.KMeans.fit": {
  "data": {
   "lineno": 953,
   "symbols_in_volume": [
    "_check_sample_weight",
    "check_array",
    "check_random_state",
    "hasattr",
    "init",
    "kmeans_single",
    "len",
    "numpy.float32",
    "numpy.float64",
    "print",
    "range",
    "row_norms",
    "scipy.sparse.issparse",
    "set",
    "sklearn.cluster._kmeans._kmeans_single_elkan",
    "sklearn.cluster._kmeans._kmeans_single_lloyd",
    "sklearn.cluster._kmeans.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster._kmeans.KMeans.fit_predict": {
  "data": {
   "lineno": 1054
  },
  "type": "function"
 },
 "sklearn.cluster._kmeans.KMeans.fit_transform": {
  "data": {
   "lineno": 1079
  },
  "type": "function"
 },
 "sklearn.cluster._kmeans.KMeans.predict": {
  "data": {
   "lineno": 1133,
   "symbols_in_volume": [
    "_check_sample_weight",
    "check_is_fitted",
    "row_norms",
    "sklearn.cluster._kmeans._labels_inertia"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster._kmeans.KMeans.score": {
  "data": {
   "lineno": 1163,
   "symbols_in_volume": [
    "_check_sample_weight",
    "check_is_fitted",
    "row_norms",
    "sklearn.cluster._kmeans._labels_inertia"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster._kmeans.KMeans.transform": {
  "data": {
   "lineno": 1107,
   "symbols_in_volume": [
    "check_is_fitted"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster._kmeans.MiniBatchKMeans": {
  "data": {
   "lineno": 1406,
   "symbols_in_volume": [
    "sklearn.cluster._kmeans.KMeans"
   ]
  },
  "type": "class"
 },
 "sklearn.cluster._kmeans.MiniBatchKMeans.__init__": {
  "data": {
   "lineno": 1565,
   "symbols_in_volume": [
    "init",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster._kmeans.MiniBatchKMeans._check_params": {
  "data": {
   "lineno": 1599,
   "symbols_in_volume": [
    "RuntimeWarning",
    "ValueError",
    "min",
    "sklearn.cluster._kmeans.warnings",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster._kmeans.MiniBatchKMeans._labels_inertia_minibatch": {
  "data": {
   "lineno": 1783,
   "symbols_in_volume": [
    "_check_sample_weight",
    "gen_batches",
    "numpy.hstack",
    "numpy.sum",
    "print",
    "row_norms",
    "sklearn.cluster._kmeans._labels_inertia",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster._kmeans.MiniBatchKMeans._more_tags": {
  "data": {
   "lineno": 1919
  },
  "type": "function"
 },
 "sklearn.cluster._kmeans.MiniBatchKMeans.counts_": {
  "data": {
   "lineno": 1581,
   "symbols_in_volume": [
    "deprecated",
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster._kmeans.MiniBatchKMeans.fit": {
  "data": {
   "lineno": 1637,
   "symbols_in_volume": [
    "_check_sample_weight",
    "check_array",
    "check_random_state",
    "float",
    "hasattr",
    "init",
    "int",
    "numpy.ceil",
    "numpy.float32",
    "numpy.float64",
    "numpy.zeros",
    "print",
    "range",
    "row_norms",
    "sklearn.cluster._kmeans._labels_inertia",
    "sklearn.cluster._kmeans._mini_batch_convergence",
    "sklearn.cluster._kmeans._mini_batch_step",
    "sklearn.cluster._kmeans._tolerance"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster._kmeans.MiniBatchKMeans.init_size_": {
  "data": {
   "lineno": 1587,
   "symbols_in_volume": [
    "deprecated",
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster._kmeans.MiniBatchKMeans.partial_fit": {
  "data": {
   "lineno": 1815,
   "symbols_in_volume": [
    "_check_sample_weight",
    "check_array",
    "check_random_state",
    "getattr",
    "hasattr",
    "init",
    "numpy.float32",
    "numpy.float64",
    "numpy.zeros",
    "row_norms",
    "sklearn.cluster._kmeans._labels_inertia",
    "sklearn.cluster._kmeans._mini_batch_step"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster._kmeans.MiniBatchKMeans.predict": {
  "data": {
   "lineno": 1893,
   "symbols_in_volume": [
    "check_is_fitted"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster._kmeans.MiniBatchKMeans.random_state_": {
  "data": {
   "lineno": 1593,
   "symbols_in_volume": [
    "deprecated",
    "getattr",
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster._kmeans._kmeans_plusplus": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "euclidean_distances",
    "int",
    "numpy.argmin",
    "numpy.clip",
    "numpy.empty",
    "numpy.full",
    "numpy.log",
    "numpy.minimum",
    "numpy.newaxis",
    "numpy.searchsorted",
    "range",
    "scipy.sparse.issparse",
    "stable_cumsum"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster._kmeans._kmeans_single_elkan": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "_inertia",
    "elkan_iter",
    "euclidean_distances",
    "init_bounds",
    "numpy.array_equal",
    "numpy.asarray",
    "numpy.full",
    "numpy.int32",
    "numpy.partition",
    "numpy.zeros",
    "numpy.zeros_like",
    "print",
    "range",
    "scipy.sparse.issparse"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster._kmeans._kmeans_single_lloyd": {
  "data": {
   "lineno": 431,
   "symbols_in_volume": [
    "_inertia",
    "lloyd_iter",
    "numpy.array_equal",
    "numpy.full",
    "numpy.int32",
    "numpy.zeros",
    "numpy.zeros_like",
    "print",
    "range",
    "scipy.sparse.issparse",
    "threadpoolctl.threadpool_limits"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster._kmeans._labels_inertia": {
  "data": {
   "lineno": 544,
   "symbols_in_volume": [
    "_inertia",
    "_labels",
    "_openmp_effective_n_threads",
    "numpy.full",
    "numpy.int32",
    "numpy.zeros",
    "numpy.zeros_like",
    "scipy.sparse.issparse"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster._kmeans._mini_batch_convergence": {
  "data": {
   "lineno": 1340,
   "symbols_in_volume": [
    "float",
    "print"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster._kmeans._mini_batch_step": {
  "data": {
   "lineno": 1201,
   "symbols_in_volume": [
    "_mini_batch_update_csr",
    "assign_rows_csr",
    "check_random_state",
    "int",
    "numpy.argsort",
    "numpy.dot",
    "numpy.intp",
    "numpy.min",
    "numpy.newaxis",
    "numpy.sum",
    "numpy.where",
    "print",
    "range",
    "scipy.sparse.issparse",
    "sklearn.cluster._kmeans._labels_inertia"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster._kmeans._tolerance": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "mean_variance_axis",
    "numpy.mean",
    "numpy.var",
    "scipy.sparse.issparse"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster._kmeans.k_means": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "sklearn.cluster._kmeans.KMeans"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster._kmeans.kmeans_plusplus": {
  "data": {
   "lineno": 1928,
   "symbols_in_volume": [
    "ValueError",
    "check_array",
    "check_random_state",
    "numpy.float32",
    "numpy.float64",
    "row_norms",
    "sklearn.cluster._kmeans._kmeans_plusplus"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster._kmeans.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.cluster._kmeans.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.cluster._kmeans.threadpool_info": {
  "data": {
   "shadows": "threadpoolctl.threadpool_info"
  },
  "type": "import"
 },
 "sklearn.cluster._kmeans.threadpool_limits": {
  "data": {
   "shadows": "threadpoolctl.threadpool_limits"
  },
  "type": "import"
 },
 "sklearn.cluster._kmeans.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.cluster._mean_shift": {
  "data": {},
  "type": "module"
 },
 "sklearn.cluster._mean_shift.MeanShift": {
  "data": {
   "lineno": 243
  },
  "type": "class"
 },
 "sklearn.cluster._mean_shift.MeanShift.__init__": {
  "data": {
   "lineno": 355
  },
  "type": "function"
 },
 "sklearn.cluster._mean_shift.MeanShift.fit": {
  "data": {
   "lineno": 366,
   "symbols_in_volume": [
    "NearestNeighbors",
    "ValueError",
    "bool",
    "delayed",
    "enumerate",
    "int",
    "joblib.Parallel",
    "len",
    "max",
    "numpy.array",
    "numpy.ones",
    "numpy.zeros",
    "range",
    "sklearn.cluster._mean_shift._mean_shift_single_seed",
    "sklearn.cluster._mean_shift.estimate_bandwidth",
    "sklearn.cluster._mean_shift.get_bin_seeds",
    "sorted"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster._mean_shift.MeanShift.predict": {
  "data": {
   "lineno": 452,
   "symbols_in_volume": [
    "check_is_fitted",
    "config_context",
    "pairwise_distances_argmin"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster._mean_shift.Parallel": {
  "data": {
   "shadows": "joblib.Parallel"
  },
  "type": "import"
 },
 "sklearn.cluster._mean_shift._mean_shift_single_seed": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "len",
    "numpy.linalg.norm",
    "numpy.mean",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster._mean_shift.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "sklearn.cluster._mean_shift.estimate_bandwidth": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "NearestNeighbors",
    "check_array",
    "check_random_state",
    "gen_batches",
    "int",
    "len",
    "numpy.max"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster._mean_shift.get_bin_seeds": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "collections.defaultdict",
    "int",
    "len",
    "numpy.array",
    "numpy.float32",
    "numpy.round",
    "sklearn.cluster._mean_shift.warnings",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster._mean_shift.mean_shift": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "sklearn.cluster._mean_shift.MeanShift"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster._mean_shift.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.cluster._mean_shift.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.cluster._optics": {
  "data": {},
  "type": "module"
 },
 "sklearn.cluster._optics.OPTICS": {
  "data": {
   "lineno": 24
  },
  "type": "class"
 },
 "sklearn.cluster._optics.OPTICS.__init__": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "numpy.inf"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster._optics.OPTICS.fit": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "sklearn.cluster._optics.cluster_optics_dbscan",
    "sklearn.cluster._optics.cluster_optics_xi",
    "sklearn.cluster._optics.compute_optics_graph"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster._optics._compute_core_distances_": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "gen_batches",
    "get_chunk_n_rows",
    "numpy.empty",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster._optics._correct_predecessor": {
  "data": {
   "lineno": 725,
   "symbols_in_volume": [
    "range"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster._optics._extend_region": {
  "data": {
   "lineno": 649,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster._optics._extract_xi_labels": {
  "data": {
   "lineno": 901,
   "symbols_in_volume": [
    "int",
    "len",
    "numpy.any",
    "numpy.full"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster._optics._set_reach_dist": {
  "data": {
   "lineno": 506,
   "symbols_in_volume": [
    "dict",
    "numpy.compress",
    "numpy.maximum",
    "numpy.take",
    "numpy.where",
    "pairwise_distances"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster._optics._update_filter_sdas": {
  "data": {
   "lineno": 712,
   "symbols_in_volume": [
    "max",
    "numpy.isinf"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster._optics._validate_size": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "ValueError",
    "int"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster._optics._xi_cluster": {
  "data": {
   "lineno": 747,
   "symbols_in_volume": [
    "iter",
    "max",
    "numpy.array",
    "numpy.errstate",
    "numpy.flatnonzero",
    "numpy.hstack",
    "numpy.inf",
    "numpy.max",
    "sklearn.cluster._optics._correct_predecessor",
    "sklearn.cluster._optics._extend_region",
    "sklearn.cluster._optics._update_filter_sdas"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster._optics.cluster_optics_dbscan": {
  "data": {
   "lineno": 541,
   "symbols_in_volume": [
    "int",
    "len",
    "numpy.cumsum",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster._optics.cluster_optics_xi": {
  "data": {
   "lineno": 581,
   "symbols_in_volume": [
    "int",
    "len",
    "max",
    "sklearn.cluster._optics._extract_xi_labels",
    "sklearn.cluster._optics._validate_size",
    "sklearn.cluster._optics._xi_cluster"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster._optics.compute_optics_graph": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": [
    "NearestNeighbors",
    "UserWarning",
    "bool",
    "int",
    "max",
    "numpy.all",
    "numpy.argmin",
    "numpy.empty",
    "numpy.inf",
    "numpy.isinf",
    "numpy.where",
    "numpy.zeros",
    "range",
    "sklearn.cluster._optics._compute_core_distances_",
    "sklearn.cluster._optics._set_reach_dist",
    "sklearn.cluster._optics._validate_size",
    "sklearn.cluster._optics.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster._optics.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.cluster._optics.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.cluster._spectral": {
  "data": {},
  "type": "module"
 },
 "sklearn.cluster._spectral.LinAlgError": {
  "data": {
   "shadows": "scipy.linalg.LinAlgError"
  },
  "type": "import"
 },
 "sklearn.cluster._spectral.SpectralClustering": {
  "data": {
   "lineno": 287
  },
  "type": "class"
 },
 "sklearn.cluster._spectral.SpectralClustering.__init__": {
  "data": {
   "lineno": 456
  },
  "type": "function"
 },
 "sklearn.cluster._spectral.SpectralClustering._more_tags": {
  "data": {
   "lineno": 570
  },
  "type": "function"
 },
 "sklearn.cluster._spectral.SpectralClustering._pairwise": {
  "data": {
   "lineno": 576,
   "symbols_in_volume": [
    "deprecated",
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster._spectral.SpectralClustering.fit": {
  "data": {
   "lineno": 478,
   "symbols_in_volume": [
    "NearestNeighbors",
    "callable",
    "check_random_state",
    "kneighbors_graph",
    "numpy.float64",
    "pairwise_kernels",
    "sklearn.cluster._spectral.spectral_clustering",
    "sklearn.cluster._spectral.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster._spectral.SpectralClustering.fit_predict": {
  "data": {
   "lineno": 546,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster._spectral.csc_matrix": {
  "data": {
   "shadows": "scipy.sparse.csc_matrix"
  },
  "type": "import"
 },
 "sklearn.cluster._spectral.discretize": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "abs",
    "as_float_array",
    "check_random_state",
    "float",
    "len",
    "numpy.abs",
    "numpy.arange",
    "numpy.dot",
    "numpy.finfo",
    "numpy.linalg.norm",
    "numpy.linalg.svd",
    "numpy.newaxis",
    "numpy.ones",
    "numpy.sign",
    "numpy.sqrt",
    "numpy.zeros",
    "print",
    "range",
    "scipy.linalg.LinAlgError",
    "scipy.sparse.csc_matrix"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster._spectral.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.cluster._spectral.spectral_clustering": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "ValueError",
    "check_random_state",
    "k_means",
    "print",
    "sklearn.cluster._spectral.discretize",
    "spectral_embedding"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster._spectral.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.cluster.setup": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.distutils.core.setup",
    "sklearn.cluster.setup.configuration"
   ]
  },
  "type": "module"
 },
 "sklearn.cluster.setup.Configuration": {
  "data": {
   "shadows": "numpy.distutils.misc_util.Configuration"
  },
  "type": "import"
 },
 "sklearn.cluster.setup.configuration": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "numpy.distutils.misc_util.Configuration",
    "sklearn.cluster.setup.numpy",
    "sklearn.cluster.setup.os"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.setup.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.cluster.setup.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "sklearn.cluster.setup.setup": {
  "data": {
   "shadows": "numpy.distutils.core.setup"
  },
  "type": "import"
 },
 "sklearn.cluster.tests": {
  "data": {},
  "type": "module"
 },
 "sklearn.cluster.tests.common": {
  "data": {},
  "type": "module"
 },
 "sklearn.cluster.tests.common.generate_clustered_data": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.empty",
    "numpy.r_",
    "numpy.random.RandomState",
    "range"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.common.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_affinity_propagation": {
  "data": {
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.cluster.tests.test_affinity_propagation.centers",
    "sklearn.datasets.make_blobs"
   ]
  },
  "type": "module"
 },
 "sklearn.cluster.tests.test_affinity_propagation.AffinityPropagation": {
  "data": {
   "shadows": "sklearn.cluster.AffinityPropagation"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_affinity_propagation.ConvergenceWarning": {
  "data": {
   "shadows": "sklearn.exceptions.ConvergenceWarning"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_affinity_propagation._equal_similarities_and_preferences": {
  "data": {
   "shadows": "sklearn.cluster._affinity_propagation._equal_similarities_and_preferences"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_affinity_propagation.affinity_propagation": {
  "data": {
   "shadows": "sklearn.cluster.affinity_propagation"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_affinity_propagation.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_affinity_propagation.assert_no_warnings": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_no_warnings"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_affinity_propagation.assert_warns": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_warns"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_affinity_propagation.assert_warns_message": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_warns_message"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_affinity_propagation.centers": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "sklearn.cluster.tests.test_affinity_propagation.csr_matrix": {
  "data": {
   "shadows": "scipy.sparse.csr_matrix"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_affinity_propagation.euclidean_distances": {
  "data": {
   "shadows": "sklearn.metrics.euclidean_distances"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_affinity_propagation.make_blobs": {
  "data": {
   "shadows": "sklearn.datasets.make_blobs"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_affinity_propagation.n_clusters": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "sklearn.cluster.tests.test_affinity_propagation.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_affinity_propagation.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_affinity_propagation.test_affinity_propagation": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "len",
    "numpy.median",
    "numpy.unique",
    "scipy.sparse.csr_matrix",
    "sklearn.cluster.AffinityPropagation",
    "sklearn.cluster.affinity_propagation",
    "sklearn.cluster.tests.test_affinity_propagation.n_clusters",
    "sklearn.cluster.tests.test_affinity_propagation.pytest",
    "sklearn.metrics.euclidean_distances",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_affinity_propagation.test_affinity_propagation_convergence_warning_dense_sparse": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "int",
    "len",
    "numpy.random.RandomState",
    "numpy.zeros",
    "scipy.sparse.csr_matrix",
    "sklearn.cluster.AffinityPropagation",
    "sklearn.cluster.tests.test_affinity_propagation.centers",
    "sklearn.cluster.tests.test_affinity_propagation.pytest",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_affinity_propagation.test_affinity_propagation_equal_mutual_similarities": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "UserWarning",
    "numpy.array",
    "sklearn.cluster.affinity_propagation",
    "sklearn.metrics.euclidean_distances",
    "sklearn.utils._testing.assert_array_equal",
    "sklearn.utils._testing.assert_no_warnings",
    "sklearn.utils._testing.assert_warns_message"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_affinity_propagation.test_affinity_propagation_fit_non_convergence": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.empty",
    "sklearn.cluster.AffinityPropagation",
    "sklearn.exceptions.ConvergenceWarning",
    "sklearn.utils._testing.assert_array_equal",
    "sklearn.utils._testing.assert_warns"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_affinity_propagation.test_affinity_propagation_float32": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.cluster.AffinityPropagation",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_affinity_propagation.test_affinity_propagation_non_convergence_regressiontest": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.cluster.AffinityPropagation",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_affinity_propagation.test_affinity_propagation_pairwise_is_deprecated": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "FutureWarning",
    "sklearn.cluster.AffinityPropagation",
    "sklearn.cluster.tests.test_affinity_propagation.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_affinity_propagation.test_affinity_propagation_predict": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "sklearn.cluster.AffinityPropagation",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_affinity_propagation.test_affinity_propagation_predict_error": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "ValueError",
    "numpy.dot",
    "sklearn.cluster.AffinityPropagation",
    "sklearn.cluster.tests.test_affinity_propagation.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_affinity_propagation.test_affinity_propagation_predict_non_convergence": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.cluster.AffinityPropagation",
    "sklearn.exceptions.ConvergenceWarning",
    "sklearn.utils._testing.assert_array_equal",
    "sklearn.utils._testing.assert_warns"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_affinity_propagation.test_affinity_propagation_random_state": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "numpy.mean",
    "sklearn.cluster.AffinityPropagation",
    "sklearn.cluster.tests.test_affinity_propagation.centers",
    "sklearn.datasets.make_blobs"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_affinity_propagation.test_affinity_propagation_random_state_warning": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "FutureWarning",
    "numpy.array",
    "sklearn.cluster.AffinityPropagation",
    "sklearn.cluster.tests.test_affinity_propagation.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_affinity_propagation.test_equal_similarities_and_preferences": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.cluster._affinity_propagation._equal_similarities_and_preferences",
    "sklearn.metrics.euclidean_distances"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_bicluster": {
  "data": {},
  "type": "module"
 },
 "sklearn.cluster.tests.test_bicluster.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_bicluster.BiclusterMixin": {
  "data": {
   "shadows": "sklearn.base.BiclusterMixin"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_bicluster.MockBiclustering": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator",
    "sklearn.base.BiclusterMixin"
   ]
  },
  "type": "class"
 },
 "sklearn.cluster.tests.test_bicluster.MockBiclustering.__init__": {
  "data": {
   "lineno": 28
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_bicluster.MockBiclustering.get_indices": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_bicluster.ParameterGrid": {
  "data": {
   "shadows": "sklearn.model_selection.ParameterGrid"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_bicluster.SpectralBiclustering": {
  "data": {
   "shadows": "sklearn.cluster.SpectralBiclustering"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_bicluster.SpectralCoclustering": {
  "data": {
   "shadows": "sklearn.cluster.SpectralCoclustering"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_bicluster._bistochastic_normalize": {
  "data": {
   "shadows": "sklearn.cluster._bicluster._bistochastic_normalize"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_bicluster._do_bistochastic_test": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "sklearn.cluster.tests.test_bicluster._do_scale_test",
    "sklearn.utils._testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_bicluster._do_scale_test": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.tile",
    "scipy.sparse.issparse",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_bicluster._log_normalize": {
  "data": {
   "shadows": "sklearn.cluster._bicluster._log_normalize"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_bicluster._scale_normalize": {
  "data": {
   "shadows": "sklearn.cluster._bicluster._scale_normalize"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_bicluster._test_shape_indices": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_bicluster.assert_almost_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_almost_equal"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_bicluster.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_bicluster.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_bicluster.consensus_score": {
  "data": {
   "shadows": "sklearn.metrics.consensus_score"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_bicluster.csr_matrix": {
  "data": {
   "shadows": "scipy.sparse.csr_matrix"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_bicluster.issparse": {
  "data": {
   "shadows": "scipy.sparse.issparse"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_bicluster.make_biclusters": {
  "data": {
   "shadows": "sklearn.datasets.make_biclusters"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_bicluster.make_checkerboard": {
  "data": {
   "shadows": "sklearn.datasets.make_checkerboard"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_bicluster.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_bicluster.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_bicluster.test_bistochastic_normalize": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.issparse",
    "sklearn.cluster._bicluster._bistochastic_normalize",
    "sklearn.cluster.tests.test_bicluster._do_bistochastic_test"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_bicluster.test_errors": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "ValueError",
    "numpy.arange",
    "sklearn.cluster.SpectralBiclustering",
    "sklearn.cluster.tests.test_bicluster.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_bicluster.test_fit_best_piecewise": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.cluster.SpectralBiclustering",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_bicluster.test_get_submatrix": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.arange",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.issparse",
    "sklearn.cluster.tests.test_bicluster.MockBiclustering",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_bicluster.test_log_normalize": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.cluster._bicluster._log_normalize",
    "sklearn.cluster.tests.test_bicluster._do_bistochastic_test"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_bicluster.test_n_features_in_": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "hasattr",
    "sklearn.cluster.SpectralBiclustering",
    "sklearn.cluster.SpectralCoclustering",
    "sklearn.cluster.tests.test_bicluster.pytest",
    "sklearn.datasets.make_biclusters"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_bicluster.test_n_jobs_deprecated": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "FutureWarning",
    "klass",
    "sklearn.cluster.SpectralBiclustering",
    "sklearn.cluster.SpectralCoclustering",
    "sklearn.cluster.tests.test_bicluster.pytest",
    "sklearn.datasets.make_biclusters"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_bicluster.test_perfect_checkerboard": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "sklearn.cluster.SpectralBiclustering",
    "sklearn.datasets.make_checkerboard",
    "sklearn.metrics.consensus_score"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_bicluster.test_project_and_cluster": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "numpy.array",
    "scipy.sparse.csr_matrix",
    "sklearn.cluster.SpectralBiclustering",
    "sklearn.metrics.v_measure_score",
    "sklearn.utils._testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_bicluster.test_scale_normalize": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.issparse",
    "sklearn.cluster._bicluster._scale_normalize",
    "sklearn.cluster.tests.test_bicluster._do_scale_test"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_bicluster.test_spectral_biclustering": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "numpy.repeat",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.issparse",
    "sklearn.cluster.SpectralBiclustering",
    "sklearn.cluster.tests.test_bicluster._test_shape_indices",
    "sklearn.cluster.tests.test_bicluster.pytest",
    "sklearn.datasets.make_checkerboard",
    "sklearn.metrics.consensus_score",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_bicluster.test_spectral_coclustering": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "numpy.ones",
    "numpy.where",
    "scipy.sparse.csr_matrix",
    "sklearn.cluster.SpectralCoclustering",
    "sklearn.cluster.tests.test_bicluster._test_shape_indices",
    "sklearn.datasets.make_biclusters",
    "sklearn.metrics.consensus_score",
    "sklearn.model_selection.ParameterGrid",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_bicluster.test_wrong_shape": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "ValueError",
    "numpy.arange",
    "sklearn.cluster.SpectralBiclustering",
    "sklearn.cluster.tests.test_bicluster.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_bicluster.v_measure_score": {
  "data": {
   "shadows": "sklearn.metrics.v_measure_score"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_birch": {
  "data": {},
  "type": "module"
 },
 "sklearn.cluster.tests.test_birch.AgglomerativeClustering": {
  "data": {
   "shadows": "sklearn.cluster.AgglomerativeClustering"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_birch.Birch": {
  "data": {
   "shadows": "sklearn.cluster.Birch"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_birch.ConvergenceWarning": {
  "data": {
   "shadows": "sklearn.exceptions.ConvergenceWarning"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_birch.ElasticNet": {
  "data": {
   "shadows": "sklearn.linear_model.ElasticNet"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_birch.assert_almost_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_almost_equal"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_birch.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_birch.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_birch.assert_warns": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_warns"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_birch.check_branching_factor": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_birch.check_threshold": {
  "data": {
   "lineno": 154
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_birch.generate_clustered_data": {
  "data": {
   "shadows": "sklearn.cluster.tests.common.generate_clustered_data"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_birch.make_blobs": {
  "data": {
   "shadows": "sklearn.datasets.make_blobs"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_birch.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_birch.pairwise_distances_argmin": {
  "data": {
   "shadows": "sklearn.metrics.pairwise_distances_argmin"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_birch.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_birch.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_birch.test_birch_n_clusters_long_int": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "numpy.int64",
    "sklearn.cluster.Birch",
    "sklearn.datasets.make_blobs"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_birch.test_birch_predict": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.random.RandomState",
    "sklearn.cluster.Birch",
    "sklearn.cluster.tests.common.generate_clustered_data",
    "sklearn.metrics.pairwise_distances_argmin",
    "sklearn.metrics.v_measure_score",
    "sklearn.utils._testing.assert_almost_equal",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_birch.test_branching_factor": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.cluster.Birch",
    "sklearn.cluster.tests.test_birch.check_branching_factor",
    "sklearn.cluster.tests.test_birch.pytest",
    "sklearn.datasets.make_blobs"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_birch.test_n_clusters": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.unique",
    "sklearn.cluster.AgglomerativeClustering",
    "sklearn.cluster.Birch",
    "sklearn.cluster.tests.test_birch.pytest",
    "sklearn.datasets.make_blobs",
    "sklearn.exceptions.ConvergenceWarning",
    "sklearn.linear_model.ElasticNet",
    "sklearn.utils._testing.assert_array_equal",
    "sklearn.utils._testing.assert_warns"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_birch.test_n_samples_leaves_roots": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "sklearn.cluster.Birch",
    "sklearn.datasets.make_blobs",
    "sum"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_birch.test_partial_fit": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "sklearn.cluster.Birch",
    "sklearn.datasets.make_blobs",
    "sklearn.utils._testing.assert_array_almost_equal",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_birch.test_partial_fit_second_call_error_checks": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.cluster.Birch",
    "sklearn.cluster.tests.test_birch.pytest",
    "sklearn.datasets.make_blobs"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_birch.test_sparse_X": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "scipy.sparse.csr_matrix",
    "sklearn.cluster.Birch",
    "sklearn.datasets.make_blobs",
    "sklearn.utils._testing.assert_array_almost_equal",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_birch.test_threshold": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "sklearn.cluster.Birch",
    "sklearn.cluster.tests.test_birch.check_threshold",
    "sklearn.datasets.make_blobs"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_birch.v_measure_score": {
  "data": {
   "shadows": "sklearn.metrics.v_measure_score"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_dbscan": {
  "data": {
   "symbols_in_volume": [
    "sklearn.cluster.tests.common.generate_clustered_data",
    "sklearn.cluster.tests.test_dbscan.n_clusters"
   ]
  },
  "type": "module"
 },
 "sklearn.cluster.tests.test_dbscan.DBSCAN": {
  "data": {
   "shadows": "sklearn.cluster.DBSCAN"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_dbscan.NearestNeighbors": {
  "data": {
   "shadows": "sklearn.neighbors.NearestNeighbors"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_dbscan.X": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "sklearn.cluster.tests.test_dbscan.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_dbscan.dbscan": {
  "data": {
   "shadows": "sklearn.cluster.dbscan"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_dbscan.distance": {
  "data": {
   "shadows": "scipy.spatial.distance"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_dbscan.generate_clustered_data": {
  "data": {
   "shadows": "sklearn.cluster.tests.common.generate_clustered_data"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_dbscan.n_clusters": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "sklearn.cluster.tests.test_dbscan.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_dbscan.pairwise_distances": {
  "data": {
   "shadows": "sklearn.metrics.pairwise.pairwise_distances"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_dbscan.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_dbscan.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_dbscan.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_dbscan.test_boundaries": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "sklearn.cluster.dbscan"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_dbscan.test_dbscan_badargs": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.cluster.dbscan",
    "sklearn.cluster.tests.test_dbscan.X",
    "sklearn.cluster.tests.test_dbscan.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_dbscan.test_dbscan_balltree": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "int",
    "len",
    "set",
    "sklearn.cluster.DBSCAN",
    "sklearn.cluster.dbscan",
    "sklearn.cluster.tests.test_dbscan.X",
    "sklearn.cluster.tests.test_dbscan.n_clusters",
    "sklearn.metrics.pairwise.pairwise_distances"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_dbscan.test_dbscan_callable": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "int",
    "len",
    "scipy.spatial.distance.euclidean",
    "set",
    "sklearn.cluster.DBSCAN",
    "sklearn.cluster.dbscan",
    "sklearn.cluster.tests.test_dbscan.X",
    "sklearn.cluster.tests.test_dbscan.n_clusters"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_dbscan.test_dbscan_core_samples_toy": {
  "data": {
   "lineno": 355,
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "numpy.full",
    "sklearn.cluster.dbscan",
    "sklearn.cluster.tests.test_dbscan.X",
    "sklearn.cluster.tests.test_dbscan.pytest",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_dbscan.test_dbscan_feature": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "int",
    "len",
    "set",
    "sklearn.cluster.DBSCAN",
    "sklearn.cluster.dbscan",
    "sklearn.cluster.tests.test_dbscan.X",
    "sklearn.cluster.tests.test_dbscan.n_clusters"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_dbscan.test_dbscan_input_not_modified": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "scipy.sparse.csr_matrix",
    "sklearn.cluster.dbscan",
    "sklearn.cluster.tests.test_dbscan.X",
    "sklearn.cluster.tests.test_dbscan.pytest",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_dbscan.test_dbscan_metric_params": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "SyntaxWarning",
    "sklearn.cluster.DBSCAN",
    "sklearn.cluster.tests.test_dbscan.X",
    "sklearn.cluster.tests.test_dbscan.pytest",
    "sklearn.cluster.tests.test_dbscan.warnings",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_dbscan.test_dbscan_no_core_samples": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "numpy.empty",
    "numpy.random.RandomState",
    "scipy.sparse.csr_matrix",
    "sklearn.cluster.DBSCAN",
    "sklearn.cluster.tests.test_dbscan.X",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_dbscan.test_dbscan_precomputed_metric_with_degenerate_input_arrays": {
  "data": {
   "lineno": 389,
   "symbols_in_volume": [
    "len",
    "numpy.eye",
    "numpy.zeros",
    "set",
    "sklearn.cluster.DBSCAN",
    "sklearn.cluster.tests.test_dbscan.X"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_dbscan.test_dbscan_precomputed_metric_with_initial_rows_zero": {
  "data": {
   "lineno": 401,
   "symbols_in_volume": [
    "numpy.array",
    "scipy.sparse.csr_matrix",
    "sklearn.cluster.DBSCAN",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_dbscan.test_dbscan_similarity": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "int",
    "len",
    "numpy.max",
    "scipy.spatial.distance.pdist",
    "scipy.spatial.distance.squareform",
    "set",
    "sklearn.cluster.DBSCAN",
    "sklearn.cluster.dbscan",
    "sklearn.cluster.tests.test_dbscan.X",
    "sklearn.cluster.tests.test_dbscan.n_clusters"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_dbscan.test_dbscan_sparse": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "scipy.sparse.lil_matrix",
    "sklearn.cluster.dbscan",
    "sklearn.cluster.tests.test_dbscan.X",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_dbscan.test_dbscan_sparse_precomputed": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "sklearn.cluster.dbscan",
    "sklearn.cluster.tests.test_dbscan.X",
    "sklearn.cluster.tests.test_dbscan.pytest",
    "sklearn.metrics.pairwise.pairwise_distances",
    "sklearn.neighbors.NearestNeighbors",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_dbscan.test_dbscan_sparse_precomputed_different_eps": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "sklearn.cluster.dbscan",
    "sklearn.cluster.tests.test_dbscan.X",
    "sklearn.neighbors.NearestNeighbors",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_dbscan.test_input_validation": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "sklearn.cluster.DBSCAN",
    "sklearn.cluster.tests.test_dbscan.X"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_dbscan.test_pickle": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "sklearn.cluster.DBSCAN",
    "sklearn.cluster.tests.test_dbscan.pickle",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_dbscan.test_weighted_dbscan": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "len",
    "numpy.random.RandomState",
    "numpy.repeat",
    "numpy.zeros",
    "sklearn.cluster.DBSCAN",
    "sklearn.cluster.dbscan",
    "sklearn.cluster.tests.test_dbscan.X",
    "sklearn.cluster.tests.test_dbscan.pytest",
    "sklearn.metrics.pairwise.pairwise_distances",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_dbscan.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_feature_agglomeration": {
  "data": {},
  "type": "module"
 },
 "sklearn.cluster.tests.test_feature_agglomeration.FeatureAgglomeration": {
  "data": {
   "shadows": "sklearn.cluster.FeatureAgglomeration"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_feature_agglomeration.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_feature_agglomeration.assert_no_warnings": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_no_warnings"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_feature_agglomeration.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_feature_agglomeration.test_feature_agglomeration": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.mean",
    "numpy.median",
    "numpy.size",
    "numpy.unique",
    "sklearn.cluster.FeatureAgglomeration",
    "sklearn.utils._testing.assert_array_almost_equal",
    "sklearn.utils._testing.assert_no_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_hierarchical": {
  "data": {},
  "type": "module"
 },
 "sklearn.cluster.tests.test_hierarchical.AgglomerativeClustering": {
  "data": {
   "shadows": "sklearn.cluster.AgglomerativeClustering"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_hierarchical.FeatureAgglomeration": {
  "data": {
   "shadows": "sklearn.cluster.FeatureAgglomeration"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_hierarchical.IntFloatDict": {
  "data": {
   "shadows": "sklearn.utils._fast_dict.IntFloatDict"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_hierarchical.PAIRED_DISTANCES": {
  "data": {
   "shadows": "sklearn.metrics.pairwise.PAIRED_DISTANCES"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_hierarchical._TREE_BUILDERS": {
  "data": {
   "shadows": "sklearn.cluster._agglomerative._TREE_BUILDERS"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_hierarchical._fix_connectivity": {
  "data": {
   "shadows": "sklearn.cluster._agglomerative._fix_connectivity"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_hierarchical._hc_cut": {
  "data": {
   "shadows": "sklearn.cluster._agglomerative._hc_cut"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_hierarchical.adjusted_rand_score": {
  "data": {
   "shadows": "sklearn.metrics.cluster.adjusted_rand_score"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_hierarchical.assert_almost_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_almost_equal"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_hierarchical.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_hierarchical.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_hierarchical.assert_raise_message": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_raise_message"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_hierarchical.assert_warns": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_warns"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_hierarchical.assess_same_labelling": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "numpy.dot",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_hierarchical.average_merge": {
  "data": {
   "shadows": "sklearn.cluster._hierarchical_fast.average_merge"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_hierarchical.cosine_distances": {
  "data": {
   "shadows": "sklearn.metrics.pairwise.cosine_distances"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_hierarchical.grid_to_graph": {
  "data": {
   "shadows": "sklearn.feature_extraction.image.grid_to_graph"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_hierarchical.hierarchy": {
  "data": {
   "shadows": "scipy.cluster.hierarchy"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_hierarchical.ignore_warnings": {
  "data": {
   "shadows": "sklearn.utils._testing.ignore_warnings"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_hierarchical.kneighbors_graph": {
  "data": {
   "shadows": "sklearn.neighbors.kneighbors_graph"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_hierarchical.linkage_tree": {
  "data": {
   "shadows": "sklearn.cluster._agglomerative.linkage_tree"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_hierarchical.make_circles": {
  "data": {
   "shadows": "sklearn.datasets.make_circles"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_hierarchical.make_moons": {
  "data": {
   "shadows": "sklearn.datasets.make_moons"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_hierarchical.manhattan_distances": {
  "data": {
   "shadows": "sklearn.metrics.pairwise.manhattan_distances"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_hierarchical.max_merge": {
  "data": {
   "shadows": "sklearn.cluster._hierarchical_fast.max_merge"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_hierarchical.mkdtemp": {
  "data": {
   "shadows": "tempfile.mkdtemp"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_hierarchical.normalized_mutual_info_score": {
  "data": {
   "shadows": "sklearn.metrics.cluster.normalized_mutual_info_score"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_hierarchical.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_hierarchical.pairwise_distances": {
  "data": {
   "shadows": "sklearn.metrics.pairwise.pairwise_distances"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_hierarchical.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_hierarchical.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_hierarchical.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_hierarchical.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_hierarchical.test_affinity_passed_to_fix_connectivity": {
  "data": {
   "lineno": 649,
   "symbols_in_volume": [
    "FakeAffinity",
    "numpy.array",
    "numpy.ndarray",
    "numpy.random.RandomState",
    "sklearn.cluster._agglomerative.linkage_tree",
    "sklearn.feature_extraction.image.grid_to_graph"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_hierarchical.test_affinity_passed_to_fix_connectivity.FakeAffinity": {
  "data": {
   "lineno": 661
  },
  "type": "class"
 },
 "sklearn.cluster.tests.test_hierarchical.test_affinity_passed_to_fix_connectivity.FakeAffinity.__init__": {
  "data": {
   "lineno": 662
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_hierarchical.test_affinity_passed_to_fix_connectivity.FakeAffinity.increment": {
  "data": {
   "lineno": 665
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_hierarchical.test_agg_n_clusters": {
  "data": {
   "lineno": 637,
   "symbols_in_volume": [
    "ValueError",
    "numpy.random.RandomState",
    "sklearn.cluster.AgglomerativeClustering",
    "sklearn.utils._testing.assert_raise_message",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_hierarchical.test_agglomerative_clustering": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "numpy.ones",
    "numpy.random.RandomState",
    "numpy.size",
    "numpy.unique",
    "scipy.sparse.lil_matrix",
    "sklearn.cluster.AgglomerativeClustering",
    "sklearn.cluster.tests.test_hierarchical.pytest",
    "sklearn.cluster.tests.test_hierarchical.shutil",
    "sklearn.feature_extraction.image.grid_to_graph",
    "sklearn.metrics.cluster.normalized_mutual_info_score",
    "sklearn.metrics.pairwise.PAIRED_DISTANCES.keys",
    "sklearn.metrics.pairwise.pairwise_distances",
    "sklearn.utils._testing.assert_almost_equal",
    "sklearn.utils._testing.assert_array_equal",
    "tempfile.mkdtemp"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_hierarchical.test_agglomerative_clustering_distances": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "bool",
    "hasattr",
    "numpy.ones",
    "numpy.random.RandomState",
    "sklearn.cluster.AgglomerativeClustering",
    "sklearn.cluster.tests.test_hierarchical.pytest",
    "sklearn.feature_extraction.image.grid_to_graph"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_hierarchical.test_agglomerative_clustering_with_distance_threshold": {
  "data": {
   "lineno": 676,
   "symbols_in_volume": [
    "bool",
    "len",
    "numpy.array_equiv",
    "numpy.count_nonzero",
    "numpy.ones",
    "numpy.random.RandomState",
    "numpy.unique",
    "sklearn.cluster.AgglomerativeClustering",
    "sklearn.cluster._agglomerative._TREE_BUILDERS",
    "sklearn.cluster._agglomerative._hc_cut",
    "sklearn.cluster.tests.test_hierarchical.pytest",
    "sklearn.feature_extraction.image.grid_to_graph",
    "tree_builder"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_hierarchical.test_agglomerative_clustering_with_distance_threshold_edge_case": {
  "data": {
   "lineno": 757,
   "symbols_in_volume": [
    "sklearn.cluster.AgglomerativeClustering",
    "sklearn.cluster.tests.test_hierarchical.pytest",
    "sklearn.metrics.cluster.adjusted_rand_score"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_hierarchical.test_agglomerative_clustering_wrong_arg_memory": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "ValueError",
    "numpy.random.RandomState",
    "sklearn.cluster.AgglomerativeClustering",
    "sklearn.cluster.tests.test_hierarchical.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_hierarchical.test_cluster_distances_with_distance_threshold": {
  "data": {
   "lineno": 731,
   "symbols_in_volume": [
    "numpy.fill_diagonal",
    "numpy.inf",
    "numpy.random.RandomState",
    "numpy.unique",
    "sklearn.cluster.AgglomerativeClustering",
    "sklearn.metrics.pairwise.pairwise_distances"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_hierarchical.test_compute_full_tree": {
  "data": {
   "lineno": 598,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.cluster.AgglomerativeClustering",
    "sklearn.neighbors.kneighbors_graph"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_hierarchical.test_connectivity_callable": {
  "data": {
   "lineno": 573,
   "symbols_in_volume": [
    "functools.partial",
    "numpy.random.RandomState",
    "sklearn.cluster.AgglomerativeClustering",
    "sklearn.neighbors.kneighbors_graph",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_hierarchical.test_connectivity_fixing_non_lil": {
  "data": {
   "lineno": 544,
   "symbols_in_volume": [
    "UserWarning",
    "numpy.array",
    "sklearn.cluster.AgglomerativeClustering",
    "sklearn.feature_extraction.image.grid_to_graph",
    "sklearn.utils._testing.assert_warns"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_hierarchical.test_connectivity_ignores_diagonal": {
  "data": {
   "lineno": 586,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.cluster.AgglomerativeClustering",
    "sklearn.neighbors.kneighbors_graph",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_hierarchical.test_connectivity_propagation": {
  "data": {
   "lineno": 401,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.cluster.AgglomerativeClustering",
    "sklearn.neighbors.kneighbors_graph"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_hierarchical.test_dist_threshold_invalid_parameters": {
  "data": {
   "lineno": 772,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.cluster.AgglomerativeClustering",
    "sklearn.cluster.tests.test_hierarchical.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_hierarchical.test_height_linkage_tree": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "bool",
    "len",
    "linkage_func",
    "numpy.ones",
    "numpy.random.RandomState",
    "sklearn.cluster._agglomerative._TREE_BUILDERS.values",
    "sklearn.feature_extraction.image.grid_to_graph"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_hierarchical.test_identical_points": {
  "data": {
   "lineno": 378,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.cluster.AgglomerativeClustering",
    "sklearn.cluster._agglomerative._fix_connectivity",
    "sklearn.metrics.cluster.normalized_mutual_info_score",
    "sklearn.neighbors.kneighbors_graph",
    "sklearn.utils._testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_hierarchical.test_int_float_dict": {
  "data": {
   "lineno": 556,
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "numpy.full",
    "numpy.intp",
    "numpy.ones",
    "numpy.random.RandomState",
    "numpy.unique",
    "sklearn.cluster._hierarchical_fast.average_merge",
    "sklearn.cluster._hierarchical_fast.max_merge",
    "sklearn.utils._fast_dict.IntFloatDict",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_hierarchical.test_invalid_shape_precomputed_dist_matrix": {
  "data": {
   "lineno": 789,
   "symbols_in_volume": [
    "ValueError",
    "numpy.random.RandomState",
    "sklearn.cluster.AgglomerativeClustering",
    "sklearn.cluster.tests.test_hierarchical.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_hierarchical.test_linkage_misc": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "ValueError",
    "numpy.ones",
    "numpy.random.RandomState",
    "sklearn.cluster.AgglomerativeClustering",
    "sklearn.cluster.FeatureAgglomeration",
    "sklearn.cluster._agglomerative.linkage_tree",
    "sklearn.cluster.tests.test_hierarchical.pytest",
    "sklearn.metrics.pairwise.cosine_distances",
    "sklearn.metrics.pairwise.manhattan_distances",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_hierarchical.test_n_components": {
  "data": {
   "lineno": 625,
   "symbols_in_volume": [
    "linkage_func",
    "numpy.eye",
    "numpy.random.RandomState",
    "sklearn.cluster._agglomerative._TREE_BUILDERS.values",
    "sklearn.utils._testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_hierarchical.test_single_linkage_clustering": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "sklearn.cluster.AgglomerativeClustering",
    "sklearn.datasets.make_circles",
    "sklearn.datasets.make_moons",
    "sklearn.metrics.cluster.normalized_mutual_info_score",
    "sklearn.utils._testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_hierarchical.test_small_distance_threshold": {
  "data": {
   "lineno": 713,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.fill_diagonal",
    "numpy.inf",
    "numpy.random.RandomState",
    "sklearn.cluster.AgglomerativeClustering",
    "sklearn.metrics.pairwise.pairwise_distances"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_hierarchical.test_sparse_scikit_vs_scipy": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "numpy.arange",
    "numpy.newaxis",
    "numpy.ones",
    "numpy.random.RandomState",
    "range",
    "scipy.cluster.hierarchy.linkage",
    "sklearn.cluster._agglomerative._TREE_BUILDERS",
    "sklearn.cluster._agglomerative._TREE_BUILDERS.keys",
    "sklearn.cluster._agglomerative._hc_cut",
    "sklearn.cluster.tests.test_hierarchical.assess_same_labelling",
    "sklearn.cluster.tests.test_hierarchical.pytest",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_hierarchical.test_structured_linkage_tree": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "len",
    "numpy.ones",
    "numpy.random.RandomState",
    "sklearn.cluster._agglomerative._TREE_BUILDERS.values",
    "sklearn.cluster.tests.test_hierarchical.pytest",
    "sklearn.feature_extraction.image.grid_to_graph",
    "tree_builder"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_hierarchical.test_unstructured_linkage_tree": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "UserWarning",
    "len",
    "numpy.random.RandomState",
    "sklearn.cluster._agglomerative._TREE_BUILDERS.values",
    "sklearn.cluster.ward_tree",
    "sklearn.utils._testing.assert_warns",
    "sklearn.utils._testing.ignore_warnings",
    "tree_builder"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_hierarchical.test_vector_scikit_single_vs_scipy_single": {
  "data": {
   "lineno": 353,
   "symbols_in_volume": [
    "int",
    "numpy.arange",
    "numpy.newaxis",
    "numpy.random.RandomState",
    "range",
    "scipy.cluster.hierarchy.linkage",
    "sklearn.cluster._agglomerative._TREE_BUILDERS",
    "sklearn.cluster._agglomerative._hc_cut",
    "sklearn.cluster.tests.test_hierarchical.assess_same_labelling",
    "sklearn.cluster.tests.test_hierarchical.pytest",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_hierarchical.test_ward_agglomeration": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "numpy.ones",
    "numpy.random.RandomState",
    "numpy.size",
    "numpy.unique",
    "sklearn.cluster.FeatureAgglomeration",
    "sklearn.cluster.tests.test_hierarchical.pytest",
    "sklearn.feature_extraction.image.grid_to_graph",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_hierarchical.test_ward_linkage_tree_return_distance": {
  "data": {
   "lineno": 437,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "numpy.newaxis",
    "numpy.ones",
    "numpy.random.RandomState",
    "numpy.shape",
    "range",
    "sklearn.cluster._agglomerative.linkage_tree",
    "sklearn.cluster.ward_tree",
    "sklearn.utils._testing.assert_array_almost_equal",
    "sklearn.utils._testing.assert_array_equal",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_hierarchical.test_ward_tree_children_order": {
  "data": {
   "lineno": 417,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.newaxis",
    "numpy.ones",
    "numpy.random.RandomState",
    "range",
    "sklearn.cluster.ward_tree",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_hierarchical.test_zero_cosine_linkage_tree": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "sklearn.cluster._agglomerative.linkage_tree",
    "sklearn.utils._testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_hierarchical.ward_tree": {
  "data": {
   "shadows": "sklearn.cluster.ward_tree"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_k_means": {
  "data": {
   "symbols_in_volume": [
    "numpy.array",
    "scipy.sparse.csr_matrix",
    "sklearn.cluster.tests.test_k_means.centers",
    "sklearn.cluster.tests.test_k_means.n_samples",
    "sklearn.datasets.make_blobs"
   ]
  },
  "type": "module"
 },
 "sklearn.cluster.tests.test_k_means.ConvergenceWarning": {
  "data": {
   "shadows": "sklearn.exceptions.ConvergenceWarning"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_k_means.KMeans": {
  "data": {
   "shadows": "sklearn.cluster.KMeans"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_k_means.MiniBatchKMeans": {
  "data": {
   "shadows": "sklearn.cluster.MiniBatchKMeans"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_k_means.StringIO": {
  "data": {
   "shadows": "io.StringIO"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_k_means.X_csr": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "sklearn.cluster.tests.test_k_means._astype_copy_false": {
  "data": {
   "shadows": "sklearn.utils.fixes._astype_copy_false"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_k_means._check_fitted_model": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "numpy.unique",
    "sklearn.cluster.tests.test_k_means.centers",
    "sklearn.metrics.cluster.v_measure_score"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means._euclidean_dense_dense_wrapper": {
  "data": {
   "shadows": "sklearn.cluster._k_means_fast._euclidean_dense_dense_wrapper"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_k_means._euclidean_sparse_dense_wrapper": {
  "data": {
   "shadows": "sklearn.cluster._k_means_fast._euclidean_sparse_dense_wrapper"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_k_means._inertia_dense": {
  "data": {
   "shadows": "sklearn.cluster._k_means_fast._inertia_dense"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_k_means._inertia_sparse": {
  "data": {
   "shadows": "sklearn.cluster._k_means_fast._inertia_sparse"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_k_means._labels_inertia": {
  "data": {
   "shadows": "sklearn.cluster._kmeans._labels_inertia"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_k_means._mini_batch_step": {
  "data": {
   "shadows": "sklearn.cluster._kmeans._mini_batch_step"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_k_means._relocate_empty_clusters_dense": {
  "data": {
   "shadows": "sklearn.cluster._k_means_fast._relocate_empty_clusters_dense"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_k_means._relocate_empty_clusters_sparse": {
  "data": {
   "shadows": "sklearn.cluster._k_means_fast._relocate_empty_clusters_sparse"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_k_means._sort_centers": {
  "data": {
   "lineno": 765,
   "symbols_in_volume": [
    "numpy.sort",
    "sklearn.cluster.tests.test_k_means.centers"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.assert_allclose": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_allclose"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_k_means.assert_almost_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_almost_equal"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_k_means.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_k_means.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_k_means.centers": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "sklearn.cluster.tests.test_k_means.clone": {
  "data": {
   "shadows": "sklearn.base.clone"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_k_means.k_means": {
  "data": {
   "shadows": "sklearn.cluster.k_means"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_k_means.kmeans_plusplus": {
  "data": {
   "shadows": "sklearn.cluster.kmeans_plusplus"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_k_means.make_blobs": {
  "data": {
   "shadows": "sklearn.datasets.make_blobs"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_k_means.n_samples": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "sklearn.cluster.tests.test_k_means.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_k_means.pairwise_distances": {
  "data": {
   "shadows": "sklearn.metrics.pairwise_distances"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_k_means.pairwise_distances_argmin": {
  "data": {
   "shadows": "sklearn.metrics.pairwise_distances_argmin"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_k_means.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_k_means.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_k_means.row_norms": {
  "data": {
   "shadows": "sklearn.utils.extmath.row_norms"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_k_means.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_k_means.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_k_means.test_all_init": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "Estimator",
    "isinstance",
    "sklearn.cluster.KMeans",
    "sklearn.cluster.MiniBatchKMeans",
    "sklearn.cluster.tests.test_k_means.X_csr",
    "sklearn.cluster.tests.test_k_means._check_fitted_model",
    "sklearn.cluster.tests.test_k_means.centers",
    "sklearn.cluster.tests.test_k_means.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_centers_not_mutated": {
  "data": {
   "lineno": 721,
   "symbols_in_volume": [
    "Estimator",
    "numpy.float32",
    "numpy.float64",
    "numpy.int32",
    "numpy.int64",
    "numpy.may_share_memory",
    "sklearn.cluster.KMeans",
    "sklearn.cluster.MiniBatchKMeans",
    "sklearn.cluster.tests.test_k_means.centers",
    "sklearn.cluster.tests.test_k_means.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_euclidean_distance": {
  "data": {
   "lineno": 931,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.float64",
    "numpy.random.RandomState",
    "numpy.sqrt",
    "scipy.sparse.random",
    "sklearn.cluster._k_means_fast._euclidean_dense_dense_wrapper",
    "sklearn.cluster._k_means_fast._euclidean_sparse_dense_wrapper",
    "sklearn.cluster.tests.test_k_means.pytest",
    "sklearn.utils._testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_fit_transform": {
  "data": {
   "lineno": 653,
   "symbols_in_volume": [
    "Estimator",
    "sklearn.cluster.KMeans",
    "sklearn.cluster.MiniBatchKMeans",
    "sklearn.cluster.tests.test_k_means.pytest",
    "sklearn.utils._testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_float_precision": {
  "data": {
   "lineno": 685,
   "symbols_in_volume": [
    "Estimator",
    "numpy.float32",
    "numpy.float64",
    "sklearn.cluster.KMeans",
    "sklearn.cluster.MiniBatchKMeans",
    "sklearn.cluster.tests.test_k_means.X_csr",
    "sklearn.cluster.tests.test_k_means.centers",
    "sklearn.cluster.tests.test_k_means.pytest",
    "sklearn.utils._testing.assert_allclose",
    "sklearn.utils._testing.assert_array_equal",
    "sklearn.utils.fixes._astype_copy_false"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_fortran_aligned_data": {
  "data": {
   "lineno": 284,
   "symbols_in_volume": [
    "Estimator",
    "numpy.asfortranarray",
    "sklearn.cluster.KMeans",
    "sklearn.cluster.MiniBatchKMeans",
    "sklearn.cluster.tests.test_k_means.centers",
    "sklearn.cluster.tests.test_k_means.pytest",
    "sklearn.utils._testing.assert_allclose",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_inertia": {
  "data": {
   "lineno": 955,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.float64",
    "numpy.int32",
    "numpy.random.RandomState",
    "numpy.sum",
    "scipy.sparse.random",
    "sklearn.cluster._k_means_fast._inertia_dense",
    "sklearn.cluster._k_means_fast._inertia_sparse",
    "sklearn.cluster.tests.test_k_means.centers",
    "sklearn.cluster.tests.test_k_means.pytest",
    "sklearn.utils._testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_integer_input": {
  "data": {
   "lineno": 604,
   "symbols_in_volume": [
    "Estimator",
    "array_constr",
    "numpy.array",
    "numpy.float64",
    "numpy.int32",
    "numpy.int64",
    "scipy.sparse.csr_matrix",
    "sklearn.base.clone",
    "sklearn.cluster.KMeans",
    "sklearn.cluster.MiniBatchKMeans",
    "sklearn.cluster.tests.test_k_means.pytest",
    "sklearn.metrics.cluster.v_measure_score",
    "sklearn.utils._testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_k_means_1_iteration": {
  "data": {
   "lineno": 902,
   "symbols_in_volume": [
    "array_constr",
    "numpy.array",
    "numpy.random.RandomState",
    "py_kmeans",
    "scipy.sparse.csr_matrix",
    "sklearn.cluster.KMeans",
    "sklearn.cluster.tests.test_k_means.pytest",
    "sklearn.utils._testing.assert_allclose",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_k_means_1_iteration.py_kmeans": {
  "data": {
   "lineno": 912,
   "symbols_in_volume": [
    "range",
    "sklearn.metrics.pairwise_distances_argmin"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_k_means_fit_predict": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "constructor",
    "numpy.asarray",
    "numpy.float32",
    "numpy.float64",
    "numpy.random.RandomState",
    "scipy.sparse.csr_matrix",
    "sklearn.cluster.KMeans",
    "sklearn.cluster.tests.test_k_means.pytest",
    "sklearn.cluster.tests.test_k_means.sys",
    "sklearn.datasets.make_blobs",
    "sklearn.metrics.cluster.v_measure_score"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_k_means_function": {
  "data": {
   "lineno": 672,
   "symbols_in_volume": [
    "numpy.unique",
    "sklearn.cluster.k_means",
    "sklearn.metrics.cluster.v_measure_score",
    "sklearn.utils._testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_kmeans_convergence": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.cluster.KMeans",
    "sklearn.cluster.tests.test_k_means.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_kmeans_copyx": {
  "data": {
   "lineno": 494,
   "symbols_in_volume": [
    "sklearn.cluster.KMeans",
    "sklearn.cluster.tests.test_k_means._check_fitted_model",
    "sklearn.utils._testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_kmeans_elkan_iter_attribute": {
  "data": {
   "lineno": 817,
   "symbols_in_volume": [
    "sklearn.cluster.KMeans"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_kmeans_elkan_results": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "array_constr",
    "numpy.array",
    "numpy.random.RandomState",
    "scipy.sparse.csr_matrix",
    "sklearn.cluster.KMeans",
    "sklearn.cluster.tests.test_k_means.pytest",
    "sklearn.datasets.make_blobs",
    "sklearn.utils._testing.assert_allclose",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_kmeans_empty_cluster_relocated": {
  "data": {
   "lineno": 824,
   "symbols_in_volume": [
    "array_constr",
    "len",
    "numpy.array",
    "scipy.sparse.csr_matrix",
    "set",
    "sklearn.cluster.KMeans",
    "sklearn.cluster.tests.test_k_means.pytest",
    "sklearn.utils._testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_kmeans_init_fitted_centers": {
  "data": {
   "lineno": 736,
   "symbols_in_volume": [
    "sklearn.cluster.KMeans",
    "sklearn.cluster.tests.test_k_means.X_csr",
    "sklearn.cluster.tests.test_k_means.pytest",
    "sklearn.utils._testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_kmeans_plusplus_dataorder": {
  "data": {
   "lineno": 1085,
   "symbols_in_volume": [
    "numpy.asfortranarray",
    "sklearn.cluster.kmeans_plusplus",
    "sklearn.utils._testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_kmeans_plusplus_norms": {
  "data": {
   "lineno": 1076,
   "symbols_in_volume": [
    "sklearn.cluster.kmeans_plusplus",
    "sklearn.cluster.tests.test_k_means.centers",
    "sklearn.cluster.tests.test_k_means.pytest",
    "sklearn.utils._testing.assert_allclose",
    "sklearn.utils.extmath.row_norms"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_kmeans_plusplus_output": {
  "data": {
   "lineno": 1052,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.float64",
    "sklearn.cluster.kmeans_plusplus",
    "sklearn.cluster.tests.test_k_means.X_csr",
    "sklearn.cluster.tests.test_k_means.centers",
    "sklearn.cluster.tests.test_k_means.pytest",
    "sklearn.utils._testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_kmeans_plusplus_wrong_params": {
  "data": {
   "lineno": 1039,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.cluster.kmeans_plusplus",
    "sklearn.cluster.tests.test_k_means.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_kmeans_relocated_clusters": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "array_constr",
    "numpy.array",
    "scipy.sparse.csr_matrix",
    "sklearn.cluster.KMeans",
    "sklearn.cluster.tests.test_k_means.pytest",
    "sklearn.utils._testing.assert_allclose",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_kmeans_results": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "array_constr",
    "numpy.array",
    "numpy.float32",
    "numpy.float64",
    "scipy.sparse.csr_matrix",
    "sklearn.cluster.KMeans",
    "sklearn.cluster.tests.test_k_means.pytest",
    "sklearn.utils._testing.assert_allclose",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_kmeans_verbose": {
  "data": {
   "lineno": 351,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.cluster.KMeans",
    "sklearn.cluster.tests.test_k_means.pytest",
    "sklearn.cluster.tests.test_k_means.re"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_kmeans_warns_less_centers_than_unique_points": {
  "data": {
   "lineno": 747,
   "symbols_in_volume": [
    "numpy.asarray",
    "range",
    "set",
    "sklearn.cluster.KMeans",
    "sklearn.cluster.tests.test_k_means.pytest",
    "sklearn.exceptions.ConvergenceWarning"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_kmeans_wrong_params": {
  "data": {
   "lineno": 1016,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.cluster.KMeans",
    "sklearn.cluster.tests.test_k_means.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_minibatch_kmeans_deprecated_attributes": {
  "data": {
   "lineno": 881,
   "symbols_in_volume": [
    "FutureWarning",
    "getattr",
    "sklearn.cluster.MiniBatchKMeans",
    "sklearn.cluster.tests.test_k_means.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_minibatch_kmeans_init_size": {
  "data": {
   "lineno": 477,
   "symbols_in_volume": [
    "sklearn.cluster.MiniBatchKMeans",
    "sklearn.cluster.tests.test_k_means.n_samples"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_minibatch_kmeans_partial_fit_init": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "isinstance",
    "range",
    "sklearn.cluster.MiniBatchKMeans",
    "sklearn.cluster.tests.test_k_means._check_fitted_model",
    "sklearn.cluster.tests.test_k_means.centers",
    "sklearn.cluster.tests.test_k_means.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_minibatch_kmeans_verbose": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": [
    "io.StringIO",
    "sklearn.cluster.MiniBatchKMeans",
    "sklearn.cluster.tests.test_k_means.sys"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_minibatch_kmeans_warning_init_size": {
  "data": {
   "lineno": 371,
   "symbols_in_volume": [
    "RuntimeWarning",
    "sklearn.cluster.MiniBatchKMeans",
    "sklearn.cluster.tests.test_k_means.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_minibatch_kmeans_wrong_params": {
  "data": {
   "lineno": 1026,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.cluster.MiniBatchKMeans",
    "sklearn.cluster.tests.test_k_means.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_minibatch_reassign": {
  "data": {
   "lineno": 415,
   "symbols_in_volume": [
    "io.StringIO",
    "numpy.double",
    "numpy.ones",
    "numpy.zeros",
    "sklearn.cluster.MiniBatchKMeans",
    "sklearn.cluster._kmeans._mini_batch_step",
    "sklearn.cluster.tests.test_k_means.X_csr",
    "sklearn.cluster.tests.test_k_means.centers",
    "sklearn.cluster.tests.test_k_means.sys",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_minibatch_sensible_reassign": {
  "data": {
   "lineno": 388,
   "symbols_in_volume": [
    "range",
    "sklearn.cluster.MiniBatchKMeans",
    "sklearn.datasets.make_blobs"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_minibatch_update_consistency": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "numpy.double",
    "numpy.ones",
    "numpy.random.RandomState",
    "numpy.sum",
    "numpy.zeros",
    "sklearn.cluster._kmeans._labels_inertia",
    "sklearn.cluster._kmeans._mini_batch_step",
    "sklearn.cluster.tests.test_k_means.X_csr",
    "sklearn.cluster.tests.test_k_means.centers",
    "sklearn.utils._testing.assert_almost_equal",
    "sklearn.utils._testing.assert_array_almost_equal",
    "sklearn.utils._testing.assert_array_equal",
    "sklearn.utils.extmath.row_norms"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_minibatch_with_many_reassignments": {
  "data": {
   "lineno": 460,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.cluster.MiniBatchKMeans",
    "sklearn.cluster.tests.test_k_means.n_samples"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_n_init": {
  "data": {
   "lineno": 661,
   "symbols_in_volume": [
    "numpy.inf",
    "sklearn.cluster.KMeans"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_n_jobs_deprecated": {
  "data": {
   "lineno": 868,
   "symbols_in_volume": [
    "FutureWarning",
    "sklearn.cluster.KMeans",
    "sklearn.cluster.tests.test_k_means.pytest",
    "sklearn.datasets.make_blobs"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_precompute_distance_deprecated": {
  "data": {
   "lineno": 855,
   "symbols_in_volume": [
    "FutureWarning",
    "sklearn.cluster.KMeans",
    "sklearn.cluster.tests.test_k_means.pytest",
    "sklearn.datasets.make_blobs"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_predict": {
  "data": {
   "lineno": 518,
   "symbols_in_volume": [
    "Estimator",
    "array_constr",
    "numpy.arange",
    "numpy.array",
    "numpy.float32",
    "numpy.float64",
    "scipy.sparse.csr_matrix",
    "sklearn.cluster.KMeans",
    "sklearn.cluster.MiniBatchKMeans",
    "sklearn.cluster.tests.test_k_means.pytest",
    "sklearn.cluster.tests.test_k_means.sys",
    "sklearn.datasets.make_blobs",
    "sklearn.metrics.cluster.v_measure_score",
    "sklearn.utils._testing.assert_allclose",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_predict_dense_sparse": {
  "data": {
   "lineno": 587,
   "symbols_in_volume": [
    "Estimator",
    "isinstance",
    "sklearn.cluster.KMeans",
    "sklearn.cluster.MiniBatchKMeans",
    "sklearn.cluster.tests.test_k_means.X_csr",
    "sklearn.cluster.tests.test_k_means.centers",
    "sklearn.cluster.tests.test_k_means.pytest",
    "sklearn.utils._testing.assert_array_equal",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_relocate_empty_clusters": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "array_constr",
    "numpy.array",
    "numpy.int32",
    "numpy.ones",
    "numpy.zeros",
    "scipy.sparse.csr_matrix",
    "sklearn.cluster._k_means_fast._relocate_empty_clusters_dense",
    "sklearn.cluster._k_means_fast._relocate_empty_clusters_sparse",
    "sklearn.cluster.tests.test_k_means.pytest",
    "sklearn.utils._testing.assert_allclose",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_result_of_kmeans_equal_in_diff_n_threads": {
  "data": {
   "lineno": 840,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.cluster.KMeans",
    "sklearn.utils._testing.assert_array_equal",
    "threadpoolctl.threadpool_limits"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_sample_weight_unchanged": {
  "data": {
   "lineno": 976,
   "symbols_in_volume": [
    "Estimator",
    "numpy.array",
    "sklearn.cluster.KMeans",
    "sklearn.cluster.MiniBatchKMeans",
    "sklearn.cluster.tests.test_k_means.pytest",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_scaled_weights": {
  "data": {
   "lineno": 804,
   "symbols_in_volume": [
    "numpy.ones",
    "sklearn.base.clone",
    "sklearn.cluster.KMeans",
    "sklearn.cluster.MiniBatchKMeans",
    "sklearn.cluster.tests.test_k_means._sort_centers",
    "sklearn.cluster.tests.test_k_means.n_samples",
    "sklearn.metrics.cluster.v_measure_score",
    "sklearn.utils._testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_score_max_iter": {
  "data": {
   "lineno": 505,
   "symbols_in_volume": [
    "Estimator",
    "numpy.random.RandomState",
    "sklearn.cluster.KMeans",
    "sklearn.cluster.MiniBatchKMeans",
    "sklearn.cluster.tests.test_k_means.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_transform": {
  "data": {
   "lineno": 635,
   "symbols_in_volume": [
    "Estimator",
    "numpy.zeros",
    "sklearn.cluster.KMeans",
    "sklearn.cluster.MiniBatchKMeans",
    "sklearn.cluster.tests.test_k_means.pytest",
    "sklearn.metrics.pairwise_distances",
    "sklearn.utils._testing.assert_allclose",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_unit_weights_vs_no_weights": {
  "data": {
   "lineno": 789,
   "symbols_in_volume": [
    "Estimator",
    "numpy.ones",
    "sklearn.base.clone",
    "sklearn.cluster.KMeans",
    "sklearn.cluster.MiniBatchKMeans",
    "sklearn.cluster.tests.test_k_means.X_csr",
    "sklearn.cluster.tests.test_k_means.n_samples",
    "sklearn.cluster.tests.test_k_means.pytest",
    "sklearn.utils._testing.assert_allclose",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_warning_elkan_1_cluster": {
  "data": {
   "lineno": 894,
   "symbols_in_volume": [
    "RuntimeWarning",
    "sklearn.cluster.KMeans",
    "sklearn.cluster.tests.test_k_means.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_warning_n_init_precomputed_centers": {
  "data": {
   "lineno": 378,
   "symbols_in_volume": [
    "Estimator",
    "RuntimeWarning",
    "sklearn.cluster.KMeans",
    "sklearn.cluster.MiniBatchKMeans",
    "sklearn.cluster.tests.test_k_means.centers",
    "sklearn.cluster.tests.test_k_means.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_weighted_vs_repeated": {
  "data": {
   "lineno": 769,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "numpy.repeat",
    "sklearn.base.clone",
    "sklearn.cluster.KMeans",
    "sklearn.cluster.tests.test_k_means._sort_centers",
    "sklearn.cluster.tests.test_k_means.centers",
    "sklearn.cluster.tests.test_k_means.n_samples",
    "sklearn.utils._testing.assert_allclose",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_wrong_params": {
  "data": {
   "lineno": 986,
   "symbols_in_volume": [
    "Estimator",
    "ValueError",
    "sklearn.cluster.KMeans",
    "sklearn.cluster.MiniBatchKMeans",
    "sklearn.cluster.tests.test_k_means.n_samples",
    "sklearn.cluster.tests.test_k_means.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.threadpool_limits": {
  "data": {
   "shadows": "threadpoolctl.threadpool_limits"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_k_means.v_measure_score": {
  "data": {
   "shadows": "sklearn.metrics.cluster.v_measure_score"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_mean_shift": {
  "data": {
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.cluster.tests.test_mean_shift.centers",
    "sklearn.datasets.make_blobs"
   ]
  },
  "type": "module"
 },
 "sklearn.cluster.tests.test_mean_shift.MeanShift": {
  "data": {
   "shadows": "sklearn.cluster.MeanShift"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_mean_shift.assert_allclose": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_allclose"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_mean_shift.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_mean_shift.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_mean_shift.assert_raise_message": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_raise_message"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_mean_shift.centers": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "sklearn.cluster.tests.test_mean_shift.estimate_bandwidth": {
  "data": {
   "shadows": "sklearn.cluster.estimate_bandwidth"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_mean_shift.get_bin_seeds": {
  "data": {
   "shadows": "sklearn.cluster.get_bin_seeds"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_mean_shift.make_blobs": {
  "data": {
   "shadows": "sklearn.datasets.make_blobs"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_mean_shift.mean_shift": {
  "data": {
   "shadows": "sklearn.cluster.mean_shift"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_mean_shift.n_clusters": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "sklearn.cluster.tests.test_mean_shift.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_mean_shift.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_mean_shift.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_mean_shift.test_bin_seeds": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "set",
    "sklearn.cluster.get_bin_seeds",
    "sklearn.cluster.tests.test_mean_shift.warnings",
    "sklearn.datasets.make_blobs",
    "sklearn.utils._testing.assert_array_almost_equal",
    "sklearn.utils._testing.assert_array_equal",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_mean_shift.test_cluster_intensity_tie": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.cluster.MeanShift",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_mean_shift.test_estimate_bandwidth": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "sklearn.cluster.estimate_bandwidth"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_mean_shift.test_estimate_bandwidth_1sample": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "sklearn.cluster.estimate_bandwidth",
    "sklearn.cluster.tests.test_mean_shift.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_mean_shift.test_estimate_bandwidth_with_sparse_matrix": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "TypeError",
    "scipy.sparse.lil_matrix",
    "sklearn.cluster.estimate_bandwidth",
    "sklearn.utils._testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_mean_shift.test_max_iter": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "len",
    "numpy.allclose",
    "sklearn.cluster.MeanShift",
    "sklearn.cluster.mean_shift",
    "sklearn.cluster.tests.test_mean_shift.pytest",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_mean_shift.test_mean_shift": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "len",
    "numpy.unique",
    "sklearn.cluster.MeanShift",
    "sklearn.cluster.mean_shift",
    "sklearn.cluster.tests.test_mean_shift.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_mean_shift.test_mean_shift_negative_bandwidth": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.cluster.MeanShift",
    "sklearn.cluster.tests.test_mean_shift.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_mean_shift.test_mean_shift_zero_bandwidth": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.cluster.MeanShift",
    "sklearn.cluster.estimate_bandwidth",
    "sklearn.cluster.get_bin_seeds",
    "sklearn.metrics.v_measure_score",
    "sklearn.utils._testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_mean_shift.test_meanshift_all_orphans": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.cluster.MeanShift",
    "sklearn.utils._testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_mean_shift.test_meanshift_predict": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "sklearn.cluster.MeanShift",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_mean_shift.test_parallel": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.cluster.MeanShift",
    "sklearn.cluster.tests.test_mean_shift.centers",
    "sklearn.datasets.make_blobs",
    "sklearn.utils._testing.assert_array_almost_equal",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_mean_shift.test_unfitted": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "hasattr",
    "sklearn.cluster.MeanShift"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_mean_shift.v_measure_score": {
  "data": {
   "shadows": "sklearn.metrics.v_measure_score"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_mean_shift.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_optics": {
  "data": {
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "numpy.vstack",
    "sklearn.cluster.tests.test_optics.C1",
    "sklearn.cluster.tests.test_optics.C2",
    "sklearn.cluster.tests.test_optics.C3",
    "sklearn.cluster.tests.test_optics.C4",
    "sklearn.cluster.tests.test_optics.C5",
    "sklearn.cluster.tests.test_optics.C6",
    "sklearn.cluster.tests.test_optics.n_points_per_cluster",
    "sklearn.cluster.tests.test_optics.rng"
   ]
  },
  "type": "module"
 },
 "sklearn.cluster.tests.test_optics.C1": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "sklearn.cluster.tests.test_optics.C2": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "sklearn.cluster.tests.test_optics.C3": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "sklearn.cluster.tests.test_optics.C4": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "sklearn.cluster.tests.test_optics.C5": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "sklearn.cluster.tests.test_optics.C6": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "sklearn.cluster.tests.test_optics.DBSCAN": {
  "data": {
   "shadows": "sklearn.cluster.DBSCAN"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_optics.OPTICS": {
  "data": {
   "shadows": "sklearn.cluster.OPTICS"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_optics.X": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "sklearn.cluster.tests.test_optics._extend_region": {
  "data": {
   "shadows": "sklearn.cluster._optics._extend_region"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_optics._extract_xi_labels": {
  "data": {
   "shadows": "sklearn.cluster._optics._extract_xi_labels"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_optics.assert_allclose": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_allclose"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_optics.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_optics.assert_raise_message": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_raise_message"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_optics.contingency_matrix": {
  "data": {
   "shadows": "sklearn.metrics.cluster.contingency_matrix"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_optics.generate_clustered_data": {
  "data": {
   "shadows": "sklearn.cluster.tests.common.generate_clustered_data"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_optics.make_blobs": {
  "data": {
   "shadows": "sklearn.datasets.make_blobs"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_optics.n_points_per_cluster": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "sklearn.cluster.tests.test_optics.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_optics.pairwise_distances": {
  "data": {
   "shadows": "sklearn.metrics.pairwise.pairwise_distances"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_optics.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_optics.rng": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "sklearn.cluster.tests.test_optics.shuffle": {
  "data": {
   "shadows": "sklearn.utils.shuffle"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_optics.test_bad_extract": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.cluster.OPTICS",
    "sklearn.cluster.tests.test_optics.X",
    "sklearn.datasets.make_blobs",
    "sklearn.utils._testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_optics.test_bad_reachability": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "UserWarning",
    "sklearn.cluster.OPTICS",
    "sklearn.cluster.tests.test_optics.X",
    "sklearn.cluster.tests.test_optics.pytest",
    "sklearn.datasets.make_blobs"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_optics.test_close_extract": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "max",
    "sklearn.cluster.OPTICS",
    "sklearn.cluster.tests.test_optics.X",
    "sklearn.datasets.make_blobs"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_optics.test_cluster_hierarchy_": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "numpy.random.RandomState",
    "numpy.sum",
    "numpy.vstack",
    "sklearn.cluster.OPTICS",
    "sklearn.cluster.tests.test_optics.C1",
    "sklearn.cluster.tests.test_optics.C2",
    "sklearn.cluster.tests.test_optics.X",
    "sklearn.cluster.tests.test_optics.n_points_per_cluster",
    "sklearn.cluster.tests.test_optics.rng",
    "sklearn.utils.shuffle"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_optics.test_compare_to_ELKI": {
  "data": {
   "lineno": 317,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.inf",
    "numpy.where",
    "sklearn.cluster.OPTICS",
    "sklearn.cluster.tests.test_optics.X",
    "sklearn.utils._testing.assert_allclose",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_optics.test_correct_number_of_clusters": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "int",
    "len",
    "range",
    "set",
    "sklearn.cluster.OPTICS",
    "sklearn.cluster.tests.common.generate_clustered_data",
    "sklearn.cluster.tests.test_optics.X"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_optics.test_dbscan_optics_parity": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "min",
    "numpy.max",
    "numpy.round",
    "numpy.sum",
    "sklearn.cluster.DBSCAN",
    "sklearn.cluster.OPTICS",
    "sklearn.cluster.tests.test_optics.X",
    "sklearn.cluster.tests.test_optics.pytest",
    "sklearn.datasets.make_blobs",
    "sklearn.metrics.cluster.contingency_matrix"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_optics.test_extend_downward": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.inf",
    "sklearn.cluster._optics._extend_region",
    "sklearn.cluster.tests.test_optics.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_optics.test_extend_upward": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.inf",
    "sklearn.cluster._optics._extend_region",
    "sklearn.cluster.tests.test_optics.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_optics.test_extract_dbscan": {
  "data": {
   "lineno": 405,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "numpy.sort",
    "numpy.unique",
    "numpy.vstack",
    "sklearn.cluster.OPTICS",
    "sklearn.cluster.tests.test_optics.C1",
    "sklearn.cluster.tests.test_optics.C2",
    "sklearn.cluster.tests.test_optics.C3",
    "sklearn.cluster.tests.test_optics.C4",
    "sklearn.cluster.tests.test_optics.X",
    "sklearn.cluster.tests.test_optics.n_points_per_cluster",
    "sklearn.cluster.tests.test_optics.rng",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_optics.test_extract_xi": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.inf",
    "numpy.r_",
    "numpy.random.RandomState",
    "numpy.vstack",
    "sklearn.cluster.OPTICS",
    "sklearn.cluster.tests.test_optics.C1",
    "sklearn.cluster.tests.test_optics.C2",
    "sklearn.cluster.tests.test_optics.C3",
    "sklearn.cluster.tests.test_optics.C4",
    "sklearn.cluster.tests.test_optics.C5",
    "sklearn.cluster.tests.test_optics.C6",
    "sklearn.cluster.tests.test_optics.X",
    "sklearn.cluster.tests.test_optics.n_points_per_cluster",
    "sklearn.cluster.tests.test_optics.rng",
    "sklearn.utils._testing.assert_array_equal",
    "sklearn.utils.shuffle"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_optics.test_min_cluster_size": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "min",
    "numpy.bincount",
    "range",
    "sklearn.cluster.OPTICS",
    "sklearn.cluster.tests.test_optics.X",
    "sklearn.cluster.tests.test_optics.pytest",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_optics.test_min_cluster_size_invalid": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.cluster.OPTICS",
    "sklearn.cluster.tests.test_optics.X",
    "sklearn.cluster.tests.test_optics.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_optics.test_min_cluster_size_invalid2": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "sklearn.cluster.OPTICS",
    "sklearn.cluster.tests.test_optics.X",
    "sklearn.cluster.tests.test_optics.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_optics.test_min_samples_edge_case": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "UserWarning",
    "numpy.r_",
    "numpy.vstack",
    "sklearn.cluster.OPTICS",
    "sklearn.cluster.tests.test_optics.C1",
    "sklearn.cluster.tests.test_optics.C2",
    "sklearn.cluster.tests.test_optics.C3",
    "sklearn.cluster.tests.test_optics.X",
    "sklearn.cluster.tests.test_optics.pytest",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_optics.test_minimum_number_of_sample_check": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.cluster.OPTICS",
    "sklearn.cluster.tests.test_optics.X",
    "sklearn.utils._testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_optics.test_precomputed_dists": {
  "data": {
   "lineno": 420,
   "symbols_in_volume": [
    "sklearn.cluster.OPTICS",
    "sklearn.cluster.tests.test_optics.X",
    "sklearn.metrics.pairwise.pairwise_distances",
    "sklearn.utils._testing.assert_allclose",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_optics.test_processing_order": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": [
    "numpy.inf",
    "sklearn.cluster.OPTICS",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_optics.test_the_extract_xi_labels": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "sklearn.cluster._optics._extract_xi_labels",
    "sklearn.cluster.tests.test_optics.pytest",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_optics.test_wrong_cluster_method": {
  "data": {
   "lineno": 399,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.cluster.OPTICS",
    "sklearn.cluster.tests.test_optics.X",
    "sklearn.cluster.tests.test_optics.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_spectral": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "sklearn.cluster.tests.test_spectral.NearestNeighbors": {
  "data": {
   "shadows": "sklearn.neighbors.NearestNeighbors"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_spectral.SpectralClustering": {
  "data": {
   "shadows": "sklearn.cluster.SpectralClustering"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_spectral.adjusted_rand_score": {
  "data": {
   "shadows": "sklearn.metrics.adjusted_rand_score"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_spectral.amg_loaded": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "sklearn.cluster.tests.test_spectral.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_spectral.assert_warns_message": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_warns_message"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_spectral.check_random_state": {
  "data": {
   "shadows": "sklearn.utils.check_random_state"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_spectral.discretize": {
  "data": {
   "shadows": "sklearn.cluster._spectral.discretize"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_spectral.img_to_graph": {
  "data": {
   "shadows": "sklearn.feature_extraction.img_to_graph"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_spectral.kernel_metrics": {
  "data": {
   "shadows": "sklearn.metrics.pairwise.kernel_metrics"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_spectral.make_blobs": {
  "data": {
   "shadows": "sklearn.datasets.make_blobs"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_spectral.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_spectral.pairwise_distances": {
  "data": {
   "shadows": "sklearn.metrics.pairwise_distances"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_spectral.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_spectral.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_spectral.rbf_kernel": {
  "data": {
   "shadows": "sklearn.metrics.pairwise.rbf_kernel"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_spectral.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_spectral.smoothed_aggregation_solver": {
  "data": {
   "shadows": "pyamg.smoothed_aggregation_solver"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_spectral.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_spectral.spectral_clustering": {
  "data": {
   "shadows": "sklearn.cluster.spectral_clustering"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_spectral.test_affinities": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "UserWarning",
    "ValueError",
    "sklearn.cluster.SpectralClustering",
    "sklearn.cluster.tests.test_spectral.pytest",
    "sklearn.datasets.make_blobs",
    "sklearn.metrics.adjusted_rand_score",
    "sklearn.metrics.pairwise.kernel_metrics",
    "sklearn.utils._testing.assert_warns_message",
    "sklearn.utils.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_spectral.test_affinities.histogram": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "numpy.minimum"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_spectral.test_discretize": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "float",
    "numpy.arange",
    "numpy.array",
    "numpy.ones",
    "numpy.random.RandomState",
    "range",
    "scipy.sparse.coo_matrix",
    "sklearn.cluster._spectral.discretize",
    "sklearn.cluster.tests.test_spectral.pytest",
    "sklearn.metrics.adjusted_rand_score"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_spectral.test_n_components": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "numpy.array_equal",
    "sklearn.cluster.SpectralClustering",
    "sklearn.datasets.make_blobs",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_spectral.test_pairwise_is_deprecated": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "FutureWarning",
    "sklearn.cluster.SpectralClustering",
    "sklearn.cluster.tests.test_spectral.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_spectral.test_precomputed_nearest_neighbors_filtering": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "sklearn.cluster.SpectralClustering",
    "sklearn.datasets.make_blobs",
    "sklearn.neighbors.NearestNeighbors",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_spectral.test_spectral_clustering": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "numpy.array",
    "scipy.sparse.csr_matrix",
    "sklearn.cluster.SpectralClustering",
    "sklearn.cluster.tests.test_spectral.pickle",
    "sklearn.cluster.tests.test_spectral.pytest",
    "sklearn.metrics.adjusted_rand_score",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_spectral.test_spectral_clustering_sparse": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "numpy.maximum",
    "scipy.sparse.coo_matrix",
    "sklearn.cluster.SpectralClustering",
    "sklearn.datasets.make_blobs",
    "sklearn.metrics.adjusted_rand_score",
    "sklearn.metrics.pairwise.rbf_kernel"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_spectral.test_spectral_clustering_with_arpack_amg_solvers": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "len",
    "numpy.exp",
    "numpy.indices",
    "numpy.unique",
    "sklearn.cluster.spectral_clustering",
    "sklearn.cluster.tests.test_spectral.amg_loaded",
    "sklearn.cluster.tests.test_spectral.pytest",
    "sklearn.feature_extraction.img_to_graph",
    "sklearn.metrics.adjusted_rand_score"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_spectral.test_spectral_unknown_assign_labels": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "numpy.max",
    "scipy.sparse.coo_matrix",
    "sklearn.cluster.spectral_clustering",
    "sklearn.cluster.tests.test_spectral.pytest",
    "sklearn.datasets.make_blobs",
    "sklearn.metrics.pairwise_distances"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_spectral.test_spectral_unknown_mode": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "numpy.max",
    "scipy.sparse.coo_matrix",
    "sklearn.cluster.spectral_clustering",
    "sklearn.cluster.tests.test_spectral.pytest",
    "sklearn.datasets.make_blobs",
    "sklearn.metrics.pairwise_distances"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_spectral.test_verbose": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "sklearn.cluster.SpectralClustering",
    "sklearn.cluster.tests.test_spectral.pytest",
    "sklearn.cluster.tests.test_spectral.re",
    "sklearn.datasets.make_blobs"
   ]
  },
  "type": "function"
 },
 "sklearn.compose": {
  "data": {},
  "type": "module"
 },
 "sklearn.compose.__all__": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "sklearn.compose._target": {
  "data": {},
  "type": "module"
 },
 "sklearn.compose._target.TransformedTargetRegressor": {
  "data": {
   "lineno": 19
  },
  "type": "class"
 },
 "sklearn.compose._target.TransformedTargetRegressor.__init__": {
  "data": {
   "lineno": 112
  },
  "type": "function"
 },
 "sklearn.compose._target.TransformedTargetRegressor._fit_transformer": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "FunctionTransformer",
    "UserWarning",
    "ValueError",
    "_safe_indexing",
    "clone",
    "max",
    "numpy.allclose",
    "sklearn.compose._target.warnings",
    "slice"
   ]
  },
  "type": "function"
 },
 "sklearn.compose._target.TransformedTargetRegressor._more_tags": {
  "data": {
   "lineno": 241
  },
  "type": "function"
 },
 "sklearn.compose._target.TransformedTargetRegressor.fit": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "LinearRegression",
    "check_array",
    "clone"
   ]
  },
  "type": "function"
 },
 "sklearn.compose._target.TransformedTargetRegressor.n_features_in_": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "AttributeError",
    "check_is_fitted",
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.compose._target.TransformedTargetRegressor.predict": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "check_is_fitted"
   ]
  },
  "type": "function"
 },
 "sklearn.compose._target.__all__": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "sklearn.compose._target.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.compose._target.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.compose.tests": {
  "data": {},
  "type": "module"
 },
 "sklearn.compose.tests.test_column_transformer": {
  "data": {},
  "type": "module"
 },
 "sklearn.compose.tests.test_column_transformer.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "sklearn.compose.tests.test_column_transformer.ColumnTransformer": {
  "data": {
   "shadows": "sklearn.compose.ColumnTransformer"
  },
  "type": "import"
 },
 "sklearn.compose.tests.test_column_transformer.DictVectorizer": {
  "data": {
   "shadows": "sklearn.feature_extraction.DictVectorizer"
  },
  "type": "import"
 },
 "sklearn.compose.tests.test_column_transformer.DoubleTrans": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator"
   ]
  },
  "type": "class"
 },
 "sklearn.compose.tests.test_column_transformer.DoubleTrans.fit": {
  "data": {
   "lineno": 43
  },
  "type": "function"
 },
 "sklearn.compose.tests.test_column_transformer.DoubleTrans.transform": {
  "data": {
   "lineno": 46
  },
  "type": "function"
 },
 "sklearn.compose.tests.test_column_transformer.FunctionTransformer": {
  "data": {
   "shadows": "sklearn.preprocessing.FunctionTransformer"
  },
  "type": "import"
 },
 "sklearn.compose.tests.test_column_transformer.Normalizer": {
  "data": {
   "shadows": "sklearn.preprocessing.Normalizer"
  },
  "type": "import"
 },
 "sklearn.compose.tests.test_column_transformer.NotFittedError": {
  "data": {
   "shadows": "sklearn.exceptions.NotFittedError"
  },
  "type": "import"
 },
 "sklearn.compose.tests.test_column_transformer.OneHotEncoder": {
  "data": {
   "shadows": "sklearn.preprocessing.OneHotEncoder"
  },
  "type": "import"
 },
 "sklearn.compose.tests.test_column_transformer.SparseMatrixTrans": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator"
   ]
  },
  "type": "class"
 },
 "sklearn.compose.tests.test_column_transformer.SparseMatrixTrans.fit": {
  "data": {
   "lineno": 51
  },
  "type": "function"
 },
 "sklearn.compose.tests.test_column_transformer.SparseMatrixTrans.transform": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "len",
    "scipy.sparse.eye"
   ]
  },
  "type": "function"
 },
 "sklearn.compose.tests.test_column_transformer.StandardScaler": {
  "data": {
   "shadows": "sklearn.preprocessing.StandardScaler"
  },
  "type": "import"
 },
 "sklearn.compose.tests.test_column_transformer.Trans": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator"
   ]
  },
  "type": "class"
 },
 "sklearn.compose.tests.test_column_transformer.Trans.fit": {
  "data": {
   "lineno": 29
  },
  "type": "function"
 },
 "sklearn.compose.tests.test_column_transformer.Trans.transform": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "hasattr",
    "numpy.atleast_2d"
   ]
  },
  "type": "function"
 },
 "sklearn.compose.tests.test_column_transformer.TransNo2D": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator"
   ]
  },
  "type": "class"
 },
 "sklearn.compose.tests.test_column_transformer.TransNo2D.fit": {
  "data": {
   "lineno": 60
  },
  "type": "function"
 },
 "sklearn.compose.tests.test_column_transformer.TransNo2D.transform": {
  "data": {
   "lineno": 63
  },
  "type": "function"
 },
 "sklearn.compose.tests.test_column_transformer.TransRaise": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator"
   ]
  },
  "type": "class"
 },
 "sklearn.compose.tests.test_column_transformer.TransRaise.fit": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "sklearn.compose.tests.test_column_transformer.TransRaise.transform": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "sklearn.compose.tests.test_column_transformer.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "sklearn.compose.tests.test_column_transformer.assert_allclose_dense_sparse": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_allclose_dense_sparse"
  },
  "type": "import"
 },
 "sklearn.compose.tests.test_column_transformer.assert_almost_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_almost_equal"
  },
  "type": "import"
 },
 "sklearn.compose.tests.test_column_transformer.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.compose.tests.test_column_transformer.assert_raise_message": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_raise_message"
  },
  "type": "import"
 },
 "sklearn.compose.tests.test_column_transformer.make_column_selector": {
  "data": {
   "shadows": "sklearn.compose.make_column_selector"
  },
  "type": "import"
 },
 "sklearn.compose.tests.test_column_transformer.make_column_transformer": {
  "data": {
   "shadows": "sklearn.compose.make_column_transformer"
  },
  "type": "import"
 },
 "sklearn.compose.tests.test_column_transformer.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.compose.tests.test_column_transformer.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "sklearn.compose.tests.test_column_transformer.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.compose.tests.test_column_transformer.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "sklearn.compose.tests.test_column_transformer.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.compose.tests.test_column_transformer.test_2D_transformer_output": {
  "data": {
   "lineno": 468,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "sklearn.compose.ColumnTransformer",
    "sklearn.compose.tests.test_column_transformer.TransNo2D",
    "sklearn.utils._testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.compose.tests.test_column_transformer.test_2D_transformer_output_pandas": {
  "data": {
   "lineno": 481,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "sklearn.compose.ColumnTransformer",
    "sklearn.compose.tests.test_column_transformer.TransNo2D",
    "sklearn.compose.tests.test_column_transformer.pytest",
    "sklearn.utils._testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.compose.tests.test_column_transformer.test_column_transformer": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "numpy.vstack",
    "sklearn.compose.ColumnTransformer",
    "sklearn.compose.tests.test_column_transformer.Trans",
    "sklearn.utils._testing.assert_array_equal",
    "slice"
   ]
  },
  "type": "function"
 },
 "sklearn.compose.tests.test_column_transformer.test_column_transformer_callable_specifier": {
  "data": {
   "lineno": 1119,
   "symbols_in_volume": [
    "callable",
    "func",
    "numpy.array",
    "sklearn.compose.ColumnTransformer",
    "sklearn.compose.tests.test_column_transformer.Trans",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.compose.tests.test_column_transformer.test_column_transformer_callable_specifier.func": {
  "data": {
   "lineno": 1124,
   "symbols_in_volume": [
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.compose.tests.test_column_transformer.test_column_transformer_callable_specifier_dataframe": {
  "data": {
   "lineno": 1136,
   "symbols_in_volume": [
    "callable",
    "func",
    "numpy.array",
    "sklearn.compose.ColumnTransformer",
    "sklearn.compose.tests.test_column_transformer.Trans",
    "sklearn.compose.tests.test_column_transformer.pytest",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.compose.tests.test_column_transformer.test_column_transformer_callable_specifier_dataframe.func": {
  "data": {
   "lineno": 1144,
   "symbols_in_volume": [
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.compose.tests.test_column_transformer.test_column_transformer_cloning": {
  "data": {
   "lineno": 651,
   "symbols_in_volume": [
    "hasattr",
    "numpy.array",
    "sklearn.compose.ColumnTransformer",
    "sklearn.preprocessing.StandardScaler"
   ]
  },
  "type": "function"
 },
 "sklearn.compose.tests.test_column_transformer.test_column_transformer_dataframe": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "TransAssert",
    "len",
    "numpy.array",
    "numpy.vstack",
    "sklearn.compose.ColumnTransformer",
    "sklearn.compose.tests.test_column_transformer.Trans",
    "sklearn.compose.tests.test_column_transformer.pytest",
    "sklearn.utils._testing.assert_array_equal",
    "slice"
   ]
  },
  "type": "function"
 },
 "sklearn.compose.tests.test_column_transformer.test_column_transformer_dataframe.TransAssert": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator"
   ]
  },
  "type": "class"
 },
 "sklearn.compose.tests.test_column_transformer.test_column_transformer_dataframe.TransAssert.fit": {
  "data": {
   "lineno": 232
  },
  "type": "function"
 },
 "sklearn.compose.tests.test_column_transformer.test_column_transformer_dataframe.TransAssert.transform": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "isinstance"
   ]
  },
  "type": "function"
 },
 "sklearn.compose.tests.test_column_transformer.test_column_transformer_drop_all_sparse_remainder_transformer": {
  "data": {
   "lineno": 990,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "numpy.array",
    "numpy.eye",
    "scipy.sparse.issparse",
    "sklearn.compose.ColumnTransformer",
    "sklearn.compose.tests.test_column_transformer.SparseMatrixTrans",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.compose.tests.test_column_transformer.test_column_transformer_drops_all_remainder_transformer": {
  "data": {
   "lineno": 947,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "numpy.array",
    "sklearn.compose.ColumnTransformer",
    "sklearn.compose.tests.test_column_transformer.DoubleTrans",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.compose.tests.test_column_transformer.test_column_transformer_empty_columns": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "numpy.array",
    "sklearn.compose.ColumnTransformer",
    "sklearn.compose.tests.test_column_transformer.Trans",
    "sklearn.compose.tests.test_column_transformer.TransRaise",
    "sklearn.compose.tests.test_column_transformer.pytest",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.compose.tests.test_column_transformer.test_column_transformer_error_msg_1D": {
  "data": {
   "lineno": 454,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "sklearn.compose.ColumnTransformer",
    "sklearn.compose.tests.test_column_transformer.TransRaise",
    "sklearn.preprocessing.StandardScaler",
    "sklearn.utils._testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.compose.tests.test_column_transformer.test_column_transformer_get_feature_names": {
  "data": {
   "lineno": 665,
   "symbols_in_volume": [
    "AttributeError",
    "numpy.array",
    "object",
    "range",
    "sklearn.compose.ColumnTransformer",
    "sklearn.compose.tests.test_column_transformer.Trans",
    "sklearn.compose.tests.test_column_transformer.pytest",
    "sklearn.exceptions.NotFittedError",
    "sklearn.feature_extraction.DictVectorizer",
    "sklearn.utils._testing.assert_raise_message",
    "slice",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.compose.tests.test_column_transformer.test_column_transformer_get_feature_names_dataframe": {
  "data": {
   "lineno": 722,
   "symbols_in_volume": [
    "numpy.array",
    "object",
    "sklearn.compose.ColumnTransformer",
    "sklearn.compose.tests.test_column_transformer.pytest",
    "sklearn.feature_extraction.DictVectorizer",
    "slice"
   ]
  },
  "type": "function"
 },
 "sklearn.compose.tests.test_column_transformer.test_column_transformer_get_set_params": {
  "data": {
   "lineno": 595,
   "symbols_in_volume": [
    "sklearn.compose.ColumnTransformer",
    "sklearn.preprocessing.StandardScaler"
   ]
  },
  "type": "function"
 },
 "sklearn.compose.tests.test_column_transformer.test_column_transformer_get_set_params_with_remainder": {
  "data": {
   "lineno": 1010,
   "symbols_in_volume": [
    "sklearn.compose.ColumnTransformer",
    "sklearn.preprocessing.StandardScaler"
   ]
  },
  "type": "function"
 },
 "sklearn.compose.tests.test_column_transformer.test_column_transformer_invalid_columns": {
  "data": {
   "lineno": 496,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "sklearn.compose.ColumnTransformer",
    "sklearn.compose.tests.test_column_transformer.Trans",
    "sklearn.compose.tests.test_column_transformer.pytest",
    "sklearn.utils._testing.assert_raise_message",
    "slice"
   ]
  },
  "type": "function"
 },
 "sklearn.compose.tests.test_column_transformer.test_column_transformer_invalid_transformer": {
  "data": {
   "lineno": 528,
   "symbols_in_volume": [
    "NoTrans",
    "TypeError",
    "numpy.array",
    "sklearn.compose.ColumnTransformer",
    "sklearn.utils._testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.compose.tests.test_column_transformer.test_column_transformer_invalid_transformer.NoTrans": {
  "data": {
   "lineno": 530,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator"
   ]
  },
  "type": "class"
 },
 "sklearn.compose.tests.test_column_transformer.test_column_transformer_invalid_transformer.NoTrans.fit": {
  "data": {
   "lineno": 531
  },
  "type": "function"
 },
 "sklearn.compose.tests.test_column_transformer.test_column_transformer_invalid_transformer.NoTrans.predict": {
  "data": {
   "lineno": 534
  },
  "type": "function"
 },
 "sklearn.compose.tests.test_column_transformer.test_column_transformer_list": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": [
    "float",
    "numpy.array",
    "sklearn.compose.ColumnTransformer",
    "sklearn.preprocessing.OneHotEncoder",
    "sklearn.preprocessing.StandardScaler",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.compose.tests.test_column_transformer.test_column_transformer_mask_indexing": {
  "data": {
   "lineno": 1245,
   "symbols_in_volume": [
    "array_type",
    "numpy.asarray",
    "numpy.transpose",
    "scipy.sparse.csr_matrix",
    "sklearn.compose.ColumnTransformer",
    "sklearn.compose.tests.test_column_transformer.pytest",
    "sklearn.preprocessing.FunctionTransformer"
   ]
  },
  "type": "function"
 },
 "sklearn.compose.tests.test_column_transformer.test_column_transformer_mixed_cols_sparse": {
  "data": {
   "lineno": 382,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "sklearn.compose.make_column_transformer",
    "sklearn.compose.tests.test_column_transformer.pytest",
    "sklearn.preprocessing.OneHotEncoder",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.compose.tests.test_column_transformer.test_column_transformer_named_estimators": {
  "data": {
   "lineno": 635,
   "symbols_in_volume": [
    "hasattr",
    "isinstance",
    "numpy.array",
    "sklearn.compose.ColumnTransformer",
    "sklearn.preprocessing.StandardScaler"
   ]
  },
  "type": "function"
 },
 "sklearn.compose.tests.test_column_transformer.test_column_transformer_negative_column_indexes": {
  "data": {
   "lineno": 1157,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.concatenate",
    "numpy.random.randn",
    "sklearn.compose.ColumnTransformer",
    "sklearn.preprocessing.OneHotEncoder",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.compose.tests.test_column_transformer.test_column_transformer_no_estimators": {
  "data": {
   "lineno": 1048,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "sklearn.compose.ColumnTransformer",
    "sklearn.preprocessing.StandardScaler"
   ]
  },
  "type": "function"
 },
 "sklearn.compose.tests.test_column_transformer.test_column_transformer_no_estimators_set_params": {
  "data": {
   "lineno": 1114,
   "symbols_in_volume": [
    "sklearn.compose.ColumnTransformer"
   ]
  },
  "type": "function"
 },
 "sklearn.compose.tests.test_column_transformer.test_column_transformer_no_remaining_remainder_transformer": {
  "data": {
   "lineno": 933,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "sklearn.compose.ColumnTransformer",
    "sklearn.compose.tests.test_column_transformer.DoubleTrans",
    "sklearn.compose.tests.test_column_transformer.Trans",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.compose.tests.test_column_transformer.test_column_transformer_remainder": {
  "data": {
   "lineno": 809,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.array",
    "sklearn.compose.ColumnTransformer",
    "sklearn.compose.make_column_transformer",
    "sklearn.compose.tests.test_column_transformer.Trans",
    "sklearn.utils._testing.assert_array_equal",
    "sklearn.utils._testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.compose.tests.test_column_transformer.test_column_transformer_remainder_numpy": {
  "data": {
   "lineno": 870,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "sklearn.compose.ColumnTransformer",
    "sklearn.compose.tests.test_column_transformer.Trans",
    "sklearn.compose.tests.test_column_transformer.pytest",
    "sklearn.utils._testing.assert_array_equal",
    "slice"
   ]
  },
  "type": "function"
 },
 "sklearn.compose.tests.test_column_transformer.test_column_transformer_remainder_pandas": {
  "data": {
   "lineno": 887,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "numpy.array",
    "object",
    "sklearn.compose.ColumnTransformer",
    "sklearn.compose.tests.test_column_transformer.Trans",
    "sklearn.compose.tests.test_column_transformer.pytest",
    "sklearn.utils._testing.assert_array_equal",
    "slice",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.compose.tests.test_column_transformer.test_column_transformer_remainder_transformer": {
  "data": {
   "lineno": 911,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "numpy.array",
    "sklearn.compose.ColumnTransformer",
    "sklearn.compose.tests.test_column_transformer.DoubleTrans",
    "sklearn.compose.tests.test_column_transformer.Trans",
    "sklearn.compose.tests.test_column_transformer.pytest",
    "sklearn.utils._testing.assert_array_equal",
    "slice"
   ]
  },
  "type": "function"
 },
 "sklearn.compose.tests.test_column_transformer.test_column_transformer_reordered_column_names_remainder": {
  "data": {
   "lineno": 1169,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "numpy.array",
    "sklearn.compose.ColumnTransformer",
    "sklearn.compose.tests.test_column_transformer.Trans",
    "sklearn.compose.tests.test_column_transformer.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.compose.tests.test_column_transformer.test_column_transformer_sparse_array": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": [
    "scipy.sparse.eye",
    "scipy.sparse.issparse",
    "sklearn.compose.ColumnTransformer",
    "sklearn.compose.tests.test_column_transformer.Trans",
    "sklearn.utils._testing.assert_allclose_dense_sparse",
    "slice"
   ]
  },
  "type": "function"
 },
 "sklearn.compose.tests.test_column_transformer.test_column_transformer_sparse_remainder_transformer": {
  "data": {
   "lineno": 966,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "numpy.array",
    "numpy.eye",
    "numpy.hstack",
    "scipy.sparse.issparse",
    "sklearn.compose.ColumnTransformer",
    "sklearn.compose.tests.test_column_transformer.SparseMatrixTrans",
    "sklearn.compose.tests.test_column_transformer.Trans",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.compose.tests.test_column_transformer.test_column_transformer_sparse_stacking": {
  "data": {
   "lineno": 359,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "numpy.eye",
    "scipy.sparse.issparse",
    "sklearn.compose.ColumnTransformer",
    "sklearn.compose.tests.test_column_transformer.SparseMatrixTrans",
    "sklearn.compose.tests.test_column_transformer.Trans",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.compose.tests.test_column_transformer.test_column_transformer_sparse_threshold": {
  "data": {
   "lineno": 412,
   "symbols_in_volume": [
    "numpy.array",
    "object",
    "scipy.sparse.issparse",
    "sklearn.compose.ColumnTransformer",
    "sklearn.preprocessing.OneHotEncoder"
   ]
  },
  "type": "function"
 },
 "sklearn.compose.tests.test_column_transformer.test_column_transformer_special_strings": {
  "data": {
   "lineno": 769,
   "symbols_in_volume": [
    "TypeError",
    "len",
    "numpy.array",
    "sklearn.compose.ColumnTransformer",
    "sklearn.compose.tests.test_column_transformer.Trans",
    "sklearn.utils._testing.assert_array_equal",
    "sklearn.utils._testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.compose.tests.test_column_transformer.test_column_transformer_verbose": {
  "data": {
   "lineno": 1064,
   "symbols_in_volume": [
    "func",
    "getattr",
    "numpy.array",
    "sklearn.compose.ColumnTransformer",
    "sklearn.compose.tests.test_column_transformer.DoubleTrans",
    "sklearn.compose.tests.test_column_transformer.Trans",
    "sklearn.compose.tests.test_column_transformer.pytest",
    "sklearn.compose.tests.test_column_transformer.re"
   ]
  },
  "type": "function"
 },
 "sklearn.compose.tests.test_column_transformer.test_column_transformer_with_make_column_selector": {
  "data": {
   "lineno": 1302,
   "symbols_in_volume": [
    "float",
    "int",
    "numpy.array",
    "numpy.number",
    "numpy.testing.assert_allclose",
    "object",
    "sklearn.compose.make_column_selector",
    "sklearn.compose.make_column_transformer",
    "sklearn.compose.tests.test_column_transformer.pytest",
    "sklearn.preprocessing.OneHotEncoder",
    "sklearn.preprocessing.StandardScaler"
   ]
  },
  "type": "function"
 },
 "sklearn.compose.tests.test_column_transformer.test_feature_name_validation": {
  "data": {
   "lineno": 1210,
   "symbols_in_volume": [
    "ValueError",
    "numpy.ones",
    "sklearn.compose.ColumnTransformer",
    "sklearn.compose.tests.test_column_transformer.Trans",
    "sklearn.compose.tests.test_column_transformer.pytest",
    "sklearn.compose.tests.test_column_transformer.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.compose.tests.test_column_transformer.test_feature_names_empty_columns": {
  "data": {
   "lineno": 1353,
   "symbols_in_volume": [
    "int",
    "numpy.array",
    "sklearn.compose.ColumnTransformer",
    "sklearn.compose.tests.test_column_transformer.pytest",
    "sklearn.preprocessing.OneHotEncoder"
   ]
  },
  "type": "function"
 },
 "sklearn.compose.tests.test_column_transformer.test_make_column_selector_error": {
  "data": {
   "lineno": 1330,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "numpy.number",
    "selector",
    "sklearn.compose.make_column_selector",
    "sklearn.compose.tests.test_column_transformer.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.compose.tests.test_column_transformer.test_make_column_selector_pickle": {
  "data": {
   "lineno": 1338,
   "symbols_in_volume": [
    "float",
    "int",
    "numpy.array",
    "object",
    "selector",
    "selector_picked",
    "sklearn.compose.make_column_selector",
    "sklearn.compose.tests.test_column_transformer.pickle",
    "sklearn.compose.tests.test_column_transformer.pytest",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.compose.tests.test_column_transformer.test_make_column_selector_with_select_dtypes": {
  "data": {
   "lineno": 1271,
   "symbols_in_volume": [
    "float",
    "int",
    "numpy.array",
    "numpy.number",
    "object",
    "selector",
    "sklearn.compose.make_column_selector",
    "sklearn.compose.tests.test_column_transformer.pytest",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.compose.tests.test_column_transformer.test_make_column_transformer": {
  "data": {
   "lineno": 544,
   "symbols_in_volume": [
    "sklearn.compose.make_column_transformer",
    "sklearn.preprocessing.Normalizer",
    "sklearn.preprocessing.StandardScaler",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.compose.tests.test_column_transformer.test_make_column_transformer_kwargs": {
  "data": {
   "lineno": 565,
   "symbols_in_volume": [
    "TypeError",
    "sklearn.compose.make_column_transformer",
    "sklearn.preprocessing.Normalizer",
    "sklearn.preprocessing.StandardScaler",
    "sklearn.utils._testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.compose.tests.test_column_transformer.test_make_column_transformer_pandas": {
  "data": {
   "lineno": 554,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.compose.ColumnTransformer",
    "sklearn.compose.make_column_transformer",
    "sklearn.compose.tests.test_column_transformer.pytest",
    "sklearn.preprocessing.Normalizer",
    "sklearn.utils._testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.compose.tests.test_column_transformer.test_make_column_transformer_remainder_transformer": {
  "data": {
   "lineno": 586,
   "symbols_in_volume": [
    "sklearn.compose.make_column_transformer",
    "sklearn.preprocessing.Normalizer",
    "sklearn.preprocessing.StandardScaler"
   ]
  },
  "type": "function"
 },
 "sklearn.compose.tests.test_column_transformer.test_n_features_in": {
  "data": {
   "lineno": 1259,
   "symbols_in_volume": [
    "hasattr",
    "sklearn.compose.ColumnTransformer",
    "sklearn.compose.tests.test_column_transformer.DoubleTrans"
   ]
  },
  "type": "function"
 },
 "sklearn.compose.tests.test_column_transformer.test_sk_visual_block_remainder": {
  "data": {
   "lineno": 1373,
   "symbols_in_volume": [
    "sklearn.compose.ColumnTransformer",
    "sklearn.compose.tests.test_column_transformer.pytest",
    "sklearn.preprocessing.OneHotEncoder",
    "sklearn.preprocessing.StandardScaler"
   ]
  },
  "type": "function"
 },
 "sklearn.compose.tests.test_column_transformer.test_sk_visual_block_remainder_drop": {
  "data": {
   "lineno": 1385,
   "symbols_in_volume": [
    "sklearn.compose.ColumnTransformer",
    "sklearn.preprocessing.OneHotEncoder"
   ]
  },
  "type": "function"
 },
 "sklearn.compose.tests.test_column_transformer.test_sk_visual_block_remainder_fitted_numpy": {
  "data": {
   "lineno": 1411,
   "symbols_in_volume": [
    "float",
    "numpy.array",
    "sklearn.compose.ColumnTransformer",
    "sklearn.compose.tests.test_column_transformer.pytest",
    "sklearn.preprocessing.StandardScaler"
   ]
  },
  "type": "function"
 },
 "sklearn.compose.tests.test_column_transformer.test_sk_visual_block_remainder_fitted_pandas": {
  "data": {
   "lineno": 1395,
   "symbols_in_volume": [
    "sklearn.compose.ColumnTransformer",
    "sklearn.compose.tests.test_column_transformer.pytest",
    "sklearn.preprocessing.OneHotEncoder",
    "sklearn.preprocessing.StandardScaler"
   ]
  },
  "type": "function"
 },
 "sklearn.compose.tests.test_column_transformer.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.compose.tests.test_target": {
  "data": {
   "symbols_in_volume": [
    "sklearn.datasets.make_friedman1"
   ]
  },
  "type": "module"
 },
 "sklearn.compose.tests.test_target.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "sklearn.compose.tests.test_target.DummyCheckerArrayTransformer": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator",
    "sklearn.base.TransformerMixin"
   ]
  },
  "type": "class"
 },
 "sklearn.compose.tests.test_target.DummyCheckerArrayTransformer.fit": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "isinstance",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "sklearn.compose.tests.test_target.DummyCheckerArrayTransformer.inverse_transform": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "isinstance",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "sklearn.compose.tests.test_target.DummyCheckerArrayTransformer.transform": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "isinstance",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "sklearn.compose.tests.test_target.DummyCheckerListRegressor": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "sklearn.dummy.DummyRegressor"
   ]
  },
  "type": "class"
 },
 "sklearn.compose.tests.test_target.DummyCheckerListRegressor.fit": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.compose.tests.test_target.DummyCheckerListRegressor.predict": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.compose.tests.test_target.DummyRegressor": {
  "data": {
   "shadows": "sklearn.dummy.DummyRegressor"
  },
  "type": "import"
 },
 "sklearn.compose.tests.test_target.DummyRegressorWithExtraFitParams": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "sklearn.dummy.DummyRegressor"
   ]
  },
  "type": "class"
 },
 "sklearn.compose.tests.test_target.DummyRegressorWithExtraFitParams.fit": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.compose.tests.test_target.DummyTransformer": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator",
    "sklearn.base.TransformerMixin"
   ]
  },
  "type": "class"
 },
 "sklearn.compose.tests.test_target.DummyTransformer.__init__": {
  "data": {
   "lineno": 275
  },
  "type": "function"
 },
 "sklearn.compose.tests.test_target.DummyTransformer.fit": {
  "data": {
   "lineno": 278
  },
  "type": "function"
 },
 "sklearn.compose.tests.test_target.DummyTransformer.inverse_transform": {
  "data": {
   "lineno": 285
  },
  "type": "function"
 },
 "sklearn.compose.tests.test_target.DummyTransformer.transform": {
  "data": {
   "lineno": 282
  },
  "type": "function"
 },
 "sklearn.compose.tests.test_target.FunctionTransformer": {
  "data": {
   "shadows": "sklearn.preprocessing.FunctionTransformer"
  },
  "type": "import"
 },
 "sklearn.compose.tests.test_target.LinearRegression": {
  "data": {
   "shadows": "sklearn.linear_model.LinearRegression"
  },
  "type": "import"
 },
 "sklearn.compose.tests.test_target.OrthogonalMatchingPursuit": {
  "data": {
   "shadows": "sklearn.linear_model.OrthogonalMatchingPursuit"
  },
  "type": "import"
 },
 "sklearn.compose.tests.test_target.Pipeline": {
  "data": {
   "shadows": "sklearn.pipeline.Pipeline"
  },
  "type": "import"
 },
 "sklearn.compose.tests.test_target.StandardScaler": {
  "data": {
   "shadows": "sklearn.preprocessing.StandardScaler"
  },
  "type": "import"
 },
 "sklearn.compose.tests.test_target.TransformedTargetRegressor": {
  "data": {
   "shadows": "sklearn.compose.TransformedTargetRegressor"
  },
  "type": "import"
 },
 "sklearn.compose.tests.test_target.TransformerMixin": {
  "data": {
   "shadows": "sklearn.base.TransformerMixin"
  },
  "type": "import"
 },
 "sklearn.compose.tests.test_target._check_shifted_by_one": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "sklearn.utils._testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "sklearn.compose.tests.test_target._check_standard_scaled": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "numpy.mean",
    "numpy.std",
    "sklearn.utils._testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "sklearn.compose.tests.test_target.assert_allclose": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_allclose"
  },
  "type": "import"
 },
 "sklearn.compose.tests.test_target.assert_no_warnings": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_no_warnings"
  },
  "type": "import"
 },
 "sklearn.compose.tests.test_target.assert_warns_message": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_warns_message"
  },
  "type": "import"
 },
 "sklearn.compose.tests.test_target.clone": {
  "data": {
   "shadows": "sklearn.base.clone"
  },
  "type": "import"
 },
 "sklearn.compose.tests.test_target.datasets": {
  "data": {
   "shadows": "sklearn.datasets"
  },
  "type": "import"
 },
 "sklearn.compose.tests.test_target.friedman": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "sklearn.compose.tests.test_target.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.compose.tests.test_target.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.compose.tests.test_target.test_transform_target_regressor_1d_transformer": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "numpy.vstack",
    "sklearn.base.clone",
    "sklearn.compose.TransformedTargetRegressor",
    "sklearn.compose.tests.test_target._check_shifted_by_one",
    "sklearn.compose.tests.test_target.friedman",
    "sklearn.compose.tests.test_target.pytest",
    "sklearn.linear_model.LinearRegression",
    "sklearn.preprocessing.FunctionTransformer",
    "sklearn.utils._testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "sklearn.compose.tests.test_target.test_transform_target_regressor_2d_transformer": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "numpy.vstack",
    "sklearn.base.clone",
    "sklearn.compose.TransformedTargetRegressor",
    "sklearn.compose.tests.test_target._check_standard_scaled",
    "sklearn.compose.tests.test_target.friedman",
    "sklearn.compose.tests.test_target.pytest",
    "sklearn.linear_model.LinearRegression",
    "sklearn.preprocessing.StandardScaler",
    "sklearn.utils._testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "sklearn.compose.tests.test_target.test_transform_target_regressor_2d_transformer_multioutput": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "numpy.vstack",
    "sklearn.base.clone",
    "sklearn.compose.TransformedTargetRegressor",
    "sklearn.compose.tests.test_target._check_standard_scaled",
    "sklearn.compose.tests.test_target.friedman",
    "sklearn.linear_model.LinearRegression",
    "sklearn.preprocessing.StandardScaler",
    "sklearn.utils._testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "sklearn.compose.tests.test_target.test_transform_target_regressor_count_fit": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "sklearn.compose.TransformedTargetRegressor",
    "sklearn.compose.tests.test_target.DummyTransformer",
    "sklearn.compose.tests.test_target.friedman",
    "sklearn.compose.tests.test_target.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.compose.tests.test_target.test_transform_target_regressor_ensure_y_array": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "AssertionError",
    "sklearn.compose.TransformedTargetRegressor",
    "sklearn.compose.tests.test_target.DummyCheckerArrayTransformer",
    "sklearn.compose.tests.test_target.DummyCheckerListRegressor",
    "sklearn.compose.tests.test_target.friedman",
    "sklearn.compose.tests.test_target.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.compose.tests.test_target.test_transform_target_regressor_error": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "numpy.exp",
    "numpy.log",
    "numpy.ones",
    "sklearn.compose.TransformedTargetRegressor",
    "sklearn.compose.tests.test_target.friedman",
    "sklearn.compose.tests.test_target.pytest",
    "sklearn.linear_model.LinearRegression",
    "sklearn.linear_model.OrthogonalMatchingPursuit",
    "sklearn.preprocessing.StandardScaler"
   ]
  },
  "type": "function"
 },
 "sklearn.compose.tests.test_target.test_transform_target_regressor_functions": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "numpy.exp",
    "numpy.log",
    "sklearn.compose.TransformedTargetRegressor",
    "sklearn.compose.tests.test_target.friedman",
    "sklearn.linear_model.LinearRegression",
    "sklearn.utils._testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "sklearn.compose.tests.test_target.test_transform_target_regressor_functions_multioutput": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "numpy.exp",
    "numpy.log",
    "numpy.vstack",
    "sklearn.compose.TransformedTargetRegressor",
    "sklearn.compose.tests.test_target.friedman",
    "sklearn.linear_model.LinearRegression",
    "sklearn.utils._testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "sklearn.compose.tests.test_target.test_transform_target_regressor_invertible": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "UserWarning",
    "numpy.log",
    "numpy.sqrt",
    "sklearn.compose.TransformedTargetRegressor",
    "sklearn.compose.tests.test_target.friedman",
    "sklearn.linear_model.LinearRegression",
    "sklearn.utils._testing.assert_no_warnings",
    "sklearn.utils._testing.assert_warns_message"
   ]
  },
  "type": "function"
 },
 "sklearn.compose.tests.test_target.test_transform_target_regressor_multi_to_single": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "numpy.transpose",
    "sklearn.compose.TransformedTargetRegressor",
    "sklearn.compose.tests.test_target.friedman",
    "sklearn.utils._testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "sklearn.compose.tests.test_target.test_transform_target_regressor_multi_to_single.func": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "sklearn.compose.tests.test_target.test_transform_target_regressor_multi_to_single.inverse_func": {
  "data": {
   "lineno": 209
  },
  "type": "function"
 },
 "sklearn.compose.tests.test_target.test_transform_target_regressor_pass_fit_parameters": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": [
    "sklearn.compose.TransformedTargetRegressor",
    "sklearn.compose.tests.test_target.DummyRegressorWithExtraFitParams",
    "sklearn.compose.tests.test_target.DummyTransformer",
    "sklearn.compose.tests.test_target.friedman"
   ]
  },
  "type": "function"
 },
 "sklearn.compose.tests.test_target.test_transform_target_regressor_route_pipeline": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": [
    "sklearn.compose.TransformedTargetRegressor",
    "sklearn.compose.tests.test_target.DummyRegressorWithExtraFitParams",
    "sklearn.compose.tests.test_target.DummyTransformer",
    "sklearn.compose.tests.test_target.friedman",
    "sklearn.pipeline.Pipeline",
    "sklearn.preprocessing.StandardScaler"
   ]
  },
  "type": "function"
 },
 "sklearn.conftest": {
  "data": {},
  "type": "module"
 },
 "sklearn.conftest._openmp_effective_n_threads": {
  "data": {
   "shadows": "sklearn.utils._openmp_helpers._openmp_effective_n_threads"
  },
  "type": "import"
 },
 "sklearn.conftest.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "sklearn.conftest.pyplot": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "sklearn.conftest.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.conftest.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.conftest.pytest_runtest_setup": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "KeyError",
    "int",
    "max",
    "sklearn.conftest.os",
    "sklearn.utils._openmp_helpers._openmp_effective_n_threads",
    "threadpoolctl.threadpool_limits"
   ]
  },
  "type": "function"
 },
 "sklearn.conftest.threadpool_limits": {
  "data": {
   "shadows": "threadpoolctl.threadpool_limits"
  },
  "type": "import"
 },
 "sklearn.covariance": {
  "data": {},
  "type": "module"
 },
 "sklearn.covariance.__all__": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "sklearn.covariance._elliptic_envelope": {
  "data": {},
  "type": "module"
 },
 "sklearn.covariance._elliptic_envelope.EllipticEnvelope": {
  "data": {
   "lineno": 13
  },
  "type": "class"
 },
 "sklearn.covariance._elliptic_envelope.EllipticEnvelope.__init__": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance._elliptic_envelope.EllipticEnvelope.decision_function": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "check_is_fitted"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance._elliptic_envelope.EllipticEnvelope.fit": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "numpy.percentile",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance._elliptic_envelope.EllipticEnvelope.predict": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "check_array",
    "int",
    "numpy.full"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance._elliptic_envelope.EllipticEnvelope.score": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "accuracy_score"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance._elliptic_envelope.EllipticEnvelope.score_samples": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "check_is_fitted"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance._elliptic_envelope.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.covariance._empirical_covariance": {
  "data": {},
  "type": "module"
 },
 "sklearn.covariance._empirical_covariance.EmpiricalCovariance": {
  "data": {
   "lineno": 101
  },
  "type": "class"
 },
 "sklearn.covariance._empirical_covariance.EmpiricalCovariance.__init__": {
  "data": {
   "lineno": 148
  },
  "type": "function"
 },
 "sklearn.covariance._empirical_covariance.EmpiricalCovariance._set_covariance": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "check_array",
    "scipy.linalg.pinvh"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance._empirical_covariance.EmpiricalCovariance.error_norm": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "NotImplementedError",
    "numpy.amax",
    "numpy.dot",
    "numpy.sqrt",
    "numpy.sum",
    "scipy.linalg.svdvals"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance._empirical_covariance.EmpiricalCovariance.fit": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "numpy.zeros",
    "sklearn.covariance._empirical_covariance.empirical_covariance"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance._empirical_covariance.EmpiricalCovariance.get_precision": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "scipy.linalg.pinvh"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance._empirical_covariance.EmpiricalCovariance.mahalanobis": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "len",
    "numpy.newaxis",
    "numpy.reshape",
    "pairwise_distances"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance._empirical_covariance.EmpiricalCovariance.score": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "sklearn.covariance._empirical_covariance.empirical_covariance",
    "sklearn.covariance._empirical_covariance.log_likelihood"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance._empirical_covariance.empirical_covariance": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.asarray",
    "numpy.cov",
    "numpy.dot",
    "numpy.reshape",
    "sklearn.covariance._empirical_covariance.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance._empirical_covariance.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "sklearn.covariance._empirical_covariance.log_likelihood": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "fast_logdet",
    "numpy.log",
    "numpy.pi",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance._empirical_covariance.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.covariance._empirical_covariance.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.covariance._graph_lasso": {
  "data": {},
  "type": "module"
 },
 "sklearn.covariance._graph_lasso.GraphicalLasso": {
  "data": {
   "lineno": 287
  },
  "type": "class"
 },
 "sklearn.covariance._graph_lasso.GraphicalLasso.__init__": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance._graph_lasso.GraphicalLasso.fit": {
  "data": {
   "lineno": 380,
   "symbols_in_volume": [
    "empirical_covariance",
    "numpy.zeros",
    "sklearn.covariance._graph_lasso.graphical_lasso"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance._graph_lasso.GraphicalLassoCV": {
  "data": {
   "lineno": 514,
   "symbols_in_volume": [
    "sklearn.covariance._graph_lasso.GraphicalLasso"
   ]
  },
  "type": "class"
 },
 "sklearn.covariance._graph_lasso.GraphicalLassoCV.__init__": {
  "data": {
   "lineno": 678,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance._graph_lasso.GraphicalLassoCV.cv_alphas_": {
  "data": {
   "lineno": 849,
   "symbols_in_volume": [
    "deprecated",
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance._graph_lasso.GraphicalLassoCV.fit": {
  "data": {
   "lineno": 690,
   "symbols_in_volume": [
    "EmpiricalCovariance",
    "check_cv",
    "collections.abc.Sequence",
    "cross_val_score",
    "delayed",
    "empirical_covariance",
    "enumerate",
    "int",
    "isinstance",
    "joblib.Parallel",
    "len",
    "list",
    "max",
    "numpy.array",
    "numpy.finfo",
    "numpy.float64",
    "numpy.inf",
    "numpy.isfinite",
    "numpy.log10",
    "numpy.logspace",
    "numpy.mean",
    "numpy.nan",
    "numpy.std",
    "numpy.zeros",
    "print",
    "range",
    "sklearn.covariance._graph_lasso.alpha_max",
    "sklearn.covariance._graph_lasso.graphical_lasso",
    "sklearn.covariance._graph_lasso.graphical_lasso_path",
    "sklearn.covariance._graph_lasso.operator",
    "sklearn.covariance._graph_lasso.time",
    "sklearn.covariance._graph_lasso.warnings",
    "sorted",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance._graph_lasso.GraphicalLassoCV.grid_scores_": {
  "data": {
   "lineno": 835,
   "symbols_in_volume": [
    "deprecated",
    "len",
    "numpy.asarray",
    "property",
    "range"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance._graph_lasso.Parallel": {
  "data": {
   "shadows": "joblib.Parallel"
  },
  "type": "import"
 },
 "sklearn.covariance._graph_lasso.Sequence": {
  "data": {
   "shadows": "collections.abc.Sequence"
  },
  "type": "import"
 },
 "sklearn.covariance._graph_lasso._dual_gap": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.diag",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance._graph_lasso._objective": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "log_likelihood",
    "numpy.abs",
    "numpy.diag",
    "numpy.log",
    "numpy.pi"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance._graph_lasso.alpha_max": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.copy",
    "numpy.max"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance._graph_lasso.cd_fast": {
  "data": {
   "shadows": "_cd_fast"
  },
  "type": "import"
 },
 "sklearn.covariance._graph_lasso.graphical_lasso": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "FloatingPointError",
    "check_random_state",
    "dict",
    "lars_path_gram",
    "list",
    "log_likelihood",
    "numpy.abs",
    "numpy.arange",
    "numpy.copy",
    "numpy.dot",
    "numpy.errstate",
    "numpy.finfo",
    "numpy.float64",
    "numpy.inf",
    "numpy.isfinite",
    "numpy.log",
    "numpy.pi",
    "numpy.sum",
    "print",
    "range",
    "scipy.linalg.inv",
    "scipy.linalg.pinvh",
    "sklearn.covariance._graph_lasso._dual_gap",
    "sklearn.covariance._graph_lasso._objective",
    "sklearn.covariance._graph_lasso.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance._graph_lasso.graphical_lasso_path": {
  "data": {
   "lineno": 413,
   "symbols_in_volume": [
    "FloatingPointError",
    "empirical_covariance",
    "list",
    "log_likelihood",
    "max",
    "numpy.inf",
    "numpy.isfinite",
    "numpy.nan",
    "print",
    "sklearn.covariance._graph_lasso.graphical_lasso",
    "sklearn.covariance._graph_lasso.sys"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance._graph_lasso.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "sklearn.covariance._graph_lasso.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.covariance._graph_lasso.operator": {
  "data": {
   "shadows": "operator"
  },
  "type": "import"
 },
 "sklearn.covariance._graph_lasso.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "sklearn.covariance._graph_lasso.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "sklearn.covariance._graph_lasso.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.covariance._robust_covariance": {
  "data": {},
  "type": "module"
 },
 "sklearn.covariance._robust_covariance.MinCovDet": {
  "data": {
   "lineno": 516,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "class"
 },
 "sklearn.covariance._robust_covariance.MinCovDet.__init__": {
  "data": {
   "lineno": 618
  },
  "type": "function"
 },
 "sklearn.covariance._robust_covariance.MinCovDet.correct_covariance": {
  "data": {
   "lineno": 674,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.allclose",
    "numpy.median",
    "numpy.sum",
    "scipy.stats.chi2"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance._robust_covariance.MinCovDet.fit": {
  "data": {
   "lineno": 626,
   "symbols_in_volume": [
    "check_random_state",
    "numpy.dot",
    "numpy.sum",
    "numpy.zeros",
    "scipy.linalg.pinvh",
    "scipy.linalg.svdvals",
    "sklearn.covariance._robust_covariance.fast_mcd",
    "sklearn.covariance._robust_covariance.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance._robust_covariance.MinCovDet.reweight_covariance": {
  "data": {
   "lineno": 712,
   "symbols_in_volume": [
    "bool",
    "numpy.dot",
    "numpy.sum",
    "numpy.zeros",
    "scipy.stats.chi2"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance._robust_covariance._c_step": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "RuntimeWarning",
    "bool",
    "cov_computation_method",
    "fast_logdet",
    "numpy.allclose",
    "numpy.argsort",
    "numpy.dot",
    "numpy.inf",
    "numpy.isinf",
    "numpy.zeros",
    "print",
    "scipy.linalg.pinvh",
    "sklearn.covariance._robust_covariance.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance._robust_covariance.c_step": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "check_random_state",
    "numpy.asarray",
    "sklearn.covariance._robust_covariance._c_step"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance._robust_covariance.chi2": {
  "data": {
   "shadows": "scipy.stats.chi2"
  },
  "type": "import"
 },
 "sklearn.covariance._robust_covariance.fast_mcd": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": [
    "MemoryError",
    "bool",
    "check_array",
    "check_random_state",
    "cov_computation_method",
    "float",
    "int",
    "max",
    "min",
    "numpy.abs",
    "numpy.arange",
    "numpy.argsort",
    "numpy.array",
    "numpy.asarray",
    "numpy.ceil",
    "numpy.dot",
    "numpy.mean",
    "numpy.min",
    "numpy.ones",
    "numpy.ravel",
    "numpy.sort",
    "numpy.var",
    "numpy.where",
    "numpy.zeros",
    "range",
    "scipy.linalg.pinvh",
    "sklearn.covariance._robust_covariance.select_candidates"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance._robust_covariance.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "sklearn.covariance._robust_covariance.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.covariance._robust_covariance.numbers": {
  "data": {
   "shadows": "numbers"
  },
  "type": "import"
 },
 "sklearn.covariance._robust_covariance.select_candidates": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "TypeError",
    "check_random_state",
    "cov_computation_method",
    "isinstance",
    "numpy.argsort",
    "numpy.asarray",
    "range",
    "sklearn.covariance._robust_covariance._c_step",
    "sklearn.covariance._robust_covariance.numbers",
    "tuple",
    "type",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance._robust_covariance.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.covariance._shrunk_covariance": {
  "data": {},
  "type": "module"
 },
 "sklearn.covariance._shrunk_covariance.LedoitWolf": {
  "data": {
   "lineno": 319
  },
  "type": "class"
 },
 "sklearn.covariance._shrunk_covariance.LedoitWolf.__init__": {
  "data": {
   "lineno": 394,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance._shrunk_covariance.LedoitWolf.fit": {
  "data": {
   "lineno": 401,
   "symbols_in_volume": [
    "numpy.zeros",
    "sklearn.covariance._shrunk_covariance.ledoit_wolf"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance._shrunk_covariance.OAS": {
  "data": {
   "lineno": 499
  },
  "type": "class"
 },
 "sklearn.covariance._shrunk_covariance.OAS.fit": {
  "data": {
   "lineno": 577,
   "symbols_in_volume": [
    "numpy.zeros",
    "sklearn.covariance._shrunk_covariance.oas"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance._shrunk_covariance.ShrunkCovariance": {
  "data": {
   "lineno": 63
  },
  "type": "class"
 },
 "sklearn.covariance._shrunk_covariance.ShrunkCovariance.__init__": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance._shrunk_covariance.ShrunkCovariance.fit": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "empirical_covariance",
    "numpy.zeros",
    "sklearn.covariance._shrunk_covariance.shrunk_covariance"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance._shrunk_covariance.ledoit_wolf": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "empirical_covariance",
    "len",
    "numpy.asarray",
    "numpy.atleast_2d",
    "numpy.reshape",
    "numpy.sum",
    "numpy.trace",
    "sklearn.covariance._shrunk_covariance.ledoit_wolf_shrinkage",
    "sklearn.covariance._shrunk_covariance.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance._shrunk_covariance.ledoit_wolf_shrinkage": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "int",
    "len",
    "min",
    "numpy.asarray",
    "numpy.dot",
    "numpy.reshape",
    "numpy.sum",
    "range",
    "sklearn.covariance._shrunk_covariance.warnings",
    "slice"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance._shrunk_covariance.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.covariance._shrunk_covariance.oas": {
  "data": {
   "lineno": 434,
   "symbols_in_volume": [
    "empirical_covariance",
    "len",
    "min",
    "numpy.asarray",
    "numpy.atleast_2d",
    "numpy.mean",
    "numpy.reshape",
    "numpy.trace",
    "sklearn.covariance._shrunk_covariance.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance._shrunk_covariance.shrunk_covariance": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "check_array",
    "numpy.trace"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance._shrunk_covariance.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.covariance.tests": {
  "data": {},
  "type": "module"
 },
 "sklearn.covariance.tests.test_covariance": {
  "data": {
   "symbols_in_volume": [
    "sklearn.datasets.load_diabetes"
   ]
  },
  "type": "module"
 },
 "sklearn.covariance.tests.test_covariance.EmpiricalCovariance": {
  "data": {
   "shadows": "sklearn.covariance.EmpiricalCovariance"
  },
  "type": "import"
 },
 "sklearn.covariance.tests.test_covariance.LedoitWolf": {
  "data": {
   "shadows": "sklearn.covariance.LedoitWolf"
  },
  "type": "import"
 },
 "sklearn.covariance.tests.test_covariance.OAS": {
  "data": {
   "shadows": "sklearn.covariance.OAS"
  },
  "type": "import"
 },
 "sklearn.covariance.tests.test_covariance.ShrunkCovariance": {
  "data": {
   "shadows": "sklearn.covariance.ShrunkCovariance"
  },
  "type": "import"
 },
 "sklearn.covariance.tests.test_covariance.X_1d": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "sklearn.covariance.tests.test_covariance._naive_ledoit_wolf_shrinkage": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "min",
    "numpy.dot",
    "numpy.sum",
    "numpy.trace",
    "sklearn.covariance.empirical_covariance"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance.tests.test_covariance.assert_almost_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_almost_equal"
  },
  "type": "import"
 },
 "sklearn.covariance.tests.test_covariance.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.covariance.tests.test_covariance.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.covariance.tests.test_covariance.assert_warns": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_warns"
  },
  "type": "import"
 },
 "sklearn.covariance.tests.test_covariance.datasets": {
  "data": {
   "shadows": "sklearn.datasets"
  },
  "type": "import"
 },
 "sklearn.covariance.tests.test_covariance.empirical_covariance": {
  "data": {
   "shadows": "sklearn.covariance.empirical_covariance"
  },
  "type": "import"
 },
 "sklearn.covariance.tests.test_covariance.ledoit_wolf": {
  "data": {
   "shadows": "sklearn.covariance.ledoit_wolf"
  },
  "type": "import"
 },
 "sklearn.covariance.tests.test_covariance.ledoit_wolf_shrinkage": {
  "data": {
   "shadows": "sklearn.covariance.ledoit_wolf_shrinkage"
  },
  "type": "import"
 },
 "sklearn.covariance.tests.test_covariance.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.covariance.tests.test_covariance.oas": {
  "data": {
   "shadows": "sklearn.covariance.oas"
  },
  "type": "import"
 },
 "sklearn.covariance.tests.test_covariance.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.covariance.tests.test_covariance.shrunk_covariance": {
  "data": {
   "shadows": "sklearn.covariance.shrunk_covariance"
  },
  "type": "import"
 },
 "sklearn.covariance.tests.test_covariance.test_covariance": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "NotImplementedError",
    "UserWarning",
    "numpy.amin",
    "numpy.arange",
    "numpy.asarray",
    "numpy.float64",
    "numpy.zeros",
    "sklearn.covariance.EmpiricalCovariance",
    "sklearn.covariance.empirical_covariance",
    "sklearn.covariance.tests.test_covariance.X_1d",
    "sklearn.covariance.tests.test_covariance.pytest",
    "sklearn.utils._testing.assert_almost_equal",
    "sklearn.utils._testing.assert_array_almost_equal",
    "sklearn.utils._testing.assert_array_equal",
    "sklearn.utils._testing.assert_warns"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance.tests.test_covariance.test_ledoit_wolf": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "UserWarning",
    "numpy.arange",
    "numpy.float64",
    "numpy.zeros",
    "sklearn.covariance.LedoitWolf",
    "sklearn.covariance.ShrunkCovariance",
    "sklearn.covariance.empirical_covariance",
    "sklearn.covariance.ledoit_wolf",
    "sklearn.covariance.ledoit_wolf_shrinkage",
    "sklearn.covariance.tests.test_covariance.X_1d",
    "sklearn.utils._testing.assert_almost_equal",
    "sklearn.utils._testing.assert_array_almost_equal",
    "sklearn.utils._testing.assert_warns"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance.tests.test_covariance.test_ledoit_wolf_large": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "numpy.eye",
    "numpy.random.RandomState",
    "sklearn.covariance.LedoitWolf",
    "sklearn.utils._testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance.tests.test_covariance.test_ledoit_wolf_small": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "sklearn.covariance.LedoitWolf",
    "sklearn.covariance.tests.test_covariance._naive_ledoit_wolf_shrinkage",
    "sklearn.utils._testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance.tests.test_covariance.test_oas": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "UserWarning",
    "numpy.arange",
    "numpy.float64",
    "numpy.zeros",
    "sklearn.covariance.OAS",
    "sklearn.covariance.ShrunkCovariance",
    "sklearn.covariance.empirical_covariance",
    "sklearn.covariance.oas",
    "sklearn.covariance.tests.test_covariance.X_1d",
    "sklearn.utils._testing.assert_almost_equal",
    "sklearn.utils._testing.assert_array_almost_equal",
    "sklearn.utils._testing.assert_warns"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance.tests.test_covariance.test_shrunk_covariance": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "sklearn.covariance.ShrunkCovariance",
    "sklearn.covariance.empirical_covariance",
    "sklearn.covariance.shrunk_covariance",
    "sklearn.covariance.tests.test_covariance.X_1d",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance.tests.test_elliptic_envelope": {
  "data": {},
  "type": "module"
 },
 "sklearn.covariance.tests.test_elliptic_envelope.EllipticEnvelope": {
  "data": {
   "shadows": "sklearn.covariance.EllipticEnvelope"
  },
  "type": "import"
 },
 "sklearn.covariance.tests.test_elliptic_envelope.NotFittedError": {
  "data": {
   "shadows": "sklearn.exceptions.NotFittedError"
  },
  "type": "import"
 },
 "sklearn.covariance.tests.test_elliptic_envelope.assert_almost_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_almost_equal"
  },
  "type": "import"
 },
 "sklearn.covariance.tests.test_elliptic_envelope.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.covariance.tests.test_elliptic_envelope.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.covariance.tests.test_elliptic_envelope.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.covariance.tests.test_elliptic_envelope.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.covariance.tests.test_elliptic_envelope.test_elliptic_envelope": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "numpy.ones",
    "numpy.random.RandomState",
    "sklearn.covariance.EllipticEnvelope",
    "sklearn.covariance.tests.test_elliptic_envelope.pytest",
    "sklearn.exceptions.NotFittedError",
    "sklearn.utils._testing.assert_almost_equal",
    "sklearn.utils._testing.assert_array_almost_equal",
    "sum"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance.tests.test_elliptic_envelope.test_score_samples": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "sklearn.covariance.EllipticEnvelope",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance.tests.test_graphical_lasso": {
  "data": {},
  "type": "module"
 },
 "sklearn.covariance.tests.test_graphical_lasso.GraphicalLasso": {
  "data": {
   "shadows": "sklearn.covariance.GraphicalLasso"
  },
  "type": "import"
 },
 "sklearn.covariance.tests.test_graphical_lasso.GraphicalLassoCV": {
  "data": {
   "shadows": "sklearn.covariance.GraphicalLassoCV"
  },
  "type": "import"
 },
 "sklearn.covariance.tests.test_graphical_lasso.StringIO": {
  "data": {
   "shadows": "io.StringIO"
  },
  "type": "import"
 },
 "sklearn.covariance.tests.test_graphical_lasso.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "sklearn.covariance.tests.test_graphical_lasso.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.covariance.tests.test_graphical_lasso.assert_array_less": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_array_less"
  },
  "type": "import"
 },
 "sklearn.covariance.tests.test_graphical_lasso.check_random_state": {
  "data": {
   "shadows": "sklearn.utils.check_random_state"
  },
  "type": "import"
 },
 "sklearn.covariance.tests.test_graphical_lasso.datasets": {
  "data": {
   "shadows": "sklearn.datasets"
  },
  "type": "import"
 },
 "sklearn.covariance.tests.test_graphical_lasso.empirical_covariance": {
  "data": {
   "shadows": "sklearn.covariance.empirical_covariance"
  },
  "type": "import"
 },
 "sklearn.covariance.tests.test_graphical_lasso.graphical_lasso": {
  "data": {
   "shadows": "sklearn.covariance.graphical_lasso"
  },
  "type": "import"
 },
 "sklearn.covariance.tests.test_graphical_lasso.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "sklearn.covariance.tests.test_graphical_lasso.make_sparse_spd_matrix": {
  "data": {
   "shadows": "sklearn.datasets.make_sparse_spd_matrix"
  },
  "type": "import"
 },
 "sklearn.covariance.tests.test_graphical_lasso.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.covariance.tests.test_graphical_lasso.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.covariance.tests.test_graphical_lasso.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "sklearn.covariance.tests.test_graphical_lasso.test_graph_lasso_2D": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.covariance.empirical_covariance",
    "sklearn.covariance.graphical_lasso",
    "sklearn.datasets.load_iris",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance.tests.test_graphical_lasso.test_graphical_lasso": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "dict",
    "list",
    "numpy.array",
    "numpy.diff",
    "numpy.zeros",
    "scipy.linalg.inv",
    "sklearn.covariance.GraphicalLasso",
    "sklearn.covariance.empirical_covariance",
    "sklearn.covariance.graphical_lasso",
    "sklearn.datasets.make_sparse_spd_matrix",
    "sklearn.utils._testing.assert_array_almost_equal",
    "sklearn.utils._testing.assert_array_less",
    "sklearn.utils.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance.tests.test_graphical_lasso.test_graphical_lasso_cv": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "io.StringIO",
    "numpy.zeros",
    "scipy.linalg.inv",
    "sklearn.covariance.GraphicalLassoCV",
    "sklearn.covariance.tests.test_graphical_lasso.sys",
    "sklearn.datasets.make_sparse_spd_matrix",
    "sklearn.utils.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance.tests.test_graphical_lasso.test_graphical_lasso_cv_grid_scores_and_cv_alphas_deprecated": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "FutureWarning",
    "len",
    "numpy.array",
    "numpy.random.RandomState",
    "sklearn.covariance.GraphicalLassoCV",
    "sklearn.covariance.tests.test_graphical_lasso.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance.tests.test_graphical_lasso.test_graphical_lasso_cv_scores": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "numpy.asarray",
    "numpy.random.RandomState",
    "numpy.testing.assert_allclose",
    "range",
    "sklearn.covariance.GraphicalLassoCV"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance.tests.test_graphical_lasso.test_graphical_lasso_iris": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.covariance.empirical_covariance",
    "sklearn.covariance.graphical_lasso",
    "sklearn.datasets.load_iris",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance.tests.test_graphical_lasso.test_graphical_lasso_iris_singular": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "sklearn.covariance.empirical_covariance",
    "sklearn.covariance.graphical_lasso",
    "sklearn.datasets.load_iris",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance.tests.test_robust_covariance": {
  "data": {
   "symbols_in_volume": [
    "sklearn.covariance.tests.test_robust_covariance.X",
    "sklearn.datasets.load_iris"
   ]
  },
  "type": "module"
 },
 "sklearn.covariance.tests.test_robust_covariance.MinCovDet": {
  "data": {
   "shadows": "sklearn.covariance.MinCovDet"
  },
  "type": "import"
 },
 "sklearn.covariance.tests.test_robust_covariance.X": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "sklearn.covariance.tests.test_robust_covariance.X_1d": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "sklearn.covariance.tests.test_robust_covariance.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.covariance.tests.test_robust_covariance.assert_raise_message": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_raise_message"
  },
  "type": "import"
 },
 "sklearn.covariance.tests.test_robust_covariance.assert_warns_message": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_warns_message"
  },
  "type": "import"
 },
 "sklearn.covariance.tests.test_robust_covariance.datasets": {
  "data": {
   "shadows": "sklearn.datasets"
  },
  "type": "import"
 },
 "sklearn.covariance.tests.test_robust_covariance.empirical_covariance": {
  "data": {
   "shadows": "sklearn.covariance.empirical_covariance"
  },
  "type": "import"
 },
 "sklearn.covariance.tests.test_robust_covariance.fast_mcd": {
  "data": {
   "shadows": "sklearn.covariance.fast_mcd"
  },
  "type": "import"
 },
 "sklearn.covariance.tests.test_robust_covariance.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "sklearn.covariance.tests.test_robust_covariance.launch_mcd_on_dataset": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "bool",
    "numpy.mean",
    "numpy.ones",
    "numpy.random.RandomState",
    "numpy.sum",
    "sklearn.covariance.MinCovDet",
    "sklearn.covariance.empirical_covariance",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance.tests.test_robust_covariance.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.covariance.tests.test_robust_covariance.test_fast_mcd_on_invalid_input": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "ValueError",
    "numpy.arange",
    "sklearn.covariance.fast_mcd",
    "sklearn.covariance.tests.test_robust_covariance.X",
    "sklearn.utils._testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance.tests.test_robust_covariance.test_mcd": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "sklearn.covariance.tests.test_robust_covariance.launch_mcd_on_dataset"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance.tests.test_robust_covariance.test_mcd_class_on_invalid_input": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "ValueError",
    "numpy.arange",
    "sklearn.covariance.MinCovDet",
    "sklearn.covariance.tests.test_robust_covariance.X",
    "sklearn.utils._testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance.tests.test_robust_covariance.test_mcd_increasing_det_warning": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "RuntimeWarning",
    "sklearn.covariance.MinCovDet",
    "sklearn.covariance.tests.test_robust_covariance.X",
    "sklearn.utils._testing.assert_warns_message"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance.tests.test_robust_covariance.test_mcd_issue1127": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.covariance.MinCovDet",
    "sklearn.covariance.tests.test_robust_covariance.X"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance.tests.test_robust_covariance.test_mcd_issue3367": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "list",
    "numpy.array",
    "numpy.hstack",
    "numpy.linspace",
    "numpy.random.RandomState",
    "numpy.zeros",
    "sklearn.covariance.MinCovDet",
    "sklearn.covariance.tests.test_robust_covariance.itertools"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance.tests.test_robust_covariance.test_mcd_support_covariance_is_zero": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "sklearn.covariance.MinCovDet",
    "sklearn.covariance.tests.test_robust_covariance.X",
    "sklearn.utils._testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.cross_decomposition": {
  "data": {},
  "type": "module"
 },
 "sklearn.cross_decomposition.__all__": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "sklearn.cross_decomposition._pls": {
  "data": {},
  "type": "module"
 },
 "sklearn.cross_decomposition._pls.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "sklearn.cross_decomposition._pls.CCA": {
  "data": {
   "lineno": 689,
   "symbols_in_volume": [
    "sklearn.cross_decomposition._pls._PLS"
   ]
  },
  "type": "class"
 },
 "sklearn.cross_decomposition._pls.CCA.__init__": {
  "data": {
   "lineno": 778,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.cross_decomposition._pls.PLSCanonical": {
  "data": {
   "lineno": 575,
   "symbols_in_volume": [
    "sklearn.cross_decomposition._pls._PLS"
   ]
  },
  "type": "class"
 },
 "sklearn.cross_decomposition._pls.PLSCanonical.__init__": {
  "data": {
   "lineno": 679,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.cross_decomposition._pls.PLSRegression": {
  "data": {
   "lineno": 474,
   "symbols_in_volume": [
    "sklearn.cross_decomposition._pls._PLS"
   ]
  },
  "type": "class"
 },
 "sklearn.cross_decomposition._pls.PLSRegression.__init__": {
  "data": {
   "lineno": 565,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.cross_decomposition._pls.PLSSVD": {
  "data": {
   "lineno": 787
  },
  "type": "class"
 },
 "sklearn.cross_decomposition._pls.PLSSVD.__init__": {
  "data": {
   "lineno": 861
  },
  "type": "function"
 },
 "sklearn.cross_decomposition._pls.PLSSVD.fit": {
  "data": {
   "lineno": 867,
   "symbols_in_volume": [
    "FutureWarning",
    "check_array",
    "check_consistent_length",
    "min",
    "numpy.dot",
    "numpy.float64",
    "scipy.linalg.svd",
    "sklearn.cross_decomposition._pls._center_scale_xy",
    "sklearn.cross_decomposition._pls.warnings",
    "svd_flip"
   ]
  },
  "type": "function"
 },
 "sklearn.cross_decomposition._pls.PLSSVD.fit_transform": {
  "data": {
   "lineno": 999
  },
  "type": "function"
 },
 "sklearn.cross_decomposition._pls.PLSSVD.transform": {
  "data": {
   "lineno": 967,
   "symbols_in_volume": [
    "check_array",
    "check_is_fitted",
    "numpy.dot",
    "numpy.float64"
   ]
  },
  "type": "function"
 },
 "sklearn.cross_decomposition._pls.PLSSVD.x_mean_": {
  "data": {
   "lineno": 939,
   "symbols_in_volume": [
    "deprecated",
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.cross_decomposition._pls.PLSSVD.x_scores_": {
  "data": {
   "lineno": 920,
   "symbols_in_volume": [
    "deprecated",
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.cross_decomposition._pls.PLSSVD.x_std_": {
  "data": {
   "lineno": 953,
   "symbols_in_volume": [
    "deprecated",
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.cross_decomposition._pls.PLSSVD.y_mean_": {
  "data": {
   "lineno": 946,
   "symbols_in_volume": [
    "deprecated",
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.cross_decomposition._pls.PLSSVD.y_scores_": {
  "data": {
   "lineno": 930,
   "symbols_in_volume": [
    "deprecated",
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.cross_decomposition._pls.PLSSVD.y_std_": {
  "data": {
   "lineno": 960,
   "symbols_in_volume": [
    "deprecated",
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.cross_decomposition._pls._PLS": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "abc.ABCMeta"
   ]
  },
  "type": "class"
 },
 "sklearn.cross_decomposition._pls._PLS.__init__": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "sklearn.cross_decomposition._pls._PLS._more_tags": {
  "data": {
   "lineno": 469
  },
  "type": "function"
 },
 "sklearn.cross_decomposition._pls._PLS.fit": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "FutureWarning",
    "ValueError",
    "check_array",
    "check_consistent_length",
    "min",
    "numpy.abs",
    "numpy.all",
    "numpy.dot",
    "numpy.finfo",
    "numpy.float64",
    "numpy.outer",
    "numpy.zeros",
    "range",
    "scipy.linalg.pinv2",
    "sklearn.cross_decomposition._pls._center_scale_xy",
    "sklearn.cross_decomposition._pls._get_first_singular_vectors_power_method",
    "sklearn.cross_decomposition._pls._get_first_singular_vectors_svd",
    "sklearn.cross_decomposition._pls._svd_flip_1d",
    "sklearn.cross_decomposition._pls.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.cross_decomposition._pls._PLS.fit_transform": {
  "data": {
   "lineno": 389
  },
  "type": "function"
 },
 "sklearn.cross_decomposition._pls._PLS.inverse_transform": {
  "data": {
   "lineno": 337,
   "symbols_in_volume": [
    "check_array",
    "check_is_fitted",
    "numpy.matmul"
   ]
  },
  "type": "function"
 },
 "sklearn.cross_decomposition._pls._PLS.norm_y_weights": {
  "data": {
   "lineno": 409,
   "symbols_in_volume": [
    "deprecated",
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.cross_decomposition._pls._PLS.predict": {
  "data": {
   "lineno": 364,
   "symbols_in_volume": [
    "check_array",
    "check_is_fitted",
    "numpy.dot"
   ]
  },
  "type": "function"
 },
 "sklearn.cross_decomposition._pls._PLS.transform": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "check_array",
    "check_is_fitted",
    "numpy.dot"
   ]
  },
  "type": "function"
 },
 "sklearn.cross_decomposition._pls._PLS.x_mean_": {
  "data": {
   "lineno": 416,
   "symbols_in_volume": [
    "deprecated",
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.cross_decomposition._pls._PLS.x_scores_": {
  "data": {
   "lineno": 444,
   "symbols_in_volume": [
    "FutureWarning",
    "isinstance",
    "property",
    "sklearn.cross_decomposition._pls.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.cross_decomposition._pls._PLS.x_std_": {
  "data": {
   "lineno": 430,
   "symbols_in_volume": [
    "deprecated",
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.cross_decomposition._pls._PLS.y_mean_": {
  "data": {
   "lineno": 423,
   "symbols_in_volume": [
    "deprecated",
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.cross_decomposition._pls._PLS.y_scores_": {
  "data": {
   "lineno": 457,
   "symbols_in_volume": [
    "FutureWarning",
    "isinstance",
    "property",
    "sklearn.cross_decomposition._pls.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.cross_decomposition._pls._PLS.y_std_": {
  "data": {
   "lineno": 437,
   "symbols_in_volume": [
    "deprecated",
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.cross_decomposition._pls.__all__": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "sklearn.cross_decomposition._pls._center_scale_xy": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "sklearn.cross_decomposition._pls._get_first_singular_vectors_power_method": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "next",
    "numpy.abs",
    "numpy.any",
    "numpy.dot",
    "numpy.finfo",
    "numpy.sqrt",
    "range",
    "scipy.linalg.pinv2",
    "sklearn.cross_decomposition._pls.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.cross_decomposition._pls._get_first_singular_vectors_svd": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "numpy.dot",
    "scipy.linalg.svd"
   ]
  },
  "type": "function"
 },
 "sklearn.cross_decomposition._pls._svd_flip_1d": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.argmax",
    "numpy.sign"
   ]
  },
  "type": "function"
 },
 "sklearn.cross_decomposition._pls.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "sklearn.cross_decomposition._pls.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.cross_decomposition._pls.pinv2": {
  "data": {
   "shadows": "scipy.linalg.pinv2"
  },
  "type": "import"
 },
 "sklearn.cross_decomposition._pls.svd": {
  "data": {
   "shadows": "scipy.linalg.svd"
  },
  "type": "import"
 },
 "sklearn.cross_decomposition._pls.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.cross_decomposition.tests": {
  "data": {},
  "type": "module"
 },
 "sklearn.cross_decomposition.tests.test_pls": {
  "data": {},
  "type": "module"
 },
 "sklearn.cross_decomposition.tests.test_pls.CCA": {
  "data": {
   "shadows": "sklearn.cross_decomposition.CCA"
  },
  "type": "import"
 },
 "sklearn.cross_decomposition.tests.test_pls.ConvergenceWarning": {
  "data": {
   "shadows": "sklearn.exceptions.ConvergenceWarning"
  },
  "type": "import"
 },
 "sklearn.cross_decomposition.tests.test_pls.PLSCanonical": {
  "data": {
   "shadows": "sklearn.cross_decomposition.PLSCanonical"
  },
  "type": "import"
 },
 "sklearn.cross_decomposition.tests.test_pls.PLSRegression": {
  "data": {
   "shadows": "sklearn.cross_decomposition.PLSRegression"
  },
  "type": "import"
 },
 "sklearn.cross_decomposition.tests.test_pls.PLSSVD": {
  "data": {
   "shadows": "sklearn.cross_decomposition.PLSSVD"
  },
  "type": "import"
 },
 "sklearn.cross_decomposition.tests.test_pls._center_scale_xy": {
  "data": {
   "shadows": "sklearn.cross_decomposition._pls._center_scale_xy"
  },
  "type": "import"
 },
 "sklearn.cross_decomposition.tests.test_pls._generate_test_scale_and_stability_datasets": {
  "data": {
   "lineno": 385,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.dot",
    "numpy.random.RandomState",
    "sklearn.datasets.load_linnerud"
   ]
  },
  "type": "function"
 },
 "sklearn.cross_decomposition.tests.test_pls._get_first_singular_vectors_power_method": {
  "data": {
   "shadows": "sklearn.cross_decomposition._pls._get_first_singular_vectors_power_method"
  },
  "type": "import"
 },
 "sklearn.cross_decomposition.tests.test_pls._get_first_singular_vectors_svd": {
  "data": {
   "shadows": "sklearn.cross_decomposition._pls._get_first_singular_vectors_svd"
  },
  "type": "import"
 },
 "sklearn.cross_decomposition.tests.test_pls._svd_flip_1d": {
  "data": {
   "shadows": "sklearn.cross_decomposition._pls._svd_flip_1d"
  },
  "type": "import"
 },
 "sklearn.cross_decomposition.tests.test_pls.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "sklearn.cross_decomposition.tests.test_pls.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.cross_decomposition.tests.test_pls.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.cross_decomposition.tests.test_pls.assert_matrix_orthogonal": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "numpy.diag",
    "numpy.dot",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.cross_decomposition.tests.test_pls.check_random_state": {
  "data": {
   "shadows": "sklearn.utils.check_random_state"
  },
  "type": "import"
 },
 "sklearn.cross_decomposition.tests.test_pls.load_linnerud": {
  "data": {
   "shadows": "sklearn.datasets.load_linnerud"
  },
  "type": "import"
 },
 "sklearn.cross_decomposition.tests.test_pls.make_regression": {
  "data": {
   "shadows": "sklearn.datasets.make_regression"
  },
  "type": "import"
 },
 "sklearn.cross_decomposition.tests.test_pls.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.cross_decomposition.tests.test_pls.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.cross_decomposition.tests.test_pls.svd_flip": {
  "data": {
   "shadows": "sklearn.utils.extmath.svd_flip"
  },
  "type": "import"
 },
 "sklearn.cross_decomposition.tests.test_pls.test_attibutes_shapes": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": [
    "Est",
    "all",
    "sklearn.cross_decomposition.PLSCanonical",
    "sklearn.cross_decomposition.PLSRegression",
    "sklearn.cross_decomposition.PLSSVD",
    "sklearn.cross_decomposition.tests.test_pls.pytest",
    "sklearn.datasets.load_linnerud"
   ]
  },
  "type": "function"
 },
 "sklearn.cross_decomposition.tests.test_pls.test_convergence_fail": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": [
    "sklearn.cross_decomposition.PLSCanonical",
    "sklearn.cross_decomposition.tests.test_pls.pytest",
    "sklearn.datasets.load_linnerud",
    "sklearn.exceptions.ConvergenceWarning"
   ]
  },
  "type": "function"
 },
 "sklearn.cross_decomposition.tests.test_pls.test_copy": {
  "data": {
   "lineno": 348,
   "symbols_in_volume": [
    "AssertionError",
    "Est",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_array_equal",
    "sklearn.cross_decomposition.CCA",
    "sklearn.cross_decomposition.PLSCanonical",
    "sklearn.cross_decomposition.PLSRegression",
    "sklearn.cross_decomposition.PLSSVD",
    "sklearn.cross_decomposition.tests.test_pls.pytest",
    "sklearn.datasets.load_linnerud"
   ]
  },
  "type": "function"
 },
 "sklearn.cross_decomposition.tests.test_pls.test_mean_and_std_deprecation": {
  "data": {
   "lineno": 496,
   "symbols_in_volume": [
    "Estimator",
    "FutureWarning",
    "getattr",
    "numpy.random.RandomState",
    "sklearn.cross_decomposition.CCA",
    "sklearn.cross_decomposition.PLSCanonical",
    "sklearn.cross_decomposition.PLSRegression",
    "sklearn.cross_decomposition.PLSSVD",
    "sklearn.cross_decomposition.tests.test_pls.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.cross_decomposition.tests.test_pls.test_n_components_bounds": {
  "data": {
   "lineno": 438,
   "symbols_in_volume": [
    "Est",
    "FutureWarning",
    "numpy.random.RandomState",
    "sklearn.cross_decomposition.CCA",
    "sklearn.cross_decomposition.PLSCanonical",
    "sklearn.cross_decomposition.PLSSVD",
    "sklearn.cross_decomposition.tests.test_pls.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.cross_decomposition.tests.test_pls.test_n_components_bounds_pls_regression": {
  "data": {
   "lineno": 454,
   "symbols_in_volume": [
    "FutureWarning",
    "numpy.random.RandomState",
    "sklearn.cross_decomposition.PLSRegression",
    "sklearn.cross_decomposition.tests.test_pls.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.cross_decomposition.tests.test_pls.test_norm_y_weights_deprecation": {
  "data": {
   "lineno": 485,
   "symbols_in_volume": [
    "Est",
    "FutureWarning",
    "numpy.random.RandomState",
    "sklearn.cross_decomposition.CCA",
    "sklearn.cross_decomposition.PLSCanonical",
    "sklearn.cross_decomposition.PLSRegression",
    "sklearn.cross_decomposition.tests.test_pls.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.cross_decomposition.tests.test_pls.test_one_component_equivalence": {
  "data": {
   "lineno": 527,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose",
    "sklearn.cross_decomposition.PLSCanonical",
    "sklearn.cross_decomposition.PLSRegression",
    "sklearn.cross_decomposition.PLSSVD",
    "sklearn.datasets.make_regression"
   ]
  },
  "type": "function"
 },
 "sklearn.cross_decomposition.tests.test_pls.test_pls_canonical_basics": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.testing.assert_array_almost_equal",
    "sklearn.cross_decomposition.PLSCanonical",
    "sklearn.cross_decomposition._pls._center_scale_xy",
    "sklearn.cross_decomposition.tests.test_pls.assert_matrix_orthogonal",
    "sklearn.datasets.load_linnerud"
   ]
  },
  "type": "function"
 },
 "sklearn.cross_decomposition.tests.test_pls.test_sanity_check_pls_canonical": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.array",
    "numpy.sign",
    "numpy.testing.assert_array_almost_equal",
    "sklearn.cross_decomposition.PLSCanonical",
    "sklearn.cross_decomposition.tests.test_pls.assert_matrix_orthogonal",
    "sklearn.datasets.load_linnerud"
   ]
  },
  "type": "function"
 },
 "sklearn.cross_decomposition.tests.test_pls.test_sanity_check_pls_canonical_random": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.array",
    "numpy.concatenate",
    "numpy.sign",
    "numpy.testing.assert_array_almost_equal",
    "sklearn.cross_decomposition.PLSCanonical",
    "sklearn.cross_decomposition.tests.test_pls.assert_matrix_orthogonal",
    "sklearn.utils.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.cross_decomposition.tests.test_pls.test_sanity_check_pls_regression": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.array",
    "numpy.sign",
    "numpy.testing.assert_array_almost_equal",
    "sklearn.cross_decomposition.PLSRegression",
    "sklearn.datasets.load_linnerud"
   ]
  },
  "type": "function"
 },
 "sklearn.cross_decomposition.tests.test_pls.test_sanity_check_pls_regression_constant_column_Y": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.array",
    "numpy.sign",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_array_equal",
    "sklearn.cross_decomposition.PLSRegression",
    "sklearn.datasets.load_linnerud"
   ]
  },
  "type": "function"
 },
 "sklearn.cross_decomposition.tests.test_pls.test_scale_and_stability": {
  "data": {
   "lineno": 423,
   "symbols_in_volume": [
    "Est",
    "numpy.testing.assert_allclose",
    "sklearn.cross_decomposition.CCA",
    "sklearn.cross_decomposition.PLSCanonical",
    "sklearn.cross_decomposition.PLSRegression",
    "sklearn.cross_decomposition.PLSSVD",
    "sklearn.cross_decomposition._pls._center_scale_xy",
    "sklearn.cross_decomposition.tests.test_pls._generate_test_scale_and_stability_datasets",
    "sklearn.cross_decomposition.tests.test_pls.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.cross_decomposition.tests.test_pls.test_scores_deprecations": {
  "data": {
   "lineno": 469,
   "symbols_in_volume": [
    "Est",
    "FutureWarning",
    "numpy.random.RandomState",
    "numpy.testing.assert_allclose",
    "sklearn.cross_decomposition.CCA",
    "sklearn.cross_decomposition.PLSCanonical",
    "sklearn.cross_decomposition.PLSSVD",
    "sklearn.cross_decomposition.tests.test_pls.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.cross_decomposition.tests.test_pls.test_singular_value_helpers": {
  "data": {
   "lineno": 509,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose",
    "range",
    "sklearn.cross_decomposition._pls._get_first_singular_vectors_power_method",
    "sklearn.cross_decomposition._pls._get_first_singular_vectors_svd",
    "sklearn.cross_decomposition._pls._svd_flip_1d",
    "sklearn.cross_decomposition.tests.test_pls.pytest",
    "sklearn.datasets.make_regression"
   ]
  },
  "type": "function"
 },
 "sklearn.cross_decomposition.tests.test_pls.test_svd_flip_1d": {
  "data": {
   "lineno": 539,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.assert_allclose",
    "sklearn.cross_decomposition._pls._svd_flip_1d",
    "sklearn.utils.extmath.svd_flip"
   ]
  },
  "type": "function"
 },
 "sklearn.cross_decomposition.tests.test_pls.test_univariate_equivalence": {
  "data": {
   "lineno": 333,
   "symbols_in_volume": [
    "Est",
    "numpy.testing.assert_array_almost_equal",
    "sklearn.cross_decomposition.CCA",
    "sklearn.cross_decomposition.PLSCanonical",
    "sklearn.cross_decomposition.PLSRegression",
    "sklearn.cross_decomposition.tests.test_pls.pytest",
    "sklearn.datasets.load_linnerud"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets": {
  "data": {},
  "type": "module"
 },
 "sklearn.datasets.__all__": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "sklearn.datasets._base": {
  "data": {
   "symbols_in_volume": [
    "collections.namedtuple"
   ]
  },
  "type": "module"
 },
 "sklearn.datasets._base.RemoteFileMetadata": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "sklearn.datasets._base._convert_data_dataframe": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "check_pandas_support"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets._base._fetch_remote": {
  "data": {
   "lineno": 1165,
   "symbols_in_volume": [
    "IOError",
    "os.path.dirname",
    "os.path.join",
    "sklearn.datasets._base._sha256",
    "urllib.request.urlretrieve"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets._base._pkl_filepath": {
  "data": {
   "lineno": 1135,
   "symbols_in_volume": [
    "os.path.join",
    "os.path.splitext"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets._base._sha256": {
  "data": {
   "lineno": 1152,
   "symbols_in_volume": [
    "open",
    "sklearn.datasets._base.hashlib"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets._base.clear_data_home": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "sklearn.datasets._base.get_data_home",
    "sklearn.datasets._base.shutil"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets._base.csv": {
  "data": {
   "shadows": "csv"
  },
  "type": "import"
 },
 "sklearn.datasets._base.dirname": {
  "data": {
   "shadows": "os.path.dirname"
  },
  "type": "import"
 },
 "sklearn.datasets._base.environ": {
  "data": {
   "shadows": "os.environ"
  },
  "type": "import"
 },
 "sklearn.datasets._base.exists": {
  "data": {
   "shadows": "os.path.exists"
  },
  "type": "import"
 },
 "sklearn.datasets._base.expanduser": {
  "data": {
   "shadows": "os.path.expanduser"
  },
  "type": "import"
 },
 "sklearn.datasets._base.get_data_home": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "os.environ.get",
    "os.makedirs",
    "os.path.exists",
    "os.path.expanduser",
    "os.path.join",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets._base.hashlib": {
  "data": {
   "shadows": "hashlib"
  },
  "type": "import"
 },
 "sklearn.datasets._base.isdir": {
  "data": {
   "shadows": "os.path.isdir"
  },
  "type": "import"
 },
 "sklearn.datasets._base.join": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "sklearn.datasets._base.listdir": {
  "data": {
   "shadows": "os.listdir"
  },
  "type": "import"
 },
 "sklearn.datasets._base.load_boston": {
  "data": {
   "lineno": 956,
   "symbols_in_volume": [
    "Bunch",
    "enumerate",
    "int",
    "next",
    "numpy.array",
    "numpy.asarray",
    "numpy.empty",
    "numpy.float64",
    "open",
    "os.path.dirname",
    "os.path.join",
    "sklearn.datasets._base.csv"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets._base.load_breast_cancer": {
  "data": {
   "lineno": 510,
   "symbols_in_volume": [
    "Bunch",
    "numpy.array",
    "open",
    "os.path.dirname",
    "os.path.join",
    "sklearn.datasets._base._convert_data_dataframe",
    "sklearn.datasets._base.load_data"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets._base.load_data": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "enumerate",
    "int",
    "next",
    "numpy.array",
    "numpy.asarray",
    "numpy.empty",
    "numpy.float64",
    "open",
    "os.path.join",
    "sklearn.datasets._base.csv"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets._base.load_diabetes": {
  "data": {
   "lineno": 759,
   "symbols_in_volume": [
    "Bunch",
    "numpy.loadtxt",
    "open",
    "os.path.dirname",
    "os.path.join",
    "sklearn.datasets._base._convert_data_dataframe"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets._base.load_digits": {
  "data": {
   "lineno": 635,
   "symbols_in_volume": [
    "Bunch",
    "int",
    "numpy.arange",
    "numpy.loadtxt",
    "open",
    "os.path.dirname",
    "os.path.join",
    "range",
    "sklearn.datasets._base._convert_data_dataframe"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets._base.load_files": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "Bunch",
    "check_random_state",
    "enumerate",
    "len",
    "numpy.arange",
    "numpy.array",
    "open",
    "os.listdir",
    "os.path.isdir",
    "os.path.join",
    "sorted"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets._base.load_iris": {
  "data": {
   "lineno": 395,
   "symbols_in_volume": [
    "Bunch",
    "open",
    "os.path.dirname",
    "os.path.join",
    "sklearn.datasets._base._convert_data_dataframe",
    "sklearn.datasets._base.load_data"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets._base.load_linnerud": {
  "data": {
   "lineno": 852,
   "symbols_in_volume": [
    "Bunch",
    "numpy.loadtxt",
    "open",
    "os.path.dirname",
    "os.path.join",
    "sklearn.datasets._base._convert_data_dataframe"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets._base.load_sample_image": {
  "data": {
   "lineno": 1094,
   "symbols_in_volume": [
    "AttributeError",
    "enumerate",
    "sklearn.datasets._base.load_sample_images"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets._base.load_sample_images": {
  "data": {
   "lineno": 1044,
   "symbols_in_volume": [
    "Bunch",
    "imread",
    "open",
    "os.path.dirname",
    "os.path.join",
    "sklearn.datasets._base.os",
    "sorted"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets._base.load_wine": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "Bunch",
    "open",
    "os.path.dirname",
    "os.path.join",
    "sklearn.datasets._base._convert_data_dataframe",
    "sklearn.datasets._base.load_data"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets._base.makedirs": {
  "data": {
   "shadows": "os.makedirs"
  },
  "type": "import"
 },
 "sklearn.datasets._base.namedtuple": {
  "data": {
   "shadows": "collections.namedtuple"
  },
  "type": "import"
 },
 "sklearn.datasets._base.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.datasets._base.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "sklearn.datasets._base.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "sklearn.datasets._base.splitext": {
  "data": {
   "shadows": "os.path.splitext"
  },
  "type": "import"
 },
 "sklearn.datasets._base.urlretrieve": {
  "data": {
   "shadows": "urllib.request.urlretrieve"
  },
  "type": "import"
 },
 "sklearn.datasets._california_housing": {
  "data": {
   "symbols_in_volume": [
    "RemoteFileMetadata",
    "__name__",
    "sklearn.datasets._california_housing.logging"
   ]
  },
  "type": "module"
 },
 "sklearn.datasets._california_housing.ARCHIVE": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "sklearn.datasets._california_housing.dirname": {
  "data": {
   "shadows": "os.path.dirname"
  },
  "type": "import"
 },
 "sklearn.datasets._california_housing.exists": {
  "data": {
   "shadows": "os.path.exists"
  },
  "type": "import"
 },
 "sklearn.datasets._california_housing.fetch_california_housing": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "Bunch",
    "IOError",
    "_convert_data_dataframe",
    "_fetch_remote",
    "_pkl_filepath",
    "get_data_home",
    "numpy.loadtxt",
    "open",
    "os.makedirs",
    "os.path.dirname",
    "os.path.exists",
    "os.path.join",
    "os.remove",
    "sklearn.datasets._california_housing.ARCHIVE",
    "sklearn.datasets._california_housing.joblib",
    "sklearn.datasets._california_housing.logger",
    "sklearn.datasets._california_housing.tarfile"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets._california_housing.joblib": {
  "data": {
   "shadows": "joblib"
  },
  "type": "import"
 },
 "sklearn.datasets._california_housing.join": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "sklearn.datasets._california_housing.logger": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "sklearn.datasets._california_housing.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "sklearn.datasets._california_housing.makedirs": {
  "data": {
   "shadows": "os.makedirs"
  },
  "type": "import"
 },
 "sklearn.datasets._california_housing.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.datasets._california_housing.remove": {
  "data": {
   "shadows": "os.remove"
  },
  "type": "import"
 },
 "sklearn.datasets._california_housing.tarfile": {
  "data": {
   "shadows": "tarfile"
  },
  "type": "import"
 },
 "sklearn.datasets._covtype": {
  "data": {
   "symbols_in_volume": [
    "RemoteFileMetadata",
    "__name__",
    "range",
    "sklearn.datasets._covtype.FEATURE_NAMES",
    "sklearn.datasets._covtype.logging"
   ]
  },
  "type": "module"
 },
 "sklearn.datasets._covtype.ARCHIVE": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "sklearn.datasets._covtype.FEATURE_NAMES": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "sklearn.datasets._covtype.GzipFile": {
  "data": {
   "shadows": "gzip.GzipFile"
  },
  "type": "import"
 },
 "sklearn.datasets._covtype.TARGET_NAMES": {
  "data": {
   "lineno": 59
  },
  "type": "constant"
 },
 "sklearn.datasets._covtype.dirname": {
  "data": {
   "shadows": "os.path.dirname"
  },
  "type": "import"
 },
 "sklearn.datasets._covtype.exists": {
  "data": {
   "shadows": "os.path.exists"
  },
  "type": "import"
 },
 "sklearn.datasets._covtype.fetch_covtype": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "Bunch",
    "IOError",
    "NameError",
    "_convert_data_dataframe",
    "_fetch_remote",
    "_pkl_filepath",
    "check_random_state",
    "get_data_home",
    "gzip.GzipFile",
    "numpy.arange",
    "numpy.genfromtxt",
    "numpy.int32",
    "open",
    "os.makedirs",
    "os.path.dirname",
    "os.path.exists",
    "os.path.join",
    "os.remove",
    "sklearn.datasets._covtype.ARCHIVE",
    "sklearn.datasets._covtype.FEATURE_NAMES",
    "sklearn.datasets._covtype.TARGET_NAMES",
    "sklearn.datasets._covtype.joblib",
    "sklearn.datasets._covtype.logger"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets._covtype.joblib": {
  "data": {
   "shadows": "joblib"
  },
  "type": "import"
 },
 "sklearn.datasets._covtype.join": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "sklearn.datasets._covtype.logger": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "sklearn.datasets._covtype.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "sklearn.datasets._covtype.makedirs": {
  "data": {
   "shadows": "os.makedirs"
  },
  "type": "import"
 },
 "sklearn.datasets._covtype.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.datasets._covtype.remove": {
  "data": {
   "shadows": "os.remove"
  },
  "type": "import"
 },
 "sklearn.datasets._kddcup99": {
  "data": {
   "symbols_in_volume": [
    "RemoteFileMetadata",
    "__name__",
    "sklearn.datasets._kddcup99.logging"
   ]
  },
  "type": "module"
 },
 "sklearn.datasets._kddcup99.ARCHIVE": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "sklearn.datasets._kddcup99.ARCHIVE_10_PERCENT": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "sklearn.datasets._kddcup99.GzipFile": {
  "data": {
   "shadows": "gzip.GzipFile"
  },
  "type": "import"
 },
 "sklearn.datasets._kddcup99._fetch_brute_kddcup99": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "Bunch",
    "IOError",
    "NameError",
    "_fetch_remote",
    "float",
    "get_data_home",
    "gzip.GzipFile",
    "int",
    "numpy.asarray",
    "numpy.dtype",
    "object",
    "os.path.exists",
    "os.path.join",
    "range",
    "sklearn.datasets._kddcup99.ARCHIVE",
    "sklearn.datasets._kddcup99.ARCHIVE_10_PERCENT",
    "sklearn.datasets._kddcup99._mkdirp",
    "sklearn.datasets._kddcup99.joblib",
    "sklearn.datasets._kddcup99.logger",
    "sklearn.datasets._kddcup99.os"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets._kddcup99._mkdirp": {
  "data": {
   "lineno": 364,
   "symbols_in_volume": [
    "OSError",
    "sklearn.datasets._kddcup99.errno",
    "sklearn.datasets._kddcup99.os"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets._kddcup99.dirname": {
  "data": {
   "shadows": "os.path.dirname"
  },
  "type": "import"
 },
 "sklearn.datasets._kddcup99.errno": {
  "data": {
   "shadows": "errno"
  },
  "type": "import"
 },
 "sklearn.datasets._kddcup99.exists": {
  "data": {
   "shadows": "os.path.exists"
  },
  "type": "import"
 },
 "sklearn.datasets._kddcup99.fetch_kddcup99": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "Bunch",
    "_convert_data_dataframe",
    "check_random_state",
    "float",
    "get_data_home",
    "numpy.c_",
    "numpy.log",
    "numpy.logical_not",
    "numpy.r_",
    "open",
    "os.path.dirname",
    "os.path.join",
    "sklearn.datasets._kddcup99._fetch_brute_kddcup99"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets._kddcup99.joblib": {
  "data": {
   "shadows": "joblib"
  },
  "type": "import"
 },
 "sklearn.datasets._kddcup99.join": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "sklearn.datasets._kddcup99.logger": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "sklearn.datasets._kddcup99.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "sklearn.datasets._kddcup99.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.datasets._kddcup99.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "sklearn.datasets._kddcup99.shuffle_method": {
  "data": {
   "shadows": "shuffle"
  },
  "type": "import"
 },
 "sklearn.datasets._lfw": {
  "data": {
   "symbols_in_volume": [
    "RemoteFileMetadata",
    "__name__",
    "sklearn.datasets._lfw.logging"
   ]
  },
  "type": "module"
 },
 "sklearn.datasets._lfw.ARCHIVE": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "sklearn.datasets._lfw.FUNNELED_ARCHIVE": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "sklearn.datasets._lfw.Memory": {
  "data": {
   "shadows": "joblib.Memory"
  },
  "type": "import"
 },
 "sklearn.datasets._lfw.TARGETS": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "sklearn.datasets._lfw._check_fetch_lfw": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "IOError",
    "_fetch_remote",
    "get_data_home",
    "os.makedirs",
    "os.path.exists",
    "os.path.join",
    "os.remove",
    "sklearn.datasets._lfw.ARCHIVE",
    "sklearn.datasets._lfw.FUNNELED_ARCHIVE",
    "sklearn.datasets._lfw.TARGETS",
    "sklearn.datasets._lfw.logger",
    "sklearn.datasets._lfw.tarfile"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets._lfw._fetch_lfw_pairs": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "enumerate",
    "int",
    "len",
    "list",
    "numpy.array",
    "numpy.zeros",
    "open",
    "os.listdir",
    "os.path.join",
    "sklearn.datasets._lfw._load_imgs",
    "sorted",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets._lfw._fetch_lfw_people": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.arange",
    "numpy.random.RandomState",
    "numpy.searchsorted",
    "numpy.unique",
    "os.listdir",
    "os.path.isdir",
    "os.path.join",
    "sklearn.datasets._lfw._load_imgs",
    "sorted"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets._lfw._load_imgs": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "RuntimeError",
    "enumerate",
    "float",
    "imread",
    "imresize",
    "int",
    "len",
    "numpy.asarray",
    "numpy.float32",
    "numpy.zeros",
    "sklearn.datasets._lfw.logger",
    "slice",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets._lfw.dirname": {
  "data": {
   "shadows": "os.path.dirname"
  },
  "type": "import"
 },
 "sklearn.datasets._lfw.exists": {
  "data": {
   "shadows": "os.path.exists"
  },
  "type": "import"
 },
 "sklearn.datasets._lfw.fetch_lfw_pairs": {
  "data": {
   "lineno": 390,
   "symbols_in_volume": [
    "Bunch",
    "ValueError",
    "joblib.Memory",
    "len",
    "list",
    "load_func",
    "open",
    "os.path.dirname",
    "os.path.join",
    "parse_version",
    "sklearn.datasets._lfw._check_fetch_lfw",
    "sklearn.datasets._lfw._fetch_lfw_pairs",
    "sklearn.datasets._lfw.joblib",
    "sklearn.datasets._lfw.logger",
    "slice",
    "sorted"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets._lfw.fetch_lfw_people": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "Bunch",
    "joblib.Memory",
    "len",
    "load_func",
    "open",
    "os.path.dirname",
    "os.path.join",
    "parse_version",
    "sklearn.datasets._lfw._check_fetch_lfw",
    "sklearn.datasets._lfw._fetch_lfw_people",
    "sklearn.datasets._lfw.joblib",
    "sklearn.datasets._lfw.logger",
    "slice"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets._lfw.isdir": {
  "data": {
   "shadows": "os.path.isdir"
  },
  "type": "import"
 },
 "sklearn.datasets._lfw.joblib": {
  "data": {
   "shadows": "joblib"
  },
  "type": "import"
 },
 "sklearn.datasets._lfw.join": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "sklearn.datasets._lfw.listdir": {
  "data": {
   "shadows": "os.listdir"
  },
  "type": "import"
 },
 "sklearn.datasets._lfw.logger": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "sklearn.datasets._lfw.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "sklearn.datasets._lfw.makedirs": {
  "data": {
   "shadows": "os.makedirs"
  },
  "type": "import"
 },
 "sklearn.datasets._lfw.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.datasets._lfw.remove": {
  "data": {
   "shadows": "os.remove"
  },
  "type": "import"
 },
 "sklearn.datasets._lfw.tarfile": {
  "data": {
   "shadows": "tarfile"
  },
  "type": "import"
 },
 "sklearn.datasets._olivetti_faces": {
  "data": {
   "symbols_in_volume": [
    "RemoteFileMetadata"
   ]
  },
  "type": "module"
 },
 "sklearn.datasets._olivetti_faces.FACES": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "sklearn.datasets._olivetti_faces.dirname": {
  "data": {
   "shadows": "os.path.dirname"
  },
  "type": "import"
 },
 "sklearn.datasets._olivetti_faces.exists": {
  "data": {
   "shadows": "os.path.exists"
  },
  "type": "import"
 },
 "sklearn.datasets._olivetti_faces.fetch_olivetti_faces": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "Bunch",
    "IOError",
    "_fetch_remote",
    "_pkl_filepath",
    "check_random_state",
    "get_data_home",
    "len",
    "numpy.array",
    "numpy.float32",
    "open",
    "os.makedirs",
    "os.path.dirname",
    "os.path.exists",
    "os.path.join",
    "os.remove",
    "print",
    "range",
    "scipy.io.matlab.loadmat",
    "sklearn.datasets._olivetti_faces.FACES",
    "sklearn.datasets._olivetti_faces.joblib"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets._olivetti_faces.joblib": {
  "data": {
   "shadows": "joblib"
  },
  "type": "import"
 },
 "sklearn.datasets._olivetti_faces.join": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "sklearn.datasets._olivetti_faces.loadmat": {
  "data": {
   "shadows": "scipy.io.matlab.loadmat"
  },
  "type": "import"
 },
 "sklearn.datasets._olivetti_faces.makedirs": {
  "data": {
   "shadows": "os.makedirs"
  },
  "type": "import"
 },
 "sklearn.datasets._olivetti_faces.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.datasets._olivetti_faces.remove": {
  "data": {
   "shadows": "os.remove"
  },
  "type": "import"
 },
 "sklearn.datasets._openml": {
  "data": {
   "symbols_in_volume": [
    "str",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "module"
 },
 "sklearn.datasets._openml.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "sklearn.datasets._openml.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "sklearn.datasets._openml.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "sklearn.datasets._openml.Generator": {
  "data": {
   "shadows": "collections.abc.Generator"
  },
  "type": "import"
 },
 "sklearn.datasets._openml.HTTPError": {
  "data": {
   "shadows": "urllib.error.HTTPError"
  },
  "type": "import"
 },
 "sklearn.datasets._openml.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "sklearn.datasets._openml.OpenMLError": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "class"
 },
 "sklearn.datasets._openml.OpenmlFeaturesType": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "sklearn.datasets._openml.OpenmlQualitiesType": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "sklearn.datasets._openml.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "sklearn.datasets._openml.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "sklearn.datasets._openml.Request": {
  "data": {
   "shadows": "urllib.request.Request"
  },
  "type": "import"
 },
 "sklearn.datasets._openml.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "sklearn.datasets._openml.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "sklearn.datasets._openml._DATA_FEATURES": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "sklearn.datasets._openml._DATA_FILE": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "sklearn.datasets._openml._DATA_INFO": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "sklearn.datasets._openml._DATA_QUALITIES": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "sklearn.datasets._openml._OPENML_PREFIX": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "sklearn.datasets._openml._SEARCH_NAME": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "sklearn.datasets._openml.__all__": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "sklearn.datasets._openml._convert_arff_data": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "ValueError",
    "collections.abc.Generator",
    "int",
    "isinstance",
    "len",
    "max",
    "numpy.float64",
    "numpy.fromiter",
    "sklearn.datasets._openml._sparse_data_to_array",
    "sklearn.datasets._openml._split_sparse_columns",
    "sklearn.datasets._openml.itertools",
    "tuple",
    "typing.List",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets._openml._convert_arff_data_dataframe": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "ValueError",
    "_chunk_generator",
    "check_pandas_support",
    "collections.OrderedDict",
    "collections.abc.Generator",
    "get_chunk_n_rows",
    "isinstance",
    "list",
    "next",
    "sklearn.datasets._openml._feature_to_dtype",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets._openml._download_data_to_bunch": {
  "data": {
   "lineno": 533,
   "symbols_in_volume": [
    "Bunch",
    "ValueError",
    "bool",
    "functools.partial",
    "int",
    "parse_arff",
    "postprocess",
    "sklearn.datasets._openml._convert_arff_data_dataframe",
    "sklearn.datasets._openml._load_arff_response",
    "sklearn.datasets._openml._retry_with_clean_cache",
    "sklearn.datasets._openml._verify_target_data_type",
    "str",
    "typing.Callable",
    "typing.List",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets._openml._download_data_to_bunch.parse_arff": {
  "data": {
   "lineno": 596,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "sklearn.datasets._openml._convert_arff_data"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets._openml._download_data_to_bunch.postprocess": {
  "data": {
   "lineno": 607,
   "symbols_in_volume": [
    "ValueError",
    "all",
    "any",
    "enumerate",
    "int",
    "numpy.asarray",
    "numpy.hstack",
    "numpy.take"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets._openml._feature_to_dtype": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": [
    "ValueError",
    "numpy.float64",
    "numpy.int64",
    "object",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets._openml._get_data_description_by_id": {
  "data": {
   "lineno": 431,
   "symbols_in_volume": [
    "int",
    "sklearn.datasets._openml._DATA_INFO",
    "sklearn.datasets._openml._get_json_content_from_openml_api",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets._openml._get_data_features": {
  "data": {
   "lineno": 443,
   "symbols_in_volume": [
    "int",
    "sklearn.datasets._openml.OpenmlFeaturesType",
    "sklearn.datasets._openml._DATA_FEATURES",
    "sklearn.datasets._openml._get_json_content_from_openml_api",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets._openml._get_data_info_by_name": {
  "data": {
   "lineno": 365,
   "symbols_in_volume": [
    "int",
    "len",
    "sklearn.datasets._openml.OpenMLError",
    "sklearn.datasets._openml._SEARCH_NAME",
    "sklearn.datasets._openml._get_json_content_from_openml_api",
    "str",
    "typing.Optional",
    "typing.Union",
    "warnings.warn"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets._openml._get_data_qualities": {
  "data": {
   "lineno": 456,
   "symbols_in_volume": [
    "int",
    "sklearn.datasets._openml.OpenmlQualitiesType",
    "sklearn.datasets._openml._DATA_QUALITIES",
    "sklearn.datasets._openml._get_json_content_from_openml_api",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets._openml._get_json_content_from_openml_api": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "_load_json",
    "sklearn.datasets._openml.OpenMLError",
    "str",
    "typing.Dict",
    "typing.Optional",
    "urllib.error.HTTPError"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets._openml._get_json_content_from_openml_api._load_json": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "contextlib.closing",
    "sklearn.datasets._openml._open_openml_url",
    "sklearn.datasets._openml._retry_with_clean_cache",
    "sklearn.datasets._openml.json"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets._openml._get_local_path": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "sklearn.datasets._openml.os",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets._openml._get_num_samples": {
  "data": {
   "lineno": 471,
   "symbols_in_volume": [
    "float",
    "int",
    "sklearn.datasets._openml.OpenmlQualitiesType"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets._openml._load_arff_response": {
  "data": {
   "lineno": 492,
   "symbols_in_volume": [
    "ValueError",
    "_stream_checksum_generator",
    "bool",
    "contextlib.closing",
    "parse_arff",
    "sklearn.datasets._openml._open_openml_url",
    "sklearn.datasets._openml.hashlib",
    "str",
    "typing.Callable",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets._openml._load_arff_response._stream_checksum_generator": {
  "data": {
   "lineno": 507
  },
  "type": "function"
 },
 "sklearn.datasets._openml._open_openml_url": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "Exception",
    "OSError",
    "contextlib.closing",
    "is_gzip_encoded",
    "open",
    "opener",
    "sklearn.datasets._openml._OPENML_PREFIX",
    "sklearn.datasets._openml._get_local_path",
    "sklearn.datasets._openml.gzip",
    "sklearn.datasets._openml.os",
    "sklearn.datasets._openml.shutil",
    "str",
    "typing.Callable",
    "typing.Optional",
    "urllib.request.Request",
    "urllib.request.urlopen"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets._openml._open_openml_url.is_gzip_encoded": {
  "data": {
   "lineno": 93
  },
  "type": "function"
 },
 "sklearn.datasets._openml._retry_with_clean_cache": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "str",
    "typing.Callable",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets._openml._retry_with_clean_cache.decorator": {
  "data": {
   "lineno": 55
  },
  "type": "function"
 },
 "sklearn.datasets._openml._retry_with_clean_cache.decorator.wrapper": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "Exception",
    "RuntimeWarning",
    "f",
    "functools.wraps",
    "sklearn.datasets._openml._get_local_path",
    "sklearn.datasets._openml.os",
    "urllib.error.HTTPError",
    "warnings.warn"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets._openml._sparse_data_to_array": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "max",
    "numpy.empty",
    "numpy.float64",
    "numpy.ndarray",
    "typing.List",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets._openml._split_sparse_columns": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "enumerate",
    "list",
    "typing.List",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets._openml._valid_data_column_names": {
  "data": {
   "lineno": 675
  },
  "type": "function"
 },
 "sklearn.datasets._openml._verify_target_data_type": {
  "data": {
   "lineno": 647,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "isinstance",
    "len",
    "list",
    "numpy.float64",
    "object",
    "set",
    "type",
    "warnings.warn"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets._openml.closing": {
  "data": {
   "shadows": "contextlib.closing"
  },
  "type": "import"
 },
 "sklearn.datasets._openml.fetch_openml": {
  "data": {
   "lineno": 689,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "bool",
    "get_data_home",
    "int",
    "isinstance",
    "len",
    "list",
    "os.path.join",
    "sklearn.datasets._openml._DATA_FILE",
    "sklearn.datasets._openml._download_data_to_bunch",
    "sklearn.datasets._openml._get_data_description_by_id",
    "sklearn.datasets._openml._get_data_features",
    "sklearn.datasets._openml._get_data_info_by_name",
    "sklearn.datasets._openml._get_data_qualities",
    "sklearn.datasets._openml._get_num_samples",
    "sklearn.datasets._openml._valid_data_column_names",
    "str",
    "type",
    "typing.List",
    "typing.Optional",
    "typing.Tuple",
    "typing.Union",
    "warnings.warn"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets._openml.gzip": {
  "data": {
   "shadows": "gzip"
  },
  "type": "import"
 },
 "sklearn.datasets._openml.hashlib": {
  "data": {
   "shadows": "hashlib"
  },
  "type": "import"
 },
 "sklearn.datasets._openml.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "sklearn.datasets._openml.join": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "sklearn.datasets._openml.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "sklearn.datasets._openml.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.datasets._openml.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "sklearn.datasets._openml.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "sklearn.datasets._openml.scipy.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.datasets._openml.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "sklearn.datasets._openml.urlopen": {
  "data": {
   "shadows": "urllib.request.urlopen"
  },
  "type": "import"
 },
 "sklearn.datasets._openml.warn": {
  "data": {
   "shadows": "warnings.warn"
  },
  "type": "import"
 },
 "sklearn.datasets._openml.wraps": {
  "data": {
   "shadows": "functools.wraps"
  },
  "type": "import"
 },
 "sklearn.datasets._rcv1": {
  "data": {
   "symbols_in_volume": [
    "RemoteFileMetadata",
    "__name__",
    "sklearn.datasets._rcv1.logging"
   ]
  },
  "type": "module"
 },
 "sklearn.datasets._rcv1.GzipFile": {
  "data": {
   "shadows": "gzip.GzipFile"
  },
  "type": "import"
 },
 "sklearn.datasets._rcv1.TOPICS_METADATA": {
  "data": {
   "lineno": 70
  },
  "type": "constant"
 },
 "sklearn.datasets._rcv1.XY_METADATA": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "sklearn.datasets._rcv1._find_permutation": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "numpy.argsort",
    "sklearn.datasets._rcv1._inverse_permutation"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets._rcv1._inverse_permutation": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.int32",
    "numpy.put",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets._rcv1.dirname": {
  "data": {
   "shadows": "os.path.dirname"
  },
  "type": "import"
 },
 "sklearn.datasets._rcv1.exists": {
  "data": {
   "shadows": "os.path.exists"
  },
  "type": "import"
 },
 "sklearn.datasets._rcv1.fetch_rcv1": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "Bunch",
    "ValueError",
    "_fetch_remote",
    "_pkl_filepath",
    "get_data_home",
    "gzip.GzipFile",
    "int",
    "len",
    "load_svmlight_files",
    "numpy.argsort",
    "numpy.empty",
    "numpy.hstack",
    "numpy.int32",
    "numpy.uint32",
    "numpy.uint8",
    "numpy.zeros",
    "object",
    "open",
    "os.makedirs",
    "os.path.dirname",
    "os.path.exists",
    "os.path.join",
    "os.remove",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.vstack",
    "sklearn.datasets._rcv1.TOPICS_METADATA",
    "sklearn.datasets._rcv1.XY_METADATA",
    "sklearn.datasets._rcv1._find_permutation",
    "sklearn.datasets._rcv1.joblib",
    "sklearn.datasets._rcv1.logger"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets._rcv1.joblib": {
  "data": {
   "shadows": "joblib"
  },
  "type": "import"
 },
 "sklearn.datasets._rcv1.join": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "sklearn.datasets._rcv1.logger": {
  "data": {
   "lineno": 76
  },
  "type": "constant"
 },
 "sklearn.datasets._rcv1.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "sklearn.datasets._rcv1.makedirs": {
  "data": {
   "shadows": "os.makedirs"
  },
  "type": "import"
 },
 "sklearn.datasets._rcv1.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.datasets._rcv1.remove": {
  "data": {
   "shadows": "os.remove"
  },
  "type": "import"
 },
 "sklearn.datasets._rcv1.shuffle_": {
  "data": {
   "shadows": "shuffle"
  },
  "type": "import"
 },
 "sklearn.datasets._rcv1.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.datasets._samples_generator": {
  "data": {},
  "type": "module"
 },
 "sklearn.datasets._samples_generator.Iterable": {
  "data": {
   "shadows": "collections.abc.Iterable"
  },
  "type": "import"
 },
 "sklearn.datasets._samples_generator._generate_hypercube": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "numpy.hstack",
    "numpy.unpackbits",
    "sample_without_replacement"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets._samples_generator._shuffle": {
  "data": {
   "lineno": 1584,
   "symbols_in_volume": [
    "check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets._samples_generator.array": {
  "data": {
   "shadows": "array"
  },
  "type": "import"
 },
 "sklearn.datasets._samples_generator.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "sklearn.datasets._samples_generator.make_biclusters": {
  "data": {
   "lineno": 1593,
   "symbols_in_volume": [
    "check_random_state",
    "list",
    "numpy.float64",
    "numpy.hstack",
    "numpy.outer",
    "numpy.repeat",
    "numpy.vstack",
    "numpy.zeros",
    "range",
    "sklearn.datasets._samples_generator._shuffle",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets._samples_generator.make_blobs": {
  "data": {
   "lineno": 750,
   "symbols_in_volume": [
    "AssertionError",
    "TypeError",
    "ValueError",
    "check_array",
    "check_random_state",
    "collections.abc.Iterable",
    "enumerate",
    "hasattr",
    "int",
    "isinstance",
    "len",
    "numpy.arange",
    "numpy.array",
    "numpy.concatenate",
    "numpy.full",
    "numpy.sum",
    "range",
    "sklearn.datasets._samples_generator.numbers",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets._samples_generator.make_checkerboard": {
  "data": {
   "lineno": 1685,
   "symbols_in_volume": [
    "check_random_state",
    "hasattr",
    "list",
    "numpy.float64",
    "numpy.hstack",
    "numpy.outer",
    "numpy.repeat",
    "numpy.vstack",
    "numpy.zeros",
    "range",
    "sklearn.datasets._samples_generator._shuffle",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets._samples_generator.make_circles": {
  "data": {
   "lineno": 603,
   "symbols_in_volume": [
    "ValueError",
    "check_random_state",
    "isinstance",
    "numpy.append",
    "numpy.cos",
    "numpy.hstack",
    "numpy.intp",
    "numpy.linspace",
    "numpy.ones",
    "numpy.pi",
    "numpy.sin",
    "numpy.vstack",
    "numpy.zeros",
    "sklearn.datasets._samples_generator.numbers"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets._samples_generator.make_classification": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "ValueError",
    "check_random_state",
    "enumerate",
    "float",
    "int",
    "isinstance",
    "len",
    "list",
    "numpy.arange",
    "numpy.dot",
    "numpy.intp",
    "numpy.log2",
    "numpy.resize",
    "numpy.zeros",
    "range",
    "sklearn.datasets._samples_generator._generate_hypercube",
    "sum"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets._samples_generator.make_friedman1": {
  "data": {
   "lineno": 909,
   "symbols_in_volume": [
    "ValueError",
    "check_random_state",
    "numpy.pi",
    "numpy.sin"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets._samples_generator.make_friedman2": {
  "data": {
   "lineno": 973,
   "symbols_in_volume": [
    "check_random_state",
    "numpy.pi"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets._samples_generator.make_friedman3": {
  "data": {
   "lineno": 1039,
   "symbols_in_volume": [
    "check_random_state",
    "numpy.arctan",
    "numpy.pi"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets._samples_generator.make_gaussian_quantiles": {
  "data": {
   "lineno": 1497,
   "symbols_in_volume": [
    "ValueError",
    "check_random_state",
    "numpy.arange",
    "numpy.argsort",
    "numpy.array",
    "numpy.hstack",
    "numpy.identity",
    "numpy.newaxis",
    "numpy.repeat",
    "numpy.sum",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets._samples_generator.make_hastie_10_2": {
  "data": {
   "lineno": 430,
   "symbols_in_volume": [
    "check_random_state",
    "numpy.float64"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets._samples_generator.make_low_rank_matrix": {
  "data": {
   "lineno": 1104,
   "symbols_in_volume": [
    "check_random_state",
    "min",
    "numpy.arange",
    "numpy.dot",
    "numpy.exp",
    "numpy.float64",
    "numpy.identity",
    "scipy.linalg.qr"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets._samples_generator.make_moons": {
  "data": {
   "lineno": 683,
   "symbols_in_volume": [
    "ValueError",
    "check_random_state",
    "isinstance",
    "numpy.append",
    "numpy.cos",
    "numpy.hstack",
    "numpy.intp",
    "numpy.linspace",
    "numpy.ones",
    "numpy.pi",
    "numpy.sin",
    "numpy.vstack",
    "numpy.zeros",
    "sklearn.datasets._samples_generator.numbers"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets._samples_generator.make_multilabel_classification": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "MultiLabelBinarizer",
    "ValueError",
    "check_random_state",
    "len",
    "numpy.cumsum",
    "numpy.float64",
    "numpy.ones",
    "numpy.sum",
    "range",
    "sample_example",
    "scipy.sparse.csr_matrix",
    "sklearn.datasets._samples_generator.array"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets._samples_generator.make_multilabel_classification.sample_example": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": [
    "len",
    "list",
    "numpy.searchsorted",
    "set"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets._samples_generator.make_regression": {
  "data": {
   "lineno": 479,
   "symbols_in_volume": [
    "check_random_state",
    "min",
    "numpy.arange",
    "numpy.dot",
    "numpy.squeeze",
    "numpy.zeros",
    "sklearn.datasets._samples_generator.make_low_rank_matrix"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets._samples_generator.make_s_curve": {
  "data": {
   "lineno": 1454,
   "symbols_in_volume": [
    "check_random_state",
    "numpy.concatenate",
    "numpy.cos",
    "numpy.pi",
    "numpy.sign",
    "numpy.sin",
    "numpy.squeeze"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets._samples_generator.make_sparse_coded_signal": {
  "data": {
   "lineno": 1176,
   "symbols_in_volume": [
    "check_random_state",
    "map",
    "numpy.arange",
    "numpy.dot",
    "numpy.sqrt",
    "numpy.squeeze",
    "numpy.sum",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets._samples_generator.make_sparse_spd_matrix": {
  "data": {
   "lineno": 1326,
   "symbols_in_volume": [
    "check_random_state",
    "numpy.diag",
    "numpy.dot",
    "numpy.eye",
    "numpy.sqrt",
    "numpy.sum",
    "numpy.tril"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets._samples_generator.make_sparse_uncorrelated": {
  "data": {
   "lineno": 1239,
   "symbols_in_volume": [
    "check_random_state",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets._samples_generator.make_spd_matrix": {
  "data": {
   "lineno": 1292,
   "symbols_in_volume": [
    "check_random_state",
    "numpy.diag",
    "numpy.dot",
    "scipy.linalg.svd"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets._samples_generator.make_swiss_roll": {
  "data": {
   "lineno": 1401,
   "symbols_in_volume": [
    "check_random_state",
    "numpy.concatenate",
    "numpy.cos",
    "numpy.pi",
    "numpy.sin",
    "numpy.squeeze"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets._samples_generator.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.datasets._samples_generator.numbers": {
  "data": {
   "shadows": "numbers"
  },
  "type": "import"
 },
 "sklearn.datasets._samples_generator.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.datasets._samples_generator.util_shuffle": {
  "data": {
   "shadows": "shuffle"
  },
  "type": "import"
 },
 "sklearn.datasets._species_distributions": {
  "data": {
   "symbols_in_volume": [
    "RemoteFileMetadata",
    "__name__",
    "sklearn.datasets._species_distributions.logging"
   ]
  },
  "type": "module"
 },
 "sklearn.datasets._species_distributions.BytesIO": {
  "data": {
   "shadows": "io.BytesIO"
  },
  "type": "import"
 },
 "sklearn.datasets._species_distributions.COVERAGES": {
  "data": {
   "lineno": 66
  },
  "type": "constant"
 },
 "sklearn.datasets._species_distributions.DATA_ARCHIVE_NAME": {
  "data": {
   "lineno": 72
  },
  "type": "constant"
 },
 "sklearn.datasets._species_distributions.SAMPLES": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "sklearn.datasets._species_distributions._load_coverage": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "dict",
    "float",
    "int",
    "make_tuple",
    "numpy.int16",
    "numpy.loadtxt",
    "range"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets._species_distributions._load_csv": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "numpy.loadtxt"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets._species_distributions.construct_grids": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets._species_distributions.exists": {
  "data": {
   "shadows": "os.path.exists"
  },
  "type": "import"
 },
 "sklearn.datasets._species_distributions.fetch_species_distributions": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "Bunch",
    "IOError",
    "_fetch_remote",
    "_pkl_filepath",
    "dict",
    "get_data_home",
    "io.BytesIO",
    "numpy.asarray",
    "numpy.int16",
    "numpy.load",
    "os.makedirs",
    "os.path.exists",
    "os.remove",
    "sklearn.datasets._species_distributions.COVERAGES",
    "sklearn.datasets._species_distributions.DATA_ARCHIVE_NAME",
    "sklearn.datasets._species_distributions.SAMPLES",
    "sklearn.datasets._species_distributions._load_coverage",
    "sklearn.datasets._species_distributions._load_csv",
    "sklearn.datasets._species_distributions.joblib",
    "sklearn.datasets._species_distributions.logger"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets._species_distributions.joblib": {
  "data": {
   "shadows": "joblib"
  },
  "type": "import"
 },
 "sklearn.datasets._species_distributions.logger": {
  "data": {
   "lineno": 75
  },
  "type": "constant"
 },
 "sklearn.datasets._species_distributions.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "sklearn.datasets._species_distributions.makedirs": {
  "data": {
   "shadows": "os.makedirs"
  },
  "type": "import"
 },
 "sklearn.datasets._species_distributions.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.datasets._species_distributions.remove": {
  "data": {
   "shadows": "os.remove"
  },
  "type": "import"
 },
 "sklearn.datasets._svmlight_format_io": {
  "data": {},
  "type": "module"
 },
 "sklearn.datasets._svmlight_format_io.BZ2File": {
  "data": {
   "shadows": "bz2.BZ2File"
  },
  "type": "import"
 },
 "sklearn.datasets._svmlight_format_io._dump_svmlight": {
  "data": {
   "lineno": 333,
   "symbols_in_volume": [
    "hasattr",
    "int",
    "numpy.where",
    "range",
    "slice",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets._svmlight_format_io._gen_open": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "TypeError",
    "bz2.BZ2File",
    "int",
    "isinstance",
    "open",
    "sklearn.datasets._svmlight_format_io.gzip",
    "sklearn.datasets._svmlight_format_io.io",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets._svmlight_format_io._load_svmlight_file": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets._svmlight_format_io._open_and_load": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "contextlib.closing",
    "hasattr",
    "numpy.asarray",
    "numpy.float64",
    "numpy.frombuffer",
    "numpy.int64",
    "numpy.longlong",
    "sklearn.datasets._svmlight_format_io._gen_open",
    "sklearn.datasets._svmlight_format_io._load_svmlight_file"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets._svmlight_format_io.closing": {
  "data": {
   "shadows": "contextlib.closing"
  },
  "type": "import"
 },
 "sklearn.datasets._svmlight_format_io.dump_svmlight_file": {
  "data": {
   "lineno": 390,
   "symbols_in_volume": [
    "ValueError",
    "bytes",
    "check_array",
    "hasattr",
    "isinstance",
    "numpy.asarray",
    "open",
    "scipy.sparse.issparse",
    "sklearn.datasets._svmlight_format_io._dump_svmlight"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets._svmlight_format_io.gzip": {
  "data": {
   "shadows": "gzip"
  },
  "type": "import"
 },
 "sklearn.datasets._svmlight_format_io.io": {
  "data": {
   "shadows": "io"
  },
  "type": "import"
 },
 "sklearn.datasets._svmlight_format_io.load_svmlight_file": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "numpy.float64",
    "sklearn.datasets._svmlight_format_io.load_svmlight_files",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets._svmlight_format_io.load_svmlight_files": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "ValueError",
    "all",
    "bool",
    "len",
    "max",
    "numpy.float64",
    "numpy.min",
    "scipy.sparse.csr_matrix",
    "sklearn.datasets._svmlight_format_io._open_and_load"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets._svmlight_format_io.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.datasets._svmlight_format_io.os.path": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "sklearn.datasets._svmlight_format_io.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.datasets._twenty_newsgroups": {
  "data": {
   "symbols_in_volume": [
    "RemoteFileMetadata",
    "__name__",
    "sklearn.datasets._twenty_newsgroups.logging",
    "sklearn.datasets._twenty_newsgroups.re"
   ]
  },
  "type": "module"
 },
 "sklearn.datasets._twenty_newsgroups.ARCHIVE": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "sklearn.datasets._twenty_newsgroups.CACHE_NAME": {
  "data": {
   "lineno": 61
  },
  "type": "constant"
 },
 "sklearn.datasets._twenty_newsgroups.TEST_FOLDER": {
  "data": {
   "lineno": 63
  },
  "type": "constant"
 },
 "sklearn.datasets._twenty_newsgroups.TRAIN_FOLDER": {
  "data": {
   "lineno": 62
  },
  "type": "constant"
 },
 "sklearn.datasets._twenty_newsgroups._QUOTE_RE": {
  "data": {
   "lineno": 106
  },
  "type": "constant"
 },
 "sklearn.datasets._twenty_newsgroups._download_20newsgroups": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "_fetch_remote",
    "dict",
    "load_files",
    "open",
    "sklearn.datasets._twenty_newsgroups.ARCHIVE",
    "sklearn.datasets._twenty_newsgroups.TEST_FOLDER",
    "sklearn.datasets._twenty_newsgroups.TRAIN_FOLDER",
    "sklearn.datasets._twenty_newsgroups.codecs",
    "sklearn.datasets._twenty_newsgroups.logger",
    "sklearn.datasets._twenty_newsgroups.os",
    "sklearn.datasets._twenty_newsgroups.pickle",
    "sklearn.datasets._twenty_newsgroups.shutil",
    "sklearn.datasets._twenty_newsgroups.tarfile"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets._twenty_newsgroups.codecs": {
  "data": {
   "shadows": "codecs"
  },
  "type": "import"
 },
 "sklearn.datasets._twenty_newsgroups.dirname": {
  "data": {
   "shadows": "os.path.dirname"
  },
  "type": "import"
 },
 "sklearn.datasets._twenty_newsgroups.fetch_20newsgroups": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "Exception",
    "IOError",
    "ValueError",
    "_pkl_filepath",
    "check_random_state",
    "get_data_home",
    "list",
    "numpy.arange",
    "numpy.array",
    "numpy.in1d",
    "numpy.searchsorted",
    "object",
    "open",
    "os.path.dirname",
    "os.path.join",
    "print",
    "sklearn.datasets._twenty_newsgroups.CACHE_NAME",
    "sklearn.datasets._twenty_newsgroups._download_20newsgroups",
    "sklearn.datasets._twenty_newsgroups.codecs",
    "sklearn.datasets._twenty_newsgroups.logger",
    "sklearn.datasets._twenty_newsgroups.os",
    "sklearn.datasets._twenty_newsgroups.pickle",
    "sklearn.datasets._twenty_newsgroups.strip_newsgroup_footer",
    "sklearn.datasets._twenty_newsgroups.strip_newsgroup_header",
    "sklearn.datasets._twenty_newsgroups.strip_newsgroup_quoting",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets._twenty_newsgroups.fetch_20newsgroups_vectorized": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": [
    "Bunch",
    "CountVectorizer",
    "ValueError",
    "_convert_data_dataframe",
    "_pkl_filepath",
    "get_data_home",
    "numpy.concatenate",
    "numpy.float64",
    "numpy.int16",
    "open",
    "os.path.dirname",
    "os.path.join",
    "scipy.sparse.vstack",
    "sklearn.datasets._twenty_newsgroups.fetch_20newsgroups",
    "sklearn.datasets._twenty_newsgroups.joblib",
    "sklearn.datasets._twenty_newsgroups.os"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets._twenty_newsgroups.joblib": {
  "data": {
   "shadows": "joblib"
  },
  "type": "import"
 },
 "sklearn.datasets._twenty_newsgroups.join": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "sklearn.datasets._twenty_newsgroups.logger": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "sklearn.datasets._twenty_newsgroups.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "sklearn.datasets._twenty_newsgroups.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.datasets._twenty_newsgroups.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "sklearn.datasets._twenty_newsgroups.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "sklearn.datasets._twenty_newsgroups.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "sklearn.datasets._twenty_newsgroups.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "sklearn.datasets._twenty_newsgroups.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.datasets._twenty_newsgroups.strip_newsgroup_footer": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets._twenty_newsgroups.strip_newsgroup_header": {
  "data": {
   "lineno": 92
  },
  "type": "function"
 },
 "sklearn.datasets._twenty_newsgroups.strip_newsgroup_quoting": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "sklearn.datasets._twenty_newsgroups._QUOTE_RE"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets._twenty_newsgroups.tarfile": {
  "data": {
   "shadows": "tarfile"
  },
  "type": "import"
 },
 "sklearn.datasets.setup": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.distutils.core.setup",
    "sklearn.datasets.setup.configuration"
   ]
  },
  "type": "module"
 },
 "sklearn.datasets.setup.Configuration": {
  "data": {
   "shadows": "numpy.distutils.misc_util.Configuration"
  },
  "type": "import"
 },
 "sklearn.datasets.setup.configuration": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "numpy.distutils.misc_util.Configuration",
    "sklearn.datasets.setup.numpy",
    "sklearn.datasets.setup.os",
    "sklearn.datasets.setup.platform"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.setup.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.datasets.setup.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "sklearn.datasets.setup.platform": {
  "data": {
   "shadows": "platform"
  },
  "type": "import"
 },
 "sklearn.datasets.setup.setup": {
  "data": {
   "shadows": "numpy.distutils.core.setup"
  },
  "type": "import"
 },
 "sklearn.datasets.tests": {
  "data": {},
  "type": "module"
 },
 "sklearn.datasets.tests.conftest": {
  "data": {},
  "type": "module"
 },
 "sklearn.datasets.tests.conftest._wrapped_fetch": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "os.environ.get"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.conftest._wrapped_fetch.wrapped": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "IOError",
    "f",
    "functools.wraps",
    "sklearn.datasets.tests.conftest.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.conftest.builtins": {
  "data": {
   "shadows": "builtins"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.conftest.environ": {
  "data": {
   "shadows": "os.environ"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.conftest.fetch_20newsgroups": {
  "data": {
   "shadows": "sklearn.datasets.fetch_20newsgroups"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.conftest.fetch_20newsgroups_fxt": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "sklearn.datasets.fetch_20newsgroups",
    "sklearn.datasets.tests.conftest._wrapped_fetch",
    "sklearn.datasets.tests.conftest.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.conftest.fetch_20newsgroups_vectorized": {
  "data": {
   "shadows": "sklearn.datasets.fetch_20newsgroups_vectorized"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.conftest.fetch_20newsgroups_vectorized_fxt": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "sklearn.datasets.fetch_20newsgroups_vectorized",
    "sklearn.datasets.tests.conftest._wrapped_fetch",
    "sklearn.datasets.tests.conftest.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.conftest.fetch_california_housing": {
  "data": {
   "shadows": "sklearn.datasets.fetch_california_housing"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.conftest.fetch_california_housing_fxt": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "sklearn.datasets.fetch_california_housing",
    "sklearn.datasets.tests.conftest._wrapped_fetch",
    "sklearn.datasets.tests.conftest.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.conftest.fetch_covtype": {
  "data": {
   "shadows": "sklearn.datasets.fetch_covtype"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.conftest.fetch_covtype_fxt": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "sklearn.datasets.fetch_covtype",
    "sklearn.datasets.tests.conftest._wrapped_fetch",
    "sklearn.datasets.tests.conftest.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.conftest.fetch_kddcup99": {
  "data": {
   "shadows": "sklearn.datasets.fetch_kddcup99"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.conftest.fetch_kddcup99_fxt": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "sklearn.datasets.fetch_kddcup99",
    "sklearn.datasets.tests.conftest._wrapped_fetch",
    "sklearn.datasets.tests.conftest.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.conftest.fetch_olivetti_faces": {
  "data": {
   "shadows": "sklearn.datasets.fetch_olivetti_faces"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.conftest.fetch_olivetti_faces_fxt": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "sklearn.datasets.fetch_olivetti_faces",
    "sklearn.datasets.tests.conftest._wrapped_fetch",
    "sklearn.datasets.tests.conftest.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.conftest.fetch_rcv1": {
  "data": {
   "shadows": "sklearn.datasets.fetch_rcv1"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.conftest.fetch_rcv1_fxt": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "sklearn.datasets.fetch_rcv1",
    "sklearn.datasets.tests.conftest._wrapped_fetch",
    "sklearn.datasets.tests.conftest.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.conftest.hide_available_pandas": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "sklearn.datasets.tests.conftest.builtins",
    "sklearn.datasets.tests.conftest.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.conftest.hide_available_pandas.mocked_import": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "ImportError",
    "import_orig"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.conftest.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.conftest.wraps": {
  "data": {
   "shadows": "functools.wraps"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_20news": {
  "data": {},
  "type": "module"
 },
 "sklearn.datasets.tests.test_20news.assert_allclose_dense_sparse": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_allclose_dense_sparse"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_20news.check_as_frame": {
  "data": {
   "shadows": "sklearn.datasets.tests.test_common.check_as_frame"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_20news.check_pandas_dependency_message": {
  "data": {
   "shadows": "sklearn.datasets.tests.test_common.check_pandas_dependency_message"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_20news.check_return_X_y": {
  "data": {
   "shadows": "sklearn.datasets.tests.test_common.check_return_X_y"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_20news.normalize": {
  "data": {
   "shadows": "sklearn.preprocessing.normalize"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_20news.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_20news.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_20news.patch": {
  "data": {
   "shadows": "unittest.mock.patch"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_20news.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_20news.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_20news.test_20news": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "fetch_20newsgroups_fxt",
    "len",
    "numpy.unique",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_20news.test_20news_as_frame": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "all",
    "fetch_20newsgroups_vectorized_fxt",
    "isinstance",
    "sklearn.datasets.tests.test_20news.pytest",
    "sklearn.datasets.tests.test_common.check_as_frame"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_20news.test_20news_length_consistency": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "fetch_20newsgroups_fxt",
    "len"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_20news.test_20news_normalization": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "fetch_20newsgroups_vectorized_fxt",
    "numpy.allclose",
    "numpy.linalg.norm",
    "sklearn.preprocessing.normalize",
    "sklearn.utils._testing.assert_allclose_dense_sparse"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_20news.test_20news_vectorized": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "fetch_20newsgroups_vectorized_fxt",
    "functools.partial",
    "numpy.float64",
    "scipy.sparse.isspmatrix_csr",
    "sklearn.datasets.tests.test_common.check_return_X_y"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_20news.test_as_frame_no_pandas": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "fetch_20newsgroups_vectorized_fxt",
    "sklearn.datasets.tests.test_common.check_pandas_dependency_message"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_20news.test_outdated_pickle": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "ValueError",
    "fetch_20newsgroups_vectorized_fxt",
    "sklearn.datasets.tests.test_20news.pytest",
    "unittest.mock.patch"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_base": {
  "data": {},
  "type": "module"
 },
 "sklearn.datasets.tests.test_base.Bunch": {
  "data": {
   "shadows": "sklearn.utils.Bunch"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_base.IS_PYPY": {
  "data": {
   "shadows": "sklearn.utils.IS_PYPY"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_base._remove_dir": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "sklearn.datasets.tests.test_base.os",
    "sklearn.datasets.tests.test_base.shutil"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_base.check_as_frame": {
  "data": {
   "shadows": "sklearn.datasets.tests.test_common.check_as_frame"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_base.clear_data_home": {
  "data": {
   "shadows": "sklearn.datasets.clear_data_home"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_base.data_home": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "sklearn.datasets.tests.test_base._remove_dir",
    "sklearn.datasets.tests.test_base.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_base.dumps": {
  "data": {
   "shadows": "pickle.dumps"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_base.get_data_home": {
  "data": {
   "shadows": "sklearn.datasets.get_data_home"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_base.load_boston": {
  "data": {
   "shadows": "sklearn.datasets.load_boston"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_base.load_breast_cancer": {
  "data": {
   "shadows": "sklearn.datasets.load_breast_cancer"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_base.load_diabetes": {
  "data": {
   "shadows": "sklearn.datasets.load_diabetes"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_base.load_digits": {
  "data": {
   "shadows": "sklearn.datasets.load_digits"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_base.load_files": {
  "data": {
   "shadows": "sklearn.datasets.load_files"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_base.load_files_root": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "sklearn.datasets.tests.test_base._remove_dir",
    "sklearn.datasets.tests.test_base.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_base.load_iris": {
  "data": {
   "shadows": "sklearn.datasets.load_iris"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_base.load_linnerud": {
  "data": {
   "shadows": "sklearn.datasets.load_linnerud"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_base.load_sample_image": {
  "data": {
   "shadows": "sklearn.datasets.load_sample_image"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_base.load_sample_images": {
  "data": {
   "shadows": "sklearn.datasets.load_sample_images"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_base.load_wine": {
  "data": {
   "shadows": "sklearn.datasets.load_wine"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_base.loads": {
  "data": {
   "shadows": "pickle.loads"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_base.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_base.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_base.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_base.pillow_installed": {
  "data": {
   "shadows": "sklearn.externals._pilutil.pillow_installed"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_base.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_base.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_base.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_base.test_bunch_dir": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "dir",
    "sklearn.datasets.load_iris"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_base.test_bunch_pickle_generated_with_0_16_and_read_with_0_17": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "pickle.dumps",
    "pickle.loads",
    "sklearn.utils.Bunch"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_base.test_category_dir_1": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "sklearn.datasets.tests.test_base._remove_dir",
    "sklearn.datasets.tests.test_base.load_files_root",
    "sklearn.datasets.tests.test_base.pytest",
    "sklearn.datasets.tests.test_base.tempfile",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_base.test_category_dir_2": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "sklearn.datasets.tests.test_base._remove_dir",
    "sklearn.datasets.tests.test_base.load_files_root",
    "sklearn.datasets.tests.test_base.pytest",
    "sklearn.datasets.tests.test_base.tempfile",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_base.test_data_home": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "sklearn.datasets.clear_data_home",
    "sklearn.datasets.get_data_home",
    "sklearn.datasets.tests.test_base.data_home",
    "sklearn.datasets.tests.test_base.os"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_base.test_default_empty_load_files": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "len",
    "sklearn.datasets.load_files",
    "sklearn.datasets.tests.test_base.load_files_root"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_base.test_default_load_files": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "len",
    "sklearn.datasets.load_files",
    "sklearn.datasets.tests.test_base.load_files_root",
    "sklearn.datasets.tests.test_base.pytest",
    "sklearn.utils.IS_PYPY"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_base.test_load_files_w_categories_desc_and_encoding": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "len",
    "sklearn.datasets.load_files",
    "sklearn.datasets.tests.test_base.load_files_root",
    "sklearn.datasets.tests.test_base.os",
    "sklearn.datasets.tests.test_base.pytest",
    "sklearn.datasets.tests.test_base.test_category_dir_1",
    "sklearn.utils.IS_PYPY"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_base.test_load_files_wo_load_content": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "len",
    "sklearn.datasets.load_files",
    "sklearn.datasets.tests.test_base.load_files_root"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_base.test_load_missing_sample_image_error": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "AttributeError",
    "sklearn.datasets.load_sample_image",
    "sklearn.datasets.tests.test_base.pytest",
    "sklearn.datasets.tests.test_base.warnings",
    "sklearn.externals._pilutil.pillow_installed"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_base.test_load_sample_image": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "ImportError",
    "sklearn.datasets.load_sample_image",
    "sklearn.datasets.tests.test_base.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_base.test_load_sample_images": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "ImportError",
    "len",
    "numpy.all",
    "numpy.array",
    "numpy.uint8",
    "sklearn.datasets.load_sample_images",
    "sklearn.datasets.tests.test_base.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_base.test_loader": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "all",
    "functools.partial",
    "hasattr",
    "isinstance",
    "len",
    "loader_func",
    "sklearn.datasets.load_boston",
    "sklearn.datasets.load_breast_cancer",
    "sklearn.datasets.load_diabetes",
    "sklearn.datasets.load_digits",
    "sklearn.datasets.load_iris",
    "sklearn.datasets.load_linnerud",
    "sklearn.datasets.load_wine",
    "sklearn.datasets.tests.test_base.os",
    "sklearn.datasets.tests.test_base.pytest",
    "sklearn.utils.Bunch"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_base.test_loads_dumps_bunch": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "pickle.dumps",
    "pickle.loads",
    "sklearn.utils.Bunch"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_base.test_toy_dataset_frame_dtype": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "int",
    "loader_func",
    "numpy.float64",
    "sklearn.datasets.load_breast_cancer",
    "sklearn.datasets.load_diabetes",
    "sklearn.datasets.load_digits",
    "sklearn.datasets.load_iris",
    "sklearn.datasets.load_linnerud",
    "sklearn.datasets.load_wine",
    "sklearn.datasets.tests.test_base.pytest",
    "sklearn.datasets.tests.test_common.check_as_frame"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_base.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_california_housing": {
  "data": {},
  "type": "module"
 },
 "sklearn.datasets.tests.test_california_housing.check_return_X_y": {
  "data": {
   "shadows": "sklearn.datasets.tests.test_common.check_return_X_y"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_california_housing.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_california_housing.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_california_housing.test_fetch": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "fetch_california_housing_fxt",
    "functools.partial",
    "sklearn.datasets.tests.test_common.check_return_X_y"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_california_housing.test_fetch_asframe": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "fetch_california_housing_fxt",
    "hasattr",
    "isinstance",
    "sklearn.datasets.tests.test_california_housing.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_california_housing.test_pandas_dependency_message": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "ImportError",
    "fetch_california_housing_fxt",
    "sklearn.datasets.tests.test_california_housing.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_common": {
  "data": {
   "symbols_in_volume": [
    "sklearn.datasets.tests.test_common.is_pillow_installed",
    "sklearn.datasets.tests.test_common.pytest"
   ]
  },
  "type": "module"
 },
 "sklearn.datasets.tests.test_common.FETCH_PYTEST_MARKERS": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "sklearn.datasets.tests.test_common.PIL": {
  "data": {
   "shadows": "PIL"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_common._generate_func_supporting_param": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "any",
    "sklearn.datasets.tests.test_common.FETCH_PYTEST_MARKERS",
    "sklearn.datasets.tests.test_common._skip_network_tests",
    "sklearn.datasets.tests.test_common.inspect",
    "sklearn.datasets.tests.test_common.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_common._skip_network_tests": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "sklearn.datasets.tests.test_common.os"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_common.check_as_frame": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "dataset_func",
    "hasattr",
    "isinstance",
    "numpy.all",
    "sklearn.datasets.tests.test_common.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_common.check_pandas_dependency_message": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "ImportError",
    "fetch_func",
    "sklearn.datasets.tests.test_common.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_common.check_return_X_y": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "dataset_func",
    "isinstance",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_common.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_common.is_pillow_installed": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_common.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_common.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_common.pandas": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_common.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_common.sklearn.datasets": {
  "data": {
   "shadows": "sklearn.datasets"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_common.test_common_check_as_frame": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "dataset_func",
    "sklearn.datasets.tests.test_common._generate_func_supporting_param",
    "sklearn.datasets.tests.test_common.check_as_frame",
    "sklearn.datasets.tests.test_common.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_common.test_common_check_pandas_dependency": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "dataset_func",
    "sklearn.datasets.tests.test_common._generate_func_supporting_param",
    "sklearn.datasets.tests.test_common.check_pandas_dependency_message",
    "sklearn.datasets.tests.test_common.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_common.test_common_check_return_X_y": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "dataset_func",
    "sklearn.datasets.tests.test_common._generate_func_supporting_param",
    "sklearn.datasets.tests.test_common.check_return_X_y",
    "sklearn.datasets.tests.test_common.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_covtype": {
  "data": {},
  "type": "module"
 },
 "sklearn.datasets.tests.test_covtype.check_return_X_y": {
  "data": {
   "shadows": "sklearn.datasets.tests.test_common.check_return_X_y"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_covtype.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_covtype.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_covtype.test_fetch": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "fetch_covtype_fxt",
    "functools.partial",
    "sklearn.datasets.tests.test_common.check_return_X_y"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_covtype.test_fetch_asframe": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "fetch_covtype_fxt",
    "hasattr",
    "range",
    "set",
    "sklearn.datasets.tests.test_covtype.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_covtype.test_pandas_dependency_message": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "ImportError",
    "fetch_covtype_fxt",
    "sklearn.datasets.tests.test_covtype.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_kddcup99": {
  "data": {},
  "type": "module"
 },
 "sklearn.datasets.tests.test_kddcup99.check_as_frame": {
  "data": {
   "shadows": "sklearn.datasets.tests.test_common.check_as_frame"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_kddcup99.check_pandas_dependency_message": {
  "data": {
   "shadows": "sklearn.datasets.tests.test_common.check_pandas_dependency_message"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_kddcup99.check_return_X_y": {
  "data": {
   "shadows": "sklearn.datasets.tests.test_common.check_return_X_y"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_kddcup99.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_kddcup99.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_kddcup99.test_fetch_kddcup99_as_frame": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "fetch_kddcup99_fxt",
    "sklearn.datasets.tests.test_common.check_as_frame"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_kddcup99.test_fetch_kddcup99_percent10": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "fetch_kddcup99_fxt",
    "sklearn.datasets.tests.test_kddcup99.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_kddcup99.test_fetch_kddcup99_return_X_y": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "fetch_func",
    "fetch_kddcup99_fxt",
    "functools.partial",
    "sklearn.datasets.tests.test_common.check_return_X_y"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_kddcup99.test_fetch_kddcup99_shuffle": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "fetch_kddcup99_fxt",
    "set"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_kddcup99.test_pandas_dependency_message": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "fetch_kddcup99_fxt",
    "sklearn.datasets.tests.test_common.check_pandas_dependency_message"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_lfw": {
  "data": {},
  "type": "module"
 },
 "sklearn.datasets.tests.test_lfw.FAKE_NAMES": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "sklearn.datasets.tests.test_lfw.LFW_HOME": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "sklearn.datasets.tests.test_lfw.SCIKIT_LEARN_DATA": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "sklearn.datasets.tests.test_lfw.SCIKIT_LEARN_EMPTY_DATA": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "sklearn.datasets.tests.test_lfw.SkipTest": {
  "data": {
   "shadows": "sklearn.utils._testing.SkipTest"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_lfw.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_lfw.check_return_X_y": {
  "data": {
   "shadows": "sklearn.datasets.tests.test_common.check_return_X_y"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_lfw.fetch_lfw_pairs": {
  "data": {
   "shadows": "sklearn.datasets.fetch_lfw_pairs"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_lfw.fetch_lfw_people": {
  "data": {
   "shadows": "sklearn.datasets.fetch_lfw_people"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_lfw.imsave": {
  "data": {
   "shadows": "sklearn.externals._pilutil.imsave"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_lfw.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_lfw.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_lfw.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_lfw.pillow_installed": {
  "data": {
   "shadows": "sklearn.externals._pilutil.pillow_installed"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_lfw.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_lfw.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_lfw.setup_module": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "ImportError",
    "numpy.arange",
    "numpy.random.RandomState",
    "open",
    "range",
    "sklearn.datasets.tests.test_lfw.FAKE_NAMES",
    "sklearn.datasets.tests.test_lfw.LFW_HOME",
    "sklearn.datasets.tests.test_lfw.SCIKIT_LEARN_DATA",
    "sklearn.datasets.tests.test_lfw.SCIKIT_LEARN_EMPTY_DATA",
    "sklearn.datasets.tests.test_lfw.os",
    "sklearn.datasets.tests.test_lfw.random",
    "sklearn.datasets.tests.test_lfw.tempfile",
    "sklearn.externals._pilutil.imsave",
    "sklearn.externals._pilutil.pillow_installed",
    "sklearn.utils._testing.SkipTest"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_lfw.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_lfw.teardown_module": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "sklearn.datasets.tests.test_lfw.SCIKIT_LEARN_DATA",
    "sklearn.datasets.tests.test_lfw.SCIKIT_LEARN_EMPTY_DATA",
    "sklearn.datasets.tests.test_lfw.os",
    "sklearn.datasets.tests.test_lfw.shutil"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_lfw.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_lfw.test_load_empty_lfw_pairs": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "IOError",
    "sklearn.datasets.fetch_lfw_pairs",
    "sklearn.datasets.tests.test_lfw.SCIKIT_LEARN_EMPTY_DATA",
    "sklearn.datasets.tests.test_lfw.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_lfw.test_load_empty_lfw_people": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "IOError",
    "sklearn.datasets.fetch_lfw_people",
    "sklearn.datasets.tests.test_lfw.SCIKIT_LEARN_EMPTY_DATA",
    "sklearn.datasets.tests.test_lfw.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_lfw.test_load_fake_lfw_pairs": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "sklearn.datasets.fetch_lfw_pairs",
    "sklearn.datasets.tests.test_lfw.SCIKIT_LEARN_DATA",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_lfw.test_load_fake_lfw_people": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "functools.partial",
    "sklearn.datasets.fetch_lfw_people",
    "sklearn.datasets.tests.test_common.check_return_X_y",
    "sklearn.datasets.tests.test_lfw.SCIKIT_LEARN_DATA",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_lfw.test_load_fake_lfw_people_too_restrictive": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.datasets.fetch_lfw_people",
    "sklearn.datasets.tests.test_lfw.SCIKIT_LEARN_DATA",
    "sklearn.datasets.tests.test_lfw.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_olivetti_faces": {
  "data": {},
  "type": "module"
 },
 "sklearn.datasets.tests.test_olivetti_faces.Bunch": {
  "data": {
   "shadows": "sklearn.utils.Bunch"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_olivetti_faces.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_olivetti_faces.check_return_X_y": {
  "data": {
   "shadows": "sklearn.datasets.tests.test_common.check_return_X_y"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_olivetti_faces.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_olivetti_faces.test_olivetti_faces": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "fetch_olivetti_faces_fxt",
    "isinstance",
    "numpy.arange",
    "numpy.sort",
    "numpy.unique",
    "sklearn.datasets.tests.test_common.check_return_X_y",
    "sklearn.utils.Bunch",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_openml": {
  "data": {
   "symbols_in_volume": [
    "sklearn.datasets.tests.test_openml.os"
   ]
  },
  "type": "module"
 },
 "sklearn.datasets.tests.test_openml.ArffContainerType": {
  "data": {
   "shadows": "sklearn.externals._arff.ArffContainerType"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_openml.HTTPError": {
  "data": {
   "shadows": "urllib.error.HTTPError"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_openml._DATA_FILE": {
  "data": {
   "shadows": "sklearn.datasets._openml._DATA_FILE"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_openml._MockHTTPResponse": {
  "data": {
   "lineno": 155
  },
  "type": "class"
 },
 "sklearn.datasets.tests.test_openml._MockHTTPResponse.__enter__": {
  "data": {
   "lineno": 174
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_openml._MockHTTPResponse.__exit__": {
  "data": {
   "lineno": 177
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_openml._MockHTTPResponse.__init__": {
  "data": {
   "lineno": 156
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_openml._MockHTTPResponse.__iter__": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "iter"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_openml._MockHTTPResponse.close": {
  "data": {
   "lineno": 163
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_openml._MockHTTPResponse.info": {
  "data": {
   "lineno": 166
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_openml._MockHTTPResponse.read": {
  "data": {
   "lineno": 160
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_openml._arff": {
  "data": {
   "shadows": "sklearn.datasets._openml._arff"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_openml._convert_arff_data": {
  "data": {
   "shadows": "sklearn.datasets._openml._convert_arff_data"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_openml._convert_arff_data_dataframe": {
  "data": {
   "shadows": "sklearn.datasets._openml._convert_arff_data_dataframe"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_openml._feature_to_dtype": {
  "data": {
   "shadows": "sklearn.datasets._openml._feature_to_dtype"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_openml._fetch_dataset_from_openml": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "functools.partial",
    "int",
    "isinstance",
    "len",
    "list",
    "numpy.array_equal",
    "numpy.count_nonzero",
    "numpy.float64",
    "numpy.isfinite",
    "numpy.isnan",
    "numpy.ndarray",
    "numpy.testing.assert_allclose",
    "numpy.unique",
    "range",
    "set",
    "sklearn.datasets.fetch_openml",
    "sklearn.datasets.tests.test_common.check_return_X_y",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_openml._get_data_description_by_id": {
  "data": {
   "shadows": "sklearn.datasets._openml._get_data_description_by_id"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_openml._get_local_path": {
  "data": {
   "shadows": "sklearn.datasets._openml._get_local_path"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_openml._monkey_patch_webbased_functions": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "sklearn.datasets.tests.test_openml.gzip",
    "sklearn.datasets.tests.test_openml.sklearn",
    "sklearn.datasets.tests.test_openml.test_offline"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_openml._monkey_patch_webbased_functions._file_name": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "len",
    "sklearn.datasets.tests.test_openml.re"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_openml._monkey_patch_webbased_functions._mock_urlopen": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "ValueError",
    "_mock_urlopen_data_description",
    "_mock_urlopen_data_features",
    "_mock_urlopen_data_list",
    "_mock_urlopen_download_data"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_openml._monkey_patch_webbased_functions._mock_urlopen_data_description": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "_file_name",
    "open",
    "read_fn",
    "sklearn.datasets.tests.test_openml._MockHTTPResponse",
    "sklearn.datasets.tests.test_openml.currdir",
    "sklearn.datasets.tests.test_openml.os",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_openml._monkey_patch_webbased_functions._mock_urlopen_data_features": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "_file_name",
    "open",
    "read_fn",
    "sklearn.datasets.tests.test_openml._MockHTTPResponse",
    "sklearn.datasets.tests.test_openml.currdir",
    "sklearn.datasets.tests.test_openml.os",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_openml._monkey_patch_webbased_functions._mock_urlopen_data_list": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "_file_name",
    "open",
    "read_fn",
    "sklearn.datasets.tests.test_openml._MockHTTPResponse",
    "sklearn.datasets.tests.test_openml.currdir",
    "sklearn.datasets.tests.test_openml.json",
    "sklearn.datasets.tests.test_openml.os",
    "str",
    "urllib.error.HTTPError"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_openml._monkey_patch_webbased_functions._mock_urlopen_download_data": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "_file_name",
    "open",
    "read_fn",
    "sklearn.datasets.tests.test_openml._MockHTTPResponse",
    "sklearn.datasets.tests.test_openml.currdir",
    "sklearn.datasets.tests.test_openml.os",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_openml._open_openml_url": {
  "data": {
   "shadows": "sklearn.datasets._openml._open_openml_url"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_openml._retry_with_clean_cache": {
  "data": {
   "shadows": "sklearn.datasets._openml._retry_with_clean_cache"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_openml._test_features_list": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "ValueError",
    "decode_column",
    "len",
    "list",
    "numpy.array",
    "numpy.testing.assert_array_equal",
    "range",
    "sklearn.datasets._openml._DATA_FILE.format",
    "sklearn.datasets._openml._arff.COO",
    "sklearn.datasets._openml._arff.DENSE_GEN",
    "sklearn.datasets._openml._arff.load",
    "sklearn.datasets._openml._get_data_description_by_id",
    "sklearn.datasets._openml._open_openml_url",
    "sklearn.datasets.fetch_openml"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_openml._test_features_list.decode_column": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "int",
    "numpy.array",
    "sklearn.utils.is_scalar_nan"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_openml.assert_allclose": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_allclose"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_openml.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_openml.assert_raise_message": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_raise_message"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_openml.assert_warns_message": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_warns_message"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_openml.check_return_X_y": {
  "data": {
   "shadows": "sklearn.datasets.tests.test_common.check_return_X_y"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_openml.config_context": {
  "data": {
   "shadows": "sklearn.config_context"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_openml.currdir": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "sklearn.datasets.tests.test_openml.fails_if_pypy": {
  "data": {
   "shadows": "sklearn.utils._testing.fails_if_pypy"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_openml.fetch_openml": {
  "data": {
   "shadows": "sklearn.datasets.fetch_openml"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_openml.gzip": {
  "data": {
   "shadows": "gzip"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_openml.is_scalar_nan": {
  "data": {
   "shadows": "sklearn.utils.is_scalar_nan"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_openml.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_openml.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_openml.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_openml.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_openml.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_openml.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_openml.scipy.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_openml.sklearn": {
  "data": {
   "shadows": "sklearn"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_openml.test_convert_arff_data_dataframe_warning_low_memory_pandas": {
  "data": {
   "lineno": 527,
   "symbols_in_volume": [
    "UserWarning",
    "sklearn.config_context",
    "sklearn.datasets.fetch_openml",
    "sklearn.datasets.tests.test_openml._monkey_patch_webbased_functions",
    "sklearn.datasets.tests.test_openml.pytest",
    "sklearn.utils._testing.fails_if_pypy"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_openml.test_convert_arff_data_type": {
  "data": {
   "lineno": 1292,
   "symbols_in_volume": [
    "ValueError",
    "list",
    "range",
    "sklearn.datasets._openml._convert_arff_data",
    "sklearn.datasets._openml._convert_arff_data_dataframe",
    "sklearn.datasets.tests.test_openml.pytest",
    "sklearn.externals._arff.ArffContainerType"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_openml.test_dataset_with_openml_error": {
  "data": {
   "lineno": 1170,
   "symbols_in_volume": [
    "UserWarning",
    "sklearn.datasets.fetch_openml",
    "sklearn.datasets.tests.test_openml._monkey_patch_webbased_functions",
    "sklearn.datasets.tests.test_openml.pytest",
    "sklearn.utils._testing.assert_warns_message"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_openml.test_dataset_with_openml_warning": {
  "data": {
   "lineno": 1182,
   "symbols_in_volume": [
    "UserWarning",
    "sklearn.datasets.fetch_openml",
    "sklearn.datasets.tests.test_openml._monkey_patch_webbased_functions",
    "sklearn.datasets.tests.test_openml.pytest",
    "sklearn.utils._testing.assert_warns_message"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_openml.test_decode_anneal": {
  "data": {
   "lineno": 828,
   "symbols_in_volume": [
    "sklearn.datasets.tests.test_openml._monkey_patch_webbased_functions",
    "sklearn.datasets.tests.test_openml._test_features_list"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_openml.test_decode_cpu": {
  "data": {
   "lineno": 871,
   "symbols_in_volume": [
    "sklearn.datasets.tests.test_openml._monkey_patch_webbased_functions",
    "sklearn.datasets.tests.test_openml._test_features_list"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_openml.test_decode_emotions": {
  "data": {
   "lineno": 970,
   "symbols_in_volume": [
    "sklearn.datasets.tests.test_openml._monkey_patch_webbased_functions",
    "sklearn.datasets.tests.test_openml._test_features_list"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_openml.test_decode_iris": {
  "data": {
   "lineno": 784,
   "symbols_in_volume": [
    "sklearn.datasets.tests.test_openml._monkey_patch_webbased_functions",
    "sklearn.datasets.tests.test_openml._test_features_list"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_openml.test_feature_to_dtype": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "numpy.float64",
    "numpy.int64",
    "object",
    "sklearn.datasets._openml._feature_to_dtype",
    "sklearn.datasets.tests.test_openml.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_openml.test_feature_to_dtype_error": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.datasets._openml._feature_to_dtype",
    "sklearn.datasets.tests.test_openml.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_openml.test_fetch_nonexiting": {
  "data": {
   "lineno": 1110,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.datasets.fetch_openml",
    "sklearn.datasets.tests.test_openml._monkey_patch_webbased_functions",
    "sklearn.datasets.tests.test_openml.pytest",
    "sklearn.utils._testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_openml.test_fetch_openml_adultcensus": {
  "data": {
   "lineno": 909,
   "symbols_in_volume": [
    "numpy.float64",
    "object",
    "sklearn.datasets.tests.test_openml._fetch_dataset_from_openml",
    "sklearn.datasets.tests.test_openml._monkey_patch_webbased_functions",
    "sklearn.datasets.tests.test_openml.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_openml.test_fetch_openml_adultcensus_pandas": {
  "data": {
   "lineno": 573,
   "symbols_in_volume": [
    "CategoricalDtype",
    "isinstance",
    "len",
    "sklearn.datasets.fetch_openml",
    "sklearn.datasets.tests.test_openml._monkey_patch_webbased_functions",
    "sklearn.datasets.tests.test_openml.pytest",
    "sklearn.utils._testing.fails_if_pypy"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_openml.test_fetch_openml_adultcensus_pandas_return_X_y": {
  "data": {
   "lineno": 542,
   "symbols_in_volume": [
    "CategoricalDtype",
    "isinstance",
    "len",
    "sklearn.datasets.fetch_openml",
    "sklearn.datasets.tests.test_openml._monkey_patch_webbased_functions",
    "sklearn.datasets.tests.test_openml.pytest",
    "sklearn.utils._testing.fails_if_pypy"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_openml.test_fetch_openml_anneal": {
  "data": {
   "lineno": 809,
   "symbols_in_volume": [
    "numpy.float64",
    "object",
    "sklearn.datasets.tests.test_openml._fetch_dataset_from_openml",
    "sklearn.datasets.tests.test_openml._monkey_patch_webbased_functions",
    "sklearn.datasets.tests.test_openml.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_openml.test_fetch_openml_anneal_multitarget": {
  "data": {
   "lineno": 834,
   "symbols_in_volume": [
    "numpy.float64",
    "object",
    "sklearn.datasets.tests.test_openml._fetch_dataset_from_openml",
    "sklearn.datasets.tests.test_openml._monkey_patch_webbased_functions",
    "sklearn.datasets.tests.test_openml.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_openml.test_fetch_openml_anneal_pandas": {
  "data": {
   "lineno": 413,
   "symbols_in_volume": [
    "CategoricalDtype",
    "isinstance",
    "len",
    "sklearn.datasets.fetch_openml",
    "sklearn.datasets.tests.test_openml._monkey_patch_webbased_functions",
    "sklearn.datasets.tests.test_openml.pytest",
    "sklearn.utils._testing.fails_if_pypy"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_openml.test_fetch_openml_as_frame_auto": {
  "data": {
   "lineno": 510,
   "symbols_in_volume": [
    "isinstance",
    "sklearn.datasets.fetch_openml",
    "sklearn.datasets.tests.test_openml._monkey_patch_webbased_functions",
    "sklearn.datasets.tests.test_openml.pytest",
    "sklearn.utils._testing.fails_if_pypy"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_openml.test_fetch_openml_australian": {
  "data": {
   "lineno": 877,
   "symbols_in_volume": [
    "UserWarning",
    "numpy.float64",
    "object",
    "sklearn.datasets.tests.test_openml._fetch_dataset_from_openml",
    "sklearn.datasets.tests.test_openml._monkey_patch_webbased_functions",
    "sklearn.datasets.tests.test_openml.pytest",
    "sklearn.utils._testing.assert_warns_message"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_openml.test_fetch_openml_australian_pandas_error_sparse": {
  "data": {
   "lineno": 498,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.datasets.fetch_openml",
    "sklearn.datasets.tests.test_openml._monkey_patch_webbased_functions",
    "sklearn.datasets.tests.test_openml.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_openml.test_fetch_openml_cache": {
  "data": {
   "lineno": 1056,
   "symbols_in_volume": [
    "numpy.testing.assert_array_equal",
    "sklearn.datasets.fetch_openml",
    "sklearn.datasets.tests.test_openml._monkey_patch_webbased_functions",
    "sklearn.datasets.tests.test_openml.pytest",
    "sklearn.datasets.tests.test_openml.sklearn",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_openml.test_fetch_openml_cache._mock_urlopen_raise": {
  "data": {
   "lineno": 1058,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_openml.test_fetch_openml_cpu": {
  "data": {
   "lineno": 853,
   "symbols_in_volume": [
    "numpy.float64",
    "sklearn.datasets.tests.test_openml._fetch_dataset_from_openml",
    "sklearn.datasets.tests.test_openml._monkey_patch_webbased_functions",
    "sklearn.datasets.tests.test_openml.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_openml.test_fetch_openml_cpu_pandas": {
  "data": {
   "lineno": 453,
   "symbols_in_volume": [
    "CategoricalDtype",
    "isinstance",
    "numpy.all",
    "numpy.float64",
    "sklearn.datasets.fetch_openml",
    "sklearn.datasets.tests.test_openml._monkey_patch_webbased_functions",
    "sklearn.datasets.tests.test_openml.pytest",
    "sklearn.utils._testing.fails_if_pypy"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_openml.test_fetch_openml_emotions": {
  "data": {
   "lineno": 950,
   "symbols_in_volume": [
    "numpy.float64",
    "object",
    "sklearn.datasets.tests.test_openml._fetch_dataset_from_openml",
    "sklearn.datasets.tests.test_openml._monkey_patch_webbased_functions",
    "sklearn.datasets.tests.test_openml.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_openml.test_fetch_openml_emotions_pandas": {
  "data": {
   "lineno": 655,
   "symbols_in_volume": [
    "CategoricalDtype",
    "isinstance",
    "len",
    "numpy.all",
    "sklearn.datasets.fetch_openml",
    "sklearn.datasets.tests.test_openml._monkey_patch_webbased_functions",
    "sklearn.datasets.tests.test_openml.pytest",
    "sklearn.utils._testing.fails_if_pypy"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_openml.test_fetch_openml_inactive": {
  "data": {
   "lineno": 1094,
   "symbols_in_volume": [
    "UserWarning",
    "int",
    "sklearn.datasets.fetch_openml",
    "sklearn.datasets.tests.test_openml._monkey_patch_webbased_functions",
    "sklearn.datasets.tests.test_openml.pytest",
    "sklearn.utils._testing.assert_warns_message"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_openml.test_fetch_openml_iris": {
  "data": {
   "lineno": 753,
   "symbols_in_volume": [
    "UserWarning",
    "numpy.float64",
    "object",
    "sklearn.datasets.tests.test_openml._fetch_dataset_from_openml",
    "sklearn.datasets.tests.test_openml._monkey_patch_webbased_functions",
    "sklearn.datasets.tests.test_openml.pytest",
    "sklearn.utils._testing.assert_warns_message"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_openml.test_fetch_openml_iris_multitarget": {
  "data": {
   "lineno": 790,
   "symbols_in_volume": [
    "numpy.float64",
    "sklearn.datasets.tests.test_openml._fetch_dataset_from_openml",
    "sklearn.datasets.tests.test_openml._monkey_patch_webbased_functions",
    "sklearn.datasets.tests.test_openml.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_openml.test_fetch_openml_iris_multitarget_pandas": {
  "data": {
   "lineno": 368,
   "symbols_in_volume": [
    "CategoricalDtype",
    "isinstance",
    "numpy.all",
    "numpy.float64",
    "sklearn.datasets.fetch_openml",
    "sklearn.datasets.tests.test_openml._monkey_patch_webbased_functions",
    "sklearn.datasets.tests.test_openml.pytest",
    "sklearn.utils._testing.fails_if_pypy"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_openml.test_fetch_openml_iris_pandas": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "CategoricalDtype",
    "isinstance",
    "numpy.all",
    "numpy.float64",
    "sklearn.datasets.fetch_openml",
    "sklearn.datasets.tests.test_openml._monkey_patch_webbased_functions",
    "sklearn.datasets.tests.test_openml.pytest",
    "sklearn.utils._testing.fails_if_pypy"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_openml.test_fetch_openml_iris_pandas_equal_to_no_frame": {
  "data": {
   "lineno": 346,
   "symbols_in_volume": [
    "sklearn.datasets.fetch_openml",
    "sklearn.datasets.tests.test_openml._monkey_patch_webbased_functions",
    "sklearn.datasets.tests.test_openml.pytest",
    "sklearn.utils._testing.assert_allclose",
    "sklearn.utils._testing.assert_array_equal",
    "sklearn.utils._testing.fails_if_pypy"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_openml.test_fetch_openml_miceprotein": {
  "data": {
   "lineno": 928,
   "symbols_in_volume": [
    "numpy.float64",
    "object",
    "sklearn.datasets.tests.test_openml._fetch_dataset_from_openml",
    "sklearn.datasets.tests.test_openml._monkey_patch_webbased_functions",
    "sklearn.datasets.tests.test_openml.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_openml.test_fetch_openml_miceprotein_pandas": {
  "data": {
   "lineno": 612,
   "symbols_in_volume": [
    "CategoricalDtype",
    "isinstance",
    "len",
    "numpy.all",
    "numpy.float64",
    "sklearn.datasets.fetch_openml",
    "sklearn.datasets.tests.test_openml._monkey_patch_webbased_functions",
    "sklearn.datasets.tests.test_openml.pytest",
    "sklearn.utils._testing.fails_if_pypy"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_openml.test_fetch_openml_notarget": {
  "data": {
   "lineno": 1080,
   "symbols_in_volume": [
    "sklearn.datasets.fetch_openml",
    "sklearn.datasets.tests.test_openml._monkey_patch_webbased_functions",
    "sklearn.datasets.tests.test_openml.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_openml.test_fetch_openml_raises_illegal_argument": {
  "data": {
   "lineno": 1216,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.datasets.fetch_openml",
    "sklearn.utils._testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_openml.test_fetch_openml_raises_missing_values_target": {
  "data": {
   "lineno": 1208,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.datasets.fetch_openml",
    "sklearn.datasets.tests.test_openml._monkey_patch_webbased_functions",
    "sklearn.datasets.tests.test_openml.pytest",
    "sklearn.utils._testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_openml.test_fetch_openml_titanic_pandas": {
  "data": {
   "lineno": 696,
   "symbols_in_volume": [
    "CategoricalDtype",
    "isinstance",
    "numpy.all",
    "numpy.float64",
    "object",
    "sklearn.datasets.fetch_openml",
    "sklearn.datasets.tests.test_openml._monkey_patch_webbased_functions",
    "sklearn.datasets.tests.test_openml.pytest",
    "sklearn.utils._testing.fails_if_pypy"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_openml.test_fetch_openml_verify_checksum": {
  "data": {
   "lineno": 1250,
   "symbols_in_volume": [
    "ValueError",
    "bytearray",
    "len",
    "sklearn.datasets.tests.test_openml._monkey_patch_webbased_functions",
    "sklearn.datasets.tests.test_openml.currdir",
    "sklearn.datasets.tests.test_openml.gzip",
    "sklearn.datasets.tests.test_openml.os",
    "sklearn.datasets.tests.test_openml.pytest",
    "sklearn.datasets.tests.test_openml.sklearn",
    "sklearn.utils._testing.fails_if_pypy",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_openml.test_fetch_openml_verify_checksum.swap_file_mock": {
  "data": {
   "lineno": 1275,
   "symbols_in_volume": [
    "mocked_openml_url",
    "open",
    "sklearn.datasets.tests.test_openml._MockHTTPResponse"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_openml.test_fetch_openml_with_ignored_feature": {
  "data": {
   "lineno": 1232,
   "symbols_in_volume": [
    "sklearn.datasets.tests.test_openml._monkey_patch_webbased_functions",
    "sklearn.datasets.tests.test_openml.pytest",
    "sklearn.datasets.tests.test_openml.sklearn"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_openml.test_illegal_column": {
  "data": {
   "lineno": 1194,
   "symbols_in_volume": [
    "KeyError",
    "sklearn.datasets.fetch_openml",
    "sklearn.datasets.tests.test_openml._monkey_patch_webbased_functions",
    "sklearn.datasets.tests.test_openml.pytest",
    "sklearn.utils._testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_openml.test_offline": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "sklearn.datasets.tests.test_openml.test_open_openml_url_cache": {
  "data": {
   "lineno": 976,
   "symbols_in_volume": [
    "sklearn.datasets._openml._get_local_path",
    "sklearn.datasets._openml._open_openml_url",
    "sklearn.datasets.tests.test_openml._monkey_patch_webbased_functions",
    "sklearn.datasets.tests.test_openml.os",
    "sklearn.datasets.tests.test_openml.pytest",
    "sklearn.datasets.tests.test_openml.sklearn",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_openml.test_open_openml_url_unlinks_local_path": {
  "data": {
   "lineno": 994,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.datasets._openml._get_local_path",
    "sklearn.datasets._openml._open_openml_url",
    "sklearn.datasets.tests.test_openml.os",
    "sklearn.datasets.tests.test_openml.pytest",
    "sklearn.datasets.tests.test_openml.sklearn",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_openml.test_open_openml_url_unlinks_local_path._mock_urlopen": {
  "data": {
   "lineno": 1003,
   "symbols_in_volume": [
    "ValueError",
    "open"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_openml.test_raises_illegal_multitarget": {
  "data": {
   "lineno": 1120,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.datasets.fetch_openml",
    "sklearn.datasets.tests.test_openml._monkey_patch_webbased_functions",
    "sklearn.datasets.tests.test_openml.pytest",
    "sklearn.utils._testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_openml.test_retry_with_clean_cache": {
  "data": {
   "lineno": 1017,
   "symbols_in_volume": [
    "RuntimeWarning",
    "_load_data",
    "open",
    "sklearn.datasets._openml._get_local_path",
    "sklearn.datasets.tests.test_openml.os",
    "sklearn.datasets.tests.test_openml.pytest",
    "sklearn.datasets.tests.test_openml.sklearn",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_openml.test_retry_with_clean_cache._load_data": {
  "data": {
   "lineno": 1027,
   "symbols_in_volume": [
    "Exception",
    "sklearn.datasets._openml._retry_with_clean_cache",
    "sklearn.datasets.tests.test_openml.os"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_openml.test_retry_with_clean_cache_http_error": {
  "data": {
   "lineno": 1040,
   "symbols_in_volume": [
    "_load_data",
    "sklearn.datasets.tests.test_openml.pytest",
    "sklearn.datasets.tests.test_openml.sklearn",
    "str",
    "urllib.error.HTTPError"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_openml.test_retry_with_clean_cache_http_error._load_data": {
  "data": {
   "lineno": 1045,
   "symbols_in_volume": [
    "sklearn.datasets._openml._retry_with_clean_cache",
    "urllib.error.HTTPError"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_openml.test_string_attribute_without_dataframe": {
  "data": {
   "lineno": 1158,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.datasets.fetch_openml",
    "sklearn.datasets.tests.test_openml._monkey_patch_webbased_functions",
    "sklearn.datasets.tests.test_openml.pytest",
    "sklearn.utils._testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_openml.test_warn_ignore_attribute": {
  "data": {
   "lineno": 1132,
   "symbols_in_volume": [
    "UserWarning",
    "sklearn.datasets.fetch_openml",
    "sklearn.datasets.tests.test_openml._monkey_patch_webbased_functions",
    "sklearn.datasets.tests.test_openml.pytest",
    "sklearn.utils._testing.assert_warns_message"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_rcv1": {
  "data": {},
  "type": "module"
 },
 "sklearn.datasets.tests.test_rcv1.assert_almost_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_almost_equal"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_rcv1.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_rcv1.check_return_X_y": {
  "data": {
   "shadows": "sklearn.datasets.tests.test_common.check_return_X_y"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_rcv1.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_rcv1.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_rcv1.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_rcv1.test_fetch_rcv1": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "fetch_rcv1_fxt",
    "functools.partial",
    "len",
    "numpy.sort",
    "scipy.sparse.issparse",
    "sklearn.datasets.tests.test_common.check_return_X_y",
    "sklearn.utils._testing.assert_almost_equal",
    "sklearn.utils._testing.assert_array_equal",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_samples_generator": {
  "data": {},
  "type": "module"
 },
 "sklearn.datasets.tests.test_samples_generator.assert_all_finite": {
  "data": {
   "shadows": "sklearn.utils.validation.assert_all_finite"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_samples_generator.assert_almost_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_almost_equal"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_samples_generator.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_samples_generator.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_samples_generator.assert_raise_message": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_raise_message"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_samples_generator.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_samples_generator.eig": {
  "data": {
   "shadows": "numpy.linalg.eig"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_samples_generator.make_biclusters": {
  "data": {
   "shadows": "sklearn.datasets.make_biclusters"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_samples_generator.make_blobs": {
  "data": {
   "shadows": "sklearn.datasets.make_blobs"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_samples_generator.make_checkerboard": {
  "data": {
   "shadows": "sklearn.datasets.make_checkerboard"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_samples_generator.make_circles": {
  "data": {
   "shadows": "sklearn.datasets.make_circles"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_samples_generator.make_classification": {
  "data": {
   "shadows": "sklearn.datasets.make_classification"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_samples_generator.make_friedman1": {
  "data": {
   "shadows": "sklearn.datasets.make_friedman1"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_samples_generator.make_friedman2": {
  "data": {
   "shadows": "sklearn.datasets.make_friedman2"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_samples_generator.make_friedman3": {
  "data": {
   "shadows": "sklearn.datasets.make_friedman3"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_samples_generator.make_hastie_10_2": {
  "data": {
   "shadows": "sklearn.datasets.make_hastie_10_2"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_samples_generator.make_low_rank_matrix": {
  "data": {
   "shadows": "sklearn.datasets.make_low_rank_matrix"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_samples_generator.make_moons": {
  "data": {
   "shadows": "sklearn.datasets.make_moons"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_samples_generator.make_multilabel_classification": {
  "data": {
   "shadows": "sklearn.datasets.make_multilabel_classification"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_samples_generator.make_regression": {
  "data": {
   "shadows": "sklearn.datasets.make_regression"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_samples_generator.make_s_curve": {
  "data": {
   "shadows": "sklearn.datasets.make_s_curve"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_samples_generator.make_sparse_coded_signal": {
  "data": {
   "shadows": "sklearn.datasets.make_sparse_coded_signal"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_samples_generator.make_sparse_uncorrelated": {
  "data": {
   "shadows": "sklearn.datasets.make_sparse_uncorrelated"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_samples_generator.make_spd_matrix": {
  "data": {
   "shadows": "sklearn.datasets.make_spd_matrix"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_samples_generator.make_swiss_roll": {
  "data": {
   "shadows": "sklearn.datasets.make_swiss_roll"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_samples_generator.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_samples_generator.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_samples_generator.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_samples_generator.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_samples_generator.svd": {
  "data": {
   "shadows": "numpy.linalg.svd"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_samples_generator.test_make_biclusters": {
  "data": {
   "lineno": 455,
   "symbols_in_volume": [
    "sklearn.datasets.make_biclusters",
    "sklearn.utils._testing.assert_array_almost_equal",
    "sklearn.utils.validation.assert_all_finite"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_samples_generator.test_make_blobs": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": [
    "enumerate",
    "numpy.array",
    "numpy.unique",
    "sklearn.datasets.make_blobs",
    "sklearn.utils._testing.assert_almost_equal",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_samples_generator.test_make_blobs_error": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "sklearn.datasets.make_blobs",
    "sklearn.utils._testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_samples_generator.test_make_blobs_n_samples_centers_none": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": [
    "all",
    "len",
    "numpy.array",
    "numpy.bincount",
    "sklearn.datasets.make_blobs",
    "sklearn.datasets.tests.test_samples_generator.pytest",
    "sum",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_samples_generator.test_make_blobs_n_samples_list": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "all",
    "len",
    "numpy.bincount",
    "sklearn.datasets.make_blobs",
    "sum"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_samples_generator.test_make_blobs_n_samples_list_with_centers": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "all",
    "enumerate",
    "len",
    "numpy.array",
    "numpy.bincount",
    "sklearn.datasets.make_blobs",
    "sklearn.utils._testing.assert_almost_equal",
    "sum",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_samples_generator.test_make_blobs_return_centers": {
  "data": {
   "lineno": 327,
   "symbols_in_volume": [
    "len",
    "sklearn.datasets.make_blobs"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_samples_generator.test_make_checkerboard": {
  "data": {
   "lineno": 470,
   "symbols_in_volume": [
    "sklearn.datasets.make_checkerboard",
    "sklearn.utils._testing.assert_array_almost_equal",
    "sklearn.utils.validation.assert_all_finite"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_samples_generator.test_make_circles": {
  "data": {
   "lineno": 516,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.datasets.make_circles",
    "sklearn.datasets.tests.test_samples_generator.pytest",
    "sklearn.utils._testing.assert_almost_equal",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_samples_generator.test_make_circles_unbalanced": {
  "data": {
   "lineno": 545,
   "symbols_in_volume": [
    "ValueError",
    "numpy.sum",
    "sklearn.datasets.make_circles",
    "sklearn.datasets.tests.test_samples_generator.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_samples_generator.test_make_classification": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "numpy.unique",
    "sklearn.datasets.make_classification",
    "sum"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_samples_generator.test_make_classification_informative_features": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "AssertionError",
    "ValueError",
    "collections.defaultdict",
    "functools.partial",
    "int",
    "len",
    "make",
    "numpy.abs",
    "numpy.bincount",
    "numpy.ones",
    "numpy.sign",
    "numpy.unique",
    "range",
    "set",
    "sklearn.datasets.make_classification",
    "sklearn.datasets.tests.test_samples_generator.pytest",
    "sklearn.utils._testing.assert_array_almost_equal",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_samples_generator.test_make_classification_weights_array_or_list_ok": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.datasets.make_classification",
    "sklearn.datasets.tests.test_samples_generator.pytest",
    "sklearn.utils._testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_samples_generator.test_make_classification_weights_type": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "numpy.random.random",
    "sklearn.datasets.make_classification",
    "sklearn.datasets.tests.test_samples_generator.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_samples_generator.test_make_friedman1": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "numpy.pi",
    "numpy.sin",
    "sklearn.datasets.make_friedman1",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_samples_generator.test_make_friedman2": {
  "data": {
   "lineno": 370,
   "symbols_in_volume": [
    "sklearn.datasets.make_friedman2",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_samples_generator.test_make_friedman3": {
  "data": {
   "lineno": 382,
   "symbols_in_volume": [
    "numpy.arctan",
    "sklearn.datasets.make_friedman3",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_samples_generator.test_make_hastie_10_2": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "numpy.unique",
    "sklearn.datasets.make_hastie_10_2"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_samples_generator.test_make_low_rank_matrix": {
  "data": {
   "lineno": 393,
   "symbols_in_volume": [
    "numpy.linalg.svd",
    "sklearn.datasets.make_low_rank_matrix",
    "sum"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_samples_generator.test_make_moons": {
  "data": {
   "lineno": 491,
   "symbols_in_volume": [
    "sklearn.datasets.make_moons",
    "sklearn.utils._testing.assert_almost_equal",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_samples_generator.test_make_moons_unbalanced": {
  "data": {
   "lineno": 500,
   "symbols_in_volume": [
    "ValueError",
    "numpy.sum",
    "sklearn.datasets.make_moons",
    "sklearn.datasets.tests.test_samples_generator.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_samples_generator.test_make_multilabel_classification_return_indicator": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.sum",
    "sklearn.datasets.make_multilabel_classification",
    "sklearn.utils._testing.assert_almost_equal",
    "sklearn.utils._testing.assert_array_almost_equal",
    "sklearn.utils._testing.assert_array_equal",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_samples_generator.test_make_multilabel_classification_return_indicator_sparse": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "scipy.sparse.issparse",
    "sklearn.datasets.make_multilabel_classification",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_samples_generator.test_make_multilabel_classification_return_sequences": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "len",
    "max",
    "min",
    "sklearn.datasets.make_multilabel_classification",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_samples_generator.test_make_multilabel_classification_valid_arguments": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.datasets.make_multilabel_classification",
    "sklearn.datasets.tests.test_samples_generator.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_samples_generator.test_make_regression": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.std",
    "sklearn.datasets.make_regression",
    "sklearn.utils._testing.assert_almost_equal",
    "sum"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_samples_generator.test_make_regression_multitarget": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.std",
    "sklearn.datasets.make_regression",
    "sklearn.utils._testing.assert_almost_equal",
    "sklearn.utils._testing.assert_array_equal",
    "sum"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_samples_generator.test_make_s_curve": {
  "data": {
   "lineno": 446,
   "symbols_in_volume": [
    "numpy.cos",
    "numpy.sign",
    "numpy.sin",
    "sklearn.datasets.make_s_curve",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_samples_generator.test_make_sparse_coded_signal": {
  "data": {
   "lineno": 404,
   "symbols_in_volume": [
    "len",
    "numpy.dot",
    "numpy.flatnonzero",
    "numpy.ones",
    "numpy.sqrt",
    "sklearn.datasets.make_sparse_coded_signal",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_samples_generator.test_make_sparse_uncorrelated": {
  "data": {
   "lineno": 418,
   "symbols_in_volume": [
    "sklearn.datasets.make_sparse_uncorrelated"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_samples_generator.test_make_spd_matrix": {
  "data": {
   "lineno": 425,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.linalg.eig",
    "sklearn.datasets.make_spd_matrix",
    "sklearn.utils._testing.assert_array_almost_equal",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_samples_generator.test_make_swiss_roll": {
  "data": {
   "lineno": 437,
   "symbols_in_volume": [
    "numpy.cos",
    "numpy.sin",
    "sklearn.datasets.make_swiss_roll",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_svmlight_format": {
  "data": {
   "symbols_in_volume": [
    "sklearn.datasets.tests.test_svmlight_format.currdir",
    "sklearn.datasets.tests.test_svmlight_format.os",
    "sklearn.utils._testing.fails_if_pypy"
   ]
  },
  "type": "module"
 },
 "sklearn.datasets.tests.test_svmlight_format.BZ2File": {
  "data": {
   "shadows": "bz2.BZ2File"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_svmlight_format.BytesIO": {
  "data": {
   "shadows": "io.BytesIO"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_svmlight_format.NamedTemporaryFile": {
  "data": {
   "shadows": "tempfile.NamedTemporaryFile"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_svmlight_format.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_svmlight_format.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_svmlight_format.currdir": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "sklearn.datasets.tests.test_svmlight_format.datafile": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "sklearn.datasets.tests.test_svmlight_format.dump_svmlight_file": {
  "data": {
   "shadows": "sklearn.datasets.dump_svmlight_file"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_svmlight_format.fails_if_pypy": {
  "data": {
   "shadows": "sklearn.utils._testing.fails_if_pypy"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_svmlight_format.gzip": {
  "data": {
   "shadows": "gzip"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_svmlight_format.invalidfile": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "sklearn.datasets.tests.test_svmlight_format.invalidfile2": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "sklearn.datasets.tests.test_svmlight_format.load_svmlight_file": {
  "data": {
   "shadows": "sklearn.datasets.load_svmlight_file"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_svmlight_format.load_svmlight_files": {
  "data": {
   "shadows": "sklearn.datasets.load_svmlight_files"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_svmlight_format.multifile": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "sklearn.datasets.tests.test_svmlight_format.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_svmlight_format.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_svmlight_format.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_svmlight_format.pytestmark": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "sklearn.datasets.tests.test_svmlight_format.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_svmlight_format.sklearn": {
  "data": {
   "shadows": "sklearn"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_svmlight_format.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_svmlight_format.test_dump": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "io.BytesIO",
    "numpy.arange",
    "numpy.float32",
    "numpy.float64",
    "numpy.int32",
    "numpy.int64",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.issparse",
    "sklearn.datasets.dump_svmlight_file",
    "sklearn.datasets.load_svmlight_file",
    "sklearn.datasets.tests.test_svmlight_format.datafile",
    "sklearn.datasets.tests.test_svmlight_format.sklearn",
    "sklearn.utils._testing.assert_array_almost_equal",
    "sklearn.utils._testing.assert_array_equal",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_svmlight_format.test_dump_comment": {
  "data": {
   "lineno": 333,
   "symbols_in_volume": [
    "UnicodeDecodeError",
    "ValueError",
    "io.BytesIO",
    "sklearn.datasets.dump_svmlight_file",
    "sklearn.datasets.load_svmlight_file",
    "sklearn.datasets.tests.test_svmlight_format.datafile",
    "sklearn.datasets.tests.test_svmlight_format.pytest",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_svmlight_format.test_dump_concise": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "io.BytesIO",
    "sklearn.datasets.dump_svmlight_file",
    "sklearn.datasets.load_svmlight_file",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_svmlight_format.test_dump_invalid": {
  "data": {
   "lineno": 366,
   "symbols_in_volume": [
    "ValueError",
    "io.BytesIO",
    "sklearn.datasets.dump_svmlight_file",
    "sklearn.datasets.load_svmlight_file",
    "sklearn.datasets.tests.test_svmlight_format.datafile",
    "sklearn.datasets.tests.test_svmlight_format.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_svmlight_format.test_dump_multilabel": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "io.BytesIO",
    "scipy.sparse.csr_matrix",
    "sklearn.datasets.dump_svmlight_file"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_svmlight_format.test_dump_query_id": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": [
    "io.BytesIO",
    "numpy.arange",
    "sklearn.datasets.dump_svmlight_file",
    "sklearn.datasets.load_svmlight_file",
    "sklearn.datasets.tests.test_svmlight_format.datafile",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_svmlight_format.test_invalid_filename": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "IOError",
    "sklearn.datasets.load_svmlight_file",
    "sklearn.datasets.tests.test_svmlight_format.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_svmlight_format.test_load_compressed": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "bz2.BZ2File",
    "open",
    "sklearn.datasets.load_svmlight_file",
    "sklearn.datasets.tests.test_svmlight_format.datafile",
    "sklearn.datasets.tests.test_svmlight_format.gzip",
    "sklearn.datasets.tests.test_svmlight_format.os",
    "sklearn.datasets.tests.test_svmlight_format.shutil",
    "sklearn.utils._testing.assert_array_almost_equal",
    "tempfile.NamedTemporaryFile"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_svmlight_format.test_load_invalid_file": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.datasets.load_svmlight_file",
    "sklearn.datasets.tests.test_svmlight_format.invalidfile",
    "sklearn.datasets.tests.test_svmlight_format.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_svmlight_format.test_load_invalid_file2": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.datasets.load_svmlight_files",
    "sklearn.datasets.tests.test_svmlight_format.datafile",
    "sklearn.datasets.tests.test_svmlight_format.invalidfile",
    "sklearn.datasets.tests.test_svmlight_format.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_svmlight_format.test_load_invalid_order_file": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.datasets.load_svmlight_file",
    "sklearn.datasets.tests.test_svmlight_format.invalidfile2",
    "sklearn.datasets.tests.test_svmlight_format.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_svmlight_format.test_load_large_qid": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "io.BytesIO",
    "numpy.arange",
    "numpy.unique",
    "range",
    "sklearn.datasets.load_svmlight_file",
    "sklearn.datasets.tests.test_svmlight_format.pytest",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_svmlight_format.test_load_offset_exhaustive_splits": {
  "data": {
   "lineno": 479,
   "symbols_in_volume": [
    "io.BytesIO",
    "len",
    "numpy.arange",
    "numpy.array",
    "numpy.concatenate",
    "numpy.random.RandomState",
    "range",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.vstack",
    "sklearn.datasets.dump_svmlight_file",
    "sklearn.datasets.load_svmlight_file",
    "sklearn.utils._testing.assert_array_almost_equal",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_svmlight_format.test_load_svmlight_file": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "sklearn.datasets.load_svmlight_file",
    "sklearn.datasets.tests.test_svmlight_format.datafile",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_svmlight_format.test_load_svmlight_file_fd": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "sklearn.datasets.load_svmlight_file",
    "sklearn.datasets.tests.test_svmlight_format.datafile",
    "sklearn.datasets.tests.test_svmlight_format.os",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_svmlight_format.test_load_svmlight_file_multilabel": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "sklearn.datasets.load_svmlight_file",
    "sklearn.datasets.tests.test_svmlight_format.multifile"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_svmlight_format.test_load_svmlight_file_n_features": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.datasets.load_svmlight_file",
    "sklearn.datasets.tests.test_svmlight_format.datafile",
    "sklearn.datasets.tests.test_svmlight_format.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_svmlight_format.test_load_svmlight_files": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.float64",
    "sklearn.datasets.load_svmlight_files",
    "sklearn.datasets.tests.test_svmlight_format.datafile",
    "sklearn.utils._testing.assert_array_almost_equal",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_svmlight_format.test_load_with_long_qid": {
  "data": {
   "lineno": 394,
   "symbols_in_volume": [
    "io.BytesIO",
    "sklearn.datasets.dump_svmlight_file",
    "sklearn.datasets.load_svmlight_file",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_svmlight_format.test_load_with_offsets": {
  "data": {
   "lineno": 441,
   "symbols_in_volume": [
    "io.BytesIO",
    "len",
    "numpy.concatenate",
    "numpy.random.RandomState",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.vstack",
    "sklearn.datasets.dump_svmlight_file",
    "sklearn.datasets.load_svmlight_file",
    "sklearn.datasets.tests.test_svmlight_format.pytest",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_svmlight_format.test_load_with_offsets_error": {
  "data": {
   "lineno": 519,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.datasets.load_svmlight_file",
    "sklearn.datasets.tests.test_svmlight_format.datafile",
    "sklearn.datasets.tests.test_svmlight_format.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_svmlight_format.test_load_with_qid": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "io.BytesIO",
    "sklearn.datasets.load_svmlight_file",
    "sklearn.datasets.load_svmlight_files",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_svmlight_format.test_load_zero_based": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "ValueError",
    "io.BytesIO",
    "sklearn.datasets.load_svmlight_file",
    "sklearn.datasets.tests.test_svmlight_format.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_svmlight_format.test_load_zero_based_auto": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "io.BytesIO",
    "sklearn.datasets.load_svmlight_file",
    "sklearn.datasets.load_svmlight_files"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_svmlight_format.test_load_zeros": {
  "data": {
   "lineno": 428,
   "symbols_in_volume": [
    "io.BytesIO",
    "numpy.array",
    "numpy.zeros",
    "scipy.sparse.csr_matrix",
    "sklearn.datasets.dump_svmlight_file",
    "sklearn.datasets.load_svmlight_file",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_svmlight_format.test_not_a_filename": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "TypeError",
    "sklearn.datasets.load_svmlight_file",
    "sklearn.datasets.tests.test_svmlight_format.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition": {
  "data": {},
  "type": "module"
 },
 "sklearn.decomposition.__all__": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "sklearn.decomposition._base": {
  "data": {},
  "type": "module"
 },
 "sklearn.decomposition._base.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "sklearn.decomposition._base._BasePCA": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "abc.ABCMeta"
   ]
  },
  "type": "class"
 },
 "sklearn.decomposition._base._BasePCA.fit": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition._base._BasePCA.get_covariance": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "len",
    "numpy.dot",
    "numpy.maximum",
    "numpy.newaxis",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition._base._BasePCA.get_precision": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "len",
    "numpy.dot",
    "numpy.eye",
    "numpy.maximum",
    "numpy.newaxis",
    "numpy.sqrt",
    "scipy.linalg.inv"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition._base._BasePCA.inverse_transform": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.newaxis",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition._base._BasePCA.transform": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "check_is_fitted",
    "numpy.dot",
    "numpy.float32",
    "numpy.float64",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition._base.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "sklearn.decomposition._base.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "sklearn.decomposition._base.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.decomposition._dict_learning": {
  "data": {},
  "type": "module"
 },
 "sklearn.decomposition._dict_learning.DictionaryLearning": {
  "data": {
   "lineno": 1129,
   "symbols_in_volume": [
    "sklearn.decomposition._dict_learning._BaseSparseCoding"
   ]
  },
  "type": "class"
 },
 "sklearn.decomposition._dict_learning.DictionaryLearning.__init__": {
  "data": {
   "lineno": 1296,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition._dict_learning.DictionaryLearning.fit": {
  "data": {
   "lineno": 1320,
   "symbols_in_volume": [
    "check_random_state",
    "sklearn.decomposition._dict_learning.dict_learning"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition._dict_learning.MiniBatchDictionaryLearning": {
  "data": {
   "lineno": 1361,
   "symbols_in_volume": [
    "sklearn.decomposition._dict_learning._BaseSparseCoding"
   ]
  },
  "type": "class"
 },
 "sklearn.decomposition._dict_learning.MiniBatchDictionaryLearning.__init__": {
  "data": {
   "lineno": 1537,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition._dict_learning.MiniBatchDictionaryLearning.fit": {
  "data": {
   "lineno": 1562,
   "symbols_in_volume": [
    "check_random_state",
    "sklearn.decomposition._dict_learning.dict_learning_online"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition._dict_learning.MiniBatchDictionaryLearning.partial_fit": {
  "data": {
   "lineno": 1601,
   "symbols_in_volume": [
    "check_random_state",
    "getattr",
    "hasattr",
    "len",
    "sklearn.decomposition._dict_learning.dict_learning_online"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition._dict_learning.Parallel": {
  "data": {
   "shadows": "joblib.Parallel"
  },
  "type": "import"
 },
 "sklearn.decomposition._dict_learning.SparseCoder": {
  "data": {
   "lineno": 949,
   "symbols_in_volume": [
    "sklearn.decomposition._dict_learning._BaseSparseCoding"
   ]
  },
  "type": "class"
 },
 "sklearn.decomposition._dict_learning.SparseCoder.__init__": {
  "data": {
   "lineno": 1061,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition._dict_learning.SparseCoder._more_tags": {
  "data": {
   "lineno": 1117
  },
  "type": "function"
 },
 "sklearn.decomposition._dict_learning.SparseCoder.components_": {
  "data": {
   "lineno": 1091,
   "symbols_in_volume": [
    "deprecated",
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition._dict_learning.SparseCoder.fit": {
  "data": {
   "lineno": 1073
  },
  "type": "function"
 },
 "sklearn.decomposition._dict_learning.SparseCoder.n_components_": {
  "data": {
   "lineno": 1120,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition._dict_learning.SparseCoder.n_features_in_": {
  "data": {
   "lineno": 1124,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition._dict_learning.SparseCoder.transform": {
  "data": {
   "lineno": 1098,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition._dict_learning._BaseSparseCoding": {
  "data": {
   "lineno": 894
  },
  "type": "class"
 },
 "sklearn.decomposition._dict_learning._BaseSparseCoding.__init__": {
  "data": {
   "lineno": 896
  },
  "type": "function"
 },
 "sklearn.decomposition._dict_learning._BaseSparseCoding._transform": {
  "data": {
   "lineno": 907,
   "symbols_in_volume": [
    "numpy.empty",
    "numpy.maximum",
    "numpy.minimum",
    "sklearn.decomposition._dict_learning.sparse_encode"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition._dict_learning._BaseSparseCoding.transform": {
  "data": {
   "lineno": 928,
   "symbols_in_volume": [
    "check_is_fitted"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition._dict_learning._check_positive_coding": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition._dict_learning._sparse_encode": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "Lars",
    "Lasso",
    "LassoLars",
    "ValueError",
    "float",
    "int",
    "numpy.abs",
    "numpy.clip",
    "numpy.dot",
    "numpy.maximum",
    "numpy.newaxis",
    "numpy.seterr",
    "numpy.sign",
    "orthogonal_mp_gram",
    "row_norms",
    "sklearn.decomposition._dict_learning._check_positive_coding"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition._dict_learning._update_dict": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "check_random_state",
    "gemm",
    "ger",
    "len",
    "nrm2",
    "numpy.clip",
    "numpy.dot",
    "print",
    "range",
    "scipy.linalg.get_blas_funcs",
    "sklearn.decomposition._dict_learning.sys"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition._dict_learning.ceil": {
  "data": {
   "shadows": "math.ceil"
  },
  "type": "import"
 },
 "sklearn.decomposition._dict_learning.dict_learning": {
  "data": {
   "lineno": 438,
   "symbols_in_volume": [
    "ValueError",
    "callback",
    "check_random_state",
    "float",
    "len",
    "locals",
    "numpy.abs",
    "numpy.array",
    "numpy.c_",
    "numpy.nan",
    "numpy.newaxis",
    "numpy.r_",
    "numpy.sum",
    "numpy.zeros",
    "print",
    "range",
    "scipy.linalg.svd",
    "sklearn.decomposition._dict_learning._check_positive_coding",
    "sklearn.decomposition._dict_learning._update_dict",
    "sklearn.decomposition._dict_learning.sparse_encode",
    "sklearn.decomposition._dict_learning.sys",
    "sklearn.decomposition._dict_learning.time"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition._dict_learning.dict_learning_online": {
  "data": {
   "lineno": 635,
   "symbols_in_volume": [
    "ValueError",
    "callback",
    "check_array",
    "check_random_state",
    "float",
    "gen_batches",
    "len",
    "locals",
    "math.ceil",
    "numpy.dot",
    "numpy.float64",
    "numpy.newaxis",
    "numpy.r_",
    "numpy.require",
    "numpy.zeros",
    "print",
    "randomized_svd",
    "range",
    "sklearn.decomposition._dict_learning._check_positive_coding",
    "sklearn.decomposition._dict_learning._update_dict",
    "sklearn.decomposition._dict_learning.itertools",
    "sklearn.decomposition._dict_learning.sparse_encode",
    "sklearn.decomposition._dict_learning.sys",
    "sklearn.decomposition._dict_learning.time",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition._dict_learning.effective_n_jobs": {
  "data": {
   "shadows": "joblib.effective_n_jobs"
  },
  "type": "import"
 },
 "sklearn.decomposition._dict_learning.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "sklearn.decomposition._dict_learning.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "sklearn.decomposition._dict_learning.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.decomposition._dict_learning.sparse_encode": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "check_array",
    "delayed",
    "gen_even_slices",
    "joblib.Parallel",
    "joblib.effective_n_jobs",
    "list",
    "max",
    "min",
    "numpy.dot",
    "numpy.empty",
    "sklearn.decomposition._dict_learning._sparse_encode",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition._dict_learning.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "sklearn.decomposition._dict_learning.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "sklearn.decomposition._factor_analysis": {
  "data": {},
  "type": "module"
 },
 "sklearn.decomposition._factor_analysis.FactorAnalysis": {
  "data": {
   "lineno": 35
  },
  "type": "class"
 },
 "sklearn.decomposition._factor_analysis.FactorAnalysis.__init__": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition._factor_analysis.FactorAnalysis._rotate": {
  "data": {
   "lineno": 381,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.decomposition._factor_analysis._ortho_rotation"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition._factor_analysis.FactorAnalysis.fit": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "ValueError",
    "check_random_state",
    "len",
    "math.log",
    "math.sqrt",
    "my_svd",
    "numpy.array",
    "numpy.float64",
    "numpy.inf",
    "numpy.log",
    "numpy.maximum",
    "numpy.mean",
    "numpy.newaxis",
    "numpy.ones",
    "numpy.pi",
    "numpy.sqrt",
    "numpy.sum",
    "numpy.var",
    "range",
    "sklearn.decomposition._factor_analysis.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition._factor_analysis.FactorAnalysis.fit.my_svd": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "randomized_svd",
    "squared_norm"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition._factor_analysis.FactorAnalysis.get_covariance": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": [
    "check_is_fitted",
    "len",
    "numpy.dot"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition._factor_analysis.FactorAnalysis.get_precision": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": [
    "check_is_fitted",
    "len",
    "numpy.diag",
    "numpy.dot",
    "numpy.newaxis",
    "scipy.linalg.inv"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition._factor_analysis.FactorAnalysis.score": {
  "data": {
   "lineno": 364,
   "symbols_in_volume": [
    "numpy.mean"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition._factor_analysis.FactorAnalysis.score_samples": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": [
    "check_is_fitted",
    "fast_logdet",
    "math.log",
    "numpy.dot",
    "numpy.pi"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition._factor_analysis.FactorAnalysis.transform": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "check_is_fitted",
    "len",
    "numpy.dot",
    "numpy.eye",
    "scipy.linalg.inv"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition._factor_analysis._ortho_rotation": {
  "data": {
   "lineno": 394,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.eye",
    "numpy.linalg.svd",
    "numpy.sum",
    "numpy.transpose",
    "range"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition._factor_analysis.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "sklearn.decomposition._factor_analysis.log": {
  "data": {
   "shadows": "math.log"
  },
  "type": "import"
 },
 "sklearn.decomposition._factor_analysis.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.decomposition._factor_analysis.sqrt": {
  "data": {
   "shadows": "math.sqrt"
  },
  "type": "import"
 },
 "sklearn.decomposition._factor_analysis.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.decomposition._fastica": {
  "data": {},
  "type": "module"
 },
 "sklearn.decomposition._fastica.FastICA": {
  "data": {
   "lineno": 304
  },
  "type": "class"
 },
 "sklearn.decomposition._fastica.FastICA.__init__": {
  "data": {
   "lineno": 395,
   "symbols_in_volume": [
    "ValueError",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition._fastica.FastICA._fit": {
  "data": {
   "lineno": 413,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "as_float_array",
    "callable",
    "check_random_state",
    "exc",
    "g",
    "isinstance",
    "min",
    "numpy.asarray",
    "numpy.dot",
    "numpy.linalg.multi_dot",
    "numpy.newaxis",
    "numpy.sqrt",
    "scipy.linalg.pinv",
    "scipy.linalg.svd",
    "sklearn.decomposition._fastica._cube",
    "sklearn.decomposition._fastica._exp",
    "sklearn.decomposition._fastica._ica_def",
    "sklearn.decomposition._fastica._ica_par",
    "sklearn.decomposition._fastica._logcosh",
    "sklearn.decomposition._fastica.warnings",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition._fastica.FastICA._fit.g": {
  "data": {
   "lineno": 447
  },
  "type": "function"
 },
 "sklearn.decomposition._fastica.FastICA.fit": {
  "data": {
   "lineno": 559
  },
  "type": "function"
 },
 "sklearn.decomposition._fastica.FastICA.fit_transform": {
  "data": {
   "lineno": 542
  },
  "type": "function"
 },
 "sklearn.decomposition._fastica.FastICA.inverse_transform": {
  "data": {
   "lineno": 602,
   "symbols_in_volume": [
    "check_array",
    "check_is_fitted",
    "numpy.dot"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition._fastica.FastICA.transform": {
  "data": {
   "lineno": 577,
   "symbols_in_volume": [
    "check_is_fitted",
    "numpy.dot"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition._fastica.__all__": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "sklearn.decomposition._fastica._cube": {
  "data": {
   "lineno": 146
  },
  "type": "function"
 },
 "sklearn.decomposition._fastica._exp": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "numpy.exp"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition._fastica._gs_decorrelation": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "numpy.linalg.multi_dot"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition._fastica._ica_def": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "g",
    "max",
    "numpy.abs",
    "numpy.dot",
    "numpy.sqrt",
    "numpy.zeros",
    "range",
    "sklearn.decomposition._fastica._gs_decorrelation"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition._fastica._ica_par": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "abs",
    "float",
    "g",
    "max",
    "numpy.diag",
    "numpy.dot",
    "numpy.newaxis",
    "range",
    "sklearn.decomposition._fastica._sym_decorrelation",
    "sklearn.decomposition._fastica.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition._fastica._logcosh": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "enumerate",
    "numpy.empty",
    "numpy.tanh"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition._fastica._sym_decorrelation": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.linalg.multi_dot",
    "numpy.sqrt",
    "scipy.linalg.eigh"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition._fastica.fastica": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "sklearn.decomposition._fastica.FastICA"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition._fastica.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "sklearn.decomposition._fastica.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.decomposition._fastica.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.decomposition._incremental_pca": {
  "data": {},
  "type": "module"
 },
 "sklearn.decomposition._incremental_pca.IncrementalPCA": {
  "data": {
   "lineno": 16
  },
  "type": "class"
 },
 "sklearn.decomposition._incremental_pca.IncrementalPCA.__init__": {
  "data": {
   "lineno": 167
  },
  "type": "function"
 },
 "sklearn.decomposition._incremental_pca.IncrementalPCA.fit": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "gen_batches",
    "numpy.float32",
    "numpy.float64",
    "scipy.sparse.issparse"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition._incremental_pca.IncrementalPCA.partial_fit": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "_incremental_mean_and_var",
    "hasattr",
    "min",
    "numpy.float32",
    "numpy.float64",
    "numpy.mean",
    "numpy.repeat",
    "numpy.sqrt",
    "numpy.sum",
    "numpy.vstack",
    "scipy.linalg.svd",
    "scipy.sparse.issparse",
    "svd_flip"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition._incremental_pca.IncrementalPCA.transform": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "gen_batches",
    "numpy.vstack",
    "scipy.sparse.issparse",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition._incremental_pca.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "sklearn.decomposition._incremental_pca.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.decomposition._incremental_pca.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.decomposition._kernel_pca": {
  "data": {},
  "type": "module"
 },
 "sklearn.decomposition._kernel_pca.KernelPCA": {
  "data": {
   "lineno": 21
  },
  "type": "class"
 },
 "sklearn.decomposition._kernel_pca.KernelPCA.__init__": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition._kernel_pca.KernelPCA._fit_inverse_transform": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "NotImplementedError",
    "hasattr",
    "scipy.linalg.solve"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition._kernel_pca.KernelPCA._fit_transform": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "_check_psd_eigenvalues",
    "_init_arpack_v0",
    "min",
    "numpy.zeros_like",
    "scipy.linalg.eigh",
    "scipy.sparse.linalg.eigsh",
    "svd_flip"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition._kernel_pca.KernelPCA._get_kernel": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "callable",
    "pairwise_kernels"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition._kernel_pca.KernelPCA._more_tags": {
  "data": {
   "lineno": 371,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.float64"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition._kernel_pca.KernelPCA._pairwise": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "deprecated",
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition._kernel_pca.KernelPCA.fit": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "KernelCenterer",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition._kernel_pca.KernelPCA.fit_transform": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition._kernel_pca.KernelPCA.inverse_transform": {
  "data": {
   "lineno": 346,
   "symbols_in_volume": [
    "NotFittedError",
    "numpy.dot"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition._kernel_pca.KernelPCA.transform": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": [
    "check_is_fitted",
    "numpy.dot",
    "numpy.flatnonzero",
    "numpy.sqrt",
    "numpy.zeros_like"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition._kernel_pca.eigsh": {
  "data": {
   "shadows": "scipy.sparse.linalg.eigsh"
  },
  "type": "import"
 },
 "sklearn.decomposition._kernel_pca.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "sklearn.decomposition._kernel_pca.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.decomposition._lda": {
  "data": {
   "symbols_in_volume": [
    "float",
    "numpy.finfo"
   ]
  },
  "type": "module"
 },
 "sklearn.decomposition._lda.EPS": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "sklearn.decomposition._lda.LatentDirichletAllocation": {
  "data": {
   "lineno": 135
  },
  "type": "class"
 },
 "sklearn.decomposition._lda.LatentDirichletAllocation.__init__": {
  "data": {
   "lineno": 296
  },
  "type": "function"
 },
 "sklearn.decomposition._lda.LatentDirichletAllocation._approx_bound": {
  "data": {
   "lineno": 666,
   "symbols_in_volume": [
    "_dirichlet_expectation_2d",
    "_loglikelihood",
    "float",
    "numpy.dot",
    "numpy.newaxis",
    "numpy.nonzero",
    "range",
    "scipy.sparse.issparse",
    "scipy.special.logsumexp"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition._lda.LatentDirichletAllocation._approx_bound._loglikelihood": {
  "data": {
   "lineno": 692,
   "symbols_in_volume": [
    "numpy.sum",
    "scipy.special.gammaln"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition._lda.LatentDirichletAllocation._check_non_neg_array": {
  "data": {
   "lineno": 481,
   "symbols_in_volume": [
    "check_non_negative"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition._lda.LatentDirichletAllocation._check_params": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition._lda.LatentDirichletAllocation._e_step": {
  "data": {
   "lineno": 365,
   "symbols_in_volume": [
    "delayed",
    "gen_even_slices",
    "joblib.Parallel",
    "joblib.effective_n_jobs",
    "max",
    "numpy.vstack",
    "numpy.zeros",
    "parallel",
    "sklearn.decomposition._lda._update_doc_distribution",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition._lda.LatentDirichletAllocation._em_step": {
  "data": {
   "lineno": 428,
   "symbols_in_volume": [
    "_dirichlet_expectation_2d",
    "float",
    "numpy.exp",
    "numpy.power",
    "parallel"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition._lda.LatentDirichletAllocation._init_latent_vars": {
  "data": {
   "lineno": 338,
   "symbols_in_volume": [
    "_dirichlet_expectation_2d",
    "check_random_state",
    "numpy.exp"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition._lda.LatentDirichletAllocation._more_tags": {
  "data": {
   "lineno": 478
  },
  "type": "function"
 },
 "sklearn.decomposition._lda.LatentDirichletAllocation._perplexity_precomp_distr": {
  "data": {
   "lineno": 765,
   "symbols_in_volume": [
    "ValueError",
    "check_is_fitted",
    "float",
    "numpy.exp"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition._lda.LatentDirichletAllocation._unnormalized_transform": {
  "data": {
   "lineno": 611,
   "symbols_in_volume": [
    "ValueError",
    "check_is_fitted"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition._lda.LatentDirichletAllocation.fit": {
  "data": {
   "lineno": 539,
   "symbols_in_volume": [
    "abs",
    "gen_batches",
    "joblib.Parallel",
    "joblib.effective_n_jobs",
    "max",
    "parallel",
    "print",
    "range"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition._lda.LatentDirichletAllocation.partial_fit": {
  "data": {
   "lineno": 496,
   "symbols_in_volume": [
    "ValueError",
    "gen_batches",
    "hasattr",
    "joblib.Parallel",
    "joblib.effective_n_jobs",
    "max",
    "parallel"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition._lda.LatentDirichletAllocation.perplexity": {
  "data": {
   "lineno": 815
  },
  "type": "function"
 },
 "sklearn.decomposition._lda.LatentDirichletAllocation.score": {
  "data": {
   "lineno": 742,
   "symbols_in_volume": [
    "check_is_fitted"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition._lda.LatentDirichletAllocation.transform": {
  "data": {
   "lineno": 642,
   "symbols_in_volume": [
    "check_is_fitted",
    "numpy.newaxis"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition._lda.Parallel": {
  "data": {
   "shadows": "joblib.Parallel"
  },
  "type": "import"
 },
 "sklearn.decomposition._lda._update_doc_distribution": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "_dirichlet_expectation_1d",
    "_dirichlet_expectation_2d",
    "mean_change",
    "numpy.dot",
    "numpy.exp",
    "numpy.nonzero",
    "numpy.ones",
    "numpy.outer",
    "numpy.zeros",
    "range",
    "scipy.sparse.issparse",
    "sklearn.decomposition._lda.EPS"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition._lda.effective_n_jobs": {
  "data": {
   "shadows": "joblib.effective_n_jobs"
  },
  "type": "import"
 },
 "sklearn.decomposition._lda.gammaln": {
  "data": {
   "shadows": "scipy.special.gammaln"
  },
  "type": "import"
 },
 "sklearn.decomposition._lda.logsumexp": {
  "data": {
   "shadows": "scipy.special.logsumexp"
  },
  "type": "import"
 },
 "sklearn.decomposition._lda.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.decomposition._lda.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.decomposition._pca": {
  "data": {},
  "type": "module"
 },
 "sklearn.decomposition._pca.PCA": {
  "data": {
   "lineno": 112
  },
  "type": "class"
 },
 "sklearn.decomposition._pca.PCA.__init__": {
  "data": {
   "lineno": 324
  },
  "type": "function"
 },
 "sklearn.decomposition._pca.PCA._fit": {
  "data": {
   "lineno": 388,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "max",
    "min",
    "numpy.float32",
    "numpy.float64",
    "scipy.sparse.issparse"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition._pca.PCA._fit_full": {
  "data": {
   "lineno": 430,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "min",
    "numpy.mean",
    "numpy.searchsorted",
    "scipy.linalg.svd",
    "sklearn.decomposition._pca._infer_dimension",
    "sklearn.decomposition._pca.numbers",
    "stable_cumsum",
    "svd_flip",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition._pca.PCA._fit_truncated": {
  "data": {
   "lineno": 496,
   "symbols_in_volume": [
    "ValueError",
    "_init_arpack_v0",
    "check_random_state",
    "isinstance",
    "min",
    "numpy.mean",
    "numpy.var",
    "randomized_svd",
    "scipy.sparse.linalg.svds",
    "sklearn.decomposition._pca.numbers",
    "str",
    "svd_flip",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition._pca.PCA._more_tags": {
  "data": {
   "lineno": 615,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.float64"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition._pca.PCA.fit": {
  "data": {
   "lineno": 336
  },
  "type": "function"
 },
 "sklearn.decomposition._pca.PCA.fit_transform": {
  "data": {
   "lineno": 355,
   "symbols_in_volume": [
    "math.sqrt"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition._pca.PCA.score": {
  "data": {
   "lineno": 594,
   "symbols_in_volume": [
    "numpy.mean"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition._pca.PCA.score_samples": {
  "data": {
   "lineno": 566,
   "symbols_in_volume": [
    "check_is_fitted",
    "fast_logdet",
    "math.log",
    "numpy.dot",
    "numpy.float32",
    "numpy.float64",
    "numpy.pi"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition._pca._assess_dimension": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "math.log",
    "max",
    "numpy.inf",
    "numpy.log",
    "numpy.pi",
    "numpy.sum",
    "range",
    "scipy.special.gammaln"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition._pca._infer_dimension": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "numpy.empty_like",
    "numpy.inf",
    "range",
    "sklearn.decomposition._pca._assess_dimension"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition._pca.gammaln": {
  "data": {
   "shadows": "scipy.special.gammaln"
  },
  "type": "import"
 },
 "sklearn.decomposition._pca.issparse": {
  "data": {
   "shadows": "scipy.sparse.issparse"
  },
  "type": "import"
 },
 "sklearn.decomposition._pca.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "sklearn.decomposition._pca.log": {
  "data": {
   "shadows": "math.log"
  },
  "type": "import"
 },
 "sklearn.decomposition._pca.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.decomposition._pca.numbers": {
  "data": {
   "shadows": "numbers"
  },
  "type": "import"
 },
 "sklearn.decomposition._pca.sqrt": {
  "data": {
   "shadows": "math.sqrt"
  },
  "type": "import"
 },
 "sklearn.decomposition._pca.svds": {
  "data": {
   "shadows": "scipy.sparse.linalg.svds"
  },
  "type": "import"
 },
 "sklearn.decomposition._sparse_pca": {
  "data": {},
  "type": "module"
 },
 "sklearn.decomposition._sparse_pca.MiniBatchSparsePCA": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "sklearn.decomposition._sparse_pca.SparsePCA"
   ]
  },
  "type": "class"
 },
 "sklearn.decomposition._sparse_pca.MiniBatchSparsePCA.__init__": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition._sparse_pca.MiniBatchSparsePCA.fit": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": [
    "check_random_state",
    "dict_learning_online",
    "len",
    "numpy.linalg.norm",
    "numpy.newaxis"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition._sparse_pca.SparsePCA": {
  "data": {
   "lineno": 15
  },
  "type": "class"
 },
 "sklearn.decomposition._sparse_pca.SparsePCA.__init__": {
  "data": {
   "lineno": 112
  },
  "type": "function"
 },
 "sklearn.decomposition._sparse_pca.SparsePCA.fit": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "check_random_state",
    "dict_learning",
    "len",
    "numpy.linalg.norm",
    "numpy.newaxis"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition._sparse_pca.SparsePCA.transform": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "check_is_fitted",
    "ridge_regression"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition._sparse_pca.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.decomposition._truncated_svd": {
  "data": {},
  "type": "module"
 },
 "sklearn.decomposition._truncated_svd.TruncatedSVD": {
  "data": {
   "lineno": 25
  },
  "type": "class"
 },
 "sklearn.decomposition._truncated_svd.TruncatedSVD.__init__": {
  "data": {
   "lineno": 122
  },
  "type": "function"
 },
 "sklearn.decomposition._truncated_svd.TruncatedSVD._more_tags": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.float64"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition._truncated_svd.TruncatedSVD.fit": {
  "data": {
   "lineno": 131
  },
  "type": "function"
 },
 "sklearn.decomposition._truncated_svd.TruncatedSVD.fit_transform": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "ValueError",
    "_init_arpack_v0",
    "check_random_state",
    "mean_variance_axis",
    "min",
    "numpy.var",
    "randomized_svd",
    "safe_sparse_dot",
    "scipy.sparse.issparse",
    "scipy.sparse.linalg.svds",
    "svd_flip"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition._truncated_svd.TruncatedSVD.inverse_transform": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "check_array",
    "numpy.dot"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition._truncated_svd.TruncatedSVD.transform": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "check_is_fitted",
    "safe_sparse_dot"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition._truncated_svd.__all__": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "sklearn.decomposition._truncated_svd.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.decomposition._truncated_svd.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.decomposition._truncated_svd.svds": {
  "data": {
   "shadows": "scipy.sparse.linalg.svds"
  },
  "type": "import"
 },
 "sklearn.decomposition.setup": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.distutils.core.setup",
    "sklearn.decomposition.setup.configuration"
   ]
  },
  "type": "module"
 },
 "sklearn.decomposition.setup.Configuration": {
  "data": {
   "shadows": "numpy.distutils.misc_util.Configuration"
  },
  "type": "import"
 },
 "sklearn.decomposition.setup.configuration": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "numpy.distutils.misc_util.Configuration",
    "sklearn.decomposition.setup.numpy",
    "sklearn.decomposition.setup.os"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.setup.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.decomposition.setup.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "sklearn.decomposition.setup.setup": {
  "data": {
   "shadows": "numpy.distutils.core.setup"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests": {
  "data": {},
  "type": "module"
 },
 "sklearn.decomposition.tests.test_dict_learning": {
  "data": {
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.decomposition.tests.test_dict_learning.rng_global"
   ]
  },
  "type": "module"
 },
 "sklearn.decomposition.tests.test_dict_learning.ConvergenceWarning": {
  "data": {
   "shadows": "sklearn.exceptions.ConvergenceWarning"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_dict_learning.DictionaryLearning": {
  "data": {
   "shadows": "sklearn.decomposition.DictionaryLearning"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_dict_learning.MiniBatchDictionaryLearning": {
  "data": {
   "shadows": "sklearn.decomposition.MiniBatchDictionaryLearning"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_dict_learning.SparseCoder": {
  "data": {
   "shadows": "sklearn.decomposition.SparseCoder"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_dict_learning.StringIO": {
  "data": {
   "shadows": "io.StringIO"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_dict_learning.TempMemmap": {
  "data": {
   "shadows": "sklearn.utils._testing.TempMemmap"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_dict_learning.X": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "sklearn.decomposition.tests.test_dict_learning.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_dict_learning.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_dict_learning.check_array": {
  "data": {
   "shadows": "sklearn.utils.check_array"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_dict_learning.check_transformer_data_not_an_array": {
  "data": {
   "shadows": "sklearn.utils.estimator_checks.check_transformer_data_not_an_array"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_dict_learning.check_transformer_general": {
  "data": {
   "shadows": "sklearn.utils.estimator_checks.check_transformer_general"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_dict_learning.check_transformers_unfitted": {
  "data": {
   "shadows": "sklearn.utils.estimator_checks.check_transformers_unfitted"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_dict_learning.clone": {
  "data": {
   "shadows": "sklearn.base.clone"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_dict_learning.dict_learning": {
  "data": {
   "shadows": "sklearn.decomposition.dict_learning"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_dict_learning.dict_learning_online": {
  "data": {
   "shadows": "sklearn.decomposition.dict_learning_online"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_dict_learning.ignore_warnings": {
  "data": {
   "shadows": "sklearn.utils._testing.ignore_warnings"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_dict_learning.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_dict_learning.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_dict_learning.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_dict_learning.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_dict_learning.rng_global": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "sklearn.decomposition.tests.test_dict_learning.sparse_encode": {
  "data": {
   "shadows": "sklearn.decomposition.sparse_encode"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_dict_learning.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_dict_learning.test_dict_learning_iter_offset": {
  "data": {
   "lineno": 400,
   "symbols_in_volume": [
    "numpy.newaxis",
    "numpy.random.RandomState",
    "sklearn.decomposition.MiniBatchDictionaryLearning",
    "sklearn.decomposition.tests.test_dict_learning.X"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_dict_learning.test_dict_learning_lars_code_positivity": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.decomposition.DictionaryLearning",
    "sklearn.decomposition.tests.test_dict_learning.X",
    "sklearn.decomposition.tests.test_dict_learning.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_dict_learning.test_dict_learning_lars_dict_positivity": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "sklearn.decomposition.DictionaryLearning",
    "sklearn.decomposition.tests.test_dict_learning.X",
    "sklearn.decomposition.tests.test_dict_learning.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_dict_learning.test_dict_learning_lars_positive_parameter": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.decomposition.dict_learning",
    "sklearn.decomposition.tests.test_dict_learning.X",
    "sklearn.decomposition.tests.test_dict_learning.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_dict_learning.test_dict_learning_lassocd_readonly_data": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "numpy.dot",
    "sklearn.decomposition.DictionaryLearning",
    "sklearn.decomposition.tests.test_dict_learning.X",
    "sklearn.exceptions.ConvergenceWarning",
    "sklearn.utils._testing.TempMemmap",
    "sklearn.utils._testing.assert_array_almost_equal",
    "sklearn.utils._testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_dict_learning.test_dict_learning_nonzero_coefs": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "len",
    "numpy.flatnonzero",
    "numpy.newaxis",
    "sklearn.decomposition.DictionaryLearning",
    "sklearn.decomposition.tests.test_dict_learning.X"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_dict_learning.test_dict_learning_online_estimator_shapes": {
  "data": {
   "lineno": 347,
   "symbols_in_volume": [
    "sklearn.decomposition.MiniBatchDictionaryLearning",
    "sklearn.decomposition.tests.test_dict_learning.X"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_dict_learning.test_dict_learning_online_initialization": {
  "data": {
   "lineno": 361,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.decomposition.MiniBatchDictionaryLearning",
    "sklearn.decomposition.tests.test_dict_learning.X",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_dict_learning.test_dict_learning_online_lars_positive_parameter": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.decomposition.dict_learning_online",
    "sklearn.decomposition.tests.test_dict_learning.X",
    "sklearn.decomposition.tests.test_dict_learning.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_dict_learning.test_dict_learning_online_overcomplete": {
  "data": {
   "lineno": 354,
   "symbols_in_volume": [
    "sklearn.decomposition.MiniBatchDictionaryLearning",
    "sklearn.decomposition.tests.test_dict_learning.X"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_dict_learning.test_dict_learning_online_partial_fit": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": [
    "len",
    "numpy.all",
    "numpy.newaxis",
    "numpy.random.RandomState",
    "numpy.sum",
    "range",
    "sklearn.decomposition.MiniBatchDictionaryLearning",
    "sklearn.decomposition.sparse_encode",
    "sklearn.decomposition.tests.test_dict_learning.X",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_dict_learning.test_dict_learning_online_positivity": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.decomposition.dict_learning_online",
    "sklearn.decomposition.tests.test_dict_learning.X",
    "sklearn.decomposition.tests.test_dict_learning.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_dict_learning.test_dict_learning_online_readonly_initialization": {
  "data": {
   "lineno": 370,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.decomposition.MiniBatchDictionaryLearning",
    "sklearn.decomposition.tests.test_dict_learning.X"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_dict_learning.test_dict_learning_online_shapes": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.random.RandomState",
    "sklearn.decomposition.dict_learning_online",
    "sklearn.decomposition.tests.test_dict_learning.X"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_dict_learning.test_dict_learning_online_verbosity": {
  "data": {
   "lineno": 322,
   "symbols_in_volume": [
    "io.StringIO",
    "sklearn.decomposition.MiniBatchDictionaryLearning",
    "sklearn.decomposition.dict_learning_online",
    "sklearn.decomposition.tests.test_dict_learning.X",
    "sklearn.decomposition.tests.test_dict_learning.sys"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_dict_learning.test_dict_learning_overcomplete": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "sklearn.decomposition.DictionaryLearning",
    "sklearn.decomposition.tests.test_dict_learning.X"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_dict_learning.test_dict_learning_positivity": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "sklearn.decomposition.DictionaryLearning",
    "sklearn.decomposition.tests.test_dict_learning.X",
    "sklearn.decomposition.tests.test_dict_learning.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_dict_learning.test_dict_learning_reconstruction": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "numpy.dot",
    "sklearn.decomposition.DictionaryLearning",
    "sklearn.decomposition.tests.test_dict_learning.X",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_dict_learning.test_dict_learning_reconstruction_parallel": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "numpy.dot",
    "sklearn.decomposition.DictionaryLearning",
    "sklearn.decomposition.tests.test_dict_learning.X",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_dict_learning.test_dict_learning_shapes": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "sklearn.decomposition.DictionaryLearning",
    "sklearn.decomposition.tests.test_dict_learning.X"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_dict_learning.test_dict_learning_split": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "sklearn.decomposition.DictionaryLearning",
    "sklearn.decomposition.tests.test_dict_learning.X",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_dict_learning.test_dict_learning_unknown_fit_algorithm": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.decomposition.DictionaryLearning",
    "sklearn.decomposition.tests.test_dict_learning.X",
    "sklearn.decomposition.tests.test_dict_learning.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_dict_learning.test_max_iter": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "numpy.linspace",
    "numpy.logical_not",
    "numpy.r_",
    "ricker_matrix",
    "sklearn.decomposition.SparseCoder",
    "sklearn.decomposition.tests.test_dict_learning.X",
    "sklearn.decomposition.tests.test_dict_learning.pytest",
    "sklearn.exceptions.ConvergenceWarning",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_dict_learning.test_max_iter.ricker_function": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "numpy.exp",
    "numpy.linspace",
    "numpy.pi",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_dict_learning.test_max_iter.ricker_matrix": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "enumerate",
    "numpy.empty",
    "numpy.linspace",
    "numpy.newaxis",
    "numpy.sqrt",
    "numpy.sum",
    "ricker_function"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_dict_learning.test_minibatch_dictionary_learning_lars": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "sklearn.decomposition.MiniBatchDictionaryLearning",
    "sklearn.decomposition.tests.test_dict_learning.X",
    "sklearn.decomposition.tests.test_dict_learning.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_dict_learning.test_minibatch_dictionary_learning_positivity": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "sklearn.decomposition.MiniBatchDictionaryLearning",
    "sklearn.decomposition.tests.test_dict_learning.X",
    "sklearn.decomposition.tests.test_dict_learning.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_dict_learning.test_sparse_coder_common_transformer": {
  "data": {
   "lineno": 544,
   "symbols_in_volume": [
    "check_transformer_general_memmap",
    "functools.partial",
    "numpy.random.RandomState",
    "sklearn.decomposition.SparseCoder",
    "sklearn.utils.estimator_checks.check_transformer_data_not_an_array",
    "sklearn.utils.estimator_checks.check_transformer_general",
    "sklearn.utils.estimator_checks.check_transformers_unfitted"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_dict_learning.test_sparse_coder_deprecation": {
  "data": {
   "lineno": 561,
   "symbols_in_volume": [
    "FutureWarning",
    "numpy.random.RandomState",
    "sklearn.decomposition.SparseCoder",
    "sklearn.decomposition.tests.test_dict_learning.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_dict_learning.test_sparse_coder_estimator": {
  "data": {
   "lineno": 496,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.dot",
    "numpy.newaxis",
    "numpy.random.RandomState",
    "numpy.sqrt",
    "numpy.sum",
    "sklearn.decomposition.SparseCoder",
    "sklearn.decomposition.tests.test_dict_learning.X"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_dict_learning.test_sparse_coder_estimator_clone": {
  "data": {
   "lineno": 507,
   "symbols_in_volume": [
    "id",
    "numpy.float32",
    "numpy.newaxis",
    "numpy.random.RandomState",
    "numpy.random.rand",
    "numpy.sum",
    "numpy.testing.assert_allclose",
    "sklearn.base.clone",
    "sklearn.decomposition.SparseCoder"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_dict_learning.test_sparse_coder_n_features_in": {
  "data": {
   "lineno": 572,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.decomposition.SparseCoder"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_dict_learning.test_sparse_coder_parallel_mmap": {
  "data": {
   "lineno": 525,
   "symbols_in_volume": [
    "int",
    "numpy.float32",
    "numpy.random.RandomState",
    "numpy.random.rand",
    "sklearn.decomposition.SparseCoder"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_dict_learning.test_sparse_encode_error": {
  "data": {
   "lineno": 469,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.dot",
    "numpy.newaxis",
    "numpy.random.RandomState",
    "numpy.sqrt",
    "numpy.sum",
    "sklearn.decomposition.sparse_encode",
    "sklearn.decomposition.tests.test_dict_learning.X"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_dict_learning.test_sparse_encode_error_default_sparsity": {
  "data": {
   "lineno": 479,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.decomposition.sparse_encode",
    "sklearn.decomposition.tests.test_dict_learning.X",
    "sklearn.utils._testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_dict_learning.test_sparse_encode_input": {
  "data": {
   "lineno": 457,
   "symbols_in_volume": [
    "numpy.newaxis",
    "numpy.random.RandomState",
    "numpy.sum",
    "sklearn.decomposition.sparse_encode",
    "sklearn.decomposition.tests.test_dict_learning.X",
    "sklearn.utils._testing.assert_array_almost_equal",
    "sklearn.utils.check_array"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_dict_learning.test_sparse_encode_positivity": {
  "data": {
   "lineno": 427,
   "symbols_in_volume": [
    "numpy.newaxis",
    "numpy.random.RandomState",
    "numpy.sum",
    "sklearn.decomposition.sparse_encode",
    "sklearn.decomposition.tests.test_dict_learning.X",
    "sklearn.decomposition.tests.test_dict_learning.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_dict_learning.test_sparse_encode_shapes": {
  "data": {
   "lineno": 417,
   "symbols_in_volume": [
    "numpy.newaxis",
    "numpy.random.RandomState",
    "numpy.sum",
    "sklearn.decomposition.sparse_encode",
    "sklearn.decomposition.tests.test_dict_learning.X"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_dict_learning.test_sparse_encode_shapes_omp": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.decomposition.sparse_encode",
    "sklearn.decomposition.tests.test_dict_learning.itertools"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_dict_learning.test_sparse_encode_unavailable_positivity": {
  "data": {
   "lineno": 445,
   "symbols_in_volume": [
    "ValueError",
    "numpy.newaxis",
    "numpy.random.RandomState",
    "numpy.sum",
    "sklearn.decomposition.sparse_encode",
    "sklearn.decomposition.tests.test_dict_learning.X",
    "sklearn.decomposition.tests.test_dict_learning.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_dict_learning.test_unknown_method": {
  "data": {
   "lineno": 488,
   "symbols_in_volume": [
    "ValueError",
    "numpy.random.RandomState",
    "sklearn.decomposition.sparse_encode",
    "sklearn.decomposition.tests.test_dict_learning.X",
    "sklearn.decomposition.tests.test_dict_learning.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_factor_analysis": {
  "data": {},
  "type": "module"
 },
 "sklearn.decomposition.tests.test_factor_analysis.ConvergenceWarning": {
  "data": {
   "shadows": "sklearn.exceptions.ConvergenceWarning"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_factor_analysis.FactorAnalysis": {
  "data": {
   "shadows": "sklearn.decomposition.FactorAnalysis"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_factor_analysis._ortho_rotation": {
  "data": {
   "shadows": "sklearn.decomposition._factor_analysis._ortho_rotation"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_factor_analysis.assert_almost_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_almost_equal"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_factor_analysis.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_factor_analysis.assert_raises": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_factor_analysis.assert_warns": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_warns"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_factor_analysis.combinations": {
  "data": {
   "shadows": "itertools.combinations"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_factor_analysis.ignore_warnings": {
  "data": {
   "shadows": "sklearn.utils._testing.ignore_warnings"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_factor_analysis.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_factor_analysis.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_factor_analysis.test_factor_analysis": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "ValueError",
    "f",
    "getattr",
    "itertools.combinations",
    "numpy.abs",
    "numpy.all",
    "numpy.allclose",
    "numpy.array",
    "numpy.cov",
    "numpy.diff",
    "numpy.dot",
    "numpy.eye",
    "numpy.ones",
    "numpy.random.RandomState",
    "numpy.sum",
    "sklearn.decomposition.FactorAnalysis",
    "sklearn.decomposition._factor_analysis._ortho_rotation",
    "sklearn.decomposition.tests.test_factor_analysis.pytest",
    "sklearn.exceptions.ConvergenceWarning",
    "sklearn.utils._testing.assert_almost_equal",
    "sklearn.utils._testing.assert_array_almost_equal",
    "sklearn.utils._testing.assert_raises",
    "sklearn.utils._testing.assert_warns",
    "sklearn.utils._testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_fastica": {
  "data": {},
  "type": "module"
 },
 "sklearn.decomposition.tests.test_fastica.ConvergenceWarning": {
  "data": {
   "shadows": "sklearn.exceptions.ConvergenceWarning"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_fastica.FastICA": {
  "data": {
   "shadows": "sklearn.decomposition.FastICA"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_fastica.PCA": {
  "data": {
   "shadows": "sklearn.decomposition.PCA"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_fastica._gs_decorrelation": {
  "data": {
   "shadows": "sklearn.decomposition._fastica._gs_decorrelation"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_fastica.assert_almost_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_almost_equal"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_fastica.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_fastica.assert_warns": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_warns"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_fastica.center_and_norm": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "numpy.rollaxis"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_fastica.fastica": {
  "data": {
   "shadows": "sklearn.decomposition.fastica"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_fastica.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_fastica.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_fastica.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_fastica.stats": {
  "data": {
   "shadows": "scipy.stats"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_fastica.test_fastica_convergence_fail": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "numpy.c_.T",
    "numpy.ceil",
    "numpy.dot",
    "numpy.linspace",
    "numpy.pi",
    "numpy.random.RandomState",
    "numpy.sin",
    "sklearn.decomposition.FastICA",
    "sklearn.decomposition.tests.test_fastica.center_and_norm",
    "sklearn.exceptions.ConvergenceWarning",
    "sklearn.utils._testing.assert_warns"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_fastica.test_fastica_errors": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "ValueError",
    "numpy.random.RandomState",
    "sklearn.decomposition.FastICA",
    "sklearn.decomposition.fastica",
    "sklearn.decomposition.tests.test_fastica.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_fastica.test_fastica_nowhiten": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "UserWarning",
    "hasattr",
    "sklearn.decomposition.FastICA",
    "sklearn.utils._testing.assert_warns"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_fastica.test_fastica_output_shape": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "len",
    "numpy.random.RandomState",
    "sklearn.decomposition.fastica",
    "sklearn.decomposition.tests.test_fastica.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_fastica.test_fastica_simple": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "abs",
    "numpy.array",
    "numpy.c_.T",
    "numpy.cos",
    "numpy.dot",
    "numpy.linspace",
    "numpy.random.RandomState",
    "numpy.sign",
    "numpy.sin",
    "numpy.tanh",
    "range",
    "scipy.stats.t.rvs",
    "sklearn.decomposition.FastICA",
    "sklearn.decomposition.PCA",
    "sklearn.decomposition.fastica",
    "sklearn.decomposition.tests.test_fastica.center_and_norm",
    "sklearn.decomposition.tests.test_fastica.itertools",
    "sklearn.decomposition.tests.test_fastica.pytest",
    "sklearn.utils._testing.assert_almost_equal",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_fastica.test_fastica_simple.g_test": {
  "data": {
   "lineno": 76
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_fastica.test_fit_transform": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.decomposition.FastICA",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_fastica.test_gs": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.linalg.svd",
    "numpy.random.RandomState",
    "sklearn.decomposition._fastica._gs_decorrelation"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_fastica.test_inverse_transform": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.decomposition.FastICA",
    "sklearn.decomposition.tests.test_fastica.warnings",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_fastica.test_non_square_fastica": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "abs",
    "numpy.c_.T",
    "numpy.ceil",
    "numpy.dot",
    "numpy.linspace",
    "numpy.pi",
    "numpy.random.RandomState",
    "numpy.sign",
    "numpy.sin",
    "sklearn.decomposition.fastica",
    "sklearn.decomposition.tests.test_fastica.center_and_norm",
    "sklearn.decomposition.tests.test_fastica.pytest",
    "sklearn.utils._testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_fastica.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_incremental_pca": {
  "data": {
   "symbols_in_volume": [
    "sklearn.datasets.load_iris"
   ]
  },
  "type": "module"
 },
 "sklearn.decomposition.tests.test_incremental_pca.IncrementalPCA": {
  "data": {
   "shadows": "sklearn.decomposition.IncrementalPCA"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_incremental_pca.PCA": {
  "data": {
   "shadows": "sklearn.decomposition.PCA"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_incremental_pca.assert_allclose_dense_sparse": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_allclose_dense_sparse"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_incremental_pca.assert_almost_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_almost_equal"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_incremental_pca.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_incremental_pca.datasets": {
  "data": {
   "shadows": "sklearn.datasets"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_incremental_pca.iris": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "sklearn.decomposition.tests.test_incremental_pca.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_incremental_pca.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_incremental_pca.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_incremental_pca.test_explained_variances": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": [
    "sklearn.datasets.make_low_rank_matrix",
    "sklearn.decomposition.IncrementalPCA",
    "sklearn.decomposition.PCA",
    "sklearn.utils._testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_incremental_pca.test_incremental_pca": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.eye",
    "numpy.testing.assert_allclose",
    "sklearn.decomposition.IncrementalPCA",
    "sklearn.decomposition.PCA",
    "sklearn.decomposition.tests.test_incremental_pca.iris"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_incremental_pca.test_incremental_pca_against_pca_iris": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "numpy.abs",
    "sklearn.decomposition.IncrementalPCA",
    "sklearn.decomposition.PCA",
    "sklearn.decomposition.tests.test_incremental_pca.iris",
    "sklearn.utils._testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_incremental_pca.test_incremental_pca_against_pca_random_data": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.random.RandomState",
    "sklearn.decomposition.IncrementalPCA",
    "sklearn.decomposition.PCA",
    "sklearn.utils._testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_incremental_pca.test_incremental_pca_batch_rank": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.random.RandomState",
    "sklearn.decomposition.IncrementalPCA",
    "sklearn.utils._testing.assert_allclose_dense_sparse",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_incremental_pca.test_incremental_pca_batch_signs": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.random.RandomState",
    "numpy.sign",
    "sklearn.decomposition.IncrementalPCA",
    "sklearn.utils._testing.assert_almost_equal",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_incremental_pca.test_incremental_pca_batch_values": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.random.RandomState",
    "sklearn.decomposition.IncrementalPCA",
    "sklearn.utils._testing.assert_almost_equal",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_incremental_pca.test_incremental_pca_check_projection": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.array",
    "numpy.random.RandomState",
    "numpy.sqrt",
    "sklearn.decomposition.IncrementalPCA",
    "sklearn.utils._testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_incremental_pca.test_incremental_pca_fit_overflow_error": {
  "data": {
   "lineno": 389,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "numpy.testing.assert_allclose",
    "sklearn.decomposition.IncrementalPCA",
    "sklearn.decomposition.PCA"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_incremental_pca.test_incremental_pca_inverse": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.decomposition.IncrementalPCA",
    "sklearn.utils._testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_incremental_pca.test_incremental_pca_num_features_change": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "ValueError",
    "numpy.random.RandomState",
    "sklearn.decomposition.IncrementalPCA",
    "sklearn.decomposition.tests.test_incremental_pca.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_incremental_pca.test_incremental_pca_partial_fit": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.random.RandomState",
    "sklearn.decomposition.IncrementalPCA",
    "sklearn.utils._testing.assert_almost_equal",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_incremental_pca.test_incremental_pca_partial_fit_float_division": {
  "data": {
   "lineno": 365,
   "symbols_in_volume": [
    "float",
    "numpy.random.RandomState",
    "numpy.testing.assert_allclose",
    "sklearn.decomposition.IncrementalPCA"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_incremental_pca.test_incremental_pca_set_params": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "ValueError",
    "numpy.random.RandomState",
    "sklearn.decomposition.IncrementalPCA",
    "sklearn.decomposition.tests.test_incremental_pca.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_incremental_pca.test_incremental_pca_sparse": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "TypeError",
    "matrix_class",
    "numpy.dot",
    "numpy.eye",
    "numpy.testing.assert_allclose",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.lil_matrix",
    "sklearn.decomposition.IncrementalPCA",
    "sklearn.decomposition.PCA",
    "sklearn.decomposition.tests.test_incremental_pca.iris",
    "sklearn.decomposition.tests.test_incremental_pca.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_incremental_pca.test_incremental_pca_validation": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "sklearn.decomposition.IncrementalPCA",
    "sklearn.decomposition.tests.test_incremental_pca.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_incremental_pca.test_n_components_none": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "min",
    "numpy.random.RandomState",
    "sklearn.decomposition.IncrementalPCA"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_incremental_pca.test_singular_values": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.linalg.norm",
    "numpy.random.RandomState",
    "numpy.sqrt",
    "numpy.sum",
    "sklearn.datasets.make_low_rank_matrix",
    "sklearn.decomposition.IncrementalPCA",
    "sklearn.decomposition.PCA",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_incremental_pca.test_whitening": {
  "data": {
   "lineno": 344,
   "symbols_in_volume": [
    "numpy.abs",
    "sklearn.datasets.make_low_rank_matrix",
    "sklearn.decomposition.IncrementalPCA",
    "sklearn.decomposition.PCA",
    "sklearn.utils._testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_kernel_pca": {
  "data": {},
  "type": "module"
 },
 "sklearn.decomposition.tests.test_kernel_pca.GridSearchCV": {
  "data": {
   "shadows": "sklearn.model_selection.GridSearchCV"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_kernel_pca.KernelPCA": {
  "data": {
   "shadows": "sklearn.decomposition.KernelPCA"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_kernel_pca.PCA": {
  "data": {
   "shadows": "sklearn.decomposition.PCA"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_kernel_pca.Perceptron": {
  "data": {
   "shadows": "sklearn.linear_model.Perceptron"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_kernel_pca.Pipeline": {
  "data": {
   "shadows": "sklearn.pipeline.Pipeline"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_kernel_pca.StandardScaler": {
  "data": {
   "shadows": "sklearn.preprocessing.StandardScaler"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_kernel_pca._check_psd_eigenvalues": {
  "data": {
   "shadows": "sklearn.utils.validation._check_psd_eigenvalues"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_kernel_pca.assert_allclose": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_allclose"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_kernel_pca.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_kernel_pca.make_blobs": {
  "data": {
   "shadows": "sklearn.datasets.make_blobs"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_kernel_pca.make_circles": {
  "data": {
   "shadows": "sklearn.datasets.make_circles"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_kernel_pca.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_kernel_pca.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_kernel_pca.rbf_kernel": {
  "data": {
   "shadows": "sklearn.metrics.pairwise.rbf_kernel"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_kernel_pca.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_kernel_pca.test_32_64_decomposition_shape": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "numpy.float32",
    "sklearn.datasets.make_blobs",
    "sklearn.decomposition.KernelPCA",
    "sklearn.preprocessing.StandardScaler"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_kernel_pca.test_gridsearch_pipeline": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "dict",
    "numpy.arange",
    "sklearn.datasets.make_circles",
    "sklearn.decomposition.KernelPCA",
    "sklearn.linear_model.Perceptron",
    "sklearn.model_selection.GridSearchCV",
    "sklearn.pipeline.Pipeline"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_kernel_pca.test_gridsearch_pipeline_precomputed": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "dict",
    "numpy.arange",
    "sklearn.datasets.make_circles",
    "sklearn.decomposition.KernelPCA",
    "sklearn.linear_model.Perceptron",
    "sklearn.metrics.pairwise.rbf_kernel",
    "sklearn.model_selection.GridSearchCV",
    "sklearn.pipeline.Pipeline"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_kernel_pca.test_kernel_conditioning": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "numpy.all",
    "sklearn.decomposition.KernelPCA",
    "sklearn.utils.validation._check_psd_eigenvalues"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_kernel_pca.test_kernel_pca": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "callable",
    "numpy.abs",
    "numpy.random.RandomState",
    "sklearn.decomposition.KernelPCA",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_kernel_pca.test_kernel_pca.histogram": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "numpy.minimum"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_kernel_pca.test_kernel_pca_consistent_transform": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.decomposition.KernelPCA",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_kernel_pca.test_kernel_pca_deterministic_output": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "numpy.tile",
    "numpy.zeros",
    "range",
    "sklearn.decomposition.KernelPCA",
    "sklearn.utils._testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_kernel_pca.test_kernel_pca_invalid_kernel": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "ValueError",
    "numpy.random.RandomState",
    "sklearn.decomposition.KernelPCA",
    "sklearn.decomposition.tests.test_kernel_pca.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_kernel_pca.test_kernel_pca_invalid_parameters": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.decomposition.KernelPCA",
    "sklearn.decomposition.tests.test_kernel_pca.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_kernel_pca.test_kernel_pca_inverse_transform": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "sklearn.datasets.make_blobs",
    "sklearn.decomposition.KernelPCA",
    "sklearn.decomposition.tests.test_kernel_pca.pytest",
    "sklearn.utils._testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_kernel_pca.test_kernel_pca_linear_kernel": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.random.RandomState",
    "sklearn.decomposition.KernelPCA",
    "sklearn.decomposition.PCA",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_kernel_pca.test_kernel_pca_n_components": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.decomposition.KernelPCA"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_kernel_pca.test_kernel_pca_precomputed": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.dot",
    "numpy.random.RandomState",
    "sklearn.decomposition.KernelPCA",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_kernel_pca.test_kernel_pca_sparse": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.random.RandomState",
    "scipy.sparse.csr_matrix",
    "sklearn.decomposition.KernelPCA",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_kernel_pca.test_kernel_pcc_pairwise_is_deprecated": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": [
    "FutureWarning",
    "sklearn.decomposition.KernelPCA",
    "sklearn.decomposition.tests.test_kernel_pca.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_kernel_pca.test_leave_zero_eig": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "RuntimeWarning",
    "issubclass",
    "numpy.abs",
    "numpy.array",
    "numpy.errstate",
    "sklearn.decomposition.KernelPCA",
    "sklearn.decomposition.tests.test_kernel_pca.pytest",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_kernel_pca.test_nested_circles": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "sklearn.datasets.make_circles",
    "sklearn.decomposition.KernelPCA",
    "sklearn.linear_model.Perceptron"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_kernel_pca.test_remove_zero_eig": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.decomposition.KernelPCA"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_nmf": {
  "data": {},
  "type": "module"
 },
 "sklearn.decomposition.tests.test_nmf.ConvergenceWarning": {
  "data": {
   "shadows": "sklearn.exceptions.ConvergenceWarning"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_nmf.NMF": {
  "data": {
   "shadows": "sklearn.decomposition.NMF"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_nmf._beta_divergence_dense": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.log",
    "numpy.maximum",
    "numpy.sum",
    "sklearn.utils.extmath.squared_norm"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_nmf.assert_allclose": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_allclose"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_nmf.assert_almost_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_almost_equal"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_nmf.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_nmf.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_nmf.assert_raise_message": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_raise_message"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_nmf.clone": {
  "data": {
   "shadows": "sklearn.base.clone"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_nmf.csc_matrix": {
  "data": {
   "shadows": "scipy.sparse.csc_matrix"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_nmf.ignore_warnings": {
  "data": {
   "shadows": "sklearn.utils._testing.ignore_warnings"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_nmf.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_nmf.nmf": {
  "data": {
   "shadows": "sklearn.decomposition._nmf"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_nmf.non_negative_factorization": {
  "data": {
   "shadows": "sklearn.decomposition.non_negative_factorization"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_nmf.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_nmf.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_nmf.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_nmf.squared_norm": {
  "data": {
   "shadows": "sklearn.utils.extmath.squared_norm"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_nmf.test_beta_divergence": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": [
    "numpy.clip",
    "numpy.random.mtrand.RandomState",
    "scipy.sparse.csr_matrix",
    "sklearn.decomposition._nmf._beta_divergence",
    "sklearn.decomposition._nmf._initialize_nmf",
    "sklearn.decomposition.tests.test_nmf._beta_divergence_dense",
    "sklearn.utils._testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_nmf.test_convergence_warning": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "numpy.ones",
    "sklearn.decomposition.NMF",
    "sklearn.decomposition.tests.test_nmf.pytest",
    "sklearn.exceptions.ConvergenceWarning"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_nmf.test_init_default_deprecation": {
  "data": {
   "lineno": 599,
   "symbols_in_volume": [
    "FutureWarning",
    "numpy.abs",
    "numpy.random.mtrand.RandomState",
    "sklearn.decomposition.NMF",
    "sklearn.decomposition._nmf._initialize_nmf",
    "sklearn.decomposition.non_negative_factorization",
    "sklearn.decomposition.tests.test_nmf.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_nmf.test_initialize_close": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.dot",
    "numpy.random.mtrand.RandomState",
    "scipy.linalg.norm",
    "sklearn.decomposition._nmf._initialize_nmf"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_nmf.test_initialize_nn_output": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.random.mtrand.RandomState",
    "sklearn.decomposition._nmf._initialize_nmf"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_nmf.test_initialize_variants": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.random.mtrand.RandomState",
    "sklearn.decomposition._nmf._initialize_nmf",
    "sklearn.utils._testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_nmf.test_n_components_greater_n_features": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.random.mtrand.RandomState",
    "sklearn.decomposition.NMF"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_nmf.test_nmf_custom_init_dtype_error": {
  "data": {
   "lineno": 583,
   "symbols_in_volume": [
    "TypeError",
    "numpy.float32",
    "numpy.random.RandomState",
    "sklearn.decomposition.NMF",
    "sklearn.decomposition.non_negative_factorization",
    "sklearn.decomposition.tests.test_nmf.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_nmf.test_nmf_decreasing": {
  "data": {
   "lineno": 490,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.random.mtrand.RandomState",
    "range",
    "sklearn.decomposition._nmf._beta_divergence",
    "sklearn.decomposition._nmf._initialize_nmf",
    "sklearn.decomposition.non_negative_factorization",
    "sklearn.exceptions.ConvergenceWarning",
    "sklearn.utils._testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_nmf.test_nmf_dtype_match": {
  "data": {
   "lineno": 543,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.float32",
    "numpy.float64",
    "numpy.int32",
    "numpy.int64",
    "numpy.random.RandomState",
    "sklearn.decomposition.NMF",
    "sklearn.decomposition._nmf",
    "sklearn.decomposition._nmf.components_.dtype",
    "sklearn.decomposition._nmf.fit",
    "sklearn.decomposition._nmf.fit_transform",
    "sklearn.decomposition.tests.test_nmf.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_nmf.test_nmf_fit_close": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.random.mtrand.RandomState",
    "sklearn.decomposition.NMF",
    "sklearn.decomposition.tests.test_nmf.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_nmf.test_nmf_fit_nn_output": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "UserWarning",
    "numpy.arange",
    "numpy.c_",
    "sklearn.decomposition.NMF",
    "sklearn.decomposition.tests.test_nmf.pytest",
    "sklearn.utils._testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_nmf.test_nmf_float32_float64_consistency": {
  "data": {
   "lineno": 564,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.float32",
    "numpy.random.RandomState",
    "sklearn.decomposition.NMF",
    "sklearn.decomposition.tests.test_nmf.pytest",
    "sklearn.utils._testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_nmf.test_nmf_inverse_transform": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.random.RandomState",
    "sklearn.decomposition.NMF",
    "sklearn.decomposition.tests.test_nmf.pytest",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_nmf.test_nmf_multiplicative_update_sparse": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.random.mtrand.RandomState",
    "scipy.sparse.csr_matrix",
    "sklearn.decomposition._nmf._initialize_nmf",
    "sklearn.decomposition.non_negative_factorization",
    "sklearn.exceptions.ConvergenceWarning",
    "sklearn.utils._testing.assert_array_almost_equal",
    "sklearn.utils._testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_nmf.test_nmf_negative_beta_loss": {
  "data": {
   "lineno": 407,
   "symbols_in_volume": [
    "ValueError",
    "_assert_nmf_no_nan",
    "numpy.clip",
    "numpy.random.mtrand.RandomState",
    "scipy.sparse.csr_matrix",
    "sklearn.utils._testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_nmf.test_nmf_negative_beta_loss._assert_nmf_no_nan": {
  "data": {
   "lineno": 419,
   "symbols_in_volume": [
    "numpy.any",
    "numpy.isnan",
    "sklearn.decomposition.non_negative_factorization"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_nmf.test_nmf_regularization": {
  "data": {
   "lineno": 436,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.random.mtrand.RandomState",
    "scipy.linalg.norm",
    "sklearn.decomposition._nmf.NMF"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_nmf.test_nmf_sparse_input": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.arange",
    "numpy.random.mtrand.RandomState",
    "scipy.sparse.csc_matrix",
    "sklearn.base.clone",
    "sklearn.decomposition.NMF",
    "sklearn.decomposition.tests.test_nmf.pytest",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_nmf.test_nmf_sparse_transform": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.random.mtrand.RandomState",
    "scipy.sparse.csc_matrix",
    "sklearn.decomposition.NMF",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_nmf.test_nmf_transform": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.random.mtrand.RandomState",
    "sklearn.decomposition.NMF",
    "sklearn.decomposition.tests.test_nmf.pytest",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_nmf.test_nmf_transform_custom_init": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.random.RandomState",
    "numpy.sqrt",
    "sklearn.decomposition.NMF"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_nmf.test_nmf_underflow": {
  "data": {
   "lineno": 528,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.random.RandomState",
    "sklearn.decomposition._nmf._beta_divergence",
    "sklearn.utils._testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_nmf.test_non_negative_factorization_checking": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "ValueError",
    "numpy.ones",
    "sklearn.decomposition.non_negative_factorization",
    "sklearn.utils._testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_nmf.test_non_negative_factorization_consistency": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.arange",
    "numpy.random.mtrand.RandomState",
    "sklearn.decomposition.NMF",
    "sklearn.decomposition.non_negative_factorization",
    "sklearn.decomposition.tests.test_nmf.pytest",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_nmf.test_parameter_checking": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "ValueError",
    "numpy.ones",
    "sklearn.decomposition.NMF",
    "sklearn.decomposition._nmf._initialize_nmf",
    "sklearn.utils._testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_nmf.test_special_sparse_dot": {
  "data": {
   "lineno": 330,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.asarray",
    "numpy.clip",
    "numpy.random.mtrand.RandomState",
    "scipy.sparse.csr_matrix",
    "sklearn.decomposition._nmf._special_sparse_dot",
    "sklearn.utils._testing.assert_array_almost_equal",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_online_lda": {
  "data": {},
  "type": "module"
 },
 "sklearn.decomposition.tests.test_online_lda.LatentDirichletAllocation": {
  "data": {
   "shadows": "sklearn.decomposition.LatentDirichletAllocation"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_online_lda.NotFittedError": {
  "data": {
   "shadows": "sklearn.exceptions.NotFittedError"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_online_lda.StringIO": {
  "data": {
   "shadows": "io.StringIO"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_online_lda._build_sparse_mtx": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "int",
    "numpy.full",
    "scipy.linalg.block_diag",
    "scipy.sparse.csr_matrix"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_online_lda._dirichlet_expectation_1d": {
  "data": {
   "shadows": "sklearn.decomposition._lda._dirichlet_expectation_1d"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_online_lda._dirichlet_expectation_2d": {
  "data": {
   "shadows": "sklearn.decomposition._lda._dirichlet_expectation_2d"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_online_lda.assert_allclose": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_allclose"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_online_lda.assert_almost_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_almost_equal"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_online_lda.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_online_lda.block_diag": {
  "data": {
   "shadows": "scipy.linalg.block_diag"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_online_lda.check_verbosity": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": [
    "io.StringIO",
    "sklearn.decomposition.LatentDirichletAllocation",
    "sklearn.decomposition.tests.test_online_lda._build_sparse_mtx",
    "sklearn.decomposition.tests.test_online_lda.sys"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_online_lda.csr_matrix": {
  "data": {
   "shadows": "scipy.sparse.csr_matrix"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_online_lda.if_safe_multiprocessing_with_blas": {
  "data": {
   "shadows": "sklearn.utils._testing.if_safe_multiprocessing_with_blas"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_online_lda.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_online_lda.psi": {
  "data": {
   "shadows": "scipy.special.psi"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_online_lda.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_online_lda.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_online_lda.test_dirichlet_expectation": {
  "data": {
   "lineno": 327,
   "symbols_in_volume": [
    "numpy.empty_like",
    "numpy.exp",
    "numpy.logspace",
    "numpy.newaxis",
    "numpy.sum",
    "scipy.special.psi",
    "sklearn.decomposition._lda._dirichlet_expectation_1d",
    "sklearn.decomposition._lda._dirichlet_expectation_2d",
    "sklearn.utils._testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_online_lda.test_invalid_params": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "ValueError",
    "numpy.ones",
    "sklearn.decomposition.LatentDirichletAllocation",
    "sklearn.decomposition.tests.test_online_lda.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_online_lda.test_lda_default_prior_params": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "sklearn.decomposition.LatentDirichletAllocation",
    "sklearn.decomposition.tests.test_online_lda._build_sparse_mtx",
    "sklearn.utils._testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_online_lda.test_lda_dense_input": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "set",
    "sklearn.decomposition.LatentDirichletAllocation",
    "sklearn.decomposition.tests.test_online_lda._build_sparse_mtx",
    "sorted",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_online_lda.test_lda_empty_docs": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": [
    "numpy.ones",
    "numpy.zeros",
    "scipy.sparse.csr_matrix",
    "sklearn.decomposition.LatentDirichletAllocation",
    "sklearn.utils._testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_online_lda.test_lda_fit_batch": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "set",
    "sklearn.decomposition.LatentDirichletAllocation",
    "sklearn.decomposition.tests.test_online_lda._build_sparse_mtx",
    "sorted",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_online_lda.test_lda_fit_online": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "set",
    "sklearn.decomposition.LatentDirichletAllocation",
    "sklearn.decomposition.tests.test_online_lda._build_sparse_mtx",
    "sorted",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_online_lda.test_lda_fit_perplexity": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "sklearn.decomposition.LatentDirichletAllocation",
    "sklearn.decomposition.tests.test_online_lda._build_sparse_mtx",
    "sklearn.utils._testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_online_lda.test_lda_fit_transform": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.decomposition.LatentDirichletAllocation",
    "sklearn.decomposition.tests.test_online_lda.pytest",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_online_lda.test_lda_multi_jobs": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "set",
    "sklearn.decomposition.LatentDirichletAllocation",
    "sklearn.decomposition.tests.test_online_lda._build_sparse_mtx",
    "sklearn.decomposition.tests.test_online_lda.pytest",
    "sklearn.utils._testing.if_safe_multiprocessing_with_blas",
    "sorted",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_online_lda.test_lda_negative_input": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "ValueError",
    "numpy.full",
    "sklearn.decomposition.LatentDirichletAllocation",
    "sklearn.decomposition.tests.test_online_lda.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_online_lda.test_lda_no_component_error": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.decomposition.LatentDirichletAllocation",
    "sklearn.decomposition.tests.test_online_lda.pytest",
    "sklearn.exceptions.NotFittedError"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_online_lda.test_lda_partial_fit": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "range",
    "set",
    "sklearn.decomposition.LatentDirichletAllocation",
    "sklearn.decomposition.tests.test_online_lda._build_sparse_mtx",
    "sorted",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_online_lda.test_lda_partial_fit_multi_jobs": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "range",
    "set",
    "sklearn.decomposition.LatentDirichletAllocation",
    "sklearn.decomposition.tests.test_online_lda._build_sparse_mtx",
    "sklearn.utils._testing.if_safe_multiprocessing_with_blas",
    "sorted",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_online_lda.test_lda_perplexity": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "sklearn.decomposition.LatentDirichletAllocation",
    "sklearn.decomposition.tests.test_online_lda._build_sparse_mtx",
    "sklearn.decomposition.tests.test_online_lda.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_online_lda.test_lda_preplexity_mismatch": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "ValueError",
    "numpy.random.RandomState",
    "numpy.random.randint",
    "sklearn.decomposition.LatentDirichletAllocation",
    "sklearn.decomposition.tests.test_online_lda.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_online_lda.test_lda_score": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "sklearn.decomposition.LatentDirichletAllocation",
    "sklearn.decomposition.tests.test_online_lda._build_sparse_mtx",
    "sklearn.decomposition.tests.test_online_lda.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_online_lda.test_lda_score_perplexity": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "numpy.exp",
    "numpy.sum",
    "sklearn.decomposition.LatentDirichletAllocation",
    "sklearn.decomposition.tests.test_online_lda._build_sparse_mtx",
    "sklearn.utils._testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_online_lda.test_lda_transform": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "numpy.ones",
    "numpy.random.RandomState",
    "numpy.sum",
    "sklearn.decomposition.LatentDirichletAllocation",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_online_lda.test_perplexity_input_format": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "sklearn.decomposition.LatentDirichletAllocation",
    "sklearn.decomposition.tests.test_online_lda._build_sparse_mtx",
    "sklearn.utils._testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_online_lda.test_verbosity": {
  "data": {
   "lineno": 362,
   "symbols_in_volume": [
    "sklearn.decomposition.tests.test_online_lda.check_verbosity",
    "sklearn.decomposition.tests.test_online_lda.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_pca": {
  "data": {
   "symbols_in_volume": [
    "sklearn.datasets.load_iris"
   ]
  },
  "type": "module"
 },
 "sklearn.decomposition.tests.test_pca.PCA": {
  "data": {
   "shadows": "sklearn.decomposition.PCA"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_pca.PCA_SOLVERS": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "sklearn.decomposition.tests.test_pca._assess_dimension": {
  "data": {
   "shadows": "sklearn.decomposition._pca._assess_dimension"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_pca._infer_dimension": {
  "data": {
   "shadows": "sklearn.decomposition._pca._infer_dimension"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_pca.assert_allclose": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_allclose"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_pca.check_pca_float_dtype_preservation": {
  "data": {
   "lineno": 520,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.float64",
    "numpy.random.RandomState",
    "sklearn.decomposition.PCA",
    "sklearn.utils._testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_pca.check_pca_int_dtype_upcast_to_double": {
  "data": {
   "lineno": 542,
   "symbols_in_volume": [
    "numpy.float64",
    "numpy.int32",
    "numpy.int64",
    "numpy.random.RandomState",
    "sklearn.decomposition.PCA",
    "sklearn.utils._testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_pca.datasets": {
  "data": {
   "shadows": "sklearn.datasets"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_pca.iris": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "sklearn.decomposition.tests.test_pca.load_iris": {
  "data": {
   "shadows": "sklearn.datasets.load_iris"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_pca.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_pca.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_pca.sp": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_pca.test_assess_dimension_bad_rank": {
  "data": {
   "lineno": 573,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "sklearn.decomposition._pca._assess_dimension",
    "sklearn.decomposition.tests.test_pca.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_pca.test_assess_dimesion_rank_one": {
  "data": {
   "lineno": 631,
   "symbols_in_volume": [
    "numpy.inf",
    "numpy.isfinite",
    "numpy.linalg.svd",
    "numpy.ones",
    "numpy.zeros",
    "range",
    "sklearn.decomposition._pca._assess_dimension",
    "sklearn.utils._testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_pca.test_fit_mle_too_few_samples": {
  "data": {
   "lineno": 607,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.datasets.make_classification",
    "sklearn.decomposition.PCA",
    "sklearn.decomposition.tests.test_pca.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_pca.test_infer_dim_1": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.random.RandomState",
    "range",
    "sklearn.decomposition.PCA",
    "sklearn.decomposition._pca._assess_dimension"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_pca.test_infer_dim_2": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.random.RandomState",
    "sklearn.decomposition.PCA",
    "sklearn.decomposition._pca._infer_dimension"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_pca.test_infer_dim_3": {
  "data": {
   "lineno": 354,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.random.RandomState",
    "sklearn.decomposition.PCA",
    "sklearn.decomposition._pca._infer_dimension"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_pca.test_infer_dim_by_explained_variance": {
  "data": {
   "lineno": 367,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.decomposition.PCA",
    "sklearn.decomposition.tests.test_pca.iris",
    "sklearn.decomposition.tests.test_pca.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_pca.test_mle_redundant_data": {
  "data": {
   "lineno": 596,
   "symbols_in_volume": [
    "sklearn.datasets.make_classification",
    "sklearn.decomposition.PCA"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_pca.test_mle_simple_case": {
  "data": {
   "lineno": 620,
   "symbols_in_volume": [
    "numpy.mean",
    "numpy.random.RandomState",
    "sklearn.decomposition.PCA"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_pca.test_n_components_mle": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.decomposition.PCA",
    "sklearn.decomposition.tests.test_pca.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_pca.test_n_components_mle_error": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "ValueError",
    "numpy.random.RandomState",
    "sklearn.decomposition.PCA",
    "sklearn.decomposition.tests.test_pca.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_pca.test_n_components_none": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "min",
    "sklearn.decomposition.PCA",
    "sklearn.decomposition.tests.test_pca.iris",
    "sklearn.decomposition.tests.test_pca.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_pca.test_no_empty_slice_warning": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "numpy.random.uniform",
    "sklearn.decomposition.PCA",
    "sklearn.decomposition.tests.test_pca.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_pca.test_pca": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.eye",
    "range",
    "sklearn.decomposition.PCA",
    "sklearn.decomposition.tests.test_pca.PCA_SOLVERS",
    "sklearn.decomposition.tests.test_pca.iris",
    "sklearn.decomposition.tests.test_pca.pytest",
    "sklearn.utils._testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_pca.test_pca_bad_solver": {
  "data": {
   "lineno": 493,
   "symbols_in_volume": [
    "ValueError",
    "numpy.random.RandomState",
    "sklearn.decomposition.PCA",
    "sklearn.decomposition.tests.test_pca.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_pca.test_pca_check_projection": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.array",
    "numpy.random.RandomState",
    "numpy.sqrt",
    "sklearn.decomposition.PCA",
    "sklearn.decomposition.tests.test_pca.PCA_SOLVERS",
    "sklearn.decomposition.tests.test_pca.pytest",
    "sklearn.utils._testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_pca.test_pca_check_projection_list": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "sklearn.decomposition.PCA",
    "sklearn.decomposition.tests.test_pca.PCA_SOLVERS",
    "sklearn.decomposition.tests.test_pca.pytest",
    "sklearn.utils._testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_pca.test_pca_deterministic_output": {
  "data": {
   "lineno": 500,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "numpy.tile",
    "numpy.zeros",
    "range",
    "sklearn.decomposition.PCA",
    "sklearn.decomposition.tests.test_pca.PCA_SOLVERS",
    "sklearn.decomposition.tests.test_pca.pytest",
    "sklearn.utils._testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_pca.test_pca_dim": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.random.RandomState",
    "sklearn.decomposition.PCA"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_pca.test_pca_dtype_preservation": {
  "data": {
   "lineno": 514,
   "symbols_in_volume": [
    "sklearn.decomposition.tests.test_pca.PCA_SOLVERS",
    "sklearn.decomposition.tests.test_pca.check_pca_float_dtype_preservation",
    "sklearn.decomposition.tests.test_pca.check_pca_int_dtype_upcast_to_double",
    "sklearn.decomposition.tests.test_pca.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_pca.test_pca_explained_variance_empirical": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "numpy.cov",
    "numpy.linalg.eig",
    "numpy.random.RandomState",
    "numpy.var",
    "sklearn.datasets.make_classification",
    "sklearn.decomposition.PCA",
    "sklearn.decomposition.tests.test_pca.PCA_SOLVERS",
    "sklearn.decomposition.tests.test_pca.pytest",
    "sklearn.utils._testing.assert_allclose",
    "sorted"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_pca.test_pca_explained_variance_equivalence_solver": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.decomposition.PCA",
    "sklearn.decomposition.tests.test_pca.pytest",
    "sklearn.utils._testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_pca.test_pca_inverse": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.decomposition.PCA",
    "sklearn.decomposition.tests.test_pca.pytest",
    "sklearn.utils._testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_pca.test_pca_n_components_mostly_explained_variance_ratio": {
  "data": {
   "lineno": 561,
   "symbols_in_volume": [
    "sklearn.datasets.load_iris",
    "sklearn.decomposition.PCA"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_pca.test_pca_sanity_noise_variance": {
  "data": {
   "lineno": 420,
   "symbols_in_volume": [
    "numpy.all",
    "sklearn.datasets.load_digits",
    "sklearn.decomposition.PCA",
    "sklearn.decomposition.tests.test_pca.PCA_SOLVERS",
    "sklearn.decomposition.tests.test_pca.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_pca.test_pca_score": {
  "data": {
   "lineno": 381,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.exp",
    "numpy.log",
    "numpy.pi",
    "numpy.random.RandomState",
    "sklearn.decomposition.PCA",
    "sklearn.decomposition.tests.test_pca.PCA_SOLVERS",
    "sklearn.decomposition.tests.test_pca.pytest",
    "sklearn.utils._testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_pca.test_pca_score3": {
  "data": {
   "lineno": 403,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.random.RandomState",
    "numpy.zeros",
    "range",
    "sklearn.decomposition.PCA"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_pca.test_pca_score_consistency_solvers": {
  "data": {
   "lineno": 432,
   "symbols_in_volume": [
    "sklearn.datasets.load_digits",
    "sklearn.decomposition.PCA",
    "sklearn.decomposition.tests.test_pca.pytest",
    "sklearn.utils._testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_pca.test_pca_singular_values": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.linalg.norm",
    "numpy.random.RandomState",
    "numpy.sqrt",
    "numpy.sum",
    "sklearn.decomposition.PCA",
    "sklearn.decomposition.tests.test_pca.PCA_SOLVERS",
    "sklearn.decomposition.tests.test_pca.pytest",
    "sklearn.utils._testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_pca.test_pca_singular_values_consistency": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.decomposition.PCA",
    "sklearn.decomposition.tests.test_pca.pytest",
    "sklearn.utils._testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_pca.test_pca_sparse_input": {
  "data": {
   "lineno": 482,
   "symbols_in_volume": [
    "TypeError",
    "numpy.random.RandomState",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.issparse",
    "sklearn.decomposition.PCA",
    "sklearn.decomposition.tests.test_pca.PCA_SOLVERS",
    "sklearn.decomposition.tests.test_pca.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_pca.test_pca_svd_solver_auto": {
  "data": {
   "lineno": 460,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.decomposition.PCA",
    "sklearn.decomposition.tests.test_pca.pytest",
    "sklearn.utils._testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_pca.test_pca_validation": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "sklearn.decomposition.PCA",
    "sklearn.decomposition.tests.test_pca.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_pca.test_pca_zero_noise_variance_edge_cases": {
  "data": {
   "lineno": 444,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.random.RandomState",
    "sklearn.decomposition.PCA",
    "sklearn.decomposition.tests.test_pca.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_pca.test_small_eigenvalues_mle": {
  "data": {
   "lineno": 583,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.inf",
    "sklearn.decomposition._pca._assess_dimension",
    "sklearn.decomposition._pca._infer_dimension"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_pca.test_whitening": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "numpy.diag",
    "numpy.dot",
    "numpy.linspace",
    "numpy.ones",
    "numpy.random.RandomState",
    "numpy.zeros",
    "sklearn.decomposition.PCA",
    "sklearn.decomposition.tests.test_pca.PCA_SOLVERS",
    "sklearn.decomposition.tests.test_pca.pytest",
    "sklearn.utils._testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_sparse_pca": {
  "data": {},
  "type": "module"
 },
 "sklearn.decomposition.tests.test_sparse_pca.MiniBatchSparsePCA": {
  "data": {
   "shadows": "sklearn.decomposition.MiniBatchSparsePCA"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_sparse_pca.PCA": {
  "data": {
   "shadows": "sklearn.decomposition.PCA"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_sparse_pca.SparsePCA": {
  "data": {
   "shadows": "sklearn.decomposition.SparsePCA"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_sparse_pca.assert_allclose": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_allclose"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_sparse_pca.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_sparse_pca.check_random_state": {
  "data": {
   "shadows": "sklearn.utils.check_random_state"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_sparse_pca.generate_toy_data": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.zeros",
    "range",
    "sklearn.utils.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_sparse_pca.if_safe_multiprocessing_with_blas": {
  "data": {
   "shadows": "sklearn.utils._testing.if_safe_multiprocessing_with_blas"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_sparse_pca.joblib": {
  "data": {
   "shadows": "joblib"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_sparse_pca.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_sparse_pca.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_sparse_pca.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_sparse_pca.test_correct_shapes": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.decomposition.SparsePCA"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_sparse_pca.test_fit_transform": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.decomposition.SparsePCA",
    "sklearn.decomposition.tests.test_sparse_pca.generate_toy_data",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_sparse_pca.test_fit_transform_parallel": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.random.RandomState",
    "sklearn.decomposition.SparsePCA",
    "sklearn.decomposition.tests.test_sparse_pca.generate_toy_data",
    "sklearn.utils._testing.assert_array_almost_equal",
    "sklearn.utils._testing.if_safe_multiprocessing_with_blas"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_sparse_pca.test_fit_transform_tall": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.decomposition.SparsePCA",
    "sklearn.decomposition.tests.test_sparse_pca.generate_toy_data",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_sparse_pca.test_initialization": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "numpy.linalg.norm",
    "numpy.random.RandomState",
    "sklearn.decomposition.SparsePCA",
    "sklearn.utils._testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_sparse_pca.test_mini_batch_correct_shapes": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.decomposition.MiniBatchSparsePCA"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_sparse_pca.test_mini_batch_fit_transform": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.random.RandomState",
    "sklearn.decomposition.MiniBatchSparsePCA",
    "sklearn.decomposition.tests.test_sparse_pca.generate_toy_data",
    "sklearn.decomposition.tests.test_sparse_pca.joblib",
    "sklearn.decomposition.tests.test_sparse_pca.pytest",
    "sklearn.decomposition.tests.test_sparse_pca.sys",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_sparse_pca.test_pca_vs_spca": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.eye",
    "numpy.random.RandomState",
    "numpy.sign",
    "sklearn.decomposition.PCA",
    "sklearn.decomposition.SparsePCA",
    "sklearn.decomposition.tests.test_sparse_pca.generate_toy_data",
    "sklearn.utils._testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_sparse_pca.test_scaling_fit_transform": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.decomposition.SparsePCA",
    "sklearn.decomposition.tests.test_sparse_pca.generate_toy_data",
    "sklearn.utils._testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_sparse_pca.test_spca_n_components_": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "SPCA",
    "numpy.random.RandomState",
    "sklearn.decomposition.MiniBatchSparsePCA",
    "sklearn.decomposition.SparsePCA",
    "sklearn.decomposition.tests.test_sparse_pca.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_sparse_pca.test_transform_nan": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "numpy.any",
    "numpy.isnan",
    "numpy.random.RandomState",
    "sklearn.decomposition.SparsePCA",
    "sklearn.decomposition.tests.test_sparse_pca.generate_toy_data"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_truncated_svd": {
  "data": {},
  "type": "module"
 },
 "sklearn.decomposition.tests.test_truncated_svd.PCA": {
  "data": {
   "shadows": "sklearn.decomposition.PCA"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_truncated_svd.SVD_SOLVERS": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "sklearn.decomposition.tests.test_truncated_svd.TruncatedSVD": {
  "data": {
   "shadows": "sklearn.decomposition.TruncatedSVD"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_truncated_svd.X_sparse": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "numpy.log",
    "scipy.sparse.random",
    "sklearn.decomposition.tests.test_truncated_svd.pytest",
    "sklearn.utils.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_truncated_svd.assert_allclose": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_allclose"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_truncated_svd.assert_array_less": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_array_less"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_truncated_svd.check_random_state": {
  "data": {
   "shadows": "sklearn.utils.check_random_state"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_truncated_svd.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_truncated_svd.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_truncated_svd.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_truncated_svd.test_attributes": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "sklearn.decomposition.TruncatedSVD",
    "sklearn.decomposition.tests.test_truncated_svd.X_sparse",
    "sklearn.decomposition.tests.test_truncated_svd.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_truncated_svd.test_explained_variance": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "numpy.var",
    "sklearn.decomposition.TruncatedSVD",
    "sklearn.decomposition.tests.test_truncated_svd.SVD_SOLVERS",
    "sklearn.decomposition.tests.test_truncated_svd.X_sparse",
    "sklearn.decomposition.tests.test_truncated_svd.pytest",
    "sklearn.utils._testing.assert_allclose",
    "sklearn.utils._testing.assert_array_less"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_truncated_svd.test_explained_variance_components_10_20": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "sklearn.decomposition.TruncatedSVD",
    "sklearn.decomposition.tests.test_truncated_svd.SVD_SOLVERS",
    "sklearn.decomposition.tests.test_truncated_svd.X_sparse",
    "sklearn.decomposition.tests.test_truncated_svd.pytest",
    "sklearn.utils._testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_truncated_svd.test_fit_transform": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "sklearn.decomposition.TruncatedSVD",
    "sklearn.decomposition.tests.test_truncated_svd.X_sparse",
    "sklearn.decomposition.tests.test_truncated_svd.pytest",
    "sklearn.utils._testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_truncated_svd.test_integers": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "numpy.int64",
    "sklearn.decomposition.TruncatedSVD",
    "sklearn.decomposition.tests.test_truncated_svd.X_sparse"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_truncated_svd.test_inverse_transform": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "sklearn.decomposition.TruncatedSVD",
    "sklearn.decomposition.tests.test_truncated_svd.SVD_SOLVERS",
    "sklearn.decomposition.tests.test_truncated_svd.X_sparse",
    "sklearn.decomposition.tests.test_truncated_svd.pytest",
    "sklearn.utils._testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_truncated_svd.test_singular_values_consistency": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "numpy.linalg.norm",
    "numpy.random.RandomState",
    "numpy.sqrt",
    "numpy.sum",
    "sklearn.decomposition.TruncatedSVD",
    "sklearn.decomposition.tests.test_truncated_svd.SVD_SOLVERS",
    "sklearn.decomposition.tests.test_truncated_svd.pytest",
    "sklearn.utils._testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_truncated_svd.test_singular_values_expected": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.random.RandomState",
    "numpy.sqrt",
    "numpy.sum",
    "sklearn.decomposition.TruncatedSVD",
    "sklearn.decomposition.tests.test_truncated_svd.SVD_SOLVERS",
    "sklearn.decomposition.tests.test_truncated_svd.pytest",
    "sklearn.utils._testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_truncated_svd.test_solvers": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "numpy.abs",
    "sklearn.decomposition.TruncatedSVD",
    "sklearn.decomposition.tests.test_truncated_svd.X_sparse",
    "sklearn.decomposition.tests.test_truncated_svd.pytest",
    "sklearn.utils._testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_truncated_svd.test_sparse_formats": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "getattr",
    "sklearn.decomposition.TruncatedSVD",
    "sklearn.decomposition.tests.test_truncated_svd.X_sparse",
    "sklearn.decomposition.tests.test_truncated_svd.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_truncated_svd.test_too_many_components": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.decomposition.TruncatedSVD",
    "sklearn.decomposition.tests.test_truncated_svd.SVD_SOLVERS",
    "sklearn.decomposition.tests.test_truncated_svd.X_sparse",
    "sklearn.decomposition.tests.test_truncated_svd.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_truncated_svd.test_truncated_svd_eq_pca": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "dict",
    "sklearn.decomposition.PCA",
    "sklearn.decomposition.TruncatedSVD",
    "sklearn.decomposition.tests.test_truncated_svd.X_sparse",
    "sklearn.utils._testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "sklearn.discriminant_analysis": {
  "data": {},
  "type": "module"
 },
 "sklearn.discriminant_analysis.LinearDiscriminantAnalysis": {
  "data": {
   "lineno": 166
  },
  "type": "class"
 },
 "sklearn.discriminant_analysis.LinearDiscriminantAnalysis.__init__": {
  "data": {
   "lineno": 300
  },
  "type": "function"
 },
 "sklearn.discriminant_analysis.LinearDiscriminantAnalysis._solve_eigen": {
  "data": {
   "lineno": 365,
   "symbols_in_volume": [
    "numpy.argsort",
    "numpy.diag",
    "numpy.dot",
    "numpy.log",
    "numpy.sort",
    "numpy.sum",
    "scipy.linalg.eigh",
    "sklearn.discriminant_analysis._class_cov",
    "sklearn.discriminant_analysis._class_means",
    "sklearn.discriminant_analysis._cov"
   ]
  },
  "type": "function"
 },
 "sklearn.discriminant_analysis.LinearDiscriminantAnalysis._solve_lsqr": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "numpy.diag",
    "numpy.dot",
    "numpy.log",
    "scipy.linalg.lstsq",
    "sklearn.discriminant_analysis._class_cov",
    "sklearn.discriminant_analysis._class_means"
   ]
  },
  "type": "function"
 },
 "sklearn.discriminant_analysis.LinearDiscriminantAnalysis._solve_svd": {
  "data": {
   "lineno": 429,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "numpy.concatenate",
    "numpy.dot",
    "numpy.log",
    "numpy.sqrt",
    "numpy.sum",
    "scipy.linalg.svd",
    "sklearn.discriminant_analysis._class_cov",
    "sklearn.discriminant_analysis._class_means"
   ]
  },
  "type": "function"
 },
 "sklearn.discriminant_analysis.LinearDiscriminantAnalysis.decision_function": {
  "data": {
   "lineno": 636,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.discriminant_analysis.LinearDiscriminantAnalysis.fit": {
  "data": {
   "lineno": 490,
   "symbols_in_volume": [
    "NotImplementedError",
    "UserWarning",
    "ValueError",
    "float",
    "len",
    "min",
    "numpy.array",
    "numpy.asarray",
    "numpy.bincount",
    "numpy.float32",
    "numpy.float64",
    "numpy.isclose",
    "numpy.unique",
    "sklearn.discriminant_analysis.warnings",
    "unique_labels"
   ]
  },
  "type": "function"
 },
 "sklearn.discriminant_analysis.LinearDiscriminantAnalysis.predict_log_proba": {
  "data": {
   "lineno": 619,
   "symbols_in_volume": [
    "numpy.finfo",
    "numpy.log"
   ]
  },
  "type": "function"
 },
 "sklearn.discriminant_analysis.LinearDiscriminantAnalysis.predict_proba": {
  "data": {
   "lineno": 597,
   "symbols_in_volume": [
    "check_is_fitted",
    "numpy.vstack",
    "scipy.special.expit",
    "softmax"
   ]
  },
  "type": "function"
 },
 "sklearn.discriminant_analysis.LinearDiscriminantAnalysis.transform": {
  "data": {
   "lineno": 571,
   "symbols_in_volume": [
    "NotImplementedError",
    "check_array",
    "check_is_fitted",
    "numpy.dot"
   ]
  },
  "type": "function"
 },
 "sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis": {
  "data": {
   "lineno": 660
  },
  "type": "class"
 },
 "sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis.__init__": {
  "data": {
   "lineno": 749,
   "symbols_in_volume": [
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis._decision_function": {
  "data": {
   "lineno": 823,
   "symbols_in_volume": [
    "check_array",
    "check_is_fitted",
    "len",
    "numpy.array",
    "numpy.asarray",
    "numpy.dot",
    "numpy.log",
    "numpy.sum",
    "range"
   ]
  },
  "type": "function"
 },
 "sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis.decision_function": {
  "data": {
   "lineno": 839,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis.fit": {
  "data": {
   "lineno": 757,
   "symbols_in_volume": [
    "ValueError",
    "check_classification_targets",
    "float",
    "len",
    "numpy.asarray",
    "numpy.bincount",
    "numpy.dot",
    "numpy.linalg.svd",
    "numpy.sum",
    "numpy.unique",
    "range",
    "sklearn.discriminant_analysis.warnings",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis.predict": {
  "data": {
   "lineno": 865
  },
  "type": "function"
 },
 "sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis.predict_log_proba": {
  "data": {
   "lineno": 902,
   "symbols_in_volume": [
    "numpy.log"
   ]
  },
  "type": "function"
 },
 "sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis.predict_proba": {
  "data": {
   "lineno": 882,
   "symbols_in_volume": [
    "numpy.exp",
    "numpy.newaxis"
   ]
  },
  "type": "function"
 },
 "sklearn.discriminant_analysis.__all__": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "sklearn.discriminant_analysis._class_cov": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "enumerate",
    "numpy.atleast_2d",
    "numpy.unique",
    "numpy.zeros",
    "sklearn.discriminant_analysis._cov"
   ]
  },
  "type": "function"
 },
 "sklearn.discriminant_analysis._class_means": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "len",
    "numpy.add.at",
    "numpy.bincount",
    "numpy.unique",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "sklearn.discriminant_analysis._cov": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "StandardScaler",
    "TypeError",
    "ValueError",
    "empirical_covariance",
    "float",
    "hasattr",
    "int",
    "isinstance",
    "ledoit_wolf",
    "numpy.newaxis",
    "shrunk_covariance",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.discriminant_analysis.expit": {
  "data": {
   "shadows": "scipy.special.expit"
  },
  "type": "import"
 },
 "sklearn.discriminant_analysis.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "sklearn.discriminant_analysis.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.discriminant_analysis.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.dummy": {
  "data": {},
  "type": "module"
 },
 "sklearn.dummy.DummyClassifier": {
  "data": {
   "lineno": 23
  },
  "type": "class"
 },
 "sklearn.dummy.DummyClassifier.__init__": {
  "data": {
   "lineno": 97
  },
  "type": "function"
 },
 "sklearn.dummy.DummyClassifier._more_tags": {
  "data": {
   "lineno": 349
  },
  "type": "function"
 },
 "sklearn.dummy.DummyClassifier.fit": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "UserWarning",
    "ValueError",
    "_check_sample_weight",
    "any",
    "check_consistent_length",
    "class_distribution",
    "list",
    "numpy.asarray",
    "numpy.atleast_1d",
    "numpy.reshape",
    "range",
    "scipy.sparse.issparse",
    "sklearn.dummy.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.dummy.DummyClassifier.predict": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "ValueError",
    "_num_samples",
    "_random_choice_csc",
    "check_is_fitted",
    "check_random_state",
    "numpy.array",
    "numpy.ravel",
    "numpy.tile",
    "numpy.vstack",
    "range"
   ]
  },
  "type": "function"
 },
 "sklearn.dummy.DummyClassifier.predict_log_proba": {
  "data": {
   "lineno": 327,
   "symbols_in_volume": [
    "numpy.log"
   ]
  },
  "type": "function"
 },
 "sklearn.dummy.DummyClassifier.predict_proba": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "_num_samples",
    "check_is_fitted",
    "check_random_state",
    "numpy.float64",
    "numpy.ones",
    "numpy.where",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "sklearn.dummy.DummyClassifier.score": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": [
    "len",
    "numpy.zeros",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.dummy.DummyRegressor": {
  "data": {
   "lineno": 391
  },
  "type": "class"
 },
 "sklearn.dummy.DummyRegressor.__init__": {
  "data": {
   "lineno": 447
  },
  "type": "function"
 },
 "sklearn.dummy.DummyRegressor._more_tags": {
  "data": {
   "lineno": 569
  },
  "type": "function"
 },
 "sklearn.dummy.DummyRegressor.fit": {
  "data": {
   "lineno": 453,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "_check_sample_weight",
    "_weighted_percentile",
    "check_array",
    "check_consistent_length",
    "len",
    "numpy.average",
    "numpy.isscalar",
    "numpy.median",
    "numpy.percentile",
    "numpy.reshape",
    "range"
   ]
  },
  "type": "function"
 },
 "sklearn.dummy.DummyRegressor.predict": {
  "data": {
   "lineno": 533,
   "symbols_in_volume": [
    "_num_samples",
    "check_is_fitted",
    "numpy.array",
    "numpy.full",
    "numpy.ravel",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "sklearn.dummy.DummyRegressor.score": {
  "data": {
   "lineno": 572,
   "symbols_in_volume": [
    "len",
    "numpy.zeros",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.dummy.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.dummy.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.dummy.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.ensemble": {
  "data": {
   "symbols_in_volume": [
    "sklearn.ensemble.typing"
   ]
  },
  "type": "module"
 },
 "sklearn.ensemble.__all__": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "sklearn.ensemble._bagging": {
  "data": {
   "symbols_in_volume": [
    "numpy.iinfo",
    "numpy.int32"
   ]
  },
  "type": "module"
 },
 "sklearn.ensemble._bagging.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "sklearn.ensemble._bagging.BaggingClassifier": {
  "data": {
   "lineno": 433,
   "symbols_in_volume": [
    "sklearn.ensemble._bagging.BaseBagging"
   ]
  },
  "type": "class"
 },
 "sklearn.ensemble._bagging.BaggingClassifier.__init__": {
  "data": {
   "lineno": 582,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._bagging.BaggingClassifier._set_oob_score": {
  "data": {
   "lineno": 614,
   "symbols_in_volume": [
    "accuracy_score",
    "hasattr",
    "indices_to_mask",
    "numpy.argmax",
    "numpy.newaxis",
    "numpy.zeros",
    "range",
    "warnings.warn",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._bagging.BaggingClassifier._validate_estimator": {
  "data": {
   "lineno": 609,
   "symbols_in_volume": [
    "DecisionTreeClassifier",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._bagging.BaggingClassifier._validate_y": {
  "data": {
   "lineno": 651,
   "symbols_in_volume": [
    "check_classification_targets",
    "column_or_1d",
    "len",
    "numpy.unique"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._bagging.BaggingClassifier.decision_function": {
  "data": {
   "lineno": 792,
   "symbols_in_volume": [
    "ValueError",
    "_partition_estimators",
    "check_array",
    "check_is_fitted",
    "delayed",
    "if_delegate_has_method",
    "joblib.Parallel",
    "range",
    "sklearn.ensemble._bagging._parallel_decision_function",
    "sum"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._bagging.BaggingClassifier.predict": {
  "data": {
   "lineno": 659,
   "symbols_in_volume": [
    "numpy.argmax"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._bagging.BaggingClassifier.predict_log_proba": {
  "data": {
   "lineno": 734,
   "symbols_in_volume": [
    "ValueError",
    "_partition_estimators",
    "check_array",
    "check_is_fitted",
    "delayed",
    "hasattr",
    "joblib.Parallel",
    "len",
    "numpy.log",
    "numpy.logaddexp",
    "range",
    "sklearn.ensemble._bagging._parallel_predict_log_proba"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._bagging.BaggingClassifier.predict_proba": {
  "data": {
   "lineno": 681,
   "symbols_in_volume": [
    "ValueError",
    "_partition_estimators",
    "check_array",
    "check_is_fitted",
    "delayed",
    "joblib.Parallel",
    "range",
    "sklearn.ensemble._bagging._parallel_predict_proba",
    "sum"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._bagging.BaggingRegressor": {
  "data": {
   "lineno": 842,
   "symbols_in_volume": [
    "sklearn.ensemble._bagging.BaseBagging"
   ]
  },
  "type": "class"
 },
 "sklearn.ensemble._bagging.BaggingRegressor.__init__": {
  "data": {
   "lineno": 982,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._bagging.BaggingRegressor._set_oob_score": {
  "data": {
   "lineno": 1053,
   "symbols_in_volume": [
    "indices_to_mask",
    "numpy.zeros",
    "r2_score",
    "warnings.warn",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._bagging.BaggingRegressor._validate_estimator": {
  "data": {
   "lineno": 1048,
   "symbols_in_volume": [
    "DecisionTreeRegressor",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._bagging.BaggingRegressor.predict": {
  "data": {
   "lineno": 1008,
   "symbols_in_volume": [
    "_partition_estimators",
    "check_array",
    "check_is_fitted",
    "delayed",
    "joblib.Parallel",
    "range",
    "sklearn.ensemble._bagging._parallel_predict_regression",
    "sum"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._bagging.BaseBagging": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "abc.ABCMeta"
   ]
  },
  "type": "class"
 },
 "sklearn.ensemble._bagging.BaseBagging.__init__": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._bagging.BaseBagging._fit": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "ValueError",
    "_check_sample_weight",
    "_partition_estimators",
    "check_random_state",
    "delayed",
    "float",
    "hasattr",
    "int",
    "isinstance",
    "joblib.Parallel",
    "len",
    "list",
    "max",
    "range",
    "sklearn.ensemble._bagging.MAX_INT",
    "sklearn.ensemble._bagging._parallel_build_estimators",
    "sklearn.ensemble._bagging.itertools",
    "sklearn.ensemble._bagging.numbers",
    "sum",
    "warnings.warn"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._bagging.BaseBagging._get_estimators_indices": {
  "data": {
   "lineno": 404,
   "symbols_in_volume": [
    "sklearn.ensemble._bagging._generate_bagging_indices"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._bagging.BaseBagging._parallel_args": {
  "data": {
   "lineno": 246
  },
  "type": "function"
 },
 "sklearn.ensemble._bagging.BaseBagging._set_oob_score": {
  "data": {
   "lineno": 394,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._bagging.BaseBagging._validate_y": {
  "data": {
   "lineno": 398,
   "symbols_in_volume": [
    "column_or_1d",
    "len"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._bagging.BaseBagging.estimators_samples_": {
  "data": {
   "lineno": 416,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._bagging.BaseBagging.fit": {
  "data": {
   "lineno": 221
  },
  "type": "function"
 },
 "sklearn.ensemble._bagging.MAX_INT": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "sklearn.ensemble._bagging.Parallel": {
  "data": {
   "shadows": "joblib.Parallel"
  },
  "type": "import"
 },
 "sklearn.ensemble._bagging.__all__": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "sklearn.ensemble._bagging._generate_bagging_indices": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "check_random_state",
    "sklearn.ensemble._bagging._generate_indices"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._bagging._generate_indices": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "sample_without_replacement"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._bagging._parallel_build_estimators": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "ValueError",
    "has_fit_parameter",
    "indices_to_mask",
    "numpy.bincount",
    "numpy.ones",
    "print",
    "range",
    "sklearn.ensemble._bagging._generate_bagging_indices"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._bagging._parallel_decision_function": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "sum",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._bagging._parallel_predict_log_proba": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "int",
    "len",
    "numpy.arange",
    "numpy.empty",
    "numpy.inf",
    "numpy.logaddexp",
    "numpy.setdiff1d",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._bagging._parallel_predict_proba": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "hasattr",
    "len",
    "numpy.zeros",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._bagging._parallel_predict_regression": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "sum",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._bagging.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "sklearn.ensemble._bagging.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "sklearn.ensemble._bagging.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.ensemble._bagging.numbers": {
  "data": {
   "shadows": "numbers"
  },
  "type": "import"
 },
 "sklearn.ensemble._bagging.warn": {
  "data": {
   "shadows": "warnings.warn"
  },
  "type": "import"
 },
 "sklearn.ensemble._base": {
  "data": {},
  "type": "module"
 },
 "sklearn.ensemble._base.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "sklearn.ensemble._base.BaseEnsemble": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "abc.ABCMeta",
    "str",
    "typing.List"
   ]
  },
  "type": "class"
 },
 "sklearn.ensemble._base.BaseEnsemble.__getitem__": {
  "data": {
   "lineno": 166
  },
  "type": "function"
 },
 "sklearn.ensemble._base.BaseEnsemble.__init__": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._base.BaseEnsemble.__iter__": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "iter"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._base.BaseEnsemble.__len__": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._base.BaseEnsemble._make_estimator": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "clone",
    "getattr",
    "sklearn.ensemble._base._set_random_states"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._base.BaseEnsemble._validate_estimator": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "sklearn.ensemble._base.numbers",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._base.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "sklearn.ensemble._base._BaseHeterogeneousEnsemble": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "abc.ABCMeta"
   ]
  },
  "type": "class"
 },
 "sklearn.ensemble._base._BaseHeterogeneousEnsemble.__init__": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._base._BaseHeterogeneousEnsemble._validate_estimators": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "ValueError",
    "any",
    "is_classifier",
    "is_estimator_type",
    "is_estimator_type.__name__",
    "len",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._base._BaseHeterogeneousEnsemble.get_params": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._base._BaseHeterogeneousEnsemble.named_estimators": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "Bunch",
    "dict",
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._base._BaseHeterogeneousEnsemble.set_params": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._base._fit_single_estimator": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "TypeError",
    "_print_elapsed_time",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._base._partition_estimators": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "int",
    "joblib.effective_n_jobs",
    "min",
    "numpy.cumsum",
    "numpy.full"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._base._set_random_states": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "check_random_state",
    "numpy.iinfo",
    "numpy.int32",
    "sorted"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._base.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "sklearn.ensemble._base.effective_n_jobs": {
  "data": {
   "shadows": "joblib.effective_n_jobs"
  },
  "type": "import"
 },
 "sklearn.ensemble._base.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.ensemble._base.numbers": {
  "data": {
   "shadows": "numbers"
  },
  "type": "import"
 },
 "sklearn.ensemble._forest": {
  "data": {
   "symbols_in_volume": [
    "numpy.iinfo",
    "numpy.int32"
   ]
  },
  "type": "module"
 },
 "sklearn.ensemble._forest.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "sklearn.ensemble._forest.BaseForest": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "abc.ABCMeta"
   ]
  },
  "type": "class"
 },
 "sklearn.ensemble._forest.BaseForest.__init__": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "super",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._forest.BaseForest._set_oob_score": {
  "data": {
   "lineno": 408,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._forest.BaseForest._validate_X_predict": {
  "data": {
   "lineno": 417,
   "symbols_in_volume": [
    "check_is_fitted"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._forest.BaseForest._validate_y_class_weight": {
  "data": {
   "lineno": 413
  },
  "type": "function"
 },
 "sklearn.ensemble._forest.BaseForest.apply": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "_joblib_parallel_args",
    "delayed",
    "joblib.Parallel",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._forest.BaseForest.decision_path": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "_joblib_parallel_args",
    "delayed",
    "joblib.Parallel",
    "numpy.array",
    "scipy.sparse.hstack"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._forest.BaseForest.feature_importances_": {
  "data": {
   "lineno": 424,
   "symbols_in_volume": [
    "_joblib_parallel_args",
    "check_is_fitted",
    "delayed",
    "getattr",
    "joblib.Parallel",
    "numpy.float64",
    "numpy.mean",
    "numpy.sum",
    "numpy.zeros",
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._forest.BaseForest.fit": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "ValueError",
    "_check_sample_weight",
    "_joblib_parallel_args",
    "check_random_state",
    "delayed",
    "enumerate",
    "getattr",
    "hasattr",
    "joblib.Parallel",
    "len",
    "numpy.ascontiguousarray",
    "numpy.atleast_1d",
    "numpy.reshape",
    "range",
    "scipy.sparse.issparse",
    "sklearn.ensemble._forest.MAX_INT",
    "sklearn.ensemble._forest._get_n_samples_bootstrap",
    "sklearn.ensemble._forest._parallel_build_trees",
    "warnings.warn"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._forest.ExtraTreesClassifier": {
  "data": {
   "lineno": 1493,
   "symbols_in_volume": [
    "sklearn.ensemble._forest.ForestClassifier"
   ]
  },
  "type": "class"
 },
 "sklearn.ensemble._forest.ExtraTreesClassifier.__init__": {
  "data": {
   "lineno": 1757,
   "symbols_in_volume": [
    "ExtraTreeClassifier",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._forest.ExtraTreesRegressor": {
  "data": {
   "lineno": 1807,
   "symbols_in_volume": [
    "sklearn.ensemble._forest.ForestRegressor"
   ]
  },
  "type": "class"
 },
 "sklearn.ensemble._forest.ExtraTreesRegressor.__init__": {
  "data": {
   "lineno": 2039,
   "symbols_in_volume": [
    "ExtraTreeRegressor",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._forest.ForestClassifier": {
  "data": {
   "lineno": 476,
   "symbols_in_volume": [
    "abc.ABCMeta",
    "sklearn.ensemble._forest.BaseForest"
   ]
  },
  "type": "class"
 },
 "sklearn.ensemble._forest.ForestClassifier.__init__": {
  "data": {
   "lineno": 484,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "super",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._forest.ForestClassifier._set_oob_score": {
  "data": {
   "lineno": 510,
   "symbols_in_volume": [
    "check_array",
    "numpy.argmax",
    "numpy.mean",
    "numpy.newaxis",
    "numpy.zeros",
    "range",
    "sklearn.ensemble._forest._generate_unsampled_indices",
    "sklearn.ensemble._forest._get_n_samples_bootstrap",
    "warnings.warn"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._forest.ForestClassifier._validate_y_class_weight": {
  "data": {
   "lineno": 558,
   "symbols_in_volume": [
    "ValueError",
    "check_classification_targets",
    "compute_sample_weight",
    "int",
    "isinstance",
    "numpy.copy",
    "numpy.unique",
    "numpy.zeros",
    "range",
    "str",
    "warnings.warn"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._forest.ForestClassifier.predict": {
  "data": {
   "lineno": 609,
   "symbols_in_volume": [
    "numpy.argmax",
    "numpy.empty",
    "range"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._forest.ForestClassifier.predict_log_proba": {
  "data": {
   "lineno": 697,
   "symbols_in_volume": [
    "numpy.log",
    "range"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._forest.ForestClassifier.predict_proba": {
  "data": {
   "lineno": 649,
   "symbols_in_volume": [
    "_joblib_parallel_args",
    "_partition_estimators",
    "check_is_fitted",
    "delayed",
    "joblib.Parallel",
    "len",
    "numpy.atleast_1d",
    "numpy.float64",
    "numpy.zeros",
    "sklearn.ensemble._forest._accumulate_prediction",
    "sklearn.ensemble._forest.threading"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._forest.ForestRegressor": {
  "data": {
   "lineno": 731,
   "symbols_in_volume": [
    "abc.ABCMeta",
    "sklearn.ensemble._forest.BaseForest"
   ]
  },
  "type": "class"
 },
 "sklearn.ensemble._forest.ForestRegressor.__init__": {
  "data": {
   "lineno": 739,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "super",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._forest.ForestRegressor._compute_partial_dependence_recursion": {
  "data": {
   "lineno": 853,
   "symbols_in_volume": [
    "len",
    "numpy.asarray",
    "numpy.float64",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._forest.ForestRegressor._set_oob_score": {
  "data": {
   "lineno": 806,
   "symbols_in_volume": [
    "check_array",
    "numpy.newaxis",
    "numpy.zeros",
    "r2_score",
    "range",
    "sklearn.ensemble._forest._generate_unsampled_indices",
    "sklearn.ensemble._forest._get_n_samples_bootstrap",
    "warnings.warn"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._forest.ForestRegressor.predict": {
  "data": {
   "lineno": 763,
   "symbols_in_volume": [
    "_joblib_parallel_args",
    "_partition_estimators",
    "check_is_fitted",
    "delayed",
    "joblib.Parallel",
    "len",
    "numpy.float64",
    "numpy.zeros",
    "sklearn.ensemble._forest._accumulate_prediction",
    "sklearn.ensemble._forest.threading"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._forest.MAX_INT": {
  "data": {
   "lineno": 75
  },
  "type": "constant"
 },
 "sklearn.ensemble._forest.Parallel": {
  "data": {
   "shadows": "joblib.Parallel"
  },
  "type": "import"
 },
 "sklearn.ensemble._forest.RandomForestClassifier": {
  "data": {
   "lineno": 884,
   "symbols_in_volume": [
    "sklearn.ensemble._forest.ForestClassifier"
   ]
  },
  "type": "class"
 },
 "sklearn.ensemble._forest.RandomForestClassifier.__init__": {
  "data": {
   "lineno": 1153,
   "symbols_in_volume": [
    "DecisionTreeClassifier",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._forest.RandomForestRegressor": {
  "data": {
   "lineno": 1203,
   "symbols_in_volume": [
    "sklearn.ensemble._forest.ForestRegressor"
   ]
  },
  "type": "class"
 },
 "sklearn.ensemble._forest.RandomForestRegressor.__init__": {
  "data": {
   "lineno": 1445,
   "symbols_in_volume": [
    "DecisionTreeRegressor",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._forest.RandomTreesEmbedding": {
  "data": {
   "lineno": 2087,
   "symbols_in_volume": [
    "sklearn.ensemble._forest.BaseForest"
   ]
  },
  "type": "class"
 },
 "sklearn.ensemble._forest.RandomTreesEmbedding.__init__": {
  "data": {
   "lineno": 2253,
   "symbols_in_volume": [
    "ExtraTreeRegressor",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._forest.RandomTreesEmbedding._set_oob_score": {
  "data": {
   "lineno": 2293,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._forest.RandomTreesEmbedding.fit": {
  "data": {
   "lineno": 2296
  },
  "type": "function"
 },
 "sklearn.ensemble._forest.RandomTreesEmbedding.fit_transform": {
  "data": {
   "lineno": 2325,
   "symbols_in_volume": [
    "OneHotEncoder",
    "check_array",
    "check_random_state",
    "scipy.sparse.issparse",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._forest.RandomTreesEmbedding.transform": {
  "data": {
   "lineno": 2363,
   "symbols_in_volume": [
    "check_is_fitted"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._forest.__all__": {
  "data": {
   "lineno": 69
  },
  "type": "constant"
 },
 "sklearn.ensemble._forest._accumulate_prediction": {
  "data": {
   "lineno": 460,
   "symbols_in_volume": [
    "len",
    "predict",
    "range"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._forest._generate_sample_indices": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._forest._generate_unsampled_indices": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.bincount",
    "sklearn.ensemble._forest._generate_sample_indices"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._forest._get_n_samples_bootstrap": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "isinstance",
    "round",
    "sklearn.ensemble._forest.numbers",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._forest._parallel_build_trees": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "DeprecationWarning",
    "compute_sample_weight",
    "numpy.bincount",
    "numpy.float64",
    "numpy.ones",
    "print",
    "sklearn.ensemble._forest._generate_sample_indices",
    "warnings.catch_warnings",
    "warnings.simplefilter"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._forest.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "sklearn.ensemble._forest.catch_warnings": {
  "data": {
   "shadows": "warnings.catch_warnings"
  },
  "type": "import"
 },
 "sklearn.ensemble._forest.issparse": {
  "data": {
   "shadows": "scipy.sparse.issparse"
  },
  "type": "import"
 },
 "sklearn.ensemble._forest.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.ensemble._forest.numbers": {
  "data": {
   "shadows": "numbers"
  },
  "type": "import"
 },
 "sklearn.ensemble._forest.simplefilter": {
  "data": {
   "shadows": "warnings.simplefilter"
  },
  "type": "import"
 },
 "sklearn.ensemble._forest.sparse_hstack": {
  "data": {
   "shadows": "scipy.sparse.hstack"
  },
  "type": "import"
 },
 "sklearn.ensemble._forest.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "sklearn.ensemble._forest.warn": {
  "data": {
   "shadows": "warnings.warn"
  },
  "type": "import"
 },
 "sklearn.ensemble._gb": {
  "data": {},
  "type": "module"
 },
 "sklearn.ensemble._gb.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "sklearn.ensemble._gb.BaseGradientBoosting": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "abc.ABCMeta"
   ]
  },
  "type": "class"
 },
 "sklearn.ensemble._gb.BaseGradientBoosting.__init__": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._gb.BaseGradientBoosting._check_initialized": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "check_is_fitted"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._gb.BaseGradientBoosting._check_params": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "is_classifier",
    "isinstance",
    "len",
    "loss_class",
    "max",
    "numpy.log2",
    "numpy.sqrt",
    "sklearn.ensemble._gb.numbers",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._gb.BaseGradientBoosting._clear_state": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "hasattr",
    "numpy.empty",
    "object"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._gb.BaseGradientBoosting._compute_partial_dependence_recursion": {
  "data": {
   "lineno": 694,
   "symbols_in_volume": [
    "UserWarning",
    "numpy.asarray",
    "numpy.float64",
    "numpy.zeros",
    "range",
    "sklearn.ensemble._gb.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._gb.BaseGradientBoosting._fit_stage": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "DecisionTreeRegressor",
    "bool",
    "numpy.array",
    "numpy.float64",
    "range"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._gb.BaseGradientBoosting._fit_stages": {
  "data": {
   "lineno": 518,
   "symbols_in_volume": [
    "_random_sample_mask",
    "bool",
    "int",
    "len",
    "locals",
    "loss_",
    "max",
    "monitor",
    "next",
    "numpy.any",
    "numpy.full",
    "numpy.inf",
    "numpy.ones",
    "range",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.issparse",
    "sklearn.ensemble._gb.VerboseReporter"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._gb.BaseGradientBoosting._init_state": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": [
    "numpy.empty",
    "numpy.float64",
    "numpy.zeros",
    "object"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._gb.BaseGradientBoosting._is_initialized": {
  "data": {
   "lineno": 354,
   "symbols_in_volume": [
    "getattr",
    "len"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._gb.BaseGradientBoosting._make_estimator": {
  "data": {
   "lineno": 603,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._gb.BaseGradientBoosting._raw_predict": {
  "data": {
   "lineno": 622,
   "symbols_in_volume": [
    "predict_stages"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._gb.BaseGradientBoosting._raw_predict_init": {
  "data": {
   "lineno": 607,
   "symbols_in_volume": [
    "ValueError",
    "numpy.float64",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._gb.BaseGradientBoosting._resize_state": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": [
    "ValueError",
    "hasattr",
    "numpy.float64",
    "numpy.resize",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._gb.BaseGradientBoosting._staged_raw_predict": {
  "data": {
   "lineno": 629,
   "symbols_in_volume": [
    "check_array",
    "predict_stage",
    "range"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._gb.BaseGradientBoosting._validate_y": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._gb.BaseGradientBoosting._warn_mae_for_criterion": {
  "data": {
   "lineno": 361,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._gb.BaseGradientBoosting.apply": {
  "data": {
   "lineno": 732,
   "symbols_in_volume": [
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._gb.BaseGradientBoosting.feature_importances_": {
  "data": {
   "lineno": 657,
   "symbols_in_volume": [
    "numpy.float64",
    "numpy.mean",
    "numpy.sum",
    "numpy.zeros",
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._gb.BaseGradientBoosting.fit": {
  "data": {
   "lineno": 365,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "_check_sample_weight",
    "check_array",
    "check_random_state",
    "column_or_1d",
    "hasattr",
    "is_classifier",
    "numpy.float64",
    "numpy.unique",
    "numpy.zeros",
    "str",
    "train_test_split"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._gb.GradientBoostingClassifier": {
  "data": {
   "lineno": 768,
   "symbols_in_volume": [
    "sklearn.ensemble._gb.BaseGradientBoosting"
   ]
  },
  "type": "class"
 },
 "sklearn.ensemble._gb.GradientBoostingClassifier.__init__": {
  "data": {
   "lineno": 1077,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._gb.GradientBoostingClassifier._validate_y": {
  "data": {
   "lineno": 1102,
   "symbols_in_volume": [
    "ValueError",
    "check_classification_targets",
    "len",
    "numpy.bincount",
    "numpy.count_nonzero",
    "numpy.unique"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._gb.GradientBoostingClassifier._warn_mae_for_criterion": {
  "data": {
   "lineno": 1116,
   "symbols_in_volume": [
    "FutureWarning",
    "sklearn.ensemble._gb.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._gb.GradientBoostingClassifier.decision_function": {
  "data": {
   "lineno": 1124,
   "symbols_in_volume": [
    "check_array"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._gb.GradientBoostingClassifier.predict": {
  "data": {
   "lineno": 1173
  },
  "type": "function"
 },
 "sklearn.ensemble._gb.GradientBoostingClassifier.predict_log_proba": {
  "data": {
   "lineno": 1246,
   "symbols_in_volume": [
    "numpy.log"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._gb.GradientBoostingClassifier.predict_proba": {
  "data": {
   "lineno": 1216,
   "symbols_in_volume": [
    "AttributeError"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._gb.GradientBoostingClassifier.staged_decision_function": {
  "data": {
   "lineno": 1149
  },
  "type": "function"
 },
 "sklearn.ensemble._gb.GradientBoostingClassifier.staged_predict": {
  "data": {
   "lineno": 1193
  },
  "type": "function"
 },
 "sklearn.ensemble._gb.GradientBoostingClassifier.staged_predict_proba": {
  "data": {
   "lineno": 1270,
   "symbols_in_volume": [
    "AttributeError"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._gb.GradientBoostingRegressor": {
  "data": {
   "lineno": 1298,
   "symbols_in_volume": [
    "sklearn.ensemble._gb.BaseGradientBoosting"
   ]
  },
  "type": "class"
 },
 "sklearn.ensemble._gb.GradientBoostingRegressor.__init__": {
  "data": {
   "lineno": 1599,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._gb.GradientBoostingRegressor._validate_y": {
  "data": {
   "lineno": 1623
  },
  "type": "function"
 },
 "sklearn.ensemble._gb.GradientBoostingRegressor._warn_mae_for_criterion": {
  "data": {
   "lineno": 1628,
   "symbols_in_volume": [
    "FutureWarning",
    "sklearn.ensemble._gb.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._gb.GradientBoostingRegressor.apply": {
  "data": {
   "lineno": 1675,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._gb.GradientBoostingRegressor.n_classes_": {
  "data": {
   "lineno": 1700,
   "symbols_in_volume": [
    "AttributeError",
    "check_is_fitted",
    "deprecated",
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._gb.GradientBoostingRegressor.predict": {
  "data": {
   "lineno": 1635,
   "symbols_in_volume": [
    "check_array"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._gb.GradientBoostingRegressor.staged_predict": {
  "data": {
   "lineno": 1654
  },
  "type": "function"
 },
 "sklearn.ensemble._gb.VerboseReporter": {
  "data": {
   "lineno": 60
  },
  "type": "class"
 },
 "sklearn.ensemble._gb.VerboseReporter.__init__": {
  "data": {
   "lineno": 70
  },
  "type": "function"
 },
 "sklearn.ensemble._gb.VerboseReporter.init": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "len",
    "print",
    "time.time",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._gb.VerboseReporter.update": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "float",
    "print",
    "time.time"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._gb.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "sklearn.ensemble._gb.csc_matrix": {
  "data": {
   "shadows": "scipy.sparse.csc_matrix"
  },
  "type": "import"
 },
 "sklearn.ensemble._gb.csr_matrix": {
  "data": {
   "shadows": "scipy.sparse.csr_matrix"
  },
  "type": "import"
 },
 "sklearn.ensemble._gb.issparse": {
  "data": {
   "shadows": "scipy.sparse.issparse"
  },
  "type": "import"
 },
 "sklearn.ensemble._gb.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.ensemble._gb.numbers": {
  "data": {
   "shadows": "numbers"
  },
  "type": "import"
 },
 "sklearn.ensemble._gb.time": {
  "data": {
   "shadows": "time.time"
  },
  "type": "import"
 },
 "sklearn.ensemble._gb.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.ensemble._gb_losses": {
  "data": {
   "symbols_in_volume": [
    "sklearn.ensemble._gb_losses.ExponentialLoss",
    "sklearn.ensemble._gb_losses.HuberLossFunction",
    "sklearn.ensemble._gb_losses.LeastAbsoluteError",
    "sklearn.ensemble._gb_losses.LeastSquaresError",
    "sklearn.ensemble._gb_losses.QuantileLossFunction"
   ]
  },
  "type": "module"
 },
 "sklearn.ensemble._gb_losses.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "sklearn.ensemble._gb_losses.BinomialDeviance": {
  "data": {
   "lineno": 548,
   "symbols_in_volume": [
    "sklearn.ensemble._gb_losses.ClassificationLossFunction"
   ]
  },
  "type": "class"
 },
 "sklearn.ensemble._gb_losses.BinomialDeviance.__call__": {
  "data": {
   "lineno": 571,
   "symbols_in_volume": [
    "numpy.logaddexp",
    "numpy.mean",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._gb_losses.BinomialDeviance.__init__": {
  "data": {
   "lineno": 559,
   "symbols_in_volume": [
    "ValueError",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._gb_losses.BinomialDeviance._raw_prediction_to_decision": {
  "data": {
   "lineno": 641,
   "symbols_in_volume": [
    "numpy.argmax"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._gb_losses.BinomialDeviance._raw_prediction_to_proba": {
  "data": {
   "lineno": 635,
   "symbols_in_volume": [
    "numpy.float64",
    "numpy.ones",
    "scipy.special.expit"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._gb_losses.BinomialDeviance._update_terminal_region": {
  "data": {
   "lineno": 610,
   "symbols_in_volume": [
    "abs",
    "numpy.sum",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._gb_losses.BinomialDeviance.get_init_raw_predictions": {
  "data": {
   "lineno": 645,
   "symbols_in_volume": [
    "numpy.clip",
    "numpy.finfo",
    "numpy.float32",
    "numpy.float64",
    "numpy.log"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._gb_losses.BinomialDeviance.init_estimator": {
  "data": {
   "lineno": 566,
   "symbols_in_volume": [
    "DummyClassifier"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._gb_losses.BinomialDeviance.negative_gradient": {
  "data": {
   "lineno": 596,
   "symbols_in_volume": [
    "scipy.special.expit"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._gb_losses.ClassificationLossFunction": {
  "data": {
   "lineno": 498,
   "symbols_in_volume": [
    "abc.ABCMeta",
    "sklearn.ensemble._gb_losses.LossFunction"
   ]
  },
  "type": "class"
 },
 "sklearn.ensemble._gb_losses.ClassificationLossFunction._raw_prediction_to_decision": {
  "data": {
   "lineno": 516,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._gb_losses.ClassificationLossFunction._raw_prediction_to_proba": {
  "data": {
   "lineno": 501
  },
  "type": "function"
 },
 "sklearn.ensemble._gb_losses.ClassificationLossFunction.check_init_estimator": {
  "data": {
   "lineno": 532,
   "symbols_in_volume": [
    "ValueError",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._gb_losses.ExponentialLoss": {
  "data": {
   "lineno": 759,
   "symbols_in_volume": [
    "sklearn.ensemble._gb_losses.ClassificationLossFunction"
   ]
  },
  "type": "class"
 },
 "sklearn.ensemble._gb_losses.ExponentialLoss.__call__": {
  "data": {
   "lineno": 783,
   "symbols_in_volume": [
    "numpy.exp",
    "numpy.mean",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._gb_losses.ExponentialLoss.__init__": {
  "data": {
   "lineno": 773,
   "symbols_in_volume": [
    "ValueError",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._gb_losses.ExponentialLoss._raw_prediction_to_decision": {
  "data": {
   "lineno": 844,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._gb_losses.ExponentialLoss._raw_prediction_to_proba": {
  "data": {
   "lineno": 838,
   "symbols_in_volume": [
    "numpy.float64",
    "numpy.ones",
    "scipy.special.expit"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._gb_losses.ExponentialLoss._update_terminal_region": {
  "data": {
   "lineno": 820,
   "symbols_in_volume": [
    "abs",
    "numpy.exp",
    "numpy.sum",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._gb_losses.ExponentialLoss.get_init_raw_predictions": {
  "data": {
   "lineno": 847,
   "symbols_in_volume": [
    "numpy.clip",
    "numpy.finfo",
    "numpy.float32",
    "numpy.float64",
    "numpy.log"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._gb_losses.ExponentialLoss.init_estimator": {
  "data": {
   "lineno": 780,
   "symbols_in_volume": [
    "DummyClassifier"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._gb_losses.ExponentialLoss.negative_gradient": {
  "data": {
   "lineno": 805,
   "symbols_in_volume": [
    "numpy.exp"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._gb_losses.HuberLossFunction": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": [
    "sklearn.ensemble._gb_losses.RegressionLossFunction"
   ]
  },
  "type": "class"
 },
 "sklearn.ensemble._gb_losses.HuberLossFunction.__call__": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": [
    "_weighted_percentile",
    "numpy.abs",
    "numpy.percentile",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._gb_losses.HuberLossFunction.__init__": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._gb_losses.HuberLossFunction._update_terminal_region": {
  "data": {
   "lineno": 408,
   "symbols_in_volume": [
    "_weighted_percentile",
    "numpy.abs",
    "numpy.mean",
    "numpy.minimum",
    "numpy.sign",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._gb_losses.HuberLossFunction.init_estimator": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": [
    "DummyRegressor"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._gb_losses.HuberLossFunction.negative_gradient": {
  "data": {
   "lineno": 378,
   "symbols_in_volume": [
    "_weighted_percentile",
    "numpy.abs",
    "numpy.float64",
    "numpy.percentile",
    "numpy.sign",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._gb_losses.LOSS_FUNCTIONS": {
  "data": {
   "lineno": 859
  },
  "type": "constant"
 },
 "sklearn.ensemble._gb_losses.LeastAbsoluteError": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "sklearn.ensemble._gb_losses.RegressionLossFunction"
   ]
  },
  "type": "class"
 },
 "sklearn.ensemble._gb_losses.LeastAbsoluteError.__call__": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._gb_losses.LeastAbsoluteError._update_terminal_region": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "_weighted_percentile",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._gb_losses.LeastAbsoluteError.init_estimator": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "DummyRegressor"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._gb_losses.LeastAbsoluteError.negative_gradient": {
  "data": {
   "lineno": 287
  },
  "type": "function"
 },
 "sklearn.ensemble._gb_losses.LeastSquaresError": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "sklearn.ensemble._gb_losses.RegressionLossFunction"
   ]
  },
  "type": "class"
 },
 "sklearn.ensemble._gb_losses.LeastSquaresError.__call__": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "numpy.mean",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._gb_losses.LeastSquaresError._update_terminal_region": {
  "data": {
   "lineno": 251
  },
  "type": "function"
 },
 "sklearn.ensemble._gb_losses.LeastSquaresError.init_estimator": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "DummyRegressor"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._gb_losses.LeastSquaresError.negative_gradient": {
  "data": {
   "lineno": 204
  },
  "type": "function"
 },
 "sklearn.ensemble._gb_losses.LeastSquaresError.update_terminal_regions": {
  "data": {
   "lineno": 218
  },
  "type": "function"
 },
 "sklearn.ensemble._gb_losses.LossFunction": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "abc.ABCMeta"
   ]
  },
  "type": "class"
 },
 "sklearn.ensemble._gb_losses.LossFunction.__call__": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._gb_losses.LossFunction.__init__": {
  "data": {
   "lineno": 35
  },
  "type": "function"
 },
 "sklearn.ensemble._gb_losses.LossFunction._update_terminal_region": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._gb_losses.LossFunction.get_init_raw_predictions": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._gb_losses.LossFunction.init_estimator": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._gb_losses.LossFunction.negative_gradient": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._gb_losses.LossFunction.update_terminal_regions": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._gb_losses.MultinomialDeviance": {
  "data": {
   "lineno": 655,
   "symbols_in_volume": [
    "sklearn.ensemble._gb_losses.ClassificationLossFunction"
   ]
  },
  "type": "class"
 },
 "sklearn.ensemble._gb_losses.MultinomialDeviance.__call__": {
  "data": {
   "lineno": 678,
   "symbols_in_volume": [
    "numpy.average",
    "numpy.float64",
    "numpy.zeros",
    "range",
    "scipy.special.logsumexp"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._gb_losses.MultinomialDeviance.__init__": {
  "data": {
   "lineno": 669,
   "symbols_in_volume": [
    "ValueError",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._gb_losses.MultinomialDeviance._raw_prediction_to_decision": {
  "data": {
   "lineno": 747,
   "symbols_in_volume": [
    "numpy.argmax"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._gb_losses.MultinomialDeviance._raw_prediction_to_proba": {
  "data": {
   "lineno": 742,
   "symbols_in_volume": [
    "numpy.exp",
    "numpy.nan_to_num",
    "numpy.newaxis",
    "scipy.special.logsumexp"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._gb_losses.MultinomialDeviance._update_terminal_region": {
  "data": {
   "lineno": 722,
   "symbols_in_volume": [
    "abs",
    "numpy.sum",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._gb_losses.MultinomialDeviance.get_init_raw_predictions": {
  "data": {
   "lineno": 751,
   "symbols_in_volume": [
    "numpy.clip",
    "numpy.finfo",
    "numpy.float32",
    "numpy.float64",
    "numpy.log"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._gb_losses.MultinomialDeviance.init_estimator": {
  "data": {
   "lineno": 675,
   "symbols_in_volume": [
    "DummyClassifier"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._gb_losses.MultinomialDeviance.negative_gradient": {
  "data": {
   "lineno": 704,
   "symbols_in_volume": [
    "numpy.exp",
    "numpy.nan_to_num",
    "scipy.special.logsumexp"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._gb_losses.QuantileLossFunction": {
  "data": {
   "lineno": 422,
   "symbols_in_volume": [
    "sklearn.ensemble._gb_losses.RegressionLossFunction"
   ]
  },
  "type": "class"
 },
 "sklearn.ensemble._gb_losses.QuantileLossFunction.__call__": {
  "data": {
   "lineno": 441,
   "symbols_in_volume": [
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._gb_losses.QuantileLossFunction.__init__": {
  "data": {
   "lineno": 433,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._gb_losses.QuantileLossFunction._update_terminal_region": {
  "data": {
   "lineno": 487,
   "symbols_in_volume": [
    "_weighted_percentile",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._gb_losses.QuantileLossFunction.init_estimator": {
  "data": {
   "lineno": 438,
   "symbols_in_volume": [
    "DummyRegressor"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._gb_losses.QuantileLossFunction.negative_gradient": {
  "data": {
   "lineno": 470
  },
  "type": "function"
 },
 "sklearn.ensemble._gb_losses.RegressionLossFunction": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "abc.ABCMeta",
    "sklearn.ensemble._gb_losses.LossFunction"
   ]
  },
  "type": "class"
 },
 "sklearn.ensemble._gb_losses.RegressionLossFunction.__init__": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._gb_losses.RegressionLossFunction.check_init_estimator": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "ValueError",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._gb_losses.RegressionLossFunction.get_init_raw_predictions": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "numpy.float64"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._gb_losses.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "sklearn.ensemble._gb_losses.expit": {
  "data": {
   "shadows": "scipy.special.expit"
  },
  "type": "import"
 },
 "sklearn.ensemble._gb_losses.logsumexp": {
  "data": {
   "shadows": "scipy.special.logsumexp"
  },
  "type": "import"
 },
 "sklearn.ensemble._gb_losses.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.ensemble._hist_gradient_boosting": {
  "data": {},
  "type": "module"
 },
 "sklearn.ensemble._hist_gradient_boosting.binning": {
  "data": {},
  "type": "module"
 },
 "sklearn.ensemble._hist_gradient_boosting.binning._BinMapper": {
  "data": {
   "lineno": 69
  },
  "type": "class"
 },
 "sklearn.ensemble._hist_gradient_boosting.binning._BinMapper.__init__": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.binning._BinMapper.fit": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "ValueError",
    "check_array",
    "check_random_state",
    "numpy.array",
    "numpy.asarray",
    "numpy.uint32",
    "numpy.uint8",
    "numpy.zeros",
    "range",
    "sklearn.ensemble._hist_gradient_boosting.binning._find_binning_thresholds"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.binning._BinMapper.make_known_categories_bitsets": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "enumerate",
    "numpy.arange",
    "numpy.flatnonzero",
    "numpy.uint32",
    "numpy.zeros",
    "set_bitset_memoryview"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.binning._BinMapper.transform": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "ValueError",
    "_map_to_bins",
    "check_array",
    "check_is_fitted",
    "numpy.zeros_like"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.binning._find_binning_thresholds": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "len",
    "numpy.ascontiguousarray",
    "numpy.clip",
    "numpy.isnan",
    "numpy.linspace",
    "numpy.percentile",
    "numpy.unique"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.binning.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.ensemble._hist_gradient_boosting.gradient_boosting": {
  "data": {},
  "type": "module"
 },
 "sklearn.ensemble._hist_gradient_boosting.gradient_boosting.ABC": {
  "data": {
   "shadows": "abc.ABC"
  },
  "type": "import"
 },
 "sklearn.ensemble._hist_gradient_boosting.gradient_boosting.BaseHistGradientBoosting": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "abc.ABC"
   ]
  },
  "type": "class"
 },
 "sklearn.ensemble._hist_gradient_boosting.gradient_boosting.BaseHistGradientBoosting.__init__": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.gradient_boosting.BaseHistGradientBoosting._bin_data": {
  "data": {
   "lineno": 656,
   "symbols_in_volume": [
    "numpy.ascontiguousarray",
    "print",
    "timeit.default_timer"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.gradient_boosting.BaseHistGradientBoosting._check_categories": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "numpy.any",
    "numpy.asarray",
    "numpy.isnan",
    "numpy.max",
    "numpy.min",
    "numpy.unique",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.gradient_boosting.BaseHistGradientBoosting._check_early_stopping_loss": {
  "data": {
   "lineno": 612
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.gradient_boosting.BaseHistGradientBoosting._check_early_stopping_scorer": {
  "data": {
   "lineno": 576,
   "symbols_in_volume": [
    "int",
    "is_classifier"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.gradient_boosting.BaseHistGradientBoosting._clear_state": {
  "data": {
   "lineno": 543,
   "symbols_in_volume": [
    "delattr",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.gradient_boosting.BaseHistGradientBoosting._compute_partial_dependence_recursion": {
  "data": {
   "lineno": 815,
   "symbols_in_volume": [
    "NotImplementedError",
    "enumerate",
    "getattr",
    "numpy.asarray",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.gradient_boosting.BaseHistGradientBoosting._encode_y": {
  "data": {
   "lineno": 860,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.gradient_boosting.BaseHistGradientBoosting._get_loss": {
  "data": {
   "lineno": 856,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.gradient_boosting.BaseHistGradientBoosting._get_small_trainset": {
  "data": {
   "lineno": 549,
   "symbols_in_volume": [
    "is_classifier",
    "numpy.arange",
    "numpy.ascontiguousarray",
    "resample"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.gradient_boosting.BaseHistGradientBoosting._is_fitted": {
  "data": {
   "lineno": 540,
   "symbols_in_volume": [
    "getattr",
    "len"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.gradient_boosting.BaseHistGradientBoosting._more_tags": {
  "data": {
   "lineno": 853
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.gradient_boosting.BaseHistGradientBoosting._predict_iterations": {
  "data": {
   "lineno": 755,
   "symbols_in_volume": [
    "enumerate",
    "functools.partial",
    "predict"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.gradient_boosting.BaseHistGradientBoosting._print_iteration_stats": {
  "data": {
   "lineno": 682,
   "symbols_in_volume": [
    "int",
    "len",
    "max",
    "print",
    "sum",
    "timeit.default_timer"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.gradient_boosting.BaseHistGradientBoosting._raw_predict": {
  "data": {
   "lineno": 722,
   "symbols_in_volume": [
    "ValueError",
    "check_array",
    "check_is_fitted",
    "getattr",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.gradient_boosting.BaseHistGradientBoosting._should_stop": {
  "data": {
   "lineno": 636,
   "symbols_in_volume": [
    "any",
    "len"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.gradient_boosting.BaseHistGradientBoosting._staged_raw_predict": {
  "data": {
   "lineno": 775,
   "symbols_in_volume": [
    "ValueError",
    "check_array",
    "check_is_fitted",
    "len",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.gradient_boosting.BaseHistGradientBoosting._validate_parameters": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "ValueError",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.gradient_boosting.BaseHistGradientBoosting.fit": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "TreeGrower",
    "ValueError",
    "_BinMapper",
    "_check_sample_weight",
    "_update_raw_predictions",
    "check_consistent_length",
    "check_random_state",
    "check_scoring",
    "enumerate",
    "hasattr",
    "isinstance",
    "len",
    "numpy.asarray",
    "numpy.float64",
    "numpy.iinfo",
    "numpy.uint32",
    "numpy.uint8",
    "numpy.zeros",
    "print",
    "range",
    "str",
    "sum",
    "timeit.default_timer",
    "train_test_split"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.gradient_boosting.BaseHistGradientBoosting.n_iter_": {
  "data": {
   "lineno": 864,
   "symbols_in_volume": [
    "check_is_fitted",
    "len",
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.gradient_boosting.HistGradientBoostingClassifier": {
  "data": {
   "lineno": 1126,
   "symbols_in_volume": [
    "sklearn.ensemble._hist_gradient_boosting.gradient_boosting.BaseHistGradientBoosting"
   ]
  },
  "type": "class"
 },
 "sklearn.ensemble._hist_gradient_boosting.gradient_boosting.HistGradientBoostingClassifier.__init__": {
  "data": {
   "lineno": 1306,
   "symbols_in_volume": [
    "sklearn.ensemble._hist_gradient_boosting.gradient_boosting.HistGradientBoostingClassifier",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.gradient_boosting.HistGradientBoostingClassifier._encode_y": {
  "data": {
   "lineno": 1447,
   "symbols_in_volume": [
    "LabelEncoder",
    "check_classification_targets"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.gradient_boosting.HistGradientBoostingClassifier._get_loss": {
  "data": {
   "lineno": 1462,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.gradient_boosting.HistGradientBoostingClassifier.decision_function": {
  "data": {
   "lineno": 1402
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.gradient_boosting.HistGradientBoostingClassifier.predict": {
  "data": {
   "lineno": 1327,
   "symbols_in_volume": [
    "numpy.argmax"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.gradient_boosting.HistGradientBoostingClassifier.predict_proba": {
  "data": {
   "lineno": 1366
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.gradient_boosting.HistGradientBoostingClassifier.staged_decision_function": {
  "data": {
   "lineno": 1423
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.gradient_boosting.HistGradientBoostingClassifier.staged_predict": {
  "data": {
   "lineno": 1344,
   "symbols_in_volume": [
    "numpy.argmax"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.gradient_boosting.HistGradientBoostingClassifier.staged_predict_proba": {
  "data": {
   "lineno": 1382
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.gradient_boosting.HistGradientBoostingRegressor": {
  "data": {
   "lineno": 870,
   "symbols_in_volume": [
    "sklearn.ensemble._hist_gradient_boosting.gradient_boosting.BaseHistGradientBoosting"
   ]
  },
  "type": "class"
 },
 "sklearn.ensemble._hist_gradient_boosting.gradient_boosting.HistGradientBoostingRegressor.__init__": {
  "data": {
   "lineno": 1050,
   "symbols_in_volume": [
    "sklearn.ensemble._hist_gradient_boosting.gradient_boosting.HistGradientBoostingRegressor",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.gradient_boosting.HistGradientBoostingRegressor._encode_y": {
  "data": {
   "lineno": 1111,
   "symbols_in_volume": [
    "ValueError",
    "numpy.all",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.gradient_boosting.HistGradientBoostingRegressor._get_loss": {
  "data": {
   "lineno": 1122
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.gradient_boosting.HistGradientBoostingRegressor.predict": {
  "data": {
   "lineno": 1072,
   "symbols_in_volume": [
    "check_is_fitted"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.gradient_boosting.HistGradientBoostingRegressor.staged_predict": {
  "data": {
   "lineno": 1090
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.gradient_boosting.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "sklearn.ensemble._hist_gradient_boosting.gradient_boosting.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.ensemble._hist_gradient_boosting.gradient_boosting.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "sklearn.ensemble._hist_gradient_boosting.gradient_boosting.time": {
  "data": {
   "shadows": "timeit.default_timer"
  },
  "type": "import"
 },
 "sklearn.ensemble._hist_gradient_boosting.grower": {
  "data": {
   "symbols_in_volume": [
    "numpy.finfo"
   ]
  },
  "type": "module"
 },
 "sklearn.ensemble._hist_gradient_boosting.grower.EPS": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "sklearn.ensemble._hist_gradient_boosting.grower.TreeGrower": {
  "data": {
   "lineno": 122
  },
  "type": "class"
 },
 "sklearn.ensemble._hist_gradient_boosting.grower.TreeGrower.__init__": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "HistogramBuilder",
    "Splitter",
    "ValueError",
    "bool",
    "isinstance",
    "numpy.any",
    "numpy.array",
    "numpy.asarray",
    "numpy.full",
    "numpy.int8",
    "numpy.logical_and",
    "numpy.uint32",
    "numpy.uint8",
    "numpy.zeros",
    "sklearn.ensemble._hist_gradient_boosting.grower.numbers"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.grower.TreeGrower._apply_shrinkage": {
  "data": {
   "lineno": 310
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.grower.TreeGrower._compute_best_split_and_push": {
  "data": {
   "lineno": 354,
   "symbols_in_volume": [
    "heapq.heappush"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.grower.TreeGrower._finalize_leaf": {
  "data": {
   "lineno": 514
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.grower.TreeGrower._finalize_splittable_nodes": {
  "data": {
   "lineno": 520,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.grower.TreeGrower._intilialize_root": {
  "data": {
   "lineno": 322,
   "symbols_in_volume": [
    "sklearn.ensemble._hist_gradient_boosting.grower.TreeNode",
    "sum_parallel"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.grower.TreeGrower._validate_parameters": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "NotImplementedError",
    "ValueError",
    "numpy.uint8"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.grower.TreeGrower.grow": {
  "data": {
   "lineno": 303
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.grower.TreeGrower.make_predictor": {
  "data": {
   "lineno": 529,
   "symbols_in_volume": [
    "TreePredictor",
    "numpy.zeros",
    "sklearn.ensemble._hist_gradient_boosting.grower._fill_predictor_arrays"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.grower.TreeGrower.split_next": {
  "data": {
   "lineno": 373,
   "symbols_in_volume": [
    "heapq.heappop",
    "len",
    "sklearn.ensemble._hist_gradient_boosting.grower.TreeNode",
    "timeit.default_timer"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.grower.TreeNode": {
  "data": {
   "lineno": 27
  },
  "type": "class"
 },
 "sklearn.ensemble._hist_gradient_boosting.grower.TreeNode.__init__": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "float"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.grower.TreeNode.__lt__": {
  "data": {
   "lineno": 105
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.grower.TreeNode.set_children_bounds": {
  "data": {
   "lineno": 96
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.grower._fill_predictor_arrays": {
  "data": {
   "lineno": 558,
   "symbols_in_volume": [
    "numpy.inf",
    "set_raw_bitset_from_binned_bitset"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.grower.heappop": {
  "data": {
   "shadows": "heapq.heappop"
  },
  "type": "import"
 },
 "sklearn.ensemble._hist_gradient_boosting.grower.heappush": {
  "data": {
   "shadows": "heapq.heappush"
  },
  "type": "import"
 },
 "sklearn.ensemble._hist_gradient_boosting.grower.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.ensemble._hist_gradient_boosting.grower.numbers": {
  "data": {
   "shadows": "numbers"
  },
  "type": "import"
 },
 "sklearn.ensemble._hist_gradient_boosting.grower.time": {
  "data": {
   "shadows": "timeit.default_timer"
  },
  "type": "import"
 },
 "sklearn.ensemble._hist_gradient_boosting.loss": {
  "data": {
   "symbols_in_volume": [
    "sklearn.ensemble._hist_gradient_boosting.loss.BinaryCrossEntropy",
    "sklearn.ensemble._hist_gradient_boosting.loss.CategoricalCrossEntropy",
    "sklearn.ensemble._hist_gradient_boosting.loss.LeastAbsoluteDeviation",
    "sklearn.ensemble._hist_gradient_boosting.loss.LeastSquares",
    "sklearn.ensemble._hist_gradient_boosting.loss.Poisson"
   ]
  },
  "type": "module"
 },
 "sklearn.ensemble._hist_gradient_boosting.loss.ABC": {
  "data": {
   "shadows": "abc.ABC"
  },
  "type": "import"
 },
 "sklearn.ensemble._hist_gradient_boosting.loss.BaseLoss": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "abc.ABC"
   ]
  },
  "type": "class"
 },
 "sklearn.ensemble._hist_gradient_boosting.loss.BaseLoss.__call__": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "numpy.average"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.loss.BaseLoss.__init__": {
  "data": {
   "lineno": 29
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.loss.BaseLoss.get_baseline_prediction": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.loss.BaseLoss.init_gradients_and_hessians": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "numpy.empty",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.loss.BaseLoss.pointwise_loss": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.loss.BaseLoss.update_gradients_and_hessians": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.loss.BinaryCrossEntropy": {
  "data": {
   "lineno": 317,
   "symbols_in_volume": [
    "scipy.special.expit",
    "sklearn.ensemble._hist_gradient_boosting.loss.BaseLoss",
    "staticmethod"
   ]
  },
  "type": "class"
 },
 "sklearn.ensemble._hist_gradient_boosting.loss.BinaryCrossEntropy.__init__": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.loss.BinaryCrossEntropy.get_baseline_prediction": {
  "data": {
   "lineno": 342,
   "symbols_in_volume": [
    "ValueError",
    "numpy.average",
    "numpy.clip",
    "numpy.finfo",
    "numpy.log"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.loss.BinaryCrossEntropy.pointwise_loss": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": [
    "numpy.logaddexp"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.loss.BinaryCrossEntropy.predict_proba": {
  "data": {
   "lineno": 365,
   "symbols_in_volume": [
    "numpy.empty",
    "scipy.special.expit"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.loss.BinaryCrossEntropy.update_gradients_and_hessians": {
  "data": {
   "lineno": 355,
   "symbols_in_volume": [
    "_update_gradients_hessians_binary_crossentropy"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.loss.CategoricalCrossEntropy": {
  "data": {
   "lineno": 375,
   "symbols_in_volume": [
    "sklearn.ensemble._hist_gradient_boosting.loss.BaseLoss"
   ]
  },
  "type": "class"
 },
 "sklearn.ensemble._hist_gradient_boosting.loss.CategoricalCrossEntropy.__init__": {
  "data": {
   "lineno": 383,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.loss.CategoricalCrossEntropy.get_baseline_prediction": {
  "data": {
   "lineno": 396,
   "symbols_in_volume": [
    "numpy.average",
    "numpy.clip",
    "numpy.finfo",
    "numpy.log",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.loss.CategoricalCrossEntropy.pointwise_loss": {
  "data": {
   "lineno": 386,
   "symbols_in_volume": [
    "numpy.zeros_like",
    "range",
    "scipy.special.logsumexp"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.loss.CategoricalCrossEntropy.predict_proba": {
  "data": {
   "lineno": 412,
   "symbols_in_volume": [
    "numpy.exp",
    "numpy.newaxis",
    "scipy.special.logsumexp"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.loss.CategoricalCrossEntropy.update_gradients_and_hessians": {
  "data": {
   "lineno": 407,
   "symbols_in_volume": [
    "_update_gradients_hessians_categorical_crossentropy"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.loss.LeastAbsoluteDeviation": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "sklearn.ensemble._hist_gradient_boosting.loss.BaseLoss"
   ]
  },
  "type": "class"
 },
 "sklearn.ensemble._hist_gradient_boosting.loss.LeastAbsoluteDeviation.__init__": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.loss.LeastAbsoluteDeviation.get_baseline_prediction": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "_weighted_percentile",
    "numpy.median"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.loss.LeastAbsoluteDeviation.inverse_link_function": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.loss.LeastAbsoluteDeviation.pointwise_loss": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "numpy.abs"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.loss.LeastAbsoluteDeviation.update_gradients_and_hessians": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "_update_gradients_hessians_least_absolute_deviation",
    "_update_gradients_least_absolute_deviation"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.loss.LeastAbsoluteDeviation.update_leaves_values": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "_weighted_percentile",
    "numpy.median"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.loss.LeastSquares": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "sklearn.ensemble._hist_gradient_boosting.loss.BaseLoss"
   ]
  },
  "type": "class"
 },
 "sklearn.ensemble._hist_gradient_boosting.loss.LeastSquares.__init__": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.loss.LeastSquares.get_baseline_prediction": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "numpy.average"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.loss.LeastSquares.inverse_link_function": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.loss.LeastSquares.pointwise_loss": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "numpy.power"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.loss.LeastSquares.update_gradients_and_hessians": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "_update_gradients_hessians_least_squares",
    "_update_gradients_least_squares"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.loss.Poisson": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "numpy.exp",
    "sklearn.ensemble._hist_gradient_boosting.loss.BaseLoss",
    "staticmethod"
   ]
  },
  "type": "class"
 },
 "sklearn.ensemble._hist_gradient_boosting.loss.Poisson.__init__": {
  "data": {
   "lineno": 284,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.loss.Poisson.get_baseline_prediction": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": [
    "numpy.average",
    "numpy.clip",
    "numpy.finfo",
    "numpy.log"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.loss.Poisson.pointwise_loss": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "numpy.exp",
    "scipy.special.xlogy"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.loss.Poisson.update_gradients_and_hessians": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "_update_gradients_hessians_poisson"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.loss._LOSSES": {
  "data": {
   "lineno": 420
  },
  "type": "constant"
 },
 "sklearn.ensemble._hist_gradient_boosting.loss.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "sklearn.ensemble._hist_gradient_boosting.loss.expit": {
  "data": {
   "shadows": "scipy.special.expit"
  },
  "type": "import"
 },
 "sklearn.ensemble._hist_gradient_boosting.loss.logsumexp": {
  "data": {
   "shadows": "scipy.special.logsumexp"
  },
  "type": "import"
 },
 "sklearn.ensemble._hist_gradient_boosting.loss.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.ensemble._hist_gradient_boosting.loss.xlogy": {
  "data": {
   "shadows": "scipy.special.xlogy"
  },
  "type": "import"
 },
 "sklearn.ensemble._hist_gradient_boosting.predictor": {
  "data": {},
  "type": "module"
 },
 "sklearn.ensemble._hist_gradient_boosting.predictor.TreePredictor": {
  "data": {
   "lineno": 14
  },
  "type": "class"
 },
 "sklearn.ensemble._hist_gradient_boosting.predictor.TreePredictor.__init__": {
  "data": {
   "lineno": 31
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.predictor.TreePredictor.compute_partial_dependence": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "_compute_partial_dependence"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.predictor.TreePredictor.get_max_depth": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.predictor.TreePredictor.get_n_leaf_nodes": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.predictor.TreePredictor.predict": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "_predict_from_raw_data",
    "numpy.empty"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.predictor.TreePredictor.predict_binned": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "_predict_from_binned_data",
    "numpy.empty"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.predictor.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests": {
  "data": {},
  "type": "module"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_binning": {
  "data": {
   "symbols_in_volume": [
    "int",
    "numpy.random.RandomState",
    "sklearn.ensemble._hist_gradient_boosting.common.X_DTYPE"
   ]
  },
  "type": "module"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_binning.ALMOST_INF": {
  "data": {
   "shadows": "sklearn.ensemble._hist_gradient_boosting.common.ALMOST_INF"
  },
  "type": "import"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_binning.DATA": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_binning.X_BINNED_DTYPE": {
  "data": {
   "shadows": "sklearn.ensemble._hist_gradient_boosting.common.X_BINNED_DTYPE"
  },
  "type": "import"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_binning.X_DTYPE": {
  "data": {
   "shadows": "sklearn.ensemble._hist_gradient_boosting.common.X_DTYPE"
  },
  "type": "import"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_binning._BinMapper": {
  "data": {
   "shadows": "sklearn.ensemble._hist_gradient_boosting.binning._BinMapper"
  },
  "type": "import"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_binning._find_binning_thresholds": {
  "data": {
   "shadows": "sklearn.ensemble._hist_gradient_boosting.binning._find_binning_thresholds"
  },
  "type": "import"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_binning._map_to_bins": {
  "data": {
   "shadows": "sklearn.ensemble._hist_gradient_boosting.binning._map_to_bins"
  },
  "type": "import"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_binning.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_binning.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_binning.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_binning.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_binning.test_bin_mapper_idempotence": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "numpy.testing.assert_array_equal",
    "sklearn.ensemble._hist_gradient_boosting.binning._BinMapper",
    "sklearn.ensemble._hist_gradient_boosting.tests.test_binning.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_binning.test_bin_mapper_identity_repeated_values": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "list",
    "numpy.array",
    "numpy.testing.assert_array_equal",
    "range",
    "sklearn.ensemble._hist_gradient_boosting.binning._BinMapper",
    "sklearn.ensemble._hist_gradient_boosting.tests.test_binning.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_binning.test_bin_mapper_identity_small": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.testing.assert_array_equal",
    "sklearn.ensemble._hist_gradient_boosting.binning._BinMapper",
    "sklearn.ensemble._hist_gradient_boosting.tests.test_binning.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_binning.test_bin_mapper_n_features_transform": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "ValueError",
    "numpy.repeat",
    "sklearn.ensemble._hist_gradient_boosting.binning._BinMapper",
    "sklearn.ensemble._hist_gradient_boosting.tests.test_binning.DATA",
    "sklearn.ensemble._hist_gradient_boosting.tests.test_binning.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_binning.test_bin_mapper_random_data": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "abs",
    "int",
    "len",
    "numpy.all",
    "numpy.array",
    "numpy.testing.assert_array_equal",
    "numpy.uint8",
    "range",
    "sklearn.ensemble._hist_gradient_boosting.binning._BinMapper",
    "sklearn.ensemble._hist_gradient_boosting.tests.test_binning.DATA",
    "sklearn.ensemble._hist_gradient_boosting.tests.test_binning.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_binning.test_bin_mapper_repeated_values_invariance": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "len",
    "min",
    "numpy.arange",
    "numpy.random.RandomState",
    "numpy.sort",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal",
    "numpy.unique",
    "sklearn.ensemble._hist_gradient_boosting.binning._BinMapper",
    "sklearn.ensemble._hist_gradient_boosting.tests.test_binning.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_binning.test_bin_mapper_small_random_data": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "numpy.argsort",
    "numpy.random.RandomState",
    "numpy.testing.assert_array_equal",
    "numpy.uint8",
    "numpy.unique",
    "sklearn.ensemble._hist_gradient_boosting.binning._BinMapper",
    "sklearn.ensemble._hist_gradient_boosting.tests.test_binning.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_binning.test_categorical_feature": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.isnan",
    "numpy.nan",
    "numpy.testing.assert_array_equal",
    "numpy.unique",
    "sklearn.ensemble._hist_gradient_boosting.binning._BinMapper",
    "sklearn.ensemble._hist_gradient_boosting.common.X_DTYPE",
    "sklearn.ensemble._hist_gradient_boosting.tests.test_binning.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_binning.test_categorical_parameters": {
  "data": {
   "lineno": 405,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "sklearn.ensemble._hist_gradient_boosting.binning._BinMapper",
    "sklearn.ensemble._hist_gradient_boosting.common.X_DTYPE",
    "sklearn.ensemble._hist_gradient_boosting.tests.test_binning.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_binning.test_categorical_with_numerical_features": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "numpy.array",
    "numpy.c_",
    "numpy.r_",
    "numpy.testing.assert_array_equal",
    "numpy.unique",
    "sklearn.ensemble._hist_gradient_boosting.binning._BinMapper",
    "sklearn.ensemble._hist_gradient_boosting.common.X_DTYPE",
    "sklearn.ensemble._hist_gradient_boosting.tests.test_binning.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_binning.test_find_binning_thresholds_low_n_bins": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "len",
    "range",
    "sklearn.ensemble._hist_gradient_boosting.binning._find_binning_thresholds",
    "sklearn.ensemble._hist_gradient_boosting.tests.test_binning.DATA"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_binning.test_find_binning_thresholds_random_data": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "numpy.testing.assert_allclose",
    "range",
    "sklearn.ensemble._hist_gradient_boosting.binning._find_binning_thresholds",
    "sklearn.ensemble._hist_gradient_boosting.tests.test_binning.DATA"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_binning.test_find_binning_thresholds_regular_data": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "numpy.linspace",
    "numpy.testing.assert_allclose",
    "sklearn.ensemble._hist_gradient_boosting.binning._find_binning_thresholds"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_binning.test_find_binning_thresholds_small_regular_data": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.linspace",
    "numpy.testing.assert_allclose",
    "sklearn.ensemble._hist_gradient_boosting.binning._find_binning_thresholds"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_binning.test_infinite_values": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.inf",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal",
    "sklearn.ensemble._hist_gradient_boosting.binning._BinMapper",
    "sklearn.ensemble._hist_gradient_boosting.common.ALMOST_INF"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_binning.test_invalid_n_bins": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.ensemble._hist_gradient_boosting.binning._BinMapper",
    "sklearn.ensemble._hist_gradient_boosting.tests.test_binning.DATA",
    "sklearn.ensemble._hist_gradient_boosting.tests.test_binning.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_binning.test_make_known_categories_bitsets": {
  "data": {
   "lineno": 368,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.assert_allclose",
    "numpy.uint32",
    "numpy.uint8",
    "numpy.zeros",
    "sklearn.ensemble._hist_gradient_boosting.binning._BinMapper",
    "sklearn.ensemble._hist_gradient_boosting.common.X_DTYPE"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_binning.test_map_to_bins": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "enumerate",
    "numpy.uint8",
    "numpy.zeros_like",
    "range",
    "sklearn.ensemble._hist_gradient_boosting.binning._find_binning_thresholds",
    "sklearn.ensemble._hist_gradient_boosting.binning._map_to_bins",
    "sklearn.ensemble._hist_gradient_boosting.common.X_BINNED_DTYPE",
    "sklearn.ensemble._hist_gradient_boosting.tests.test_binning.DATA",
    "sklearn.ensemble._hist_gradient_boosting.tests.test_binning.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_binning.test_missing_values_support": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "len",
    "numpy.NaN",
    "numpy.array",
    "numpy.testing.assert_array_equal",
    "range",
    "sklearn.ensemble._hist_gradient_boosting.binning._BinMapper",
    "sklearn.ensemble._hist_gradient_boosting.tests.test_binning.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_binning.test_n_bins_non_missing": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "list",
    "min",
    "numpy.all",
    "numpy.array",
    "range",
    "sklearn.ensemble._hist_gradient_boosting.binning._BinMapper",
    "sklearn.ensemble._hist_gradient_boosting.tests.test_binning.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_binning.test_subsample": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "numpy.allclose",
    "range",
    "sklearn.ensemble._hist_gradient_boosting.binning._BinMapper",
    "sklearn.ensemble._hist_gradient_boosting.tests.test_binning.DATA"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_bitset": {
  "data": {},
  "type": "module"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_bitset.X_DTYPE": {
  "data": {
   "shadows": "sklearn.ensemble._hist_gradient_boosting.common.X_DTYPE"
  },
  "type": "import"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_bitset.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_bitset.in_bitset_memoryview": {
  "data": {
   "shadows": "sklearn.ensemble._hist_gradient_boosting._bitset.in_bitset_memoryview"
  },
  "type": "import"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_bitset.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_bitset.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_bitset.set_bitset_memoryview": {
  "data": {
   "shadows": "sklearn.ensemble._hist_gradient_boosting._bitset.set_bitset_memoryview"
  },
  "type": "import"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_bitset.set_raw_bitset_from_binned_bitset": {
  "data": {
   "shadows": "sklearn.ensemble._hist_gradient_boosting._bitset.set_raw_bitset_from_binned_bitset"
  },
  "type": "import"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_bitset.test_raw_bitset_from_binned_bitset": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "enumerate",
    "numpy.asarray",
    "numpy.testing.assert_allclose",
    "numpy.uint32",
    "numpy.zeros",
    "sklearn.ensemble._hist_gradient_boosting._bitset.in_bitset_memoryview",
    "sklearn.ensemble._hist_gradient_boosting._bitset.set_bitset_memoryview",
    "sklearn.ensemble._hist_gradient_boosting._bitset.set_raw_bitset_from_binned_bitset",
    "sklearn.ensemble._hist_gradient_boosting.common.X_DTYPE",
    "sklearn.ensemble._hist_gradient_boosting.tests.test_bitset.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_bitset.test_set_get_bitset": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.assert_allclose",
    "numpy.uint32",
    "numpy.zeros",
    "range",
    "sklearn.ensemble._hist_gradient_boosting._bitset.in_bitset_memoryview",
    "sklearn.ensemble._hist_gradient_boosting._bitset.set_bitset_memoryview",
    "sklearn.ensemble._hist_gradient_boosting.tests.test_bitset.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_compare_lightgbm": {
  "data": {},
  "type": "module"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_compare_lightgbm.HistGradientBoostingClassifier": {
  "data": {
   "shadows": "sklearn.ensemble.HistGradientBoostingClassifier"
  },
  "type": "import"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_compare_lightgbm.HistGradientBoostingRegressor": {
  "data": {
   "shadows": "sklearn.ensemble.HistGradientBoostingRegressor"
  },
  "type": "import"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_compare_lightgbm._BinMapper": {
  "data": {
   "shadows": "sklearn.ensemble._hist_gradient_boosting.binning._BinMapper"
  },
  "type": "import"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_compare_lightgbm.accuracy_score": {
  "data": {
   "shadows": "sklearn.metrics.accuracy_score"
  },
  "type": "import"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_compare_lightgbm.enable_hist_gradient_boosting": {
  "data": {
   "shadows": "sklearn.experimental.enable_hist_gradient_boosting"
  },
  "type": "import"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_compare_lightgbm.get_equivalent_estimator": {
  "data": {
   "shadows": "sklearn.ensemble._hist_gradient_boosting.utils.get_equivalent_estimator"
  },
  "type": "import"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_compare_lightgbm.make_classification": {
  "data": {
   "shadows": "sklearn.datasets.make_classification"
  },
  "type": "import"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_compare_lightgbm.make_regression": {
  "data": {
   "shadows": "sklearn.datasets.make_regression"
  },
  "type": "import"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_compare_lightgbm.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_compare_lightgbm.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_compare_lightgbm.test_same_predictions_classification": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.mean",
    "numpy.random.RandomState",
    "numpy.testing.assert_almost_equal",
    "range",
    "sklearn.datasets.make_classification",
    "sklearn.ensemble.HistGradientBoostingClassifier",
    "sklearn.ensemble._hist_gradient_boosting.binning._BinMapper",
    "sklearn.ensemble._hist_gradient_boosting.tests.test_compare_lightgbm.pytest",
    "sklearn.ensemble._hist_gradient_boosting.utils.get_equivalent_estimator",
    "sklearn.metrics.accuracy_score",
    "sklearn.model_selection.train_test_split"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_compare_lightgbm.test_same_predictions_multiclass_classification": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.float32",
    "numpy.mean",
    "numpy.random.RandomState",
    "numpy.testing.assert_almost_equal",
    "range",
    "sklearn.datasets.make_classification",
    "sklearn.ensemble.HistGradientBoostingClassifier",
    "sklearn.ensemble._hist_gradient_boosting.binning._BinMapper",
    "sklearn.ensemble._hist_gradient_boosting.tests.test_compare_lightgbm.pytest",
    "sklearn.ensemble._hist_gradient_boosting.utils.get_equivalent_estimator",
    "sklearn.metrics.accuracy_score",
    "sklearn.model_selection.train_test_split"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_compare_lightgbm.test_same_predictions_regression": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "abs",
    "numpy.float32",
    "numpy.mean",
    "numpy.random.RandomState",
    "range",
    "sklearn.datasets.make_regression",
    "sklearn.ensemble.HistGradientBoostingRegressor",
    "sklearn.ensemble._hist_gradient_boosting.binning._BinMapper",
    "sklearn.ensemble._hist_gradient_boosting.tests.test_compare_lightgbm.pytest",
    "sklearn.ensemble._hist_gradient_boosting.utils.get_equivalent_estimator",
    "sklearn.model_selection.train_test_split"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_compare_lightgbm.train_test_split": {
  "data": {
   "shadows": "sklearn.model_selection.train_test_split"
  },
  "type": "import"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_gradient_boosting": {
  "data": {
   "symbols_in_volume": [
    "sklearn.datasets.make_classification",
    "sklearn.datasets.make_regression"
   ]
  },
  "type": "module"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_gradient_boosting.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_gradient_boosting.BinaryCrossEntropy": {
  "data": {
   "shadows": "sklearn.ensemble._hist_gradient_boosting.loss.BinaryCrossEntropy"
  },
  "type": "import"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_gradient_boosting.DummyRegressor": {
  "data": {
   "shadows": "sklearn.dummy.DummyRegressor"
  },
  "type": "import"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_gradient_boosting.HistGradientBoostingClassifier": {
  "data": {
   "shadows": "sklearn.ensemble.HistGradientBoostingClassifier"
  },
  "type": "import"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_gradient_boosting.HistGradientBoostingRegressor": {
  "data": {
   "shadows": "sklearn.ensemble.HistGradientBoostingRegressor"
  },
  "type": "import"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_gradient_boosting.KBinsDiscretizer": {
  "data": {
   "shadows": "sklearn.preprocessing.KBinsDiscretizer"
  },
  "type": "import"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_gradient_boosting.LeastSquares": {
  "data": {
   "shadows": "sklearn.ensemble._hist_gradient_boosting.loss.LeastSquares"
  },
  "type": "import"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_gradient_boosting.MinMaxScaler": {
  "data": {
   "shadows": "sklearn.preprocessing.MinMaxScaler"
  },
  "type": "import"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_gradient_boosting.NotFittedError": {
  "data": {
   "shadows": "sklearn.exceptions.NotFittedError"
  },
  "type": "import"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_gradient_boosting.OneHotEncoder": {
  "data": {
   "shadows": "sklearn.preprocessing.OneHotEncoder"
  },
  "type": "import"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_gradient_boosting.TransformerMixin": {
  "data": {
   "shadows": "sklearn.base.TransformerMixin"
  },
  "type": "import"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_gradient_boosting.TreeGrower": {
  "data": {
   "shadows": "sklearn.ensemble._hist_gradient_boosting.grower.TreeGrower"
  },
  "type": "import"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_gradient_boosting._BinMapper": {
  "data": {
   "shadows": "sklearn.ensemble._hist_gradient_boosting.binning._BinMapper"
  },
  "type": "import"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_gradient_boosting._LOSSES": {
  "data": {
   "shadows": "sklearn.ensemble._hist_gradient_boosting.loss._LOSSES"
  },
  "type": "import"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_gradient_boosting._make_dumb_dataset": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "numpy.random.RandomState"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_gradient_boosting.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_gradient_boosting.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_gradient_boosting.clone": {
  "data": {
   "shadows": "sklearn.base.clone"
  },
  "type": "import"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_gradient_boosting.cross_val_score": {
  "data": {
   "shadows": "sklearn.model_selection.cross_val_score"
  },
  "type": "import"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_gradient_boosting.enable_hist_gradient_boosting": {
  "data": {
   "shadows": "sklearn.experimental.enable_hist_gradient_boosting"
  },
  "type": "import"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_gradient_boosting.is_regressor": {
  "data": {
   "shadows": "sklearn.base.is_regressor"
  },
  "type": "import"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_gradient_boosting.make_classification": {
  "data": {
   "shadows": "sklearn.datasets.make_classification"
  },
  "type": "import"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_gradient_boosting.make_column_transformer": {
  "data": {
   "shadows": "sklearn.compose.make_column_transformer"
  },
  "type": "import"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_gradient_boosting.make_low_rank_matrix": {
  "data": {
   "shadows": "sklearn.datasets.make_low_rank_matrix"
  },
  "type": "import"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_gradient_boosting.make_pipeline": {
  "data": {
   "shadows": "sklearn.pipeline.make_pipeline"
  },
  "type": "import"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_gradient_boosting.make_regression": {
  "data": {
   "shadows": "sklearn.datasets.make_regression"
  },
  "type": "import"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_gradient_boosting.mean_poisson_deviance": {
  "data": {
   "shadows": "sklearn.metrics.mean_poisson_deviance"
  },
  "type": "import"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_gradient_boosting.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_gradient_boosting.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_gradient_boosting.shuffle": {
  "data": {
   "shadows": "sklearn.utils.shuffle"
  },
  "type": "import"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_gradient_boosting.test_binning_train_validation_are_separated": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "int",
    "numpy.all",
    "numpy.random.RandomState",
    "sklearn.ensemble.HistGradientBoostingClassifier",
    "sklearn.ensemble._hist_gradient_boosting.binning._BinMapper"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_gradient_boosting.test_categorical_bad_encoding_errors": {
  "data": {
   "lineno": 939,
   "symbols_in_volume": [
    "Est",
    "ValueError",
    "numpy.arange",
    "numpy.array",
    "numpy.nan",
    "sklearn.ensemble.HistGradientBoostingClassifier",
    "sklearn.ensemble.HistGradientBoostingRegressor",
    "sklearn.ensemble._hist_gradient_boosting.tests.test_gradient_boosting.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_gradient_boosting.test_categorical_encoding_strategies": {
  "data": {
   "lineno": 838,
   "symbols_in_volume": [
    "numpy.c_",
    "numpy.random.RandomState",
    "numpy.testing.assert_array_equal",
    "numpy.zeros",
    "sklearn.compose.make_column_transformer",
    "sklearn.ensemble.HistGradientBoostingClassifier",
    "sklearn.model_selection.cross_val_score",
    "sklearn.preprocessing.OneHotEncoder"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_gradient_boosting.test_categorical_spec_errors": {
  "data": {
   "lineno": 893,
   "symbols_in_volume": [
    "Est",
    "ValueError",
    "numpy.random.RandomState",
    "sklearn.datasets.make_classification",
    "sklearn.ensemble.HistGradientBoostingClassifier",
    "sklearn.ensemble.HistGradientBoostingRegressor",
    "sklearn.ensemble._hist_gradient_boosting.tests.test_gradient_boosting.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_gradient_boosting.test_categorical_spec_no_categories": {
  "data": {
   "lineno": 924,
   "symbols_in_volume": [
    "Est",
    "numpy.arange",
    "numpy.asarray",
    "sklearn.ensemble.HistGradientBoostingClassifier",
    "sklearn.ensemble.HistGradientBoostingRegressor",
    "sklearn.ensemble._hist_gradient_boosting.tests.test_gradient_boosting.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_gradient_boosting.test_consistent_lengths": {
  "data": {
   "lineno": 491,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "numpy.inf",
    "sklearn.ensemble.HistGradientBoostingRegressor",
    "sklearn.ensemble._hist_gradient_boosting.tests.test_gradient_boosting.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_gradient_boosting.test_crossentropy_binary_problem": {
  "data": {
   "lineno": 522,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.ensemble.HistGradientBoostingClassifier",
    "sklearn.ensemble._hist_gradient_boosting.tests.test_gradient_boosting.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_gradient_boosting.test_custom_loss": {
  "data": {
   "lineno": 736,
   "symbols_in_volume": [
    "Est",
    "sklearn.ensemble.HistGradientBoostingClassifier",
    "sklearn.ensemble.HistGradientBoostingRegressor",
    "sklearn.ensemble._hist_gradient_boosting.loss.BinaryCrossEntropy",
    "sklearn.ensemble._hist_gradient_boosting.loss.LeastSquares",
    "sklearn.ensemble._hist_gradient_boosting.tests.test_gradient_boosting.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_gradient_boosting.test_early_stopping_classification": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "sklearn.datasets.make_classification",
    "sklearn.ensemble.HistGradientBoostingClassifier",
    "sklearn.ensemble._hist_gradient_boosting.tests.test_gradient_boosting.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_gradient_boosting.test_early_stopping_default": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "GradientBoosting",
    "sklearn.ensemble.HistGradientBoostingClassifier",
    "sklearn.ensemble.HistGradientBoostingRegressor",
    "sklearn.ensemble._hist_gradient_boosting.tests.test_gradient_boosting._make_dumb_dataset",
    "sklearn.ensemble._hist_gradient_boosting.tests.test_gradient_boosting.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_gradient_boosting.test_early_stopping_on_test_set_with_warm_start": {
  "data": {
   "lineno": 700,
   "symbols_in_volume": [
    "sklearn.datasets.make_classification",
    "sklearn.ensemble.HistGradientBoostingClassifier"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_gradient_boosting.test_early_stopping_regression": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "sklearn.datasets.make_regression",
    "sklearn.ensemble.HistGradientBoostingRegressor",
    "sklearn.ensemble._hist_gradient_boosting.tests.test_gradient_boosting.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_gradient_boosting.test_infinite_values": {
  "data": {
   "lineno": 480,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.inf",
    "numpy.testing.assert_allclose",
    "sklearn.ensemble.HistGradientBoostingRegressor"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_gradient_boosting.test_infinite_values_missing_values": {
  "data": {
   "lineno": 505,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.inf",
    "numpy.isnan",
    "numpy.nan",
    "sklearn.ensemble.HistGradientBoostingClassifier"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_gradient_boosting.test_init_parameters_validation": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "GradientBoosting",
    "ValueError",
    "sklearn.ensemble.HistGradientBoostingClassifier",
    "sklearn.ensemble.HistGradientBoostingRegressor",
    "sklearn.ensemble._hist_gradient_boosting.tests.test_gradient_boosting.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_gradient_boosting.test_invalid_classification_loss": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "ValueError",
    "numpy.arange",
    "numpy.zeros",
    "sklearn.ensemble.HistGradientBoostingClassifier",
    "sklearn.ensemble._hist_gradient_boosting.tests.test_gradient_boosting.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_gradient_boosting.test_least_absolute_deviation": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "sklearn.datasets.make_regression",
    "sklearn.ensemble.HistGradientBoostingRegressor"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_gradient_boosting.test_max_depth_max_leaf_nodes": {
  "data": {
   "lineno": 686,
   "symbols_in_volume": [
    "sklearn.datasets.make_classification",
    "sklearn.ensemble.HistGradientBoostingClassifier"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_gradient_boosting.test_missing_values_minmax_imputation": {
  "data": {
   "lineno": 373,
   "symbols_in_volume": [
    "MinMaxImputer",
    "int",
    "make_missing_value_data",
    "numpy.testing.assert_allclose",
    "sklearn.base.clone",
    "sklearn.ensemble.HistGradientBoostingRegressor",
    "sklearn.ensemble._hist_gradient_boosting.tests.test_gradient_boosting.pytest",
    "sklearn.pipeline.make_pipeline"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_gradient_boosting.test_missing_values_minmax_imputation.MinMaxImputer": {
  "data": {
   "lineno": 396,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator",
    "sklearn.base.TransformerMixin"
   ]
  },
  "type": "class"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_gradient_boosting.test_missing_values_minmax_imputation.MinMaxImputer.fit": {
  "data": {
   "lineno": 398,
   "symbols_in_volume": [
    "sklearn.preprocessing.MinMaxScaler"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_gradient_boosting.test_missing_values_minmax_imputation.MinMaxImputer.transform": {
  "data": {
   "lineno": 404,
   "symbols_in_volume": [
    "numpy.concatenate",
    "numpy.isnan",
    "range"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_gradient_boosting.test_missing_values_minmax_imputation.make_missing_value_data": {
  "data": {
   "lineno": 414,
   "symbols_in_volume": [
    "any",
    "int",
    "numpy.isnan",
    "numpy.nan",
    "numpy.percentile",
    "numpy.random.RandomState",
    "range",
    "sklearn.datasets.make_regression",
    "sklearn.model_selection.train_test_split",
    "sklearn.preprocessing.KBinsDiscretizer"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_gradient_boosting.test_missing_values_resilience": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "bool",
    "numpy.nan",
    "numpy.random.RandomState",
    "sklearn.datasets.make_classification",
    "sklearn.datasets.make_regression",
    "sklearn.ensemble.HistGradientBoostingClassifier",
    "sklearn.ensemble.HistGradientBoostingRegressor",
    "sklearn.ensemble._hist_gradient_boosting.tests.test_gradient_boosting.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_gradient_boosting.test_missing_values_trivial": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "bool",
    "numpy.nan",
    "numpy.random.RandomState",
    "sklearn.ensemble.HistGradientBoostingClassifier",
    "sklearn.ensemble._hist_gradient_boosting.tests.test_gradient_boosting.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_gradient_boosting.test_poisson": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "numpy.clip",
    "numpy.exp",
    "numpy.max",
    "numpy.random.RandomState",
    "sklearn.datasets.make_low_rank_matrix",
    "sklearn.dummy.DummyRegressor",
    "sklearn.ensemble.HistGradientBoostingRegressor",
    "sklearn.metrics.mean_poisson_deviance",
    "sklearn.model_selection.train_test_split"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_gradient_boosting.test_poisson_y_positive": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.zeros",
    "sklearn.ensemble.HistGradientBoostingRegressor",
    "sklearn.ensemble._hist_gradient_boosting.tests.test_gradient_boosting.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_gradient_boosting.test_sample_weight_effect": {
  "data": {
   "lineno": 590,
   "symbols_in_volume": [
    "Klass",
    "numpy.allclose",
    "numpy.ones",
    "numpy.r_",
    "sklearn.base.clone",
    "sklearn.datasets.make_classification",
    "sklearn.datasets.make_regression",
    "sklearn.ensemble.HistGradientBoostingClassifier",
    "sklearn.ensemble.HistGradientBoostingRegressor",
    "sklearn.ensemble._hist_gradient_boosting.tests.test_gradient_boosting.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_gradient_boosting.test_should_stop": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "sklearn.ensemble.HistGradientBoostingClassifier",
    "sklearn.ensemble._hist_gradient_boosting.tests.test_gradient_boosting.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_gradient_boosting.test_single_node_trees": {
  "data": {
   "lineno": 714,
   "symbols_in_volume": [
    "Est",
    "all",
    "len",
    "numpy.testing.assert_allclose",
    "sklearn.datasets.make_classification",
    "sklearn.ensemble.HistGradientBoostingClassifier",
    "sklearn.ensemble.HistGradientBoostingRegressor",
    "sklearn.ensemble._hist_gradient_boosting.tests.test_gradient_boosting.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_gradient_boosting.test_small_trainset": {
  "data": {
   "lineno": 343,
   "symbols_in_volume": [
    "int",
    "numpy.concatenate",
    "numpy.random.RandomState",
    "numpy.unique",
    "sklearn.ensemble.HistGradientBoostingClassifier",
    "sklearn.ensemble._hist_gradient_boosting.tests.test_gradient_boosting.pytest",
    "sklearn.utils.shuffle",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_gradient_boosting.test_staged_predict": {
  "data": {
   "lineno": 755,
   "symbols_in_volume": [
    "HistGradientBoosting",
    "enumerate",
    "getattr",
    "len",
    "list",
    "next",
    "numpy.testing.assert_allclose",
    "sklearn.base.is_regressor",
    "sklearn.ensemble.HistGradientBoostingClassifier",
    "sklearn.ensemble.HistGradientBoostingRegressor",
    "sklearn.ensemble._hist_gradient_boosting.tests.test_gradient_boosting.pytest",
    "sklearn.exceptions.NotFittedError",
    "sklearn.model_selection.train_test_split",
    "staged_method"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_gradient_boosting.test_string_target_early_stopping": {
  "data": {
   "lineno": 533,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.random.RandomState",
    "object",
    "sklearn.ensemble.HistGradientBoostingClassifier",
    "sklearn.ensemble._hist_gradient_boosting.tests.test_gradient_boosting.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_gradient_boosting.test_sum_hessians_are_sample_weight": {
  "data": {
   "lineno": 641,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "numpy.zeros",
    "range",
    "sklearn.datasets.make_regression",
    "sklearn.ensemble._hist_gradient_boosting.binning._BinMapper",
    "sklearn.ensemble._hist_gradient_boosting.grower.TreeGrower",
    "sklearn.ensemble._hist_gradient_boosting.loss._LOSSES",
    "sklearn.ensemble._hist_gradient_boosting.tests.test_gradient_boosting.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_gradient_boosting.test_uint8_predict": {
  "data": {
   "lineno": 966,
   "symbols_in_volume": [
    "Est",
    "numpy.random.RandomState",
    "numpy.uint8",
    "sklearn.ensemble.HistGradientBoostingClassifier",
    "sklearn.ensemble.HistGradientBoostingRegressor",
    "sklearn.ensemble._hist_gradient_boosting.tests.test_gradient_boosting.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_gradient_boosting.test_unknown_categories_nan": {
  "data": {
   "lineno": 800,
   "symbols_in_volume": [
    "Est",
    "bool",
    "float",
    "len",
    "numpy.c_",
    "numpy.nan",
    "numpy.random.RandomState",
    "numpy.testing.assert_array_equal",
    "numpy.unique",
    "numpy.zeros",
    "sklearn.ensemble.HistGradientBoostingClassifier",
    "sklearn.ensemble.HistGradientBoostingRegressor",
    "sklearn.ensemble._hist_gradient_boosting.tests.test_gradient_boosting.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_gradient_boosting.test_zero_division_hessians": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": [
    "sklearn.datasets.make_classification",
    "sklearn.ensemble.HistGradientBoostingClassifier",
    "sklearn.ensemble._hist_gradient_boosting.tests.test_gradient_boosting.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_gradient_boosting.test_zero_sample_weights_classification": {
  "data": {
   "lineno": 560,
   "symbols_in_volume": [
    "numpy.testing.assert_array_equal",
    "sklearn.ensemble.HistGradientBoostingClassifier"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_gradient_boosting.test_zero_sample_weights_regression": {
  "data": {
   "lineno": 544,
   "symbols_in_volume": [
    "sklearn.ensemble.HistGradientBoostingRegressor"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_gradient_boosting.train_test_split": {
  "data": {
   "shadows": "sklearn.model_selection.train_test_split"
  },
  "type": "import"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_grower": {
  "data": {},
  "type": "module"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_grower.G_H_DTYPE": {
  "data": {
   "shadows": "sklearn.ensemble._hist_gradient_boosting.common.G_H_DTYPE"
  },
  "type": "import"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_grower.OneHotEncoder": {
  "data": {
   "shadows": "sklearn.preprocessing.OneHotEncoder"
  },
  "type": "import"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_grower.TreeGrower": {
  "data": {
   "shadows": "sklearn.ensemble._hist_gradient_boosting.grower.TreeGrower"
  },
  "type": "import"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_grower.X_BINNED_DTYPE": {
  "data": {
   "shadows": "sklearn.ensemble._hist_gradient_boosting.common.X_BINNED_DTYPE"
  },
  "type": "import"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_grower.X_BITSET_INNER_DTYPE": {
  "data": {
   "shadows": "sklearn.ensemble._hist_gradient_boosting.common.X_BITSET_INNER_DTYPE"
  },
  "type": "import"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_grower.X_DTYPE": {
  "data": {
   "shadows": "sklearn.ensemble._hist_gradient_boosting.common.X_DTYPE"
  },
  "type": "import"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_grower.Y_DTYPE": {
  "data": {
   "shadows": "sklearn.ensemble._hist_gradient_boosting.common.Y_DTYPE"
  },
  "type": "import"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_grower._BinMapper": {
  "data": {
   "shadows": "sklearn.ensemble._hist_gradient_boosting.binning._BinMapper"
  },
  "type": "import"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_grower._check_children_consistency": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "len",
    "set"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_grower._make_training_data": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.asfortranarray",
    "numpy.ones",
    "numpy.random.RandomState",
    "sklearn.ensemble._hist_gradient_boosting.common.G_H_DTYPE",
    "sklearn.ensemble._hist_gradient_boosting.common.X_BINNED_DTYPE",
    "sklearn.ensemble._hist_gradient_boosting.common.Y_DTYPE",
    "true_decision_function"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_grower._make_training_data.true_decision_function": {
  "data": {
   "lineno": 28
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_grower.approx": {
  "data": {
   "shadows": "pytest.approx"
  },
  "type": "import"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_grower.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_grower.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_grower.assert_is_stump": {
  "data": {
   "lineno": 271
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_grower.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_grower.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_grower.test_grow_tree": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "len",
    "pytest.approx",
    "sklearn.ensemble._hist_gradient_boosting.grower.TreeGrower",
    "sklearn.ensemble._hist_gradient_boosting.tests.test_grower._check_children_consistency",
    "sklearn.ensemble._hist_gradient_boosting.tests.test_grower._make_training_data",
    "sklearn.ensemble._hist_gradient_boosting.tests.test_grower.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_grower.test_grow_tree_categories": {
  "data": {
   "lineno": 420,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.asarray",
    "numpy.asfortranarray",
    "numpy.nan",
    "numpy.ones",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal",
    "numpy.uint32",
    "numpy.uint8",
    "numpy.zeros",
    "sklearn.ensemble._hist_gradient_boosting.common.G_H_DTYPE",
    "sklearn.ensemble._hist_gradient_boosting.common.X_BINNED_DTYPE",
    "sklearn.ensemble._hist_gradient_boosting.common.X_DTYPE",
    "sklearn.ensemble._hist_gradient_boosting.grower.TreeGrower"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_grower.test_init_parameters_validation": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.ensemble._hist_gradient_boosting.grower.TreeGrower",
    "sklearn.ensemble._hist_gradient_boosting.tests.test_grower._make_training_data",
    "sklearn.ensemble._hist_gradient_boosting.tests.test_grower.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_grower.test_input_validation": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "NotImplementedError",
    "ValueError",
    "numpy.ascontiguousarray",
    "numpy.float32",
    "sklearn.ensemble._hist_gradient_boosting.grower.TreeGrower",
    "sklearn.ensemble._hist_gradient_boosting.tests.test_grower._make_training_data",
    "sklearn.ensemble._hist_gradient_boosting.tests.test_grower.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_grower.test_max_depth": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "max",
    "numpy.ones",
    "numpy.random.RandomState",
    "sklearn.ensemble._hist_gradient_boosting.binning._BinMapper",
    "sklearn.ensemble._hist_gradient_boosting.common.G_H_DTYPE",
    "sklearn.ensemble._hist_gradient_boosting.grower.TreeGrower",
    "sklearn.ensemble._hist_gradient_boosting.tests.test_grower.assert_is_stump",
    "sklearn.ensemble._hist_gradient_boosting.tests.test_grower.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_grower.test_min_samples_leaf": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "numpy.ones",
    "numpy.random.RandomState",
    "sklearn.ensemble._hist_gradient_boosting.binning._BinMapper",
    "sklearn.ensemble._hist_gradient_boosting.common.G_H_DTYPE",
    "sklearn.ensemble._hist_gradient_boosting.grower.TreeGrower",
    "sklearn.ensemble._hist_gradient_boosting.tests.test_grower.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_grower.test_min_samples_leaf_root": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "len",
    "numpy.ones",
    "numpy.random.RandomState",
    "sklearn.ensemble._hist_gradient_boosting.binning._BinMapper",
    "sklearn.ensemble._hist_gradient_boosting.common.G_H_DTYPE",
    "sklearn.ensemble._hist_gradient_boosting.grower.TreeGrower",
    "sklearn.ensemble._hist_gradient_boosting.tests.test_grower.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_grower.test_missing_value_predict_only": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.asfortranarray",
    "numpy.full",
    "numpy.nan",
    "numpy.ones",
    "numpy.random.RandomState",
    "numpy.uint32",
    "numpy.uint8",
    "numpy.zeros",
    "sklearn.ensemble._hist_gradient_boosting.common.G_H_DTYPE",
    "sklearn.ensemble._hist_gradient_boosting.common.X_BITSET_INNER_DTYPE",
    "sklearn.ensemble._hist_gradient_boosting.grower.TreeGrower"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_grower.test_ohe_equivalence": {
  "data": {
   "lineno": 479,
   "symbols_in_volume": [
    "numpy.asfortranarray",
    "numpy.ones",
    "numpy.random.RandomState",
    "numpy.testing.assert_allclose",
    "numpy.uint8",
    "numpy.zeros",
    "sklearn.ensemble._hist_gradient_boosting.common.G_H_DTYPE",
    "sklearn.ensemble._hist_gradient_boosting.grower.TreeGrower",
    "sklearn.ensemble._hist_gradient_boosting.tests.test_grower.pytest",
    "sklearn.preprocessing.OneHotEncoder"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_grower.test_predictor_from_grower": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "numpy.allclose",
    "numpy.array",
    "numpy.uint8",
    "numpy.zeros",
    "sklearn.ensemble._hist_gradient_boosting.grower.TreeGrower",
    "sklearn.ensemble._hist_gradient_boosting.tests.test_grower._make_training_data"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_grower.test_split_on_nan_with_infinite_values": {
  "data": {
   "lineno": 376,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.inf",
    "numpy.nan",
    "numpy.ones",
    "numpy.testing.assert_allclose",
    "sklearn.ensemble._hist_gradient_boosting.binning._BinMapper",
    "sklearn.ensemble._hist_gradient_boosting.common.G_H_DTYPE",
    "sklearn.ensemble._hist_gradient_boosting.grower.TreeGrower"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_histogram": {
  "data": {},
  "type": "module"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_histogram.G_H_DTYPE": {
  "data": {
   "shadows": "sklearn.ensemble._hist_gradient_boosting.common.G_H_DTYPE"
  },
  "type": "import"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_histogram.HISTOGRAM_DTYPE": {
  "data": {
   "shadows": "sklearn.ensemble._hist_gradient_boosting.common.HISTOGRAM_DTYPE"
  },
  "type": "import"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_histogram.X_BINNED_DTYPE": {
  "data": {
   "shadows": "sklearn.ensemble._hist_gradient_boosting.common.X_BINNED_DTYPE"
  },
  "type": "import"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_histogram._build_histogram": {
  "data": {
   "shadows": "sklearn.ensemble._hist_gradient_boosting.histogram._build_histogram"
  },
  "type": "import"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_histogram._build_histogram_naive": {
  "data": {
   "shadows": "sklearn.ensemble._hist_gradient_boosting.histogram._build_histogram_naive"
  },
  "type": "import"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_histogram._build_histogram_no_hessian": {
  "data": {
   "shadows": "sklearn.ensemble._hist_gradient_boosting.histogram._build_histogram_no_hessian"
  },
  "type": "import"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_histogram._build_histogram_root": {
  "data": {
   "shadows": "sklearn.ensemble._hist_gradient_boosting.histogram._build_histogram_root"
  },
  "type": "import"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_histogram._build_histogram_root_no_hessian": {
  "data": {
   "shadows": "sklearn.ensemble._hist_gradient_boosting.histogram._build_histogram_root_no_hessian"
  },
  "type": "import"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_histogram._subtract_histograms": {
  "data": {
   "shadows": "sklearn.ensemble._hist_gradient_boosting.histogram._subtract_histograms"
  },
  "type": "import"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_histogram.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_histogram.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_histogram.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_histogram.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_histogram.test_build_histogram": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "build_func",
    "numpy.array",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal",
    "numpy.uint32",
    "numpy.zeros",
    "sklearn.ensemble._hist_gradient_boosting.common.G_H_DTYPE",
    "sklearn.ensemble._hist_gradient_boosting.common.HISTOGRAM_DTYPE",
    "sklearn.ensemble._hist_gradient_boosting.common.X_BINNED_DTYPE",
    "sklearn.ensemble._hist_gradient_boosting.histogram._build_histogram",
    "sklearn.ensemble._hist_gradient_boosting.histogram._build_histogram_naive",
    "sklearn.ensemble._hist_gradient_boosting.tests.test_histogram.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_histogram.test_hist_subtraction": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "bool",
    "numpy.arange",
    "numpy.ones",
    "numpy.random.RandomState",
    "numpy.testing.assert_allclose",
    "numpy.uint32",
    "numpy.uint8",
    "numpy.zeros",
    "sklearn.ensemble._hist_gradient_boosting.common.G_H_DTYPE",
    "sklearn.ensemble._hist_gradient_boosting.common.HISTOGRAM_DTYPE",
    "sklearn.ensemble._hist_gradient_boosting.histogram._build_histogram",
    "sklearn.ensemble._hist_gradient_boosting.histogram._build_histogram_no_hessian",
    "sklearn.ensemble._hist_gradient_boosting.histogram._subtract_histograms",
    "sklearn.ensemble._hist_gradient_boosting.tests.test_histogram.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_histogram.test_histogram_sample_order_independence": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.random.RandomState",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal",
    "numpy.uint32",
    "numpy.zeros",
    "sklearn.ensemble._hist_gradient_boosting.common.G_H_DTYPE",
    "sklearn.ensemble._hist_gradient_boosting.common.HISTOGRAM_DTYPE",
    "sklearn.ensemble._hist_gradient_boosting.common.X_BINNED_DTYPE",
    "sklearn.ensemble._hist_gradient_boosting.histogram._build_histogram",
    "sklearn.ensemble._hist_gradient_boosting.histogram._build_histogram_no_hessian"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_histogram.test_unrolled_equivalent_to_naive": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.ones",
    "numpy.random.RandomState",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal",
    "numpy.uint32",
    "numpy.uint8",
    "numpy.zeros",
    "sklearn.ensemble._hist_gradient_boosting.common.G_H_DTYPE",
    "sklearn.ensemble._hist_gradient_boosting.common.HISTOGRAM_DTYPE",
    "sklearn.ensemble._hist_gradient_boosting.histogram._build_histogram",
    "sklearn.ensemble._hist_gradient_boosting.histogram._build_histogram_naive",
    "sklearn.ensemble._hist_gradient_boosting.histogram._build_histogram_no_hessian",
    "sklearn.ensemble._hist_gradient_boosting.histogram._build_histogram_root",
    "sklearn.ensemble._hist_gradient_boosting.histogram._build_histogram_root_no_hessian",
    "sklearn.ensemble._hist_gradient_boosting.tests.test_histogram.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_loss": {
  "data": {},
  "type": "module"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_loss.G_H_DTYPE": {
  "data": {
   "shadows": "sklearn.ensemble._hist_gradient_boosting.common.G_H_DTYPE"
  },
  "type": "import"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_loss.Y_DTYPE": {
  "data": {
   "shadows": "sklearn.ensemble._hist_gradient_boosting.common.Y_DTYPE"
  },
  "type": "import"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_loss._LOSSES": {
  "data": {
   "shadows": "sklearn.ensemble._hist_gradient_boosting.loss._LOSSES"
  },
  "type": "import"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_loss.assert_all_finite": {
  "data": {
   "shadows": "sklearn.utils.assert_all_finite"
  },
  "type": "import"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_loss.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_loss.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_loss.get_derivatives_helper": {
  "data": {
   "lineno": 16
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_loss.get_derivatives_helper.get_gradients": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "numpy.empty_like",
    "sklearn.ensemble._hist_gradient_boosting.common.G_H_DTYPE"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_loss.get_derivatives_helper.get_hessians": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "numpy.empty_like",
    "numpy.full_like",
    "sklearn.ensemble._hist_gradient_boosting.common.G_H_DTYPE"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_loss.logit": {
  "data": {
   "shadows": "scipy.special.logit"
  },
  "type": "import"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_loss.newton": {
  "data": {
   "shadows": "scipy.optimize.newton"
  },
  "type": "import"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_loss.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_loss.parse_version": {
  "data": {
   "shadows": "sklearn.utils.fixes.parse_version"
  },
  "type": "import"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_loss.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_loss.skip_if_32bit": {
  "data": {
   "shadows": "sklearn.utils._testing.skip_if_32bit"
  },
  "type": "import"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_loss.sp_version": {
  "data": {
   "shadows": "sklearn.utils.fixes.sp_version"
  },
  "type": "import"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_loss.test_baseline_binary_crossentropy": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "numpy.allclose",
    "numpy.float64",
    "numpy.log",
    "numpy.ones",
    "numpy.random.RandomState",
    "numpy.zeros",
    "sklearn.ensemble._hist_gradient_boosting.loss._LOSSES",
    "sklearn.utils.assert_all_finite",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_loss.test_baseline_categorical_crossentropy": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "numpy.allclose",
    "numpy.float32",
    "numpy.float64",
    "numpy.log",
    "numpy.ones",
    "numpy.random.RandomState",
    "numpy.zeros",
    "range",
    "sklearn.ensemble._hist_gradient_boosting.loss._LOSSES",
    "sklearn.utils.assert_all_finite"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_loss.test_baseline_least_absolute_deviation": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "numpy.allclose",
    "numpy.median",
    "numpy.random.RandomState",
    "sklearn.ensemble._hist_gradient_boosting.loss._LOSSES",
    "sklearn.ensemble._hist_gradient_boosting.tests.test_loss.pytest",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_loss.test_baseline_least_squares": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "numpy.allclose",
    "numpy.random.RandomState",
    "numpy.testing.assert_almost_equal",
    "sklearn.ensemble._hist_gradient_boosting.loss._LOSSES",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_loss.test_baseline_poisson": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "numpy.float64",
    "numpy.isscalar",
    "numpy.log",
    "numpy.random.RandomState",
    "numpy.testing.assert_almost_equal",
    "sklearn.ensemble._hist_gradient_boosting.loss._LOSSES",
    "sklearn.utils.assert_all_finite"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_loss.test_derivatives": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "func",
    "get_gradients",
    "numpy.array",
    "numpy.testing.assert_allclose",
    "scipy.optimize.newton",
    "sklearn.ensemble._hist_gradient_boosting.common.Y_DTYPE",
    "sklearn.ensemble._hist_gradient_boosting.loss._LOSSES",
    "sklearn.ensemble._hist_gradient_boosting.tests.test_loss.get_derivatives_helper",
    "sklearn.ensemble._hist_gradient_boosting.tests.test_loss.pytest",
    "sklearn.utils._testing.skip_if_32bit",
    "sklearn.utils.fixes.parse_version",
    "sklearn.utils.fixes.sp_version"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_loss.test_derivatives.fprime": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "get_gradients",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_loss.test_derivatives.fprime2": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "get_hessians",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_loss.test_derivatives.func": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "isinstance",
    "numpy.ndarray",
    "scipy.special.logit",
    "sklearn.ensemble._hist_gradient_boosting.loss._LOSSES"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_loss.test_init_gradient_and_hessians_sample_weight": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": [
    "numpy.ones",
    "sklearn.ensemble._hist_gradient_boosting.loss._LOSSES"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_loss.test_numerical_gradients": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "get_gradients",
    "get_hessians",
    "numpy.float64",
    "numpy.random.RandomState",
    "numpy.testing.assert_allclose",
    "numpy.zeros_like",
    "sklearn.ensemble._hist_gradient_boosting.common.Y_DTYPE",
    "sklearn.ensemble._hist_gradient_boosting.loss._LOSSES",
    "sklearn.ensemble._hist_gradient_boosting.tests.test_loss.get_derivatives_helper",
    "sklearn.ensemble._hist_gradient_boosting.tests.test_loss.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_loss.test_sample_weight_multiplies_gradients": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "numpy.allclose",
    "numpy.empty",
    "numpy.ones",
    "numpy.random.RandomState",
    "numpy.zeros",
    "sklearn.ensemble._hist_gradient_boosting.common.G_H_DTYPE",
    "sklearn.ensemble._hist_gradient_boosting.common.Y_DTYPE",
    "sklearn.ensemble._hist_gradient_boosting.loss._LOSSES",
    "sklearn.ensemble._hist_gradient_boosting.tests.test_loss.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_monotonic_contraints": {
  "data": {},
  "type": "module"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_monotonic_contraints.G_H_DTYPE": {
  "data": {
   "shadows": "sklearn.ensemble._hist_gradient_boosting.common.G_H_DTYPE"
  },
  "type": "import"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_monotonic_contraints.HistGradientBoostingClassifier": {
  "data": {
   "shadows": "sklearn.ensemble.HistGradientBoostingClassifier"
  },
  "type": "import"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_monotonic_contraints.HistGradientBoostingRegressor": {
  "data": {
   "shadows": "sklearn.ensemble.HistGradientBoostingRegressor"
  },
  "type": "import"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_monotonic_contraints.HistogramBuilder": {
  "data": {
   "shadows": "sklearn.ensemble._hist_gradient_boosting.histogram.HistogramBuilder"
  },
  "type": "import"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_monotonic_contraints.MonotonicConstraint": {
  "data": {
   "shadows": "sklearn.ensemble._hist_gradient_boosting.common.MonotonicConstraint"
  },
  "type": "import"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_monotonic_contraints.Splitter": {
  "data": {
   "shadows": "sklearn.ensemble._hist_gradient_boosting.splitting.Splitter"
  },
  "type": "import"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_monotonic_contraints.TreeGrower": {
  "data": {
   "shadows": "sklearn.ensemble._hist_gradient_boosting.grower.TreeGrower"
  },
  "type": "import"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_monotonic_contraints.X_BINNED_DTYPE": {
  "data": {
   "shadows": "sklearn.ensemble._hist_gradient_boosting.common.X_BINNED_DTYPE"
  },
  "type": "import"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_monotonic_contraints.assert_children_values_bounded": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "recursively_check_children_node_values",
    "sklearn.ensemble._hist_gradient_boosting.common.MonotonicConstraint.NO_CST"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_monotonic_contraints.assert_children_values_bounded.recursively_check_children_node_values": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "recursively_check_children_node_values",
    "sklearn.ensemble._hist_gradient_boosting.common.MonotonicConstraint.POS"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_monotonic_contraints.assert_children_values_monotonic": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "sklearn.ensemble._hist_gradient_boosting.common.MonotonicConstraint.NO_CST",
    "sklearn.ensemble._hist_gradient_boosting.common.MonotonicConstraint.POS"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_monotonic_contraints.assert_leaves_values_monotonic": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "get_leaves_values",
    "sklearn.ensemble._hist_gradient_boosting.common.MonotonicConstraint.NO_CST",
    "sklearn.ensemble._hist_gradient_boosting.common.MonotonicConstraint.POS",
    "sklearn.ensemble._hist_gradient_boosting.tests.test_monotonic_contraints.is_decreasing",
    "sklearn.ensemble._hist_gradient_boosting.tests.test_monotonic_contraints.is_increasing"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_monotonic_contraints.assert_leaves_values_monotonic.get_leaves_values": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "depth_first_collect_leaf_values"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_monotonic_contraints.assert_leaves_values_monotonic.get_leaves_values.depth_first_collect_leaf_values": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "depth_first_collect_leaf_values"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_monotonic_contraints.compute_node_value": {
  "data": {
   "shadows": "sklearn.ensemble._hist_gradient_boosting.splitting.compute_node_value"
  },
  "type": "import"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_monotonic_contraints.enable_hist_gradient_boosting": {
  "data": {
   "shadows": "sklearn.experimental.enable_hist_gradient_boosting"
  },
  "type": "import"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_monotonic_contraints.is_decreasing": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "numpy.diff"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_monotonic_contraints.is_increasing": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "numpy.diff"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_monotonic_contraints.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_monotonic_contraints.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_monotonic_contraints.test_bounded_value_min_gain_to_split": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "numpy.inf",
    "numpy.int8",
    "numpy.ones",
    "numpy.uint32",
    "numpy.uint8",
    "numpy.zeros_like",
    "sklearn.ensemble._hist_gradient_boosting.common.G_H_DTYPE",
    "sklearn.ensemble._hist_gradient_boosting.common.MonotonicConstraint.NO_CST",
    "sklearn.ensemble._hist_gradient_boosting.common.X_BINNED_DTYPE",
    "sklearn.ensemble._hist_gradient_boosting.histogram.HistogramBuilder",
    "sklearn.ensemble._hist_gradient_boosting.splitting.Splitter",
    "sklearn.ensemble._hist_gradient_boosting.splitting.compute_node_value",
    "sklearn.ensemble._hist_gradient_boosting.tests.test_monotonic_contraints.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_monotonic_contraints.test_input_error": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.ensemble.HistGradientBoostingClassifier",
    "sklearn.ensemble.HistGradientBoostingRegressor",
    "sklearn.ensemble._hist_gradient_boosting.tests.test_monotonic_contraints.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_monotonic_contraints.test_nodes_values": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "numpy.asfortranarray",
    "numpy.ones",
    "numpy.random.RandomState",
    "numpy.uint8",
    "numpy.zeros",
    "range",
    "sklearn.ensemble._hist_gradient_boosting.common.G_H_DTYPE",
    "sklearn.ensemble._hist_gradient_boosting.common.MonotonicConstraint.NEG",
    "sklearn.ensemble._hist_gradient_boosting.common.MonotonicConstraint.NO_CST",
    "sklearn.ensemble._hist_gradient_boosting.common.MonotonicConstraint.POS",
    "sklearn.ensemble._hist_gradient_boosting.grower.TreeGrower",
    "sklearn.ensemble._hist_gradient_boosting.tests.test_monotonic_contraints.assert_children_values_bounded",
    "sklearn.ensemble._hist_gradient_boosting.tests.test_monotonic_contraints.assert_children_values_monotonic",
    "sklearn.ensemble._hist_gradient_boosting.tests.test_monotonic_contraints.assert_leaves_values_monotonic",
    "sklearn.ensemble._hist_gradient_boosting.tests.test_monotonic_contraints.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_monotonic_contraints.test_predictions": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.c_",
    "numpy.cos",
    "numpy.diff",
    "numpy.full_like",
    "numpy.linspace",
    "numpy.pi",
    "numpy.random.RandomState",
    "numpy.sin",
    "range",
    "sklearn.ensemble.HistGradientBoostingRegressor",
    "sklearn.ensemble._hist_gradient_boosting.tests.test_monotonic_contraints.is_decreasing",
    "sklearn.ensemble._hist_gradient_boosting.tests.test_monotonic_contraints.is_increasing",
    "sklearn.ensemble._hist_gradient_boosting.tests.test_monotonic_contraints.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_predictor": {
  "data": {},
  "type": "module"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_predictor.ALMOST_INF": {
  "data": {
   "shadows": "sklearn.ensemble._hist_gradient_boosting.common.ALMOST_INF"
  },
  "type": "import"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_predictor.G_H_DTYPE": {
  "data": {
   "shadows": "sklearn.ensemble._hist_gradient_boosting.common.G_H_DTYPE"
  },
  "type": "import"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_predictor.PREDICTOR_RECORD_DTYPE": {
  "data": {
   "shadows": "sklearn.ensemble._hist_gradient_boosting.common.PREDICTOR_RECORD_DTYPE"
  },
  "type": "import"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_predictor.TreeGrower": {
  "data": {
   "shadows": "sklearn.ensemble._hist_gradient_boosting.grower.TreeGrower"
  },
  "type": "import"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_predictor.TreePredictor": {
  "data": {
   "shadows": "sklearn.ensemble._hist_gradient_boosting.predictor.TreePredictor"
  },
  "type": "import"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_predictor.X_BINNED_DTYPE": {
  "data": {
   "shadows": "sklearn.ensemble._hist_gradient_boosting.common.X_BINNED_DTYPE"
  },
  "type": "import"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_predictor.X_BITSET_INNER_DTYPE": {
  "data": {
   "shadows": "sklearn.ensemble._hist_gradient_boosting.common.X_BITSET_INNER_DTYPE"
  },
  "type": "import"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_predictor.X_DTYPE": {
  "data": {
   "shadows": "sklearn.ensemble._hist_gradient_boosting.common.X_DTYPE"
  },
  "type": "import"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_predictor._BinMapper": {
  "data": {
   "shadows": "sklearn.ensemble._hist_gradient_boosting.binning._BinMapper"
  },
  "type": "import"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_predictor.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_predictor.make_regression": {
  "data": {
   "shadows": "sklearn.datasets.make_regression"
  },
  "type": "import"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_predictor.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_predictor.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_predictor.r2_score": {
  "data": {
   "shadows": "sklearn.metrics.r2_score"
  },
  "type": "import"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_predictor.set_bitset_memoryview": {
  "data": {
   "shadows": "sklearn.ensemble._hist_gradient_boosting._bitset.set_bitset_memoryview"
  },
  "type": "import"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_predictor.set_raw_bitset_from_binned_bitset": {
  "data": {
   "shadows": "sklearn.ensemble._hist_gradient_boosting._bitset.set_raw_bitset_from_binned_bitset"
  },
  "type": "import"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_predictor.test_categorical_predictor": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "numpy.sum",
    "numpy.testing.assert_allclose",
    "numpy.uint32",
    "numpy.zeros",
    "sklearn.ensemble._hist_gradient_boosting._bitset.set_bitset_memoryview",
    "sklearn.ensemble._hist_gradient_boosting._bitset.set_raw_bitset_from_binned_bitset",
    "sklearn.ensemble._hist_gradient_boosting.common.PREDICTOR_RECORD_DTYPE",
    "sklearn.ensemble._hist_gradient_boosting.common.X_BINNED_DTYPE",
    "sklearn.ensemble._hist_gradient_boosting.common.X_BITSET_INNER_DTYPE",
    "sklearn.ensemble._hist_gradient_boosting.common.X_DTYPE",
    "sklearn.ensemble._hist_gradient_boosting.predictor.TreePredictor",
    "sklearn.ensemble._hist_gradient_boosting.tests.test_predictor.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_predictor.test_infinite_values_and_thresholds": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.array",
    "numpy.inf",
    "numpy.uint32",
    "numpy.zeros",
    "sklearn.ensemble._hist_gradient_boosting.common.ALMOST_INF",
    "sklearn.ensemble._hist_gradient_boosting.common.PREDICTOR_RECORD_DTYPE",
    "sklearn.ensemble._hist_gradient_boosting.common.X_BITSET_INNER_DTYPE",
    "sklearn.ensemble._hist_gradient_boosting.predictor.TreePredictor",
    "sklearn.ensemble._hist_gradient_boosting.tests.test_predictor.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_predictor.test_regression_dataset": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "numpy.ones",
    "numpy.uint32",
    "numpy.zeros",
    "sklearn.datasets.make_regression",
    "sklearn.ensemble._hist_gradient_boosting.binning._BinMapper",
    "sklearn.ensemble._hist_gradient_boosting.common.G_H_DTYPE",
    "sklearn.ensemble._hist_gradient_boosting.common.X_BITSET_INNER_DTYPE",
    "sklearn.ensemble._hist_gradient_boosting.grower.TreeGrower",
    "sklearn.ensemble._hist_gradient_boosting.tests.test_predictor.pytest",
    "sklearn.metrics.r2_score",
    "sklearn.model_selection.train_test_split"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_predictor.train_test_split": {
  "data": {
   "shadows": "sklearn.model_selection.train_test_split"
  },
  "type": "import"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_splitting": {
  "data": {},
  "type": "module"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_splitting.G_H_DTYPE": {
  "data": {
   "shadows": "sklearn.ensemble._hist_gradient_boosting.common.G_H_DTYPE"
  },
  "type": "import"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_splitting.HISTOGRAM_DTYPE": {
  "data": {
   "shadows": "sklearn.ensemble._hist_gradient_boosting.common.HISTOGRAM_DTYPE"
  },
  "type": "import"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_splitting.HistogramBuilder": {
  "data": {
   "shadows": "sklearn.ensemble._hist_gradient_boosting.histogram.HistogramBuilder"
  },
  "type": "import"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_splitting.MonotonicConstraint": {
  "data": {
   "shadows": "sklearn.ensemble._hist_gradient_boosting.common.MonotonicConstraint"
  },
  "type": "import"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_splitting.Splitter": {
  "data": {
   "shadows": "sklearn.ensemble._hist_gradient_boosting.splitting.Splitter"
  },
  "type": "import"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_splitting.X_BINNED_DTYPE": {
  "data": {
   "shadows": "sklearn.ensemble._hist_gradient_boosting.common.X_BINNED_DTYPE"
  },
  "type": "import"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_splitting._assert_categories_equals_bitset": {
  "data": {
   "lineno": 559,
   "symbols_in_volume": [
    "numpy.testing.assert_array_equal",
    "numpy.uint32",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_splitting.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_splitting.compute_node_value": {
  "data": {
   "shadows": "sklearn.ensemble._hist_gradient_boosting.splitting.compute_node_value"
  },
  "type": "import"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_splitting.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_splitting.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_splitting.skip_if_32bit": {
  "data": {
   "shadows": "sklearn.utils._testing.skip_if_32bit"
  },
  "type": "import"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_splitting.test_gradient_and_hessian_sanity": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "numpy.allclose",
    "numpy.arange",
    "numpy.array",
    "numpy.asarray",
    "numpy.asfortranarray",
    "numpy.inf",
    "numpy.int8",
    "numpy.isclose",
    "numpy.ones",
    "numpy.random.RandomState",
    "numpy.uint32",
    "numpy.uint8",
    "numpy.zeros_like",
    "sklearn.ensemble._hist_gradient_boosting.common.G_H_DTYPE",
    "sklearn.ensemble._hist_gradient_boosting.common.HISTOGRAM_DTYPE",
    "sklearn.ensemble._hist_gradient_boosting.common.MonotonicConstraint.NO_CST",
    "sklearn.ensemble._hist_gradient_boosting.common.X_BINNED_DTYPE",
    "sklearn.ensemble._hist_gradient_boosting.histogram.HistogramBuilder",
    "sklearn.ensemble._hist_gradient_boosting.splitting.Splitter",
    "sklearn.ensemble._hist_gradient_boosting.splitting.compute_node_value",
    "sklearn.ensemble._hist_gradient_boosting.tests.test_splitting.pytest",
    "sklearn.utils._testing.skip_if_32bit"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_splitting.test_histogram_split": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "int",
    "numpy.arange",
    "numpy.array",
    "numpy.asfortranarray",
    "numpy.full_like",
    "numpy.inf",
    "numpy.int8",
    "numpy.ones_like",
    "numpy.random.RandomState",
    "numpy.uint32",
    "numpy.uint8",
    "numpy.zeros_like",
    "range",
    "sklearn.ensemble._hist_gradient_boosting.common.G_H_DTYPE",
    "sklearn.ensemble._hist_gradient_boosting.common.MonotonicConstraint.NO_CST",
    "sklearn.ensemble._hist_gradient_boosting.common.X_BINNED_DTYPE",
    "sklearn.ensemble._hist_gradient_boosting.histogram.HistogramBuilder",
    "sklearn.ensemble._hist_gradient_boosting.splitting.Splitter",
    "sklearn.ensemble._hist_gradient_boosting.splitting.compute_node_value",
    "sklearn.ensemble._hist_gradient_boosting.tests.test_splitting.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_splitting.test_min_gain_to_split": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "numpy.asfortranarray",
    "numpy.inf",
    "numpy.int8",
    "numpy.ones_like",
    "numpy.random.RandomState",
    "numpy.uint32",
    "numpy.uint8",
    "numpy.zeros_like",
    "sklearn.ensemble._hist_gradient_boosting.common.G_H_DTYPE",
    "sklearn.ensemble._hist_gradient_boosting.common.MonotonicConstraint.NO_CST",
    "sklearn.ensemble._hist_gradient_boosting.common.X_BINNED_DTYPE",
    "sklearn.ensemble._hist_gradient_boosting.histogram.HistogramBuilder",
    "sklearn.ensemble._hist_gradient_boosting.splitting.Splitter",
    "sklearn.ensemble._hist_gradient_boosting.splitting.compute_node_value"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_splitting.test_split_indices": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "list",
    "numpy.all",
    "numpy.arange",
    "numpy.array",
    "numpy.asfortranarray",
    "numpy.inf",
    "numpy.int8",
    "numpy.ones",
    "numpy.random.RandomState",
    "numpy.uint32",
    "numpy.uint8",
    "numpy.zeros_like",
    "set",
    "sklearn.ensemble._hist_gradient_boosting.common.G_H_DTYPE",
    "sklearn.ensemble._hist_gradient_boosting.common.MonotonicConstraint.NO_CST",
    "sklearn.ensemble._hist_gradient_boosting.common.X_BINNED_DTYPE",
    "sklearn.ensemble._hist_gradient_boosting.histogram.HistogramBuilder",
    "sklearn.ensemble._hist_gradient_boosting.splitting.Splitter",
    "sklearn.ensemble._hist_gradient_boosting.splitting.compute_node_value"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_splitting.test_splitting_categorical_cat_smooth": {
  "data": {
   "lineno": 492,
   "symbols_in_volume": [
    "len",
    "max",
    "numpy.arange",
    "numpy.array",
    "numpy.asfortranarray",
    "numpy.inf",
    "numpy.int8",
    "numpy.ones",
    "numpy.ones_like",
    "numpy.uint32",
    "numpy.uint8",
    "sklearn.ensemble._hist_gradient_boosting.common.G_H_DTYPE",
    "sklearn.ensemble._hist_gradient_boosting.common.MonotonicConstraint.NO_CST",
    "sklearn.ensemble._hist_gradient_boosting.common.X_BINNED_DTYPE",
    "sklearn.ensemble._hist_gradient_boosting.histogram.HistogramBuilder",
    "sklearn.ensemble._hist_gradient_boosting.splitting.Splitter",
    "sklearn.ensemble._hist_gradient_boosting.splitting.compute_node_value",
    "sklearn.ensemble._hist_gradient_boosting.tests.test_splitting.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_splitting.test_splitting_categorical_sanity": {
  "data": {
   "lineno": 574,
   "symbols_in_volume": [
    "len",
    "list",
    "max",
    "numpy.arange",
    "numpy.array",
    "numpy.asfortranarray",
    "numpy.inf",
    "numpy.int8",
    "numpy.isin",
    "numpy.ones",
    "numpy.ones_like",
    "numpy.testing.assert_array_equal",
    "numpy.uint32",
    "numpy.uint8",
    "range",
    "sklearn.ensemble._hist_gradient_boosting.common.G_H_DTYPE",
    "sklearn.ensemble._hist_gradient_boosting.common.MonotonicConstraint.NO_CST",
    "sklearn.ensemble._hist_gradient_boosting.common.X_BINNED_DTYPE",
    "sklearn.ensemble._hist_gradient_boosting.histogram.HistogramBuilder",
    "sklearn.ensemble._hist_gradient_boosting.splitting.Splitter",
    "sklearn.ensemble._hist_gradient_boosting.splitting.compute_node_value",
    "sklearn.ensemble._hist_gradient_boosting.tests.test_splitting._assert_categories_equals_bitset",
    "sklearn.ensemble._hist_gradient_boosting.tests.test_splitting.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_splitting.test_splitting_missing_values": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": [
    "len",
    "max",
    "numpy.arange",
    "numpy.array",
    "numpy.asfortranarray",
    "numpy.flatnonzero",
    "numpy.inf",
    "numpy.int8",
    "numpy.ones",
    "numpy.uint32",
    "numpy.uint8",
    "numpy.zeros_like",
    "set",
    "sklearn.ensemble._hist_gradient_boosting.common.G_H_DTYPE",
    "sklearn.ensemble._hist_gradient_boosting.common.MonotonicConstraint.NO_CST",
    "sklearn.ensemble._hist_gradient_boosting.common.X_BINNED_DTYPE",
    "sklearn.ensemble._hist_gradient_boosting.histogram.HistogramBuilder",
    "sklearn.ensemble._hist_gradient_boosting.splitting.Splitter",
    "sklearn.ensemble._hist_gradient_boosting.splitting.compute_node_value",
    "sklearn.ensemble._hist_gradient_boosting.tests.test_splitting.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_warm_start": {
  "data": {
   "symbols_in_volume": [
    "sklearn.datasets.make_classification",
    "sklearn.datasets.make_regression"
   ]
  },
  "type": "module"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_warm_start.HistGradientBoostingClassifier": {
  "data": {
   "shadows": "sklearn.ensemble.HistGradientBoostingClassifier"
  },
  "type": "import"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_warm_start.HistGradientBoostingRegressor": {
  "data": {
   "shadows": "sklearn.ensemble.HistGradientBoostingRegressor"
  },
  "type": "import"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_warm_start._assert_predictor_equal": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_warm_start.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_warm_start.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_warm_start.check_scoring": {
  "data": {
   "shadows": "sklearn.metrics.check_scoring"
  },
  "type": "import"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_warm_start.clone": {
  "data": {
   "shadows": "sklearn.base.clone"
  },
  "type": "import"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_warm_start.enable_hist_gradient_boosting": {
  "data": {
   "shadows": "sklearn.experimental.enable_hist_gradient_boosting"
  },
  "type": "import"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_warm_start.make_classification": {
  "data": {
   "shadows": "sklearn.datasets.make_classification"
  },
  "type": "import"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_warm_start.make_regression": {
  "data": {
   "shadows": "sklearn.datasets.make_regression"
  },
  "type": "import"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_warm_start.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_warm_start.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_warm_start.test_max_iter_with_warm_start_validation": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "GradientBoosting",
    "ValueError",
    "sklearn.ensemble.HistGradientBoostingClassifier",
    "sklearn.ensemble.HistGradientBoostingRegressor",
    "sklearn.ensemble._hist_gradient_boosting.tests.test_warm_start.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_warm_start.test_random_seeds_warm_start": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "GradientBoosting",
    "_get_rng",
    "sklearn.ensemble.HistGradientBoostingClassifier",
    "sklearn.ensemble.HistGradientBoostingRegressor",
    "sklearn.ensemble._hist_gradient_boosting.tests.test_warm_start.pytest",
    "sklearn.metrics.check_scoring"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_warm_start.test_random_seeds_warm_start._get_rng": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "numpy.random.RandomState"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_warm_start.test_warm_start_clear": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "GradientBoosting",
    "numpy.testing.assert_allclose",
    "sklearn.ensemble.HistGradientBoostingClassifier",
    "sklearn.ensemble.HistGradientBoostingRegressor",
    "sklearn.ensemble._hist_gradient_boosting.tests.test_warm_start._assert_predictor_equal",
    "sklearn.ensemble._hist_gradient_boosting.tests.test_warm_start.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_warm_start.test_warm_start_early_stopping": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "GradientBoosting",
    "sklearn.ensemble.HistGradientBoostingClassifier",
    "sklearn.ensemble.HistGradientBoostingRegressor",
    "sklearn.ensemble._hist_gradient_boosting.tests.test_warm_start.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_warm_start.test_warm_start_equal_n_estimators": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "GradientBoosting",
    "sklearn.base.clone",
    "sklearn.ensemble.HistGradientBoostingClassifier",
    "sklearn.ensemble.HistGradientBoostingRegressor",
    "sklearn.ensemble._hist_gradient_boosting.tests.test_warm_start._assert_predictor_equal",
    "sklearn.ensemble._hist_gradient_boosting.tests.test_warm_start.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_warm_start.test_warm_start_max_depth": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "GradientBoosting",
    "range",
    "sklearn.ensemble.HistGradientBoostingClassifier",
    "sklearn.ensemble.HistGradientBoostingRegressor",
    "sklearn.ensemble._hist_gradient_boosting.tests.test_warm_start.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_warm_start.test_warm_start_yields_identical_results": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "GradientBoosting",
    "sklearn.ensemble.HistGradientBoostingClassifier",
    "sklearn.ensemble.HistGradientBoostingRegressor",
    "sklearn.ensemble._hist_gradient_boosting.tests.test_warm_start._assert_predictor_equal",
    "sklearn.ensemble._hist_gradient_boosting.tests.test_warm_start.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._iforest": {
  "data": {},
  "type": "module"
 },
 "sklearn.ensemble._iforest.IsolationForest": {
  "data": {
   "lineno": 27
  },
  "type": "class"
 },
 "sklearn.ensemble._iforest.IsolationForest.__init__": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "ExtraTreeRegressor",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._iforest.IsolationForest._compute_chunked_score_samples": {
  "data": {
   "lineno": 389,
   "symbols_in_volume": [
    "_num_samples",
    "gen_batches",
    "get_chunk_n_rows",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._iforest.IsolationForest._compute_score_samples": {
  "data": {
   "lineno": 421,
   "symbols_in_volume": [
    "len",
    "numpy.ravel",
    "numpy.zeros",
    "sklearn.ensemble._iforest._average_path_length",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._iforest.IsolationForest._more_tags": {
  "data": {
   "lineno": 457
  },
  "type": "function"
 },
 "sklearn.ensemble._iforest.IsolationForest._parallel_args": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "_joblib_parallel_args"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._iforest.IsolationForest._set_oob_score": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._iforest.IsolationForest.decision_function": {
  "data": {
   "lineno": 317
  },
  "type": "function"
 },
 "sklearn.ensemble._iforest.IsolationForest.fit": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "ValueError",
    "check_array",
    "check_random_state",
    "int",
    "isinstance",
    "max",
    "min",
    "numpy.ceil",
    "numpy.log2",
    "numpy.percentile",
    "scipy.sparse.issparse",
    "sklearn.ensemble._iforest.numbers",
    "str",
    "super",
    "warnings.warn"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._iforest.IsolationForest.predict": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": [
    "check_array",
    "check_is_fitted",
    "int",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._iforest.IsolationForest.score_samples": {
  "data": {
   "lineno": 349,
   "symbols_in_volume": [
    "ValueError",
    "check_array",
    "check_is_fitted"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._iforest.__all__": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "sklearn.ensemble._iforest._average_path_length": {
  "data": {
   "lineno": 466,
   "symbols_in_volume": [
    "check_array",
    "numpy.euler_gamma",
    "numpy.log",
    "numpy.logical_or",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._iforest.issparse": {
  "data": {
   "shadows": "scipy.sparse.issparse"
  },
  "type": "import"
 },
 "sklearn.ensemble._iforest.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.ensemble._iforest.numbers": {
  "data": {
   "shadows": "numbers"
  },
  "type": "import"
 },
 "sklearn.ensemble._iforest.warn": {
  "data": {
   "shadows": "warnings.warn"
  },
  "type": "import"
 },
 "sklearn.ensemble._stacking": {
  "data": {},
  "type": "module"
 },
 "sklearn.ensemble._stacking.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "sklearn.ensemble._stacking.Parallel": {
  "data": {
   "shadows": "joblib.Parallel"
  },
  "type": "import"
 },
 "sklearn.ensemble._stacking.StackingClassifier": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "sklearn.ensemble._stacking._BaseStacking"
   ]
  },
  "type": "class"
 },
 "sklearn.ensemble._stacking.StackingClassifier.__init__": {
  "data": {
   "lineno": 393,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._stacking.StackingClassifier._sk_visual_block_": {
  "data": {
   "lineno": 522,
   "symbols_in_volume": [
    "LogisticRegression",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._stacking.StackingClassifier._validate_final_estimator": {
  "data": {
   "lineno": 407,
   "symbols_in_volume": [
    "LogisticRegression",
    "ValueError",
    "is_classifier"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._stacking.StackingClassifier.decision_function": {
  "data": {
   "lineno": 485,
   "symbols_in_volume": [
    "check_is_fitted",
    "if_delegate_has_method"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._stacking.StackingClassifier.fit": {
  "data": {
   "lineno": 415,
   "symbols_in_volume": [
    "LabelEncoder",
    "check_classification_targets",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._stacking.StackingClassifier.predict": {
  "data": {
   "lineno": 441,
   "symbols_in_volume": [
    "if_delegate_has_method",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._stacking.StackingClassifier.predict_proba": {
  "data": {
   "lineno": 465,
   "symbols_in_volume": [
    "check_is_fitted",
    "if_delegate_has_method"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._stacking.StackingClassifier.transform": {
  "data": {
   "lineno": 505
  },
  "type": "function"
 },
 "sklearn.ensemble._stacking.StackingRegressor": {
  "data": {
   "lineno": 532,
   "symbols_in_volume": [
    "sklearn.ensemble._stacking._BaseStacking"
   ]
  },
  "type": "class"
 },
 "sklearn.ensemble._stacking.StackingRegressor.__init__": {
  "data": {
   "lineno": 641,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._stacking.StackingRegressor._sk_visual_block_": {
  "data": {
   "lineno": 702,
   "symbols_in_volume": [
    "RidgeCV",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._stacking.StackingRegressor._validate_final_estimator": {
  "data": {
   "lineno": 654,
   "symbols_in_volume": [
    "RidgeCV",
    "ValueError",
    "is_regressor"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._stacking.StackingRegressor.fit": {
  "data": {
   "lineno": 662,
   "symbols_in_volume": [
    "column_or_1d",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._stacking.StackingRegressor.transform": {
  "data": {
   "lineno": 686
  },
  "type": "function"
 },
 "sklearn.ensemble._stacking._BaseStacking": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "abc.ABCMeta"
   ]
  },
  "type": "class"
 },
 "sklearn.ensemble._stacking._BaseStacking.__init__": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._stacking._BaseStacking._clone_final_estimator": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "clone"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._stacking._BaseStacking._concatenate_predictions": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "numpy.hstack",
    "scipy.sparse.hstack",
    "scipy.sparse.issparse"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._stacking._BaseStacking._method_name": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "ValueError",
    "getattr",
    "hasattr",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._stacking._BaseStacking._sk_visual_block_": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "_VisualBlock",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._stacking._BaseStacking._transform": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "check_is_fitted",
    "getattr",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._stacking._BaseStacking.fit": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "Bunch",
    "_fit_single_estimator",
    "check_cv",
    "clone",
    "copy.deepcopy",
    "delayed",
    "hasattr",
    "is_classifier",
    "joblib.Parallel",
    "len",
    "numpy.random.RandomState",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._stacking._BaseStacking.n_features_in_": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "AttributeError",
    "check_is_fitted",
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._stacking._BaseStacking.predict": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "check_is_fitted",
    "if_delegate_has_method"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._stacking.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "sklearn.ensemble._stacking.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "sklearn.ensemble._stacking.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.ensemble._stacking.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.ensemble._voting": {
  "data": {},
  "type": "module"
 },
 "sklearn.ensemble._voting.Parallel": {
  "data": {
   "shadows": "joblib.Parallel"
  },
  "type": "import"
 },
 "sklearn.ensemble._voting.VotingClassifier": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "sklearn.ensemble._voting._BaseVoting"
   ]
  },
  "type": "class"
 },
 "sklearn.ensemble._voting.VotingClassifier.__init__": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._voting.VotingClassifier._collect_probas": {
  "data": {
   "lineno": 322,
   "symbols_in_volume": [
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._voting.VotingClassifier._predict_proba": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": [
    "check_is_fitted",
    "numpy.average"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._voting.VotingClassifier.fit": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "LabelEncoder",
    "NotImplementedError",
    "ValueError",
    "check_classification_targets",
    "isinstance",
    "len",
    "numpy.ndarray",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._voting.VotingClassifier.predict": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": [
    "check_is_fitted",
    "numpy.apply_along_axis",
    "numpy.argmax",
    "numpy.bincount"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._voting.VotingClassifier.predict_proba": {
  "data": {
   "lineno": 333,
   "symbols_in_volume": [
    "AttributeError",
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._voting.VotingClassifier.transform": {
  "data": {
   "lineno": 352,
   "symbols_in_volume": [
    "check_is_fitted",
    "numpy.hstack"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._voting.VotingRegressor": {
  "data": {
   "lineno": 386,
   "symbols_in_volume": [
    "sklearn.ensemble._voting._BaseVoting"
   ]
  },
  "type": "class"
 },
 "sklearn.ensemble._voting.VotingRegressor.__init__": {
  "data": {
   "lineno": 454,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._voting.VotingRegressor.fit": {
  "data": {
   "lineno": 462,
   "symbols_in_volume": [
    "column_or_1d",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._voting.VotingRegressor.predict": {
  "data": {
   "lineno": 487,
   "symbols_in_volume": [
    "check_is_fitted",
    "numpy.average"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._voting.VotingRegressor.transform": {
  "data": {
   "lineno": 507,
   "symbols_in_volume": [
    "check_is_fitted"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._voting._BaseVoting": {
  "data": {
   "lineno": 39
  },
  "type": "class"
 },
 "sklearn.ensemble._voting._BaseVoting._log_message": {
  "data": {
   "lineno": 46
  },
  "type": "function"
 },
 "sklearn.ensemble._voting._BaseVoting._more_tags": {
  "data": {
   "lineno": 137
  },
  "type": "function"
 },
 "sklearn.ensemble._voting._BaseVoting._predict": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._voting._BaseVoting._sk_visual_block_": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "_VisualBlock",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._voting._BaseVoting._weights_not_none": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "property",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._voting._BaseVoting.fit": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "Bunch",
    "ValueError",
    "abc.abstractmethod",
    "clone",
    "delayed",
    "enumerate",
    "iter",
    "joblib.Parallel",
    "len",
    "next"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._voting._BaseVoting.fit_transform": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._voting._BaseVoting.n_features_in_": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "AttributeError",
    "check_is_fitted",
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._voting.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "sklearn.ensemble._voting.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.ensemble._weight_boosting": {
  "data": {},
  "type": "module"
 },
 "sklearn.ensemble._weight_boosting.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "sklearn.ensemble._weight_boosting.AdaBoostClassifier": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "sklearn.ensemble._weight_boosting.BaseWeightBoosting"
   ]
  },
  "type": "class"
 },
 "sklearn.ensemble._weight_boosting.AdaBoostClassifier.__init__": {
  "data": {
   "lineno": 401,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._weight_boosting.AdaBoostClassifier._boost": {
  "data": {
   "lineno": 463
  },
  "type": "function"
 },
 "sklearn.ensemble._weight_boosting.AdaBoostClassifier._boost_discrete": {
  "data": {
   "lineno": 567,
   "symbols_in_volume": [
    "ValueError",
    "getattr",
    "len",
    "numpy.average",
    "numpy.exp",
    "numpy.log",
    "numpy.mean"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._weight_boosting.AdaBoostClassifier._boost_real": {
  "data": {
   "lineno": 509,
   "symbols_in_volume": [
    "getattr",
    "len",
    "numpy.argmax",
    "numpy.array",
    "numpy.average",
    "numpy.clip",
    "numpy.exp",
    "numpy.finfo",
    "numpy.mean",
    "numpy.newaxis",
    "scipy.special.xlogy"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._weight_boosting.AdaBoostClassifier._compute_proba_from_decision": {
  "data": {
   "lineno": 768,
   "symbols_in_volume": [
    "numpy.vstack",
    "softmax",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._weight_boosting.AdaBoostClassifier._validate_estimator": {
  "data": {
   "lineno": 445,
   "symbols_in_volume": [
    "DecisionTreeClassifier",
    "TypeError",
    "ValueError",
    "has_fit_parameter",
    "hasattr",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._weight_boosting.AdaBoostClassifier.decision_function": {
  "data": {
   "lineno": 675,
   "symbols_in_volume": [
    "check_is_fitted",
    "numpy.newaxis",
    "sklearn.ensemble._weight_boosting._samme_proba",
    "sum",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._weight_boosting.AdaBoostClassifier.fit": {
  "data": {
   "lineno": 417,
   "symbols_in_volume": [
    "ValueError",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._weight_boosting.AdaBoostClassifier.predict": {
  "data": {
   "lineno": 614,
   "symbols_in_volume": [
    "numpy.argmax"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._weight_boosting.AdaBoostClassifier.predict_log_proba": {
  "data": {
   "lineno": 848,
   "symbols_in_volume": [
    "numpy.log"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._weight_boosting.AdaBoostClassifier.predict_proba": {
  "data": {
   "lineno": 787,
   "symbols_in_volume": [
    "_num_samples",
    "check_is_fitted",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._weight_boosting.AdaBoostClassifier.staged_decision_function": {
  "data": {
   "lineno": 715,
   "symbols_in_volume": [
    "check_is_fitted",
    "numpy.copy",
    "numpy.newaxis",
    "sklearn.ensemble._weight_boosting._samme_proba",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._weight_boosting.AdaBoostClassifier.staged_predict": {
  "data": {
   "lineno": 640,
   "symbols_in_volume": [
    "numpy.argmax",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._weight_boosting.AdaBoostClassifier.staged_predict_proba": {
  "data": {
   "lineno": 817
  },
  "type": "function"
 },
 "sklearn.ensemble._weight_boosting.AdaBoostRegressor": {
  "data": {
   "lineno": 871,
   "symbols_in_volume": [
    "sklearn.ensemble._weight_boosting.BaseWeightBoosting"
   ]
  },
  "type": "class"
 },
 "sklearn.ensemble._weight_boosting.AdaBoostRegressor.__init__": {
  "data": {
   "lineno": 965,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._weight_boosting.AdaBoostRegressor._boost": {
  "data": {
   "lineno": 1015,
   "symbols_in_volume": [
    "_num_samples",
    "_safe_indexing",
    "len",
    "numpy.abs",
    "numpy.arange",
    "numpy.exp",
    "numpy.log",
    "numpy.power"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._weight_boosting.AdaBoostRegressor._get_median_predict": {
  "data": {
   "lineno": 1111,
   "symbols_in_volume": [
    "_num_samples",
    "numpy.arange",
    "numpy.argsort",
    "numpy.array",
    "numpy.newaxis",
    "stable_cumsum"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._weight_boosting.AdaBoostRegressor._validate_estimator": {
  "data": {
   "lineno": 1010,
   "symbols_in_volume": [
    "DecisionTreeRegressor",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._weight_boosting.AdaBoostRegressor.fit": {
  "data": {
   "lineno": 982,
   "symbols_in_volume": [
    "ValueError",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._weight_boosting.AdaBoostRegressor.predict": {
  "data": {
   "lineno": 1129,
   "symbols_in_volume": [
    "check_is_fitted",
    "len"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._weight_boosting.AdaBoostRegressor.staged_predict": {
  "data": {
   "lineno": 1151,
   "symbols_in_volume": [
    "check_is_fitted",
    "enumerate"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._weight_boosting.BaseWeightBoosting": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "abc.ABCMeta"
   ]
  },
  "type": "class"
 },
 "sklearn.ensemble._weight_boosting.BaseWeightBoosting.__init__": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "super",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._weight_boosting.BaseWeightBoosting._boost": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._weight_boosting.BaseWeightBoosting._check_X": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "check_array"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._weight_boosting.BaseWeightBoosting.feature_importances_": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "AttributeError",
    "ValueError",
    "len",
    "property",
    "sum",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._weight_boosting.BaseWeightBoosting.fit": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "ValueError",
    "_check_sample_weight",
    "check_random_state",
    "is_regressor",
    "numpy.any",
    "numpy.float64",
    "numpy.ones",
    "numpy.sum",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._weight_boosting.BaseWeightBoosting.staged_score": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "accuracy_score",
    "is_classifier",
    "r2_score"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._weight_boosting.__all__": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "sklearn.ensemble._weight_boosting._samme_proba": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "numpy.clip",
    "numpy.finfo",
    "numpy.log",
    "numpy.newaxis"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble._weight_boosting.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "sklearn.ensemble._weight_boosting.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.ensemble._weight_boosting.xlogy": {
  "data": {
   "shadows": "scipy.special.xlogy"
  },
  "type": "import"
 },
 "sklearn.ensemble.setup": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.distutils.core.setup",
    "sklearn.ensemble.setup.configuration"
   ]
  },
  "type": "module"
 },
 "sklearn.ensemble.setup.Configuration": {
  "data": {
   "shadows": "numpy.distutils.misc_util.Configuration"
  },
  "type": "import"
 },
 "sklearn.ensemble.setup.configuration": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "numpy.distutils.misc_util.Configuration",
    "sklearn.ensemble.setup.numpy"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.setup.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.ensemble.setup.setup": {
  "data": {
   "shadows": "numpy.distutils.core.setup"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests": {
  "data": {},
  "type": "module"
 },
 "sklearn.ensemble.tests.test_bagging": {
  "data": {
   "symbols_in_volume": [
    "sklearn.datasets.load_diabetes",
    "sklearn.datasets.load_iris",
    "sklearn.ensemble.tests.test_bagging.diabetes",
    "sklearn.ensemble.tests.test_bagging.iris",
    "sklearn.ensemble.tests.test_bagging.perm",
    "sklearn.ensemble.tests.test_bagging.rng",
    "sklearn.utils.check_random_state"
   ]
  },
  "type": "module"
 },
 "sklearn.ensemble.tests.test_bagging.BaggingClassifier": {
  "data": {
   "shadows": "sklearn.ensemble.BaggingClassifier"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_bagging.BaggingRegressor": {
  "data": {
   "shadows": "sklearn.ensemble.BaggingRegressor"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_bagging.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_bagging.DecisionTreeClassifier": {
  "data": {
   "shadows": "sklearn.tree.DecisionTreeClassifier"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_bagging.DecisionTreeRegressor": {
  "data": {
   "shadows": "sklearn.tree.DecisionTreeRegressor"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_bagging.DummyClassifier": {
  "data": {
   "shadows": "sklearn.dummy.DummyClassifier"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_bagging.DummyRegressor": {
  "data": {
   "shadows": "sklearn.dummy.DummyRegressor"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_bagging.DummySizeEstimator": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator"
   ]
  },
  "type": "class"
 },
 "sklearn.ensemble.tests.test_bagging.DummySizeEstimator.fit": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "sklearn.ensemble.tests.test_bagging.joblib"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_bagging.DummyZeroEstimator": {
  "data": {
   "lineno": 593,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator"
   ]
  },
  "type": "class"
 },
 "sklearn.ensemble.tests.test_bagging.DummyZeroEstimator.fit": {
  "data": {
   "lineno": 595,
   "symbols_in_volume": [
    "numpy.unique"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_bagging.DummyZeroEstimator.predict": {
  "data": {
   "lineno": 599,
   "symbols_in_volume": [
    "int",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_bagging.FunctionTransformer": {
  "data": {
   "shadows": "sklearn.preprocessing.FunctionTransformer"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_bagging.GridSearchCV": {
  "data": {
   "shadows": "sklearn.model_selection.GridSearchCV"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_bagging.KNeighborsClassifier": {
  "data": {
   "shadows": "sklearn.neighbors.KNeighborsClassifier"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_bagging.KNeighborsRegressor": {
  "data": {
   "shadows": "sklearn.neighbors.KNeighborsRegressor"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_bagging.LogisticRegression": {
  "data": {
   "shadows": "sklearn.linear_model.LogisticRegression"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_bagging.ParameterGrid": {
  "data": {
   "shadows": "sklearn.model_selection.ParameterGrid"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_bagging.Perceptron": {
  "data": {
   "shadows": "sklearn.linear_model.Perceptron"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_bagging.SVC": {
  "data": {
   "shadows": "sklearn.svm.SVC"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_bagging.SVR": {
  "data": {
   "shadows": "sklearn.svm.SVR"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_bagging.SelectKBest": {
  "data": {
   "shadows": "sklearn.feature_selection.SelectKBest"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_bagging.SparseRandomProjection": {
  "data": {
   "shadows": "sklearn.random_projection.SparseRandomProjection"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_bagging.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_bagging.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_bagging.assert_raise_message": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_raise_message"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_bagging.assert_raises": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_bagging.assert_warns": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_warns"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_bagging.assert_warns_message": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_warns_message"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_bagging.check_random_state": {
  "data": {
   "shadows": "sklearn.utils.check_random_state"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_bagging.csc_matrix": {
  "data": {
   "shadows": "scipy.sparse.csc_matrix"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_bagging.csr_matrix": {
  "data": {
   "shadows": "scipy.sparse.csr_matrix"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_bagging.diabetes": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "sklearn.ensemble.tests.test_bagging.iris": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "sklearn.ensemble.tests.test_bagging.joblib": {
  "data": {
   "shadows": "joblib"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_bagging.load_diabetes": {
  "data": {
   "shadows": "sklearn.datasets.load_diabetes"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_bagging.load_iris": {
  "data": {
   "shadows": "sklearn.datasets.load_iris"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_bagging.make_hastie_10_2": {
  "data": {
   "shadows": "sklearn.datasets.make_hastie_10_2"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_bagging.make_pipeline": {
  "data": {
   "shadows": "sklearn.pipeline.make_pipeline"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_bagging.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_bagging.perm": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "sklearn.ensemble.tests.test_bagging.product": {
  "data": {
   "shadows": "itertools.product"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_bagging.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_bagging.replace": {
  "data": {
   "lineno": 806,
   "symbols_in_volume": [
    "numpy.isfinite"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_bagging.rng": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "sklearn.ensemble.tests.test_bagging.scale": {
  "data": {
   "shadows": "sklearn.preprocessing.scale"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_bagging.test_bagging_classifier_with_missing_inputs": {
  "data": {
   "lineno": 849,
   "symbols_in_volume": [
    "ValueError",
    "numpy.NINF",
    "numpy.array",
    "numpy.inf",
    "numpy.nan",
    "sklearn.ensemble.BaggingClassifier",
    "sklearn.ensemble.tests.test_bagging.replace",
    "sklearn.pipeline.make_pipeline",
    "sklearn.preprocessing.FunctionTransformer",
    "sklearn.tree.DecisionTreeClassifier",
    "sklearn.utils._testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_bagging.test_bagging_get_estimators_indices": {
  "data": {
   "lineno": 890,
   "symbols_in_volume": [
    "MyEstimator",
    "numpy.arange",
    "numpy.random.RandomState",
    "sklearn.ensemble.BaggingRegressor",
    "sklearn.ensemble.tests.test_bagging.rng",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_bagging.test_bagging_get_estimators_indices.MyEstimator": {
  "data": {
   "lineno": 899,
   "symbols_in_volume": [
    "sklearn.tree.DecisionTreeRegressor"
   ]
  },
  "type": "class"
 },
 "sklearn.ensemble.tests.test_bagging.test_bagging_get_estimators_indices.MyEstimator.fit": {
  "data": {
   "lineno": 901
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_bagging.test_bagging_regressor_with_missing_inputs": {
  "data": {
   "lineno": 812,
   "symbols_in_volume": [
    "ValueError",
    "numpy.NINF",
    "numpy.array",
    "numpy.inf",
    "numpy.nan",
    "sklearn.ensemble.BaggingRegressor",
    "sklearn.ensemble.tests.test_bagging.replace",
    "sklearn.pipeline.make_pipeline",
    "sklearn.preprocessing.FunctionTransformer",
    "sklearn.tree.DecisionTreeRegressor",
    "sklearn.utils._testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_bagging.test_bagging_sample_weight_unsupported_but_passed": {
  "data": {
   "lineno": 603,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.ensemble.BaggingClassifier",
    "sklearn.ensemble.tests.test_bagging.DummyZeroEstimator",
    "sklearn.ensemble.tests.test_bagging.iris",
    "sklearn.ensemble.tests.test_bagging.rng",
    "sklearn.utils._testing.assert_raises",
    "sklearn.utils.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_bagging.test_bagging_small_max_features": {
  "data": {
   "lineno": 879,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.ensemble.BaggingClassifier",
    "sklearn.linear_model.LogisticRegression"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_bagging.test_bagging_with_pipeline": {
  "data": {
   "lineno": 585,
   "symbols_in_volume": [
    "int",
    "isinstance",
    "sklearn.ensemble.BaggingClassifier",
    "sklearn.ensemble.tests.test_bagging.iris",
    "sklearn.feature_selection.SelectKBest",
    "sklearn.pipeline.make_pipeline",
    "sklearn.tree.DecisionTreeClassifier"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_bagging.test_base_estimator": {
  "data": {
   "lineno": 535,
   "symbols_in_volume": [
    "isinstance",
    "sklearn.ensemble.BaggingClassifier",
    "sklearn.ensemble.BaggingRegressor",
    "sklearn.ensemble.tests.test_bagging.diabetes",
    "sklearn.ensemble.tests.test_bagging.iris",
    "sklearn.ensemble.tests.test_bagging.rng",
    "sklearn.linear_model.Perceptron",
    "sklearn.model_selection.train_test_split",
    "sklearn.svm.SVR",
    "sklearn.tree.DecisionTreeClassifier",
    "sklearn.tree.DecisionTreeRegressor",
    "sklearn.utils.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_bagging.test_bootstrap_features": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "numpy.unique",
    "sklearn.ensemble.BaggingRegressor",
    "sklearn.ensemble.tests.test_bagging.diabetes",
    "sklearn.ensemble.tests.test_bagging.rng",
    "sklearn.model_selection.train_test_split",
    "sklearn.tree.DecisionTreeRegressor",
    "sklearn.utils.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_bagging.test_bootstrap_samples": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "len",
    "set",
    "sklearn.ensemble.BaggingRegressor",
    "sklearn.ensemble.tests.test_bagging.DummySizeEstimator",
    "sklearn.ensemble.tests.test_bagging.diabetes",
    "sklearn.ensemble.tests.test_bagging.rng",
    "sklearn.model_selection.train_test_split",
    "sklearn.tree.DecisionTreeRegressor",
    "sklearn.utils.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_bagging.test_classification": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "sklearn.dummy.DummyClassifier",
    "sklearn.ensemble.BaggingClassifier",
    "sklearn.ensemble.tests.test_bagging.iris",
    "sklearn.ensemble.tests.test_bagging.rng",
    "sklearn.linear_model.Perceptron",
    "sklearn.model_selection.ParameterGrid",
    "sklearn.model_selection.train_test_split",
    "sklearn.neighbors.KNeighborsClassifier",
    "sklearn.svm.SVC",
    "sklearn.tree.DecisionTreeClassifier",
    "sklearn.utils.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_bagging.test_error": {
  "data": {
   "lineno": 408,
   "symbols_in_volume": [
    "ValueError",
    "hasattr",
    "sklearn.ensemble.BaggingClassifier",
    "sklearn.ensemble.tests.test_bagging.iris",
    "sklearn.tree.DecisionTreeClassifier",
    "sklearn.utils._testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_bagging.test_estimators_samples": {
  "data": {
   "lineno": 713,
   "symbols_in_volume": [
    "len",
    "sklearn.datasets.make_hastie_10_2",
    "sklearn.ensemble.BaggingClassifier",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_bagging.test_estimators_samples_deterministic": {
  "data": {
   "lineno": 749,
   "symbols_in_volume": [
    "sklearn.datasets.load_iris",
    "sklearn.ensemble.BaggingClassifier",
    "sklearn.ensemble.tests.test_bagging.iris",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.pipeline.make_pipeline",
    "sklearn.random_projection.SparseRandomProjection",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_bagging.test_gridsearch": {
  "data": {
   "lineno": 520,
   "symbols_in_volume": [
    "sklearn.ensemble.BaggingClassifier",
    "sklearn.ensemble.tests.test_bagging.iris",
    "sklearn.model_selection.GridSearchCV",
    "sklearn.svm.SVC"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_bagging.test_max_samples_consistency": {
  "data": {
   "lineno": 777,
   "symbols_in_volume": [
    "sklearn.datasets.make_hastie_10_2",
    "sklearn.ensemble.BaggingClassifier",
    "sklearn.neighbors.KNeighborsClassifier"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_bagging.test_oob_score_classification": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": [
    "UserWarning",
    "abs",
    "sklearn.ensemble.BaggingClassifier",
    "sklearn.ensemble.tests.test_bagging.iris",
    "sklearn.ensemble.tests.test_bagging.rng",
    "sklearn.model_selection.train_test_split",
    "sklearn.svm.SVC",
    "sklearn.tree.DecisionTreeClassifier",
    "sklearn.utils._testing.assert_warns",
    "sklearn.utils.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_bagging.test_oob_score_consistency": {
  "data": {
   "lineno": 703,
   "symbols_in_volume": [
    "sklearn.datasets.make_hastie_10_2",
    "sklearn.ensemble.BaggingClassifier",
    "sklearn.neighbors.KNeighborsClassifier"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_bagging.test_oob_score_regression": {
  "data": {
   "lineno": 361,
   "symbols_in_volume": [
    "UserWarning",
    "abs",
    "sklearn.ensemble.BaggingRegressor",
    "sklearn.ensemble.tests.test_bagging.diabetes",
    "sklearn.ensemble.tests.test_bagging.rng",
    "sklearn.model_selection.train_test_split",
    "sklearn.tree.DecisionTreeRegressor",
    "sklearn.utils._testing.assert_warns",
    "sklearn.utils.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_bagging.test_oob_score_removed_on_warm_start": {
  "data": {
   "lineno": 691,
   "symbols_in_volume": [
    "AttributeError",
    "getattr",
    "sklearn.datasets.make_hastie_10_2",
    "sklearn.ensemble.BaggingClassifier",
    "sklearn.utils._testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_bagging.test_parallel_classification": {
  "data": {
   "lineno": 441,
   "symbols_in_volume": [
    "ValueError",
    "numpy.hstack",
    "numpy.zeros",
    "sklearn.ensemble.BaggingClassifier",
    "sklearn.ensemble.tests.test_bagging.iris",
    "sklearn.ensemble.tests.test_bagging.rng",
    "sklearn.model_selection.train_test_split",
    "sklearn.svm.SVC",
    "sklearn.tree.DecisionTreeClassifier",
    "sklearn.utils._testing.assert_array_almost_equal",
    "sklearn.utils._testing.assert_raise_message",
    "sklearn.utils.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_bagging.test_parallel_regression": {
  "data": {
   "lineno": 494,
   "symbols_in_volume": [
    "sklearn.ensemble.BaggingRegressor",
    "sklearn.ensemble.tests.test_bagging.diabetes",
    "sklearn.ensemble.tests.test_bagging.rng",
    "sklearn.model_selection.train_test_split",
    "sklearn.tree.DecisionTreeRegressor",
    "sklearn.utils._testing.assert_array_almost_equal",
    "sklearn.utils.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_bagging.test_probability": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": [
    "len",
    "numpy.errstate",
    "numpy.exp",
    "numpy.ones",
    "numpy.sum",
    "sklearn.ensemble.BaggingClassifier",
    "sklearn.ensemble.tests.test_bagging.iris",
    "sklearn.ensemble.tests.test_bagging.rng",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.model_selection.train_test_split",
    "sklearn.tree.DecisionTreeClassifier",
    "sklearn.utils._testing.assert_array_almost_equal",
    "sklearn.utils.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_bagging.test_regression": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "sklearn.dummy.DummyRegressor",
    "sklearn.ensemble.BaggingRegressor",
    "sklearn.ensemble.tests.test_bagging.diabetes",
    "sklearn.ensemble.tests.test_bagging.rng",
    "sklearn.model_selection.ParameterGrid",
    "sklearn.model_selection.train_test_split",
    "sklearn.neighbors.KNeighborsRegressor",
    "sklearn.svm.SVR",
    "sklearn.tree.DecisionTreeRegressor",
    "sklearn.utils.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_bagging.test_set_oob_score_label_encoding": {
  "data": {
   "lineno": 789,
   "symbols_in_volume": [
    "sklearn.ensemble.BaggingClassifier"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_bagging.test_single_estimator": {
  "data": {
   "lineno": 390,
   "symbols_in_volume": [
    "sklearn.ensemble.BaggingRegressor",
    "sklearn.ensemble.tests.test_bagging.diabetes",
    "sklearn.ensemble.tests.test_bagging.rng",
    "sklearn.model_selection.train_test_split",
    "sklearn.neighbors.KNeighborsRegressor",
    "sklearn.utils._testing.assert_array_almost_equal",
    "sklearn.utils.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_bagging.test_sparse_classification": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "CustomSVC",
    "all",
    "getattr",
    "itertools.product",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "sklearn.ensemble.BaggingClassifier",
    "sklearn.ensemble.tests.test_bagging.iris",
    "sklearn.ensemble.tests.test_bagging.pytest",
    "sklearn.ensemble.tests.test_bagging.rng",
    "sklearn.model_selection.train_test_split",
    "sklearn.preprocessing.scale",
    "sklearn.utils._testing.assert_array_almost_equal",
    "sklearn.utils.check_random_state",
    "sparse_format",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_bagging.test_sparse_classification.CustomSVC": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "sklearn.svm.SVC"
   ]
  },
  "type": "class"
 },
 "sklearn.ensemble.tests.test_bagging.test_sparse_classification.CustomSVC.fit": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "super",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_bagging.test_sparse_regression": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "CustomSVR",
    "all",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "sklearn.ensemble.BaggingRegressor",
    "sklearn.ensemble.tests.test_bagging.diabetes",
    "sklearn.ensemble.tests.test_bagging.rng",
    "sklearn.model_selection.train_test_split",
    "sklearn.utils._testing.assert_array_almost_equal",
    "sklearn.utils.check_random_state",
    "sparse_format",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_bagging.test_sparse_regression.CustomSVR": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "sklearn.svm.SVR"
   ]
  },
  "type": "class"
 },
 "sklearn.ensemble.tests.test_bagging.test_sparse_regression.CustomSVR.fit": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "super",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_bagging.test_warm_start": {
  "data": {
   "lineno": 612,
   "symbols_in_volume": [
    "len",
    "set",
    "sklearn.datasets.make_hastie_10_2",
    "sklearn.ensemble.BaggingClassifier"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_bagging.test_warm_start_equal_n_estimators": {
  "data": {
   "lineno": 645,
   "symbols_in_volume": [
    "UserWarning",
    "sklearn.datasets.make_hastie_10_2",
    "sklearn.ensemble.BaggingClassifier",
    "sklearn.model_selection.train_test_split",
    "sklearn.utils._testing.assert_array_equal",
    "sklearn.utils._testing.assert_warns_message"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_bagging.test_warm_start_equivalence": {
  "data": {
   "lineno": 663,
   "symbols_in_volume": [
    "sklearn.datasets.make_hastie_10_2",
    "sklearn.ensemble.BaggingClassifier",
    "sklearn.model_selection.train_test_split",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_bagging.test_warm_start_smaller_n_estimators": {
  "data": {
   "lineno": 636,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.datasets.make_hastie_10_2",
    "sklearn.ensemble.BaggingClassifier",
    "sklearn.utils._testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_bagging.test_warm_start_with_oob_score_fails": {
  "data": {
   "lineno": 684,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.datasets.make_hastie_10_2",
    "sklearn.ensemble.BaggingClassifier",
    "sklearn.utils._testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_bagging.train_test_split": {
  "data": {
   "shadows": "sklearn.model_selection.train_test_split"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_base": {
  "data": {},
  "type": "module"
 },
 "sklearn.ensemble.tests.test_base.BaggingClassifier": {
  "data": {
   "shadows": "sklearn.ensemble.BaggingClassifier"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_base.LinearDiscriminantAnalysis": {
  "data": {
   "shadows": "sklearn.discriminant_analysis.LinearDiscriminantAnalysis"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_base.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_base.Perceptron": {
  "data": {
   "shadows": "sklearn.linear_model.Perceptron"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_base.Pipeline": {
  "data": {
   "shadows": "sklearn.pipeline.Pipeline"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_base.SelectFromModel": {
  "data": {
   "shadows": "sklearn.feature_selection.SelectFromModel"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_base._set_random_states": {
  "data": {
   "shadows": "sklearn.ensemble._base._set_random_states"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_base.assert_raise_message": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_raise_message"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_base.load_iris": {
  "data": {
   "shadows": "sklearn.datasets.load_iris"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_base.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_base.test_base": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "int",
    "isinstance",
    "len",
    "numpy.int32",
    "numpy.random.RandomState",
    "sklearn.datasets.load_iris",
    "sklearn.ensemble.BaggingClassifier",
    "sklearn.linear_model.Perceptron"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_base.test_base_not_int_n_estimators": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.datasets.load_iris",
    "sklearn.ensemble.BaggingClassifier",
    "sklearn.linear_model.Perceptron",
    "sklearn.utils._testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_base.test_base_zero_n_estimators": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.datasets.load_iris",
    "sklearn.ensemble.BaggingClassifier",
    "sklearn.linear_model.Perceptron",
    "sklearn.utils._testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_base.test_set_random_states": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "cls",
    "int",
    "isinstance",
    "make_steps",
    "sklearn.discriminant_analysis.LinearDiscriminantAnalysis",
    "sklearn.ensemble._base._set_random_states",
    "sklearn.linear_model.Perceptron",
    "sklearn.pipeline.Pipeline"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_base.test_set_random_states.AlphaParamPipeline": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "sklearn.pipeline.Pipeline"
   ]
  },
  "type": "class"
 },
 "sklearn.ensemble.tests.test_base.test_set_random_states.AlphaParamPipeline.get_params": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "sklearn.pipeline.Pipeline.get_params",
    "sorted"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_base.test_set_random_states.RevParamPipeline": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "sklearn.pipeline.Pipeline"
   ]
  },
  "type": "class"
 },
 "sklearn.ensemble.tests.test_base.test_set_random_states.RevParamPipeline.get_params": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "sklearn.pipeline.Pipeline.get_params",
    "sorted"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_base.test_set_random_states.make_steps": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "sklearn.feature_selection.SelectFromModel",
    "sklearn.linear_model.Perceptron"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_common": {
  "data": {
   "symbols_in_volume": [
    "sklearn.datasets.load_diabetes",
    "sklearn.datasets.load_iris"
   ]
  },
  "type": "module"
 },
 "sklearn.ensemble.tests.test_common.ClassifierMixin": {
  "data": {
   "shadows": "sklearn.base.ClassifierMixin"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_common.LinearRegression": {
  "data": {
   "shadows": "sklearn.linear_model.LinearRegression"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_common.LinearSVC": {
  "data": {
   "shadows": "sklearn.svm.LinearSVC"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_common.LinearSVR": {
  "data": {
   "shadows": "sklearn.svm.LinearSVR"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_common.LogisticRegression": {
  "data": {
   "shadows": "sklearn.linear_model.LogisticRegression"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_common.RandomForestClassifier": {
  "data": {
   "shadows": "sklearn.ensemble.RandomForestClassifier"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_common.RandomForestRegressor": {
  "data": {
   "shadows": "sklearn.ensemble.RandomForestRegressor"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_common.SVC": {
  "data": {
   "shadows": "sklearn.svm.SVC"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_common.SVR": {
  "data": {
   "shadows": "sklearn.svm.SVR"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_common.SimpleImputer": {
  "data": {
   "shadows": "sklearn.impute.SimpleImputer"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_common.StackingClassifier": {
  "data": {
   "shadows": "sklearn.ensemble.StackingClassifier"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_common.StackingRegressor": {
  "data": {
   "shadows": "sklearn.ensemble.StackingRegressor"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_common.VotingClassifier": {
  "data": {
   "shadows": "sklearn.ensemble.VotingClassifier"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_common.VotingRegressor": {
  "data": {
   "shadows": "sklearn.ensemble.VotingRegressor"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_common.clone": {
  "data": {
   "shadows": "sklearn.base.clone"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_common.is_classifier": {
  "data": {
   "shadows": "sklearn.base.is_classifier"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_common.load_diabetes": {
  "data": {
   "shadows": "sklearn.datasets.load_diabetes"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_common.load_iris": {
  "data": {
   "shadows": "sklearn.datasets.load_iris"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_common.make_classification": {
  "data": {
   "shadows": "sklearn.datasets.make_classification"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_common.make_pipeline": {
  "data": {
   "shadows": "sklearn.pipeline.make_pipeline"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_common.make_regression": {
  "data": {
   "shadows": "sklearn.datasets.make_regression"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_common.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_common.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_common.test_ensemble_heterogeneous_estimators_all_dropped": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.datasets.make_classification",
    "sklearn.datasets.make_regression",
    "sklearn.ensemble.StackingClassifier",
    "sklearn.ensemble.StackingRegressor",
    "sklearn.ensemble.VotingClassifier",
    "sklearn.ensemble.VotingRegressor",
    "sklearn.ensemble.tests.test_common.pytest",
    "sklearn.linear_model.LinearRegression",
    "sklearn.linear_model.LogisticRegression"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_common.test_ensemble_heterogeneous_estimators_behavior": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "hasattr",
    "isinstance",
    "len",
    "list",
    "sklearn.base.clone",
    "sklearn.base.is_classifier",
    "sklearn.datasets.make_classification",
    "sklearn.datasets.make_regression",
    "sklearn.ensemble.RandomForestClassifier",
    "sklearn.ensemble.RandomForestRegressor",
    "sklearn.ensemble.StackingClassifier",
    "sklearn.ensemble.StackingRegressor",
    "sklearn.ensemble.VotingClassifier",
    "sklearn.ensemble.VotingRegressor",
    "sklearn.ensemble.tests.test_common.pytest",
    "sklearn.linear_model.LinearRegression",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.svm.LinearSVC",
    "sklearn.svm.LinearSVR",
    "sklearn.svm.SVC",
    "sklearn.svm.SVR",
    "sorted",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_common.test_ensemble_heterogeneous_estimators_name_validation": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "Ensemble",
    "ValueError",
    "issubclass",
    "sklearn.base.ClassifierMixin",
    "sklearn.datasets.make_classification",
    "sklearn.datasets.make_regression",
    "sklearn.ensemble.StackingClassifier",
    "sklearn.ensemble.StackingRegressor",
    "sklearn.ensemble.VotingClassifier",
    "sklearn.ensemble.VotingRegressor",
    "sklearn.ensemble.tests.test_common.pytest",
    "sklearn.linear_model.LinearRegression",
    "sklearn.linear_model.LogisticRegression"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_common.test_ensemble_heterogeneous_estimators_type": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "Ensemble",
    "ValueError",
    "issubclass",
    "sklearn.base.ClassifierMixin",
    "sklearn.datasets.make_classification",
    "sklearn.datasets.make_regression",
    "sklearn.ensemble.StackingClassifier",
    "sklearn.ensemble.StackingRegressor",
    "sklearn.ensemble.VotingClassifier",
    "sklearn.ensemble.VotingRegressor",
    "sklearn.ensemble.tests.test_common.pytest",
    "sklearn.linear_model.LinearRegression",
    "sklearn.linear_model.LogisticRegression"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_common.test_heterogeneous_ensemble_support_missing_values": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "Ensemble",
    "Estimator",
    "bool",
    "numpy.nan",
    "numpy.random.choice",
    "sklearn.ensemble.StackingClassifier",
    "sklearn.ensemble.StackingRegressor",
    "sklearn.ensemble.VotingClassifier",
    "sklearn.ensemble.VotingRegressor",
    "sklearn.ensemble.tests.test_common.pytest",
    "sklearn.impute.SimpleImputer",
    "sklearn.linear_model.LinearRegression",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.pipeline.make_pipeline"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest": {
  "data": {
   "symbols_in_volume": [
    "dict",
    "numpy.float32",
    "sklearn.datasets.load_iris",
    "sklearn.datasets.make_classification",
    "sklearn.datasets.make_hastie_10_2",
    "sklearn.datasets.make_regression",
    "sklearn.ensemble.ExtraTreesClassifier",
    "sklearn.ensemble.ExtraTreesRegressor",
    "sklearn.ensemble.RandomForestClassifier",
    "sklearn.ensemble.RandomForestRegressor",
    "sklearn.ensemble.RandomTreesEmbedding",
    "sklearn.ensemble.tests.test_forest.FOREST_CLASSIFIERS",
    "sklearn.ensemble.tests.test_forest.FOREST_REGRESSORS",
    "sklearn.ensemble.tests.test_forest.FOREST_TRANSFORMERS",
    "sklearn.ensemble.tests.test_forest.MyBackend",
    "sklearn.ensemble.tests.test_forest.iris",
    "sklearn.ensemble.tests.test_forest.joblib",
    "sklearn.ensemble.tests.test_forest.perm",
    "sklearn.ensemble.tests.test_forest.rng",
    "sklearn.utils.validation.check_random_state",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "module"
 },
 "sklearn.ensemble.tests.test_forest.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_forest.DEFAULT_JOBLIB_BACKEND": {
  "data": {
   "lineno": 85
  },
  "type": "constant"
 },
 "sklearn.ensemble.tests.test_forest.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_forest.ExtraTreesClassifier": {
  "data": {
   "shadows": "sklearn.ensemble.ExtraTreesClassifier"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_forest.ExtraTreesRegressor": {
  "data": {
   "shadows": "sklearn.ensemble.ExtraTreesRegressor"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_forest.FOREST_CLASSIFIERS": {
  "data": {
   "lineno": 87
  },
  "type": "constant"
 },
 "sklearn.ensemble.tests.test_forest.FOREST_REGRESSORS": {
  "data": {
   "lineno": 92
  },
  "type": "constant"
 },
 "sklearn.ensemble.tests.test_forest.FOREST_TRANSFORMERS": {
  "data": {
   "lineno": 97
  },
  "type": "constant"
 },
 "sklearn.ensemble.tests.test_forest.GridSearchCV": {
  "data": {
   "shadows": "sklearn.model_selection.GridSearchCV"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_forest.LinearSVC": {
  "data": {
   "shadows": "sklearn.svm.LinearSVC"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_forest.MyBackend": {
  "data": {
   "lineno": 1263,
   "symbols_in_volume": [
    "sklearn.ensemble.tests.test_forest.DEFAULT_JOBLIB_BACKEND"
   ]
  },
  "type": "class"
 },
 "sklearn.ensemble.tests.test_forest.MyBackend.__init__": {
  "data": {
   "lineno": 1264,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.MyBackend.start_call": {
  "data": {
   "lineno": 1268,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.NotFittedError": {
  "data": {
   "shadows": "sklearn.exceptions.NotFittedError"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_forest.RandomForestClassifier": {
  "data": {
   "shadows": "sklearn.ensemble.RandomForestClassifier"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_forest.RandomForestRegressor": {
  "data": {
   "shadows": "sklearn.ensemble.RandomForestRegressor"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_forest.RandomTreesEmbedding": {
  "data": {
   "shadows": "sklearn.ensemble.RandomTreesEmbedding"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_forest.SPARSE_SPLITTERS": {
  "data": {
   "shadows": "sklearn.tree._classes.SPARSE_SPLITTERS"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_forest.T": {
  "data": {
   "lineno": 59
  },
  "type": "constant"
 },
 "sklearn.ensemble.tests.test_forest.TruncatedSVD": {
  "data": {
   "shadows": "sklearn.decomposition.TruncatedSVD"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_forest.X": {
  "data": {
   "lineno": 57
  },
  "type": "constant"
 },
 "sklearn.ensemble.tests.test_forest.assert_almost_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_almost_equal"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_forest.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_forest.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_forest.assert_raises": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_forest.assert_warns": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_warns"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_forest.assert_warns_message": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_warns_message"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_forest.check_1d_input": {
  "data": {
   "lineno": 942,
   "symbols_in_volume": [
    "ForestEstimator",
    "ValueError",
    "sklearn.ensemble.tests.test_forest.FOREST_CLASSIFIERS",
    "sklearn.ensemble.tests.test_forest.FOREST_REGRESSORS",
    "sklearn.ensemble.tests.test_forest.X",
    "sklearn.ensemble.tests.test_forest.y",
    "sklearn.utils._testing.assert_raises",
    "sklearn.utils._testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.check_class_weight_balanced_and_bootstrap_multi_output": {
  "data": {
   "lineno": 1013,
   "symbols_in_volume": [
    "ForestClassifier",
    "numpy.array",
    "numpy.vstack",
    "sklearn.ensemble.tests.test_forest.FOREST_CLASSIFIERS",
    "sklearn.ensemble.tests.test_forest.X",
    "sklearn.ensemble.tests.test_forest.y"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.check_class_weight_errors": {
  "data": {
   "lineno": 1032,
   "symbols_in_volume": [
    "ForestClassifier",
    "UserWarning",
    "ValueError",
    "numpy.array",
    "numpy.vstack",
    "sklearn.ensemble.tests.test_forest.FOREST_CLASSIFIERS",
    "sklearn.ensemble.tests.test_forest.X",
    "sklearn.ensemble.tests.test_forest.y",
    "sklearn.utils._testing.assert_raises",
    "sklearn.utils._testing.assert_warns"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.check_class_weights": {
  "data": {
   "lineno": 965,
   "symbols_in_volume": [
    "ForestClassifier",
    "numpy.ones",
    "numpy.vstack",
    "sklearn.ensemble.tests.test_forest.FOREST_CLASSIFIERS",
    "sklearn.ensemble.tests.test_forest.iris",
    "sklearn.utils._testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.check_classes_shape": {
  "data": {
   "lineno": 570,
   "symbols_in_volume": [
    "ForestClassifier",
    "numpy.array",
    "numpy.vstack",
    "sklearn.ensemble.tests.test_forest.FOREST_CLASSIFIERS",
    "sklearn.ensemble.tests.test_forest.X",
    "sklearn.ensemble.tests.test_forest.y",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.check_classification_toy": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "ForestClassifier",
    "len",
    "sklearn.ensemble.tests.test_forest.FOREST_CLASSIFIERS",
    "sklearn.ensemble.tests.test_forest.T",
    "sklearn.ensemble.tests.test_forest.X",
    "sklearn.ensemble.tests.test_forest.true_result",
    "sklearn.ensemble.tests.test_forest.y",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.check_decision_path": {
  "data": {
   "lineno": 1205,
   "symbols_in_volume": [
    "ForestEstimator",
    "enumerate",
    "numpy.diff",
    "numpy.ones",
    "range",
    "sklearn.ensemble.tests.test_forest.X",
    "sklearn.ensemble.tests.test_forest.hastie_X",
    "sklearn.ensemble.tests.test_forest.y",
    "sklearn.utils._testing.assert_array_almost_equal",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.check_gridsearch": {
  "data": {
   "lineno": 442,
   "symbols_in_volume": [
    "sklearn.ensemble.tests.test_forest.FOREST_CLASSIFIERS",
    "sklearn.ensemble.tests.test_forest.iris",
    "sklearn.model_selection.GridSearchCV"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.check_importances": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "ForestEstimator",
    "len",
    "numpy.abs",
    "numpy.all",
    "numpy.sum",
    "sklearn.ensemble.tests.test_forest.X",
    "sklearn.ensemble.tests.test_forest.y",
    "sklearn.utils._testing.assert_array_almost_equal",
    "sklearn.utils.validation.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.check_iris_criterion": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "ForestClassifier",
    "sklearn.ensemble.tests.test_forest.FOREST_CLASSIFIERS",
    "sklearn.ensemble.tests.test_forest.iris"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.check_max_leaf_nodes_max_depth": {
  "data": {
   "lineno": 728,
   "symbols_in_volume": [
    "ForestEstimator",
    "sklearn.ensemble.tests.test_forest.X",
    "sklearn.ensemble.tests.test_forest.hastie_X",
    "sklearn.ensemble.tests.test_forest.y"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.check_memory_layout": {
  "data": {
   "lineno": 889,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.ascontiguousarray",
    "scipy.sparse.coo_matrix",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "sklearn.ensemble.tests.test_forest.X",
    "sklearn.ensemble.tests.test_forest.iris",
    "sklearn.ensemble.tests.test_forest.y",
    "sklearn.tree._classes.SPARSE_SPLITTERS",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.check_min_samples_leaf": {
  "data": {
   "lineno": 782,
   "symbols_in_volume": [
    "ForestEstimator",
    "ValueError",
    "len",
    "numpy.bincount",
    "numpy.min",
    "sklearn.ensemble.tests.test_forest.X",
    "sklearn.ensemble.tests.test_forest.hastie_X",
    "sklearn.ensemble.tests.test_forest.y",
    "sklearn.utils._testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.check_min_samples_split": {
  "data": {
   "lineno": 747,
   "symbols_in_volume": [
    "ForestEstimator",
    "ValueError",
    "len",
    "numpy.min",
    "sklearn.ensemble.tests.test_forest.X",
    "sklearn.ensemble.tests.test_forest.hastie_X",
    "sklearn.ensemble.tests.test_forest.y",
    "sklearn.utils._testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.check_min_weight_fraction_leaf": {
  "data": {
   "lineno": 818,
   "symbols_in_volume": [
    "ForestEstimator",
    "numpy.bincount",
    "numpy.linspace",
    "numpy.min",
    "numpy.random.RandomState",
    "numpy.sum",
    "sklearn.ensemble.tests.test_forest.X",
    "sklearn.ensemble.tests.test_forest.hastie_X",
    "sklearn.ensemble.tests.test_forest.rng",
    "sklearn.ensemble.tests.test_forest.y"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.check_multioutput": {
  "data": {
   "lineno": 508,
   "symbols_in_volume": [
    "len",
    "numpy.errstate",
    "sklearn.ensemble.tests.test_forest.FOREST_CLASSIFIERS",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.check_oob_score": {
  "data": {
   "lineno": 374,
   "symbols_in_volume": [
    "UserWarning",
    "abs",
    "numpy.errstate",
    "sklearn.ensemble.tests.test_forest.X",
    "sklearn.ensemble.tests.test_forest.y",
    "sklearn.utils._testing.assert_warns"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.check_oob_score_raise_error": {
  "data": {
   "lineno": 414,
   "symbols_in_volume": [
    "ForestEstimator",
    "NotImplementedError",
    "TypeError",
    "ValueError",
    "hasattr",
    "sklearn.ensemble.tests.test_forest.FOREST_TRANSFORMERS",
    "sklearn.ensemble.tests.test_forest.X",
    "sklearn.ensemble.tests.test_forest.y",
    "sklearn.utils._testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.check_parallel": {
  "data": {
   "lineno": 454,
   "symbols_in_volume": [
    "ForestEstimator",
    "len",
    "sklearn.ensemble.tests.test_forest.X",
    "sklearn.ensemble.tests.test_forest.y",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.check_pickle": {
  "data": {
   "lineno": 481,
   "symbols_in_volume": [
    "ForestEstimator",
    "sklearn.ensemble.tests.test_forest.X",
    "sklearn.ensemble.tests.test_forest.pickle",
    "sklearn.ensemble.tests.test_forest.y",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.check_probability": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "ForestClassifier",
    "numpy.errstate",
    "numpy.exp",
    "numpy.ones",
    "numpy.sum",
    "sklearn.ensemble.tests.test_forest.FOREST_CLASSIFIERS",
    "sklearn.ensemble.tests.test_forest.iris",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.check_random_state": {
  "data": {
   "shadows": "sklearn.utils.validation.check_random_state"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_forest.check_regression_criterion": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "ForestRegressor",
    "sklearn.ensemble.tests.test_forest.FOREST_REGRESSORS"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.check_regressor_attributes": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "hasattr",
    "sklearn.ensemble.tests.test_forest.FOREST_REGRESSORS"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.check_sparse_input": {
  "data": {
   "lineno": 853,
   "symbols_in_volume": [
    "ForestEstimator",
    "sklearn.ensemble.tests.test_forest.FOREST_CLASSIFIERS",
    "sklearn.ensemble.tests.test_forest.FOREST_REGRESSORS",
    "sklearn.ensemble.tests.test_forest.FOREST_TRANSFORMERS",
    "sklearn.ensemble.tests.test_forest.X",
    "sklearn.ensemble.tests.test_forest.y",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.check_warm_start": {
  "data": {
   "lineno": 1062,
   "symbols_in_volume": [
    "ForestEstimator",
    "len",
    "set",
    "sklearn.ensemble.tests.test_forest.X",
    "sklearn.ensemble.tests.test_forest.hastie_X",
    "sklearn.ensemble.tests.test_forest.y",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.check_warm_start_clear": {
  "data": {
   "lineno": 1094,
   "symbols_in_volume": [
    "ForestEstimator",
    "sklearn.ensemble.tests.test_forest.X",
    "sklearn.ensemble.tests.test_forest.hastie_X",
    "sklearn.ensemble.tests.test_forest.y",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.check_warm_start_equal_n_estimators": {
  "data": {
   "lineno": 1131,
   "symbols_in_volume": [
    "ForestEstimator",
    "UserWarning",
    "sklearn.ensemble.tests.test_forest.X",
    "sklearn.ensemble.tests.test_forest.hastie_X",
    "sklearn.ensemble.tests.test_forest.y",
    "sklearn.utils._testing.assert_array_equal",
    "sklearn.utils._testing.assert_warns"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.check_warm_start_oob": {
  "data": {
   "lineno": 1157,
   "symbols_in_volume": [
    "ForestEstimator",
    "hasattr",
    "sklearn.ensemble.tests.test_forest.X",
    "sklearn.ensemble.tests.test_forest.hastie_X",
    "sklearn.ensemble.tests.test_forest.y",
    "sklearn.utils._testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.check_warm_start_smaller_n_estimators": {
  "data": {
   "lineno": 1116,
   "symbols_in_volume": [
    "ForestEstimator",
    "ValueError",
    "sklearn.ensemble.tests.test_forest.X",
    "sklearn.ensemble.tests.test_forest.hastie_X",
    "sklearn.ensemble.tests.test_forest.y",
    "sklearn.utils._testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.comb": {
  "data": {
   "shadows": "scipy.special.comb"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_forest.combinations": {
  "data": {
   "shadows": "itertools.combinations"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_forest.coo_matrix": {
  "data": {
   "shadows": "scipy.sparse.coo_matrix"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_forest.csc_matrix": {
  "data": {
   "shadows": "scipy.sparse.csc_matrix"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_forest.csr_matrix": {
  "data": {
   "shadows": "scipy.sparse.csr_matrix"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_forest.datasets": {
  "data": {
   "shadows": "sklearn.datasets"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_forest.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_forest.hastie_X": {
  "data": {
   "lineno": 81
  },
  "type": "constant"
 },
 "sklearn.ensemble.tests.test_forest.ignore_warnings": {
  "data": {
   "shadows": "sklearn.utils._testing.ignore_warnings"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_forest.iris": {
  "data": {
   "lineno": 69
  },
  "type": "constant"
 },
 "sklearn.ensemble.tests.test_forest.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_forest.joblib": {
  "data": {
   "shadows": "joblib"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_forest.make_classification": {
  "data": {
   "shadows": "sklearn.datasets.make_classification"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_forest.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_forest.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_forest.parse_version": {
  "data": {
   "shadows": "sklearn.utils.fixes.parse_version"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_forest.perm": {
  "data": {
   "lineno": 71
  },
  "type": "constant"
 },
 "sklearn.ensemble.tests.test_forest.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_forest.product": {
  "data": {
   "shadows": "itertools.product"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_forest.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_forest.rng": {
  "data": {
   "lineno": 70
  },
  "type": "constant"
 },
 "sklearn.ensemble.tests.test_forest.skip_if_no_parallel": {
  "data": {
   "shadows": "sklearn.utils._testing.skip_if_no_parallel"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_forest.test_1d_input": {
  "data": {
   "lineno": 955,
   "symbols_in_volume": [
    "sklearn.ensemble.tests.test_forest.X",
    "sklearn.ensemble.tests.test_forest.check_1d_input",
    "sklearn.ensemble.tests.test_forest.iris",
    "sklearn.ensemble.tests.test_forest.pytest",
    "sklearn.ensemble.tests.test_forest.y",
    "sklearn.utils._testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_backend_respected": {
  "data": {
   "lineno": 1276,
   "symbols_in_volume": [
    "sklearn.ensemble.RandomForestClassifier",
    "sklearn.ensemble.tests.test_forest.X",
    "sklearn.ensemble.tests.test_forest.joblib",
    "sklearn.ensemble.tests.test_forest.pytest",
    "sklearn.ensemble.tests.test_forest.y",
    "sklearn.utils._testing.skip_if_no_parallel",
    "sklearn.utils.fixes.parse_version"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_class_weight_balanced_and_bootstrap_multi_output": {
  "data": {
   "lineno": 1027,
   "symbols_in_volume": [
    "sklearn.ensemble.tests.test_forest.FOREST_CLASSIFIERS",
    "sklearn.ensemble.tests.test_forest.check_class_weight_balanced_and_bootstrap_multi_output",
    "sklearn.ensemble.tests.test_forest.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_class_weight_errors": {
  "data": {
   "lineno": 1057,
   "symbols_in_volume": [
    "sklearn.ensemble.tests.test_forest.FOREST_CLASSIFIERS",
    "sklearn.ensemble.tests.test_forest.check_class_weight_errors",
    "sklearn.ensemble.tests.test_forest.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_class_weights": {
  "data": {
   "lineno": 1008,
   "symbols_in_volume": [
    "sklearn.ensemble.tests.test_forest.FOREST_CLASSIFIERS",
    "sklearn.ensemble.tests.test_forest.check_class_weights",
    "sklearn.ensemble.tests.test_forest.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_classes_shape": {
  "data": {
   "lineno": 588,
   "symbols_in_volume": [
    "sklearn.ensemble.tests.test_forest.FOREST_CLASSIFIERS",
    "sklearn.ensemble.tests.test_forest.check_classes_shape",
    "sklearn.ensemble.tests.test_forest.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_classification_toy": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "sklearn.ensemble.tests.test_forest.FOREST_CLASSIFIERS",
    "sklearn.ensemble.tests.test_forest.check_classification_toy",
    "sklearn.ensemble.tests.test_forest.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_decision_path": {
  "data": {
   "lineno": 1227,
   "symbols_in_volume": [
    "sklearn.ensemble.tests.test_forest.check_decision_path",
    "sklearn.ensemble.tests.test_forest.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_distribution": {
  "data": {
   "lineno": 675,
   "symbols_in_volume": [
    "collections.defaultdict",
    "int",
    "len",
    "numpy.empty",
    "numpy.random.randint",
    "sklearn.ensemble.ExtraTreesRegressor",
    "sklearn.ensemble.tests.test_forest.X",
    "sklearn.ensemble.tests.test_forest.rng",
    "sklearn.ensemble.tests.test_forest.y",
    "sklearn.utils.validation.check_random_state",
    "sorted",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_dtype_convert": {
  "data": {
   "lineno": 1194,
   "symbols_in_volume": [
    "numpy.eye",
    "sklearn.ensemble.RandomForestClassifier",
    "sklearn.ensemble.tests.test_forest.X",
    "sklearn.ensemble.tests.test_forest.y",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_forest_degenerate_feature_importances": {
  "data": {
   "lineno": 1302,
   "symbols_in_volume": [
    "numpy.float64",
    "numpy.ones",
    "numpy.zeros",
    "sklearn.ensemble.RandomForestRegressor",
    "sklearn.ensemble.tests.test_forest.X",
    "sklearn.ensemble.tests.test_forest.y",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_forest_feature_importances_sum": {
  "data": {
   "lineno": 1294,
   "symbols_in_volume": [
    "sklearn.datasets.make_classification",
    "sklearn.ensemble.RandomForestClassifier",
    "sklearn.ensemble.tests.test_forest.X",
    "sklearn.ensemble.tests.test_forest.math",
    "sklearn.ensemble.tests.test_forest.y"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_forest_y_sparse": {
  "data": {
   "lineno": 1340,
   "symbols_in_volume": [
    "ValueError",
    "scipy.sparse.csr_matrix",
    "sklearn.ensemble.RandomForestClassifier",
    "sklearn.ensemble.tests.test_forest.X",
    "sklearn.ensemble.tests.test_forest.pytest",
    "sklearn.ensemble.tests.test_forest.y"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_gridsearch": {
  "data": {
   "lineno": 448,
   "symbols_in_volume": [
    "sklearn.ensemble.tests.test_forest.FOREST_CLASSIFIERS",
    "sklearn.ensemble.tests.test_forest.check_gridsearch",
    "sklearn.ensemble.tests.test_forest.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_importances": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "itertools.product",
    "numpy.float32",
    "numpy.float64",
    "sklearn.ensemble.tests.test_forest.FOREST_CLASSIFIERS",
    "sklearn.ensemble.tests.test_forest.FOREST_REGRESSORS",
    "sklearn.ensemble.tests.test_forest.check_importances",
    "sklearn.ensemble.tests.test_forest.itertools",
    "sklearn.ensemble.tests.test_forest.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_importances_asymptotic": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "bool",
    "entropy",
    "mdi_importance",
    "numpy.abs",
    "numpy.array",
    "numpy.zeros",
    "range",
    "sklearn.ensemble.ExtraTreesClassifier",
    "sklearn.ensemble.tests.test_forest.X",
    "sklearn.ensemble.tests.test_forest.y",
    "sklearn.utils._testing.assert_almost_equal",
    "sum"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_importances_asymptotic.binomial": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "int",
    "scipy.special.comb"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_importances_asymptotic.entropy": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "len",
    "numpy.bincount",
    "numpy.log2"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_importances_asymptotic.mdi_importance": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "binomial",
    "bool",
    "entropy",
    "itertools.combinations",
    "itertools.product",
    "len",
    "list",
    "numpy.ones",
    "numpy.unique",
    "range",
    "sklearn.ensemble.tests.test_forest.X",
    "sklearn.ensemble.tests.test_forest.y",
    "sum"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_iris": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "sklearn.ensemble.tests.test_forest.FOREST_CLASSIFIERS",
    "sklearn.ensemble.tests.test_forest.check_iris_criterion",
    "sklearn.ensemble.tests.test_forest.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_little_tree_with_small_max_samples": {
  "data": {
   "lineno": 1349,
   "symbols_in_volume": [
    "ForestClass",
    "numpy.random.RandomState",
    "sklearn.ensemble.RandomForestClassifier",
    "sklearn.ensemble.RandomForestRegressor",
    "sklearn.ensemble.tests.test_forest.X",
    "sklearn.ensemble.tests.test_forest.pytest",
    "sklearn.ensemble.tests.test_forest.rng",
    "sklearn.ensemble.tests.test_forest.y"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_max_leaf_nodes_max_depth": {
  "data": {
   "lineno": 742,
   "symbols_in_volume": [
    "sklearn.ensemble.tests.test_forest.check_max_leaf_nodes_max_depth",
    "sklearn.ensemble.tests.test_forest.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_max_samples_exceptions": {
  "data": {
   "lineno": 1311,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "int",
    "numpy.inf",
    "numpy.nan",
    "numpy.ones",
    "sklearn.ensemble.tests.test_forest.X",
    "sklearn.ensemble.tests.test_forest.pytest",
    "sklearn.ensemble.tests.test_forest.y"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_memory_layout": {
  "data": {
   "lineno": 936,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.float64",
    "sklearn.ensemble.tests.test_forest.check_memory_layout",
    "sklearn.ensemble.tests.test_forest.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_min_impurity_decrease": {
  "data": {
   "lineno": 1248,
   "symbols_in_volume": [
    "Estimator",
    "sklearn.datasets.make_hastie_10_2",
    "sklearn.ensemble.ExtraTreesClassifier",
    "sklearn.ensemble.ExtraTreesRegressor",
    "sklearn.ensemble.RandomForestClassifier",
    "sklearn.ensemble.RandomForestRegressor",
    "sklearn.ensemble.tests.test_forest.X",
    "sklearn.ensemble.tests.test_forest.y"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_min_impurity_split": {
  "data": {
   "lineno": 1232,
   "symbols_in_volume": [
    "Estimator",
    "FutureWarning",
    "sklearn.datasets.make_hastie_10_2",
    "sklearn.ensemble.ExtraTreesClassifier",
    "sklearn.ensemble.ExtraTreesRegressor",
    "sklearn.ensemble.RandomForestClassifier",
    "sklearn.ensemble.RandomForestRegressor",
    "sklearn.ensemble.tests.test_forest.X",
    "sklearn.ensemble.tests.test_forest.y",
    "sklearn.utils._testing.assert_warns_message"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_min_samples_leaf": {
  "data": {
   "lineno": 813,
   "symbols_in_volume": [
    "sklearn.ensemble.tests.test_forest.check_min_samples_leaf",
    "sklearn.ensemble.tests.test_forest.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_min_samples_split": {
  "data": {
   "lineno": 777,
   "symbols_in_volume": [
    "sklearn.ensemble.tests.test_forest.check_min_samples_split",
    "sklearn.ensemble.tests.test_forest.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_min_weight_fraction_leaf": {
  "data": {
   "lineno": 848,
   "symbols_in_volume": [
    "sklearn.ensemble.tests.test_forest.check_min_weight_fraction_leaf",
    "sklearn.ensemble.tests.test_forest.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_multioutput": {
  "data": {
   "lineno": 535,
   "symbols_in_volume": [
    "sklearn.ensemble.tests.test_forest.check_multioutput",
    "sklearn.ensemble.tests.test_forest.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_multioutput_string": {
  "data": {
   "lineno": 540,
   "symbols_in_volume": [
    "len",
    "numpy.errstate",
    "sklearn.ensemble.tests.test_forest.FOREST_CLASSIFIERS",
    "sklearn.ensemble.tests.test_forest.pytest",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_oob_score_classifiers": {
  "data": {
   "lineno": 395,
   "symbols_in_volume": [
    "scipy.sparse.csc_matrix",
    "sklearn.ensemble.tests.test_forest.FOREST_CLASSIFIERS",
    "sklearn.ensemble.tests.test_forest.check_oob_score",
    "sklearn.ensemble.tests.test_forest.iris",
    "sklearn.ensemble.tests.test_forest.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_oob_score_raise_error": {
  "data": {
   "lineno": 437,
   "symbols_in_volume": [
    "sklearn.ensemble.tests.test_forest.check_oob_score_raise_error",
    "sklearn.ensemble.tests.test_forest.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_oob_score_regressors": {
  "data": {
   "lineno": 406,
   "symbols_in_volume": [
    "scipy.sparse.csc_matrix",
    "sklearn.ensemble.tests.test_forest.FOREST_REGRESSORS",
    "sklearn.ensemble.tests.test_forest.check_oob_score",
    "sklearn.ensemble.tests.test_forest.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_parallel": {
  "data": {
   "lineno": 469,
   "symbols_in_volume": [
    "sklearn.ensemble.tests.test_forest.FOREST_CLASSIFIERS",
    "sklearn.ensemble.tests.test_forest.FOREST_REGRESSORS",
    "sklearn.ensemble.tests.test_forest.X",
    "sklearn.ensemble.tests.test_forest.check_parallel",
    "sklearn.ensemble.tests.test_forest.iris",
    "sklearn.ensemble.tests.test_forest.pytest",
    "sklearn.ensemble.tests.test_forest.y"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_parallel_train": {
  "data": {
   "lineno": 657,
   "symbols_in_volume": [
    "sklearn.ensemble.RandomForestClassifier",
    "sklearn.ensemble.tests.test_forest.rng",
    "sklearn.utils._testing.assert_array_almost_equal",
    "sklearn.utils.validation.check_random_state",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_pickle": {
  "data": {
   "lineno": 496,
   "symbols_in_volume": [
    "sklearn.ensemble.tests.test_forest.FOREST_CLASSIFIERS",
    "sklearn.ensemble.tests.test_forest.FOREST_REGRESSORS",
    "sklearn.ensemble.tests.test_forest.X",
    "sklearn.ensemble.tests.test_forest.check_pickle",
    "sklearn.ensemble.tests.test_forest.iris",
    "sklearn.ensemble.tests.test_forest.pytest",
    "sklearn.ensemble.tests.test_forest.y"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_probability": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "sklearn.ensemble.tests.test_forest.FOREST_CLASSIFIERS",
    "sklearn.ensemble.tests.test_forest.check_probability",
    "sklearn.ensemble.tests.test_forest.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_random_hasher": {
  "data": {
   "lineno": 624,
   "symbols_in_volume": [
    "sklearn.datasets.make_circles",
    "sklearn.decomposition.TruncatedSVD",
    "sklearn.ensemble.RandomTreesEmbedding",
    "sklearn.ensemble.tests.test_forest.X",
    "sklearn.ensemble.tests.test_forest.y",
    "sklearn.svm.LinearSVC",
    "sklearn.utils._testing.assert_array_equal",
    "sklearn.utils._testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_random_hasher_sparse_data": {
  "data": {
   "lineno": 649,
   "symbols_in_volume": [
    "scipy.sparse.csc_matrix",
    "sklearn.datasets.make_multilabel_classification",
    "sklearn.ensemble.RandomTreesEmbedding",
    "sklearn.ensemble.tests.test_forest.X",
    "sklearn.ensemble.tests.test_forest.y",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_random_trees_dense_equal": {
  "data": {
   "lineno": 606,
   "symbols_in_volume": [
    "sklearn.datasets.make_circles",
    "sklearn.ensemble.RandomTreesEmbedding",
    "sklearn.ensemble.tests.test_forest.X",
    "sklearn.ensemble.tests.test_forest.y",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_random_trees_dense_type": {
  "data": {
   "lineno": 593,
   "symbols_in_volume": [
    "numpy.ndarray",
    "sklearn.datasets.make_circles",
    "sklearn.ensemble.RandomTreesEmbedding",
    "sklearn.ensemble.tests.test_forest.X",
    "sklearn.ensemble.tests.test_forest.y",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_regression": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "sklearn.ensemble.tests.test_forest.FOREST_REGRESSORS",
    "sklearn.ensemble.tests.test_forest.check_regression_criterion",
    "sklearn.ensemble.tests.test_forest.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_regressor_attributes": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "sklearn.ensemble.tests.test_forest.FOREST_REGRESSORS",
    "sklearn.ensemble.tests.test_forest.check_regressor_attributes",
    "sklearn.ensemble.tests.test_forest.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_sparse_input": {
  "data": {
   "lineno": 879,
   "symbols_in_volume": [
    "scipy.sparse.coo_matrix",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "sklearn.datasets.make_multilabel_classification",
    "sklearn.ensemble.tests.test_forest.X",
    "sklearn.ensemble.tests.test_forest.check_sparse_input",
    "sklearn.ensemble.tests.test_forest.pytest",
    "sklearn.ensemble.tests.test_forest.y",
    "sparse_matrix"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_unfitted_feature_importances": {
  "data": {
   "lineno": 365,
   "symbols_in_volume": [
    "getattr",
    "sklearn.ensemble.tests.test_forest.pytest",
    "sklearn.exceptions.NotFittedError"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_warm_start": {
  "data": {
   "lineno": 1089,
   "symbols_in_volume": [
    "sklearn.ensemble.tests.test_forest.check_warm_start",
    "sklearn.ensemble.tests.test_forest.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_warm_start_clear": {
  "data": {
   "lineno": 1111,
   "symbols_in_volume": [
    "sklearn.ensemble.tests.test_forest.check_warm_start_clear",
    "sklearn.ensemble.tests.test_forest.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_warm_start_equal_n_estimators": {
  "data": {
   "lineno": 1152,
   "symbols_in_volume": [
    "sklearn.ensemble.tests.test_forest.check_warm_start_equal_n_estimators",
    "sklearn.ensemble.tests.test_forest.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_warm_start_oob": {
  "data": {
   "lineno": 1189,
   "symbols_in_volume": [
    "sklearn.ensemble.tests.test_forest.check_warm_start_oob",
    "sklearn.ensemble.tests.test_forest.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_warm_start_smaller_n_estimators": {
  "data": {
   "lineno": 1126,
   "symbols_in_volume": [
    "sklearn.ensemble.tests.test_forest.check_warm_start_smaller_n_estimators",
    "sklearn.ensemble.tests.test_forest.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.true_result": {
  "data": {
   "lineno": 60
  },
  "type": "constant"
 },
 "sklearn.ensemble.tests.test_forest.y": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "sklearn.ensemble.tests.test_gradient_boosting": {
  "data": {
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.datasets.load_iris",
    "sklearn.datasets.make_regression",
    "sklearn.ensemble.GradientBoostingClassifier",
    "sklearn.ensemble.GradientBoostingRegressor",
    "sklearn.ensemble.tests.test_gradient_boosting.iris",
    "sklearn.ensemble.tests.test_gradient_boosting.perm",
    "sklearn.ensemble.tests.test_gradient_boosting.rng",
    "sklearn.preprocessing.scale"
   ]
  },
  "type": "module"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.DataConversionWarning": {
  "data": {
   "shadows": "sklearn.exceptions.DataConversionWarning"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.DummyClassifier": {
  "data": {
   "shadows": "sklearn.dummy.DummyClassifier"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.DummyRegressor": {
  "data": {
   "shadows": "sklearn.dummy.DummyRegressor"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.GRADIENT_BOOSTING_ESTIMATORS": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.GradientBoostingClassifier": {
  "data": {
   "shadows": "sklearn.ensemble.GradientBoostingClassifier"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.GradientBoostingRegressor": {
  "data": {
   "shadows": "sklearn.ensemble.GradientBoostingRegressor"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.LinearRegression": {
  "data": {
   "shadows": "sklearn.linear_model.LinearRegression"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.LinearSVC": {
  "data": {
   "shadows": "sklearn.svm.LinearSVC"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.NoSampleWeightWrapper": {
  "data": {
   "shadows": "sklearn.utils._mocking.NoSampleWeightWrapper"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.NotFittedError": {
  "data": {
   "shadows": "sklearn.exceptions.NotFittedError"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.NuSVR": {
  "data": {
   "shadows": "sklearn.svm.NuSVR"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.OneHotEncoder": {
  "data": {
   "shadows": "sklearn.preprocessing.OneHotEncoder"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.StringIO": {
  "data": {
   "shadows": "io.StringIO"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.T": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.TREE_LEAF": {
  "data": {
   "shadows": "sklearn.tree._tree.TREE_LEAF"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.X": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "sklearn.ensemble.tests.test_gradient_boosting._make_multiclass": {
  "data": {
   "lineno": 1210,
   "symbols_in_volume": [
    "sklearn.datasets.make_classification"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.assert_almost_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_almost_equal"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.assert_raise_message": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_raise_message"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.assert_raises": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.assert_warns": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_warns"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.assert_warns_message": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_warns_message"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.check_random_state": {
  "data": {
   "shadows": "sklearn.utils.check_random_state"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.clone": {
  "data": {
   "shadows": "sklearn.base.clone"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.coo_matrix": {
  "data": {
   "shadows": "scipy.sparse.coo_matrix"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.csc_matrix": {
  "data": {
   "shadows": "scipy.sparse.csc_matrix"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.csr_matrix": {
  "data": {
   "shadows": "scipy.sparse.csr_matrix"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.datasets": {
  "data": {
   "shadows": "sklearn.datasets"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.early_stopping_monitor": {
  "data": {
   "lineno": 867
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.expit": {
  "data": {
   "shadows": "scipy.special.expit"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.fetch_california_housing": {
  "data": {
   "shadows": "sklearn.datasets.fetch_california_housing"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.iris": {
  "data": {
   "lineno": 61
  },
  "type": "constant"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.make_classification": {
  "data": {
   "shadows": "sklearn.datasets.make_classification"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.make_pipeline": {
  "data": {
   "shadows": "sklearn.pipeline.make_pipeline"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.make_regression": {
  "data": {
   "shadows": "sklearn.datasets.make_regression"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.mean_squared_error": {
  "data": {
   "shadows": "sklearn.metrics.mean_squared_error"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.perm": {
  "data": {
   "lineno": 62
  },
  "type": "constant"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.predict_stages": {
  "data": {
   "shadows": "sklearn.ensemble._gradient_boosting.predict_stages"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.rng": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.scale": {
  "data": {
   "shadows": "sklearn.preprocessing.scale"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.skip_if_32bit": {
  "data": {
   "shadows": "sklearn.utils._testing.skip_if_32bit"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_attr_error_raised_if_not_fitted": {
  "data": {
   "lineno": 1324,
   "symbols_in_volume": [
    "AttributeError",
    "sklearn.ensemble.GradientBoostingRegressor",
    "sklearn.ensemble.GradientBoostingRegressor.__name__",
    "sklearn.ensemble.tests.test_gradient_boosting.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_check_inputs_predict_stages": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": [
    "ValueError",
    "numpy.asfortranarray",
    "numpy.zeros",
    "scipy.sparse.csc_matrix",
    "sklearn.datasets.make_hastie_10_2",
    "sklearn.ensemble.GradientBoostingClassifier",
    "sklearn.ensemble._gradient_boosting.predict_stages",
    "sklearn.ensemble.tests.test_gradient_boosting.y",
    "sklearn.utils._testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_classification_synthetic": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "sklearn.datasets.make_hastie_10_2",
    "sklearn.ensemble.GradientBoostingClassifier",
    "sklearn.ensemble.tests.test_gradient_boosting.X",
    "sklearn.ensemble.tests.test_gradient_boosting.pytest",
    "sklearn.ensemble.tests.test_gradient_boosting.y"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_classification_toy": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.any",
    "sklearn.ensemble.GradientBoostingClassifier",
    "sklearn.ensemble.tests.test_gradient_boosting.T",
    "sklearn.ensemble.tests.test_gradient_boosting.X",
    "sklearn.ensemble.tests.test_gradient_boosting.pytest",
    "sklearn.ensemble.tests.test_gradient_boosting.true_result",
    "sklearn.ensemble.tests.test_gradient_boosting.y",
    "sklearn.utils._testing.assert_array_equal",
    "sklearn.utils._testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_complete_classification": {
  "data": {
   "lineno": 911,
   "symbols_in_volume": [
    "sklearn.datasets.make_hastie_10_2",
    "sklearn.ensemble.GradientBoostingClassifier",
    "sklearn.ensemble.tests.test_gradient_boosting.X",
    "sklearn.ensemble.tests.test_gradient_boosting.y",
    "sklearn.tree._tree.TREE_LEAF.shape"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_complete_regression": {
  "data": {
   "lineno": 927,
   "symbols_in_volume": [
    "sklearn.ensemble.GradientBoostingRegressor",
    "sklearn.ensemble.tests.test_gradient_boosting.y_reg",
    "sklearn.tree._tree.TREE_LEAF.shape"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_criterion_mae_deprecation": {
  "data": {
   "lineno": 1339,
   "symbols_in_volume": [
    "FutureWarning",
    "sklearn.ensemble.GradientBoostingClassifier",
    "sklearn.ensemble.GradientBoostingRegressor",
    "sklearn.ensemble.tests.test_gradient_boosting.X",
    "sklearn.ensemble.tests.test_gradient_boosting.pytest",
    "sklearn.ensemble.tests.test_gradient_boosting.y"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_degenerate_targets": {
  "data": {
   "lineno": 500,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.float64",
    "numpy.ones",
    "sklearn.ensemble.GradientBoostingClassifier",
    "sklearn.ensemble.GradientBoostingRegressor",
    "sklearn.ensemble.tests.test_gradient_boosting.X",
    "sklearn.ensemble.tests.test_gradient_boosting.rng",
    "sklearn.utils._testing.assert_array_equal",
    "sklearn.utils._testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_early_stopping_n_classes": {
  "data": {
   "lineno": 1282,
   "symbols_in_volume": [
    "ValueError",
    "gb",
    "gb.fit",
    "sklearn.ensemble.GradientBoostingClassifier",
    "sklearn.ensemble.tests.test_gradient_boosting.X",
    "sklearn.ensemble.tests.test_gradient_boosting.pytest",
    "sklearn.ensemble.tests.test_gradient_boosting.y"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_early_stopping_stratified": {
  "data": {
   "lineno": 1198,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.ensemble.GradientBoostingClassifier",
    "sklearn.ensemble.tests.test_gradient_boosting.X",
    "sklearn.ensemble.tests.test_gradient_boosting.pytest",
    "sklearn.ensemble.tests.test_gradient_boosting.y"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_feature_importance_regression": {
  "data": {
   "lineno": 348,
   "symbols_in_volume": [
    "numpy.argsort",
    "set",
    "sklearn.datasets.fetch_california_housing",
    "sklearn.ensemble.GradientBoostingRegressor",
    "sklearn.ensemble.tests.test_gradient_boosting.X",
    "sklearn.ensemble.tests.test_gradient_boosting.pytest",
    "sklearn.ensemble.tests.test_gradient_boosting.y",
    "sklearn.model_selection.train_test_split"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_feature_importances": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "GradientBoosting",
    "hasattr",
    "sklearn.ensemble.GradientBoostingClassifier",
    "sklearn.ensemble.GradientBoostingRegressor",
    "sklearn.ensemble.tests.test_gradient_boosting.X",
    "sklearn.ensemble.tests.test_gradient_boosting.iris",
    "sklearn.ensemble.tests.test_gradient_boosting.pytest",
    "sklearn.ensemble.tests.test_gradient_boosting.y",
    "sklearn.ensemble.tests.test_gradient_boosting.y_reg"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_float_class_labels": {
  "data": {
   "lineno": 542,
   "symbols_in_volume": [
    "len",
    "numpy.asarray",
    "numpy.float32",
    "sklearn.ensemble.GradientBoostingClassifier",
    "sklearn.ensemble.tests.test_gradient_boosting.T",
    "sklearn.ensemble.tests.test_gradient_boosting.X",
    "sklearn.ensemble.tests.test_gradient_boosting.true_result",
    "sklearn.ensemble.tests.test_gradient_boosting.y",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_gbdt_loss_alpha_error": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.ensemble.GradientBoostingRegressor",
    "sklearn.ensemble.tests.test_gradient_boosting.pytest",
    "sklearn.ensemble.tests.test_gradient_boosting.y_reg"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_gbdt_parameter_checks": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "GradientBoosting",
    "ValueError",
    "sklearn.ensemble.GradientBoostingClassifier",
    "sklearn.ensemble.GradientBoostingRegressor",
    "sklearn.ensemble.tests.test_gradient_boosting.X",
    "sklearn.ensemble.tests.test_gradient_boosting.iris",
    "sklearn.ensemble.tests.test_gradient_boosting.pytest",
    "sklearn.ensemble.tests.test_gradient_boosting.y",
    "sklearn.ensemble.tests.test_gradient_boosting.y_reg"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_gbr_degenerate_feature_importances": {
  "data": {
   "lineno": 1302,
   "symbols_in_volume": [
    "numpy.float64",
    "numpy.ones",
    "numpy.zeros",
    "sklearn.ensemble.GradientBoostingRegressor",
    "sklearn.ensemble.tests.test_gradient_boosting.X",
    "sklearn.ensemble.tests.test_gradient_boosting.y",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_gbr_deprecated_attr": {
  "data": {
   "lineno": 1312,
   "symbols_in_volume": [
    "FutureWarning",
    "numpy.ones",
    "numpy.zeros",
    "sklearn.ensemble.GradientBoostingRegressor",
    "sklearn.ensemble.tests.test_gradient_boosting.X",
    "sklearn.ensemble.tests.test_gradient_boosting.pytest",
    "sklearn.ensemble.tests.test_gradient_boosting.y"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_gradient_boosting_early_stopping": {
  "data": {
   "lineno": 1127,
   "symbols_in_volume": [
    "sklearn.datasets.make_classification",
    "sklearn.ensemble.GradientBoostingClassifier",
    "sklearn.ensemble.GradientBoostingRegressor",
    "sklearn.ensemble.tests.test_gradient_boosting.X",
    "sklearn.ensemble.tests.test_gradient_boosting.y",
    "sklearn.model_selection.train_test_split"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_gradient_boosting_init_wrong_methods": {
  "data": {
   "lineno": 1268,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.ensemble.GradientBoostingClassifier",
    "sklearn.ensemble.GradientBoostingRegressor",
    "sklearn.ensemble.tests.test_gradient_boosting.X",
    "sklearn.ensemble.tests.test_gradient_boosting.pytest",
    "sklearn.ensemble.tests.test_gradient_boosting.y",
    "sklearn.preprocessing.OneHotEncoder",
    "sklearn.svm.LinearSVC"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_gradient_boosting_validation_fraction": {
  "data": {
   "lineno": 1162,
   "symbols_in_volume": [
    "sklearn.base.clone",
    "sklearn.datasets.make_classification",
    "sklearn.ensemble.GradientBoostingClassifier",
    "sklearn.ensemble.GradientBoostingRegressor",
    "sklearn.ensemble.tests.test_gradient_boosting.X",
    "sklearn.ensemble.tests.test_gradient_boosting.y",
    "sklearn.model_selection.train_test_split"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_gradient_boosting_with_init": {
  "data": {
   "lineno": 1214,
   "symbols_in_volume": [
    "ValueError",
    "dataset_maker",
    "gb",
    "init_estimator",
    "numpy.random.RandomState",
    "sklearn.datasets.make_classification",
    "sklearn.datasets.make_regression",
    "sklearn.dummy.DummyClassifier",
    "sklearn.dummy.DummyRegressor",
    "sklearn.ensemble.GradientBoostingClassifier",
    "sklearn.ensemble.GradientBoostingRegressor",
    "sklearn.ensemble.tests.test_gradient_boosting.X",
    "sklearn.ensemble.tests.test_gradient_boosting._make_multiclass",
    "sklearn.ensemble.tests.test_gradient_boosting.pytest",
    "sklearn.ensemble.tests.test_gradient_boosting.y",
    "sklearn.utils._mocking.NoSampleWeightWrapper"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_gradient_boosting_with_init_pipeline": {
  "data": {
   "lineno": 1241,
   "symbols_in_volume": [
    "ValueError",
    "gb",
    "gb.fit",
    "numpy.ones",
    "sklearn.datasets.make_regression",
    "sklearn.ensemble.GradientBoostingRegressor",
    "sklearn.ensemble.tests.test_gradient_boosting.X",
    "sklearn.ensemble.tests.test_gradient_boosting.pytest",
    "sklearn.ensemble.tests.test_gradient_boosting.y",
    "sklearn.linear_model.LinearRegression",
    "sklearn.pipeline.make_pipeline",
    "sklearn.svm.NuSVR"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_iris": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "len",
    "numpy.ones",
    "sklearn.ensemble.GradientBoostingClassifier",
    "sklearn.ensemble.tests.test_gradient_boosting.iris",
    "sklearn.ensemble.tests.test_gradient_boosting.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_max_feature_auto": {
  "data": {
   "lineno": 377,
   "symbols_in_volume": [
    "int",
    "numpy.log2",
    "numpy.sqrt",
    "sklearn.datasets.make_hastie_10_2",
    "sklearn.ensemble.GradientBoostingClassifier",
    "sklearn.ensemble.GradientBoostingRegressor",
    "sklearn.ensemble.tests.test_gradient_boosting.X",
    "sklearn.ensemble.tests.test_gradient_boosting.y"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_max_feature_regression": {
  "data": {
   "lineno": 333,
   "symbols_in_volume": [
    "sklearn.datasets.make_hastie_10_2",
    "sklearn.ensemble.GradientBoostingClassifier",
    "sklearn.ensemble.tests.test_gradient_boosting.X",
    "sklearn.ensemble.tests.test_gradient_boosting.y"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_max_leaf_nodes_max_depth": {
  "data": {
   "lineno": 981,
   "symbols_in_volume": [
    "GBEstimator",
    "sklearn.datasets.make_hastie_10_2",
    "sklearn.ensemble.tests.test_gradient_boosting.GRADIENT_BOOSTING_ESTIMATORS",
    "sklearn.ensemble.tests.test_gradient_boosting.X",
    "sklearn.ensemble.tests.test_gradient_boosting.pytest",
    "sklearn.ensemble.tests.test_gradient_boosting.y"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_mem_layout": {
  "data": {
   "lineno": 569,
   "symbols_in_volume": [
    "len",
    "numpy.asarray",
    "numpy.ascontiguousarray",
    "numpy.asfortranarray",
    "numpy.int32",
    "sklearn.ensemble.GradientBoostingClassifier",
    "sklearn.ensemble.tests.test_gradient_boosting.T",
    "sklearn.ensemble.tests.test_gradient_boosting.X",
    "sklearn.ensemble.tests.test_gradient_boosting.true_result",
    "sklearn.ensemble.tests.test_gradient_boosting.y",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_min_impurity_decrease": {
  "data": {
   "lineno": 1011,
   "symbols_in_volume": [
    "GBEstimator",
    "sklearn.datasets.make_hastie_10_2",
    "sklearn.ensemble.tests.test_gradient_boosting.GRADIENT_BOOSTING_ESTIMATORS",
    "sklearn.ensemble.tests.test_gradient_boosting.X",
    "sklearn.ensemble.tests.test_gradient_boosting.pytest",
    "sklearn.ensemble.tests.test_gradient_boosting.y"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_min_impurity_split": {
  "data": {
   "lineno": 997,
   "symbols_in_volume": [
    "FutureWarning",
    "GBEstimator",
    "sklearn.datasets.make_hastie_10_2",
    "sklearn.ensemble.tests.test_gradient_boosting.GRADIENT_BOOSTING_ESTIMATORS",
    "sklearn.ensemble.tests.test_gradient_boosting.X",
    "sklearn.ensemble.tests.test_gradient_boosting.pytest",
    "sklearn.ensemble.tests.test_gradient_boosting.y",
    "sklearn.utils._testing.assert_warns_message"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_monitor_early_stopping": {
  "data": {
   "lineno": 875,
   "symbols_in_volume": [
    "Cls",
    "sklearn.datasets.make_hastie_10_2",
    "sklearn.ensemble.tests.test_gradient_boosting.GRADIENT_BOOSTING_ESTIMATORS",
    "sklearn.ensemble.tests.test_gradient_boosting.X",
    "sklearn.ensemble.tests.test_gradient_boosting.early_stopping_monitor",
    "sklearn.ensemble.tests.test_gradient_boosting.pytest",
    "sklearn.ensemble.tests.test_gradient_boosting.y"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_more_verbose_output": {
  "data": {
   "lineno": 659,
   "symbols_in_volume": [
    "io.StringIO",
    "sklearn.ensemble.GradientBoostingClassifier",
    "sklearn.ensemble.tests.test_gradient_boosting.X",
    "sklearn.ensemble.tests.test_gradient_boosting.sys",
    "sklearn.ensemble.tests.test_gradient_boosting.y",
    "sum"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_non_uniform_weights_toy_edge_case_clf": {
  "data": {
   "lineno": 1070,
   "symbols_in_volume": [
    "sklearn.ensemble.GradientBoostingClassifier",
    "sklearn.ensemble.tests.test_gradient_boosting.X",
    "sklearn.ensemble.tests.test_gradient_boosting.y",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_non_uniform_weights_toy_edge_case_reg": {
  "data": {
   "lineno": 1055,
   "symbols_in_volume": [
    "sklearn.ensemble.GradientBoostingRegressor",
    "sklearn.ensemble.tests.test_gradient_boosting.X",
    "sklearn.ensemble.tests.test_gradient_boosting.y"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_oob_improvement": {
  "data": {
   "lineno": 598,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.ensemble.GradientBoostingClassifier",
    "sklearn.ensemble.tests.test_gradient_boosting.X",
    "sklearn.ensemble.tests.test_gradient_boosting.y",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_oob_improvement_raise": {
  "data": {
   "lineno": 610,
   "symbols_in_volume": [
    "AttributeError",
    "sklearn.ensemble.GradientBoostingClassifier",
    "sklearn.ensemble.tests.test_gradient_boosting.X",
    "sklearn.ensemble.tests.test_gradient_boosting.y",
    "sklearn.utils._testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_oob_multilcass_iris": {
  "data": {
   "lineno": 618,
   "symbols_in_volume": [
    "sklearn.ensemble.GradientBoostingClassifier",
    "sklearn.ensemble.tests.test_gradient_boosting.iris"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_probability_exponential": {
  "data": {
   "lineno": 1033,
   "symbols_in_volume": [
    "ValueError",
    "numpy.all",
    "scipy.special.expit",
    "sklearn.ensemble.GradientBoostingClassifier",
    "sklearn.ensemble.tests.test_gradient_boosting.T",
    "sklearn.ensemble.tests.test_gradient_boosting.X",
    "sklearn.ensemble.tests.test_gradient_boosting.true_result",
    "sklearn.ensemble.tests.test_gradient_boosting.y",
    "sklearn.utils._testing.assert_array_almost_equal",
    "sklearn.utils._testing.assert_array_equal",
    "sklearn.utils._testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_probability_log": {
  "data": {
   "lineno": 284,
   "symbols_in_volume": [
    "ValueError",
    "numpy.all",
    "sklearn.ensemble.GradientBoostingClassifier",
    "sklearn.ensemble.tests.test_gradient_boosting.T",
    "sklearn.ensemble.tests.test_gradient_boosting.X",
    "sklearn.ensemble.tests.test_gradient_boosting.true_result",
    "sklearn.ensemble.tests.test_gradient_boosting.y",
    "sklearn.utils._testing.assert_array_equal",
    "sklearn.utils._testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_quantile_loss": {
  "data": {
   "lineno": 514,
   "symbols_in_volume": [
    "sklearn.ensemble.GradientBoostingRegressor",
    "sklearn.ensemble.tests.test_gradient_boosting.y_reg",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_regression_dataset": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "len",
    "numpy.ones",
    "sklearn.ensemble.GradientBoostingRegressor",
    "sklearn.ensemble.tests.test_gradient_boosting.pytest",
    "sklearn.ensemble.tests.test_gradient_boosting.y_reg",
    "sklearn.metrics.mean_squared_error"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_regression_synthetic": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "sklearn.datasets.make_friedman1",
    "sklearn.datasets.make_friedman2",
    "sklearn.datasets.make_friedman3",
    "sklearn.ensemble.GradientBoostingRegressor",
    "sklearn.ensemble.tests.test_gradient_boosting.X",
    "sklearn.ensemble.tests.test_gradient_boosting.y",
    "sklearn.metrics.mean_squared_error",
    "sklearn.utils.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_serialization": {
  "data": {
   "lineno": 480,
   "symbols_in_volume": [
    "ImportError",
    "cPickle.HIGHEST_PROTOCOL",
    "cPickle.dumps",
    "cPickle.loads",
    "len",
    "sklearn.ensemble.GradientBoostingClassifier",
    "sklearn.ensemble.tests.test_gradient_boosting.T",
    "sklearn.ensemble.tests.test_gradient_boosting.X",
    "sklearn.ensemble.tests.test_gradient_boosting.true_result",
    "sklearn.ensemble.tests.test_gradient_boosting.y",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_shape_y": {
  "data": {
   "lineno": 554,
   "symbols_in_volume": [
    "len",
    "numpy.asarray",
    "numpy.int32",
    "numpy.newaxis",
    "sklearn.ensemble.GradientBoostingClassifier",
    "sklearn.ensemble.tests.test_gradient_boosting.T",
    "sklearn.ensemble.tests.test_gradient_boosting.X",
    "sklearn.ensemble.tests.test_gradient_boosting.true_result",
    "sklearn.ensemble.tests.test_gradient_boosting.y",
    "sklearn.exceptions.DataConversionWarning",
    "sklearn.utils._testing.assert_array_equal",
    "sklearn.utils._testing.assert_warns"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_single_class_with_sample_weight": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.ensemble.GradientBoostingClassifier",
    "sklearn.ensemble.tests.test_gradient_boosting.X",
    "sklearn.ensemble.tests.test_gradient_boosting.pytest",
    "sklearn.ensemble.tests.test_gradient_boosting.y"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_sparse_input": {
  "data": {
   "lineno": 1084,
   "symbols_in_volume": [
    "EstimatorClass",
    "issubclass",
    "scipy.sparse.coo_matrix",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "sklearn.datasets.make_multilabel_classification",
    "sklearn.ensemble.GradientBoostingClassifier",
    "sklearn.ensemble.GradientBoostingRegressor",
    "sklearn.ensemble.tests.test_gradient_boosting.X",
    "sklearn.ensemble.tests.test_gradient_boosting.pytest",
    "sklearn.ensemble.tests.test_gradient_boosting.y",
    "sklearn.utils._testing.assert_array_almost_equal",
    "sklearn.utils._testing.skip_if_32bit",
    "sparse_matrix",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_staged_functions_defensive": {
  "data": {
   "lineno": 461,
   "symbols_in_volume": [
    "Estimator",
    "getattr",
    "int",
    "list",
    "numpy.all",
    "numpy.random.RandomState",
    "sklearn.ensemble.tests.test_gradient_boosting.GRADIENT_BOOSTING_ESTIMATORS",
    "sklearn.ensemble.tests.test_gradient_boosting.X",
    "sklearn.ensemble.tests.test_gradient_boosting.pytest",
    "sklearn.ensemble.tests.test_gradient_boosting.rng",
    "sklearn.ensemble.tests.test_gradient_boosting.warnings",
    "sklearn.ensemble.tests.test_gradient_boosting.y",
    "staged_func"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_staged_predict": {
  "data": {
   "lineno": 411,
   "symbols_in_volume": [
    "ValueError",
    "numpy.float64",
    "numpy.fromiter",
    "sklearn.datasets.make_friedman1",
    "sklearn.ensemble.GradientBoostingRegressor",
    "sklearn.ensemble.tests.test_gradient_boosting.X",
    "sklearn.ensemble.tests.test_gradient_boosting.y",
    "sklearn.utils._testing.assert_array_almost_equal",
    "sklearn.utils._testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_staged_predict_proba": {
  "data": {
   "lineno": 433,
   "symbols_in_volume": [
    "numpy.float64",
    "numpy.fromiter",
    "sklearn.datasets.make_hastie_10_2",
    "sklearn.ensemble.GradientBoostingClassifier",
    "sklearn.ensemble.tests.test_gradient_boosting.X",
    "sklearn.ensemble.tests.test_gradient_boosting.y",
    "sklearn.exceptions.NotFittedError",
    "sklearn.utils._testing.assert_array_almost_equal",
    "sklearn.utils._testing.assert_array_equal",
    "sklearn.utils._testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_symbol_labels": {
  "data": {
   "lineno": 531,
   "symbols_in_volume": [
    "len",
    "map",
    "sklearn.ensemble.GradientBoostingClassifier",
    "sklearn.ensemble.tests.test_gradient_boosting.T",
    "sklearn.ensemble.tests.test_gradient_boosting.X",
    "sklearn.ensemble.tests.test_gradient_boosting.true_result",
    "sklearn.ensemble.tests.test_gradient_boosting.y",
    "sklearn.utils._testing.assert_array_equal",
    "sklearn.utils.tosequence",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_verbose_output": {
  "data": {
   "lineno": 633,
   "symbols_in_volume": [
    "io.StringIO",
    "sklearn.ensemble.GradientBoostingClassifier",
    "sklearn.ensemble.tests.test_gradient_boosting.X",
    "sklearn.ensemble.tests.test_gradient_boosting.sys",
    "sklearn.ensemble.tests.test_gradient_boosting.y",
    "sum"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_warm_start": {
  "data": {
   "lineno": 684,
   "symbols_in_volume": [
    "Cls",
    "sklearn.datasets.make_hastie_10_2",
    "sklearn.ensemble.GradientBoostingRegressor",
    "sklearn.ensemble.tests.test_gradient_boosting.GRADIENT_BOOSTING_ESTIMATORS",
    "sklearn.ensemble.tests.test_gradient_boosting.X",
    "sklearn.ensemble.tests.test_gradient_boosting.pytest",
    "sklearn.ensemble.tests.test_gradient_boosting.y",
    "sklearn.utils._testing.assert_array_almost_equal",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_warm_start_clear": {
  "data": {
   "lineno": 736,
   "symbols_in_volume": [
    "Cls",
    "sklearn.datasets.make_hastie_10_2",
    "sklearn.ensemble.tests.test_gradient_boosting.GRADIENT_BOOSTING_ESTIMATORS",
    "sklearn.ensemble.tests.test_gradient_boosting.X",
    "sklearn.ensemble.tests.test_gradient_boosting.pytest",
    "sklearn.ensemble.tests.test_gradient_boosting.y",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_warm_start_equal_n_estimators": {
  "data": {
   "lineno": 771,
   "symbols_in_volume": [
    "Cls",
    "sklearn.base.clone",
    "sklearn.datasets.make_hastie_10_2",
    "sklearn.ensemble.tests.test_gradient_boosting.GRADIENT_BOOSTING_ESTIMATORS",
    "sklearn.ensemble.tests.test_gradient_boosting.X",
    "sklearn.ensemble.tests.test_gradient_boosting.pytest",
    "sklearn.ensemble.tests.test_gradient_boosting.y",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_warm_start_fortran": {
  "data": {
   "lineno": 847,
   "symbols_in_volume": [
    "Cls",
    "numpy.asfortranarray",
    "sklearn.datasets.make_hastie_10_2",
    "sklearn.ensemble.tests.test_gradient_boosting.GRADIENT_BOOSTING_ESTIMATORS",
    "sklearn.ensemble.tests.test_gradient_boosting.X",
    "sklearn.ensemble.tests.test_gradient_boosting.pytest",
    "sklearn.ensemble.tests.test_gradient_boosting.y",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_warm_start_max_depth": {
  "data": {
   "lineno": 721,
   "symbols_in_volume": [
    "Cls",
    "range",
    "sklearn.datasets.make_hastie_10_2",
    "sklearn.ensemble.tests.test_gradient_boosting.GRADIENT_BOOSTING_ESTIMATORS",
    "sklearn.ensemble.tests.test_gradient_boosting.X",
    "sklearn.ensemble.tests.test_gradient_boosting.pytest",
    "sklearn.ensemble.tests.test_gradient_boosting.y"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_warm_start_n_estimators": {
  "data": {
   "lineno": 706,
   "symbols_in_volume": [
    "Cls",
    "sklearn.datasets.make_hastie_10_2",
    "sklearn.ensemble.tests.test_gradient_boosting.GRADIENT_BOOSTING_ESTIMATORS",
    "sklearn.ensemble.tests.test_gradient_boosting.X",
    "sklearn.ensemble.tests.test_gradient_boosting.pytest",
    "sklearn.ensemble.tests.test_gradient_boosting.y",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_warm_start_oob": {
  "data": {
   "lineno": 800,
   "symbols_in_volume": [
    "Cls",
    "sklearn.datasets.make_hastie_10_2",
    "sklearn.ensemble.tests.test_gradient_boosting.GRADIENT_BOOSTING_ESTIMATORS",
    "sklearn.ensemble.tests.test_gradient_boosting.X",
    "sklearn.ensemble.tests.test_gradient_boosting.pytest",
    "sklearn.ensemble.tests.test_gradient_boosting.y",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_warm_start_oob_switch": {
  "data": {
   "lineno": 785,
   "symbols_in_volume": [
    "Cls",
    "bool",
    "numpy.zeros",
    "sklearn.datasets.make_hastie_10_2",
    "sklearn.ensemble.tests.test_gradient_boosting.GRADIENT_BOOSTING_ESTIMATORS",
    "sklearn.ensemble.tests.test_gradient_boosting.X",
    "sklearn.ensemble.tests.test_gradient_boosting.pytest",
    "sklearn.ensemble.tests.test_gradient_boosting.y",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_warm_start_smaller_n_estimators": {
  "data": {
   "lineno": 761,
   "symbols_in_volume": [
    "Cls",
    "ValueError",
    "sklearn.datasets.make_hastie_10_2",
    "sklearn.ensemble.tests.test_gradient_boosting.GRADIENT_BOOSTING_ESTIMATORS",
    "sklearn.ensemble.tests.test_gradient_boosting.X",
    "sklearn.ensemble.tests.test_gradient_boosting.pytest",
    "sklearn.ensemble.tests.test_gradient_boosting.y",
    "sklearn.utils._testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_warm_start_sparse": {
  "data": {
   "lineno": 818,
   "symbols_in_volume": [
    "Cls",
    "scipy.sparse.coo_matrix",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "sklearn.datasets.make_hastie_10_2",
    "sklearn.ensemble.tests.test_gradient_boosting.GRADIENT_BOOSTING_ESTIMATORS",
    "sklearn.ensemble.tests.test_gradient_boosting.X",
    "sklearn.ensemble.tests.test_gradient_boosting.pytest",
    "sklearn.ensemble.tests.test_gradient_boosting.y",
    "sklearn.utils._testing.assert_array_almost_equal",
    "sparse_constructor"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_warm_start_wo_nestimators_change": {
  "data": {
   "lineno": 1023,
   "symbols_in_volume": [
    "sklearn.ensemble.GradientBoostingClassifier"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_warm_start_zero_n_estimators": {
  "data": {
   "lineno": 751,
   "symbols_in_volume": [
    "Cls",
    "ValueError",
    "sklearn.datasets.make_hastie_10_2",
    "sklearn.ensemble.tests.test_gradient_boosting.GRADIENT_BOOSTING_ESTIMATORS",
    "sklearn.ensemble.tests.test_gradient_boosting.X",
    "sklearn.ensemble.tests.test_gradient_boosting.pytest",
    "sklearn.ensemble.tests.test_gradient_boosting.y",
    "sklearn.utils._testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_wrong_type_loss_function": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "GradientBoosting",
    "ValueError",
    "sklearn.ensemble.GradientBoostingClassifier",
    "sklearn.ensemble.GradientBoostingRegressor",
    "sklearn.ensemble.tests.test_gradient_boosting.X",
    "sklearn.ensemble.tests.test_gradient_boosting.pytest",
    "sklearn.ensemble.tests.test_gradient_boosting.y"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_zero_estimator_clf": {
  "data": {
   "lineno": 956,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "sklearn.ensemble.GradientBoostingClassifier",
    "sklearn.ensemble.tests.test_gradient_boosting.X",
    "sklearn.ensemble.tests.test_gradient_boosting.iris",
    "sklearn.ensemble.tests.test_gradient_boosting.y",
    "sklearn.utils._testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_zero_estimator_reg": {
  "data": {
   "lineno": 941,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.ensemble.GradientBoostingRegressor",
    "sklearn.ensemble.tests.test_gradient_boosting.y_reg",
    "sklearn.metrics.mean_squared_error",
    "sklearn.utils._testing.assert_almost_equal",
    "sklearn.utils._testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.tosequence": {
  "data": {
   "shadows": "sklearn.utils.tosequence"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.train_test_split": {
  "data": {
   "shadows": "sklearn.model_selection.train_test_split"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.true_result": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.y": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.y_reg": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "sklearn.ensemble.tests.test_gradient_boosting_loss_functions": {
  "data": {},
  "type": "module"
 },
 "sklearn.ensemble.tests.test_gradient_boosting_loss_functions.BinomialDeviance": {
  "data": {
   "shadows": "sklearn.ensemble._gb_losses.BinomialDeviance"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_gradient_boosting_loss_functions.ExponentialLoss": {
  "data": {
   "shadows": "sklearn.ensemble._gb_losses.ExponentialLoss"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_gradient_boosting_loss_functions.HuberLossFunction": {
  "data": {
   "shadows": "sklearn.ensemble._gb_losses.HuberLossFunction"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_gradient_boosting_loss_functions.LOSS_FUNCTIONS": {
  "data": {
   "shadows": "sklearn.ensemble._gb_losses.LOSS_FUNCTIONS"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_gradient_boosting_loss_functions.LeastAbsoluteError": {
  "data": {
   "shadows": "sklearn.ensemble._gb_losses.LeastAbsoluteError"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_gradient_boosting_loss_functions.LeastSquaresError": {
  "data": {
   "shadows": "sklearn.ensemble._gb_losses.LeastSquaresError"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_gradient_boosting_loss_functions.MultinomialDeviance": {
  "data": {
   "shadows": "sklearn.ensemble._gb_losses.MultinomialDeviance"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_gradient_boosting_loss_functions.QuantileLossFunction": {
  "data": {
   "shadows": "sklearn.ensemble._gb_losses.QuantileLossFunction"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_gradient_boosting_loss_functions.RegressionLossFunction": {
  "data": {
   "shadows": "sklearn.ensemble._gb_losses.RegressionLossFunction"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_gradient_boosting_loss_functions.approx": {
  "data": {
   "shadows": "pytest.approx"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_gradient_boosting_loss_functions.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_gradient_boosting_loss_functions.check_random_state": {
  "data": {
   "shadows": "sklearn.utils.check_random_state"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_gradient_boosting_loss_functions.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_gradient_boosting_loss_functions.product": {
  "data": {
   "shadows": "itertools.product"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_gradient_boosting_loss_functions.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_gradient_boosting_loss_functions.test_binomial_deviance": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "alt_dev",
    "alt_ng",
    "bd",
    "bd.negative_gradient",
    "itertools.product",
    "numpy.array",
    "pytest.approx",
    "sklearn.ensemble._gb_losses.BinomialDeviance"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting_loss_functions.test_binomial_deviance.alt_dev": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "numpy.exp",
    "numpy.log",
    "numpy.mean"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting_loss_functions.test_binomial_deviance.alt_ng": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "numpy.exp"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting_loss_functions.test_init_raw_predictions_shapes": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "loss",
    "loss.get_init_raw_predictions",
    "loss.init_estimator",
    "numpy.float64",
    "numpy.random.RandomState",
    "range",
    "sklearn.ensemble._gb_losses.BinomialDeviance",
    "sklearn.ensemble._gb_losses.ExponentialLoss",
    "sklearn.ensemble._gb_losses.HuberLossFunction",
    "sklearn.ensemble._gb_losses.LeastAbsoluteError",
    "sklearn.ensemble._gb_losses.LeastSquaresError",
    "sklearn.ensemble._gb_losses.MultinomialDeviance",
    "sklearn.ensemble._gb_losses.QuantileLossFunction"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting_loss_functions.test_init_raw_predictions_values": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "Loss",
    "loss",
    "loss.get_init_raw_predictions",
    "loss.init_estimator",
    "numpy.log",
    "numpy.median",
    "numpy.percentile",
    "numpy.random.RandomState",
    "numpy.testing.assert_allclose",
    "range",
    "sklearn.ensemble._gb_losses.BinomialDeviance",
    "sklearn.ensemble._gb_losses.ExponentialLoss",
    "sklearn.ensemble._gb_losses.HuberLossFunction",
    "sklearn.ensemble._gb_losses.LeastAbsoluteError",
    "sklearn.ensemble._gb_losses.LeastSquaresError",
    "sklearn.ensemble._gb_losses.MultinomialDeviance",
    "sklearn.ensemble._gb_losses.QuantileLossFunction"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting_loss_functions.test_lad_equals_quantile_50": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": [
    "lad",
    "numpy.linspace",
    "numpy.random.RandomState",
    "pytest.approx",
    "ql",
    "range",
    "sklearn.ensemble._gb_losses.LeastAbsoluteError",
    "sklearn.ensemble._gb_losses.QuantileLossFunction",
    "sklearn.ensemble.tests.test_gradient_boosting_loss_functions.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting_loss_functions.test_mdl_computation_weighted": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "loss",
    "numpy.array",
    "pytest.approx",
    "sklearn.ensemble._gb_losses.MultinomialDeviance"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting_loss_functions.test_mdl_exception": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.ensemble._gb_losses.MultinomialDeviance",
    "sklearn.ensemble.tests.test_gradient_boosting_loss_functions.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting_loss_functions.test_multinomial_deviance": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "loss",
    "numpy.float64",
    "numpy.ones",
    "numpy.random.RandomState",
    "numpy.zeros",
    "pytest.approx",
    "range",
    "sklearn.ensemble._gb_losses.MultinomialDeviance",
    "sklearn.ensemble.tests.test_gradient_boosting_loss_functions.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting_loss_functions.test_quantile_loss_function": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.testing.assert_allclose",
    "numpy.zeros_like",
    "sklearn.ensemble._gb_losses.QuantileLossFunction"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting_loss_functions.test_sample_weight_deviance": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "Loss",
    "Loss.is_multi_class",
    "issubclass",
    "loss",
    "numpy.float64",
    "numpy.ones",
    "numpy.zeros",
    "range",
    "sklearn.ensemble._gb_losses.LOSS_FUNCTIONS.values",
    "sklearn.ensemble._gb_losses.RegressionLossFunction",
    "sklearn.utils.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting_loss_functions.test_sample_weight_init_estimators": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "Loss",
    "Loss.is_multi_class",
    "issubclass",
    "loss",
    "loss.get_init_raw_predictions",
    "loss.init_estimator",
    "numpy.ones",
    "numpy.testing.assert_allclose",
    "sklearn.ensemble._gb_losses.LOSS_FUNCTIONS.values",
    "sklearn.ensemble._gb_losses.RegressionLossFunction",
    "sklearn.utils.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting_loss_functions.test_sample_weight_smoke": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "loss",
    "numpy.float32",
    "numpy.ones",
    "pytest.approx",
    "sklearn.ensemble._gb_losses.LeastSquaresError",
    "sklearn.utils.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_iforest": {
  "data": {
   "symbols_in_volume": [
    "sklearn.datasets.load_diabetes",
    "sklearn.datasets.load_iris",
    "sklearn.ensemble.tests.test_iforest.diabetes",
    "sklearn.ensemble.tests.test_iforest.iris",
    "sklearn.ensemble.tests.test_iforest.perm",
    "sklearn.ensemble.tests.test_iforest.rng",
    "sklearn.utils.check_random_state"
   ]
  },
  "type": "module"
 },
 "sklearn.ensemble.tests.test_iforest.IsolationForest": {
  "data": {
   "shadows": "sklearn.ensemble.IsolationForest"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_iforest.Mock": {
  "data": {
   "shadows": "unittest.mock.Mock"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_iforest.ParameterGrid": {
  "data": {
   "shadows": "sklearn.model_selection.ParameterGrid"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_iforest._average_path_length": {
  "data": {
   "shadows": "sklearn.ensemble._iforest._average_path_length"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_iforest.assert_allclose": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_allclose"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_iforest.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_iforest.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_iforest.assert_raises": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_iforest.assert_warns_message": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_warns_message"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_iforest.check_random_state": {
  "data": {
   "shadows": "sklearn.utils.check_random_state"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_iforest.csc_matrix": {
  "data": {
   "shadows": "scipy.sparse.csc_matrix"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_iforest.csr_matrix": {
  "data": {
   "shadows": "scipy.sparse.csr_matrix"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_iforest.diabetes": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "sklearn.ensemble.tests.test_iforest.ignore_warnings": {
  "data": {
   "shadows": "sklearn.utils._testing.ignore_warnings"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_iforest.iris": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "sklearn.ensemble.tests.test_iforest.load_diabetes": {
  "data": {
   "shadows": "sklearn.datasets.load_diabetes"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_iforest.load_iris": {
  "data": {
   "shadows": "sklearn.datasets.load_iris"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_iforest.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_iforest.patch": {
  "data": {
   "shadows": "unittest.mock.patch"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_iforest.perm": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "sklearn.ensemble.tests.test_iforest.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_iforest.rng": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "sklearn.ensemble.tests.test_iforest.roc_auc_score": {
  "data": {
   "shadows": "sklearn.metrics.roc_auc_score"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_iforest.test_iforest": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.ensemble.IsolationForest",
    "sklearn.ensemble.tests.test_iforest.rng",
    "sklearn.model_selection.ParameterGrid",
    "sklearn.utils._testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_iforest.test_iforest_average_path_length": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "numpy.euler_gamma",
    "numpy.log",
    "numpy.sort",
    "sklearn.ensemble._iforest._average_path_length",
    "sklearn.utils._testing.assert_allclose",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_iforest.test_iforest_chunks_works1": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "sklearn.ensemble.tests.test_iforest.pytest",
    "sklearn.ensemble.tests.test_iforest.test_iforest_works",
    "unittest.mock.Mock",
    "unittest.mock.patch"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_iforest.test_iforest_chunks_works2": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "sklearn.ensemble.tests.test_iforest.pytest",
    "sklearn.ensemble.tests.test_iforest.test_iforest_works",
    "unittest.mock.Mock",
    "unittest.mock.patch"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_iforest.test_iforest_error": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "UserWarning",
    "ValueError",
    "issubclass",
    "len",
    "numpy.int64",
    "sklearn.ensemble.IsolationForest",
    "sklearn.ensemble.tests.test_iforest.iris",
    "sklearn.ensemble.tests.test_iforest.pytest",
    "sklearn.utils._testing.assert_raises",
    "sklearn.utils._testing.assert_warns_message"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_iforest.test_iforest_parallel_regression": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "sklearn.ensemble.IsolationForest",
    "sklearn.ensemble.tests.test_iforest.diabetes",
    "sklearn.ensemble.tests.test_iforest.rng",
    "sklearn.model_selection.train_test_split",
    "sklearn.utils._testing.assert_array_almost_equal",
    "sklearn.utils.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_iforest.test_iforest_performance": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.r_",
    "sklearn.ensemble.IsolationForest",
    "sklearn.ensemble.tests.test_iforest.rng",
    "sklearn.metrics.roc_auc_score",
    "sklearn.utils.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_iforest.test_iforest_sparse": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "sklearn.ensemble.IsolationForest",
    "sklearn.ensemble.tests.test_iforest.diabetes",
    "sklearn.ensemble.tests.test_iforest.rng",
    "sklearn.model_selection.ParameterGrid",
    "sklearn.model_selection.train_test_split",
    "sklearn.utils._testing.assert_array_equal",
    "sklearn.utils.check_random_state",
    "sparse_format"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_iforest.test_iforest_subsampled_features": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "sklearn.ensemble.IsolationForest",
    "sklearn.ensemble.tests.test_iforest.diabetes",
    "sklearn.ensemble.tests.test_iforest.rng",
    "sklearn.model_selection.train_test_split",
    "sklearn.utils.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_iforest.test_iforest_warm_start": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "len",
    "sklearn.ensemble.IsolationForest",
    "sklearn.ensemble.tests.test_iforest.rng",
    "sklearn.utils.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_iforest.test_iforest_with_uniform_data": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": [
    "all",
    "numpy.ones",
    "numpy.random.RandomState",
    "numpy.repeat",
    "sklearn.ensemble.IsolationForest",
    "sklearn.ensemble.tests.test_iforest.rng"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_iforest.test_iforest_works": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "numpy.max",
    "numpy.min",
    "sklearn.ensemble.IsolationForest",
    "sklearn.ensemble.tests.test_iforest.pytest",
    "sklearn.ensemble.tests.test_iforest.rng",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_iforest.test_max_samples_attribute": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "UserWarning",
    "sklearn.ensemble.IsolationForest",
    "sklearn.ensemble.tests.test_iforest.iris",
    "sklearn.utils._testing.assert_warns_message"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_iforest.test_max_samples_consistency": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "sklearn.ensemble.IsolationForest",
    "sklearn.ensemble.tests.test_iforest.iris"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_iforest.test_recalculate_max_depth": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "int",
    "numpy.ceil",
    "numpy.log2",
    "sklearn.ensemble.IsolationForest",
    "sklearn.ensemble.tests.test_iforest.iris"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_iforest.test_score_samples": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "sklearn.ensemble.IsolationForest",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_iforest.train_test_split": {
  "data": {
   "shadows": "sklearn.model_selection.train_test_split"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_stacking": {
  "data": {
   "symbols_in_volume": [
    "sklearn.datasets.load_diabetes",
    "sklearn.datasets.load_iris"
   ]
  },
  "type": "module"
 },
 "sklearn.ensemble.tests.test_stacking.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_stacking.CheckingClassifier": {
  "data": {
   "shadows": "sklearn.utils._mocking.CheckingClassifier"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_stacking.ClassifierMixin": {
  "data": {
   "shadows": "sklearn.base.ClassifierMixin"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_stacking.ConvergenceWarning": {
  "data": {
   "shadows": "sklearn.exceptions.ConvergenceWarning"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_stacking.DummyClassifier": {
  "data": {
   "shadows": "sklearn.dummy.DummyClassifier"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_stacking.DummyRegressor": {
  "data": {
   "shadows": "sklearn.dummy.DummyRegressor"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_stacking.KFold": {
  "data": {
   "shadows": "sklearn.model_selection.KFold"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_stacking.LinearRegression": {
  "data": {
   "shadows": "sklearn.linear_model.LinearRegression"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_stacking.LinearSVC": {
  "data": {
   "shadows": "sklearn.svm.LinearSVC"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_stacking.LinearSVR": {
  "data": {
   "shadows": "sklearn.svm.LinearSVR"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_stacking.LogisticRegression": {
  "data": {
   "shadows": "sklearn.linear_model.LogisticRegression"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_stacking.NoWeightClassifier": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator",
    "sklearn.base.ClassifierMixin"
   ]
  },
  "type": "class"
 },
 "sklearn.ensemble.tests.test_stacking.NoWeightClassifier.fit": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "sklearn.dummy.DummyClassifier"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_stacking.NoWeightRegressor": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator",
    "sklearn.base.RegressorMixin"
   ]
  },
  "type": "class"
 },
 "sklearn.ensemble.tests.test_stacking.NoWeightRegressor.fit": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "sklearn.dummy.DummyRegressor"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_stacking.NoWeightRegressor.predict": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_stacking.RandomForestClassifier": {
  "data": {
   "shadows": "sklearn.ensemble.RandomForestClassifier"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_stacking.RandomForestRegressor": {
  "data": {
   "shadows": "sklearn.ensemble.RandomForestRegressor"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_stacking.RegressorMixin": {
  "data": {
   "shadows": "sklearn.base.RegressorMixin"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_stacking.SVC": {
  "data": {
   "shadows": "sklearn.svm.SVC"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_stacking.StackingClassifier": {
  "data": {
   "shadows": "sklearn.ensemble.StackingClassifier"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_stacking.StackingRegressor": {
  "data": {
   "shadows": "sklearn.ensemble.StackingRegressor"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_stacking.StratifiedKFold": {
  "data": {
   "shadows": "sklearn.model_selection.StratifiedKFold"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_stacking.assert_allclose": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_allclose"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_stacking.assert_allclose_dense_sparse": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_allclose_dense_sparse"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_stacking.clone": {
  "data": {
   "shadows": "sklearn.base.clone"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_stacking.ignore_warnings": {
  "data": {
   "shadows": "sklearn.utils._testing.ignore_warnings"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_stacking.load_breast_cancer": {
  "data": {
   "shadows": "sklearn.datasets.load_breast_cancer"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_stacking.load_diabetes": {
  "data": {
   "shadows": "sklearn.datasets.load_diabetes"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_stacking.load_iris": {
  "data": {
   "shadows": "sklearn.datasets.load_iris"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_stacking.make_classification": {
  "data": {
   "shadows": "sklearn.datasets.make_classification"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_stacking.make_regression": {
  "data": {
   "shadows": "sklearn.datasets.make_regression"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_stacking.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_stacking.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_stacking.scale": {
  "data": {
   "shadows": "sklearn.preprocessing.scale"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_stacking.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_stacking.test_stacking_classifier_drop_binary_prob": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "sklearn.ensemble.RandomForestClassifier",
    "sklearn.ensemble.StackingClassifier",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.preprocessing.scale"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_stacking.test_stacking_classifier_drop_column_binary_classification": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "sklearn.datasets.load_breast_cancer",
    "sklearn.ensemble.RandomForestClassifier",
    "sklearn.ensemble.StackingClassifier",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.model_selection.train_test_split",
    "sklearn.preprocessing.scale",
    "sklearn.svm.LinearSVC"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_stacking.test_stacking_classifier_drop_estimator": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "sklearn.ensemble.RandomForestClassifier",
    "sklearn.ensemble.StackingClassifier",
    "sklearn.model_selection.train_test_split",
    "sklearn.preprocessing.scale",
    "sklearn.svm.LinearSVC",
    "sklearn.utils._testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_stacking.test_stacking_classifier_error": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "numpy.ones",
    "sklearn.ensemble.StackingClassifier",
    "sklearn.ensemble.tests.test_stacking.NoWeightClassifier",
    "sklearn.ensemble.tests.test_stacking.pytest",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.preprocessing.scale",
    "sklearn.svm.LinearSVC",
    "sklearn.svm.SVC"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_stacking.test_stacking_classifier_iris": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "sklearn.ensemble.RandomForestClassifier",
    "sklearn.ensemble.StackingClassifier",
    "sklearn.ensemble.tests.test_stacking.pytest",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.model_selection.StratifiedKFold",
    "sklearn.model_selection.train_test_split",
    "sklearn.preprocessing.scale",
    "sklearn.svm.LinearSVC",
    "sklearn.utils._testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_stacking.test_stacking_classifier_sample_weight_fit_param": {
  "data": {
   "lineno": 423,
   "symbols_in_volume": [
    "numpy.ones",
    "sklearn.ensemble.StackingClassifier",
    "sklearn.utils._mocking.CheckingClassifier"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_stacking.test_stacking_classifier_sparse_passthrough": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "scipy.sparse.coo_matrix",
    "scipy.sparse.issparse",
    "sklearn.ensemble.RandomForestClassifier",
    "sklearn.ensemble.StackingClassifier",
    "sklearn.ensemble.tests.test_stacking.pytest",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.model_selection.train_test_split",
    "sklearn.preprocessing.scale",
    "sklearn.svm.LinearSVC",
    "sklearn.utils._testing.assert_allclose_dense_sparse"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_stacking.test_stacking_classifier_stratify_default": {
  "data": {
   "lineno": 367,
   "symbols_in_volume": [
    "sklearn.ensemble.StackingClassifier",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.svm.LinearSVC"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_stacking.test_stacking_cv_influence": {
  "data": {
   "lineno": 436,
   "symbols_in_volume": [
    "AssertionError",
    "sklearn.base.clone",
    "sklearn.datasets.load_breast_cancer",
    "sklearn.ensemble.StackingClassifier",
    "sklearn.ensemble.StackingRegressor",
    "sklearn.ensemble.tests.test_stacking.pytest",
    "sklearn.linear_model.LinearRegression",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.svm.LinearSVC",
    "sklearn.svm.LinearSVR",
    "sklearn.utils._testing.assert_allclose",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_stacking.test_stacking_randomness": {
  "data": {
   "lineno": 335,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.base.clone",
    "sklearn.ensemble.StackingClassifier",
    "sklearn.ensemble.StackingRegressor",
    "sklearn.ensemble.tests.test_stacking.pytest",
    "sklearn.linear_model.LinearRegression",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.model_selection.KFold",
    "sklearn.svm.LinearSVC",
    "sklearn.svm.LinearSVR",
    "sklearn.utils._testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_stacking.test_stacking_regressor_diabetes": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "len",
    "sklearn.dummy.DummyRegressor",
    "sklearn.ensemble.RandomForestRegressor",
    "sklearn.ensemble.StackingRegressor",
    "sklearn.ensemble.tests.test_stacking.pytest",
    "sklearn.linear_model.LinearRegression",
    "sklearn.model_selection.KFold",
    "sklearn.model_selection.train_test_split",
    "sklearn.preprocessing.scale",
    "sklearn.svm.LinearSVR",
    "sklearn.utils._testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_stacking.test_stacking_regressor_drop_estimator": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "sklearn.ensemble.RandomForestRegressor",
    "sklearn.ensemble.StackingRegressor",
    "sklearn.model_selection.train_test_split",
    "sklearn.preprocessing.scale",
    "sklearn.svm.LinearSVR",
    "sklearn.utils._testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_stacking.test_stacking_regressor_error": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "numpy.ones",
    "sklearn.ensemble.StackingRegressor",
    "sklearn.ensemble.tests.test_stacking.NoWeightRegressor",
    "sklearn.ensemble.tests.test_stacking.pytest",
    "sklearn.linear_model.LinearRegression",
    "sklearn.preprocessing.scale",
    "sklearn.svm.LinearSVR"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_stacking.test_stacking_regressor_sparse_passthrough": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "scipy.sparse.coo_matrix",
    "scipy.sparse.issparse",
    "sklearn.ensemble.RandomForestRegressor",
    "sklearn.ensemble.StackingRegressor",
    "sklearn.ensemble.tests.test_stacking.pytest",
    "sklearn.linear_model.LinearRegression",
    "sklearn.model_selection.train_test_split",
    "sklearn.preprocessing.scale",
    "sklearn.svm.LinearSVR",
    "sklearn.utils._testing.assert_allclose_dense_sparse"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_stacking.test_stacking_with_sample_weight": {
  "data": {
   "lineno": 378,
   "symbols_in_volume": [
    "len",
    "numpy.abs",
    "numpy.array",
    "numpy.ones",
    "sklearn.datasets.load_breast_cancer",
    "sklearn.ensemble.StackingClassifier",
    "sklearn.ensemble.StackingRegressor",
    "sklearn.ensemble.tests.test_stacking.pytest",
    "sklearn.exceptions.ConvergenceWarning",
    "sklearn.linear_model.LinearRegression",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.model_selection.KFold",
    "sklearn.model_selection.train_test_split",
    "sklearn.svm.LinearSVC",
    "sklearn.svm.LinearSVR",
    "sklearn.utils._testing.assert_allclose",
    "sklearn.utils._testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_stacking.test_stacking_without_n_features_in": {
  "data": {
   "lineno": 476,
   "symbols_in_volume": [
    "AttributeError",
    "MyEstimator",
    "Stacking",
    "Stacking.__name__",
    "make_dataset",
    "sklearn.datasets.make_classification",
    "sklearn.datasets.make_regression",
    "sklearn.ensemble.StackingClassifier",
    "sklearn.ensemble.StackingRegressor",
    "sklearn.ensemble.tests.test_stacking.pytest",
    "sklearn.linear_model.LinearRegression",
    "sklearn.linear_model.LogisticRegression"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_stacking.test_stacking_without_n_features_in.MyEstimator": {
  "data": {
   "lineno": 484
  },
  "type": "class"
 },
 "sklearn.ensemble.tests.test_stacking.test_stacking_without_n_features_in.MyEstimator.fit": {
  "data": {
   "lineno": 486,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_stacking.train_test_split": {
  "data": {
   "shadows": "sklearn.model_selection.train_test_split"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_voting": {
  "data": {
   "symbols_in_volume": [
    "sklearn.datasets.load_diabetes",
    "sklearn.datasets.load_iris",
    "sklearn.ensemble.tests.test_voting.iris"
   ]
  },
  "type": "module"
 },
 "sklearn.ensemble.tests.test_voting.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_voting.ClassifierMixin": {
  "data": {
   "shadows": "sklearn.base.ClassifierMixin"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_voting.DecisionTreeClassifier": {
  "data": {
   "shadows": "sklearn.tree.DecisionTreeClassifier"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_voting.DecisionTreeRegressor": {
  "data": {
   "shadows": "sklearn.tree.DecisionTreeRegressor"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_voting.DummyRegressor": {
  "data": {
   "shadows": "sklearn.dummy.DummyRegressor"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_voting.GaussianNB": {
  "data": {
   "shadows": "sklearn.naive_bayes.GaussianNB"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_voting.GridSearchCV": {
  "data": {
   "shadows": "sklearn.model_selection.GridSearchCV"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_voting.KNeighborsClassifier": {
  "data": {
   "shadows": "sklearn.neighbors.KNeighborsClassifier"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_voting.LinearRegression": {
  "data": {
   "shadows": "sklearn.linear_model.LinearRegression"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_voting.LogisticRegression": {
  "data": {
   "shadows": "sklearn.linear_model.LogisticRegression"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_voting.NotFittedError": {
  "data": {
   "shadows": "sklearn.exceptions.NotFittedError"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_voting.OneVsRestClassifier": {
  "data": {
   "shadows": "sklearn.multiclass.OneVsRestClassifier"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_voting.RandomForestClassifier": {
  "data": {
   "shadows": "sklearn.ensemble.RandomForestClassifier"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_voting.RandomForestRegressor": {
  "data": {
   "shadows": "sklearn.ensemble.RandomForestRegressor"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_voting.SVC": {
  "data": {
   "shadows": "sklearn.svm.SVC"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_voting.VotingClassifier": {
  "data": {
   "shadows": "sklearn.ensemble.VotingClassifier"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_voting.VotingRegressor": {
  "data": {
   "shadows": "sklearn.ensemble.VotingRegressor"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_voting.assert_almost_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_almost_equal"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_voting.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_voting.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_voting.assert_raise_message": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_raise_message"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_voting.clone": {
  "data": {
   "shadows": "sklearn.base.clone"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_voting.cross_val_score": {
  "data": {
   "shadows": "sklearn.model_selection.cross_val_score"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_voting.datasets": {
  "data": {
   "shadows": "sklearn.datasets"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_voting.iris": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "sklearn.ensemble.tests.test_voting.make_multilabel_classification": {
  "data": {
   "shadows": "sklearn.datasets.make_multilabel_classification"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_voting.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_voting.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_voting.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_voting.test_estimator_weights_format": {
  "data": {
   "lineno": 432,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.ensemble.RandomForestClassifier",
    "sklearn.ensemble.VotingClassifier",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_voting.test_gridsearch": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "sklearn.ensemble.RandomForestClassifier",
    "sklearn.ensemble.VotingClassifier",
    "sklearn.ensemble.tests.test_voting.iris",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.model_selection.GridSearchCV",
    "sklearn.naive_bayes.GaussianNB"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_voting.test_majority_label_iris": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "sklearn.ensemble.RandomForestClassifier",
    "sklearn.ensemble.VotingClassifier",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.model_selection.cross_val_score",
    "sklearn.naive_bayes.GaussianNB",
    "sklearn.utils._testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_voting.test_multilabel": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "NotImplementedError",
    "sklearn.datasets.make_multilabel_classification",
    "sklearn.ensemble.VotingClassifier",
    "sklearn.multiclass.OneVsRestClassifier",
    "sklearn.svm.SVC"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_voting.test_n_features_in": {
  "data": {
   "lineno": 503,
   "symbols_in_volume": [
    "hasattr",
    "sklearn.ensemble.VotingClassifier",
    "sklearn.ensemble.VotingRegressor",
    "sklearn.ensemble.tests.test_voting.pytest",
    "sklearn.linear_model.LinearRegression",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.tree.DecisionTreeClassifier",
    "sklearn.tree.DecisionTreeRegressor"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_voting.test_none_estimator_with_weights": {
  "data": {
   "lineno": 480,
   "symbols_in_volume": [
    "numpy.ones",
    "sklearn.base.clone",
    "sklearn.ensemble.RandomForestClassifier",
    "sklearn.ensemble.RandomForestRegressor",
    "sklearn.ensemble.VotingClassifier",
    "sklearn.ensemble.VotingRegressor",
    "sklearn.ensemble.tests.test_voting.pytest",
    "sklearn.linear_model.LinearRegression",
    "sklearn.linear_model.LogisticRegression"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_voting.test_notfitted": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "sklearn.dummy.DummyRegressor",
    "sklearn.ensemble.VotingClassifier",
    "sklearn.ensemble.VotingRegressor",
    "sklearn.exceptions.NotFittedError",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.utils._testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_voting.test_parallel_fit": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.ensemble.RandomForestClassifier",
    "sklearn.ensemble.VotingClassifier",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.naive_bayes.GaussianNB",
    "sklearn.utils._testing.assert_array_almost_equal",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_voting.test_predict_on_toy_problem": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.ensemble.RandomForestClassifier",
    "sklearn.ensemble.VotingClassifier",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.naive_bayes.GaussianNB",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_voting.test_predict_proba_on_toy_problem": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "AttributeError",
    "numpy.array",
    "sklearn.ensemble.RandomForestClassifier",
    "sklearn.ensemble.VotingClassifier",
    "sklearn.ensemble.tests.test_voting.pytest",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.naive_bayes.GaussianNB",
    "sklearn.utils._testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_voting.test_predictproba_hardvoting": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "AttributeError",
    "hasattr",
    "sklearn.ensemble.VotingClassifier",
    "sklearn.ensemble.tests.test_voting.pytest",
    "sklearn.linear_model.LogisticRegression"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_voting.test_sample_weight": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "ClassifierErrorFit",
    "TypeError",
    "len",
    "numpy.ones",
    "numpy.random.RandomState",
    "sklearn.ensemble.RandomForestClassifier",
    "sklearn.ensemble.VotingClassifier",
    "sklearn.ensemble.tests.test_voting.pytest",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.neighbors.KNeighborsClassifier",
    "sklearn.svm.SVC",
    "sklearn.utils._testing.assert_array_almost_equal",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_voting.test_sample_weight.ClassifierErrorFit": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator",
    "sklearn.base.ClassifierMixin"
   ]
  },
  "type": "class"
 },
 "sklearn.ensemble.tests.test_voting.test_sample_weight.ClassifierErrorFit.fit": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "TypeError"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_voting.test_sample_weight_kwargs": {
  "data": {
   "lineno": 328,
   "symbols_in_volume": [
    "MockClassifier",
    "len",
    "numpy.ones",
    "sklearn.ensemble.VotingClassifier"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_voting.test_sample_weight_kwargs.MockClassifier": {
  "data": {
   "lineno": 330,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator",
    "sklearn.base.ClassifierMixin"
   ]
  },
  "type": "class"
 },
 "sklearn.ensemble.tests.test_voting.test_sample_weight_kwargs.MockClassifier.fit": {
  "data": {
   "lineno": 332
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_voting.test_set_estimator_drop": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": [
    "DeprecationWarning",
    "ValueError",
    "all",
    "dict",
    "isinstance",
    "len",
    "numpy.array",
    "sklearn.ensemble.RandomForestClassifier",
    "sklearn.ensemble.VotingClassifier",
    "sklearn.ensemble.tests.test_voting.pytest",
    "sklearn.ensemble.tests.test_voting.warnings",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.naive_bayes.GaussianNB",
    "sklearn.utils._testing.assert_array_almost_equal",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_voting.test_tie_situation": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "sklearn.ensemble.RandomForestClassifier",
    "sklearn.ensemble.VotingClassifier",
    "sklearn.linear_model.LogisticRegression"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_voting.test_transform": {
  "data": {
   "lineno": 449,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.ensemble.RandomForestClassifier",
    "sklearn.ensemble.VotingClassifier",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.naive_bayes.GaussianNB",
    "sklearn.utils._testing.assert_array_almost_equal",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_voting.test_voting_classifier_estimator_init": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.ensemble.VotingClassifier",
    "sklearn.ensemble.tests.test_voting.pytest",
    "sklearn.linear_model.LogisticRegression"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_voting.test_voting_classifier_set_params": {
  "data": {
   "lineno": 342,
   "symbols_in_volume": [
    "sklearn.ensemble.RandomForestClassifier",
    "sklearn.ensemble.VotingClassifier",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.naive_bayes.GaussianNB",
    "sklearn.utils._testing.assert_array_almost_equal",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_voting.test_voting_verbose": {
  "data": {
   "lineno": 523,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.ensemble.RandomForestClassifier",
    "sklearn.ensemble.RandomForestRegressor",
    "sklearn.ensemble.VotingClassifier",
    "sklearn.ensemble.VotingRegressor",
    "sklearn.ensemble.tests.test_voting.pytest",
    "sklearn.ensemble.tests.test_voting.re",
    "sklearn.linear_model.LinearRegression",
    "sklearn.linear_model.LogisticRegression"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_voting.test_weights_iris": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "sklearn.ensemble.RandomForestClassifier",
    "sklearn.ensemble.VotingClassifier",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.model_selection.cross_val_score",
    "sklearn.naive_bayes.GaussianNB",
    "sklearn.utils._testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_voting.test_weights_regressor": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.average",
    "sklearn.dummy.DummyRegressor",
    "sklearn.ensemble.VotingRegressor",
    "sklearn.model_selection.train_test_split",
    "sklearn.utils._testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_voting.train_test_split": {
  "data": {
   "shadows": "sklearn.model_selection.train_test_split"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_voting.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_weight_boosting": {
  "data": {
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.datasets.load_diabetes",
    "sklearn.datasets.load_iris",
    "sklearn.ensemble.tests.test_weight_boosting.diabetes",
    "sklearn.ensemble.tests.test_weight_boosting.iris",
    "sklearn.ensemble.tests.test_weight_boosting.rng",
    "sklearn.utils.shuffle"
   ]
  },
  "type": "module"
 },
 "sklearn.ensemble.tests.test_weight_boosting.AdaBoostClassifier": {
  "data": {
   "shadows": "sklearn.ensemble.AdaBoostClassifier"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_weight_boosting.AdaBoostRegressor": {
  "data": {
   "shadows": "sklearn.ensemble.AdaBoostRegressor"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_weight_boosting.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_weight_boosting.DecisionTreeClassifier": {
  "data": {
   "shadows": "sklearn.tree.DecisionTreeClassifier"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_weight_boosting.DecisionTreeRegressor": {
  "data": {
   "shadows": "sklearn.tree.DecisionTreeRegressor"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_weight_boosting.DummyClassifier": {
  "data": {
   "shadows": "sklearn.dummy.DummyClassifier"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_weight_boosting.DummyRegressor": {
  "data": {
   "shadows": "sklearn.dummy.DummyRegressor"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_weight_boosting.GridSearchCV": {
  "data": {
   "shadows": "sklearn.model_selection.GridSearchCV"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_weight_boosting.LinearRegression": {
  "data": {
   "shadows": "sklearn.linear_model.LinearRegression"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_weight_boosting.NoSampleWeightWrapper": {
  "data": {
   "shadows": "sklearn.utils._mocking.NoSampleWeightWrapper"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_weight_boosting.RandomForestClassifier": {
  "data": {
   "shadows": "sklearn.ensemble.RandomForestClassifier"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_weight_boosting.RandomForestRegressor": {
  "data": {
   "shadows": "sklearn.ensemble.RandomForestRegressor"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_weight_boosting.SVC": {
  "data": {
   "shadows": "sklearn.svm.SVC"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_weight_boosting.SVR": {
  "data": {
   "shadows": "sklearn.svm.SVR"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_weight_boosting.T": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "sklearn.ensemble.tests.test_weight_boosting.X": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "sklearn.ensemble.tests.test_weight_boosting._samme_proba": {
  "data": {
   "shadows": "sklearn.ensemble._weight_boosting._samme_proba"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_weight_boosting.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_weight_boosting.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_weight_boosting.assert_array_less": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_array_less"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_weight_boosting.assert_raises": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_weight_boosting.assert_raises_regexp": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_raises_regexp"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_weight_boosting.clone": {
  "data": {
   "shadows": "sklearn.base.clone"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_weight_boosting.coo_matrix": {
  "data": {
   "shadows": "scipy.sparse.coo_matrix"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_weight_boosting.csc_matrix": {
  "data": {
   "shadows": "scipy.sparse.csc_matrix"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_weight_boosting.csr_matrix": {
  "data": {
   "shadows": "scipy.sparse.csr_matrix"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_weight_boosting.datasets": {
  "data": {
   "shadows": "sklearn.datasets"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_weight_boosting.diabetes": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "sklearn.ensemble.tests.test_weight_boosting.dok_matrix": {
  "data": {
   "shadows": "scipy.sparse.dok_matrix"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_weight_boosting.iris": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "sklearn.ensemble.tests.test_weight_boosting.lil_matrix": {
  "data": {
   "shadows": "scipy.sparse.lil_matrix"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_weight_boosting.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_weight_boosting.perm": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "sklearn.ensemble.tests.test_weight_boosting.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_weight_boosting.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_weight_boosting.rng": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "sklearn.ensemble.tests.test_weight_boosting.shuffle": {
  "data": {
   "shadows": "sklearn.utils.shuffle"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_weight_boosting.test_adaboost_consistent_predict": {
  "data": {
   "lineno": 552,
   "symbols_in_volume": [
    "numpy.argmax",
    "sklearn.datasets.load_digits",
    "sklearn.ensemble.AdaBoostClassifier",
    "sklearn.ensemble.tests.test_weight_boosting.pytest",
    "sklearn.model_selection.train_test_split",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_weight_boosting.test_adaboost_negative_weight_error": {
  "data": {
   "lineno": 569,
   "symbols_in_volume": [
    "ValueError",
    "numpy.ones_like",
    "sklearn.ensemble.AdaBoostClassifier",
    "sklearn.ensemble.AdaBoostRegressor",
    "sklearn.ensemble.tests.test_weight_boosting.X",
    "sklearn.ensemble.tests.test_weight_boosting.diabetes",
    "sklearn.ensemble.tests.test_weight_boosting.iris",
    "sklearn.ensemble.tests.test_weight_boosting.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_weight_boosting.test_adaboostclassifier_without_sample_weight": {
  "data": {
   "lineno": 502,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.dummy.DummyClassifier",
    "sklearn.ensemble.AdaBoostClassifier",
    "sklearn.ensemble.tests.test_weight_boosting.X",
    "sklearn.ensemble.tests.test_weight_boosting.iris",
    "sklearn.ensemble.tests.test_weight_boosting.pytest",
    "sklearn.utils._mocking.NoSampleWeightWrapper"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_weight_boosting.test_adaboostregressor_sample_weight": {
  "data": {
   "lineno": 515,
   "symbols_in_volume": [
    "numpy.linspace",
    "numpy.ones_like",
    "numpy.random.RandomState",
    "sklearn.base.clone",
    "sklearn.ensemble.AdaBoostRegressor",
    "sklearn.ensemble.tests.test_weight_boosting.X",
    "sklearn.ensemble.tests.test_weight_boosting.pytest",
    "sklearn.ensemble.tests.test_weight_boosting.rng",
    "sklearn.linear_model.LinearRegression"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_weight_boosting.test_base_estimator": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.ensemble.AdaBoostClassifier",
    "sklearn.ensemble.AdaBoostRegressor",
    "sklearn.ensemble.RandomForestClassifier",
    "sklearn.ensemble.RandomForestRegressor",
    "sklearn.ensemble.tests.test_weight_boosting.X",
    "sklearn.ensemble.tests.test_weight_boosting.y_class",
    "sklearn.ensemble.tests.test_weight_boosting.y_regr",
    "sklearn.svm.SVC",
    "sklearn.svm.SVR",
    "sklearn.utils._testing.assert_raises_regexp"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_weight_boosting.test_classification_toy": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "len",
    "numpy.asarray",
    "numpy.unique",
    "sklearn.ensemble.AdaBoostClassifier",
    "sklearn.ensemble.tests.test_weight_boosting.T",
    "sklearn.ensemble.tests.test_weight_boosting.X",
    "sklearn.ensemble.tests.test_weight_boosting.pytest",
    "sklearn.ensemble.tests.test_weight_boosting.y_class",
    "sklearn.ensemble.tests.test_weight_boosting.y_t_class",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_weight_boosting.test_diabetes": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "len",
    "set",
    "sklearn.ensemble.AdaBoostRegressor",
    "sklearn.ensemble.tests.test_weight_boosting.diabetes",
    "sklearn.ensemble.tests.test_weight_boosting.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_weight_boosting.test_error": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "ValueError",
    "numpy.asarray",
    "sklearn.ensemble.AdaBoostClassifier",
    "sklearn.ensemble.tests.test_weight_boosting.X",
    "sklearn.ensemble.tests.test_weight_boosting.y_class",
    "sklearn.utils._testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_weight_boosting.test_gridsearch": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "sklearn.ensemble.AdaBoostClassifier",
    "sklearn.ensemble.AdaBoostRegressor",
    "sklearn.ensemble.tests.test_weight_boosting.diabetes",
    "sklearn.ensemble.tests.test_weight_boosting.iris",
    "sklearn.model_selection.GridSearchCV",
    "sklearn.tree.DecisionTreeClassifier",
    "sklearn.tree.DecisionTreeRegressor"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_weight_boosting.test_importances": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "numpy.newaxis.all",
    "sklearn.datasets.make_classification",
    "sklearn.ensemble.AdaBoostClassifier",
    "sklearn.ensemble.tests.test_weight_boosting.X"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_weight_boosting.test_iris": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "len",
    "numpy.abs",
    "numpy.unique",
    "set",
    "sklearn.ensemble.AdaBoostClassifier",
    "sklearn.ensemble.tests.test_weight_boosting.iris",
    "sklearn.utils._testing.assert_array_equal",
    "sklearn.utils._testing.assert_array_less"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_weight_boosting.test_multidimensional_X": {
  "data": {
   "lineno": 481,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.dummy.DummyClassifier",
    "sklearn.dummy.DummyRegressor",
    "sklearn.ensemble.AdaBoostClassifier",
    "sklearn.ensemble.AdaBoostRegressor",
    "sklearn.ensemble.tests.test_weight_boosting.X",
    "sklearn.ensemble.tests.test_weight_boosting.rng"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_weight_boosting.test_oneclass_adaboost_proba": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "len",
    "numpy.ones",
    "sklearn.ensemble.AdaBoostClassifier",
    "sklearn.ensemble.tests.test_weight_boosting.X",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_weight_boosting.test_pickle": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "sklearn.ensemble.AdaBoostClassifier",
    "sklearn.ensemble.AdaBoostRegressor",
    "sklearn.ensemble.tests.test_weight_boosting.diabetes",
    "sklearn.ensemble.tests.test_weight_boosting.iris",
    "sklearn.ensemble.tests.test_weight_boosting.pickle",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_weight_boosting.test_regression_toy": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "sklearn.ensemble.AdaBoostRegressor",
    "sklearn.ensemble.tests.test_weight_boosting.T",
    "sklearn.ensemble.tests.test_weight_boosting.X",
    "sklearn.ensemble.tests.test_weight_boosting.y_regr",
    "sklearn.ensemble.tests.test_weight_boosting.y_t_regr",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_weight_boosting.test_samme_proba": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "MockEstimator",
    "numpy.abs",
    "numpy.argmax",
    "numpy.argmin",
    "numpy.array",
    "numpy.isfinite",
    "numpy.newaxis",
    "numpy.ones_like",
    "sklearn.ensemble._weight_boosting._samme_proba",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_weight_boosting.test_samme_proba.MockEstimator": {
  "data": {
   "lineno": 66
  },
  "type": "class"
 },
 "sklearn.ensemble.tests.test_weight_boosting.test_samme_proba.MockEstimator.predict_proba": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "sklearn.ensemble.tests.test_weight_boosting.X",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_weight_boosting.test_sample_weight_adaboost_regressor": {
  "data": {
   "lineno": 462,
   "symbols_in_volume": [
    "DummyEstimator",
    "len",
    "sklearn.ensemble.AdaBoostRegressor",
    "sklearn.ensemble.tests.test_weight_boosting.X",
    "sklearn.ensemble.tests.test_weight_boosting.y_regr"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_weight_boosting.test_sample_weight_adaboost_regressor.DummyEstimator": {
  "data": {
   "lineno": 468,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator"
   ]
  },
  "type": "class"
 },
 "sklearn.ensemble.tests.test_weight_boosting.test_sample_weight_adaboost_regressor.DummyEstimator.fit": {
  "data": {
   "lineno": 470
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_weight_boosting.test_sample_weight_adaboost_regressor.DummyEstimator.predict": {
  "data": {
   "lineno": 473,
   "symbols_in_volume": [
    "numpy.zeros",
    "sklearn.ensemble.tests.test_weight_boosting.X"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_weight_boosting.test_sparse_classification": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": [
    "CustomSVC",
    "all",
    "numpy.ravel",
    "scipy.sparse.coo_matrix",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.dok_matrix",
    "scipy.sparse.lil_matrix",
    "sklearn.datasets.make_multilabel_classification",
    "sklearn.ensemble.AdaBoostClassifier",
    "sklearn.ensemble.tests.test_weight_boosting.X",
    "sklearn.model_selection.train_test_split",
    "sklearn.utils._testing.assert_array_almost_equal",
    "sklearn.utils._testing.assert_array_equal",
    "sparse_format",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_weight_boosting.test_sparse_classification.CustomSVC": {
  "data": {
   "lineno": 317,
   "symbols_in_volume": [
    "sklearn.svm.SVC"
   ]
  },
  "type": "class"
 },
 "sklearn.ensemble.tests.test_weight_boosting.test_sparse_classification.CustomSVC.fit": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": [
    "sklearn.ensemble.tests.test_weight_boosting.X",
    "super",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_weight_boosting.test_sparse_regression": {
  "data": {
   "lineno": 411,
   "symbols_in_volume": [
    "CustomSVR",
    "all",
    "scipy.sparse.coo_matrix",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.dok_matrix",
    "scipy.sparse.lil_matrix",
    "sklearn.datasets.make_regression",
    "sklearn.ensemble.AdaBoostRegressor",
    "sklearn.ensemble.tests.test_weight_boosting.X",
    "sklearn.model_selection.train_test_split",
    "sklearn.utils._testing.assert_array_almost_equal",
    "sparse_format",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_weight_boosting.test_sparse_regression.CustomSVR": {
  "data": {
   "lineno": 414,
   "symbols_in_volume": [
    "sklearn.svm.SVR"
   ]
  },
  "type": "class"
 },
 "sklearn.ensemble.tests.test_weight_boosting.test_sparse_regression.CustomSVR.fit": {
  "data": {
   "lineno": 417,
   "symbols_in_volume": [
    "sklearn.ensemble.tests.test_weight_boosting.X",
    "super",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_weight_boosting.test_staged_predict": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "len",
    "numpy.random.RandomState",
    "sklearn.ensemble.AdaBoostClassifier",
    "sklearn.ensemble.AdaBoostRegressor",
    "sklearn.ensemble.tests.test_weight_boosting.diabetes",
    "sklearn.ensemble.tests.test_weight_boosting.iris",
    "sklearn.ensemble.tests.test_weight_boosting.pytest",
    "sklearn.ensemble.tests.test_weight_boosting.rng",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_weight_boosting.train_test_split": {
  "data": {
   "shadows": "sklearn.model_selection.train_test_split"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_weight_boosting.y_class": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "sklearn.ensemble.tests.test_weight_boosting.y_regr": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "sklearn.ensemble.tests.test_weight_boosting.y_t_class": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "sklearn.ensemble.tests.test_weight_boosting.y_t_regr": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "sklearn.ensemble.typing": {
  "data": {
   "shadows": "typing"
  },
  "type": "import"
 },
 "sklearn.exceptions": {
  "data": {},
  "type": "module"
 },
 "sklearn.exceptions.ChangedBehaviorWarning": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "UserWarning",
    "deprecated"
   ]
  },
  "type": "class"
 },
 "sklearn.exceptions.ConvergenceWarning": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "UserWarning"
   ]
  },
  "type": "class"
 },
 "sklearn.exceptions.DataConversionWarning": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "UserWarning"
   ]
  },
  "type": "class"
 },
 "sklearn.exceptions.DataDimensionalityWarning": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "UserWarning"
   ]
  },
  "type": "class"
 },
 "sklearn.exceptions.EfficiencyWarning": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "UserWarning"
   ]
  },
  "type": "class"
 },
 "sklearn.exceptions.FitFailedWarning": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "RuntimeWarning"
   ]
  },
  "type": "class"
 },
 "sklearn.exceptions.NonBLASDotWarning": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "deprecated",
    "sklearn.exceptions.EfficiencyWarning"
   ]
  },
  "type": "class"
 },
 "sklearn.exceptions.NotFittedError": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "AttributeError",
    "ValueError"
   ]
  },
  "type": "class"
 },
 "sklearn.exceptions.PositiveSpectrumWarning": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "UserWarning"
   ]
  },
  "type": "class"
 },
 "sklearn.exceptions.SkipTestWarning": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "UserWarning"
   ]
  },
  "type": "class"
 },
 "sklearn.exceptions.UndefinedMetricWarning": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "UserWarning"
   ]
  },
  "type": "class"
 },
 "sklearn.exceptions.__all__": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "sklearn.experimental": {
  "data": {},
  "type": "module"
 },
 "sklearn.experimental.enable_halving_search_cv": {
  "data": {
   "symbols_in_volume": [
    "setattr"
   ]
  },
  "type": "module"
 },
 "sklearn.experimental.enable_hist_gradient_boosting": {
  "data": {
   "symbols_in_volume": [
    "setattr"
   ]
  },
  "type": "module"
 },
 "sklearn.experimental.enable_iterative_imputer": {
  "data": {
   "symbols_in_volume": [
    "setattr"
   ]
  },
  "type": "module"
 },
 "sklearn.experimental.tests": {
  "data": {},
  "type": "module"
 },
 "sklearn.experimental.tests.test_enable_hist_gradient_boosting": {
  "data": {},
  "type": "module"
 },
 "sklearn.experimental.tests.test_enable_hist_gradient_boosting.assert_run_python_script": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_run_python_script"
  },
  "type": "import"
 },
 "sklearn.experimental.tests.test_enable_hist_gradient_boosting.test_imports_strategies": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "sklearn.experimental.tests.test_enable_hist_gradient_boosting.textwrap",
    "sklearn.utils._testing.assert_run_python_script"
   ]
  },
  "type": "function"
 },
 "sklearn.experimental.tests.test_enable_hist_gradient_boosting.textwrap": {
  "data": {
   "shadows": "textwrap"
  },
  "type": "import"
 },
 "sklearn.experimental.tests.test_enable_iterative_imputer": {
  "data": {},
  "type": "module"
 },
 "sklearn.experimental.tests.test_enable_iterative_imputer.assert_run_python_script": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_run_python_script"
  },
  "type": "import"
 },
 "sklearn.experimental.tests.test_enable_iterative_imputer.test_imports_strategies": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "sklearn.experimental.tests.test_enable_iterative_imputer.textwrap",
    "sklearn.utils._testing.assert_run_python_script"
   ]
  },
  "type": "function"
 },
 "sklearn.experimental.tests.test_enable_iterative_imputer.textwrap": {
  "data": {
   "shadows": "textwrap"
  },
  "type": "import"
 },
 "sklearn.experimental.tests.test_enable_successive_halving": {
  "data": {},
  "type": "module"
 },
 "sklearn.experimental.tests.test_enable_successive_halving.assert_run_python_script": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_run_python_script"
  },
  "type": "import"
 },
 "sklearn.experimental.tests.test_enable_successive_halving.test_imports_strategies": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "sklearn.experimental.tests.test_enable_successive_halving.textwrap",
    "sklearn.utils._testing.assert_run_python_script"
   ]
  },
  "type": "function"
 },
 "sklearn.experimental.tests.test_enable_successive_halving.textwrap": {
  "data": {
   "shadows": "textwrap"
  },
  "type": "import"
 },
 "sklearn.externals": {
  "data": {},
  "type": "module"
 },
 "sklearn.externals._lobpcg": {
  "data": {},
  "type": "module"
 },
 "sklearn.externals._lobpcg.LinAlgError": {
  "data": {
   "shadows": "scipy.linalg.LinAlgError"
  },
  "type": "import"
 },
 "sklearn.externals._lobpcg.__all__": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "sklearn.externals._lobpcg._applyConstraints": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "numpy.dot",
    "scipy.linalg.cho_solve"
   ]
  },
  "type": "function"
 },
 "sklearn.externals._lobpcg._as2d": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "sklearn.externals._lobpcg._b_orthonormalize": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "B",
    "numpy.finfo",
    "numpy.matmul",
    "scipy.linalg.LinAlgError",
    "scipy.linalg.cholesky",
    "scipy.linalg.inv"
   ]
  },
  "type": "function"
 },
 "sklearn.externals._lobpcg._get_indx": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "numpy.argsort"
   ]
  },
  "type": "function"
 },
 "sklearn.externals._lobpcg._makeOperator": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "ValueError",
    "scipy.sparse.linalg.aslinearoperator"
   ]
  },
  "type": "function"
 },
 "sklearn.externals._lobpcg._report_nonhermitian": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "max",
    "numpy.finfo",
    "print",
    "scipy.linalg.norm"
   ]
  },
  "type": "function"
 },
 "sklearn.externals._lobpcg._save": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "numpy.savetxt"
   ]
  },
  "type": "function"
 },
 "sklearn.externals._lobpcg.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "sklearn.externals._lobpcg.aslinearoperator": {
  "data": {
   "shadows": "scipy.sparse.linalg.aslinearoperator"
  },
  "type": "import"
 },
 "sklearn.externals._lobpcg.bmat": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "numpy.bmat",
    "sklearn.externals._lobpcg.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.externals._lobpcg.cho_factor": {
  "data": {
   "shadows": "scipy.linalg.cho_factor"
  },
  "type": "import"
 },
 "sklearn.externals._lobpcg.cho_solve": {
  "data": {
   "shadows": "scipy.linalg.cho_solve"
  },
  "type": "import"
 },
 "sklearn.externals._lobpcg.cholesky": {
  "data": {
   "shadows": "scipy.linalg.cholesky"
  },
  "type": "import"
 },
 "sklearn.externals._lobpcg.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sklearn.externals._lobpcg.eigh": {
  "data": {
   "shadows": "scipy.linalg.eigh"
  },
  "type": "import"
 },
 "sklearn.externals._lobpcg.inv": {
  "data": {
   "shadows": "scipy.linalg.inv"
  },
  "type": "import"
 },
 "sklearn.externals._lobpcg.lobpcg": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "A",
    "A.dtype",
    "B",
    "B.dtype",
    "M",
    "NotImplementedError",
    "ValueError",
    "_handle_gramA_gramB_verbosity",
    "bool",
    "len",
    "min",
    "numpy.asarray",
    "numpy.diag",
    "numpy.dot",
    "numpy.eye",
    "numpy.matmul",
    "numpy.newaxis",
    "numpy.ones",
    "numpy.sqrt",
    "numpy.sum",
    "numpy.where",
    "numpy.zeros",
    "print",
    "scipy.linalg.LinAlgError",
    "scipy.linalg.cho_factor",
    "scipy.linalg.eigh",
    "sklearn.externals._lobpcg._applyConstraints",
    "sklearn.externals._lobpcg._as2d",
    "sklearn.externals._lobpcg._b_orthonormalize",
    "sklearn.externals._lobpcg._get_indx",
    "sklearn.externals._lobpcg._makeOperator",
    "sklearn.externals._lobpcg.bmat"
   ]
  },
  "type": "function"
 },
 "sklearn.externals._lobpcg.lobpcg._handle_gramA_gramB_verbosity": {
  "data": {
   "lineno": 564,
   "symbols_in_volume": [
    "numpy.savetxt",
    "sklearn.externals._lobpcg._report_nonhermitian"
   ]
  },
  "type": "function"
 },
 "sklearn.externals._lobpcg.norm": {
  "data": {
   "shadows": "scipy.linalg.norm"
  },
  "type": "import"
 },
 "sklearn.externals._lobpcg.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.externals._lobpcg.orth": {
  "data": {
   "shadows": "scipy.linalg.orth"
  },
  "type": "import"
 },
 "sklearn.externals._lobpcg.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "sklearn.externals._lobpcg.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.externals._pep562": {
  "data": {},
  "type": "module"
 },
 "sklearn.externals._pep562.Pep562": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "sklearn.externals._pep562.Pep562.__dir__": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "dir"
   ]
  },
  "type": "function"
 },
 "sklearn.externals._pep562.Pep562.__getattr__": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "AttributeError",
    "getattr"
   ]
  },
  "type": "function"
 },
 "sklearn.externals._pep562.Pep562.__init__": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "getattr",
    "sklearn.externals._pep562.sys"
   ]
  },
  "type": "function"
 },
 "sklearn.externals._pep562.__all__": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "sklearn.externals._pep562.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "sklearn.externals._pep562.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "sklearn.externals._pilutil": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "PIL.Image",
    "PIL.Image.frombytes",
    "PIL.Image.fromstring",
    "hasattr"
   ]
  },
  "type": "module"
 },
 "sklearn.externals._pilutil.Image": {
  "data": {
   "shadows": "Image"
  },
  "type": "import"
 },
 "sklearn.externals._pilutil.PILLOW_ERROR_MESSAGE": {
  "data": {
   "lineno": 68
  },
  "type": "constant"
 },
 "sklearn.externals._pilutil.__all__": {
  "data": {
   "lineno": 65
  },
  "type": "constant"
 },
 "sklearn.externals._pilutil._errstr": {
  "data": {
   "lineno": 322
  },
  "type": "constant"
 },
 "sklearn.externals._pilutil.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "sklearn.externals._pilutil.amax": {
  "data": {
   "shadows": "numpy.amax"
  },
  "type": "import"
 },
 "sklearn.externals._pilutil.amin": {
  "data": {
   "shadows": "numpy.amin"
  },
  "type": "import"
 },
 "sklearn.externals._pilutil.arange": {
  "data": {
   "shadows": "numpy.arange"
  },
  "type": "import"
 },
 "sklearn.externals._pilutil.array": {
  "data": {
   "shadows": "numpy.array"
  },
  "type": "import"
 },
 "sklearn.externals._pilutil.asarray": {
  "data": {
   "shadows": "numpy.asarray"
  },
  "type": "import"
 },
 "sklearn.externals._pilutil.bytescale": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "numpy.uint8"
   ]
  },
  "type": "function"
 },
 "sklearn.externals._pilutil.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sklearn.externals._pilutil.fromimage": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "ImportError",
    "PIL.Image.isImageType",
    "TypeError",
    "numpy.array",
    "sklearn.externals._pilutil.PILLOW_ERROR_MESSAGE",
    "sklearn.externals._pilutil.pillow_installed"
   ]
  },
  "type": "function"
 },
 "sklearn.externals._pilutil.imread": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "ImportError",
    "PIL.Image.open",
    "sklearn.externals._pilutil.PILLOW_ERROR_MESSAGE",
    "sklearn.externals._pilutil.fromimage",
    "sklearn.externals._pilutil.pillow_installed"
   ]
  },
  "type": "function"
 },
 "sklearn.externals._pilutil.imresize": {
  "data": {
   "lineno": 451,
   "symbols_in_volume": [
    "int",
    "numpy.array",
    "numpy.issubdtype",
    "sklearn.externals._pilutil.fromimage",
    "sklearn.externals._pilutil.numpy",
    "sklearn.externals._pilutil.toimage",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.externals._pilutil.imsave": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "format",
    "sklearn.externals._pilutil.toimage"
   ]
  },
  "type": "function"
 },
 "sklearn.externals._pilutil.iscomplexobj": {
  "data": {
   "shadows": "numpy.iscomplexobj"
  },
  "type": "import"
 },
 "sklearn.externals._pilutil.issubdtype": {
  "data": {
   "shadows": "numpy.issubdtype"
  },
  "type": "import"
 },
 "sklearn.externals._pilutil.newaxis": {
  "data": {
   "shadows": "numpy.newaxis"
  },
  "type": "import"
 },
 "sklearn.externals._pilutil.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.externals._pilutil.ones": {
  "data": {
   "shadows": "numpy.ones"
  },
  "type": "import"
 },
 "sklearn.externals._pilutil.pillow_installed": {
  "data": {
   "lineno": 63
  },
  "type": "constant"
 },
 "sklearn.externals._pilutil.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "sklearn.externals._pilutil.ravel": {
  "data": {
   "shadows": "numpy.ravel"
  },
  "type": "import"
 },
 "sklearn.externals._pilutil.toimage": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": [
    "ImportError",
    "PIL.Image.frombytes",
    "ValueError",
    "len",
    "list",
    "numpy.amax",
    "numpy.amin",
    "numpy.arange",
    "numpy.asarray",
    "numpy.iscomplexobj",
    "numpy.newaxis",
    "numpy.ones",
    "numpy.ravel",
    "numpy.transpose",
    "numpy.uint8",
    "sklearn.externals._pilutil.PILLOW_ERROR_MESSAGE",
    "sklearn.externals._pilutil._errstr",
    "sklearn.externals._pilutil.bytescale",
    "sklearn.externals._pilutil.numpy",
    "sklearn.externals._pilutil.pillow_installed"
   ]
  },
  "type": "function"
 },
 "sklearn.externals._pilutil.transpose": {
  "data": {
   "shadows": "numpy.transpose"
  },
  "type": "import"
 },
 "sklearn.externals._pilutil.uint8": {
  "data": {
   "shadows": "numpy.uint8"
  },
  "type": "import"
 },
 "sklearn.externals.conftest": {
  "data": {},
  "type": "module"
 },
 "sklearn.externals.conftest.pytest_ignore_collect": {
  "data": {
   "lineno": 5
  },
  "type": "function"
 },
 "sklearn.feature_extraction": {
  "data": {},
  "type": "module"
 },
 "sklearn.feature_extraction.__all__": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "sklearn.feature_extraction._dict_vectorizer": {
  "data": {},
  "type": "module"
 },
 "sklearn.feature_extraction._dict_vectorizer.DictVectorizer": {
  "data": {
   "lineno": 26
  },
  "type": "class"
 },
 "sklearn.feature_extraction._dict_vectorizer.DictVectorizer.__init__": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "numpy.float64"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction._dict_vectorizer.DictVectorizer._add_iterable_element": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "len",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction._dict_vectorizer.DictVectorizer._more_tags": {
  "data": {
   "lineno": 425
  },
  "type": "function"
 },
 "sklearn.feature_extraction._dict_vectorizer.DictVectorizer._transform": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "array.array",
    "collections.abc.Iterable",
    "collections.abc.Mapping",
    "enumerate",
    "isinstance",
    "len",
    "numbers.Number",
    "numpy.empty",
    "numpy.frombuffer",
    "numpy.int32",
    "numpy.intc",
    "scipy.sparse.csr_matrix",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction._dict_vectorizer.DictVectorizer.fit": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "TypeError",
    "collections.abc.Iterable",
    "collections.abc.Mapping",
    "enumerate",
    "isinstance",
    "len",
    "numbers.Number",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction._dict_vectorizer.DictVectorizer.fit_transform": {
  "data": {
   "lineno": 268
  },
  "type": "function"
 },
 "sklearn.feature_extraction._dict_vectorizer.DictVectorizer.get_feature_names": {
  "data": {
   "lineno": 371
  },
  "type": "function"
 },
 "sklearn.feature_extraction._dict_vectorizer.DictVectorizer.inverse_transform": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": [
    "check_array",
    "dict",
    "dict_type",
    "enumerate",
    "range",
    "scipy.sparse.issparse",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction._dict_vectorizer.DictVectorizer.restrict": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": [
    "len",
    "numpy.where",
    "operator.itemgetter",
    "sorted"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction._dict_vectorizer.DictVectorizer.transform": {
  "data": {
   "lineno": 333,
   "symbols_in_volume": [
    "KeyError",
    "dtype",
    "enumerate",
    "isinstance",
    "len",
    "numpy.zeros",
    "sklearn.feature_extraction._dict_vectorizer._tosequence",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction._dict_vectorizer.Iterable": {
  "data": {
   "shadows": "collections.abc.Iterable"
  },
  "type": "import"
 },
 "sklearn.feature_extraction._dict_vectorizer.Mapping": {
  "data": {
   "shadows": "collections.abc.Mapping"
  },
  "type": "import"
 },
 "sklearn.feature_extraction._dict_vectorizer.Number": {
  "data": {
   "shadows": "numbers.Number"
  },
  "type": "import"
 },
 "sklearn.feature_extraction._dict_vectorizer._tosequence": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "collections.abc.Mapping",
    "isinstance",
    "tosequence"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction._dict_vectorizer.array": {
  "data": {
   "shadows": "array.array"
  },
  "type": "import"
 },
 "sklearn.feature_extraction._dict_vectorizer.itemgetter": {
  "data": {
   "shadows": "operator.itemgetter"
  },
  "type": "import"
 },
 "sklearn.feature_extraction._dict_vectorizer.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.feature_extraction._dict_vectorizer.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.feature_extraction._hash": {
  "data": {},
  "type": "module"
 },
 "sklearn.feature_extraction._hash.FeatureHasher": {
  "data": {
   "lineno": 28
  },
  "type": "class"
 },
 "sklearn.feature_extraction._hash.FeatureHasher.__init__": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "numpy.float64"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction._hash.FeatureHasher._more_tags": {
  "data": {
   "lineno": 172
  },
  "type": "function"
 },
 "sklearn.feature_extraction._hash.FeatureHasher._validate_params": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "isinstance",
    "numpy.iinfo",
    "numpy.int32",
    "sklearn.feature_extraction._hash.numbers",
    "staticmethod",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction._hash.FeatureHasher.fit": {
  "data": {
   "lineno": 116
  },
  "type": "function"
 },
 "sklearn.feature_extraction._hash.FeatureHasher.transform": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "ValueError",
    "iter",
    "scipy.sparse.csr_matrix",
    "sklearn.feature_extraction._hash._iteritems"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction._hash._hashing_transform": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction._hash._iteritems": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction._hash.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.feature_extraction._hash.numbers": {
  "data": {
   "shadows": "numbers"
  },
  "type": "import"
 },
 "sklearn.feature_extraction._hash.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.feature_extraction._stop_words": {
  "data": {
   "symbols_in_volume": [
    "frozenset"
   ]
  },
  "type": "module"
 },
 "sklearn.feature_extraction._stop_words.ENGLISH_STOP_WORDS": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "sklearn.feature_extraction.image": {
  "data": {},
  "type": "module"
 },
 "sklearn.feature_extraction.image.PatchExtractor": {
  "data": {
   "lineno": 449
  },
  "type": "class"
 },
 "sklearn.feature_extraction.image.PatchExtractor.__init__": {
  "data": {
   "lineno": 486
  },
  "type": "function"
 },
 "sklearn.feature_extraction.image.PatchExtractor._more_tags": {
  "data": {
   "lineno": 549
  },
  "type": "function"
 },
 "sklearn.feature_extraction.image.PatchExtractor.fit": {
  "data": {
   "lineno": 493
  },
  "type": "function"
 },
 "sklearn.feature_extraction.image.PatchExtractor.transform": {
  "data": {
   "lineno": 506,
   "symbols_in_volume": [
    "check_random_state",
    "enumerate",
    "numpy.empty",
    "numpy.reshape",
    "sklearn.feature_extraction.image._compute_n_patches",
    "sklearn.feature_extraction.image.extract_patches_2d"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.image.__all__": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "sklearn.feature_extraction.image._compute_gradient_3d": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "numpy.abs"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.image._compute_n_patches": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "isinstance",
    "sklearn.feature_extraction.image.numbers"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.image._extract_patches": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "numpy.array",
    "numpy.lib.stride_tricks.as_strided",
    "sklearn.feature_extraction.image.numbers",
    "slice",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.image._make_edges_3d": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.hstack",
    "numpy.vstack"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.image._mask_edges_weights": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "numpy.in1d",
    "numpy.logical_and",
    "numpy.searchsorted",
    "numpy.unique"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.image._to_graph": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "bool",
    "int",
    "numpy.arange",
    "numpy.asarray",
    "numpy.atleast_3d",
    "numpy.hstack",
    "numpy.ndarray",
    "numpy.ones",
    "numpy.sum",
    "return_as",
    "scipy.sparse.coo_matrix",
    "sklearn.feature_extraction.image._compute_gradient_3d",
    "sklearn.feature_extraction.image._make_edges_3d",
    "sklearn.feature_extraction.image._mask_edges_weights"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.image.as_strided": {
  "data": {
   "shadows": "numpy.lib.stride_tricks.as_strided"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.image.extract_patches_2d": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": [
    "ValueError",
    "check_array",
    "check_random_state",
    "sklearn.feature_extraction.image._compute_n_patches",
    "sklearn.feature_extraction.image._extract_patches"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.image.grid_to_graph": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "int",
    "return_as",
    "scipy.sparse.coo_matrix",
    "sklearn.feature_extraction.image._to_graph"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.image.img_to_graph": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "numpy.atleast_3d",
    "return_as",
    "scipy.sparse.coo_matrix",
    "sklearn.feature_extraction.image._to_graph"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.image.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.image.numbers": {
  "data": {
   "shadows": "numbers"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.image.product": {
  "data": {
   "shadows": "itertools.product"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.image.reconstruct_from_patches_2d": {
  "data": {
   "lineno": 405,
   "symbols_in_volume": [
    "float",
    "itertools.product",
    "min",
    "numpy.zeros",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.image.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.setup": {
  "data": {},
  "type": "module"
 },
 "sklearn.feature_extraction.setup.Configuration": {
  "data": {
   "shadows": "numpy.distutils.misc_util.Configuration"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.setup.configuration": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "numpy.distutils.misc_util.Configuration",
    "sklearn.feature_extraction.setup.numpy",
    "sklearn.feature_extraction.setup.os",
    "sklearn.feature_extraction.setup.platform"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.setup.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.setup.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.setup.platform": {
  "data": {
   "shadows": "platform"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests": {
  "data": {},
  "type": "module"
 },
 "sklearn.feature_extraction.tests.test_dict_vectorizer": {
  "data": {},
  "type": "module"
 },
 "sklearn.feature_extraction.tests.test_dict_vectorizer.DictVectorizer": {
  "data": {
   "shadows": "sklearn.feature_extraction.DictVectorizer"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_dict_vectorizer.Random": {
  "data": {
   "shadows": "random.Random"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_dict_vectorizer.SelectKBest": {
  "data": {
   "shadows": "sklearn.feature_selection.SelectKBest"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_dict_vectorizer.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_dict_vectorizer.chi2": {
  "data": {
   "shadows": "sklearn.feature_selection.chi2"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_dict_vectorizer.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_dict_vectorizer.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_dict_vectorizer.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_dict_vectorizer.test_deterministic_vocabulary": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "dict",
    "random.Random",
    "range",
    "sklearn.feature_extraction.DictVectorizer"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_dict_vectorizer.test_dictvectorizer": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "int",
    "iter",
    "numpy.float32",
    "numpy.int16",
    "numpy.testing.assert_array_equal",
    "scipy.sparse.issparse",
    "sklearn.feature_extraction.DictVectorizer",
    "sklearn.feature_extraction.tests.test_dict_vectorizer.pytest",
    "sorted"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_dict_vectorizer.test_feature_selection": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "dict",
    "range",
    "sklearn.feature_extraction.DictVectorizer",
    "sklearn.feature_selection.SelectKBest",
    "sklearn.feature_selection.chi2"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_dict_vectorizer.test_iterable_not_string_error": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "TypeError",
    "sklearn.feature_extraction.DictVectorizer",
    "sklearn.feature_extraction.tests.test_dict_vectorizer.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_dict_vectorizer.test_iterable_value": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "numpy.testing.assert_array_equal",
    "sklearn.feature_extraction.DictVectorizer"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_dict_vectorizer.test_mapping_error": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "TypeError",
    "sklearn.feature_extraction.DictVectorizer",
    "sklearn.feature_extraction.tests.test_dict_vectorizer.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_dict_vectorizer.test_n_features_in": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "hasattr",
    "sklearn.feature_extraction.DictVectorizer"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_dict_vectorizer.test_one_of_k": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "sklearn.feature_extraction.DictVectorizer"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_dict_vectorizer.test_unseen_or_no_features": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "ValueError",
    "numpy.testing.assert_array_equal",
    "numpy.zeros",
    "sklearn.feature_extraction.DictVectorizer",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_feature_hasher": {
  "data": {
   "symbols_in_volume": [
    "sklearn.utils._testing.fails_if_pypy"
   ]
  },
  "type": "module"
 },
 "sklearn.feature_extraction.tests.test_feature_hasher.FeatureHasher": {
  "data": {
   "shadows": "sklearn.feature_extraction.FeatureHasher"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_feature_hasher._hashing_transform": {
  "data": {
   "shadows": "sklearn.feature_extraction._hashing_fast.transform"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_feature_hasher.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_feature_hasher.fails_if_pypy": {
  "data": {
   "shadows": "sklearn.utils._testing.fails_if_pypy"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_feature_hasher.ignore_warnings": {
  "data": {
   "shadows": "sklearn.utils._testing.ignore_warnings"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_feature_hasher.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_feature_hasher.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_feature_hasher.pytestmark": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "sklearn.feature_extraction.tests.test_feature_hasher.test_feature_hasher_dicts": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "iter",
    "numpy.testing.assert_array_equal",
    "sklearn.feature_extraction.FeatureHasher"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_feature_hasher.test_feature_hasher_pairs": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "iter",
    "numpy.abs",
    "sklearn.feature_extraction.FeatureHasher",
    "sorted"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_feature_hasher.test_feature_hasher_pairs_with_string_values": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "iter",
    "numpy.abs",
    "numpy.testing.assert_array_equal",
    "sklearn.feature_extraction.FeatureHasher",
    "sorted"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_feature_hasher.test_feature_hasher_strings": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "len",
    "sklearn.feature_extraction.FeatureHasher"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_feature_hasher.test_hash_collisions": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "abs",
    "len",
    "list",
    "sklearn.feature_extraction.FeatureHasher"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_feature_hasher.test_hash_empty_input": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "iter",
    "len",
    "numpy.testing.assert_array_equal",
    "numpy.zeros",
    "range",
    "sklearn.feature_extraction.FeatureHasher"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_feature_hasher.test_hasher_alternate_sign": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "FutureWarning",
    "list",
    "sklearn.feature_extraction.FeatureHasher",
    "sklearn.utils._testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_feature_hasher.test_hasher_invalid_input": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "Exception",
    "TypeError",
    "ValueError",
    "numpy.uint16",
    "sklearn.feature_extraction.FeatureHasher",
    "sklearn.feature_extraction.tests.test_feature_hasher.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_feature_hasher.test_hasher_set_params": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "TypeError",
    "numpy.inf",
    "sklearn.feature_extraction.FeatureHasher",
    "sklearn.feature_extraction.tests.test_feature_hasher.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_feature_hasher.test_hasher_zeros": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "sklearn.feature_extraction.FeatureHasher"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_feature_hasher.test_hashing_transform_seed": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "AssertionError",
    "numpy.testing.assert_array_equal",
    "sklearn.feature_extraction._hashing_fast.transform",
    "sklearn.feature_extraction.tests.test_feature_hasher.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_image": {
  "data": {
   "symbols_in_volume": [
    "sklearn.feature_extraction.tests.test_image._downsampled_face",
    "sklearn.feature_extraction.tests.test_image._make_images",
    "sklearn.feature_extraction.tests.test_image._orange_face",
    "sklearn.feature_extraction.tests.test_image.downsampled_face"
   ]
  },
  "type": "module"
 },
 "sklearn.feature_extraction.tests.test_image.PatchExtractor": {
  "data": {
   "shadows": "sklearn.feature_extraction.image.PatchExtractor"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_image._downsampled_face": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "AttributeError",
    "numpy.float32",
    "scipy.face",
    "scipy.misc.face"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_image._extract_patches": {
  "data": {
   "shadows": "sklearn.feature_extraction.image._extract_patches"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_image._make_images": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "numpy.zeros",
    "sklearn.feature_extraction.tests.test_image._downsampled_face"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_image._orange_face": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "numpy.zeros",
    "sklearn.feature_extraction.tests.test_image._downsampled_face"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_image.connected_components": {
  "data": {
   "shadows": "scipy.sparse.csgraph.connected_components"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_image.downsampled_face": {
  "data": {
   "lineno": 130
  },
  "type": "constant"
 },
 "sklearn.feature_extraction.tests.test_image.extract_patches_2d": {
  "data": {
   "shadows": "sklearn.feature_extraction.image.extract_patches_2d"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_image.face_collection": {
  "data": {
   "lineno": 132
  },
  "type": "constant"
 },
 "sklearn.feature_extraction.tests.test_image.grid_to_graph": {
  "data": {
   "shadows": "sklearn.feature_extraction.image.grid_to_graph"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_image.ignore_warnings": {
  "data": {
   "shadows": "sklearn.utils._testing.ignore_warnings"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_image.img_to_graph": {
  "data": {
   "shadows": "sklearn.feature_extraction.image.img_to_graph"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_image.misc": {
  "data": {
   "shadows": "scipy.misc"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_image.ndimage": {
  "data": {
   "shadows": "scipy.ndimage"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_image.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_image.orange_face": {
  "data": {
   "lineno": 131
  },
  "type": "constant"
 },
 "sklearn.feature_extraction.tests.test_image.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_image.reconstruct_from_patches_2d": {
  "data": {
   "shadows": "sklearn.feature_extraction.image.reconstruct_from_patches_2d"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_image.sp": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_image.test_connect_regions": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "AttributeError",
    "DeprecationWarning",
    "scipy.face",
    "scipy.misc.face",
    "scipy.ndimage.label",
    "scipy.sparse.csgraph.connected_components",
    "sklearn.feature_extraction.image.img_to_graph",
    "sklearn.utils._testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_image.test_connect_regions_with_grid": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "AttributeError",
    "DeprecationWarning",
    "scipy.face",
    "scipy.misc.face",
    "scipy.ndimage.label",
    "scipy.sparse.csgraph.connected_components",
    "sklearn.feature_extraction.image.grid_to_graph",
    "sklearn.utils._testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_image.test_extract_patch_same_size_image": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "sklearn.feature_extraction.image.extract_patches_2d",
    "sklearn.feature_extraction.tests.test_image.downsampled_face"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_image.test_extract_patches_all": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "sklearn.feature_extraction.image.extract_patches_2d",
    "sklearn.feature_extraction.tests.test_image.downsampled_face"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_image.test_extract_patches_all_color": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "sklearn.feature_extraction.image.extract_patches_2d",
    "sklearn.feature_extraction.tests.test_image.orange_face"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_image.test_extract_patches_all_rect": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "sklearn.feature_extraction.image.extract_patches_2d",
    "sklearn.feature_extraction.tests.test_image.downsampled_face"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_image.test_extract_patches_less_than_max_patches": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "sklearn.feature_extraction.image.extract_patches_2d",
    "sklearn.feature_extraction.tests.test_image.downsampled_face"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_image.test_extract_patches_max_patches": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "sklearn.feature_extraction.image.extract_patches_2d",
    "sklearn.feature_extraction.tests.test_image.downsampled_face",
    "sklearn.feature_extraction.tests.test_image.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_image.test_extract_patches_square": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": [
    "sklearn.feature_extraction.image._extract_patches",
    "sklearn.feature_extraction.tests.test_image.downsampled_face"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_image.test_extract_patches_strided": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "numpy.prod",
    "sklearn.feature_extraction.image._extract_patches",
    "slice",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_image.test_grid_to_graph": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "bool",
    "int",
    "numpy.float64",
    "numpy.int16",
    "numpy.ndarray",
    "numpy.ones",
    "numpy.zeros",
    "scipy.sparse.csgraph.connected_components",
    "sklearn.feature_extraction.image.grid_to_graph"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_image.test_img_to_graph": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "numpy.mgrid",
    "numpy.testing.assert_array_equal",
    "sklearn.feature_extraction.image.img_to_graph"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_image.test_patch_extractor_all_patches": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "len",
    "sklearn.feature_extraction.image.PatchExtractor",
    "sklearn.feature_extraction.tests.test_image.face_collection"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_image.test_patch_extractor_color": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "len",
    "sklearn.feature_extraction.image.PatchExtractor",
    "sklearn.feature_extraction.tests.test_image._make_images",
    "sklearn.feature_extraction.tests.test_image.orange_face"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_image.test_patch_extractor_fit": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "sklearn.feature_extraction.image.PatchExtractor",
    "sklearn.feature_extraction.tests.test_image.face_collection"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_image.test_patch_extractor_max_patches": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "int",
    "len",
    "sklearn.feature_extraction.image.PatchExtractor",
    "sklearn.feature_extraction.tests.test_image.face_collection"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_image.test_patch_extractor_max_patches_default": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "len",
    "sklearn.feature_extraction.image.PatchExtractor",
    "sklearn.feature_extraction.tests.test_image.face_collection"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_image.test_reconstruct_patches_perfect": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "numpy.testing.assert_array_almost_equal",
    "sklearn.feature_extraction.image.extract_patches_2d",
    "sklearn.feature_extraction.image.reconstruct_from_patches_2d",
    "sklearn.feature_extraction.tests.test_image.downsampled_face"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_image.test_reconstruct_patches_perfect_color": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "numpy.testing.assert_array_almost_equal",
    "sklearn.feature_extraction.image.extract_patches_2d",
    "sklearn.feature_extraction.image.reconstruct_from_patches_2d",
    "sklearn.feature_extraction.tests.test_image.orange_face"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_image.test_width_patch": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "sklearn.feature_extraction.image.extract_patches_2d",
    "sklearn.feature_extraction.tests.test_image.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text": {
  "data": {
   "symbols_in_volume": [
    "sklearn.feature_extraction.tests.test_text.JUNK_FOOD_DOCS",
    "sklearn.feature_extraction.tests.test_text.NOTJUNK_FOOD_DOCS"
   ]
  },
  "type": "module"
 },
 "sklearn.feature_extraction.tests.test_text.ALL_FOOD_DOCS": {
  "data": {
   "lineno": 59
  },
  "type": "constant"
 },
 "sklearn.feature_extraction.tests.test_text.CountVectorizer": {
  "data": {
   "shadows": "sklearn.feature_extraction.text.CountVectorizer"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_text.ENGLISH_STOP_WORDS": {
  "data": {
   "shadows": "sklearn.feature_extraction.text.ENGLISH_STOP_WORDS"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_text.GridSearchCV": {
  "data": {
   "shadows": "sklearn.model_selection.GridSearchCV"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_text.HashingVectorizer": {
  "data": {
   "shadows": "sklearn.feature_extraction.text.HashingVectorizer"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_text.IS_PYPY": {
  "data": {
   "shadows": "sklearn.utils.IS_PYPY"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_text.JUNK_FOOD_DOCS": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "sklearn.feature_extraction.tests.test_text.LinearSVC": {
  "data": {
   "shadows": "sklearn.svm.LinearSVC"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_text.Mapping": {
  "data": {
   "shadows": "collections.abc.Mapping"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_text.NOTJUNK_FOOD_DOCS": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "sklearn.feature_extraction.tests.test_text.Pipeline": {
  "data": {
   "shadows": "sklearn.pipeline.Pipeline"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_text.StringIO": {
  "data": {
   "shadows": "io.StringIO"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_text.TfidfTransformer": {
  "data": {
   "shadows": "sklearn.feature_extraction.text.TfidfTransformer"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_text.TfidfVectorizer": {
  "data": {
   "shadows": "sklearn.feature_extraction.text.TfidfVectorizer"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_text._check_stop_words_consistency": {
  "data": {
   "lineno": 1182
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.assert_allclose_dense_sparse": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_allclose_dense_sparse"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_text.assert_almost_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_almost_equal"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_text.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_text.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_text.assert_no_warnings": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_no_warnings"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_text.assert_raise_message": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_raise_message"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_text.assert_warns_message": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_warns_message"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_text.clone": {
  "data": {
   "shadows": "sklearn.base.clone"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_text.cross_val_score": {
  "data": {
   "shadows": "sklearn.model_selection.cross_val_score"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_text.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_text.fails_if_pypy": {
  "data": {
   "shadows": "sklearn.utils._testing.fails_if_pypy"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_text.lazy_analyze": {
  "data": {
   "lineno": 74
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_text.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_text.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_text.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_text.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_text.skip_if_32bit": {
  "data": {
   "shadows": "sklearn.utils._testing.skip_if_32bit"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_text.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_text.split_tokenize": {
  "data": {
   "lineno": 70
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.strip_accents_ascii": {
  "data": {
   "shadows": "sklearn.feature_extraction.text.strip_accents_ascii"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_text.strip_accents_unicode": {
  "data": {
   "shadows": "sklearn.feature_extraction.text.strip_accents_unicode"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_text.strip_eacute": {
  "data": {
   "lineno": 66
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.strip_tags": {
  "data": {
   "shadows": "sklearn.feature_extraction.text.strip_tags"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_text.test_callable_analyzer_change_behavior": {
  "data": {
   "lineno": 1293,
   "symbols_in_volume": [
    "AttributeError",
    "Estimator",
    "FileNotFoundError",
    "open",
    "sklearn.feature_extraction.tests.test_text.pytest",
    "sklearn.feature_extraction.text.CountVectorizer",
    "sklearn.feature_extraction.text.HashingVectorizer",
    "sklearn.feature_extraction.text.TfidfVectorizer",
    "sklearn.utils._testing.fails_if_pypy"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_callable_analyzer_error": {
  "data": {
   "lineno": 1273,
   "symbols_in_volume": [
    "AttributeError",
    "Estimator",
    "FileNotFoundError",
    "issubclass",
    "sklearn.feature_extraction.tests.test_text.pytest",
    "sklearn.feature_extraction.text.CountVectorizer",
    "sklearn.feature_extraction.text.HashingVectorizer",
    "sklearn.feature_extraction.text.TfidfVectorizer"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_callable_analyzer_reraise_error": {
  "data": {
   "lineno": 1309,
   "symbols_in_volume": [
    "Estimator",
    "Exception",
    "issubclass",
    "sklearn.feature_extraction.tests.test_text.pytest",
    "sklearn.feature_extraction.text.CountVectorizer",
    "sklearn.feature_extraction.text.HashingVectorizer",
    "sklearn.feature_extraction.text.TfidfVectorizer"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_callable_analyzer_reraise_error.analyzer": {
  "data": {
   "lineno": 1317,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_char_ngram_analyzer": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "cnga",
    "io.StringIO",
    "sklearn.feature_extraction.text.CountVectorizer"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_char_wb_ngram_analyzer": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "cnga",
    "io.StringIO",
    "sklearn.feature_extraction.text.CountVectorizer"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_count_binary_occurrences": {
  "data": {
   "lineno": 721,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.testing.assert_array_equal",
    "sklearn.feature_extraction.text.CountVectorizer"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_count_vectorizer_max_features": {
  "data": {
   "lineno": 649,
   "symbols_in_volume": [
    "numpy.argmax",
    "sklearn.feature_extraction.tests.test_text.JUNK_FOOD_DOCS",
    "sklearn.feature_extraction.text.CountVectorizer"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_count_vectorizer_pipeline_grid_selection": {
  "data": {
   "lineno": 789,
   "symbols_in_volume": [
    "len",
    "numpy.testing.assert_array_equal",
    "sklearn.feature_extraction.tests.test_text.JUNK_FOOD_DOCS",
    "sklearn.feature_extraction.tests.test_text.NOTJUNK_FOOD_DOCS",
    "sklearn.feature_extraction.text.CountVectorizer",
    "sklearn.model_selection.GridSearchCV",
    "sklearn.model_selection.train_test_split",
    "sklearn.pipeline.Pipeline",
    "sklearn.svm.LinearSVC"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_countvectorizer_custom_token_pattern": {
  "data": {
   "lineno": 344,
   "symbols_in_volume": [
    "sklearn.feature_extraction.text.CountVectorizer"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_countvectorizer_custom_token_pattern_with_several_group": {
  "data": {
   "lineno": 362,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.feature_extraction.tests.test_text.pytest",
    "sklearn.feature_extraction.text.CountVectorizer"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_countvectorizer_custom_vocabulary": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "collections.abc.Mapping",
    "collections.defaultdict",
    "dict",
    "functools.partial",
    "int",
    "isinstance",
    "iter",
    "len",
    "list",
    "set",
    "sklearn.feature_extraction.tests.test_text.JUNK_FOOD_DOCS",
    "sklearn.feature_extraction.text.CountVectorizer",
    "typ"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_countvectorizer_custom_vocabulary_gap_index": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.feature_extraction.tests.test_text.pytest",
    "sklearn.feature_extraction.text.CountVectorizer"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_countvectorizer_custom_vocabulary_pipeline": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "len",
    "set",
    "sklearn.feature_extraction.tests.test_text.ALL_FOOD_DOCS",
    "sklearn.feature_extraction.text.CountVectorizer",
    "sklearn.feature_extraction.text.TfidfTransformer",
    "sklearn.pipeline.Pipeline"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_countvectorizer_custom_vocabulary_repeated_indices": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.feature_extraction.tests.test_text.pytest",
    "sklearn.feature_extraction.text.CountVectorizer"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_countvectorizer_empty_vocabulary": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.feature_extraction.tests.test_text.pytest",
    "sklearn.feature_extraction.text.CountVectorizer"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_countvectorizer_sort_features_64bit_sparse_indices": {
  "data": {
   "lineno": 1215,
   "symbols_in_volume": [
    "numpy.int64",
    "scipy.sparse.csr_matrix",
    "sklearn.feature_extraction.text.CountVectorizer",
    "sklearn.utils._testing.skip_if_32bit"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_countvectorizer_stop_words": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "ValueError",
    "set",
    "sklearn.feature_extraction.tests.test_text.pytest",
    "sklearn.feature_extraction.text.CountVectorizer",
    "sklearn.feature_extraction.text.ENGLISH_STOP_WORDS"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_countvectorizer_vocab_dicts_when_pickling": {
  "data": {
   "lineno": 976,
   "symbols_in_volume": [
    "dict",
    "numpy.array",
    "numpy.random.RandomState",
    "range",
    "sklearn.feature_extraction.tests.test_text.ALL_FOOD_DOCS",
    "sklearn.feature_extraction.tests.test_text.pickle",
    "sklearn.feature_extraction.text.CountVectorizer"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_countvectorizer_vocab_sets_when_pickling": {
  "data": {
   "lineno": 961,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.random.RandomState",
    "range",
    "set",
    "sklearn.feature_extraction.tests.test_text.ALL_FOOD_DOCS",
    "sklearn.feature_extraction.tests.test_text.pickle",
    "sklearn.feature_extraction.text.CountVectorizer"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_feature_names": {
  "data": {
   "lineno": 600,
   "symbols_in_volume": [
    "ValueError",
    "enumerate",
    "len",
    "numpy.testing.assert_array_equal",
    "sklearn.feature_extraction.tests.test_text.ALL_FOOD_DOCS",
    "sklearn.feature_extraction.tests.test_text.pytest",
    "sklearn.feature_extraction.text.CountVectorizer"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_fit_countvectorizer_twice": {
  "data": {
   "lineno": 337,
   "symbols_in_volume": [
    "sklearn.feature_extraction.tests.test_text.ALL_FOOD_DOCS",
    "sklearn.feature_extraction.text.CountVectorizer"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_hashed_binary_occurrences": {
  "data": {
   "lineno": 744,
   "symbols_in_volume": [
    "numpy.float64",
    "numpy.max",
    "sklearn.feature_extraction.text.HashingVectorizer",
    "sklearn.utils._testing.fails_if_pypy"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_hashing_vectorizer": {
  "data": {
   "lineno": 561,
   "symbols_in_volume": [
    "len",
    "numpy.linalg.norm",
    "numpy.max",
    "numpy.min",
    "range",
    "sklearn.feature_extraction.tests.test_text.ALL_FOOD_DOCS",
    "sklearn.feature_extraction.text.HashingVectorizer",
    "sklearn.utils._testing.assert_almost_equal",
    "sklearn.utils._testing.fails_if_pypy"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_hashingvectorizer_nan_in_docs": {
  "data": {
   "lineno": 1062,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.utils._testing.assert_raise_message",
    "sklearn.utils._testing.fails_if_pypy"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_hashingvectorizer_nan_in_docs.func": {
  "data": {
   "lineno": 1069,
   "symbols_in_volume": [
    "numpy.nan",
    "sklearn.feature_extraction.text.HashingVectorizer"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_n_features_in": {
  "data": {
   "lineno": 1369,
   "symbols_in_volume": [
    "Vectorizer",
    "hasattr",
    "sklearn.feature_extraction.tests.test_text.JUNK_FOOD_DOCS",
    "sklearn.feature_extraction.tests.test_text.pytest",
    "sklearn.feature_extraction.text.CountVectorizer",
    "sklearn.feature_extraction.text.HashingVectorizer"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_non_unique_vocab": {
  "data": {
   "lineno": 1055,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.feature_extraction.tests.test_text.pytest",
    "sklearn.feature_extraction.text.CountVectorizer"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_pickling_built_processors": {
  "data": {
   "lineno": 942,
   "symbols_in_volume": [
    "factory",
    "function",
    "roundtripped_function",
    "sklearn.feature_extraction.tests.test_text.pickle",
    "sklearn.feature_extraction.tests.test_text.pytest",
    "sklearn.feature_extraction.text.CountVectorizer",
    "sklearn.feature_extraction.text.CountVectorizer.build_analyzer",
    "sklearn.feature_extraction.text.CountVectorizer.build_preprocessor",
    "sklearn.feature_extraction.text.CountVectorizer.build_tokenizer"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_pickling_transformer": {
  "data": {
   "lineno": 1014,
   "symbols_in_volume": [
    "numpy.testing.assert_array_equal",
    "sklearn.feature_extraction.tests.test_text.JUNK_FOOD_DOCS",
    "sklearn.feature_extraction.tests.test_text.pickle",
    "sklearn.feature_extraction.text.CountVectorizer",
    "sklearn.feature_extraction.text.TfidfTransformer",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_pickling_vectorizer": {
  "data": {
   "lineno": 913,
   "symbols_in_volume": [
    "isinstance",
    "numpy.testing.assert_array_equal",
    "sklearn.feature_extraction.tests.test_text.JUNK_FOOD_DOCS",
    "sklearn.feature_extraction.tests.test_text.lazy_analyze",
    "sklearn.feature_extraction.tests.test_text.pickle",
    "sklearn.feature_extraction.tests.test_text.strip_eacute",
    "sklearn.feature_extraction.text.CountVectorizer",
    "sklearn.feature_extraction.text.HashingVectorizer",
    "sklearn.feature_extraction.text.TfidfVectorizer",
    "sklearn.feature_extraction.text.strip_tags",
    "sklearn.utils.IS_PYPY",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_stop_word_validation_custom_preprocessor": {
  "data": {
   "lineno": 1244,
   "symbols_in_volume": [
    "CustomEstimator",
    "Estimator",
    "sklearn.feature_extraction.tests.test_text._check_stop_words_consistency",
    "sklearn.feature_extraction.tests.test_text.pytest",
    "sklearn.feature_extraction.tests.test_text.re",
    "sklearn.feature_extraction.text.CountVectorizer",
    "sklearn.feature_extraction.text.HashingVectorizer",
    "sklearn.feature_extraction.text.TfidfVectorizer",
    "sklearn.utils._testing.fails_if_pypy"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_stop_word_validation_custom_preprocessor.CustomEstimator": {
  "data": {
   "lineno": 1260,
   "symbols_in_volume": [
    "Estimator"
   ]
  },
  "type": "class"
 },
 "sklearn.feature_extraction.tests.test_text.test_stop_word_validation_custom_preprocessor.CustomEstimator.build_preprocessor": {
  "data": {
   "lineno": 1261
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_stop_words_removal": {
  "data": {
   "lineno": 992,
   "symbols_in_volume": [
    "delattr",
    "numpy.testing.assert_array_equal",
    "sklearn.feature_extraction.tests.test_text.JUNK_FOOD_DOCS",
    "sklearn.feature_extraction.tests.test_text.strip_eacute",
    "sklearn.feature_extraction.text.CountVectorizer",
    "sklearn.feature_extraction.text.TfidfVectorizer",
    "sklearn.feature_extraction.text.strip_tags"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_strip_accents": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "sklearn.feature_extraction.text.strip_accents_unicode"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_sublinear_tf": {
  "data": {
   "lineno": 424,
   "symbols_in_volume": [
    "sklearn.feature_extraction.text.TfidfTransformer"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_tf_idf_smoothing": {
  "data": {
   "lineno": 381,
   "symbols_in_volume": [
    "numpy.testing.assert_array_almost_equal",
    "sklearn.feature_extraction.text.TfidfTransformer"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_tfidf_no_smoothing": {
  "data": {
   "lineno": 401,
   "symbols_in_volume": [
    "RuntimeWarning",
    "numpy.testing.assert_array_almost_equal",
    "sklearn.feature_extraction.text.TfidfTransformer",
    "sklearn.utils._testing.assert_warns_message"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_tfidf_transformer_sparse": {
  "data": {
   "lineno": 1121,
   "symbols_in_volume": [
    "numpy.float64",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.rand",
    "sklearn.feature_extraction.text.TfidfTransformer",
    "sklearn.utils._testing.assert_allclose_dense_sparse"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_tfidf_transformer_type": {
  "data": {
   "lineno": 1114,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.float64",
    "scipy.sparse.rand",
    "sklearn.feature_extraction.tests.test_text.pytest",
    "sklearn.feature_extraction.text.TfidfTransformer"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_tfidf_vectorizer_setter": {
  "data": {
   "lineno": 1035,
   "symbols_in_volume": [
    "numpy.testing.assert_array_equal",
    "sklearn.feature_extraction.tests.test_text.JUNK_FOOD_DOCS",
    "sklearn.feature_extraction.text.TfidfVectorizer"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_tfidf_vectorizer_setters": {
  "data": {
   "lineno": 548,
   "symbols_in_volume": [
    "sklearn.feature_extraction.text.TfidfVectorizer"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_tfidf_vectorizer_type": {
  "data": {
   "lineno": 1132,
   "symbols_in_volume": [
    "UserWarning",
    "isinstance",
    "len",
    "numpy.array",
    "numpy.float32",
    "numpy.float64",
    "numpy.int32",
    "numpy.int64",
    "sklearn.feature_extraction.tests.test_text.pytest",
    "sklearn.feature_extraction.text.TfidfVectorizer"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_tfidf_vectorizer_with_fixed_vocabulary": {
  "data": {
   "lineno": 903,
   "symbols_in_volume": [
    "numpy.testing.assert_array_almost_equal",
    "sklearn.feature_extraction.tests.test_text.ALL_FOOD_DOCS",
    "sklearn.feature_extraction.text.TfidfVectorizer"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_tfidfvectorizer_binary": {
  "data": {
   "lineno": 1076,
   "symbols_in_volume": [
    "numpy.testing.assert_array_equal",
    "sklearn.feature_extraction.text.TfidfVectorizer"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_tfidfvectorizer_export_idf": {
  "data": {
   "lineno": 1087,
   "symbols_in_volume": [
    "numpy.testing.assert_array_almost_equal",
    "sklearn.feature_extraction.tests.test_text.JUNK_FOOD_DOCS",
    "sklearn.feature_extraction.text.TfidfVectorizer"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_tfidfvectorizer_invalid_idf_attr": {
  "data": {
   "lineno": 1045,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "setattr",
    "sklearn.feature_extraction.tests.test_text.JUNK_FOOD_DOCS",
    "sklearn.feature_extraction.tests.test_text.pytest",
    "sklearn.feature_extraction.text.TfidfVectorizer"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_tie_breaking_sample_order_invariance": {
  "data": {
   "lineno": 1381,
   "symbols_in_volume": [
    "sklearn.feature_extraction.text.CountVectorizer"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_to_ascii": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "sklearn.feature_extraction.text.strip_accents_ascii"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_transformer_idf_setter": {
  "data": {
   "lineno": 1025,
   "symbols_in_volume": [
    "numpy.testing.assert_array_equal",
    "sklearn.feature_extraction.tests.test_text.JUNK_FOOD_DOCS",
    "sklearn.feature_extraction.text.CountVectorizer",
    "sklearn.feature_extraction.text.TfidfTransformer"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_unicode_decode_error": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "UnicodeDecodeError",
    "ca",
    "sklearn.feature_extraction.tests.test_text.pytest",
    "sklearn.feature_extraction.text.CountVectorizer",
    "wa"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_unused_parameters_warn": {
  "data": {
   "lineno": 1330,
   "symbols_in_volume": [
    "UserWarning",
    "Vectorizer",
    "sklearn.feature_extraction.tests.test_text.JUNK_FOOD_DOCS",
    "sklearn.feature_extraction.tests.test_text.pytest",
    "sklearn.feature_extraction.text.CountVectorizer",
    "sklearn.feature_extraction.text.HashingVectorizer",
    "sklearn.feature_extraction.text.TfidfVectorizer"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_vectorizer": {
  "data": {
   "lineno": 435,
   "symbols_in_volume": [
    "ValueError",
    "hasattr",
    "iter",
    "len",
    "numpy.sum",
    "numpy.testing.assert_array_almost_equal",
    "processor",
    "sklearn.feature_extraction.tests.test_text.ALL_FOOD_DOCS",
    "sklearn.feature_extraction.tests.test_text.pytest",
    "sklearn.feature_extraction.text.CountVectorizer",
    "sklearn.feature_extraction.text.TfidfTransformer",
    "sklearn.feature_extraction.text.TfidfVectorizer",
    "sklearn.feature_extraction.text.strip_accents_ascii"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_vectorizer_inverse_transform": {
  "data": {
   "lineno": 769,
   "symbols_in_volume": [
    "Vectorizer",
    "analyze",
    "numpy.sort",
    "numpy.testing.assert_array_equal",
    "numpy.unique",
    "sklearn.feature_extraction.tests.test_text.ALL_FOOD_DOCS",
    "sklearn.feature_extraction.tests.test_text.pytest",
    "sklearn.feature_extraction.text.CountVectorizer",
    "sklearn.feature_extraction.text.TfidfVectorizer",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_vectorizer_max_df": {
  "data": {
   "lineno": 675,
   "symbols_in_volume": [
    "len",
    "sklearn.feature_extraction.text.CountVectorizer"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_vectorizer_max_features": {
  "data": {
   "lineno": 636,
   "symbols_in_volume": [
    "Vectorizer",
    "set",
    "sklearn.feature_extraction.tests.test_text.ALL_FOOD_DOCS",
    "sklearn.feature_extraction.tests.test_text.pytest",
    "sklearn.feature_extraction.text.CountVectorizer",
    "sklearn.feature_extraction.text.TfidfVectorizer"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_vectorizer_min_df": {
  "data": {
   "lineno": 698,
   "symbols_in_volume": [
    "len",
    "sklearn.feature_extraction.text.CountVectorizer"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_vectorizer_pipeline_cross_validation": {
  "data": {
   "lineno": 864,
   "symbols_in_volume": [
    "len",
    "numpy.testing.assert_array_equal",
    "sklearn.feature_extraction.tests.test_text.JUNK_FOOD_DOCS",
    "sklearn.feature_extraction.tests.test_text.NOTJUNK_FOOD_DOCS",
    "sklearn.feature_extraction.text.TfidfVectorizer",
    "sklearn.model_selection.cross_val_score",
    "sklearn.pipeline.Pipeline",
    "sklearn.svm.LinearSVC"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_vectorizer_pipeline_grid_selection": {
  "data": {
   "lineno": 825,
   "symbols_in_volume": [
    "len",
    "numpy.testing.assert_array_equal",
    "sklearn.feature_extraction.tests.test_text.JUNK_FOOD_DOCS",
    "sklearn.feature_extraction.tests.test_text.NOTJUNK_FOOD_DOCS",
    "sklearn.feature_extraction.text.TfidfVectorizer",
    "sklearn.model_selection.GridSearchCV",
    "sklearn.model_selection.train_test_split",
    "sklearn.pipeline.Pipeline",
    "sklearn.svm.LinearSVC"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_vectorizer_stop_words_inconsistent": {
  "data": {
   "lineno": 1190,
   "symbols_in_volume": [
    "UserWarning",
    "sklearn.feature_extraction.tests.test_text._check_stop_words_consistency",
    "sklearn.feature_extraction.text.CountVectorizer",
    "sklearn.feature_extraction.text.HashingVectorizer",
    "sklearn.feature_extraction.text.TfidfVectorizer",
    "sklearn.utils._testing.assert_no_warnings",
    "sklearn.utils._testing.assert_warns_message",
    "sklearn.utils._testing.fails_if_pypy"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_vectorizer_string_object_as_input": {
  "data": {
   "lineno": 1101,
   "symbols_in_volume": [
    "ValueError",
    "Vectorizer",
    "sklearn.feature_extraction.tests.test_text.pytest",
    "sklearn.feature_extraction.text.CountVectorizer",
    "sklearn.feature_extraction.text.HashingVectorizer",
    "sklearn.feature_extraction.text.TfidfVectorizer",
    "sklearn.utils._testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_vectorizer_unicode": {
  "data": {
   "lineno": 878,
   "symbols_in_volume": [
    "numpy.sort",
    "numpy.testing.assert_array_equal",
    "sklearn.feature_extraction.text.CountVectorizer",
    "sklearn.feature_extraction.text.HashingVectorizer",
    "sklearn.utils._testing.fails_if_pypy"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_vectorizer_vocab_clone": {
  "data": {
   "lineno": 1093,
   "symbols_in_volume": [
    "sklearn.base.clone",
    "sklearn.feature_extraction.tests.test_text.ALL_FOOD_DOCS",
    "sklearn.feature_extraction.text.TfidfVectorizer"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_vectorizers_invalid_ngram_range": {
  "data": {
   "lineno": 1157,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "sklearn.feature_extraction.tests.test_text.pytest",
    "sklearn.feature_extraction.text.CountVectorizer",
    "sklearn.feature_extraction.text.HashingVectorizer",
    "sklearn.feature_extraction.text.TfidfVectorizer",
    "sklearn.utils.IS_PYPY",
    "sklearn.utils._testing.assert_raise_message",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_word_analyzer_unigrams": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "Vectorizer",
    "io.StringIO",
    "sklearn.feature_extraction.tests.test_text.pytest",
    "sklearn.feature_extraction.tests.test_text.split_tokenize",
    "sklearn.feature_extraction.tests.test_text.uppercase",
    "sklearn.feature_extraction.text.CountVectorizer",
    "sklearn.feature_extraction.text.HashingVectorizer",
    "wa"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_word_analyzer_unigrams_and_bigrams": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "sklearn.feature_extraction.text.CountVectorizer",
    "wa"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_word_ngram_analyzer": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "cnga",
    "cnga_file",
    "io.StringIO",
    "sklearn.feature_extraction.text.CountVectorizer"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.train_test_split": {
  "data": {
   "shadows": "sklearn.model_selection.train_test_split"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_text.uppercase": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "sklearn.feature_extraction.text.strip_accents_unicode"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.text": {
  "data": {},
  "type": "module"
 },
 "sklearn.feature_extraction.text.CountVectorizer": {
  "data": {
   "lineno": 808,
   "symbols_in_volume": [
    "sklearn.feature_extraction.text._VectorizerMixin"
   ]
  },
  "type": "class"
 },
 "sklearn.feature_extraction.text.CountVectorizer.__init__": {
  "data": {
   "lineno": 1008,
   "symbols_in_volume": [
    "ValueError",
    "analyzer",
    "input",
    "isinstance",
    "numpy.int64",
    "preprocessor",
    "sklearn.feature_extraction.text.numbers",
    "tokenizer"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.text.CountVectorizer._count_vocab": {
  "data": {
   "lineno": 1097,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "analyze",
    "collections.defaultdict",
    "dict",
    "len",
    "numpy.asarray",
    "numpy.frombuffer",
    "numpy.iinfo",
    "numpy.int32",
    "numpy.int64",
    "numpy.intc",
    "scipy.sparse.csr_matrix",
    "sklearn.feature_extraction.text._make_int_array"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.text.CountVectorizer._limit_features": {
  "data": {
   "lineno": 1056,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "len",
    "list",
    "numpy.asarray",
    "numpy.cumsum",
    "numpy.ones",
    "numpy.where",
    "numpy.zeros",
    "set",
    "sklearn.feature_extraction.text._document_frequency"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.text.CountVectorizer._more_tags": {
  "data": {
   "lineno": 1305
  },
  "type": "function"
 },
 "sklearn.feature_extraction.text.CountVectorizer._sort_features": {
  "data": {
   "lineno": 1042,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "numpy.empty",
    "sorted"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.text.CountVectorizer.fit": {
  "data": {
   "lineno": 1157
  },
  "type": "function"
 },
 "sklearn.feature_extraction.text.CountVectorizer.fit_transform": {
  "data": {
   "lineno": 1173,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "sklearn.feature_extraction.text.numbers",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.text.CountVectorizer.get_feature_names": {
  "data": {
   "lineno": 1291,
   "symbols_in_volume": [
    "operator.itemgetter",
    "sorted"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.text.CountVectorizer.inverse_transform": {
  "data": {
   "lineno": 1260,
   "symbols_in_volume": [
    "list",
    "numpy.argsort",
    "numpy.array",
    "numpy.asmatrix",
    "range",
    "scipy.sparse.issparse"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.text.CountVectorizer.transform": {
  "data": {
   "lineno": 1232,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.text.HashingVectorizer": {
  "data": {
   "lineno": 513,
   "symbols_in_volume": [
    "sklearn.feature_extraction.text._VectorizerMixin"
   ]
  },
  "type": "class"
 },
 "sklearn.feature_extraction.text.HashingVectorizer.__init__": {
  "data": {
   "lineno": 683,
   "symbols_in_volume": [
    "analyzer",
    "input",
    "numpy.float64",
    "preprocessor",
    "tokenizer"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.text.HashingVectorizer._get_hasher": {
  "data": {
   "lineno": 791,
   "symbols_in_volume": [
    "FeatureHasher"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.text.HashingVectorizer._more_tags": {
  "data": {
   "lineno": 796
  },
  "type": "function"
 },
 "sklearn.feature_extraction.text.HashingVectorizer.fit": {
  "data": {
   "lineno": 721,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.text.HashingVectorizer.fit_transform": {
  "data": {
   "lineno": 771
  },
  "type": "function"
 },
 "sklearn.feature_extraction.text.HashingVectorizer.partial_fit": {
  "data": {
   "lineno": 708
  },
  "type": "function"
 },
 "sklearn.feature_extraction.text.HashingVectorizer.transform": {
  "data": {
   "lineno": 741,
   "symbols_in_volume": [
    "ValueError",
    "analyzer",
    "isinstance",
    "normalize",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.text.Mapping": {
  "data": {
   "shadows": "collections.abc.Mapping"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.text.TfidfTransformer": {
  "data": {
   "lineno": 1314
  },
  "type": "class"
 },
 "sklearn.feature_extraction.text.TfidfTransformer.__init__": {
  "data": {
   "lineno": 1421
  },
  "type": "function"
 },
 "sklearn.feature_extraction.text.TfidfTransformer._more_tags": {
  "data": {
   "lineno": 1520
  },
  "type": "function"
 },
 "sklearn.feature_extraction.text.TfidfTransformer.fit": {
  "data": {
   "lineno": 1429,
   "symbols_in_volume": [
    "_astype_copy_false",
    "check_array",
    "int",
    "numpy.float64",
    "numpy.log",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.diags",
    "scipy.sparse.issparse",
    "sklearn.feature_extraction.text._document_frequency"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.text.TfidfTransformer.idf_": {
  "data": {
   "lineno": 1513,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.float64",
    "scipy.sparse.spdiags"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.text.TfidfTransformer.transform": {
  "data": {
   "lineno": 1461,
   "symbols_in_volume": [
    "ValueError",
    "check_array",
    "check_is_fitted",
    "normalize",
    "numpy.float64",
    "numpy.log",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.issparse"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.text.TfidfVectorizer": {
  "data": {
   "lineno": 1524,
   "symbols_in_volume": [
    "sklearn.feature_extraction.text.CountVectorizer"
   ]
  },
  "type": "class"
 },
 "sklearn.feature_extraction.text.TfidfVectorizer.__init__": {
  "data": {
   "lineno": 1731,
   "symbols_in_volume": [
    "analyzer",
    "input",
    "numpy.float64",
    "preprocessor",
    "sklearn.feature_extraction.text.TfidfTransformer",
    "super",
    "tokenizer"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.text.TfidfVectorizer._check_params": {
  "data": {
   "lineno": 1803,
   "symbols_in_volume": [
    "UserWarning",
    "sklearn.feature_extraction.text.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.text.TfidfVectorizer._more_tags": {
  "data": {
   "lineno": 1877
  },
  "type": "function"
 },
 "sklearn.feature_extraction.text.TfidfVectorizer.fit": {
  "data": {
   "lineno": 1810,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.text.TfidfVectorizer.fit_transform": {
  "data": {
   "lineno": 1831,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.text.TfidfVectorizer.idf_": {
  "data": {
   "lineno": 1793,
   "symbols_in_volume": [
    "ValueError",
    "hasattr",
    "len"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.text.TfidfVectorizer.norm": {
  "data": {
   "lineno": 1761
  },
  "type": "function"
 },
 "sklearn.feature_extraction.text.TfidfVectorizer.smooth_idf": {
  "data": {
   "lineno": 1777
  },
  "type": "function"
 },
 "sklearn.feature_extraction.text.TfidfVectorizer.sublinear_tf": {
  "data": {
   "lineno": 1785
  },
  "type": "function"
 },
 "sklearn.feature_extraction.text.TfidfVectorizer.transform": {
  "data": {
   "lineno": 1856,
   "symbols_in_volume": [
    "check_is_fitted",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.text.TfidfVectorizer.use_idf": {
  "data": {
   "lineno": 1769
  },
  "type": "function"
 },
 "sklearn.feature_extraction.text._VectorizerMixin": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "sklearn.feature_extraction.text.re"
   ]
  },
  "type": "class"
 },
 "sklearn.feature_extraction.text._VectorizerMixin._char_ngrams": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "len",
    "list",
    "min",
    "ngrams",
    "ngrams.append",
    "ngrams_append",
    "range"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.text._VectorizerMixin._char_wb_ngrams": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": [
    "len",
    "ngrams",
    "ngrams.append",
    "ngrams_append",
    "range"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.text._VectorizerMixin._check_stop_words_consistency": {
  "data": {
   "lineno": 362,
   "symbols_in_volume": [
    "Exception",
    "getattr",
    "id",
    "list",
    "preprocess",
    "set",
    "sklearn.feature_extraction.text.warnings",
    "sorted",
    "tokenize"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.text._VectorizerMixin._check_vocabulary": {
  "data": {
   "lineno": 467,
   "symbols_in_volume": [
    "NotFittedError",
    "ValueError",
    "hasattr",
    "len"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.text._VectorizerMixin._validate_params": {
  "data": {
   "lineno": 477,
   "symbols_in_volume": [
    "ValueError",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.text._VectorizerMixin._validate_vocabulary": {
  "data": {
   "lineno": 439,
   "symbols_in_volume": [
    "ValueError",
    "collections.abc.Mapping",
    "dict",
    "enumerate",
    "isinstance",
    "len",
    "range",
    "set",
    "sorted"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.text._VectorizerMixin._warn_for_unused_params": {
  "data": {
   "lineno": 486,
   "symbols_in_volume": [
    "callable",
    "sklearn.feature_extraction.text.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.text._VectorizerMixin._word_ngrams": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "len",
    "list",
    "min",
    "range",
    "space_join",
    "tokens_append"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.text._VectorizerMixin.build_analyzer": {
  "data": {
   "lineno": 399,
   "symbols_in_volume": [
    "ValueError",
    "callable",
    "functools.partial",
    "preprocess",
    "sklearn.feature_extraction.text._analyze",
    "tokenize"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.text._VectorizerMixin.build_preprocessor": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "ValueError",
    "callable",
    "functools.partial",
    "sklearn.feature_extraction.text._preprocess",
    "sklearn.feature_extraction.text.strip_accents_ascii",
    "sklearn.feature_extraction.text.strip_accents_unicode"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.text._VectorizerMixin.build_tokenizer": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.feature_extraction.text.re"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.text._VectorizerMixin.decode": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "ValueError",
    "bytes",
    "isinstance",
    "numpy.nan",
    "open"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.text._VectorizerMixin.get_stop_words": {
  "data": {
   "lineno": 352,
   "symbols_in_volume": [
    "sklearn.feature_extraction.text._check_stop_list"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.text.__all__": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "sklearn.feature_extraction.text._analyze": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "analyzer",
    "decoder",
    "ngrams",
    "preprocessor",
    "tokenizer"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.text._check_stop_list": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "ValueError",
    "frozenset",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.text._document_frequency": {
  "data": {
   "lineno": 800,
   "symbols_in_volume": [
    "numpy.bincount",
    "numpy.diff",
    "scipy.sparse.isspmatrix_csr"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.text._make_int_array": {
  "data": {
   "lineno": 1309,
   "symbols_in_volume": [
    "sklearn.feature_extraction.text.array",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.text._preprocess": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "accent_function"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.text.array": {
  "data": {
   "shadows": "array"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.text.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.text.itemgetter": {
  "data": {
   "shadows": "operator.itemgetter"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.text.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.text.numbers": {
  "data": {
   "shadows": "numbers"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.text.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.text.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.text.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.text.strip_accents_ascii": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "sklearn.feature_extraction.text.unicodedata"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.text.strip_accents_unicode": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "UnicodeEncodeError",
    "sklearn.feature_extraction.text.unicodedata"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.text.strip_tags": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "sklearn.feature_extraction.text.re"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.text.unicodedata": {
  "data": {
   "shadows": "unicodedata"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.text.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.feature_selection": {
  "data": {},
  "type": "module"
 },
 "sklearn.feature_selection.__all__": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "sklearn.feature_selection._base": {
  "data": {},
  "type": "module"
 },
 "sklearn.feature_selection._base.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "sklearn.feature_selection._base.SelectorMixin": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "abc.ABCMeta"
   ]
  },
  "type": "class"
 },
 "sklearn.feature_selection._base.SelectorMixin._get_support_mask": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection._base.SelectorMixin.get_support": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection._base.SelectorMixin.inverse_transform": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "ValueError",
    "check_array",
    "len",
    "numpy.concatenate",
    "numpy.cumsum",
    "numpy.diff",
    "numpy.zeros",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.issparse"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection._base.SelectorMixin.transform": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "UserWarning",
    "ValueError",
    "_safe_tags",
    "check_array",
    "len",
    "numpy.empty",
    "safe_mask",
    "warnings.warn"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection._base._get_feature_importances": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "ValueError",
    "callable",
    "getter",
    "hasattr",
    "isinstance",
    "numpy.abs",
    "numpy.linalg.norm",
    "operator.attrgetter",
    "safe_sqr",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection._base.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "sklearn.feature_selection._base.attrgetter": {
  "data": {
   "shadows": "operator.attrgetter"
  },
  "type": "import"
 },
 "sklearn.feature_selection._base.csc_matrix": {
  "data": {
   "shadows": "scipy.sparse.csc_matrix"
  },
  "type": "import"
 },
 "sklearn.feature_selection._base.issparse": {
  "data": {
   "shadows": "scipy.sparse.issparse"
  },
  "type": "import"
 },
 "sklearn.feature_selection._base.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.feature_selection._base.warn": {
  "data": {
   "shadows": "warnings.warn"
  },
  "type": "import"
 },
 "sklearn.feature_selection._from_model": {
  "data": {},
  "type": "module"
 },
 "sklearn.feature_selection._from_model.SelectFromModel": {
  "data": {
   "lineno": 62
  },
  "type": "class"
 },
 "sklearn.feature_selection._from_model.SelectFromModel.__init__": {
  "data": {
   "lineno": 167
  },
  "type": "function"
 },
 "sklearn.feature_selection._from_model.SelectFromModel._get_support_mask": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "ValueError",
    "_get_feature_importances",
    "bool",
    "hasattr",
    "numpy.argsort",
    "numpy.ones_like",
    "numpy.zeros_like",
    "sklearn.feature_selection._from_model._calculate_threshold"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection._from_model.SelectFromModel._more_tags": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "_safe_tags"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection._from_model.SelectFromModel.fit": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "NotFittedError",
    "TypeError",
    "ValueError",
    "clone",
    "isinstance",
    "sklearn.feature_selection._from_model.numbers"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection._from_model.SelectFromModel.n_features_in_": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "AttributeError",
    "NotFittedError",
    "check_is_fitted",
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection._from_model.SelectFromModel.partial_fit": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "NotFittedError",
    "clone",
    "hasattr",
    "if_delegate_has_method"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection._from_model.SelectFromModel.threshold_": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "_get_feature_importances",
    "property",
    "sklearn.feature_selection._from_model._calculate_threshold"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection._from_model._calculate_threshold": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "hasattr",
    "isinstance",
    "numpy.mean",
    "numpy.median",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection._from_model.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.feature_selection._from_model.numbers": {
  "data": {
   "shadows": "numbers"
  },
  "type": "import"
 },
 "sklearn.feature_selection._mutual_info": {
  "data": {},
  "type": "module"
 },
 "sklearn.feature_selection._mutual_info._compute_mi": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "mutual_info_score",
    "sklearn.feature_selection._mutual_info._compute_mi_cc",
    "sklearn.feature_selection._mutual_info._compute_mi_cd"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection._mutual_info._compute_mi_cc": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "KDTree",
    "NearestNeighbors",
    "max",
    "numpy.array",
    "numpy.hstack",
    "numpy.mean",
    "numpy.nextafter",
    "scipy.special.digamma"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection._mutual_info._compute_mi_cd": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "KDTree",
    "NearestNeighbors",
    "max",
    "min",
    "numpy.array",
    "numpy.empty",
    "numpy.mean",
    "numpy.nextafter",
    "numpy.sum",
    "numpy.unique",
    "scipy.special.digamma"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection._mutual_info._estimate_mi": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "ValueError",
    "_astype_copy_false",
    "bool",
    "check_X_y",
    "check_array",
    "check_random_state",
    "float",
    "isinstance",
    "numpy.abs",
    "numpy.any",
    "numpy.array",
    "numpy.empty",
    "numpy.maximum",
    "numpy.mean",
    "numpy.sum",
    "numpy.zeros",
    "scale",
    "scipy.sparse.issparse",
    "sklearn.feature_selection._mutual_info._compute_mi",
    "sklearn.feature_selection._mutual_info._iterate_columns",
    "str",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection._mutual_info._iterate_columns": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "numpy.zeros",
    "range",
    "scipy.sparse.issparse"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection._mutual_info.digamma": {
  "data": {
   "shadows": "scipy.special.digamma"
  },
  "type": "import"
 },
 "sklearn.feature_selection._mutual_info.issparse": {
  "data": {
   "shadows": "scipy.sparse.issparse"
  },
  "type": "import"
 },
 "sklearn.feature_selection._mutual_info.mutual_info_classif": {
  "data": {
   "lineno": 371,
   "symbols_in_volume": [
    "check_classification_targets",
    "sklearn.feature_selection._mutual_info._estimate_mi"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection._mutual_info.mutual_info_regression": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "sklearn.feature_selection._mutual_info._estimate_mi"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection._mutual_info.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.feature_selection._rfe": {
  "data": {},
  "type": "module"
 },
 "sklearn.feature_selection._rfe.Parallel": {
  "data": {
   "shadows": "joblib.Parallel"
  },
  "type": "import"
 },
 "sklearn.feature_selection._rfe.RFE": {
  "data": {
   "lineno": 44
  },
  "type": "class"
 },
 "sklearn.feature_selection._rfe.RFE.__init__": {
  "data": {
   "lineno": 155
  },
  "type": "function"
 },
 "sklearn.feature_selection._rfe.RFE._estimator_type": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection._rfe.RFE._fit": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "ValueError",
    "_get_feature_importances",
    "bool",
    "clone",
    "int",
    "isinstance",
    "max",
    "min",
    "numpy.arange",
    "numpy.argsort",
    "numpy.logical_not",
    "numpy.ones",
    "numpy.ravel",
    "numpy.sum",
    "print",
    "sklearn.feature_selection._rfe.numbers",
    "step_score"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection._rfe.RFE._get_support_mask": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "check_is_fitted"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection._rfe.RFE._more_tags": {
  "data": {
   "lineno": 375,
   "symbols_in_volume": [
    "_safe_tags"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection._rfe.RFE.classes_": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection._rfe.RFE.decision_function": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": [
    "check_is_fitted",
    "if_delegate_has_method"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection._rfe.RFE.fit": {
  "data": {
   "lineno": 172
  },
  "type": "function"
 },
 "sklearn.feature_selection._rfe.RFE.predict": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "check_is_fitted",
    "if_delegate_has_method"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection._rfe.RFE.predict_log_proba": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "check_is_fitted",
    "if_delegate_has_method"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection._rfe.RFE.predict_proba": {
  "data": {
   "lineno": 337,
   "symbols_in_volume": [
    "check_is_fitted",
    "if_delegate_has_method"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection._rfe.RFE.score": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": [
    "check_is_fitted",
    "if_delegate_has_method"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection._rfe.RFECV": {
  "data": {
   "lineno": 383,
   "symbols_in_volume": [
    "sklearn.feature_selection._rfe.RFE"
   ]
  },
  "type": "class"
 },
 "sklearn.feature_selection._rfe.RFECV.__init__": {
  "data": {
   "lineno": 527
  },
  "type": "function"
 },
 "sklearn.feature_selection._rfe.RFECV.fit": {
  "data": {
   "lineno": 540,
   "symbols_in_volume": [
    "ValueError",
    "check_cv",
    "check_scoring",
    "clone",
    "delayed",
    "func",
    "int",
    "is_classifier",
    "joblib.Parallel",
    "joblib.effective_n_jobs",
    "len",
    "list",
    "max",
    "numpy.argmax",
    "numpy.sum",
    "parallel",
    "sklearn.feature_selection._rfe.RFE",
    "sklearn.feature_selection._rfe._rfe_single_fit"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection._rfe._rfe_single_fit": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "_safe_split",
    "_score"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection._rfe.effective_n_jobs": {
  "data": {
   "shadows": "joblib.effective_n_jobs"
  },
  "type": "import"
 },
 "sklearn.feature_selection._rfe.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.feature_selection._rfe.numbers": {
  "data": {
   "shadows": "numbers"
  },
  "type": "import"
 },
 "sklearn.feature_selection._sequential": {
  "data": {},
  "type": "module"
 },
 "sklearn.feature_selection._sequential.SequentialFeatureSelector": {
  "data": {
   "lineno": 15
  },
  "type": "class"
 },
 "sklearn.feature_selection._sequential.SequentialFeatureSelector.__init__": {
  "data": {
   "lineno": 108
  },
  "type": "function"
 },
 "sklearn.feature_selection._sequential.SequentialFeatureSelector._get_best_new_feature": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "cross_val_score",
    "max",
    "numpy.flatnonzero"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection._sequential.SequentialFeatureSelector._get_support_mask": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "check_is_fitted"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection._sequential.SequentialFeatureSelector._more_tags": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "_safe_tags"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection._sequential.SequentialFeatureSelector.fit": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "clone",
    "int",
    "isinstance",
    "numpy.zeros",
    "range",
    "sklearn.feature_selection._sequential.numbers"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection._sequential.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.feature_selection._sequential.numbers": {
  "data": {
   "shadows": "numbers"
  },
  "type": "import"
 },
 "sklearn.feature_selection._univariate_selection": {
  "data": {},
  "type": "module"
 },
 "sklearn.feature_selection._univariate_selection.GenericUnivariateSelect": {
  "data": {
   "lineno": 749,
   "symbols_in_volume": [
    "sklearn.feature_selection._univariate_selection.SelectFdr",
    "sklearn.feature_selection._univariate_selection.SelectFpr",
    "sklearn.feature_selection._univariate_selection.SelectFwe",
    "sklearn.feature_selection._univariate_selection.SelectKBest",
    "sklearn.feature_selection._univariate_selection.SelectPercentile",
    "sklearn.feature_selection._univariate_selection._BaseFilter"
   ]
  },
  "type": "class"
 },
 "sklearn.feature_selection._univariate_selection.GenericUnivariateSelect.__init__": {
  "data": {
   "lineno": 808,
   "symbols_in_volume": [
    "sklearn.feature_selection._univariate_selection.f_classif",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection._univariate_selection.GenericUnivariateSelect._check_params": {
  "data": {
   "lineno": 825,
   "symbols_in_volume": [
    "ValueError",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection._univariate_selection.GenericUnivariateSelect._get_support_mask": {
  "data": {
   "lineno": 834,
   "symbols_in_volume": [
    "check_is_fitted"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection._univariate_selection.GenericUnivariateSelect._make_selector": {
  "data": {
   "lineno": 814
  },
  "type": "function"
 },
 "sklearn.feature_selection._univariate_selection.SelectFdr": {
  "data": {
   "lineno": 610,
   "symbols_in_volume": [
    "sklearn.feature_selection._univariate_selection._BaseFilter"
   ]
  },
  "type": "class"
 },
 "sklearn.feature_selection._univariate_selection.SelectFdr.__init__": {
  "data": {
   "lineno": 667,
   "symbols_in_volume": [
    "sklearn.feature_selection._univariate_selection.f_classif",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection._univariate_selection.SelectFdr._get_support_mask": {
  "data": {
   "lineno": 672,
   "symbols_in_volume": [
    "bool",
    "check_is_fitted",
    "float",
    "len",
    "numpy.arange",
    "numpy.sort",
    "numpy.zeros_like"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection._univariate_selection.SelectFpr": {
  "data": {
   "lineno": 546,
   "symbols_in_volume": [
    "sklearn.feature_selection._univariate_selection._BaseFilter"
   ]
  },
  "type": "class"
 },
 "sklearn.feature_selection._univariate_selection.SelectFpr.__init__": {
  "data": {
   "lineno": 599,
   "symbols_in_volume": [
    "sklearn.feature_selection._univariate_selection.f_classif",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection._univariate_selection.SelectFpr._get_support_mask": {
  "data": {
   "lineno": 604,
   "symbols_in_volume": [
    "check_is_fitted"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection._univariate_selection.SelectFwe": {
  "data": {
   "lineno": 684,
   "symbols_in_volume": [
    "sklearn.feature_selection._univariate_selection._BaseFilter"
   ]
  },
  "type": "class"
 },
 "sklearn.feature_selection._univariate_selection.SelectFwe.__init__": {
  "data": {
   "lineno": 732,
   "symbols_in_volume": [
    "sklearn.feature_selection._univariate_selection.f_classif",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection._univariate_selection.SelectFwe._get_support_mask": {
  "data": {
   "lineno": 737,
   "symbols_in_volume": [
    "check_is_fitted",
    "len"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection._univariate_selection.SelectKBest": {
  "data": {
   "lineno": 460,
   "symbols_in_volume": [
    "sklearn.feature_selection._univariate_selection._BaseFilter"
   ]
  },
  "type": "class"
 },
 "sklearn.feature_selection._univariate_selection.SelectKBest.__init__": {
  "data": {
   "lineno": 518,
   "symbols_in_volume": [
    "sklearn.feature_selection._univariate_selection.f_classif",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection._univariate_selection.SelectKBest._check_params": {
  "data": {
   "lineno": 523,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection._univariate_selection.SelectKBest._get_support_mask": {
  "data": {
   "lineno": 529,
   "symbols_in_volume": [
    "bool",
    "check_is_fitted",
    "numpy.argsort",
    "numpy.ones",
    "numpy.zeros",
    "sklearn.feature_selection._univariate_selection._clean_nans"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection._univariate_selection.SelectPercentile": {
  "data": {
   "lineno": 374,
   "symbols_in_volume": [
    "sklearn.feature_selection._univariate_selection._BaseFilter"
   ]
  },
  "type": "class"
 },
 "sklearn.feature_selection._univariate_selection.SelectPercentile.__init__": {
  "data": {
   "lineno": 430,
   "symbols_in_volume": [
    "sklearn.feature_selection._univariate_selection.f_classif",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection._univariate_selection.SelectPercentile._check_params": {
  "data": {
   "lineno": 435,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection._univariate_selection.SelectPercentile._get_support_mask": {
  "data": {
   "lineno": 440,
   "symbols_in_volume": [
    "bool",
    "check_is_fitted",
    "int",
    "len",
    "numpy.ones",
    "numpy.percentile",
    "numpy.where",
    "numpy.zeros",
    "sklearn.feature_selection._univariate_selection._clean_nans"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection._univariate_selection._BaseFilter": {
  "data": {
   "lineno": 314
  },
  "type": "class"
 },
 "sklearn.feature_selection._univariate_selection._BaseFilter.__init__": {
  "data": {
   "lineno": 324
  },
  "type": "function"
 },
 "sklearn.feature_selection._univariate_selection._BaseFilter._check_params": {
  "data": {
   "lineno": 364
  },
  "type": "function"
 },
 "sklearn.feature_selection._univariate_selection._BaseFilter._more_tags": {
  "data": {
   "lineno": 367
  },
  "type": "function"
 },
 "sklearn.feature_selection._univariate_selection._BaseFilter.fit": {
  "data": {
   "lineno": 327,
   "symbols_in_volume": [
    "TypeError",
    "callable",
    "isinstance",
    "list",
    "numpy.asarray",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection._univariate_selection._chisquare": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "len",
    "numpy.asarray",
    "numpy.errstate",
    "numpy.float64",
    "scipy.special.chdtrc"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection._univariate_selection._clean_nans": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "as_float_array",
    "numpy.finfo",
    "numpy.isnan"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection._univariate_selection.chi2": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "LabelBinarizer",
    "ValueError",
    "check_array",
    "numpy.any",
    "numpy.append",
    "numpy.dot",
    "safe_sparse_dot",
    "scipy.sparse.issparse",
    "sklearn.feature_selection._univariate_selection._chisquare"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection._univariate_selection.f_classif": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "check_X_y",
    "numpy.unique",
    "safe_mask",
    "sklearn.feature_selection._univariate_selection.f_oneway"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection._univariate_selection.f_oneway": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "UserWarning",
    "as_float_array",
    "enumerate",
    "float",
    "len",
    "numpy.array",
    "numpy.asarray",
    "numpy.nonzero",
    "numpy.sum",
    "numpy.where",
    "safe_sqr",
    "scipy.special.fdtrc",
    "sklearn.feature_selection._univariate_selection.warnings",
    "sum"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection._univariate_selection.f_regression": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "check_X_y",
    "numpy.float64",
    "numpy.linalg.norm",
    "numpy.mean",
    "numpy.sqrt",
    "row_norms",
    "safe_sparse_dot",
    "scipy.sparse.issparse",
    "scipy.stats.f.sf"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection._univariate_selection.issparse": {
  "data": {
   "shadows": "scipy.sparse.issparse"
  },
  "type": "import"
 },
 "sklearn.feature_selection._univariate_selection.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.feature_selection._univariate_selection.special": {
  "data": {
   "shadows": "scipy.special"
  },
  "type": "import"
 },
 "sklearn.feature_selection._univariate_selection.stats": {
  "data": {
   "shadows": "scipy.stats"
  },
  "type": "import"
 },
 "sklearn.feature_selection._univariate_selection.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.feature_selection._variance_threshold": {
  "data": {},
  "type": "module"
 },
 "sklearn.feature_selection._variance_threshold.VarianceThreshold": {
  "data": {
   "lineno": 11
  },
  "type": "class"
 },
 "sklearn.feature_selection._variance_threshold.VarianceThreshold.__init__": {
  "data": {
   "lineno": 49
  },
  "type": "function"
 },
 "sklearn.feature_selection._variance_threshold.VarianceThreshold._get_support_mask": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "check_is_fitted"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection._variance_threshold.VarianceThreshold._more_tags": {
  "data": {
   "lineno": 102
  },
  "type": "function"
 },
 "sklearn.feature_selection._variance_threshold.VarianceThreshold.fit": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "ValueError",
    "hasattr",
    "mean_variance_axis",
    "min_max_axis",
    "numpy.all",
    "numpy.array",
    "numpy.float64",
    "numpy.isfinite",
    "numpy.nanmin",
    "numpy.nanvar",
    "numpy.ptp"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection._variance_threshold.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests": {
  "data": {},
  "type": "module"
 },
 "sklearn.feature_selection.tests.test_base": {
  "data": {
   "symbols_in_volume": [
    "list",
    "numpy.arange",
    "numpy.array",
    "sklearn.feature_selection.tests.test_base.X",
    "sklearn.feature_selection.tests.test_base.Xinv",
    "sklearn.feature_selection.tests.test_base.feature_names",
    "sklearn.feature_selection.tests.test_base.feature_names_inv"
   ]
  },
  "type": "module"
 },
 "sklearn.feature_selection.tests.test_base.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_base.SelectorMixin": {
  "data": {
   "shadows": "sklearn.feature_selection._base.SelectorMixin"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_base.StepSelector": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator",
    "sklearn.feature_selection._base.SelectorMixin"
   ]
  },
  "type": "class"
 },
 "sklearn.feature_selection.tests.test_base.StepSelector.__init__": {
  "data": {
   "lineno": 14
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_base.StepSelector._get_support_mask": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "bool",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_base.StepSelector.fit": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "sklearn.utils.check_array"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_base.X": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "sklearn.feature_selection.tests.test_base.Xinv": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "sklearn.feature_selection.tests.test_base.Xt": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "sklearn.feature_selection.tests.test_base.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_base.check_array": {
  "data": {
   "shadows": "sklearn.utils.check_array"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_base.feature_names": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "sklearn.feature_selection.tests.test_base.feature_names_inv": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "sklearn.feature_selection.tests.test_base.feature_names_t": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "sklearn.feature_selection.tests.test_base.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_base.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_base.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_base.support": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "sklearn.feature_selection.tests.test_base.support_inds": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "sklearn.feature_selection.tests.test_base.test_get_support": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "numpy.testing.assert_array_equal",
    "sklearn.feature_selection.tests.test_base.StepSelector",
    "sklearn.feature_selection.tests.test_base.X",
    "sklearn.feature_selection.tests.test_base.support",
    "sklearn.feature_selection.tests.test_base.support_inds",
    "sklearn.feature_selection.tests.test_base.y"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_base.test_inverse_transform_dense": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "numpy.float32",
    "numpy.int32",
    "numpy.testing.assert_array_equal",
    "sklearn.feature_selection.tests.test_base.StepSelector",
    "sklearn.feature_selection.tests.test_base.X",
    "sklearn.feature_selection.tests.test_base.Xinv",
    "sklearn.feature_selection.tests.test_base.Xt",
    "sklearn.feature_selection.tests.test_base.feature_names_inv",
    "sklearn.feature_selection.tests.test_base.feature_names_t",
    "sklearn.feature_selection.tests.test_base.pytest",
    "sklearn.feature_selection.tests.test_base.y"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_base.test_inverse_transform_sparse": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "numpy.float32",
    "numpy.int32",
    "numpy.testing.assert_array_equal",
    "scipy.sparse",
    "scipy.sparse.csc_matrix",
    "sklearn.feature_selection.tests.test_base.StepSelector",
    "sklearn.feature_selection.tests.test_base.X",
    "sklearn.feature_selection.tests.test_base.Xinv",
    "sklearn.feature_selection.tests.test_base.Xt",
    "sklearn.feature_selection.tests.test_base.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_base.test_transform_dense": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "numpy.float32",
    "numpy.int32",
    "numpy.testing.assert_array_equal",
    "sklearn.feature_selection.tests.test_base.StepSelector",
    "sklearn.feature_selection.tests.test_base.X",
    "sklearn.feature_selection.tests.test_base.Xt",
    "sklearn.feature_selection.tests.test_base.feature_names",
    "sklearn.feature_selection.tests.test_base.feature_names_t",
    "sklearn.feature_selection.tests.test_base.pytest",
    "sklearn.feature_selection.tests.test_base.y"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_base.test_transform_sparse": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "numpy.float32",
    "numpy.int32",
    "numpy.testing.assert_array_equal",
    "scipy.sparse",
    "scipy.sparse.csc_matrix",
    "sklearn.feature_selection.tests.test_base.StepSelector",
    "sklearn.feature_selection.tests.test_base.X",
    "sklearn.feature_selection.tests.test_base.Xt",
    "sklearn.feature_selection.tests.test_base.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_base.y": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "sklearn.feature_selection.tests.test_chi2": {
  "data": {},
  "type": "module"
 },
 "sklearn.feature_selection.tests.test_chi2.SelectKBest": {
  "data": {
   "shadows": "sklearn.feature_selection.SelectKBest"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_chi2.X": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "sklearn.feature_selection.tests.test_chi2._chisquare": {
  "data": {
   "shadows": "sklearn.feature_selection._univariate_selection._chisquare"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_chi2.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_chi2.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_chi2.chi2": {
  "data": {
   "shadows": "sklearn.feature_selection.chi2"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_chi2.coo_matrix": {
  "data": {
   "shadows": "scipy.sparse.coo_matrix"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_chi2.csr_matrix": {
  "data": {
   "shadows": "scipy.sparse.csr_matrix"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_chi2.mkchi2": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "sklearn.feature_selection.SelectKBest",
    "sklearn.feature_selection.chi2"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_chi2.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_chi2.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_chi2.scipy.stats": {
  "data": {
   "shadows": "scipy.stats"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_chi2.test_chi2": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.float64",
    "scipy.sparse.csr_matrix",
    "sklearn.feature_selection.chi2",
    "sklearn.feature_selection.chi2.get_support",
    "sklearn.feature_selection.chi2.transform",
    "sklearn.feature_selection.tests.test_chi2.X",
    "sklearn.feature_selection.tests.test_chi2.mkchi2",
    "sklearn.feature_selection.tests.test_chi2.y",
    "sklearn.utils._testing.assert_array_almost_equal",
    "sklearn.utils._testing.assert_array_equal",
    "sorted"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_chi2.test_chi2_coo": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "scipy.sparse.coo_matrix",
    "sklearn.feature_selection.tests.test_chi2.X",
    "sklearn.feature_selection.tests.test_chi2.mkchi2",
    "sklearn.feature_selection.tests.test_chi2.y"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_chi2.test_chi2_negative": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "scipy.sparse.csr_matrix",
    "sklearn.feature_selection.chi2",
    "sklearn.feature_selection.tests.test_chi2.X",
    "sklearn.feature_selection.tests.test_chi2.pytest",
    "sklearn.feature_selection.tests.test_chi2.y"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_chi2.test_chi2_unused_feature": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "AssertionError",
    "numpy.nan",
    "repr",
    "sklearn.feature_selection.chi2",
    "sklearn.feature_selection.tests.test_chi2.warnings",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_chi2.test_chisquare": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.feature_selection._univariate_selection._chisquare",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_chi2.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_chi2.y": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "sklearn.feature_selection.tests.test_feature_select": {
  "data": {},
  "type": "module"
 },
 "sklearn.feature_selection.tests.test_feature_select.GenericUnivariateSelect": {
  "data": {
   "shadows": "sklearn.feature_selection.GenericUnivariateSelect"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_feature_select.SelectFdr": {
  "data": {
   "shadows": "sklearn.feature_selection.SelectFdr"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_feature_select.SelectFpr": {
  "data": {
   "shadows": "sklearn.feature_selection.SelectFpr"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_feature_select.SelectFwe": {
  "data": {
   "shadows": "sklearn.feature_selection.SelectFwe"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_feature_select.SelectKBest": {
  "data": {
   "shadows": "sklearn.feature_selection.SelectKBest"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_feature_select.SelectPercentile": {
  "data": {
   "shadows": "sklearn.feature_selection.SelectPercentile"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_feature_select.assert_almost_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_almost_equal"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_feature_select.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_feature_select.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_feature_select.assert_best_scores_kept": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "numpy.sort",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_feature_select.assert_warns": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_warns"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_feature_select.assert_warns_message": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_warns_message"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_feature_select.chi2": {
  "data": {
   "shadows": "sklearn.feature_selection.chi2"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_feature_select.f_classif": {
  "data": {
   "shadows": "sklearn.feature_selection.f_classif"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_feature_select.f_oneway": {
  "data": {
   "shadows": "sklearn.feature_selection.f_oneway"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_feature_select.f_regression": {
  "data": {
   "shadows": "sklearn.feature_selection.f_regression"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_feature_select.ignore_warnings": {
  "data": {
   "shadows": "sklearn.utils._testing.ignore_warnings"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_feature_select.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_feature_select.make_classification": {
  "data": {
   "shadows": "sklearn.datasets.make_classification"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_feature_select.make_regression": {
  "data": {
   "shadows": "sklearn.datasets.make_regression"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_feature_select.mutual_info_classif": {
  "data": {
   "shadows": "sklearn.feature_selection.mutual_info_classif"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_feature_select.mutual_info_regression": {
  "data": {
   "shadows": "sklearn.feature_selection.mutual_info_regression"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_feature_select.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_feature_select.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_feature_select.safe_mask": {
  "data": {
   "shadows": "sklearn.utils.safe_mask"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_feature_select.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_feature_select.stats": {
  "data": {
   "shadows": "scipy.stats"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_feature_select.test_boundary_case_ch2": {
  "data": {
   "lineno": 374,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.feature_selection.SelectFdr",
    "sklearn.feature_selection.SelectFpr",
    "sklearn.feature_selection.SelectFwe",
    "sklearn.feature_selection.SelectKBest",
    "sklearn.feature_selection.SelectPercentile",
    "sklearn.feature_selection.chi2",
    "sklearn.utils._testing.assert_array_almost_equal",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_feature_select.test_f_classif": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "scipy.sparse.csr_matrix",
    "sklearn.datasets.make_classification",
    "sklearn.feature_selection.f_classif",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_feature_select.test_f_classif_constant_feature": {
  "data": {
   "lineno": 585,
   "symbols_in_volume": [
    "UserWarning",
    "sklearn.datasets.make_classification",
    "sklearn.feature_selection.f_classif",
    "sklearn.utils._testing.assert_warns"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_feature_select.test_f_classif_multi_class": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "sklearn.datasets.make_classification",
    "sklearn.feature_selection.f_classif"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_feature_select.test_f_oneway_ints": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "float",
    "numpy.arange",
    "numpy.random.RandomState",
    "sklearn.feature_selection.f_oneway",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_feature_select.test_f_oneway_vs_scipy_stats": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "numpy.allclose",
    "numpy.random.RandomState",
    "scipy.stats.f_oneway",
    "sklearn.feature_selection.f_oneway"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_feature_select.test_f_regression": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "scipy.sparse.csr_matrix",
    "sklearn.datasets.make_regression",
    "sklearn.feature_selection.f_regression",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_feature_select.test_f_regression_center": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.ones",
    "sklearn.feature_selection.f_regression",
    "sklearn.utils._testing.assert_almost_equal",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_feature_select.test_f_regression_input_dtype": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "float",
    "int",
    "numpy.arange",
    "numpy.random.RandomState",
    "sklearn.feature_selection.f_regression",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_feature_select.test_invalid_k": {
  "data": {
   "lineno": 571,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.feature_selection.GenericUnivariateSelect",
    "sklearn.feature_selection.SelectKBest",
    "sklearn.feature_selection.tests.test_feature_select.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_feature_select.test_invalid_percentile": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.datasets.make_regression",
    "sklearn.feature_selection.GenericUnivariateSelect",
    "sklearn.feature_selection.SelectPercentile",
    "sklearn.feature_selection.tests.test_feature_select.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_feature_select.test_mutual_info_classif": {
  "data": {
   "lineno": 614,
   "symbols_in_volume": [
    "numpy.zeros",
    "sklearn.datasets.make_classification",
    "sklearn.feature_selection.GenericUnivariateSelect",
    "sklearn.feature_selection.SelectKBest",
    "sklearn.feature_selection.SelectPercentile",
    "sklearn.feature_selection.mutual_info_classif",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_feature_select.test_mutual_info_regression": {
  "data": {
   "lineno": 644,
   "symbols_in_volume": [
    "numpy.zeros",
    "sklearn.datasets.make_regression",
    "sklearn.feature_selection.GenericUnivariateSelect",
    "sklearn.feature_selection.SelectKBest",
    "sklearn.feature_selection.SelectPercentile",
    "sklearn.feature_selection.mutual_info_regression",
    "sklearn.feature_selection.tests.test_feature_select.assert_best_scores_kept",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_feature_select.test_nans": {
  "data": {
   "lineno": 548,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.feature_selection.SelectKBest",
    "sklearn.feature_selection.SelectPercentile",
    "sklearn.feature_selection.f_classif",
    "sklearn.utils._testing.assert_array_equal",
    "sklearn.utils._testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_feature_select.test_no_feature_selected": {
  "data": {
   "lineno": 593,
   "symbols_in_volume": [
    "UserWarning",
    "numpy.random.RandomState",
    "numpy.zeros",
    "sklearn.feature_selection.SelectFdr",
    "sklearn.feature_selection.SelectFpr",
    "sklearn.feature_selection.SelectFwe",
    "sklearn.feature_selection.SelectKBest",
    "sklearn.feature_selection.SelectPercentile",
    "sklearn.utils._testing.assert_array_equal",
    "sklearn.utils._testing.assert_warns_message"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_feature_select.test_score_func_error": {
  "data": {
   "lineno": 561,
   "symbols_in_volume": [
    "SelectFeatures",
    "TypeError",
    "sklearn.feature_selection.GenericUnivariateSelect",
    "sklearn.feature_selection.SelectFdr",
    "sklearn.feature_selection.SelectFpr",
    "sklearn.feature_selection.SelectFwe",
    "sklearn.feature_selection.SelectKBest",
    "sklearn.feature_selection.SelectPercentile",
    "sklearn.feature_selection.tests.test_feature_select.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_feature_select.test_scorefunc_multilabel": {
  "data": {
   "lineno": 522,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.feature_selection.SelectKBest",
    "sklearn.feature_selection.SelectPercentile",
    "sklearn.feature_selection.chi2"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_feature_select.test_select_fdr_regression": {
  "data": {
   "lineno": 408,
   "symbols_in_volume": [
    "numpy.mean",
    "range",
    "single_fdr",
    "sklearn.feature_selection.tests.test_feature_select.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_feature_select.test_select_fdr_regression.single_fdr": {
  "data": {
   "lineno": 412,
   "symbols_in_volume": [
    "numpy.sum",
    "sklearn.datasets.make_regression",
    "sklearn.feature_selection.GenericUnivariateSelect",
    "sklearn.feature_selection.SelectFdr",
    "sklearn.feature_selection.f_regression",
    "sklearn.feature_selection.tests.test_feature_select.warnings",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_feature_select.test_select_fwe_regression": {
  "data": {
   "lineno": 450,
   "symbols_in_volume": [
    "bool",
    "numpy.ones",
    "numpy.sum",
    "numpy.zeros",
    "sklearn.datasets.make_regression",
    "sklearn.feature_selection.GenericUnivariateSelect",
    "sklearn.feature_selection.SelectFwe",
    "sklearn.feature_selection.f_regression",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_feature_select.test_select_heuristics_classif": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "numpy.zeros",
    "sklearn.datasets.make_classification",
    "sklearn.feature_selection.GenericUnivariateSelect",
    "sklearn.feature_selection.SelectFwe",
    "sklearn.feature_selection.f_classif",
    "sklearn.utils._testing.assert_array_almost_equal",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_feature_select.test_select_heuristics_regression": {
  "data": {
   "lineno": 354,
   "symbols_in_volume": [
    "bool",
    "numpy.ones",
    "numpy.sum",
    "numpy.zeros",
    "sklearn.datasets.make_regression",
    "sklearn.feature_selection.GenericUnivariateSelect",
    "sklearn.feature_selection.SelectFpr",
    "sklearn.feature_selection.f_regression",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_feature_select.test_select_kbest_all": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "sklearn.datasets.make_classification",
    "sklearn.feature_selection.SelectKBest",
    "sklearn.feature_selection.f_classif",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_feature_select.test_select_kbest_classif": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "numpy.zeros",
    "sklearn.datasets.make_classification",
    "sklearn.feature_selection.GenericUnivariateSelect",
    "sklearn.feature_selection.SelectKBest",
    "sklearn.feature_selection.f_classif",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_feature_select.test_select_kbest_regression": {
  "data": {
   "lineno": 335,
   "symbols_in_volume": [
    "numpy.zeros",
    "sklearn.datasets.make_regression",
    "sklearn.feature_selection.GenericUnivariateSelect",
    "sklearn.feature_selection.SelectKBest",
    "sklearn.feature_selection.f_regression",
    "sklearn.feature_selection.tests.test_feature_select.assert_best_scores_kept",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_feature_select.test_select_kbest_zero": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "UserWarning",
    "bool",
    "numpy.zeros",
    "sklearn.datasets.make_classification",
    "sklearn.feature_selection.SelectKBest",
    "sklearn.feature_selection.f_classif",
    "sklearn.utils._testing.assert_array_equal",
    "sklearn.utils._testing.assert_warns_message"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_feature_select.test_select_percentile_classif": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "numpy.zeros",
    "sklearn.datasets.make_classification",
    "sklearn.feature_selection.GenericUnivariateSelect",
    "sklearn.feature_selection.SelectPercentile",
    "sklearn.feature_selection.f_classif",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_feature_select.test_select_percentile_classif_sparse": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "numpy.zeros",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.issparse",
    "sklearn.datasets.make_classification",
    "sklearn.feature_selection.GenericUnivariateSelect",
    "sklearn.feature_selection.SelectPercentile",
    "sklearn.feature_selection.f_classif",
    "sklearn.utils._testing.assert_array_equal",
    "sklearn.utils.safe_mask"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_feature_select.test_select_percentile_regression": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": [
    "bool",
    "numpy.logical_not",
    "numpy.zeros",
    "sklearn.datasets.make_regression",
    "sklearn.feature_selection.GenericUnivariateSelect",
    "sklearn.feature_selection.SelectPercentile",
    "sklearn.feature_selection.f_regression",
    "sklearn.feature_selection.tests.test_feature_select.assert_best_scores_kept",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_feature_select.test_select_percentile_regression_full": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "numpy.ones",
    "sklearn.datasets.make_regression",
    "sklearn.feature_selection.GenericUnivariateSelect",
    "sklearn.feature_selection.SelectPercentile",
    "sklearn.feature_selection.f_regression",
    "sklearn.feature_selection.tests.test_feature_select.assert_best_scores_kept",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_feature_select.test_selectkbest_tiebreaking": {
  "data": {
   "lineno": 469,
   "symbols_in_volume": [
    "sklearn.feature_selection.SelectKBest",
    "sklearn.feature_selection.tests.test_feature_select.assert_best_scores_kept",
    "sklearn.utils._testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_feature_select.test_selectpercentile_tiebreaking": {
  "data": {
   "lineno": 487,
   "symbols_in_volume": [
    "sklearn.feature_selection.SelectPercentile",
    "sklearn.feature_selection.tests.test_feature_select.assert_best_scores_kept",
    "sklearn.utils._testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_feature_select.test_tied_pvalues": {
  "data": {
   "lineno": 504,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.feature_selection.SelectKBest",
    "sklearn.feature_selection.SelectPercentile",
    "sklearn.feature_selection.chi2",
    "sklearn.feature_selection.tests.test_feature_select.itertools"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_feature_select.test_tied_scores": {
  "data": {
   "lineno": 537,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "sklearn.feature_selection.SelectKBest",
    "sklearn.feature_selection.chi2",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_feature_select.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_from_model": {
  "data": {
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.datasets.load_iris",
    "sklearn.feature_selection.tests.test_from_model.iris"
   ]
  },
  "type": "module"
 },
 "sklearn.feature_selection.tests.test_from_model.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_from_model.FixedImportanceEstimator": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator"
   ]
  },
  "type": "class"
 },
 "sklearn.feature_selection.tests.test_from_model.FixedImportanceEstimator.__init__": {
  "data": {
   "lineno": 88
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_from_model.FixedImportanceEstimator.fit": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_from_model.HistGradientBoostingClassifier": {
  "data": {
   "shadows": "sklearn.ensemble.HistGradientBoostingClassifier"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_from_model.Lasso": {
  "data": {
   "shadows": "sklearn.linear_model.Lasso"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_from_model.LinearSVC": {
  "data": {
   "shadows": "sklearn.svm.LinearSVC"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_from_model.LogisticRegression": {
  "data": {
   "shadows": "sklearn.linear_model.LogisticRegression"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_from_model.NaNTag": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator"
   ]
  },
  "type": "class"
 },
 "sklearn.feature_selection.tests.test_from_model.NaNTag._more_tags": {
  "data": {
   "lineno": 23
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_from_model.NaNTagRandomForest": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "sklearn.ensemble.RandomForestClassifier"
   ]
  },
  "type": "class"
 },
 "sklearn.feature_selection.tests.test_from_model.NaNTagRandomForest._more_tags": {
  "data": {
   "lineno": 33
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_from_model.NoNaNTag": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator"
   ]
  },
  "type": "class"
 },
 "sklearn.feature_selection.tests.test_from_model.NoNaNTag._more_tags": {
  "data": {
   "lineno": 28
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_from_model.PCA": {
  "data": {
   "shadows": "sklearn.decomposition.PCA"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_from_model.PassiveAggressiveClassifier": {
  "data": {
   "shadows": "sklearn.linear_model.PassiveAggressiveClassifier"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_from_model.RandomForestClassifier": {
  "data": {
   "shadows": "sklearn.ensemble.RandomForestClassifier"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_from_model.SGDClassifier": {
  "data": {
   "shadows": "sklearn.linear_model.SGDClassifier"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_from_model.SelectFromModel": {
  "data": {
   "shadows": "sklearn.feature_selection.SelectFromModel"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_from_model._pca_importances": {
  "data": {
   "lineno": 374,
   "symbols_in_volume": [
    "numpy.abs"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_from_model.assert_allclose": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_allclose"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_from_model.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_from_model.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_from_model.datasets": {
  "data": {
   "shadows": "sklearn.datasets"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_from_model.enable_hist_gradient_boosting": {
  "data": {
   "shadows": "sklearn.experimental.enable_hist_gradient_boosting"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_from_model.iris": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "sklearn.feature_selection.tests.test_from_model.make_pipeline": {
  "data": {
   "shadows": "sklearn.pipeline.make_pipeline"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_from_model.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_from_model.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_from_model.rng": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "sklearn.feature_selection.tests.test_from_model.skip_if_32bit": {
  "data": {
   "shadows": "sklearn.utils._testing.skip_if_32bit"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_from_model.test_2d_coef": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "func",
    "hasattr",
    "numpy.inf",
    "numpy.linalg.norm",
    "numpy.mean",
    "numpy.median",
    "sklearn.datasets.make_classification",
    "sklearn.feature_selection.SelectFromModel",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.utils._testing.assert_array_almost_equal",
    "sklearn.utils._testing.skip_if_32bit",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_from_model.test_allow_nan_tag_comes_from_estimator": {
  "data": {
   "lineno": 364,
   "symbols_in_volume": [
    "sklearn.feature_selection.SelectFromModel",
    "sklearn.feature_selection.tests.test_from_model.NaNTag",
    "sklearn.feature_selection.tests.test_from_model.NoNaNTag"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_from_model.test_calling_fit_reinitializes": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": [
    "sklearn.feature_selection.SelectFromModel",
    "sklearn.svm.LinearSVC"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_from_model.test_coef_default_threshold": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "numpy.abs",
    "sklearn.datasets.make_classification",
    "sklearn.feature_selection.SelectFromModel",
    "sklearn.linear_model.Lasso",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_from_model.test_feature_importances": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "func",
    "hasattr",
    "numpy.abs",
    "numpy.mean",
    "numpy.median",
    "sklearn.datasets.make_classification",
    "sklearn.ensemble.RandomForestClassifier",
    "sklearn.feature_selection.SelectFromModel",
    "sklearn.utils._testing.assert_array_almost_equal",
    "sklearn.utils._testing.skip_if_32bit",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_from_model.test_fit_accepts_nan_inf": {
  "data": {
   "lineno": 337,
   "symbols_in_volume": [
    "numpy.Inf",
    "numpy.NaN",
    "sklearn.ensemble.HistGradientBoostingClassifier",
    "sklearn.feature_selection.SelectFromModel"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_from_model.test_importance_getter": {
  "data": {
   "lineno": 378,
   "symbols_in_volume": [
    "sklearn.decomposition.PCA",
    "sklearn.feature_selection.SelectFromModel",
    "sklearn.feature_selection.tests.test_from_model._pca_importances",
    "sklearn.feature_selection.tests.test_from_model.pytest",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.pipeline.make_pipeline"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_from_model.test_input_estimator_unchanged": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "sklearn.ensemble.RandomForestClassifier",
    "sklearn.feature_selection.SelectFromModel"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_from_model.test_invalid_input": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.feature_selection.SelectFromModel",
    "sklearn.feature_selection.tests.test_from_model.pytest",
    "sklearn.linear_model.SGDClassifier"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_from_model.test_max_features": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.argsort",
    "numpy.inf",
    "range",
    "sklearn.datasets.make_classification",
    "sklearn.ensemble.RandomForestClassifier",
    "sklearn.feature_selection.SelectFromModel",
    "sklearn.linear_model.Lasso",
    "sklearn.utils._testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_from_model.test_max_features_dim": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "numpy.inf",
    "sklearn.ensemble.RandomForestClassifier",
    "sklearn.feature_selection.SelectFromModel",
    "sklearn.feature_selection.tests.test_from_model.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_from_model.test_max_features_error": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "numpy.inf",
    "sklearn.ensemble.RandomForestClassifier",
    "sklearn.feature_selection.SelectFromModel",
    "sklearn.feature_selection.tests.test_from_model.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_from_model.test_max_features_tiebreak": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "numpy.inf",
    "numpy.where",
    "range",
    "sklearn.datasets.make_classification",
    "sklearn.feature_selection.SelectFromModel",
    "sklearn.feature_selection.tests.test_from_model.FixedImportanceEstimator",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_from_model.test_partial_fit": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "hasattr",
    "numpy.concatenate",
    "numpy.unique",
    "numpy.vstack",
    "sklearn.ensemble.RandomForestClassifier",
    "sklearn.feature_selection.SelectFromModel",
    "sklearn.linear_model.PassiveAggressiveClassifier",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_from_model.test_prefit": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.feature_selection.SelectFromModel",
    "sklearn.feature_selection.tests.test_from_model.pytest",
    "sklearn.linear_model.SGDClassifier",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_from_model.test_sample_weight": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.ones",
    "sklearn.datasets.make_classification",
    "sklearn.feature_selection.SelectFromModel",
    "sklearn.linear_model.LogisticRegression"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_from_model.test_threshold_and_max_features": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "min",
    "numpy.arange",
    "numpy.inf",
    "numpy.newaxis",
    "sklearn.datasets.make_classification",
    "sklearn.ensemble.RandomForestClassifier",
    "sklearn.feature_selection.SelectFromModel",
    "sklearn.utils._testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_from_model.test_threshold_string": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "numpy.mean",
    "sklearn.ensemble.RandomForestClassifier",
    "sklearn.feature_selection.SelectFromModel",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_from_model.test_threshold_without_refitting": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": [
    "sklearn.feature_selection.SelectFromModel",
    "sklearn.linear_model.SGDClassifier"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_from_model.test_transform_accepts_nan_inf": {
  "data": {
   "lineno": 350,
   "symbols_in_volume": [
    "numpy.Inf",
    "numpy.NaN",
    "sklearn.feature_selection.SelectFromModel",
    "sklearn.feature_selection.tests.test_from_model.NaNTagRandomForest"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_mutual_info": {
  "data": {},
  "type": "module"
 },
 "sklearn.feature_selection.tests.test_mutual_info._compute_mi": {
  "data": {
   "shadows": "sklearn.feature_selection._mutual_info._compute_mi"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_mutual_info.assert_almost_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_almost_equal"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_mutual_info.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_mutual_info.check_random_state": {
  "data": {
   "shadows": "sklearn.utils.check_random_state"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_mutual_info.csr_matrix": {
  "data": {
   "shadows": "scipy.sparse.csr_matrix"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_mutual_info.mutual_info_classif": {
  "data": {
   "shadows": "sklearn.feature_selection.mutual_info_classif"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_mutual_info.mutual_info_regression": {
  "data": {
   "shadows": "sklearn.feature_selection.mutual_info_regression"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_mutual_info.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_mutual_info.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_mutual_info.test_compute_mi_cc": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.linalg.det",
    "numpy.log",
    "numpy.zeros",
    "sklearn.feature_selection._mutual_info._compute_mi",
    "sklearn.utils._testing.assert_almost_equal",
    "sklearn.utils.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_mutual_info.test_compute_mi_cd": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "numpy.empty",
    "numpy.log",
    "numpy.sum",
    "sklearn.feature_selection._mutual_info._compute_mi",
    "sklearn.utils._testing.assert_almost_equal",
    "sklearn.utils.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_mutual_info.test_compute_mi_cd_unique_label": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "numpy.empty",
    "numpy.hstack",
    "numpy.random.uniform",
    "numpy.sum",
    "sklearn.feature_selection._mutual_info._compute_mi"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_mutual_info.test_compute_mi_dd": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.log",
    "sklearn.feature_selection._mutual_info._compute_mi",
    "sklearn.utils._testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_mutual_info.test_mutual_info_classif_discrete": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "numpy.argsort",
    "numpy.array",
    "sklearn.feature_selection.mutual_info_classif",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_mutual_info.test_mutual_info_classif_mixed": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "int",
    "numpy.argsort",
    "sklearn.feature_selection.mutual_info_classif",
    "sklearn.utils._testing.assert_array_equal",
    "sklearn.utils.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_mutual_info.test_mutual_info_options": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "IndexError",
    "ValueError",
    "float",
    "mutual_info",
    "numpy.allclose",
    "numpy.array",
    "scipy.sparse.csr_matrix",
    "sklearn.feature_selection.mutual_info_classif",
    "sklearn.feature_selection.mutual_info_regression",
    "sklearn.feature_selection.tests.test_mutual_info.pytest",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_mutual_info.test_mutual_info_regression": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "numpy.argsort",
    "numpy.array",
    "numpy.zeros",
    "sklearn.feature_selection.mutual_info_regression",
    "sklearn.utils._testing.assert_array_equal",
    "sklearn.utils.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_rfe": {
  "data": {},
  "type": "module"
 },
 "sklearn.feature_selection.tests.test_rfe.GroupKFold": {
  "data": {
   "shadows": "sklearn.model_selection.GroupKFold"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_rfe.LinearSVR": {
  "data": {
   "shadows": "sklearn.svm.LinearSVR"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_rfe.LogisticRegression": {
  "data": {
   "shadows": "sklearn.linear_model.LogisticRegression"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_rfe.MockClassifier": {
  "data": {
   "lineno": 30
  },
  "type": "class"
 },
 "sklearn.feature_selection.tests.test_rfe.MockClassifier.__init__": {
  "data": {
   "lineno": 35
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_rfe.MockClassifier._more_tags": {
  "data": {
   "lineno": 59
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_rfe.MockClassifier.fit": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "len",
    "numpy.float64",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_rfe.MockClassifier.get_params": {
  "data": {
   "lineno": 53
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_rfe.MockClassifier.predict": {
  "data": {
   "lineno": 43
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_rfe.MockClassifier.score": {
  "data": {
   "lineno": 50
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_rfe.MockClassifier.set_params": {
  "data": {
   "lineno": 56
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_rfe.RFE": {
  "data": {
   "shadows": "sklearn.feature_selection.RFE"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_rfe.RFECV": {
  "data": {
   "shadows": "sklearn.feature_selection.RFECV"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_rfe.RandomForestClassifier": {
  "data": {
   "shadows": "sklearn.ensemble.RandomForestClassifier"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_rfe.SVC": {
  "data": {
   "shadows": "sklearn.svm.SVC"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_rfe.SVR": {
  "data": {
   "shadows": "sklearn.svm.SVR"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_rfe.StandardScaler": {
  "data": {
   "shadows": "sklearn.preprocessing.StandardScaler"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_rfe.StringIO": {
  "data": {
   "shadows": "io.StringIO"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_rfe.TransformedTargetRegressor": {
  "data": {
   "shadows": "sklearn.compose.TransformedTargetRegressor"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_rfe.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_rfe.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_rfe.attrgetter": {
  "data": {
   "shadows": "operator.attrgetter"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_rfe.check_random_state": {
  "data": {
   "shadows": "sklearn.utils.check_random_state"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_rfe.cross_val_score": {
  "data": {
   "shadows": "sklearn.model_selection.cross_val_score"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_rfe.get_scorer": {
  "data": {
   "shadows": "sklearn.metrics.get_scorer"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_rfe.ignore_warnings": {
  "data": {
   "shadows": "sklearn.utils._testing.ignore_warnings"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_rfe.load_iris": {
  "data": {
   "shadows": "sklearn.datasets.load_iris"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_rfe.make_friedman1": {
  "data": {
   "shadows": "sklearn.datasets.make_friedman1"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_rfe.make_pipeline": {
  "data": {
   "shadows": "sklearn.pipeline.make_pipeline"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_rfe.make_scorer": {
  "data": {
   "shadows": "sklearn.metrics.make_scorer"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_rfe.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_rfe.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_rfe.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_rfe.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_rfe.test_multioutput": {
  "data": {
   "lineno": 481,
   "symbols_in_volume": [
    "ClsRFE",
    "numpy.random.normal",
    "numpy.random.randint",
    "sklearn.ensemble.RandomForestClassifier",
    "sklearn.feature_selection.RFE",
    "sklearn.feature_selection.RFECV",
    "sklearn.feature_selection.tests.test_rfe.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_rfe.test_number_of_subsets_of_features": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": [
    "formula1",
    "formula2",
    "numpy.max",
    "sklearn.feature_selection.RFE",
    "sklearn.feature_selection.RFECV",
    "sklearn.svm.SVC",
    "sklearn.utils.check_random_state",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_rfe.test_number_of_subsets_of_features.formula1": {
  "data": {
   "lineno": 323
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_rfe.test_number_of_subsets_of_features.formula2": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": [
    "float",
    "numpy.ceil"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_rfe.test_rfe": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "len",
    "numpy.c_",
    "numpy.testing.assert_array_almost_equal",
    "scipy.sparse.csr_matrix",
    "sklearn.datasets.load_iris",
    "sklearn.feature_selection.RFE",
    "sklearn.svm.SVC",
    "sklearn.utils.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_rfe.test_rfe_allow_nan_inf_in_x": {
  "data": {
   "lineno": 451,
   "symbols_in_volume": [
    "numpy.Inf",
    "numpy.NaN",
    "sklearn.datasets.load_iris",
    "sklearn.feature_selection.RFE",
    "sklearn.feature_selection.RFECV",
    "sklearn.feature_selection.tests.test_rfe.MockClassifier",
    "sklearn.feature_selection.tests.test_rfe.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_rfe.test_rfe_cv_groups": {
  "data": {
   "lineno": 391,
   "symbols_in_volume": [
    "int",
    "len",
    "numpy.floor",
    "numpy.linspace",
    "sklearn.datasets.load_iris",
    "sklearn.ensemble.RandomForestClassifier",
    "sklearn.feature_selection.RFECV",
    "sklearn.model_selection.GroupKFold",
    "sklearn.utils.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_rfe.test_rfe_cv_n_jobs": {
  "data": {
   "lineno": 374,
   "symbols_in_volume": [
    "len",
    "numpy.c_",
    "numpy.testing.assert_array_almost_equal",
    "sklearn.datasets.load_iris",
    "sklearn.feature_selection.RFECV",
    "sklearn.svm.SVC",
    "sklearn.utils.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_rfe.test_rfe_estimator_tags": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "sklearn.datasets.load_iris",
    "sklearn.feature_selection.RFE",
    "sklearn.model_selection.cross_val_score",
    "sklearn.svm.SVC"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_rfe.test_rfe_features_importance": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "len",
    "numpy.c_",
    "numpy.testing.assert_array_equal",
    "sklearn.datasets.load_iris",
    "sklearn.ensemble.RandomForestClassifier",
    "sklearn.feature_selection.RFE",
    "sklearn.svm.SVC",
    "sklearn.utils.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_rfe.test_rfe_importance_getter_validation": {
  "data": {
   "lineno": 430,
   "symbols_in_volume": [
    "AttributeError",
    "Selector",
    "ValueError",
    "numpy.exp",
    "numpy.log",
    "sklearn.compose.TransformedTargetRegressor",
    "sklearn.datasets.make_friedman1",
    "sklearn.feature_selection.RFE",
    "sklearn.feature_selection.RFECV",
    "sklearn.feature_selection.tests.test_rfe.pytest",
    "sklearn.svm.LinearSVR"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_rfe.test_rfe_invalid_n_features_errors": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.datasets.load_iris",
    "sklearn.feature_selection.RFE",
    "sklearn.feature_selection.tests.test_rfe.pytest",
    "sklearn.svm.SVC"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_rfe.test_rfe_min_step": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": [
    "sklearn.datasets.make_friedman1",
    "sklearn.feature_selection.RFE",
    "sklearn.svm.SVR"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_rfe.test_rfe_mockclassifier": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "len",
    "numpy.c_",
    "sklearn.datasets.load_iris",
    "sklearn.feature_selection.RFE",
    "sklearn.feature_selection.tests.test_rfe.MockClassifier",
    "sklearn.utils.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_rfe.test_rfe_percent_n_features": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "len",
    "numpy.c_",
    "numpy.testing.assert_array_equal",
    "sklearn.datasets.load_iris",
    "sklearn.feature_selection.RFE",
    "sklearn.svm.SVC",
    "sklearn.utils.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_rfe.test_rfe_wrapped_estimator": {
  "data": {
   "lineno": 409,
   "symbols_in_volume": [
    "numpy.exp",
    "numpy.log",
    "operator.attrgetter",
    "selector",
    "selector.fit",
    "sklearn.compose.TransformedTargetRegressor",
    "sklearn.datasets.make_friedman1",
    "sklearn.feature_selection.RFE",
    "sklearn.feature_selection.RFECV",
    "sklearn.feature_selection.tests.test_rfe.pytest",
    "sklearn.svm.LinearSVR"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_rfe.test_rfecv": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "len",
    "list",
    "numpy.c_",
    "numpy.ones",
    "numpy.testing.assert_array_equal",
    "scipy.sparse.csr_matrix",
    "sklearn.datasets.load_iris",
    "sklearn.feature_selection.RFECV",
    "sklearn.metrics.get_scorer",
    "sklearn.metrics.make_scorer",
    "sklearn.metrics.zero_one_loss",
    "sklearn.svm.SVC",
    "sklearn.utils._testing.ignore_warnings",
    "sklearn.utils.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_rfe.test_rfecv.test_scorer": {
  "data": {
   "lineno": 197
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_rfe.test_rfecv_grid_scores_size": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "len",
    "list",
    "numpy.c_",
    "numpy.ceil",
    "sklearn.datasets.load_iris",
    "sklearn.feature_selection.RFECV",
    "sklearn.feature_selection.tests.test_rfe.MockClassifier",
    "sklearn.utils.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_rfe.test_rfecv_mockclassifier": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "len",
    "list",
    "numpy.c_",
    "sklearn.datasets.load_iris",
    "sklearn.feature_selection.RFECV",
    "sklearn.feature_selection.tests.test_rfe.MockClassifier",
    "sklearn.utils.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_rfe.test_rfecv_verbose_output": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "io.StringIO",
    "len",
    "list",
    "numpy.c_",
    "sklearn.datasets.load_iris",
    "sklearn.feature_selection.RFECV",
    "sklearn.feature_selection.tests.test_rfe.sys",
    "sklearn.svm.SVC",
    "sklearn.utils.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_rfe.test_w_pipeline_2d_coef_": {
  "data": {
   "lineno": 470,
   "symbols_in_volume": [
    "sklearn.datasets.load_iris",
    "sklearn.feature_selection.RFE",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.pipeline.make_pipeline",
    "sklearn.preprocessing.StandardScaler"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_rfe.zero_one_loss": {
  "data": {
   "shadows": "sklearn.metrics.zero_one_loss"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_sequential": {
  "data": {},
  "type": "module"
 },
 "sklearn.feature_selection.tests.test_sequential.HistGradientBoostingRegressor": {
  "data": {
   "shadows": "sklearn.ensemble.HistGradientBoostingRegressor"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_sequential.LinearRegression": {
  "data": {
   "shadows": "sklearn.linear_model.LinearRegression"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_sequential.SequentialFeatureSelector": {
  "data": {
   "shadows": "sklearn.feature_selection.SequentialFeatureSelector"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_sequential.StandardScaler": {
  "data": {
   "shadows": "sklearn.preprocessing.StandardScaler"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_sequential.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_sequential.enable_hist_gradient_boosting": {
  "data": {
   "shadows": "sklearn.experimental.enable_hist_gradient_boosting"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_sequential.make_pipeline": {
  "data": {
   "shadows": "sklearn.pipeline.make_pipeline"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_sequential.make_regression": {
  "data": {
   "shadows": "sklearn.datasets.make_regression"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_sequential.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_sequential.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_sequential.scipy": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_sequential.test_bad_direction": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.datasets.make_regression",
    "sklearn.feature_selection.SequentialFeatureSelector",
    "sklearn.feature_selection.tests.test_sequential.pytest",
    "sklearn.linear_model.LinearRegression"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_sequential.test_bad_n_features_to_select": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.datasets.make_regression",
    "sklearn.feature_selection.SequentialFeatureSelector",
    "sklearn.feature_selection.tests.test_sequential.pytest",
    "sklearn.linear_model.LinearRegression"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_sequential.test_n_features_to_select": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "sklearn.datasets.make_regression",
    "sklearn.feature_selection.SequentialFeatureSelector",
    "sklearn.feature_selection.tests.test_sequential.pytest",
    "sklearn.linear_model.LinearRegression"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_sequential.test_n_features_to_select_float": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "sklearn.datasets.make_regression",
    "sklearn.feature_selection.SequentialFeatureSelector",
    "sklearn.feature_selection.tests.test_sequential.pytest",
    "sklearn.linear_model.LinearRegression"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_sequential.test_nan_support": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "numpy.nan",
    "numpy.random.RandomState",
    "sklearn.datasets.make_regression",
    "sklearn.ensemble.HistGradientBoostingRegressor",
    "sklearn.feature_selection.SequentialFeatureSelector",
    "sklearn.feature_selection.tests.test_sequential.pytest",
    "sklearn.linear_model.LinearRegression"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_sequential.test_pipeline_support": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "sklearn.datasets.make_regression",
    "sklearn.feature_selection.SequentialFeatureSelector",
    "sklearn.linear_model.LinearRegression",
    "sklearn.pipeline.make_pipeline",
    "sklearn.preprocessing.StandardScaler"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_sequential.test_sanity": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "numpy.testing.assert_array_equal",
    "range",
    "sklearn.feature_selection.SequentialFeatureSelector",
    "sklearn.feature_selection.tests.test_sequential.pytest",
    "sklearn.linear_model.LinearRegression"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_sequential.test_sparse_support": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "sklearn.datasets.make_regression",
    "sklearn.feature_selection.SequentialFeatureSelector",
    "sklearn.feature_selection.tests.test_sequential.scipy",
    "sklearn.linear_model.LinearRegression"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_variance_threshold": {
  "data": {},
  "type": "module"
 },
 "sklearn.feature_selection.tests.test_variance_threshold.VarianceThreshold": {
  "data": {
   "shadows": "sklearn.feature_selection.VarianceThreshold"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_variance_threshold.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_variance_threshold.bsr_matrix": {
  "data": {
   "shadows": "scipy.sparse.bsr_matrix"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_variance_threshold.csc_matrix": {
  "data": {
   "shadows": "scipy.sparse.csc_matrix"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_variance_threshold.csr_matrix": {
  "data": {
   "shadows": "scipy.sparse.csr_matrix"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_variance_threshold.data": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "sklearn.feature_selection.tests.test_variance_threshold.data2": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "sklearn.feature_selection.tests.test_variance_threshold.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_variance_threshold.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_variance_threshold.test_variance_nan": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "numpy.NaN",
    "numpy.array",
    "numpy.float64",
    "scipy.sparse.bsr_matrix",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "sklearn.feature_selection.VarianceThreshold",
    "sklearn.feature_selection.tests.test_variance_threshold.data",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_variance_threshold.test_variance_threshold": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "len",
    "scipy.sparse.csr_matrix",
    "sklearn.feature_selection.VarianceThreshold",
    "sklearn.feature_selection.tests.test_variance_threshold.data"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_variance_threshold.test_zero_variance": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "ValueError",
    "scipy.sparse.bsr_matrix",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "sklearn.feature_selection.VarianceThreshold",
    "sklearn.feature_selection.tests.test_variance_threshold.data",
    "sklearn.feature_selection.tests.test_variance_threshold.pytest",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_variance_threshold.test_zero_variance_floating_point_error": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "ValueError",
    "numpy.var",
    "scipy.sparse.bsr_matrix",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "sklearn.feature_selection.VarianceThreshold",
    "sklearn.feature_selection.tests.test_variance_threshold.data2",
    "sklearn.feature_selection.tests.test_variance_threshold.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.gaussian_process": {
  "data": {},
  "type": "module"
 },
 "sklearn.gaussian_process.__all__": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "sklearn.gaussian_process._gpc": {
  "data": {
   "symbols_in_volume": [
    "numpy.array",
    "numpy.newaxis"
   ]
  },
  "type": "module"
 },
 "sklearn.gaussian_process._gpc.C": {
  "data": {
   "shadows": "ConstantKernel"
  },
  "type": "import"
 },
 "sklearn.gaussian_process._gpc.COEFS": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "sklearn.gaussian_process._gpc.GaussianProcessClassifier": {
  "data": {
   "lineno": 459
  },
  "type": "class"
 },
 "sklearn.gaussian_process._gpc.GaussianProcessClassifier.__init__": {
  "data": {
   "lineno": 598,
   "symbols_in_volume": [
    "kernel"
   ]
  },
  "type": "function"
 },
 "sklearn.gaussian_process._gpc.GaussianProcessClassifier.fit": {
  "data": {
   "lineno": 613,
   "symbols_in_volume": [
    "OneVsOneClassifier",
    "OneVsRestClassifier",
    "ValueError",
    "numpy.mean",
    "numpy.unique",
    "sklearn.gaussian_process._gpc._BinaryGaussianProcessClassifierLaplace"
   ]
  },
  "type": "function"
 },
 "sklearn.gaussian_process._gpc.GaussianProcessClassifier.kernel_": {
  "data": {
   "lineno": 726,
   "symbols_in_volume": [
    "CompoundKernel",
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.gaussian_process._gpc.GaussianProcessClassifier.log_marginal_likelihood": {
  "data": {
   "lineno": 735,
   "symbols_in_volume": [
    "NotImplementedError",
    "ValueError",
    "check_is_fitted",
    "enumerate",
    "numpy.asarray",
    "numpy.mean"
   ]
  },
  "type": "function"
 },
 "sklearn.gaussian_process._gpc.GaussianProcessClassifier.predict": {
  "data": {
   "lineno": 676,
   "symbols_in_volume": [
    "check_array",
    "check_is_fitted"
   ]
  },
  "type": "function"
 },
 "sklearn.gaussian_process._gpc.GaussianProcessClassifier.predict_proba": {
  "data": {
   "lineno": 698,
   "symbols_in_volume": [
    "ValueError",
    "check_array",
    "check_is_fitted"
   ]
  },
  "type": "function"
 },
 "sklearn.gaussian_process._gpc.LAMBDAS": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "sklearn.gaussian_process._gpc._BinaryGaussianProcessClassifierLaplace": {
  "data": {
   "lineno": 36
  },
  "type": "class"
 },
 "sklearn.gaussian_process._gpc._BinaryGaussianProcessClassifierLaplace.__init__": {
  "data": {
   "lineno": 148
  },
  "type": "function"
 },
 "sklearn.gaussian_process._gpc._BinaryGaussianProcessClassifierLaplace._constrained_optimization": {
  "data": {
   "lineno": 443,
   "symbols_in_volume": [
    "ValueError",
    "_check_optimize_result",
    "callable"
   ]
  },
  "type": "function"
 },
 "sklearn.gaussian_process._gpc._BinaryGaussianProcessClassifierLaplace._posterior_mode": {
  "data": {
   "lineno": 390,
   "symbols_in_volume": [
    "hasattr",
    "numpy.diag",
    "numpy.exp",
    "numpy.eye",
    "numpy.float64",
    "numpy.inf",
    "numpy.log",
    "numpy.log1p",
    "numpy.newaxis",
    "numpy.sqrt",
    "numpy.zeros_like",
    "range",
    "scipy.linalg.cho_solve",
    "scipy.linalg.cholesky",
    "scipy.special.expit"
   ]
  },
  "type": "function"
 },
 "sklearn.gaussian_process._gpc._BinaryGaussianProcessClassifierLaplace.fit": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "LabelEncoder",
    "RBF",
    "ValueError",
    "check_random_state",
    "clone",
    "list",
    "map",
    "numpy.argmin",
    "numpy.copy",
    "numpy.exp",
    "numpy.isfinite",
    "numpy.min",
    "operator.itemgetter",
    "range"
   ]
  },
  "type": "function"
 },
 "sklearn.gaussian_process._gpc._BinaryGaussianProcessClassifierLaplace.fit.obj_func": {
  "data": {
   "lineno": 202
  },
  "type": "function"
 },
 "sklearn.gaussian_process._gpc._BinaryGaussianProcessClassifierLaplace.log_marginal_likelihood": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": [
    "ValueError",
    "kernel",
    "numpy.diag",
    "numpy.einsum",
    "numpy.empty",
    "numpy.newaxis",
    "range",
    "scipy.linalg.cho_solve",
    "scipy.linalg.solve"
   ]
  },
  "type": "function"
 },
 "sklearn.gaussian_process._gpc._BinaryGaussianProcessClassifierLaplace.predict": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "check_is_fitted",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "sklearn.gaussian_process._gpc._BinaryGaussianProcessClassifierLaplace.predict_proba": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "check_is_fitted",
    "numpy.einsum",
    "numpy.newaxis",
    "numpy.pi",
    "numpy.sqrt",
    "numpy.vstack",
    "scipy.linalg.solve",
    "scipy.special.erf",
    "sklearn.gaussian_process._gpc.COEFS",
    "sklearn.gaussian_process._gpc.LAMBDAS"
   ]
  },
  "type": "function"
 },
 "sklearn.gaussian_process._gpc.cho_solve": {
  "data": {
   "shadows": "scipy.linalg.cho_solve"
  },
  "type": "import"
 },
 "sklearn.gaussian_process._gpc.cholesky": {
  "data": {
   "shadows": "scipy.linalg.cholesky"
  },
  "type": "import"
 },
 "sklearn.gaussian_process._gpc.erf": {
  "data": {
   "shadows": "scipy.special.erf"
  },
  "type": "import"
 },
 "sklearn.gaussian_process._gpc.expit": {
  "data": {
   "shadows": "scipy.special.expit"
  },
  "type": "import"
 },
 "sklearn.gaussian_process._gpc.itemgetter": {
  "data": {
   "shadows": "operator.itemgetter"
  },
  "type": "import"
 },
 "sklearn.gaussian_process._gpc.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.gaussian_process._gpc.scipy.optimize": {
  "data": {
   "shadows": "scipy.optimize"
  },
  "type": "import"
 },
 "sklearn.gaussian_process._gpc.solve": {
  "data": {
   "shadows": "scipy.linalg.solve"
  },
  "type": "import"
 },
 "sklearn.gaussian_process._gpr": {
  "data": {},
  "type": "module"
 },
 "sklearn.gaussian_process._gpr.C": {
  "data": {
   "shadows": "ConstantKernel"
  },
  "type": "import"
 },
 "sklearn.gaussian_process._gpr.GaussianProcessRegressor": {
  "data": {
   "lineno": 23
  },
  "type": "class"
 },
 "sklearn.gaussian_process._gpr.GaussianProcessRegressor.__init__": {
  "data": {
   "lineno": 156
  },
  "type": "function"
 },
 "sklearn.gaussian_process._gpr.GaussianProcessRegressor._constrained_optimization": {
  "data": {
   "lineno": 504,
   "symbols_in_volume": [
    "ValueError",
    "_check_optimize_result",
    "callable"
   ]
  },
  "type": "function"
 },
 "sklearn.gaussian_process._gpr.GaussianProcessRegressor._more_tags": {
  "data": {
   "lineno": 519
  },
  "type": "function"
 },
 "sklearn.gaussian_process._gpr.GaussianProcessRegressor.fit": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "RBF",
    "ValueError",
    "check_random_state",
    "clone",
    "list",
    "map",
    "numpy.argmin",
    "numpy.copy",
    "numpy.diag_indices_from",
    "numpy.isfinite",
    "numpy.iterable",
    "numpy.linalg.LinAlgError",
    "numpy.mean",
    "numpy.min",
    "numpy.std",
    "numpy.zeros",
    "operator.itemgetter",
    "range",
    "scipy.linalg.cho_solve",
    "scipy.linalg.cholesky"
   ]
  },
  "type": "function"
 },
 "sklearn.gaussian_process._gpr.GaussianProcessRegressor.fit.obj_func": {
  "data": {
   "lineno": 225
  },
  "type": "function"
 },
 "sklearn.gaussian_process._gpr.GaussianProcessRegressor.log_marginal_likelihood": {
  "data": {
   "lineno": 422,
   "symbols_in_volume": [
    "ValueError",
    "kernel",
    "kernel.theta",
    "numpy.diag",
    "numpy.diag_indices_from",
    "numpy.einsum",
    "numpy.eye",
    "numpy.inf",
    "numpy.linalg.LinAlgError",
    "numpy.log",
    "numpy.newaxis",
    "numpy.pi",
    "numpy.zeros_like",
    "scipy.linalg.cho_solve",
    "scipy.linalg.cholesky"
   ]
  },
  "type": "function"
 },
 "sklearn.gaussian_process._gpr.GaussianProcessRegressor.predict": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "RBF",
    "RuntimeError",
    "check_array",
    "hasattr",
    "kernel",
    "kernel.diag",
    "numpy.any",
    "numpy.dot",
    "numpy.einsum",
    "numpy.eye",
    "numpy.sqrt",
    "numpy.zeros",
    "scipy.linalg.cho_solve",
    "scipy.linalg.solve_triangular",
    "sklearn.gaussian_process._gpr.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.gaussian_process._gpr.GaussianProcessRegressor.sample_y": {
  "data": {
   "lineno": 386,
   "symbols_in_volume": [
    "check_random_state",
    "numpy.hstack",
    "numpy.newaxis",
    "range"
   ]
  },
  "type": "function"
 },
 "sklearn.gaussian_process._gpr.cho_solve": {
  "data": {
   "shadows": "scipy.linalg.cho_solve"
  },
  "type": "import"
 },
 "sklearn.gaussian_process._gpr.cholesky": {
  "data": {
   "shadows": "scipy.linalg.cholesky"
  },
  "type": "import"
 },
 "sklearn.gaussian_process._gpr.itemgetter": {
  "data": {
   "shadows": "operator.itemgetter"
  },
  "type": "import"
 },
 "sklearn.gaussian_process._gpr.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.gaussian_process._gpr.scipy.optimize": {
  "data": {
   "shadows": "scipy.optimize"
  },
  "type": "import"
 },
 "sklearn.gaussian_process._gpr.solve_triangular": {
  "data": {
   "shadows": "scipy.linalg.solve_triangular"
  },
  "type": "import"
 },
 "sklearn.gaussian_process._gpr.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.gaussian_process.tests": {
  "data": {},
  "type": "module"
 },
 "sklearn.gaussian_process.tests._mini_sequence_kernel": {
  "data": {},
  "type": "module"
 },
 "sklearn.gaussian_process.tests._mini_sequence_kernel.GenericKernelMixin": {
  "data": {
   "shadows": "sklearn.gaussian_process.kernels.GenericKernelMixin"
  },
  "type": "import"
 },
 "sklearn.gaussian_process.tests._mini_sequence_kernel.Hyperparameter": {
  "data": {
   "shadows": "sklearn.gaussian_process.kernels.Hyperparameter"
  },
  "type": "import"
 },
 "sklearn.gaussian_process.tests._mini_sequence_kernel.Kernel": {
  "data": {
   "shadows": "sklearn.gaussian_process.kernels.Kernel"
  },
  "type": "import"
 },
 "sklearn.gaussian_process.tests._mini_sequence_kernel.MiniSeqKernel": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "sklearn.gaussian_process.kernels.GenericKernelMixin",
    "sklearn.gaussian_process.kernels.Kernel",
    "sklearn.gaussian_process.kernels.StationaryKernelMixin"
   ]
  },
  "type": "class"
 },
 "sklearn.gaussian_process.tests._mini_sequence_kernel.MiniSeqKernel.__call__": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "sklearn.gaussian_process.tests._mini_sequence_kernel.MiniSeqKernel.__init__": {
  "data": {
   "lineno": 15
  },
  "type": "function"
 },
 "sklearn.gaussian_process.tests._mini_sequence_kernel.MiniSeqKernel._f": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "sum"
   ]
  },
  "type": "function"
 },
 "sklearn.gaussian_process.tests._mini_sequence_kernel.MiniSeqKernel._g": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "sum"
   ]
  },
  "type": "function"
 },
 "sklearn.gaussian_process.tests._mini_sequence_kernel.MiniSeqKernel.clone_with_theta": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "sklearn.base.clone"
   ]
  },
  "type": "function"
 },
 "sklearn.gaussian_process.tests._mini_sequence_kernel.MiniSeqKernel.diag": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "sklearn.gaussian_process.tests._mini_sequence_kernel.MiniSeqKernel.hyperparameter_baseline_similarity": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "property",
    "sklearn.gaussian_process.kernels.Hyperparameter"
   ]
  },
  "type": "function"
 },
 "sklearn.gaussian_process.tests._mini_sequence_kernel.StationaryKernelMixin": {
  "data": {
   "shadows": "sklearn.gaussian_process.kernels.StationaryKernelMixin"
  },
  "type": "import"
 },
 "sklearn.gaussian_process.tests._mini_sequence_kernel.clone": {
  "data": {
   "shadows": "sklearn.base.clone"
  },
  "type": "import"
 },
 "sklearn.gaussian_process.tests._mini_sequence_kernel.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.gaussian_process.tests.test_gpc": {
  "data": {
   "symbols_in_volume": [
    "int",
    "numpy.array",
    "numpy.atleast_2d",
    "numpy.empty",
    "numpy.linspace",
    "sklearn.gaussian_process.kernels.ConstantKernel",
    "sklearn.gaussian_process.kernels.RBF",
    "sklearn.gaussian_process.tests.test_gpc.X",
    "sklearn.gaussian_process.tests.test_gpc.f",
    "sklearn.gaussian_process.tests.test_gpc.fX",
    "sklearn.gaussian_process.tests.test_gpc.fixed_kernel",
    "sklearn.gaussian_process.tests.test_gpc.kernels",
    "sklearn.gaussian_process.tests.test_gpc.y",
    "sklearn.gaussian_process.tests.test_gpc.y_mc"
   ]
  },
  "type": "module"
 },
 "sklearn.gaussian_process.tests.test_gpc.C": {
  "data": {
   "shadows": "sklearn.gaussian_process.kernels.ConstantKernel"
  },
  "type": "import"
 },
 "sklearn.gaussian_process.tests.test_gpc.ConvergenceWarning": {
  "data": {
   "shadows": "sklearn.exceptions.ConvergenceWarning"
  },
  "type": "import"
 },
 "sklearn.gaussian_process.tests.test_gpc.GaussianProcessClassifier": {
  "data": {
   "shadows": "sklearn.gaussian_process.GaussianProcessClassifier"
  },
  "type": "import"
 },
 "sklearn.gaussian_process.tests.test_gpc.MiniSeqKernel": {
  "data": {
   "shadows": "sklearn.gaussian_process.tests._mini_sequence_kernel.MiniSeqKernel"
  },
  "type": "import"
 },
 "sklearn.gaussian_process.tests.test_gpc.RBF": {
  "data": {
   "shadows": "sklearn.gaussian_process.kernels.RBF"
  },
  "type": "import"
 },
 "sklearn.gaussian_process.tests.test_gpc.WhiteKernel": {
  "data": {
   "shadows": "sklearn.gaussian_process.kernels.WhiteKernel"
  },
  "type": "import"
 },
 "sklearn.gaussian_process.tests.test_gpc.X": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "sklearn.gaussian_process.tests.test_gpc.X2": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "sklearn.gaussian_process.tests.test_gpc.approx_fprime": {
  "data": {
   "shadows": "scipy.optimize.approx_fprime"
  },
  "type": "import"
 },
 "sklearn.gaussian_process.tests.test_gpc.assert_almost_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_almost_equal"
  },
  "type": "import"
 },
 "sklearn.gaussian_process.tests.test_gpc.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.gaussian_process.tests.test_gpc.assert_warns_message": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_warns_message"
  },
  "type": "import"
 },
 "sklearn.gaussian_process.tests.test_gpc.f": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "numpy.sin"
   ]
  },
  "type": "function"
 },
 "sklearn.gaussian_process.tests.test_gpc.fX": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "sklearn.gaussian_process.tests.test_gpc.fixed_kernel": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "sklearn.gaussian_process.tests.test_gpc.kernels": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "sklearn.gaussian_process.tests.test_gpc.non_fixed_kernels": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "sklearn.gaussian_process.tests.test_gpc.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.gaussian_process.tests.test_gpc.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.gaussian_process.tests.test_gpc.test_converged_to_local_maximum": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.all",
    "sklearn.gaussian_process.GaussianProcessClassifier",
    "sklearn.gaussian_process.tests.test_gpc.X",
    "sklearn.gaussian_process.tests.test_gpc.non_fixed_kernels",
    "sklearn.gaussian_process.tests.test_gpc.pytest",
    "sklearn.gaussian_process.tests.test_gpc.y"
   ]
  },
  "type": "function"
 },
 "sklearn.gaussian_process.tests.test_gpc.test_custom_optimizer": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "sklearn.gaussian_process.GaussianProcessClassifier",
    "sklearn.gaussian_process.tests.test_gpc.X",
    "sklearn.gaussian_process.tests.test_gpc.non_fixed_kernels",
    "sklearn.gaussian_process.tests.test_gpc.pytest",
    "sklearn.gaussian_process.tests.test_gpc.y_mc"
   ]
  },
  "type": "function"
 },
 "sklearn.gaussian_process.tests.test_gpc.test_custom_optimizer.optimizer": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "numpy.atleast_1d",
    "numpy.maximum",
    "numpy.minimum",
    "numpy.random.RandomState",
    "obj_func",
    "range",
    "sklearn.gaussian_process.tests.test_gpc.f"
   ]
  },
  "type": "function"
 },
 "sklearn.gaussian_process.tests.test_gpc.test_lml_gradient": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "scipy.optimize.approx_fprime",
    "sklearn.gaussian_process.GaussianProcessClassifier",
    "sklearn.gaussian_process.tests.test_gpc.X",
    "sklearn.gaussian_process.tests.test_gpc.kernels",
    "sklearn.gaussian_process.tests.test_gpc.pytest",
    "sklearn.gaussian_process.tests.test_gpc.y",
    "sklearn.utils._testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.gaussian_process.tests.test_gpc.test_lml_improving": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "sklearn.gaussian_process.GaussianProcessClassifier",
    "sklearn.gaussian_process.tests.test_gpc.X",
    "sklearn.gaussian_process.tests.test_gpc.non_fixed_kernels",
    "sklearn.gaussian_process.tests.test_gpc.pytest",
    "sklearn.gaussian_process.tests.test_gpc.y"
   ]
  },
  "type": "function"
 },
 "sklearn.gaussian_process.tests.test_gpc.test_lml_precomputed": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "sklearn.gaussian_process.GaussianProcessClassifier",
    "sklearn.gaussian_process.tests.test_gpc.X",
    "sklearn.gaussian_process.tests.test_gpc.kernels",
    "sklearn.gaussian_process.tests.test_gpc.pytest",
    "sklearn.gaussian_process.tests.test_gpc.y",
    "sklearn.utils._testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.gaussian_process.tests.test_gpc.test_lml_without_cloning_kernel": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "numpy.float64",
    "numpy.ones",
    "sklearn.gaussian_process.GaussianProcessClassifier",
    "sklearn.gaussian_process.tests.test_gpc.X",
    "sklearn.gaussian_process.tests.test_gpc.kernels",
    "sklearn.gaussian_process.tests.test_gpc.pytest",
    "sklearn.gaussian_process.tests.test_gpc.y",
    "sklearn.utils._testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.gaussian_process.tests.test_gpc.test_multi_class": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "numpy.argmax",
    "sklearn.gaussian_process.GaussianProcessClassifier",
    "sklearn.gaussian_process.tests.test_gpc.X",
    "sklearn.gaussian_process.tests.test_gpc.X2",
    "sklearn.gaussian_process.tests.test_gpc.kernels",
    "sklearn.gaussian_process.tests.test_gpc.pytest",
    "sklearn.gaussian_process.tests.test_gpc.y_mc",
    "sklearn.utils._testing.assert_almost_equal",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.gaussian_process.tests.test_gpc.test_multi_class_n_jobs": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "sklearn.gaussian_process.GaussianProcessClassifier",
    "sklearn.gaussian_process.tests.test_gpc.X",
    "sklearn.gaussian_process.tests.test_gpc.X2",
    "sklearn.gaussian_process.tests.test_gpc.kernels",
    "sklearn.gaussian_process.tests.test_gpc.pytest",
    "sklearn.gaussian_process.tests.test_gpc.y_mc",
    "sklearn.utils._testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.gaussian_process.tests.test_gpc.test_predict_consistent": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "sklearn.gaussian_process.GaussianProcessClassifier",
    "sklearn.gaussian_process.tests.test_gpc.X",
    "sklearn.gaussian_process.tests.test_gpc.kernels",
    "sklearn.gaussian_process.tests.test_gpc.pytest",
    "sklearn.gaussian_process.tests.test_gpc.y",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.gaussian_process.tests.test_gpc.test_predict_consistent_structured": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.gaussian_process.GaussianProcessClassifier",
    "sklearn.gaussian_process.tests._mini_sequence_kernel.MiniSeqKernel",
    "sklearn.gaussian_process.tests.test_gpc.X",
    "sklearn.gaussian_process.tests.test_gpc.y",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.gaussian_process.tests.test_gpc.test_random_starts": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "numpy.finfo",
    "numpy.float32",
    "numpy.inf",
    "numpy.random.RandomState",
    "numpy.sin",
    "range",
    "sklearn.gaussian_process.GaussianProcessClassifier",
    "sklearn.gaussian_process.kernels.ConstantKernel",
    "sklearn.gaussian_process.kernels.RBF",
    "sklearn.gaussian_process.tests.test_gpc.X",
    "sklearn.gaussian_process.tests.test_gpc.y"
   ]
  },
  "type": "function"
 },
 "sklearn.gaussian_process.tests.test_gpc.test_warning_bounds": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "DeprecationWarning",
    "len",
    "numpy.tile",
    "sklearn.exceptions.ConvergenceWarning",
    "sklearn.gaussian_process.GaussianProcessClassifier",
    "sklearn.gaussian_process.kernels.RBF",
    "sklearn.gaussian_process.kernels.WhiteKernel",
    "sklearn.gaussian_process.tests.test_gpc.X",
    "sklearn.gaussian_process.tests.test_gpc.pytest",
    "sklearn.gaussian_process.tests.test_gpc.warnings",
    "sklearn.gaussian_process.tests.test_gpc.y",
    "sklearn.utils._testing.assert_warns_message"
   ]
  },
  "type": "function"
 },
 "sklearn.gaussian_process.tests.test_gpc.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.gaussian_process.tests.test_gpc.y": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "sklearn.gaussian_process.tests.test_gpc.y_mc": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "sklearn.gaussian_process.tests.test_gpr": {
  "data": {
   "symbols_in_volume": [
    "numpy.atleast_2d",
    "sklearn.gaussian_process.kernels.ConstantKernel",
    "sklearn.gaussian_process.kernels.RBF",
    "sklearn.gaussian_process.tests.test_gpr.X",
    "sklearn.gaussian_process.tests.test_gpr.f",
    "sklearn.gaussian_process.tests.test_gpr.fixed_kernel",
    "sklearn.gaussian_process.tests.test_gpr.kernels"
   ]
  },
  "type": "module"
 },
 "sklearn.gaussian_process.tests.test_gpr.C": {
  "data": {
   "shadows": "sklearn.gaussian_process.kernels.ConstantKernel"
  },
  "type": "import"
 },
 "sklearn.gaussian_process.tests.test_gpr.ConvergenceWarning": {
  "data": {
   "shadows": "sklearn.exceptions.ConvergenceWarning"
  },
  "type": "import"
 },
 "sklearn.gaussian_process.tests.test_gpr.DotProduct": {
  "data": {
   "shadows": "sklearn.gaussian_process.kernels.DotProduct"
  },
  "type": "import"
 },
 "sklearn.gaussian_process.tests.test_gpr.ExpSineSquared": {
  "data": {
   "shadows": "sklearn.gaussian_process.kernels.ExpSineSquared"
  },
  "type": "import"
 },
 "sklearn.gaussian_process.tests.test_gpr.GaussianProcessRegressor": {
  "data": {
   "shadows": "sklearn.gaussian_process.GaussianProcessRegressor"
  },
  "type": "import"
 },
 "sklearn.gaussian_process.tests.test_gpr.MiniSeqKernel": {
  "data": {
   "shadows": "sklearn.gaussian_process.tests._mini_sequence_kernel.MiniSeqKernel"
  },
  "type": "import"
 },
 "sklearn.gaussian_process.tests.test_gpr.RBF": {
  "data": {
   "shadows": "sklearn.gaussian_process.kernels.RBF"
  },
  "type": "import"
 },
 "sklearn.gaussian_process.tests.test_gpr.WhiteKernel": {
  "data": {
   "shadows": "sklearn.gaussian_process.kernels.WhiteKernel"
  },
  "type": "import"
 },
 "sklearn.gaussian_process.tests.test_gpr.X": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "sklearn.gaussian_process.tests.test_gpr.X2": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "sklearn.gaussian_process.tests.test_gpr.approx_fprime": {
  "data": {
   "shadows": "scipy.optimize.approx_fprime"
  },
  "type": "import"
 },
 "sklearn.gaussian_process.tests.test_gpr.assert_allclose": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_allclose"
  },
  "type": "import"
 },
 "sklearn.gaussian_process.tests.test_gpr.assert_almost_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_almost_equal"
  },
  "type": "import"
 },
 "sklearn.gaussian_process.tests.test_gpr.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.gaussian_process.tests.test_gpr.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.gaussian_process.tests.test_gpr.assert_array_less": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_array_less"
  },
  "type": "import"
 },
 "sklearn.gaussian_process.tests.test_gpr.assert_raise_message": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_raise_message"
  },
  "type": "import"
 },
 "sklearn.gaussian_process.tests.test_gpr.assert_warns_message": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_warns_message"
  },
  "type": "import"
 },
 "sklearn.gaussian_process.tests.test_gpr.f": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "numpy.sin"
   ]
  },
  "type": "function"
 },
 "sklearn.gaussian_process.tests.test_gpr.fixed_kernel": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "sklearn.gaussian_process.tests.test_gpr.kernels": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "sklearn.gaussian_process.tests.test_gpr.non_fixed_kernels": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "sklearn.gaussian_process.tests.test_gpr.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.gaussian_process.tests.test_gpr.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.gaussian_process.tests.test_gpr.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "sklearn.gaussian_process.tests.test_gpr.test_K_inv_reset": {
  "data": {
   "lineno": 455,
   "symbols_in_volume": [
    "hasattr",
    "kernel",
    "sklearn.gaussian_process.GaussianProcessRegressor",
    "sklearn.gaussian_process.tests.test_gpr.X",
    "sklearn.gaussian_process.tests.test_gpr.X2",
    "sklearn.gaussian_process.tests.test_gpr.f",
    "sklearn.gaussian_process.tests.test_gpr.kernels",
    "sklearn.gaussian_process.tests.test_gpr.pytest",
    "sklearn.gaussian_process.tests.test_gpr.y",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.gaussian_process.tests.test_gpr.test_anisotropic_kernel": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "kernel",
    "numpy.exp",
    "numpy.random.RandomState",
    "sklearn.gaussian_process.GaussianProcessRegressor",
    "sklearn.gaussian_process.kernels.RBF",
    "sklearn.gaussian_process.tests.test_gpr.X",
    "sklearn.gaussian_process.tests.test_gpr.y"
   ]
  },
  "type": "function"
 },
 "sklearn.gaussian_process.tests.test_gpr.test_bound_check_fixed_hyperparameter": {
  "data": {
   "lineno": 537,
   "symbols_in_volume": [
    "kernel",
    "sklearn.gaussian_process.GaussianProcessRegressor",
    "sklearn.gaussian_process.kernels.ExpSineSquared",
    "sklearn.gaussian_process.kernels.RBF",
    "sklearn.gaussian_process.tests.test_gpr.X",
    "sklearn.gaussian_process.tests.test_gpr.y"
   ]
  },
  "type": "function"
 },
 "sklearn.gaussian_process.tests.test_gpr.test_converged_to_local_maximum": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "kernel",
    "numpy.abs",
    "numpy.all",
    "sklearn.gaussian_process.GaussianProcessRegressor",
    "sklearn.gaussian_process.tests.test_gpr.X",
    "sklearn.gaussian_process.tests.test_gpr.non_fixed_kernels",
    "sklearn.gaussian_process.tests.test_gpr.pytest",
    "sklearn.gaussian_process.tests.test_gpr.y"
   ]
  },
  "type": "function"
 },
 "sklearn.gaussian_process.tests.test_gpr.test_custom_optimizer": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": [
    "kernel",
    "sklearn.gaussian_process.GaussianProcessRegressor",
    "sklearn.gaussian_process.tests.test_gpr.X",
    "sklearn.gaussian_process.tests.test_gpr.non_fixed_kernels",
    "sklearn.gaussian_process.tests.test_gpr.pytest",
    "sklearn.gaussian_process.tests.test_gpr.y"
   ]
  },
  "type": "function"
 },
 "sklearn.gaussian_process.tests.test_gpr.test_custom_optimizer.optimizer": {
  "data": {
   "lineno": 383,
   "symbols_in_volume": [
    "numpy.atleast_1d",
    "numpy.maximum",
    "numpy.minimum",
    "numpy.random.RandomState",
    "obj_func",
    "range",
    "sklearn.gaussian_process.tests.test_gpr.f"
   ]
  },
  "type": "function"
 },
 "sklearn.gaussian_process.tests.test_gpr.test_duplicate_input": {
  "data": {
   "lineno": 415,
   "symbols_in_volume": [
    "kernel",
    "numpy.hstack",
    "numpy.linspace",
    "numpy.vstack",
    "sklearn.gaussian_process.GaussianProcessRegressor",
    "sklearn.gaussian_process.tests.test_gpr.X",
    "sklearn.gaussian_process.tests.test_gpr.kernels",
    "sklearn.gaussian_process.tests.test_gpr.pytest",
    "sklearn.gaussian_process.tests.test_gpr.y",
    "sklearn.utils._testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.gaussian_process.tests.test_gpr.test_gpr_correct_error_message": {
  "data": {
   "lineno": 402,
   "symbols_in_volume": [
    "kernel",
    "numpy.arange",
    "numpy.linalg.LinAlgError",
    "numpy.ones",
    "sklearn.gaussian_process.GaussianProcessRegressor",
    "sklearn.gaussian_process.kernels.DotProduct",
    "sklearn.gaussian_process.tests.test_gpr.X",
    "sklearn.gaussian_process.tests.test_gpr.y",
    "sklearn.utils._testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.gaussian_process.tests.test_gpr.test_gpr_interpolation": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "numpy.diag",
    "sklearn.gaussian_process.GaussianProcessRegressor",
    "sklearn.gaussian_process.tests.test_gpr.X",
    "sklearn.gaussian_process.tests.test_gpr.kernels",
    "sklearn.gaussian_process.tests.test_gpr.pytest",
    "sklearn.gaussian_process.tests.test_gpr.sys",
    "sklearn.gaussian_process.tests.test_gpr.y",
    "sklearn.utils._testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.gaussian_process.tests.test_gpr.test_gpr_interpolation_structured": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "kernel",
    "len",
    "numpy.array",
    "numpy.diag",
    "numpy.eye",
    "sklearn.gaussian_process.GaussianProcessRegressor",
    "sklearn.gaussian_process.tests._mini_sequence_kernel.MiniSeqKernel",
    "sklearn.gaussian_process.tests.test_gpr.X",
    "sklearn.gaussian_process.tests.test_gpr.y",
    "sklearn.utils._testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.gaussian_process.tests.test_gpr.test_large_variance_y": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "kernel",
    "numpy.array",
    "sklearn.gaussian_process.GaussianProcessRegressor",
    "sklearn.gaussian_process.kernels.RBF",
    "sklearn.gaussian_process.tests.test_gpr.X",
    "sklearn.gaussian_process.tests.test_gpr.X2",
    "sklearn.gaussian_process.tests.test_gpr.y",
    "sklearn.utils._testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "sklearn.gaussian_process.tests.test_gpr.test_lml_gradient": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "kernel",
    "kernel.theta",
    "scipy.optimize.approx_fprime",
    "sklearn.gaussian_process.GaussianProcessRegressor",
    "sklearn.gaussian_process.tests.test_gpr.X",
    "sklearn.gaussian_process.tests.test_gpr.kernels",
    "sklearn.gaussian_process.tests.test_gpr.pytest",
    "sklearn.gaussian_process.tests.test_gpr.y",
    "sklearn.utils._testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.gaussian_process.tests.test_gpr.test_lml_improving": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "kernel",
    "kernel.theta",
    "sklearn.gaussian_process.GaussianProcessRegressor",
    "sklearn.gaussian_process.tests.test_gpr.X",
    "sklearn.gaussian_process.tests.test_gpr.non_fixed_kernels",
    "sklearn.gaussian_process.tests.test_gpr.pytest",
    "sklearn.gaussian_process.tests.test_gpr.sys",
    "sklearn.gaussian_process.tests.test_gpr.y"
   ]
  },
  "type": "function"
 },
 "sklearn.gaussian_process.tests.test_gpr.test_lml_precomputed": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "kernel",
    "sklearn.gaussian_process.GaussianProcessRegressor",
    "sklearn.gaussian_process.tests.test_gpr.X",
    "sklearn.gaussian_process.tests.test_gpr.kernels",
    "sklearn.gaussian_process.tests.test_gpr.pytest",
    "sklearn.gaussian_process.tests.test_gpr.y"
   ]
  },
  "type": "function"
 },
 "sklearn.gaussian_process.tests.test_gpr.test_lml_without_cloning_kernel": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "kernel",
    "numpy.float64",
    "numpy.ones",
    "sklearn.gaussian_process.GaussianProcessRegressor",
    "sklearn.gaussian_process.tests.test_gpr.X",
    "sklearn.gaussian_process.tests.test_gpr.kernels",
    "sklearn.gaussian_process.tests.test_gpr.pytest",
    "sklearn.gaussian_process.tests.test_gpr.y",
    "sklearn.utils._testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.gaussian_process.tests.test_gpr.test_no_fit_default_predict": {
  "data": {
   "lineno": 439,
   "symbols_in_volume": [
    "sklearn.gaussian_process.GaussianProcessRegressor",
    "sklearn.gaussian_process.kernels.ConstantKernel",
    "sklearn.gaussian_process.kernels.RBF",
    "sklearn.gaussian_process.tests.test_gpr.X",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.gaussian_process.tests.test_gpr.test_no_optimizer": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "kernel",
    "numpy.exp",
    "sklearn.gaussian_process.GaussianProcessRegressor",
    "sklearn.gaussian_process.kernels.RBF",
    "sklearn.gaussian_process.tests.test_gpr.X",
    "sklearn.gaussian_process.tests.test_gpr.y"
   ]
  },
  "type": "function"
 },
 "sklearn.gaussian_process.tests.test_gpr.test_predict_cov_vs_std": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "kernel",
    "numpy.diag",
    "numpy.sqrt",
    "sklearn.gaussian_process.GaussianProcessRegressor",
    "sklearn.gaussian_process.tests.test_gpr.X",
    "sklearn.gaussian_process.tests.test_gpr.X2",
    "sklearn.gaussian_process.tests.test_gpr.kernels",
    "sklearn.gaussian_process.tests.test_gpr.pytest",
    "sklearn.gaussian_process.tests.test_gpr.sys",
    "sklearn.gaussian_process.tests.test_gpr.y",
    "sklearn.utils._testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.gaussian_process.tests.test_gpr.test_prior": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "kernel",
    "kernel.theta",
    "len",
    "numpy.diag",
    "numpy.exp",
    "sklearn.gaussian_process.GaussianProcessRegressor",
    "sklearn.gaussian_process.tests.test_gpr.X",
    "sklearn.gaussian_process.tests.test_gpr.kernels",
    "sklearn.gaussian_process.tests.test_gpr.pytest",
    "sklearn.utils._testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.gaussian_process.tests.test_gpr.test_random_starts": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "kernel",
    "numpy.finfo",
    "numpy.float32",
    "numpy.inf",
    "numpy.random.RandomState",
    "numpy.sin",
    "range",
    "sklearn.gaussian_process.GaussianProcessRegressor",
    "sklearn.gaussian_process.kernels.ConstantKernel",
    "sklearn.gaussian_process.kernels.RBF",
    "sklearn.gaussian_process.kernels.WhiteKernel",
    "sklearn.gaussian_process.tests.test_gpr.X",
    "sklearn.gaussian_process.tests.test_gpr.y"
   ]
  },
  "type": "function"
 },
 "sklearn.gaussian_process.tests.test_gpr.test_sample_statistics": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "kernel",
    "numpy.diag",
    "numpy.mean",
    "numpy.var",
    "sklearn.gaussian_process.GaussianProcessRegressor",
    "sklearn.gaussian_process.tests.test_gpr.X",
    "sklearn.gaussian_process.tests.test_gpr.X2",
    "sklearn.gaussian_process.tests.test_gpr.kernels",
    "sklearn.gaussian_process.tests.test_gpr.pytest",
    "sklearn.gaussian_process.tests.test_gpr.y",
    "sklearn.utils._testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.gaussian_process.tests.test_gpr.test_solution_inside_bounds": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "kernel",
    "numpy.finfo",
    "numpy.isfinite",
    "sklearn.gaussian_process.GaussianProcessRegressor",
    "sklearn.gaussian_process.tests.test_gpr.X",
    "sklearn.gaussian_process.tests.test_gpr.non_fixed_kernels",
    "sklearn.gaussian_process.tests.test_gpr.pytest",
    "sklearn.gaussian_process.tests.test_gpr.y",
    "sklearn.utils._testing.assert_array_less"
   ]
  },
  "type": "function"
 },
 "sklearn.gaussian_process.tests.test_gpr.test_warning_bounds": {
  "data": {
   "lineno": 474,
   "symbols_in_volume": [
    "DeprecationWarning",
    "kernel",
    "len",
    "numpy.tile",
    "sklearn.exceptions.ConvergenceWarning",
    "sklearn.gaussian_process.GaussianProcessRegressor",
    "sklearn.gaussian_process.kernels.RBF",
    "sklearn.gaussian_process.kernels.WhiteKernel",
    "sklearn.gaussian_process.tests.test_gpr.X",
    "sklearn.gaussian_process.tests.test_gpr.pytest",
    "sklearn.gaussian_process.tests.test_gpr.warnings",
    "sklearn.gaussian_process.tests.test_gpr.y",
    "sklearn.utils._testing.assert_warns_message"
   ]
  },
  "type": "function"
 },
 "sklearn.gaussian_process.tests.test_gpr.test_y_multioutput": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": [
    "kernel",
    "numpy.vstack",
    "sklearn.gaussian_process.GaussianProcessRegressor",
    "sklearn.gaussian_process.kernels.RBF",
    "sklearn.gaussian_process.tests.test_gpr.X",
    "sklearn.gaussian_process.tests.test_gpr.X2",
    "sklearn.gaussian_process.tests.test_gpr.kernels",
    "sklearn.gaussian_process.tests.test_gpr.y",
    "sklearn.utils._testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.gaussian_process.tests.test_gpr.test_y_normalization": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "kernel",
    "numpy.mean",
    "numpy.std",
    "sklearn.gaussian_process.GaussianProcessRegressor",
    "sklearn.gaussian_process.tests.test_gpr.X",
    "sklearn.gaussian_process.tests.test_gpr.X2",
    "sklearn.gaussian_process.tests.test_gpr.kernels",
    "sklearn.gaussian_process.tests.test_gpr.pytest",
    "sklearn.gaussian_process.tests.test_gpr.y",
    "sklearn.utils._testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.gaussian_process.tests.test_gpr.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.gaussian_process.tests.test_gpr.y": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "sklearn.gaussian_process.tests.test_kernels": {
  "data": {
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.gaussian_process.kernels.ConstantKernel",
    "sklearn.gaussian_process.kernels.DotProduct",
    "sklearn.gaussian_process.kernels.ExpSineSquared",
    "sklearn.gaussian_process.kernels.Matern",
    "sklearn.gaussian_process.kernels.PairwiseKernel",
    "sklearn.gaussian_process.kernels.RBF",
    "sklearn.gaussian_process.kernels.RationalQuadratic",
    "sklearn.gaussian_process.kernels.WhiteKernel",
    "sklearn.gaussian_process.tests.test_kernels.kernel_rbf_plus_white",
    "sklearn.gaussian_process.tests.test_kernels.kernels",
    "sklearn.metrics.pairwise.PAIRWISE_KERNEL_FUNCTIONS"
   ]
  },
  "type": "module"
 },
 "sklearn.gaussian_process.tests.test_kernels.CompoundKernel": {
  "data": {
   "shadows": "sklearn.gaussian_process.kernels.CompoundKernel"
  },
  "type": "import"
 },
 "sklearn.gaussian_process.tests.test_kernels.ConstantKernel": {
  "data": {
   "shadows": "sklearn.gaussian_process.kernels.ConstantKernel"
  },
  "type": "import"
 },
 "sklearn.gaussian_process.tests.test_kernels.DotProduct": {
  "data": {
   "shadows": "sklearn.gaussian_process.kernels.DotProduct"
  },
  "type": "import"
 },
 "sklearn.gaussian_process.tests.test_kernels.ExpSineSquared": {
  "data": {
   "shadows": "sklearn.gaussian_process.kernels.ExpSineSquared"
  },
  "type": "import"
 },
 "sklearn.gaussian_process.tests.test_kernels.Exponentiation": {
  "data": {
   "shadows": "sklearn.gaussian_process.kernels.Exponentiation"
  },
  "type": "import"
 },
 "sklearn.gaussian_process.tests.test_kernels.KernelOperator": {
  "data": {
   "shadows": "sklearn.gaussian_process.kernels.KernelOperator"
  },
  "type": "import"
 },
 "sklearn.gaussian_process.tests.test_kernels.Matern": {
  "data": {
   "shadows": "sklearn.gaussian_process.kernels.Matern"
  },
  "type": "import"
 },
 "sklearn.gaussian_process.tests.test_kernels.PAIRWISE_KERNEL_FUNCTIONS": {
  "data": {
   "shadows": "sklearn.metrics.pairwise.PAIRWISE_KERNEL_FUNCTIONS"
  },
  "type": "import"
 },
 "sklearn.gaussian_process.tests.test_kernels.PairwiseKernel": {
  "data": {
   "shadows": "sklearn.gaussian_process.kernels.PairwiseKernel"
  },
  "type": "import"
 },
 "sklearn.gaussian_process.tests.test_kernels.RBF": {
  "data": {
   "shadows": "sklearn.gaussian_process.kernels.RBF"
  },
  "type": "import"
 },
 "sklearn.gaussian_process.tests.test_kernels.RationalQuadratic": {
  "data": {
   "shadows": "sklearn.gaussian_process.kernels.RationalQuadratic"
  },
  "type": "import"
 },
 "sklearn.gaussian_process.tests.test_kernels.WhiteKernel": {
  "data": {
   "shadows": "sklearn.gaussian_process.kernels.WhiteKernel"
  },
  "type": "import"
 },
 "sklearn.gaussian_process.tests.test_kernels.X": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "sklearn.gaussian_process.tests.test_kernels.Y": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "sklearn.gaussian_process.tests.test_kernels._approx_fprime": {
  "data": {
   "shadows": "sklearn.gaussian_process.kernels._approx_fprime"
  },
  "type": "import"
 },
 "sklearn.gaussian_process.tests.test_kernels.assert_allclose": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_allclose"
  },
  "type": "import"
 },
 "sklearn.gaussian_process.tests.test_kernels.assert_almost_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_almost_equal"
  },
  "type": "import"
 },
 "sklearn.gaussian_process.tests.test_kernels.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.gaussian_process.tests.test_kernels.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.gaussian_process.tests.test_kernels.assert_raise_message": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_raise_message"
  },
  "type": "import"
 },
 "sklearn.gaussian_process.tests.test_kernels.check_hyperparameters_equal": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "dir",
    "getattr",
    "set"
   ]
  },
  "type": "function"
 },
 "sklearn.gaussian_process.tests.test_kernels.clone": {
  "data": {
   "shadows": "sklearn.base.clone"
  },
  "type": "import"
 },
 "sklearn.gaussian_process.tests.test_kernels.euclidean_distances": {
  "data": {
   "shadows": "sklearn.metrics.pairwise.euclidean_distances"
  },
  "type": "import"
 },
 "sklearn.gaussian_process.tests.test_kernels.kernel_rbf_plus_white": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "sklearn.gaussian_process.tests.test_kernels.kernels": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "sklearn.gaussian_process.tests.test_kernels.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.gaussian_process.tests.test_kernels.pairwise_kernels": {
  "data": {
   "shadows": "sklearn.metrics.pairwise.pairwise_kernels"
  },
  "type": "import"
 },
 "sklearn.gaussian_process.tests.test_kernels.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.gaussian_process.tests.test_kernels.signature": {
  "data": {
   "shadows": "inspect.signature"
  },
  "type": "import"
 },
 "sklearn.gaussian_process.tests.test_kernels.test_auto_vs_cross": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "kernel",
    "sklearn.gaussian_process.tests.test_kernels.X",
    "sklearn.gaussian_process.tests.test_kernels.kernel_rbf_plus_white",
    "sklearn.gaussian_process.tests.test_kernels.kernels",
    "sklearn.gaussian_process.tests.test_kernels.pytest",
    "sklearn.utils._testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.gaussian_process.tests.test_kernels.test_compound_kernel_input_type": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "kernel",
    "kernel.requires_vector_input",
    "sklearn.gaussian_process.kernels.CompoundKernel",
    "sklearn.gaussian_process.kernels.RBF",
    "sklearn.gaussian_process.kernels.WhiteKernel"
   ]
  },
  "type": "function"
 },
 "sklearn.gaussian_process.tests.test_kernels.test_kernel_anisotropic": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "kernel",
    "kernel.k2.length_scale",
    "kernel.theta",
    "numpy.array",
    "numpy.log",
    "sklearn.gaussian_process.kernels.RBF",
    "sklearn.gaussian_process.tests.test_kernels.X",
    "sklearn.utils._testing.assert_almost_equal",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.gaussian_process.tests.test_kernels.test_kernel_clone": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "id",
    "kernel",
    "kernel.get_params",
    "sklearn.base.clone",
    "sklearn.gaussian_process.tests.test_kernels.check_hyperparameters_equal",
    "sklearn.gaussian_process.tests.test_kernels.kernels",
    "sklearn.gaussian_process.tests.test_kernels.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.gaussian_process.tests.test_kernels.test_kernel_clone_after_set_params": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "id",
    "isinstance",
    "kernel",
    "kernel.get_params",
    "numpy.iterable",
    "sklearn.base.clone",
    "sklearn.gaussian_process.kernels.ExpSineSquared",
    "sklearn.gaussian_process.kernels.RationalQuadratic",
    "sklearn.gaussian_process.tests.test_kernels.check_hyperparameters_equal",
    "sklearn.gaussian_process.tests.test_kernels.kernels",
    "sklearn.gaussian_process.tests.test_kernels.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.gaussian_process.tests.test_kernels.test_kernel_diag": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "kernel",
    "kernel.diag",
    "numpy.diag",
    "sklearn.gaussian_process.tests.test_kernels.X",
    "sklearn.gaussian_process.tests.test_kernels.kernels",
    "sklearn.gaussian_process.tests.test_kernels.pytest",
    "sklearn.utils._testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.gaussian_process.tests.test_kernels.test_kernel_gradient": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "kernel",
    "kernel.theta",
    "kernel.theta.shape",
    "sklearn.gaussian_process.kernels._approx_fprime",
    "sklearn.gaussian_process.tests.test_kernels.X",
    "sklearn.gaussian_process.tests.test_kernels.kernels",
    "sklearn.gaussian_process.tests.test_kernels.pytest",
    "sklearn.utils._testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.gaussian_process.tests.test_kernels.test_kernel_gradient.eval_kernel_for_theta": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "kernel.clone_with_theta",
    "kernel_clone",
    "sklearn.gaussian_process.tests.test_kernels.X"
   ]
  },
  "type": "function"
 },
 "sklearn.gaussian_process.tests.test_kernels.test_kernel_input_type": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "isinstance",
    "kernel",
    "kernel.k1.requires_vector_input",
    "kernel.k2.requires_vector_input",
    "kernel.kernel.requires_vector_input",
    "kernel.requires_vector_input",
    "sklearn.gaussian_process.kernels.Exponentiation",
    "sklearn.gaussian_process.kernels.KernelOperator",
    "sklearn.gaussian_process.tests.test_kernels.kernels",
    "sklearn.gaussian_process.tests.test_kernels.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.gaussian_process.tests.test_kernels.test_kernel_operator_commutative": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "sklearn.gaussian_process.kernels.RBF",
    "sklearn.gaussian_process.tests.test_kernels.X",
    "sklearn.utils._testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.gaussian_process.tests.test_kernels.test_kernel_stationary": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "kernel",
    "kernel.is_stationary",
    "numpy.diag",
    "sklearn.gaussian_process.tests.test_kernels.X",
    "sklearn.gaussian_process.tests.test_kernels.kernels",
    "sklearn.gaussian_process.tests.test_kernels.pytest",
    "sklearn.utils._testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.gaussian_process.tests.test_kernels.test_kernel_theta": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "enumerate",
    "filter",
    "getattr",
    "inspect.signature",
    "isinstance",
    "kernel",
    "kernel.__class__",
    "kernel.__class__.__init__",
    "kernel.get_params",
    "kernel.hyperparameters",
    "kernel.theta",
    "kernel_class",
    "len",
    "map",
    "new_kernel",
    "new_kernel.theta",
    "new_kernel.theta.shape",
    "numpy.log",
    "set",
    "setattr",
    "sklearn.gaussian_process.kernels.Exponentiation",
    "sklearn.gaussian_process.kernels.KernelOperator",
    "sklearn.gaussian_process.tests.test_kernels.X",
    "sklearn.gaussian_process.tests.test_kernels.kernels",
    "sklearn.gaussian_process.tests.test_kernels.pytest",
    "sklearn.utils._testing.assert_almost_equal",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.gaussian_process.tests.test_kernels.test_kernel_versus_pairwise": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": [
    "kernel",
    "sklearn.gaussian_process.tests.test_kernels.X",
    "sklearn.gaussian_process.tests.test_kernels.Y",
    "sklearn.gaussian_process.tests.test_kernels.kernel_rbf_plus_white",
    "sklearn.gaussian_process.tests.test_kernels.kernels",
    "sklearn.gaussian_process.tests.test_kernels.pytest",
    "sklearn.metrics.pairwise.pairwise_kernels",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.gaussian_process.tests.test_kernels.test_matern_kernel": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "numpy.diag",
    "numpy.exp",
    "numpy.inf",
    "numpy.ones",
    "sklearn.gaussian_process.kernels.Matern",
    "sklearn.gaussian_process.kernels.RBF",
    "sklearn.gaussian_process.tests.test_kernels.X",
    "sklearn.metrics.pairwise.euclidean_distances",
    "sklearn.utils._testing.assert_allclose",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.gaussian_process.tests.test_kernels.test_rational_quadratic_kernel": {
  "data": {
   "lineno": 359,
   "symbols_in_volume": [
    "AttributeError",
    "kernel",
    "sklearn.gaussian_process.kernels.RationalQuadratic",
    "sklearn.gaussian_process.tests.test_kernels.X",
    "sklearn.utils._testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.gaussian_process.tests.test_kernels.test_repr_kernels": {
  "data": {
   "lineno": 352,
   "symbols_in_volume": [
    "kernel",
    "repr",
    "sklearn.gaussian_process.tests.test_kernels.kernels",
    "sklearn.gaussian_process.tests.test_kernels.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.gaussian_process.tests.test_kernels.test_set_get_params": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": [
    "isinstance",
    "kernel.get_params",
    "kernel.hyperparameters",
    "kernel.set_params",
    "kernel.theta",
    "numpy.exp",
    "sklearn.gaussian_process.tests.test_kernels.kernels",
    "sklearn.gaussian_process.tests.test_kernels.pytest",
    "sklearn.utils._testing.assert_almost_equal",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.impute": {
  "data": {
   "symbols_in_volume": [
    "sklearn.impute.typing"
   ]
  },
  "type": "module"
 },
 "sklearn.impute.__all__": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "sklearn.impute._base": {
  "data": {},
  "type": "module"
 },
 "sklearn.impute._base.Counter": {
  "data": {
   "shadows": "collections.Counter"
  },
  "type": "import"
 },
 "sklearn.impute._base.MissingIndicator": {
  "data": {
   "lineno": 556
  },
  "type": "class"
 },
 "sklearn.impute._base.MissingIndicator.__init__": {
  "data": {
   "lineno": 623,
   "symbols_in_volume": [
    "numpy.nan",
    "scipy.sparse"
   ]
  },
  "type": "function"
 },
 "sklearn.impute._base.MissingIndicator._fit": {
  "data": {
   "lineno": 711,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "hasattr",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.impute._base.MissingIndicator._get_missing_features_info": {
  "data": {
   "lineno": 631,
   "symbols_in_volume": [
    "_get_mask",
    "numpy.arange",
    "numpy.flatnonzero",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.issparse"
   ]
  },
  "type": "function"
 },
 "sklearn.impute._base.MissingIndicator._more_tags": {
  "data": {
   "lineno": 843
  },
  "type": "function"
 },
 "sklearn.impute._base.MissingIndicator._validate_input": {
  "data": {
   "lineno": 685,
   "symbols_in_volume": [
    "ValueError",
    "is_scalar_nan",
    "scipy.sparse.issparse",
    "sklearn.impute._base._check_inputs_dtype"
   ]
  },
  "type": "function"
 },
 "sklearn.impute._base.MissingIndicator.fit": {
  "data": {
   "lineno": 761
  },
  "type": "function"
 },
 "sklearn.impute._base.MissingIndicator.fit_transform": {
  "data": {
   "lineno": 820
  },
  "type": "function"
 },
 "sklearn.impute._base.MissingIndicator.transform": {
  "data": {
   "lineno": 779,
   "symbols_in_volume": [
    "ValueError",
    "check_is_fitted",
    "hasattr",
    "numpy.setdiff1d"
   ]
  },
  "type": "function"
 },
 "sklearn.impute._base.SimpleImputer": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "sklearn.impute._base._BaseImputer"
   ]
  },
  "type": "class"
 },
 "sklearn.impute._base.SimpleImputer.__init__": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "numpy.nan",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.impute._base.SimpleImputer._dense_fit": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": [
    "_get_mask",
    "bool",
    "enumerate",
    "numpy.empty",
    "numpy.full",
    "numpy.logical_not",
    "numpy.ma.getdata",
    "numpy.ma.getmask",
    "numpy.ma.getmaskarray",
    "numpy.ma.masked_array",
    "numpy.ma.mean",
    "numpy.ma.median",
    "numpy.nan",
    "object",
    "sklearn.impute._base._most_frequent",
    "super",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.impute._base.SimpleImputer._sparse_fit": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": [
    "_get_mask",
    "_get_median",
    "numpy.diff",
    "numpy.empty",
    "numpy.nan",
    "range",
    "sklearn.impute._base._most_frequent",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.impute._base.SimpleImputer._validate_input": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "ValueError",
    "any",
    "is_scalar_nan",
    "isinstance",
    "list",
    "object",
    "sklearn.impute._base._check_inputs_dtype",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.impute._base.SimpleImputer.fit": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "scipy.sparse.issparse",
    "sklearn.impute._base.numbers"
   ]
  },
  "type": "function"
 },
 "sklearn.impute._base.SimpleImputer.inverse_transform": {
  "data": {
   "lineno": 495,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "check_is_fitted",
    "len",
    "numpy.all",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "sklearn.impute._base.SimpleImputer.transform": {
  "data": {
   "lineno": 422,
   "symbols_in_volume": [
    "ValueError",
    "_get_mask",
    "check_is_fitted",
    "int",
    "len",
    "numpy.arange",
    "numpy.diff",
    "numpy.flatnonzero",
    "numpy.logical_not",
    "numpy.nan",
    "numpy.repeat",
    "numpy.sum",
    "numpy.where",
    "scipy.sparse.issparse",
    "sklearn.impute._base.warnings",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.impute._base._BaseImputer": {
  "data": {
   "lineno": 68
  },
  "type": "class"
 },
 "sklearn.impute._base._BaseImputer.__init__": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "sklearn.impute._base._BaseImputer._concatenate_indicator": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "ValueError",
    "hstack",
    "numpy.hstack",
    "scipy.sparse.hstack",
    "scipy.sparse.issparse"
   ]
  },
  "type": "function"
 },
 "sklearn.impute._base._BaseImputer._fit_indicator": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "sklearn.impute._base.MissingIndicator"
   ]
  },
  "type": "function"
 },
 "sklearn.impute._base._BaseImputer._more_tags": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "is_scalar_nan"
   ]
  },
  "type": "function"
 },
 "sklearn.impute._base._BaseImputer._transform_indicator": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "ValueError",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "sklearn.impute._base._check_inputs_dtype": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "sklearn.impute._base.numbers",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.impute._base._most_frequent": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "collections.Counter",
    "min",
    "numpy.nan",
    "object",
    "scipy.stats.mode"
   ]
  },
  "type": "function"
 },
 "sklearn.impute._base.ma": {
  "data": {
   "shadows": "numpy.ma"
  },
  "type": "import"
 },
 "sklearn.impute._base.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.impute._base.numbers": {
  "data": {
   "shadows": "numbers"
  },
  "type": "import"
 },
 "sklearn.impute._base.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.impute._base.stats": {
  "data": {
   "shadows": "scipy.stats"
  },
  "type": "import"
 },
 "sklearn.impute._base.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.impute._iterative": {
  "data": {
   "symbols_in_volume": [
    "collections.namedtuple"
   ]
  },
  "type": "module"
 },
 "sklearn.impute._iterative.IterativeImputer": {
  "data": {
   "lineno": 27
  },
  "type": "class"
 },
 "sklearn.impute._iterative.IterativeImputer.__init__": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "numpy.inf",
    "numpy.nan",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.impute._iterative.IterativeImputer._get_abs_corr_mat": {
  "data": {
   "lineno": 438,
   "symbols_in_volume": [
    "normalize",
    "numpy.abs",
    "numpy.clip",
    "numpy.corrcoef",
    "numpy.errstate",
    "numpy.fill_diagonal",
    "numpy.isnan"
   ]
  },
  "type": "function"
 },
 "sklearn.impute._iterative.IterativeImputer._get_neighbor_feat_idx": {
  "data": {
   "lineno": 351,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.concatenate"
   ]
  },
  "type": "function"
 },
 "sklearn.impute._iterative.IterativeImputer._get_ordered_idx": {
  "data": {
   "lineno": 391,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.arange",
    "numpy.argsort",
    "numpy.flatnonzero",
    "numpy.shape"
   ]
  },
  "type": "function"
 },
 "sklearn.impute._iterative.IterativeImputer._impute_one_feature": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "ValueError",
    "_safe_indexing",
    "clone",
    "numpy.clip",
    "numpy.sum",
    "numpy.zeros",
    "scipy.stats.truncnorm"
   ]
  },
  "type": "function"
 },
 "sklearn.impute._iterative.IterativeImputer._initial_imputation": {
  "data": {
   "lineno": 477,
   "symbols_in_volume": [
    "SimpleImputer",
    "_check_inputs_dtype",
    "_get_mask",
    "is_scalar_nan",
    "numpy.flatnonzero",
    "numpy.isnan",
    "numpy.logical_not"
   ]
  },
  "type": "function"
 },
 "sklearn.impute._iterative.IterativeImputer._validate_limit": {
  "data": {
   "lineno": 534,
   "symbols_in_volume": [
    "ValueError",
    "check_array",
    "numpy.full",
    "numpy.inf",
    "numpy.isscalar",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "sklearn.impute._iterative.IterativeImputer.fit": {
  "data": {
   "lineno": 741
  },
  "type": "function"
 },
 "sklearn.impute._iterative.IterativeImputer.fit_transform": {
  "data": {
   "lineno": 566,
   "symbols_in_volume": [
    "BayesianRidge",
    "ValueError",
    "check_random_state",
    "clone",
    "getattr",
    "len",
    "numpy.abs",
    "numpy.all",
    "numpy.greater",
    "numpy.inf",
    "numpy.linalg.norm",
    "numpy.max",
    "print",
    "range",
    "sklearn.impute._iterative._ImputerTriplet",
    "sklearn.impute._iterative.warnings",
    "super",
    "time.time"
   ]
  },
  "type": "function"
 },
 "sklearn.impute._iterative.IterativeImputer.transform": {
  "data": {
   "lineno": 690,
   "symbols_in_volume": [
    "check_is_fitted",
    "enumerate",
    "len",
    "numpy.all",
    "print",
    "super",
    "time.time"
   ]
  },
  "type": "function"
 },
 "sklearn.impute._iterative._ImputerTriplet": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "sklearn.impute._iterative.namedtuple": {
  "data": {
   "shadows": "collections.namedtuple"
  },
  "type": "import"
 },
 "sklearn.impute._iterative.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.impute._iterative.stats": {
  "data": {
   "shadows": "scipy.stats"
  },
  "type": "import"
 },
 "sklearn.impute._iterative.time": {
  "data": {
   "shadows": "time.time"
  },
  "type": "import"
 },
 "sklearn.impute._iterative.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.impute._knn": {
  "data": {},
  "type": "module"
 },
 "sklearn.impute._knn.KNNImputer": {
  "data": {
   "lineno": 19
  },
  "type": "class"
 },
 "sklearn.impute._knn.KNNImputer.__init__": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "numpy.nan",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.impute._knn.KNNImputer._calc_impute": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "_get_weights",
    "numpy.arange",
    "numpy.argpartition",
    "numpy.isnan",
    "numpy.ma.array",
    "numpy.ma.average"
   ]
  },
  "type": "function"
 },
 "sklearn.impute._knn.KNNImputer.fit": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "ValueError",
    "_check_weights",
    "_get_mask",
    "callable",
    "is_scalar_nan",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.impute._knn.KNNImputer.transform": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "_get_mask",
    "check_is_fitted",
    "int",
    "is_scalar_nan",
    "numpy.all",
    "numpy.any",
    "numpy.arange",
    "numpy.flatnonzero",
    "numpy.logical_not",
    "numpy.zeros",
    "pairwise_distances_chunked",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.impute._knn.KNNImputer.transform.process_chunk": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "len",
    "min",
    "numpy.any",
    "numpy.flatnonzero",
    "numpy.isnan",
    "numpy.ma.array",
    "numpy.nonzero",
    "range"
   ]
  },
  "type": "function"
 },
 "sklearn.impute._knn.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.impute.tests": {
  "data": {},
  "type": "module"
 },
 "sklearn.impute.tests.test_base": {
  "data": {},
  "type": "module"
 },
 "sklearn.impute.tests.test_base.NoFitIndicatorImputer": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "sklearn.impute._base._BaseImputer"
   ]
  },
  "type": "class"
 },
 "sklearn.impute.tests.test_base.NoFitIndicatorImputer.fit": {
  "data": {
   "lineno": 17
  },
  "type": "function"
 },
 "sklearn.impute.tests.test_base.NoFitIndicatorImputer.transform": {
  "data": {
   "lineno": 20
  },
  "type": "function"
 },
 "sklearn.impute.tests.test_base.NoPrecomputedMaskFit": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "sklearn.impute._base._BaseImputer"
   ]
  },
  "type": "class"
 },
 "sklearn.impute.tests.test_base.NoPrecomputedMaskFit.fit": {
  "data": {
   "lineno": 35
  },
  "type": "function"
 },
 "sklearn.impute.tests.test_base.NoPrecomputedMaskFit.transform": {
  "data": {
   "lineno": 39
  },
  "type": "function"
 },
 "sklearn.impute.tests.test_base.NoPrecomputedMaskTransform": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "sklearn.impute._base._BaseImputer"
   ]
  },
  "type": "class"
 },
 "sklearn.impute.tests.test_base.NoPrecomputedMaskTransform.fit": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "numpy.nan",
    "sklearn.utils._mask._get_mask"
   ]
  },
  "type": "function"
 },
 "sklearn.impute.tests.test_base.NoPrecomputedMaskTransform.transform": {
  "data": {
   "lineno": 49
  },
  "type": "function"
 },
 "sklearn.impute.tests.test_base.NoTransformIndicatorImputer": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "sklearn.impute._base._BaseImputer"
   ]
  },
  "type": "class"
 },
 "sklearn.impute.tests.test_base.NoTransformIndicatorImputer.fit": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "numpy.nan",
    "sklearn.utils._mask._get_mask",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.impute.tests.test_base.NoTransformIndicatorImputer.transform": {
  "data": {
   "lineno": 30
  },
  "type": "function"
 },
 "sklearn.impute.tests.test_base._BaseImputer": {
  "data": {
   "shadows": "sklearn.impute._base._BaseImputer"
  },
  "type": "import"
 },
 "sklearn.impute.tests.test_base._get_mask": {
  "data": {
   "shadows": "sklearn.utils._mask._get_mask"
  },
  "type": "import"
 },
 "sklearn.impute.tests.test_base.data": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "numpy.nan",
    "numpy.random.randn",
    "sklearn.impute.tests.test_base.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.impute.tests.test_base.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.impute.tests.test_base.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.impute.tests.test_base.test_base_imputer_not_fit": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.impute.tests.test_base.NoFitIndicatorImputer",
    "sklearn.impute.tests.test_base.data",
    "sklearn.impute.tests.test_base.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.impute.tests.test_base.test_base_imputer_not_transform": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.impute.tests.test_base.NoTransformIndicatorImputer",
    "sklearn.impute.tests.test_base.data",
    "sklearn.impute.tests.test_base.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.impute.tests.test_base.test_base_no_precomputed_mask_fit": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.impute.tests.test_base.NoPrecomputedMaskFit",
    "sklearn.impute.tests.test_base.data",
    "sklearn.impute.tests.test_base.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.impute.tests.test_base.test_base_no_precomputed_mask_transform": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.impute.tests.test_base.NoPrecomputedMaskTransform",
    "sklearn.impute.tests.test_base.data",
    "sklearn.impute.tests.test_base.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.impute.tests.test_common": {
  "data": {
   "symbols_in_volume": [
    "sklearn.impute.IterativeImputer",
    "sklearn.impute.KNNImputer",
    "sklearn.impute.SimpleImputer"
   ]
  },
  "type": "module"
 },
 "sklearn.impute.tests.test_common.IMPUTERS": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "sklearn.impute.tests.test_common.IterativeImputer": {
  "data": {
   "shadows": "sklearn.impute.IterativeImputer"
  },
  "type": "import"
 },
 "sklearn.impute.tests.test_common.KNNImputer": {
  "data": {
   "shadows": "sklearn.impute.KNNImputer"
  },
  "type": "import"
 },
 "sklearn.impute.tests.test_common.SPARSE_IMPUTERS": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "sklearn.impute.tests.test_common.SimpleImputer": {
  "data": {
   "shadows": "sklearn.impute.SimpleImputer"
  },
  "type": "import"
 },
 "sklearn.impute.tests.test_common.assert_allclose": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_allclose"
  },
  "type": "import"
 },
 "sklearn.impute.tests.test_common.assert_allclose_dense_sparse": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_allclose_dense_sparse"
  },
  "type": "import"
 },
 "sklearn.impute.tests.test_common.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.impute.tests.test_common.enable_iterative_imputer": {
  "data": {
   "shadows": "sklearn.experimental.enable_iterative_imputer"
  },
  "type": "import"
 },
 "sklearn.impute.tests.test_common.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.impute.tests.test_common.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.impute.tests.test_common.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.impute.tests.test_common.test_imputation_missing_value_in_test_array": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "numpy.nan",
    "sklearn.impute.tests.test_common.IMPUTERS",
    "sklearn.impute.tests.test_common.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.impute.tests.test_common.test_imputers_add_indicator": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "sklearn.impute.tests.test_common.IMPUTERS",
    "sklearn.impute.tests.test_common.pytest",
    "sklearn.utils._testing.assert_allclose",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.impute.tests.test_common.test_imputers_add_indicator_sparse": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "scipy.sparse.csr_matrix",
    "sklearn.impute.tests.test_common.SPARSE_IMPUTERS",
    "sklearn.impute.tests.test_common.pytest",
    "sklearn.utils._testing.assert_allclose_dense_sparse",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.impute.tests.test_common.test_imputers_pandas_na_integer_array_support": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "sklearn.impute.tests.test_common.IMPUTERS",
    "sklearn.impute.tests.test_common.pytest",
    "sklearn.utils._testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "sklearn.impute.tests.test_impute": {
  "data": {},
  "type": "module"
 },
 "sklearn.impute.tests.test_impute.ARDRegression": {
  "data": {
   "shadows": "sklearn.linear_model.ARDRegression"
  },
  "type": "import"
 },
 "sklearn.impute.tests.test_impute.BayesianRidge": {
  "data": {
   "shadows": "sklearn.linear_model.BayesianRidge"
  },
  "type": "import"
 },
 "sklearn.impute.tests.test_impute.ConvergenceWarning": {
  "data": {
   "shadows": "sklearn.exceptions.ConvergenceWarning"
  },
  "type": "import"
 },
 "sklearn.impute.tests.test_impute.DummyRegressor": {
  "data": {
   "shadows": "sklearn.dummy.DummyRegressor"
  },
  "type": "import"
 },
 "sklearn.impute.tests.test_impute.GridSearchCV": {
  "data": {
   "shadows": "sklearn.model_selection.GridSearchCV"
  },
  "type": "import"
 },
 "sklearn.impute.tests.test_impute.IterativeImputer": {
  "data": {
   "shadows": "sklearn.impute.IterativeImputer"
  },
  "type": "import"
 },
 "sklearn.impute.tests.test_impute.MissingIndicator": {
  "data": {
   "shadows": "sklearn.impute.MissingIndicator"
  },
  "type": "import"
 },
 "sklearn.impute.tests.test_impute.Pipeline": {
  "data": {
   "shadows": "sklearn.pipeline.Pipeline"
  },
  "type": "import"
 },
 "sklearn.impute.tests.test_impute.RidgeCV": {
  "data": {
   "shadows": "sklearn.linear_model.RidgeCV"
  },
  "type": "import"
 },
 "sklearn.impute.tests.test_impute.SimpleImputer": {
  "data": {
   "shadows": "sklearn.impute.SimpleImputer"
  },
  "type": "import"
 },
 "sklearn.impute.tests.test_impute._check_statistics": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "assert_ae",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.issparse",
    "sklearn.impute.SimpleImputer",
    "sklearn.utils._testing.assert_array_almost_equal",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.impute.tests.test_impute._most_frequent": {
  "data": {
   "shadows": "sklearn.impute._base._most_frequent"
  },
  "type": "import"
 },
 "sklearn.impute.tests.test_impute._sparse_random_matrix": {
  "data": {
   "shadows": "sklearn.random_projection._sparse_random_matrix"
  },
  "type": "import"
 },
 "sklearn.impute.tests.test_impute.assert_allclose": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_allclose"
  },
  "type": "import"
 },
 "sklearn.impute.tests.test_impute.assert_allclose_dense_sparse": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_allclose_dense_sparse"
  },
  "type": "import"
 },
 "sklearn.impute.tests.test_impute.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.impute.tests.test_impute.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.impute.tests.test_impute.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sklearn.impute.tests.test_impute.enable_iterative_imputer": {
  "data": {
   "shadows": "sklearn.experimental.enable_iterative_imputer"
  },
  "type": "import"
 },
 "sklearn.impute.tests.test_impute.io": {
  "data": {
   "shadows": "io"
  },
  "type": "import"
 },
 "sklearn.impute.tests.test_impute.kstest": {
  "data": {
   "shadows": "scipy.stats.kstest"
  },
  "type": "import"
 },
 "sklearn.impute.tests.test_impute.load_diabetes": {
  "data": {
   "shadows": "sklearn.datasets.load_diabetes"
  },
  "type": "import"
 },
 "sklearn.impute.tests.test_impute.make_union": {
  "data": {
   "shadows": "sklearn.pipeline.make_union"
  },
  "type": "import"
 },
 "sklearn.impute.tests.test_impute.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.impute.tests.test_impute.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.impute.tests.test_impute.safe_mean": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "hasattr",
    "len",
    "numpy.mean",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "sklearn.impute.tests.test_impute.safe_median": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "hasattr",
    "len",
    "numpy.median",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "sklearn.impute.tests.test_impute.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.impute.tests.test_impute.test_imputation_const_mostf_error_invalid_types": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "numpy.dtype",
    "numpy.nan",
    "sklearn.impute.SimpleImputer",
    "sklearn.impute.tests.test_impute.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.impute.tests.test_impute.test_imputation_constant_error_invalid_type": {
  "data": {
   "lineno": 355,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "numpy.full",
    "numpy.nan",
    "sklearn.impute.SimpleImputer",
    "sklearn.impute.tests.test_impute.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.impute.tests.test_impute.test_imputation_constant_float": {
  "data": {
   "lineno": 391,
   "symbols_in_volume": [
    "array_constructor",
    "numpy.array",
    "numpy.asarray",
    "numpy.nan",
    "scipy.sparse.csr_matrix",
    "sklearn.impute.SimpleImputer",
    "sklearn.impute.tests.test_impute.pytest",
    "sklearn.utils._testing.assert_allclose_dense_sparse"
   ]
  },
  "type": "function"
 },
 "sklearn.impute.tests.test_impute.test_imputation_constant_integer": {
  "data": {
   "lineno": 368,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.impute.SimpleImputer",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.impute.tests.test_impute.test_imputation_constant_object": {
  "data": {
   "lineno": 418,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "object",
    "sklearn.impute.SimpleImputer",
    "sklearn.impute.tests.test_impute.pytest",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.impute.tests.test_impute.test_imputation_constant_pandas": {
  "data": {
   "lineno": 442,
   "symbols_in_volume": [
    "numpy.array",
    "object",
    "sklearn.impute.SimpleImputer",
    "sklearn.impute.tests.test_impute.io",
    "sklearn.impute.tests.test_impute.pytest",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.impute.tests.test_impute.test_imputation_copy": {
  "data": {
   "lineno": 499,
   "symbols_in_volume": [
    "numpy.all",
    "sklearn.impute.SimpleImputer",
    "sklearn.random_projection._sparse_random_matrix",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.impute.tests.test_impute.test_imputation_deletion_warning": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "UserWarning",
    "numpy.nan",
    "numpy.ones",
    "sklearn.impute.SimpleImputer",
    "sklearn.impute.tests.test_impute.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.impute.tests.test_impute.test_imputation_error_invalid_strategy": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "ValueError",
    "numpy.nan",
    "numpy.ones",
    "sklearn.impute.SimpleImputer",
    "sklearn.impute.tests.test_impute.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.impute.tests.test_impute.test_imputation_error_sparse_0": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "ValueError",
    "numpy.ones",
    "scipy.sparse.csc_matrix",
    "sklearn.impute.SimpleImputer",
    "sklearn.impute.tests.test_impute.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.impute.tests.test_impute.test_imputation_mean_median": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "len",
    "max",
    "numpy.arange",
    "numpy.empty",
    "numpy.hstack",
    "numpy.isnan",
    "numpy.nan",
    "numpy.random.RandomState",
    "numpy.repeat",
    "numpy.zeros",
    "range",
    "sklearn.impute.tests.test_impute._check_statistics",
    "sklearn.impute.tests.test_impute.safe_mean",
    "sklearn.impute.tests.test_impute.safe_median",
    "true_value_fun"
   ]
  },
  "type": "function"
 },
 "sklearn.impute.tests.test_impute.test_imputation_mean_median_error_invalid_type": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "object",
    "sklearn.impute.SimpleImputer",
    "sklearn.impute.tests.test_impute.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.impute.tests.test_impute.test_imputation_mean_median_error_invalid_type_list_pandas": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.impute.SimpleImputer",
    "sklearn.impute.tests.test_impute.pytest",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.impute.tests.test_impute.test_imputation_median_special_cases": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "sklearn.impute.tests.test_impute._check_statistics"
   ]
  },
  "type": "function"
 },
 "sklearn.impute.tests.test_impute.test_imputation_most_frequent": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "sklearn.impute.tests.test_impute._check_statistics"
   ]
  },
  "type": "function"
 },
 "sklearn.impute.tests.test_impute.test_imputation_most_frequent_objects": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "object",
    "sklearn.impute.SimpleImputer",
    "sklearn.impute.tests.test_impute.pytest",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.impute.tests.test_impute.test_imputation_most_frequent_pandas": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": [
    "numpy.array",
    "object",
    "sklearn.impute.SimpleImputer",
    "sklearn.impute.tests.test_impute.io",
    "sklearn.impute.tests.test_impute.pytest",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.impute.tests.test_impute.test_imputation_order": {
  "data": {
   "lineno": 1391,
   "symbols_in_volume": [
    "numpy.nan",
    "numpy.random.RandomState",
    "sklearn.exceptions.ConvergenceWarning",
    "sklearn.impute.IterativeImputer",
    "sklearn.impute.tests.test_impute.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.impute.tests.test_impute.test_imputation_pipeline_grid_search": {
  "data": {
   "lineno": 480,
   "symbols_in_volume": [
    "sklearn.impute.SimpleImputer",
    "sklearn.model_selection.GridSearchCV",
    "sklearn.pipeline.Pipeline",
    "sklearn.random_projection._sparse_random_matrix",
    "sklearn.tree.DecisionTreeRegressor"
   ]
  },
  "type": "function"
 },
 "sklearn.impute.tests.test_impute.test_imputation_shape": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "numpy.nan",
    "numpy.random.randn",
    "scipy.sparse.csr_matrix",
    "sklearn.impute.IterativeImputer",
    "sklearn.impute.SimpleImputer",
    "sklearn.impute.tests.test_impute.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.impute.tests.test_impute.test_imputer_without_indicator": {
  "data": {
   "lineno": 1332,
   "symbols_in_volume": [
    "imputer_constructor",
    "numpy.array",
    "sklearn.impute.IterativeImputer",
    "sklearn.impute.SimpleImputer",
    "sklearn.impute.tests.test_impute.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.impute.tests.test_impute.test_inconsistent_dtype_X_missing_values": {
  "data": {
   "lineno": 1285,
   "symbols_in_volume": [
    "ValueError",
    "imputer_constructor",
    "numpy.nan",
    "numpy.random.RandomState",
    "sklearn.impute.IterativeImputer",
    "sklearn.impute.SimpleImputer",
    "sklearn.impute.tests.test_impute.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.impute.tests.test_impute.test_iterative_imputer_additive_matrix": {
  "data": {
   "lineno": 874,
   "symbols_in_volume": [
    "numpy.nan",
    "numpy.random.RandomState",
    "numpy.zeros",
    "range",
    "sklearn.impute.IterativeImputer",
    "sklearn.utils._testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "sklearn.impute.tests.test_impute.test_iterative_imputer_all_missing": {
  "data": {
   "lineno": 585,
   "symbols_in_volume": [
    "numpy.zeros",
    "sklearn.impute.IterativeImputer",
    "sklearn.utils._testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "sklearn.impute.tests.test_impute.test_iterative_imputer_catch_min_max_error": {
  "data": {
   "lineno": 1001,
   "symbols_in_volume": [
    "ValueError",
    "numpy.inf",
    "numpy.random.random",
    "sklearn.impute.IterativeImputer",
    "sklearn.impute.tests.test_impute.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.impute.tests.test_impute.test_iterative_imputer_catch_warning": {
  "data": {
   "lineno": 948,
   "symbols_in_volume": [
    "int",
    "numpy.any",
    "numpy.arange",
    "numpy.isnan",
    "numpy.nan",
    "numpy.random.RandomState",
    "range",
    "sklearn.datasets.load_diabetes",
    "sklearn.impute.IterativeImputer",
    "sklearn.impute.tests.test_impute.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.impute.tests.test_impute.test_iterative_imputer_clip": {
  "data": {
   "lineno": 663,
   "symbols_in_volume": [
    "numpy.max",
    "numpy.min",
    "numpy.random.RandomState",
    "sklearn.impute.IterativeImputer",
    "sklearn.random_projection._sparse_random_matrix",
    "sklearn.utils._testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "sklearn.impute.tests.test_impute.test_iterative_imputer_clip_truncnorm": {
  "data": {
   "lineno": 682,
   "symbols_in_volume": [
    "numpy.max",
    "numpy.min",
    "numpy.random.RandomState",
    "sklearn.impute.IterativeImputer",
    "sklearn.random_projection._sparse_random_matrix",
    "sklearn.utils._testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "sklearn.impute.tests.test_impute.test_iterative_imputer_dont_set_random_state": {
  "data": {
   "lineno": 1072,
   "symbols_in_volume": [
    "ZeroEstimator",
    "numpy.random.RandomState",
    "numpy.zeros",
    "sklearn.impute.IterativeImputer",
    "sklearn.impute.tests.test_impute.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.impute.tests.test_impute.test_iterative_imputer_dont_set_random_state.ZeroEstimator": {
  "data": {
   "lineno": 1081
  },
  "type": "class"
 },
 "sklearn.impute.tests.test_impute.test_iterative_imputer_dont_set_random_state.ZeroEstimator.__init__": {
  "data": {
   "lineno": 1082
  },
  "type": "function"
 },
 "sklearn.impute.tests.test_impute.test_iterative_imputer_dont_set_random_state.ZeroEstimator.fit": {
  "data": {
   "lineno": 1085
  },
  "type": "function"
 },
 "sklearn.impute.tests.test_impute.test_iterative_imputer_dont_set_random_state.ZeroEstimator.predict": {
  "data": {
   "lineno": 1088,
   "symbols_in_volume": [
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "sklearn.impute.tests.test_impute.test_iterative_imputer_early_stopping": {
  "data": {
   "lineno": 913,
   "symbols_in_volume": [
    "len",
    "numpy.dot",
    "numpy.nan",
    "numpy.random.RandomState",
    "sklearn.impute.IterativeImputer",
    "sklearn.utils._testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "sklearn.impute.tests.test_impute.test_iterative_imputer_error_param": {
  "data": {
   "lineno": 902,
   "symbols_in_volume": [
    "ValueError",
    "numpy.zeros",
    "sklearn.impute.IterativeImputer",
    "sklearn.impute.tests.test_impute.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.impute.tests.test_impute.test_iterative_imputer_estimators": {
  "data": {
   "lineno": 634,
   "symbols_in_volume": [
    "id",
    "isinstance",
    "len",
    "numpy.random.RandomState",
    "set",
    "sklearn.dummy.DummyRegressor",
    "sklearn.impute.IterativeImputer",
    "sklearn.impute.tests.test_impute.pytest",
    "sklearn.linear_model.ARDRegression",
    "sklearn.linear_model.BayesianRidge",
    "sklearn.linear_model.RidgeCV",
    "sklearn.random_projection._sparse_random_matrix",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.impute.tests.test_impute.test_iterative_imputer_imputation_order": {
  "data": {
   "lineno": 594,
   "symbols_in_volume": [
    "len",
    "numpy.all",
    "numpy.arange",
    "numpy.random.RandomState",
    "sklearn.impute.IterativeImputer",
    "sklearn.impute.tests.test_impute.pytest",
    "sklearn.random_projection._sparse_random_matrix"
   ]
  },
  "type": "function"
 },
 "sklearn.impute.tests.test_impute.test_iterative_imputer_min_max_array_like": {
  "data": {
   "lineno": 974,
   "symbols_in_volume": [
    "isinstance",
    "numpy.array",
    "numpy.inf",
    "numpy.ndarray",
    "numpy.random.RandomState",
    "sklearn.impute.IterativeImputer",
    "sklearn.impute.tests.test_impute.pytest",
    "sklearn.utils._testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "sklearn.impute.tests.test_impute.test_iterative_imputer_min_max_array_like_imputation": {
  "data": {
   "lineno": 1015,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.inf",
    "numpy.nan",
    "sklearn.impute.IterativeImputer",
    "sklearn.impute.tests.test_impute.pytest",
    "sklearn.utils._testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "sklearn.impute.tests.test_impute.test_iterative_imputer_missing_at_transform": {
  "data": {
   "lineno": 739,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.impute.IterativeImputer",
    "sklearn.impute.SimpleImputer",
    "sklearn.impute.tests.test_impute.pytest",
    "sklearn.utils._testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "sklearn.impute.tests.test_impute.test_iterative_imputer_no_missing": {
  "data": {
   "lineno": 814,
   "symbols_in_volume": [
    "numpy.nan",
    "numpy.random.RandomState",
    "sklearn.impute.IterativeImputer",
    "sklearn.utils._testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "sklearn.impute.tests.test_impute.test_iterative_imputer_one_feature": {
  "data": {
   "lineno": 468,
   "symbols_in_volume": [
    "numpy.nan",
    "sklearn.impute.IterativeImputer",
    "sklearn.impute.tests.test_impute.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.impute.tests.test_impute.test_iterative_imputer_rank_one": {
  "data": {
   "lineno": 828,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.nan",
    "numpy.random.RandomState",
    "sklearn.impute.IterativeImputer",
    "sklearn.utils._testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "sklearn.impute.tests.test_impute.test_iterative_imputer_skip_non_missing": {
  "data": {
   "lineno": 1042,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.mean",
    "numpy.nan",
    "numpy.random.RandomState",
    "sklearn.impute.IterativeImputer",
    "sklearn.impute.tests.test_impute.pytest",
    "sklearn.utils._testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "sklearn.impute.tests.test_impute.test_iterative_imputer_transform_recovery": {
  "data": {
   "lineno": 845,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.nan",
    "numpy.random.RandomState",
    "sklearn.impute.IterativeImputer",
    "sklearn.impute.tests.test_impute.pytest",
    "sklearn.utils._testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "sklearn.impute.tests.test_impute.test_iterative_imputer_transform_stochasticity": {
  "data": {
   "lineno": 766,
   "symbols_in_volume": [
    "numpy.mean",
    "numpy.random.RandomState",
    "sklearn.impute.IterativeImputer",
    "sklearn.impute.tests.test_impute.pytest",
    "sklearn.random_projection._sparse_random_matrix",
    "sklearn.utils._testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "sklearn.impute.tests.test_impute.test_iterative_imputer_truncated_normal_posterior": {
  "data": {
   "lineno": 704,
   "symbols_in_volume": [
    "all",
    "numpy.array",
    "numpy.nan",
    "numpy.random.RandomState",
    "range",
    "scipy.stats.kstest",
    "sklearn.impute.IterativeImputer"
   ]
  },
  "type": "function"
 },
 "sklearn.impute.tests.test_impute.test_iterative_imputer_verbose": {
  "data": {
   "lineno": 571,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.impute.IterativeImputer",
    "sklearn.random_projection._sparse_random_matrix"
   ]
  },
  "type": "function"
 },
 "sklearn.impute.tests.test_impute.test_iterative_imputer_zero_iters": {
  "data": {
   "lineno": 545,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.nan",
    "numpy.random.RandomState",
    "sklearn.impute.IterativeImputer",
    "sklearn.random_projection._sparse_random_matrix",
    "sklearn.utils._testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "sklearn.impute.tests.test_impute.test_missing_indicator_error": {
  "data": {
   "lineno": 1098,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "sklearn.impute.MissingIndicator",
    "sklearn.impute.tests.test_impute.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.impute.tests.test_impute.test_missing_indicator_new": {
  "data": {
   "lineno": 1120,
   "symbols_in_volume": [
    "arr_type",
    "bool",
    "isinstance",
    "numpy.array",
    "numpy.float64",
    "numpy.int32",
    "numpy.nan",
    "numpy.ndarray",
    "scipy.sparse.bsr_matrix",
    "scipy.sparse.coo_matrix",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.lil_matrix",
    "sklearn.impute.MissingIndicator",
    "sklearn.impute.tests.test_impute.pytest",
    "sklearn.utils._testing.assert_allclose",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.impute.tests.test_impute.test_missing_indicator_no_missing": {
  "data": {
   "lineno": 1307,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.impute.MissingIndicator"
   ]
  },
  "type": "function"
 },
 "sklearn.impute.tests.test_impute.test_missing_indicator_raise_on_sparse_with_missing_0": {
  "data": {
   "lineno": 1185,
   "symbols_in_volume": [
    "ValueError",
    "arr_type",
    "numpy.array",
    "scipy.sparse.bsr_matrix",
    "scipy.sparse.coo_matrix",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.lil_matrix",
    "sklearn.impute.MissingIndicator",
    "sklearn.impute.tests.test_impute.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.impute.tests.test_impute.test_missing_indicator_sparse_no_explicit_zeros": {
  "data": {
   "lineno": 1319,
   "symbols_in_volume": [
    "scipy.sparse.csr_matrix",
    "sklearn.impute.MissingIndicator"
   ]
  },
  "type": "function"
 },
 "sklearn.impute.tests.test_impute.test_missing_indicator_sparse_param": {
  "data": {
   "lineno": 1212,
   "symbols_in_volume": [
    "arr_type",
    "isinstance",
    "numpy.array",
    "numpy.float64",
    "numpy.nan",
    "numpy.ndarray",
    "scipy.sparse.coo_matrix",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.issparse",
    "scipy.sparse.lil_matrix",
    "sklearn.impute.MissingIndicator",
    "sklearn.impute.tests.test_impute.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.impute.tests.test_impute.test_missing_indicator_string": {
  "data": {
   "lineno": 1254,
   "symbols_in_volume": [
    "numpy.array",
    "object",
    "sklearn.impute.MissingIndicator",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.impute.tests.test_impute.test_missing_indicator_with_imputer": {
  "data": {
   "lineno": 1262,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "object",
    "sklearn.impute.MissingIndicator",
    "sklearn.impute.SimpleImputer",
    "sklearn.impute.tests.test_impute.pytest",
    "sklearn.pipeline.make_union",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.impute.tests.test_impute.test_most_frequent": {
  "data": {
   "lineno": 1480,
   "symbols_in_volume": [
    "int",
    "numpy.array",
    "object",
    "sklearn.impute._base._most_frequent",
    "sklearn.impute.tests.test_impute.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.impute.tests.test_impute.test_simple_imputation_add_indicator_sparse_matrix": {
  "data": {
   "lineno": 1343,
   "symbols_in_volume": [
    "arr_type",
    "numpy.array",
    "numpy.nan",
    "scipy.sparse.bsr_matrix",
    "scipy.sparse.coo_matrix",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.issparse",
    "scipy.sparse.lil_matrix",
    "sklearn.impute.SimpleImputer",
    "sklearn.impute.tests.test_impute.pytest",
    "sklearn.utils._testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "sklearn.impute.tests.test_impute.test_simple_imputation_inverse_transform": {
  "data": {
   "lineno": 1415,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "sklearn.impute.SimpleImputer",
    "sklearn.impute.tests.test_impute.pytest",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.impute.tests.test_impute.test_simple_imputation_inverse_transform_exceptions": {
  "data": {
   "lineno": 1464,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "numpy.nan",
    "sklearn.impute.SimpleImputer",
    "sklearn.impute.tests.test_impute.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.impute.tests.test_impute.test_simple_imputation_string_list": {
  "data": {
   "lineno": 1372,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "object",
    "sklearn.impute.SimpleImputer",
    "sklearn.impute.tests.test_impute.pytest",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.impute.tests.test_impute.tree": {
  "data": {
   "shadows": "sklearn.tree"
  },
  "type": "import"
 },
 "sklearn.impute.tests.test_knn": {
  "data": {},
  "type": "module"
 },
 "sklearn.impute.tests.test_knn.KNNImputer": {
  "data": {
   "shadows": "sklearn.impute.KNNImputer"
  },
  "type": "import"
 },
 "sklearn.impute.tests.test_knn.KNeighborsRegressor": {
  "data": {
   "shadows": "sklearn.neighbors.KNeighborsRegressor"
  },
  "type": "import"
 },
 "sklearn.impute.tests.test_knn.assert_allclose": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_allclose"
  },
  "type": "import"
 },
 "sklearn.impute.tests.test_knn.config_context": {
  "data": {
   "shadows": "sklearn.config_context"
  },
  "type": "import"
 },
 "sklearn.impute.tests.test_knn.nan_euclidean_distances": {
  "data": {
   "shadows": "sklearn.metrics.pairwise.nan_euclidean_distances"
  },
  "type": "import"
 },
 "sklearn.impute.tests.test_knn.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.impute.tests.test_knn.pairwise_distances": {
  "data": {
   "shadows": "sklearn.metrics.pairwise.pairwise_distances"
  },
  "type": "import"
 },
 "sklearn.impute.tests.test_knn.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.impute.tests.test_knn.test_knn_imputer_all_samples_are_neighbors": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "sklearn.impute.KNNImputer",
    "sklearn.impute.tests.test_knn.pytest",
    "sklearn.utils._testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "sklearn.impute.tests.test_knn.test_knn_imputer_callable_metric": {
  "data": {
   "lineno": 488,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "sklearn.impute.KNNImputer",
    "sklearn.utils._testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "sklearn.impute.tests.test_knn.test_knn_imputer_callable_metric.custom_callable": {
  "data": {
   "lineno": 491,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.isnan",
    "numpy.ma.array",
    "numpy.nan",
    "numpy.nansum"
   ]
  },
  "type": "function"
 },
 "sklearn.impute.tests.test_knn.test_knn_imputer_default_with_invalid_input": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "numpy.inf",
    "numpy.nan",
    "sklearn.impute.KNNImputer",
    "sklearn.impute.tests.test_knn.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.impute.tests.test_knn.test_knn_imputer_distance_weighted_not_enough_neighbors": {
  "data": {
   "lineno": 598,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.average",
    "numpy.nan",
    "sklearn.config_context",
    "sklearn.impute.KNNImputer",
    "sklearn.impute.tests.test_knn.pytest",
    "sklearn.metrics.pairwise.pairwise_distances",
    "sklearn.utils._testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "sklearn.impute.tests.test_knn.test_knn_imputer_drops_all_nan_features": {
  "data": {
   "lineno": 580,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "sklearn.impute.KNNImputer",
    "sklearn.impute.tests.test_knn.pytest",
    "sklearn.utils._testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "sklearn.impute.tests.test_knn.test_knn_imputer_not_enough_valid_distances": {
  "data": {
   "lineno": 557,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "sklearn.impute.KNNImputer",
    "sklearn.impute.tests.test_knn.pytest",
    "sklearn.utils._testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "sklearn.impute.tests.test_knn.test_knn_imputer_one_n_neighbors": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "sklearn.impute.KNNImputer",
    "sklearn.impute.tests.test_knn.pytest",
    "sklearn.utils._testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "sklearn.impute.tests.test_knn.test_knn_imputer_removes_all_na_features": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "numpy.isnan",
    "numpy.nan",
    "sklearn.impute.KNNImputer",
    "sklearn.impute.tests.test_knn.pytest",
    "sklearn.utils._testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "sklearn.impute.tests.test_knn.test_knn_imputer_shape": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "numpy.nan",
    "numpy.random.rand",
    "range",
    "sklearn.impute.KNNImputer",
    "sklearn.impute.tests.test_knn.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.impute.tests.test_knn.test_knn_imputer_verify": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "sklearn.impute.KNNImputer",
    "sklearn.impute.tests.test_knn.pytest",
    "sklearn.utils._testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "sklearn.impute.tests.test_knn.test_knn_imputer_weight_distance": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.average",
    "numpy.ma.average",
    "numpy.ma.masked_invalid",
    "numpy.nan",
    "numpy.sqrt",
    "sklearn.impute.KNNImputer",
    "sklearn.impute.tests.test_knn.pytest",
    "sklearn.metrics.pairwise.nan_euclidean_distances",
    "sklearn.metrics.pairwise.pairwise_distances",
    "sklearn.neighbors.KNeighborsRegressor",
    "sklearn.utils._testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "sklearn.impute.tests.test_knn.test_knn_imputer_weight_uniform": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "sklearn.impute.KNNImputer",
    "sklearn.impute.tests.test_knn.pytest",
    "sklearn.utils._testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "sklearn.impute.tests.test_knn.test_knn_imputer_weight_uniform.no_weight": {
  "data": {
   "lineno": 318
  },
  "type": "function"
 },
 "sklearn.impute.tests.test_knn.test_knn_imputer_weight_uniform.uniform_weight": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": [
    "numpy.ones_like"
   ]
  },
  "type": "function"
 },
 "sklearn.impute.tests.test_knn.test_knn_imputer_with_simple_example": {
  "data": {
   "lineno": 517,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.mean",
    "numpy.nan",
    "sklearn.config_context",
    "sklearn.impute.KNNImputer",
    "sklearn.impute.tests.test_knn.pytest",
    "sklearn.utils._testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "sklearn.impute.tests.test_knn.test_knn_imputer_zero_nan_imputes_the_same": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "sklearn.impute.KNNImputer",
    "sklearn.impute.tests.test_knn.pytest",
    "sklearn.utils._testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "sklearn.impute.tests.test_knn.test_knn_tags": {
  "data": {
   "lineno": 638,
   "symbols_in_volume": [
    "numpy.nan",
    "sklearn.impute.KNNImputer",
    "sklearn.impute.tests.test_knn.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.impute.typing": {
  "data": {
   "shadows": "typing"
  },
  "type": "import"
 },
 "sklearn.inspection": {
  "data": {},
  "type": "module"
 },
 "sklearn.inspection.__all__": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "sklearn.inspection._partial_dependence": {
  "data": {},
  "type": "module"
 },
 "sklearn.inspection._partial_dependence.BaseHistGradientBoosting": {
  "data": {
   "shadows": "sklearn.ensemble._hist_gradient_boosting.gradient_boosting.BaseHistGradientBoosting"
  },
  "type": "import"
 },
 "sklearn.inspection._partial_dependence.Iterable": {
  "data": {
   "shadows": "collections.abc.Iterable"
  },
  "type": "import"
 },
 "sklearn.inspection._partial_dependence.__all__": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "sklearn.inspection._partial_dependence._grid_from_X": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "ValueError",
    "_safe_indexing",
    "all",
    "cartesian",
    "collections.abc.Iterable",
    "isinstance",
    "len",
    "numpy.allclose",
    "numpy.linspace",
    "numpy.unique",
    "range",
    "scipy.stats.mstats.mquantiles"
   ]
  },
  "type": "function"
 },
 "sklearn.inspection._partial_dependence._partial_dependence_brute": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "ValueError",
    "enumerate",
    "getattr",
    "hasattr",
    "is_classifier",
    "is_regressor",
    "numpy.array",
    "numpy.mean",
    "prediction_method"
   ]
  },
  "type": "function"
 },
 "sklearn.inspection._partial_dependence._partial_dependence_recursion": {
  "data": {
   "lineno": 107
  },
  "type": "function"
 },
 "sklearn.inspection._partial_dependence.mquantiles": {
  "data": {
   "shadows": "scipy.stats.mstats.mquantiles"
  },
  "type": "import"
 },
 "sklearn.inspection._partial_dependence.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.inspection._partial_dependence.partial_dependence": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "Bunch",
    "FutureWarning",
    "ValueError",
    "_determine_key_type",
    "_get_column_indices",
    "_safe_indexing",
    "check_array",
    "check_is_fitted",
    "hasattr",
    "is_classifier",
    "is_regressor",
    "isinstance",
    "numpy.any",
    "numpy.asarray",
    "numpy.int32",
    "numpy.less",
    "numpy.ndarray",
    "object",
    "scipy.sparse.issparse",
    "sklearn.ensemble._hist_gradient_boosting.gradient_boosting.BaseHistGradientBoosting",
    "sklearn.inspection._partial_dependence._grid_from_X",
    "sklearn.inspection._partial_dependence._partial_dependence_brute",
    "sklearn.inspection._partial_dependence._partial_dependence_recursion",
    "sklearn.inspection._partial_dependence.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.inspection._partial_dependence.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.inspection._partial_dependence.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.inspection._permutation_importance": {
  "data": {},
  "type": "module"
 },
 "sklearn.inspection._permutation_importance.Parallel": {
  "data": {
   "shadows": "joblib.Parallel"
  },
  "type": "import"
 },
 "sklearn.inspection._permutation_importance._calculate_permutation_scores": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "check_random_state",
    "hasattr",
    "numpy.arange",
    "numpy.zeros",
    "range",
    "scorer",
    "sklearn.inspection._permutation_importance._weights_scorer"
   ]
  },
  "type": "function"
 },
 "sklearn.inspection._permutation_importance._weights_scorer": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "scorer"
   ]
  },
  "type": "function"
 },
 "sklearn.inspection._permutation_importance.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.inspection._permutation_importance.permutation_importance": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "Bunch",
    "check_array",
    "check_random_state",
    "check_scoring",
    "delayed",
    "hasattr",
    "joblib.Parallel",
    "numpy.array",
    "numpy.iinfo",
    "numpy.int32",
    "numpy.mean",
    "numpy.std",
    "range",
    "scorer",
    "sklearn.inspection._permutation_importance._calculate_permutation_scores",
    "sklearn.inspection._permutation_importance._weights_scorer"
   ]
  },
  "type": "function"
 },
 "sklearn.inspection._plot": {
  "data": {},
  "type": "module"
 },
 "sklearn.inspection._plot.partial_dependence": {
  "data": {},
  "type": "module"
 },
 "sklearn.inspection._plot.partial_dependence.GridSpecFromSubplotSpec": {
  "data": {
   "shadows": "matplotlib.gridspec.GridSpecFromSubplotSpec"
  },
  "type": "import"
 },
 "sklearn.inspection._plot.partial_dependence.Parallel": {
  "data": {
   "shadows": "joblib.Parallel"
  },
  "type": "import"
 },
 "sklearn.inspection._plot.partial_dependence.PartialDependenceDisplay": {
  "data": {
   "lineno": 406
  },
  "type": "class"
 },
 "sklearn.inspection._plot.partial_dependence.PartialDependenceDisplay.__init__": {
  "data": {
   "lineno": 539
  },
  "type": "function"
 },
 "sklearn.inspection._plot.partial_dependence.PartialDependenceDisplay._get_sample_count": {
  "data": {
   "lineno": 563,
   "symbols_in_volume": [
    "isinstance",
    "math.ceil",
    "sklearn.inspection._plot.partial_dependence.numbers"
   ]
  },
  "type": "function"
 },
 "sklearn.inspection._plot.partial_dependence.PartialDependenceDisplay._plot_average_dependence": {
  "data": {
   "lineno": 615,
   "symbols_in_volume": [
    "numpy.unravel_index"
   ]
  },
  "type": "function"
 },
 "sklearn.inspection._plot.partial_dependence.PartialDependenceDisplay._plot_ice_lines": {
  "data": {
   "lineno": 573,
   "symbols_in_volume": [
    "check_random_state",
    "enumerate",
    "numpy.unravel_index"
   ]
  },
  "type": "function"
 },
 "sklearn.inspection._plot.partial_dependence.PartialDependenceDisplay._plot_one_way_partial_dependence": {
  "data": {
   "lineno": 647,
   "symbols_in_volume": [
    "matplotlib.transforms.blended_transform_factory",
    "numpy.unravel_index"
   ]
  },
  "type": "function"
 },
 "sklearn.inspection._plot.partial_dependence.PartialDependenceDisplay._plot_two_way_partial_dependence": {
  "data": {
   "lineno": 747,
   "symbols_in_volume": [
    "matplotlib.transforms.blended_transform_factory",
    "numpy.meshgrid",
    "numpy.unravel_index"
   ]
  },
  "type": "function"
 },
 "sklearn.inspection._plot.partial_dependence.PartialDependenceDisplay.plot": {
  "data": {
   "lineno": 820,
   "symbols_in_volume": [
    "ValueError",
    "_deprecate_positional_args",
    "check_matplotlib_support",
    "enumerate",
    "float",
    "int",
    "isinstance",
    "len",
    "matplotlib.gridspec.GridSpecFromSubplotSpec",
    "matplotlib.pyplot.Axes",
    "matplotlib.pyplot.subplots",
    "min",
    "numpy.asarray",
    "numpy.ceil",
    "numpy.empty",
    "numpy.empty_like",
    "numpy.linspace",
    "object",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.inspection._plot.partial_dependence.ceil": {
  "data": {
   "shadows": "math.ceil"
  },
  "type": "import"
 },
 "sklearn.inspection._plot.partial_dependence.chain": {
  "data": {
   "shadows": "itertools.chain"
  },
  "type": "import"
 },
 "sklearn.inspection._plot.partial_dependence.mquantiles": {
  "data": {
   "shadows": "scipy.stats.mstats.mquantiles"
  },
  "type": "import"
 },
 "sklearn.inspection._plot.partial_dependence.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.inspection._plot.partial_dependence.numbers": {
  "data": {
   "shadows": "numbers"
  },
  "type": "import"
 },
 "sklearn.inspection._plot.partial_dependence.plot_partial_dependence": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "_safe_indexing",
    "check_array",
    "check_matplotlib_support",
    "convert_feature",
    "delayed",
    "hasattr",
    "is_regressor",
    "isinstance",
    "itertools.chain.from_iterable",
    "joblib.Parallel",
    "len",
    "matplotlib.pyplot.Axes",
    "max",
    "min",
    "numpy.arange",
    "numpy.asarray",
    "numpy.searchsorted",
    "numpy.size",
    "object",
    "range",
    "scipy.sparse.issparse",
    "scipy.stats.mstats.mquantiles",
    "set",
    "sklearn.inspection._plot.partial_dependence.PartialDependenceDisplay",
    "sklearn.inspection._plot.partial_dependence.numbers",
    "str",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sklearn.inspection._plot.partial_dependence.plot_partial_dependence.convert_feature": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.inspection._plot.partial_dependence.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "sklearn.inspection._plot.partial_dependence.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.inspection._plot.partial_dependence.transforms": {
  "data": {
   "shadows": "matplotlib.transforms"
  },
  "type": "import"
 },
 "sklearn.inspection._plot.tests": {
  "data": {},
  "type": "module"
 },
 "sklearn.inspection._plot.tests.test_plot_partial_dependence": {
  "data": {
   "symbols_in_volume": [
    "sklearn.datasets.make_classification",
    "sklearn.datasets.make_regression",
    "sklearn.inspection._plot.tests.test_plot_partial_dependence.pytest"
   ]
  },
  "type": "module"
 },
 "sklearn.inspection._plot.tests.test_plot_partial_dependence.GradientBoostingClassifier": {
  "data": {
   "shadows": "sklearn.ensemble.GradientBoostingClassifier"
  },
  "type": "import"
 },
 "sklearn.inspection._plot.tests.test_plot_partial_dependence.GradientBoostingRegressor": {
  "data": {
   "shadows": "sklearn.ensemble.GradientBoostingRegressor"
  },
  "type": "import"
 },
 "sklearn.inspection._plot.tests.test_plot_partial_dependence.LinearRegression": {
  "data": {
   "shadows": "sklearn.linear_model.LinearRegression"
  },
  "type": "import"
 },
 "sklearn.inspection._plot.tests.test_plot_partial_dependence._convert_container": {
  "data": {
   "shadows": "sklearn.utils._testing._convert_container"
  },
  "type": "import"
 },
 "sklearn.inspection._plot.tests.test_plot_partial_dependence.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "sklearn.inspection._plot.tests.test_plot_partial_dependence.clf_diabetes": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "sklearn.ensemble.GradientBoostingRegressor",
    "sklearn.inspection._plot.tests.test_plot_partial_dependence.diabetes",
    "sklearn.inspection._plot.tests.test_plot_partial_dependence.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.inspection._plot.tests.test_plot_partial_dependence.diabetes": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "sklearn.datasets.load_diabetes",
    "sklearn.inspection._plot.tests.test_plot_partial_dependence.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.inspection._plot.tests.test_plot_partial_dependence.dummy_classification_data": {
  "data": {
   "lineno": 442
  },
  "type": "constant"
 },
 "sklearn.inspection._plot.tests.test_plot_partial_dependence.load_diabetes": {
  "data": {
   "shadows": "sklearn.datasets.load_diabetes"
  },
  "type": "import"
 },
 "sklearn.inspection._plot.tests.test_plot_partial_dependence.load_iris": {
  "data": {
   "shadows": "sklearn.datasets.load_iris"
  },
  "type": "import"
 },
 "sklearn.inspection._plot.tests.test_plot_partial_dependence.make_classification": {
  "data": {
   "shadows": "sklearn.datasets.make_classification"
  },
  "type": "import"
 },
 "sklearn.inspection._plot.tests.test_plot_partial_dependence.make_regression": {
  "data": {
   "shadows": "sklearn.datasets.make_regression"
  },
  "type": "import"
 },
 "sklearn.inspection._plot.tests.test_plot_partial_dependence.mquantiles": {
  "data": {
   "shadows": "scipy.stats.mstats.mquantiles"
  },
  "type": "import"
 },
 "sklearn.inspection._plot.tests.test_plot_partial_dependence.multioutput_regression_data": {
  "data": {
   "lineno": 400
  },
  "type": "constant"
 },
 "sklearn.inspection._plot.tests.test_plot_partial_dependence.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.inspection._plot.tests.test_plot_partial_dependence.plot_partial_dependence": {
  "data": {
   "shadows": "sklearn.inspection.plot_partial_dependence"
  },
  "type": "import"
 },
 "sklearn.inspection._plot.tests.test_plot_partial_dependence.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.inspection._plot.tests.test_plot_partial_dependence.pytestmark": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "sklearn.inspection._plot.tests.test_plot_partial_dependence.test_partial_dependence_overwrite_labels": {
  "data": {
   "lineno": 554,
   "symbols_in_volume": [
    "len",
    "sklearn.inspection._plot.tests.test_plot_partial_dependence.clf_diabetes",
    "sklearn.inspection._plot.tests.test_plot_partial_dependence.diabetes",
    "sklearn.inspection._plot.tests.test_plot_partial_dependence.pytest",
    "sklearn.inspection.plot_partial_dependence"
   ]
  },
  "type": "function"
 },
 "sklearn.inspection._plot.tests.test_plot_partial_dependence.test_plot_partial_dependence": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "numpy.all",
    "numpy.arange",
    "numpy.linspace",
    "numpy.testing.assert_allclose",
    "range",
    "scipy.stats.mstats.mquantiles",
    "sklearn.inspection._plot.tests.test_plot_partial_dependence.clf_diabetes",
    "sklearn.inspection._plot.tests.test_plot_partial_dependence.diabetes",
    "sklearn.inspection._plot.tests.test_plot_partial_dependence.pytest",
    "sklearn.inspection.plot_partial_dependence"
   ]
  },
  "type": "function"
 },
 "sklearn.inspection._plot.tests.test_plot_partial_dependence.test_plot_partial_dependence_custom_axes": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "numpy.linspace",
    "numpy.testing.assert_allclose",
    "sklearn.inspection._plot.tests.test_plot_partial_dependence.clf_diabetes",
    "sklearn.inspection._plot.tests.test_plot_partial_dependence.diabetes",
    "sklearn.inspection._plot.tests.test_plot_partial_dependence.pytest",
    "sklearn.inspection.plot_partial_dependence"
   ]
  },
  "type": "function"
 },
 "sklearn.inspection._plot.tests.test_plot_partial_dependence.test_plot_partial_dependence_dataframe": {
  "data": {
   "lineno": 429,
   "symbols_in_volume": [
    "sklearn.inspection._plot.tests.test_plot_partial_dependence.clf_diabetes",
    "sklearn.inspection._plot.tests.test_plot_partial_dependence.diabetes",
    "sklearn.inspection._plot.tests.test_plot_partial_dependence.pytest",
    "sklearn.inspection.plot_partial_dependence"
   ]
  },
  "type": "function"
 },
 "sklearn.inspection._plot.tests.test_plot_partial_dependence.test_plot_partial_dependence_does_not_override_ylabel": {
  "data": {
   "lineno": 507,
   "symbols_in_volume": [
    "sklearn.inspection._plot.tests.test_plot_partial_dependence.clf_diabetes",
    "sklearn.inspection._plot.tests.test_plot_partial_dependence.diabetes",
    "sklearn.inspection.plot_partial_dependence"
   ]
  },
  "type": "function"
 },
 "sklearn.inspection._plot.tests.test_plot_partial_dependence.test_plot_partial_dependence_error": {
  "data": {
   "lineno": 445,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.inspection._plot.tests.test_plot_partial_dependence.dummy_classification_data",
    "sklearn.inspection._plot.tests.test_plot_partial_dependence.multioutput_regression_data",
    "sklearn.inspection._plot.tests.test_plot_partial_dependence.pytest",
    "sklearn.inspection.plot_partial_dependence",
    "sklearn.linear_model.LinearRegression",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sklearn.inspection._plot.tests.test_plot_partial_dependence.test_plot_partial_dependence_feature_name_reuse": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": [
    "enumerate",
    "sklearn.inspection._plot.tests.test_plot_partial_dependence.clf_diabetes",
    "sklearn.inspection._plot.tests.test_plot_partial_dependence.diabetes",
    "sklearn.inspection._plot.tests.test_plot_partial_dependence.pytest",
    "sklearn.inspection.plot_partial_dependence"
   ]
  },
  "type": "function"
 },
 "sklearn.inspection._plot.tests.test_plot_partial_dependence.test_plot_partial_dependence_incorrent_num_axes": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "ValueError",
    "list",
    "sklearn.inspection._plot.tests.test_plot_partial_dependence.clf_diabetes",
    "sklearn.inspection._plot.tests.test_plot_partial_dependence.diabetes",
    "sklearn.inspection._plot.tests.test_plot_partial_dependence.pytest",
    "sklearn.inspection.plot_partial_dependence",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sklearn.inspection._plot.tests.test_plot_partial_dependence.test_plot_partial_dependence_kind": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "sklearn.inspection._plot.tests.test_plot_partial_dependence.clf_diabetes",
    "sklearn.inspection._plot.tests.test_plot_partial_dependence.diabetes",
    "sklearn.inspection._plot.tests.test_plot_partial_dependence.pytest",
    "sklearn.inspection.plot_partial_dependence"
   ]
  },
  "type": "function"
 },
 "sklearn.inspection._plot.tests.test_plot_partial_dependence.test_plot_partial_dependence_multiclass": {
  "data": {
   "lineno": 350,
   "symbols_in_volume": [
    "all",
    "any",
    "numpy.testing.assert_allclose",
    "sklearn.datasets.load_iris",
    "sklearn.ensemble.GradientBoostingClassifier",
    "sklearn.inspection._plot.tests.test_plot_partial_dependence.pytest",
    "sklearn.inspection.plot_partial_dependence",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.inspection._plot.tests.test_plot_partial_dependence.test_plot_partial_dependence_multiclass_error": {
  "data": {
   "lineno": 489,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.datasets.load_iris",
    "sklearn.ensemble.GradientBoostingClassifier",
    "sklearn.inspection._plot.tests.test_plot_partial_dependence.pytest",
    "sklearn.inspection.plot_partial_dependence"
   ]
  },
  "type": "function"
 },
 "sklearn.inspection._plot.tests.test_plot_partial_dependence.test_plot_partial_dependence_multioutput": {
  "data": {
   "lineno": 404,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "sklearn.inspection._plot.tests.test_plot_partial_dependence.multioutput_regression_data",
    "sklearn.inspection._plot.tests.test_plot_partial_dependence.pytest",
    "sklearn.inspection.plot_partial_dependence",
    "sklearn.linear_model.LinearRegression"
   ]
  },
  "type": "function"
 },
 "sklearn.inspection._plot.tests.test_plot_partial_dependence.test_plot_partial_dependence_passing_numpy_axes": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "len",
    "numpy.all",
    "sklearn.inspection._plot.tests.test_plot_partial_dependence.clf_diabetes",
    "sklearn.inspection._plot.tests.test_plot_partial_dependence.diabetes",
    "sklearn.inspection._plot.tests.test_plot_partial_dependence.pytest",
    "sklearn.inspection.plot_partial_dependence",
    "sklearn.linear_model.LinearRegression"
   ]
  },
  "type": "function"
 },
 "sklearn.inspection._plot.tests.test_plot_partial_dependence.test_plot_partial_dependence_str_features": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "len",
    "numpy.linspace",
    "numpy.testing.assert_allclose",
    "sklearn.inspection._plot.tests.test_plot_partial_dependence.clf_diabetes",
    "sklearn.inspection._plot.tests.test_plot_partial_dependence.diabetes",
    "sklearn.inspection._plot.tests.test_plot_partial_dependence.pytest",
    "sklearn.inspection.plot_partial_dependence",
    "sklearn.utils._testing._convert_container"
   ]
  },
  "type": "function"
 },
 "sklearn.inspection._plot.tests.test_plot_partial_dependence.test_plot_partial_dependence_subsampling": {
  "data": {
   "lineno": 520,
   "symbols_in_volume": [
    "all",
    "isinstance",
    "sklearn.inspection._plot.tests.test_plot_partial_dependence.clf_diabetes",
    "sklearn.inspection._plot.tests.test_plot_partial_dependence.diabetes",
    "sklearn.inspection._plot.tests.test_plot_partial_dependence.pytest",
    "sklearn.inspection.plot_partial_dependence"
   ]
  },
  "type": "function"
 },
 "sklearn.inspection._plot.tests.test_plot_partial_dependence.test_plot_partial_dependence_with_same_axes": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.inspection._plot.tests.test_plot_partial_dependence.clf_diabetes",
    "sklearn.inspection._plot.tests.test_plot_partial_dependence.diabetes",
    "sklearn.inspection._plot.tests.test_plot_partial_dependence.pytest",
    "sklearn.inspection.plot_partial_dependence"
   ]
  },
  "type": "function"
 },
 "sklearn.inspection.setup": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.distutils.core.setup",
    "sklearn.inspection.setup.configuration"
   ]
  },
  "type": "module"
 },
 "sklearn.inspection.setup.Configuration": {
  "data": {
   "shadows": "numpy.distutils.misc_util.Configuration"
  },
  "type": "import"
 },
 "sklearn.inspection.setup.configuration": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "numpy.distutils.misc_util.Configuration"
   ]
  },
  "type": "function"
 },
 "sklearn.inspection.setup.setup": {
  "data": {
   "shadows": "numpy.distutils.core.setup"
  },
  "type": "import"
 },
 "sklearn.inspection.tests": {
  "data": {},
  "type": "module"
 },
 "sklearn.inspection.tests.test_partial_dependence": {
  "data": {
   "symbols_in_volume": [
    "sklearn.datasets.load_iris",
    "sklearn.datasets.make_classification",
    "sklearn.datasets.make_regression"
   ]
  },
  "type": "module"
 },
 "sklearn.inspection.tests.test_partial_dependence.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "sklearn.inspection.tests.test_partial_dependence.ClassifierMixin": {
  "data": {
   "shadows": "sklearn.base.ClassifierMixin"
  },
  "type": "import"
 },
 "sklearn.inspection.tests.test_partial_dependence.DecisionTreeRegressor": {
  "data": {
   "shadows": "sklearn.tree.DecisionTreeRegressor"
  },
  "type": "import"
 },
 "sklearn.inspection.tests.test_partial_dependence.DummyClassifier": {
  "data": {
   "shadows": "sklearn.dummy.DummyClassifier"
  },
  "type": "import"
 },
 "sklearn.inspection.tests.test_partial_dependence.GradientBoostingClassifier": {
  "data": {
   "shadows": "sklearn.ensemble.GradientBoostingClassifier"
  },
  "type": "import"
 },
 "sklearn.inspection.tests.test_partial_dependence.GradientBoostingRegressor": {
  "data": {
   "shadows": "sklearn.ensemble.GradientBoostingRegressor"
  },
  "type": "import"
 },
 "sklearn.inspection.tests.test_partial_dependence.HistGradientBoostingClassifier": {
  "data": {
   "shadows": "sklearn.ensemble.HistGradientBoostingClassifier"
  },
  "type": "import"
 },
 "sklearn.inspection.tests.test_partial_dependence.HistGradientBoostingRegressor": {
  "data": {
   "shadows": "sklearn.ensemble.HistGradientBoostingRegressor"
  },
  "type": "import"
 },
 "sklearn.inspection.tests.test_partial_dependence.KMeans": {
  "data": {
   "shadows": "sklearn.cluster.KMeans"
  },
  "type": "import"
 },
 "sklearn.inspection.tests.test_partial_dependence.LinearRegression": {
  "data": {
   "shadows": "sklearn.linear_model.LinearRegression"
  },
  "type": "import"
 },
 "sklearn.inspection.tests.test_partial_dependence.LogisticRegression": {
  "data": {
   "shadows": "sklearn.linear_model.LogisticRegression"
  },
  "type": "import"
 },
 "sklearn.inspection.tests.test_partial_dependence.MultiTaskLasso": {
  "data": {
   "shadows": "sklearn.linear_model.MultiTaskLasso"
  },
  "type": "import"
 },
 "sklearn.inspection.tests.test_partial_dependence.NoPredictProbaNoDecisionFunction": {
  "data": {
   "lineno": 390,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator",
    "sklearn.base.ClassifierMixin"
   ]
  },
  "type": "class"
 },
 "sklearn.inspection.tests.test_partial_dependence.NoPredictProbaNoDecisionFunction.fit": {
  "data": {
   "lineno": 391
  },
  "type": "function"
 },
 "sklearn.inspection.tests.test_partial_dependence.NotFittedError": {
  "data": {
   "shadows": "sklearn.exceptions.NotFittedError"
  },
  "type": "import"
 },
 "sklearn.inspection.tests.test_partial_dependence.PolynomialFeatures": {
  "data": {
   "shadows": "sklearn.preprocessing.PolynomialFeatures"
  },
  "type": "import"
 },
 "sklearn.inspection.tests.test_partial_dependence.RandomForestRegressor": {
  "data": {
   "shadows": "sklearn.ensemble.RandomForestRegressor"
  },
  "type": "import"
 },
 "sklearn.inspection.tests.test_partial_dependence.RobustScaler": {
  "data": {
   "shadows": "sklearn.preprocessing.RobustScaler"
  },
  "type": "import"
 },
 "sklearn.inspection.tests.test_partial_dependence.StandardScaler": {
  "data": {
   "shadows": "sklearn.preprocessing.StandardScaler"
  },
  "type": "import"
 },
 "sklearn.inspection.tests.test_partial_dependence.X": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "sklearn.inspection.tests.test_partial_dependence._IS_32BIT": {
  "data": {
   "shadows": "sklearn.utils._IS_32BIT"
  },
  "type": "import"
 },
 "sklearn.inspection.tests.test_partial_dependence._grid_from_X": {
  "data": {
   "shadows": "sklearn.inspection._partial_dependence._grid_from_X"
  },
  "type": "import"
 },
 "sklearn.inspection.tests.test_partial_dependence._partial_dependence_brute": {
  "data": {
   "shadows": "sklearn.inspection._partial_dependence._partial_dependence_brute"
  },
  "type": "import"
 },
 "sklearn.inspection.tests.test_partial_dependence._partial_dependence_recursion": {
  "data": {
   "shadows": "sklearn.inspection._partial_dependence._partial_dependence_recursion"
  },
  "type": "import"
 },
 "sklearn.inspection.tests.test_partial_dependence.assert_allclose": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_allclose"
  },
  "type": "import"
 },
 "sklearn.inspection.tests.test_partial_dependence.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.inspection.tests.test_partial_dependence.assert_is_subtree": {
  "data": {
   "shadows": "sklearn.tree.tests.test_tree.assert_is_subtree"
  },
  "type": "import"
 },
 "sklearn.inspection.tests.test_partial_dependence.binary_classification_data": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "sklearn.inspection.tests.test_partial_dependence.check_random_state": {
  "data": {
   "shadows": "sklearn.utils.validation.check_random_state"
  },
  "type": "import"
 },
 "sklearn.inspection.tests.test_partial_dependence.clone": {
  "data": {
   "shadows": "sklearn.base.clone"
  },
  "type": "import"
 },
 "sklearn.inspection.tests.test_partial_dependence.enable_hist_gradient_boosting": {
  "data": {
   "shadows": "sklearn.experimental.enable_hist_gradient_boosting"
  },
  "type": "import"
 },
 "sklearn.inspection.tests.test_partial_dependence.iris": {
  "data": {
   "lineno": 61
  },
  "type": "constant"
 },
 "sklearn.inspection.tests.test_partial_dependence.load_iris": {
  "data": {
   "shadows": "sklearn.datasets.load_iris"
  },
  "type": "import"
 },
 "sklearn.inspection.tests.test_partial_dependence.make_classification": {
  "data": {
   "shadows": "sklearn.datasets.make_classification"
  },
  "type": "import"
 },
 "sklearn.inspection.tests.test_partial_dependence.make_column_transformer": {
  "data": {
   "shadows": "sklearn.compose.make_column_transformer"
  },
  "type": "import"
 },
 "sklearn.inspection.tests.test_partial_dependence.make_pipeline": {
  "data": {
   "shadows": "sklearn.pipeline.make_pipeline"
  },
  "type": "import"
 },
 "sklearn.inspection.tests.test_partial_dependence.make_regression": {
  "data": {
   "shadows": "sklearn.datasets.make_regression"
  },
  "type": "import"
 },
 "sklearn.inspection.tests.test_partial_dependence.multiclass_classification_data": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "sklearn.inspection.tests.test_partial_dependence.multioutput_regression_data": {
  "data": {
   "lineno": 57
  },
  "type": "constant"
 },
 "sklearn.inspection.tests.test_partial_dependence.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.inspection.tests.test_partial_dependence.partial_dependence": {
  "data": {
   "shadows": "sklearn.inspection.partial_dependence"
  },
  "type": "import"
 },
 "sklearn.inspection.tests.test_partial_dependence.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.inspection.tests.test_partial_dependence.r2_score": {
  "data": {
   "shadows": "sklearn.metrics.r2_score"
  },
  "type": "import"
 },
 "sklearn.inspection.tests.test_partial_dependence.regression_data": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "sklearn.inspection.tests.test_partial_dependence.sklearn": {
  "data": {
   "shadows": "sklearn"
  },
  "type": "import"
 },
 "sklearn.inspection.tests.test_partial_dependence.test_grid_from_X": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.random.RandomState",
    "sklearn.inspection._partial_dependence._grid_from_X",
    "sklearn.inspection.tests.test_partial_dependence.X",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.inspection.tests.test_partial_dependence.test_grid_from_X_error": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "ValueError",
    "numpy.asarray",
    "sklearn.inspection._partial_dependence._grid_from_X",
    "sklearn.inspection.tests.test_partial_dependence.X",
    "sklearn.inspection.tests.test_partial_dependence.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.inspection.tests.test_partial_dependence.test_hist_gbdt_sw_not_supported": {
  "data": {
   "lineno": 547,
   "symbols_in_volume": [
    "NotImplementedError",
    "len",
    "numpy.ones",
    "sklearn.ensemble.HistGradientBoostingRegressor",
    "sklearn.inspection.partial_dependence",
    "sklearn.inspection.tests.test_partial_dependence.X",
    "sklearn.inspection.tests.test_partial_dependence.pytest",
    "sklearn.inspection.tests.test_partial_dependence.y"
   ]
  },
  "type": "function"
 },
 "sklearn.inspection.tests.test_partial_dependence.test_kind_average_and_average_of_individual": {
  "data": {
   "lineno": 690,
   "symbols_in_volume": [
    "Estimator",
    "numpy.mean",
    "sklearn.inspection.partial_dependence",
    "sklearn.inspection.tests.test_partial_dependence.X",
    "sklearn.inspection.tests.test_partial_dependence.binary_classification_data",
    "sklearn.inspection.tests.test_partial_dependence.multioutput_regression_data",
    "sklearn.inspection.tests.test_partial_dependence.pytest",
    "sklearn.inspection.tests.test_partial_dependence.y",
    "sklearn.linear_model.LinearRegression",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.utils._testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "sklearn.inspection.tests.test_partial_dependence.test_multiclass_multioutput": {
  "data": {
   "lineno": 366,
   "symbols_in_volume": [
    "Estimator",
    "ValueError",
    "numpy.array",
    "sklearn.datasets.make_classification",
    "sklearn.inspection.partial_dependence",
    "sklearn.inspection.tests.test_partial_dependence.X",
    "sklearn.inspection.tests.test_partial_dependence.pytest",
    "sklearn.inspection.tests.test_partial_dependence.sklearn",
    "sklearn.inspection.tests.test_partial_dependence.y"
   ]
  },
  "type": "function"
 },
 "sklearn.inspection.tests.test_partial_dependence.test_output_shape": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "Estimator",
    "len",
    "numpy.asarray",
    "range",
    "sklearn.ensemble.GradientBoostingClassifier",
    "sklearn.ensemble.GradientBoostingRegressor",
    "sklearn.inspection.partial_dependence",
    "sklearn.inspection.tests.test_partial_dependence.X",
    "sklearn.inspection.tests.test_partial_dependence.binary_classification_data",
    "sklearn.inspection.tests.test_partial_dependence.multiclass_classification_data",
    "sklearn.inspection.tests.test_partial_dependence.multioutput_regression_data",
    "sklearn.inspection.tests.test_partial_dependence.pytest",
    "sklearn.inspection.tests.test_partial_dependence.regression_data",
    "sklearn.inspection.tests.test_partial_dependence.y",
    "sklearn.linear_model.LinearRegression",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.linear_model.MultiTaskLasso",
    "sklearn.tree.DecisionTreeRegressor"
   ]
  },
  "type": "function"
 },
 "sklearn.inspection.tests.test_partial_dependence.test_partial_dependence_X_list": {
  "data": {
   "lineno": 492,
   "symbols_in_volume": [
    "list",
    "sklearn.datasets.make_classification",
    "sklearn.ensemble.GradientBoostingClassifier",
    "sklearn.inspection.partial_dependence",
    "sklearn.inspection.tests.test_partial_dependence.X",
    "sklearn.inspection.tests.test_partial_dependence.pytest",
    "sklearn.inspection.tests.test_partial_dependence.y",
    "sklearn.linear_model.LinearRegression"
   ]
  },
  "type": "function"
 },
 "sklearn.inspection.tests.test_partial_dependence.test_partial_dependence_dataframe": {
  "data": {
   "lineno": 584,
   "symbols_in_volume": [
    "sklearn.base.clone",
    "sklearn.compose.make_column_transformer",
    "sklearn.ensemble.GradientBoostingClassifier",
    "sklearn.inspection.partial_dependence",
    "sklearn.inspection.tests.test_partial_dependence.iris",
    "sklearn.inspection.tests.test_partial_dependence.pytest",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.pipeline.make_pipeline",
    "sklearn.preprocessing.RobustScaler",
    "sklearn.preprocessing.StandardScaler",
    "sklearn.utils._testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "sklearn.inspection.tests.test_partial_dependence.test_partial_dependence_easy_target": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.ensemble.GradientBoostingRegressor",
    "sklearn.ensemble.HistGradientBoostingRegressor",
    "sklearn.inspection.partial_dependence",
    "sklearn.inspection.tests.test_partial_dependence.X",
    "sklearn.inspection.tests.test_partial_dependence.pytest",
    "sklearn.inspection.tests.test_partial_dependence.y",
    "sklearn.linear_model.LinearRegression",
    "sklearn.metrics.r2_score",
    "sklearn.preprocessing.PolynomialFeatures",
    "sklearn.tree.DecisionTreeRegressor"
   ]
  },
  "type": "function"
 },
 "sklearn.inspection.tests.test_partial_dependence.test_partial_dependence_error": {
  "data": {
   "lineno": 397,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.cluster.KMeans",
    "sklearn.datasets.make_classification",
    "sklearn.ensemble.GradientBoostingClassifier",
    "sklearn.inspection.partial_dependence",
    "sklearn.inspection.tests.test_partial_dependence.NoPredictProbaNoDecisionFunction",
    "sklearn.inspection.tests.test_partial_dependence.X",
    "sklearn.inspection.tests.test_partial_dependence.pytest",
    "sklearn.inspection.tests.test_partial_dependence.y",
    "sklearn.linear_model.LinearRegression"
   ]
  },
  "type": "function"
 },
 "sklearn.inspection.tests.test_partial_dependence.test_partial_dependence_feature_type": {
  "data": {
   "lineno": 645,
   "symbols_in_volume": [
    "len",
    "sklearn.compose.make_column_transformer",
    "sklearn.inspection.partial_dependence",
    "sklearn.inspection.tests.test_partial_dependence.iris",
    "sklearn.inspection.tests.test_partial_dependence.pytest",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.pipeline.make_pipeline",
    "sklearn.preprocessing.RobustScaler",
    "sklearn.preprocessing.StandardScaler"
   ]
  },
  "type": "function"
 },
 "sklearn.inspection.tests.test_partial_dependence.test_partial_dependence_helpers": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "numpy.allclose",
    "numpy.array",
    "numpy.int32",
    "range",
    "sklearn.datasets.make_regression",
    "sklearn.ensemble.GradientBoostingRegressor",
    "sklearn.ensemble.HistGradientBoostingRegressor",
    "sklearn.inspection._partial_dependence._partial_dependence_brute",
    "sklearn.inspection._partial_dependence._partial_dependence_recursion",
    "sklearn.inspection.tests.test_partial_dependence.X",
    "sklearn.inspection.tests.test_partial_dependence.pytest",
    "sklearn.inspection.tests.test_partial_dependence.y",
    "sklearn.linear_model.LinearRegression"
   ]
  },
  "type": "function"
 },
 "sklearn.inspection.tests.test_partial_dependence.test_partial_dependence_pipeline": {
  "data": {
   "lineno": 557,
   "symbols_in_volume": [
    "sklearn.datasets.load_iris",
    "sklearn.dummy.DummyClassifier",
    "sklearn.inspection.partial_dependence",
    "sklearn.inspection.tests.test_partial_dependence.iris",
    "sklearn.pipeline.make_pipeline",
    "sklearn.preprocessing.StandardScaler",
    "sklearn.utils._testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "sklearn.inspection.tests.test_partial_dependence.test_partial_dependence_sample_weight": {
  "data": {
   "lineno": 521,
   "symbols_in_volume": [
    "bool",
    "numpy.c_",
    "numpy.corrcoef",
    "numpy.ones",
    "numpy.random.RandomState",
    "sklearn.ensemble.GradientBoostingRegressor",
    "sklearn.inspection.partial_dependence",
    "sklearn.inspection.tests.test_partial_dependence.X",
    "sklearn.inspection.tests.test_partial_dependence.y"
   ]
  },
  "type": "function"
 },
 "sklearn.inspection.tests.test_partial_dependence.test_partial_dependence_slice_error": {
  "data": {
   "lineno": 446,
   "symbols_in_volume": [
    "TypeError",
    "sklearn.datasets.make_classification",
    "sklearn.inspection.partial_dependence",
    "sklearn.inspection.tests.test_partial_dependence.X",
    "sklearn.inspection.tests.test_partial_dependence.pytest",
    "sklearn.inspection.tests.test_partial_dependence.y",
    "sklearn.linear_model.LogisticRegression",
    "slice"
   ]
  },
  "type": "function"
 },
 "sklearn.inspection.tests.test_partial_dependence.test_partial_dependence_unfitted": {
  "data": {
   "lineno": 674,
   "symbols_in_volume": [
    "sklearn.compose.make_column_transformer",
    "sklearn.ensemble.GradientBoostingClassifier",
    "sklearn.ensemble.GradientBoostingRegressor",
    "sklearn.exceptions.NotFittedError",
    "sklearn.inspection.partial_dependence",
    "sklearn.inspection.tests.test_partial_dependence.X",
    "sklearn.inspection.tests.test_partial_dependence.iris",
    "sklearn.inspection.tests.test_partial_dependence.pytest",
    "sklearn.linear_model.LinearRegression",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.pipeline.make_pipeline",
    "sklearn.preprocessing.RobustScaler",
    "sklearn.preprocessing.StandardScaler"
   ]
  },
  "type": "function"
 },
 "sklearn.inspection.tests.test_partial_dependence.test_partial_dependence_unknown_feature_indices": {
  "data": {
   "lineno": 462,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.datasets.make_classification",
    "sklearn.ensemble.GradientBoostingClassifier",
    "sklearn.inspection.partial_dependence",
    "sklearn.inspection.tests.test_partial_dependence.X",
    "sklearn.inspection.tests.test_partial_dependence.pytest",
    "sklearn.inspection.tests.test_partial_dependence.y",
    "sklearn.linear_model.LinearRegression"
   ]
  },
  "type": "function"
 },
 "sklearn.inspection.tests.test_partial_dependence.test_partial_dependence_unknown_feature_string": {
  "data": {
   "lineno": 476,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.datasets.make_classification",
    "sklearn.ensemble.GradientBoostingClassifier",
    "sklearn.inspection.partial_dependence",
    "sklearn.inspection.tests.test_partial_dependence.X",
    "sklearn.inspection.tests.test_partial_dependence.pytest",
    "sklearn.inspection.tests.test_partial_dependence.y",
    "sklearn.linear_model.LinearRegression"
   ]
  },
  "type": "function"
 },
 "sklearn.inspection.tests.test_partial_dependence.test_recursion_decision_function": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "numpy.mean",
    "sklearn.datasets.make_classification",
    "sklearn.ensemble.GradientBoostingClassifier",
    "sklearn.ensemble.HistGradientBoostingClassifier",
    "sklearn.inspection.partial_dependence",
    "sklearn.inspection.tests.test_partial_dependence.X",
    "sklearn.inspection.tests.test_partial_dependence.pytest",
    "sklearn.inspection.tests.test_partial_dependence.y",
    "sklearn.utils._testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "sklearn.inspection.tests.test_partial_dependence.test_recursion_decision_tree_vs_forest_and_gbdt": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "AssertionError",
    "numpy.array",
    "numpy.iinfo",
    "numpy.int32",
    "numpy.random.RandomState",
    "numpy.testing.assert_allclose",
    "range",
    "sklearn.ensemble.GradientBoostingRegressor",
    "sklearn.ensemble.RandomForestRegressor",
    "sklearn.inspection._partial_dependence._partial_dependence_recursion",
    "sklearn.inspection.tests.test_partial_dependence.X",
    "sklearn.inspection.tests.test_partial_dependence.pytest",
    "sklearn.inspection.tests.test_partial_dependence.y",
    "sklearn.tree.DecisionTreeRegressor",
    "sklearn.tree.tests.test_tree.assert_is_subtree",
    "sklearn.utils._IS_32BIT",
    "sklearn.utils.validation.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.inspection.tests.test_partial_dependence.test_warning_for_kind_legacy": {
  "data": {
   "lineno": 708,
   "symbols_in_volume": [
    "FutureWarning",
    "sklearn.inspection.partial_dependence",
    "sklearn.inspection.tests.test_partial_dependence.X",
    "sklearn.inspection.tests.test_partial_dependence.binary_classification_data",
    "sklearn.inspection.tests.test_partial_dependence.pytest",
    "sklearn.inspection.tests.test_partial_dependence.y",
    "sklearn.linear_model.LogisticRegression"
   ]
  },
  "type": "function"
 },
 "sklearn.inspection.tests.test_partial_dependence.test_warning_recursion_non_constant_init": {
  "data": {
   "lineno": 503,
   "symbols_in_volume": [
    "UserWarning",
    "sklearn.dummy.DummyClassifier",
    "sklearn.ensemble.GradientBoostingClassifier",
    "sklearn.inspection.partial_dependence",
    "sklearn.inspection.tests.test_partial_dependence.X",
    "sklearn.inspection.tests.test_partial_dependence.pytest",
    "sklearn.inspection.tests.test_partial_dependence.y"
   ]
  },
  "type": "function"
 },
 "sklearn.inspection.tests.test_partial_dependence.y": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "sklearn.inspection.tests.test_permutation_importance": {
  "data": {},
  "type": "module"
 },
 "sklearn.inspection.tests.test_permutation_importance.ColumnTransformer": {
  "data": {
   "shadows": "sklearn.compose.ColumnTransformer"
  },
  "type": "import"
 },
 "sklearn.inspection.tests.test_permutation_importance.DummyClassifier": {
  "data": {
   "shadows": "sklearn.dummy.DummyClassifier"
  },
  "type": "import"
 },
 "sklearn.inspection.tests.test_permutation_importance.KBinsDiscretizer": {
  "data": {
   "shadows": "sklearn.preprocessing.KBinsDiscretizer"
  },
  "type": "import"
 },
 "sklearn.inspection.tests.test_permutation_importance.LinearRegression": {
  "data": {
   "shadows": "sklearn.linear_model.LinearRegression"
  },
  "type": "import"
 },
 "sklearn.inspection.tests.test_permutation_importance.LogisticRegression": {
  "data": {
   "shadows": "sklearn.linear_model.LogisticRegression"
  },
  "type": "import"
 },
 "sklearn.inspection.tests.test_permutation_importance.OneHotEncoder": {
  "data": {
   "shadows": "sklearn.preprocessing.OneHotEncoder"
  },
  "type": "import"
 },
 "sklearn.inspection.tests.test_permutation_importance.RandomForestClassifier": {
  "data": {
   "shadows": "sklearn.ensemble.RandomForestClassifier"
  },
  "type": "import"
 },
 "sklearn.inspection.tests.test_permutation_importance.RandomForestRegressor": {
  "data": {
   "shadows": "sklearn.ensemble.RandomForestRegressor"
  },
  "type": "import"
 },
 "sklearn.inspection.tests.test_permutation_importance.SimpleImputer": {
  "data": {
   "shadows": "sklearn.impute.SimpleImputer"
  },
  "type": "import"
 },
 "sklearn.inspection.tests.test_permutation_importance.StandardScaler": {
  "data": {
   "shadows": "sklearn.preprocessing.StandardScaler"
  },
  "type": "import"
 },
 "sklearn.inspection.tests.test_permutation_importance._convert_container": {
  "data": {
   "shadows": "sklearn.utils._testing._convert_container"
  },
  "type": "import"
 },
 "sklearn.inspection.tests.test_permutation_importance.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "sklearn.inspection.tests.test_permutation_importance.load_diabetes": {
  "data": {
   "shadows": "sklearn.datasets.load_diabetes"
  },
  "type": "import"
 },
 "sklearn.inspection.tests.test_permutation_importance.load_iris": {
  "data": {
   "shadows": "sklearn.datasets.load_iris"
  },
  "type": "import"
 },
 "sklearn.inspection.tests.test_permutation_importance.make_classification": {
  "data": {
   "shadows": "sklearn.datasets.make_classification"
  },
  "type": "import"
 },
 "sklearn.inspection.tests.test_permutation_importance.make_pipeline": {
  "data": {
   "shadows": "sklearn.pipeline.make_pipeline"
  },
  "type": "import"
 },
 "sklearn.inspection.tests.test_permutation_importance.make_regression": {
  "data": {
   "shadows": "sklearn.datasets.make_regression"
  },
  "type": "import"
 },
 "sklearn.inspection.tests.test_permutation_importance.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.inspection.tests.test_permutation_importance.parallel_backend": {
  "data": {
   "shadows": "sklearn.utils.parallel_backend"
  },
  "type": "import"
 },
 "sklearn.inspection.tests.test_permutation_importance.permutation_importance": {
  "data": {
   "shadows": "sklearn.inspection.permutation_importance"
  },
  "type": "import"
 },
 "sklearn.inspection.tests.test_permutation_importance.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.inspection.tests.test_permutation_importance.scale": {
  "data": {
   "shadows": "sklearn.preprocessing.scale"
  },
  "type": "import"
 },
 "sklearn.inspection.tests.test_permutation_importance.test_permutation_importance_correlated_feature_regression": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.hstack",
    "numpy.random.RandomState",
    "sklearn.datasets.load_diabetes",
    "sklearn.ensemble.RandomForestRegressor",
    "sklearn.inspection.permutation_importance",
    "sklearn.inspection.tests.test_permutation_importance.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.inspection.tests.test_permutation_importance.test_permutation_importance_correlated_feature_regression_pandas": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.random.RandomState",
    "sklearn.datasets.load_iris",
    "sklearn.ensemble.RandomForestClassifier",
    "sklearn.inspection.permutation_importance",
    "sklearn.inspection.tests.test_permutation_importance.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.inspection.tests.test_permutation_importance.test_permutation_importance_equivalence_array_dataframe": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": [
    "hasattr",
    "len",
    "numpy.arange",
    "numpy.hstack",
    "numpy.testing.assert_allclose",
    "sklearn.datasets.make_regression",
    "sklearn.ensemble.RandomForestRegressor",
    "sklearn.inspection.permutation_importance",
    "sklearn.inspection.tests.test_permutation_importance.pytest",
    "sklearn.preprocessing.KBinsDiscretizer",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.inspection.tests.test_permutation_importance.test_permutation_importance_equivalence_sequential_parallel": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose",
    "sklearn.datasets.make_regression",
    "sklearn.inspection.permutation_importance",
    "sklearn.linear_model.LinearRegression",
    "sklearn.utils.parallel_backend"
   ]
  },
  "type": "function"
 },
 "sklearn.inspection.tests.test_permutation_importance.test_permutation_importance_large_memmaped_data": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": [
    "int",
    "numpy.testing.assert_allclose",
    "numpy.zeros",
    "sklearn.datasets.make_classification",
    "sklearn.dummy.DummyClassifier",
    "sklearn.inspection.permutation_importance",
    "sklearn.inspection.tests.test_permutation_importance.pytest",
    "sklearn.utils._testing._convert_container"
   ]
  },
  "type": "function"
 },
 "sklearn.inspection.tests.test_permutation_importance.test_permutation_importance_linear_regresssion": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose",
    "sklearn.datasets.make_regression",
    "sklearn.inspection.permutation_importance",
    "sklearn.linear_model.LinearRegression",
    "sklearn.preprocessing.scale"
   ]
  },
  "type": "function"
 },
 "sklearn.inspection.tests.test_permutation_importance.test_permutation_importance_mixed_types": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.allclose",
    "numpy.array",
    "numpy.nan",
    "numpy.random.RandomState",
    "sklearn.impute.SimpleImputer",
    "sklearn.inspection.permutation_importance",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.pipeline.make_pipeline"
   ]
  },
  "type": "function"
 },
 "sklearn.inspection.tests.test_permutation_importance.test_permutation_importance_mixed_types_pandas": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.array",
    "numpy.nan",
    "numpy.random.RandomState",
    "sklearn.compose.ColumnTransformer",
    "sklearn.impute.SimpleImputer",
    "sklearn.inspection.permutation_importance",
    "sklearn.inspection.tests.test_permutation_importance.pytest",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.pipeline.make_pipeline",
    "sklearn.preprocessing.OneHotEncoder",
    "sklearn.preprocessing.StandardScaler"
   ]
  },
  "type": "function"
 },
 "sklearn.inspection.tests.test_permutation_importance.test_permutation_importance_no_weights_scoring_function": {
  "data": {
   "lineno": 408,
   "symbols_in_volume": [
    "TypeError",
    "numpy.array",
    "sklearn.inspection.permutation_importance",
    "sklearn.inspection.tests.test_permutation_importance.pytest",
    "sklearn.linear_model.LinearRegression"
   ]
  },
  "type": "function"
 },
 "sklearn.inspection.tests.test_permutation_importance.test_permutation_importance_no_weights_scoring_function.my_scorer": {
  "data": {
   "lineno": 410
  },
  "type": "function"
 },
 "sklearn.inspection.tests.test_permutation_importance.test_permutation_importance_sample_weight": {
  "data": {
   "lineno": 356,
   "symbols_in_volume": [
    "numpy.hstack",
    "numpy.ones",
    "numpy.random.RandomState",
    "numpy.repeat",
    "numpy.zeros",
    "sklearn.inspection.permutation_importance",
    "sklearn.inspection.tests.test_permutation_importance.pytest",
    "sklearn.linear_model.LinearRegression"
   ]
  },
  "type": "function"
 },
 "sklearn.inspection.tests.test_permutation_importance.test_robustness_to_high_cardinality_noisy_feature": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "max",
    "numpy.abs",
    "numpy.arange",
    "numpy.concatenate",
    "numpy.float32",
    "numpy.hstack",
    "numpy.random.RandomState",
    "sklearn.ensemble.RandomForestClassifier",
    "sklearn.inspection.permutation_importance",
    "sklearn.inspection.tests.test_permutation_importance.pytest",
    "sklearn.model_selection.train_test_split"
   ]
  },
  "type": "function"
 },
 "sklearn.inspection.tests.test_permutation_importance.train_test_split": {
  "data": {
   "shadows": "sklearn.model_selection.train_test_split"
  },
  "type": "import"
 },
 "sklearn.isotonic": {
  "data": {},
  "type": "module"
 },
 "sklearn.isotonic.IsotonicRegression": {
  "data": {
   "lineno": 134
  },
  "type": "class"
 },
 "sklearn.isotonic.IsotonicRegression.__getstate__": {
  "data": {
   "lineno": 402,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.isotonic.IsotonicRegression.__init__": {
  "data": {
   "lineno": 219
  },
  "type": "function"
 },
 "sklearn.isotonic.IsotonicRegression.__setstate__": {
  "data": {
   "lineno": 409,
   "symbols_in_volume": [
    "hasattr",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.isotonic.IsotonicRegression._build_f": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "scipy.interpolate.interp1d"
   ]
  },
  "type": "function"
 },
 "sklearn.isotonic.IsotonicRegression._build_y": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "_check_sample_weight",
    "_make_unique",
    "bool",
    "len",
    "numpy.lexsort",
    "numpy.logical_or",
    "numpy.max",
    "numpy.min",
    "numpy.not_equal",
    "numpy.ones",
    "sklearn.isotonic.check_increasing",
    "sklearn.isotonic.isotonic_regression"
   ]
  },
  "type": "function"
 },
 "sklearn.isotonic.IsotonicRegression._check_input_data_shape": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "sklearn.isotonic.IsotonicRegression._more_tags": {
  "data": {
   "lineno": 418
  },
  "type": "function"
 },
 "sklearn.isotonic.IsotonicRegression.fit": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "check_array",
    "check_consistent_length",
    "dict",
    "numpy.float32",
    "numpy.float64"
   ]
  },
  "type": "function"
 },
 "sklearn.isotonic.IsotonicRegression.predict": {
  "data": {
   "lineno": 387
  },
  "type": "function"
 },
 "sklearn.isotonic.IsotonicRegression.transform": {
  "data": {
   "lineno": 344,
   "symbols_in_volume": [
    "ValueError",
    "check_array",
    "hasattr",
    "numpy.clip",
    "numpy.float64"
   ]
  },
  "type": "function"
 },
 "sklearn.isotonic.__all__": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "sklearn.isotonic.check_increasing": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "len",
    "numpy.sign",
    "scipy.stats.spearmanr",
    "sklearn.isotonic.math",
    "sklearn.isotonic.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.isotonic.interpolate": {
  "data": {
   "shadows": "scipy.interpolate"
  },
  "type": "import"
 },
 "sklearn.isotonic.isotonic_regression": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "_check_sample_weight",
    "_inplace_contiguous_isotonic_regression",
    "check_array",
    "numpy.array",
    "numpy.ascontiguousarray",
    "numpy.clip",
    "numpy.float32",
    "numpy.float64",
    "numpy.inf",
    "numpy.s_"
   ]
  },
  "type": "function"
 },
 "sklearn.isotonic.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "sklearn.isotonic.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.isotonic.spearmanr": {
  "data": {
   "shadows": "scipy.stats.spearmanr"
  },
  "type": "import"
 },
 "sklearn.isotonic.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.kernel_approximation": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "sklearn.kernel_approximation.AdditiveChi2Sampler": {
  "data": {
   "lineno": 437
  },
  "type": "class"
 },
 "sklearn.kernel_approximation.AdditiveChi2Sampler.__init__": {
  "data": {
   "lineno": 503
  },
  "type": "function"
 },
 "sklearn.kernel_approximation.AdditiveChi2Sampler._more_tags": {
  "data": {
   "lineno": 623
  },
  "type": "function"
 },
 "sklearn.kernel_approximation.AdditiveChi2Sampler._transform_dense": {
  "data": {
   "lineno": 569,
   "symbols_in_volume": [
    "numpy.cos",
    "numpy.cosh",
    "numpy.hstack",
    "numpy.log",
    "numpy.pi",
    "numpy.sin",
    "numpy.sqrt",
    "numpy.zeros_like",
    "range"
   ]
  },
  "type": "function"
 },
 "sklearn.kernel_approximation.AdditiveChi2Sampler._transform_sparse": {
  "data": {
   "lineno": 595,
   "symbols_in_volume": [
    "numpy.cos",
    "numpy.cosh",
    "numpy.log",
    "numpy.pi",
    "numpy.sin",
    "numpy.sqrt",
    "range",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.hstack"
   ]
  },
  "type": "function"
 },
 "sklearn.kernel_approximation.AdditiveChi2Sampler.fit": {
  "data": {
   "lineno": 508,
   "symbols_in_volume": [
    "ValueError",
    "check_non_negative"
   ]
  },
  "type": "function"
 },
 "sklearn.kernel_approximation.AdditiveChi2Sampler.transform": {
  "data": {
   "lineno": 540,
   "symbols_in_volume": [
    "check_is_fitted",
    "check_non_negative",
    "scipy.sparse.issparse",
    "transf"
   ]
  },
  "type": "function"
 },
 "sklearn.kernel_approximation.Nystroem": {
  "data": {
   "lineno": 628
  },
  "type": "class"
 },
 "sklearn.kernel_approximation.Nystroem.__init__": {
  "data": {
   "lineno": 731
  },
  "type": "function"
 },
 "sklearn.kernel_approximation.Nystroem._get_kernel_params": {
  "data": {
   "lineno": 815,
   "symbols_in_volume": [
    "ValueError",
    "callable",
    "getattr"
   ]
  },
  "type": "function"
 },
 "sklearn.kernel_approximation.Nystroem._more_tags": {
  "data": {
   "lineno": 833,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.float64"
   ]
  },
  "type": "function"
 },
 "sklearn.kernel_approximation.Nystroem.fit": {
  "data": {
   "lineno": 745,
   "symbols_in_volume": [
    "check_random_state",
    "min",
    "numpy.dot",
    "numpy.maximum",
    "numpy.sqrt",
    "pairwise_kernels",
    "scipy.linalg.svd",
    "sklearn.kernel_approximation.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.kernel_approximation.Nystroem.transform": {
  "data": {
   "lineno": 788,
   "symbols_in_volume": [
    "check_is_fitted",
    "numpy.dot",
    "pairwise_kernels"
   ]
  },
  "type": "function"
 },
 "sklearn.kernel_approximation.PolynomialCountSketch": {
  "data": {
   "lineno": 30
  },
  "type": "class"
 },
 "sklearn.kernel_approximation.PolynomialCountSketch.__init__": {
  "data": {
   "lineno": 95
  },
  "type": "function"
 },
 "sklearn.kernel_approximation.PolynomialCountSketch.fit": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "ValueError",
    "check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.kernel_approximation.PolynomialCountSketch.transform": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "ValueError",
    "check_is_fitted",
    "numpy.hstack",
    "numpy.ones",
    "numpy.prod",
    "numpy.real",
    "numpy.sqrt",
    "numpy.zeros",
    "range",
    "scipy.fftpack.fft",
    "scipy.fftpack.ifft",
    "scipy.sparse.hstack",
    "scipy.sparse.issparse"
   ]
  },
  "type": "function"
 },
 "sklearn.kernel_approximation.RBFSampler": {
  "data": {
   "lineno": 197
  },
  "type": "class"
 },
 "sklearn.kernel_approximation.RBFSampler.__init__": {
  "data": {
   "lineno": 256
  },
  "type": "function"
 },
 "sklearn.kernel_approximation.RBFSampler.fit": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "check_random_state",
    "numpy.pi",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "sklearn.kernel_approximation.RBFSampler.transform": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "check_is_fitted",
    "numpy.cos",
    "numpy.sqrt",
    "safe_sparse_dot"
   ]
  },
  "type": "function"
 },
 "sklearn.kernel_approximation.SkewedChi2Sampler": {
  "data": {
   "lineno": 313
  },
  "type": "class"
 },
 "sklearn.kernel_approximation.SkewedChi2Sampler.__init__": {
  "data": {
   "lineno": 372
  },
  "type": "function"
 },
 "sklearn.kernel_approximation.SkewedChi2Sampler.fit": {
  "data": {
   "lineno": 378,
   "symbols_in_volume": [
    "check_random_state",
    "numpy.log",
    "numpy.pi",
    "numpy.tan"
   ]
  },
  "type": "function"
 },
 "sklearn.kernel_approximation.SkewedChi2Sampler.transform": {
  "data": {
   "lineno": 406,
   "symbols_in_volume": [
    "ValueError",
    "as_float_array",
    "check_is_fitted",
    "numpy.cos",
    "numpy.log",
    "numpy.sqrt",
    "safe_sparse_dot"
   ]
  },
  "type": "function"
 },
 "sklearn.kernel_approximation.fft": {
  "data": {
   "shadows": "scipy.fftpack.fft"
  },
  "type": "import"
 },
 "sklearn.kernel_approximation.ifft": {
  "data": {
   "shadows": "scipy.fftpack.ifft"
  },
  "type": "import"
 },
 "sklearn.kernel_approximation.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.kernel_approximation.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.kernel_approximation.svd": {
  "data": {
   "shadows": "scipy.linalg.svd"
  },
  "type": "import"
 },
 "sklearn.kernel_approximation.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.kernel_ridge": {
  "data": {},
  "type": "module"
 },
 "sklearn.kernel_ridge.KernelRidge": {
  "data": {
   "lineno": 17
  },
  "type": "class"
 },
 "sklearn.kernel_ridge.KernelRidge.__init__": {
  "data": {
   "lineno": 116
  },
  "type": "function"
 },
 "sklearn.kernel_ridge.KernelRidge._get_kernel": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "callable",
    "pairwise_kernels"
   ]
  },
  "type": "function"
 },
 "sklearn.kernel_ridge.KernelRidge._more_tags": {
  "data": {
   "lineno": 136
  },
  "type": "function"
 },
 "sklearn.kernel_ridge.KernelRidge._pairwise": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "deprecated",
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.kernel_ridge.KernelRidge.fit": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "_check_sample_weight",
    "_solve_cholesky_kernel",
    "float",
    "isinstance",
    "len",
    "numpy.atleast_1d"
   ]
  },
  "type": "function"
 },
 "sklearn.kernel_ridge.KernelRidge.predict": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "check_is_fitted",
    "numpy.dot"
   ]
  },
  "type": "function"
 },
 "sklearn.kernel_ridge.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.linear_model": {
  "data": {},
  "type": "module"
 },
 "sklearn.linear_model.__all__": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "sklearn.linear_model._base": {
  "data": {},
  "type": "module"
 },
 "sklearn.linear_model._base.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "sklearn.linear_model._base.LinearClassifierMixin": {
  "data": {
   "lineno": 257
  },
  "type": "class"
 },
 "sklearn.linear_model._base.LinearClassifierMixin._predict_proba_lr": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": [
    "numpy.vstack",
    "scipy.special.expit"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._base.LinearClassifierMixin.decision_function": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "ValueError",
    "check_array",
    "check_is_fitted",
    "safe_sparse_dot"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._base.LinearClassifierMixin.predict": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": [
    "int",
    "len"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._base.LinearModel": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "abc.ABCMeta",
    "sklearn.linear_model._base._preprocess_data",
    "staticmethod"
   ]
  },
  "type": "class"
 },
 "sklearn.linear_model._base.LinearModel._decision_function": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "check_array",
    "check_is_fitted",
    "safe_sparse_dot"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._base.LinearModel._more_tags": {
  "data": {
   "lineno": 251
  },
  "type": "function"
 },
 "sklearn.linear_model._base.LinearModel._set_intercept": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "numpy.dot"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._base.LinearModel.fit": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._base.LinearModel.predict": {
  "data": {
   "lineno": 224
  },
  "type": "function"
 },
 "sklearn.linear_model._base.LinearRegression": {
  "data": {
   "lineno": 391,
   "symbols_in_volume": [
    "sklearn.linear_model._base.LinearModel"
   ]
  },
  "type": "class"
 },
 "sklearn.linear_model._base.LinearRegression.__init__": {
  "data": {
   "lineno": 482
  },
  "type": "function"
 },
 "sklearn.linear_model._base.LinearRegression.fit": {
  "data": {
   "lineno": 491,
   "symbols_in_volume": [
    "_check_sample_weight",
    "delayed",
    "joblib.Parallel",
    "map",
    "numpy.ravel",
    "numpy.vstack",
    "range",
    "scipy.linalg.lstsq",
    "scipy.optimize.nnls",
    "scipy.sparse.issparse",
    "scipy.sparse.linalg.LinearOperator",
    "sklearn.linear_model._base._rescale_data",
    "sparse_lsqr",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._base.LinearRegression.fit.matvec": {
  "data": {
   "lineno": 546
  },
  "type": "function"
 },
 "sklearn.linear_model._base.LinearRegression.fit.rmatvec": {
  "data": {
   "lineno": 549,
   "symbols_in_volume": [
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._base.Parallel": {
  "data": {
   "shadows": "joblib.Parallel"
  },
  "type": "import"
 },
 "sklearn.linear_model._base.SPARSE_INTERCEPT_DECAY": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "sklearn.linear_model._base.SparseCoefMixin": {
  "data": {
   "lineno": 333
  },
  "type": "class"
 },
 "sklearn.linear_model._base.SparseCoefMixin.densify": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": [
    "check_is_fitted",
    "scipy.sparse.issparse"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._base.SparseCoefMixin.sparsify": {
  "data": {
   "lineno": 359,
   "symbols_in_volume": [
    "check_is_fitted",
    "scipy.sparse.csr_matrix"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._base._pre_fit": {
  "data": {
   "lineno": 578,
   "symbols_in_volume": [
    "UserWarning",
    "hasattr",
    "isinstance",
    "numpy.allclose",
    "numpy.dot",
    "numpy.empty",
    "numpy.find_common_type",
    "numpy.ones",
    "numpy.zeros",
    "scipy.sparse.isspmatrix",
    "sklearn.linear_model._base._preprocess_data",
    "sklearn.linear_model._base._rescale_data",
    "sklearn.linear_model._base.warnings",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._base._preprocess_data": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "check_array",
    "inplace_column_scale",
    "isinstance",
    "mean_variance_axis",
    "numpy.asarray",
    "numpy.average",
    "numpy.ones",
    "numpy.sqrt",
    "numpy.zeros",
    "scipy.sparse.issparse",
    "sklearn.linear_model._base.numbers"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._base._rescale_data": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.full",
    "numpy.sqrt",
    "safe_sparse_dot",
    "scipy.sparse.dia_matrix"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._base.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "sklearn.linear_model._base.expit": {
  "data": {
   "shadows": "scipy.special.expit"
  },
  "type": "import"
 },
 "sklearn.linear_model._base.f_normalize": {
  "data": {
   "shadows": "normalize"
  },
  "type": "import"
 },
 "sklearn.linear_model._base.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "sklearn.linear_model._base.make_dataset": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "ArrayData",
    "CSRData",
    "check_random_state",
    "numpy.ascontiguousarray",
    "numpy.float32",
    "numpy.iinfo",
    "numpy.int32",
    "scipy.sparse.issparse",
    "sklearn.linear_model._base.SPARSE_INTERCEPT_DECAY"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._base.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.linear_model._base.numbers": {
  "data": {
   "shadows": "numbers"
  },
  "type": "import"
 },
 "sklearn.linear_model._base.optimize": {
  "data": {
   "shadows": "scipy.optimize"
  },
  "type": "import"
 },
 "sklearn.linear_model._base.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.linear_model._base.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.linear_model._base.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.linear_model._bayes": {
  "data": {},
  "type": "module"
 },
 "sklearn.linear_model._bayes.ARDRegression": {
  "data": {
   "lineno": 393
  },
  "type": "class"
 },
 "sklearn.linear_model._bayes.ARDRegression.__init__": {
  "data": {
   "lineno": 510
  },
  "type": "function"
 },
 "sklearn.linear_model._bayes.ARDRegression._update_sigma": {
  "data": {
   "lineno": 652,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.eye",
    "scipy.linalg.pinvh"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._bayes.ARDRegression._update_sigma_woodbury": {
  "data": {
   "lineno": 635,
   "symbols_in_volume": [
    "numpy.diag_indices",
    "numpy.dot",
    "numpy.eye",
    "scipy.linalg.pinvh"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._bayes.ARDRegression.fit": {
  "data": {
   "lineno": 528,
   "symbols_in_volume": [
    "bool",
    "fast_logdet",
    "list",
    "math.log",
    "numpy.abs",
    "numpy.array",
    "numpy.copy",
    "numpy.diag",
    "numpy.dot",
    "numpy.finfo",
    "numpy.float64",
    "numpy.log",
    "numpy.ones",
    "numpy.sum",
    "numpy.var",
    "numpy.zeros",
    "print",
    "range",
    "update_coeff",
    "update_sigma"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._bayes.ARDRegression.fit.update_coeff": {
  "data": {
   "lineno": 577,
   "symbols_in_volume": [
    "numpy.linalg.multi_dot"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._bayes.ARDRegression.predict": {
  "data": {
   "lineno": 663,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._bayes.BayesianRidge": {
  "data": {
   "lineno": 23
  },
  "type": "class"
 },
 "sklearn.linear_model._bayes.BayesianRidge.__init__": {
  "data": {
   "lineno": 157
  },
  "type": "function"
 },
 "sklearn.linear_model._bayes.BayesianRidge._log_marginal_likelihood": {
  "data": {
   "lineno": 358,
   "symbols_in_volume": [
    "math.log",
    "numpy.array",
    "numpy.full",
    "numpy.log",
    "numpy.pi",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._bayes.BayesianRidge._update_coef_": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.linalg.multi_dot",
    "numpy.newaxis",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._bayes.BayesianRidge.fit": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "ValueError",
    "_check_sample_weight",
    "_rescale_data",
    "list",
    "numpy.abs",
    "numpy.array",
    "numpy.copy",
    "numpy.dot",
    "numpy.finfo",
    "numpy.float64",
    "numpy.newaxis",
    "numpy.sum",
    "numpy.var",
    "print",
    "range",
    "scipy.linalg.svd",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._bayes.BayesianRidge.predict": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._bayes.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "sklearn.linear_model._bayes.log": {
  "data": {
   "shadows": "math.log"
  },
  "type": "import"
 },
 "sklearn.linear_model._bayes.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.linear_model._bayes.pinvh": {
  "data": {
   "shadows": "scipy.linalg.pinvh"
  },
  "type": "import"
 },
 "sklearn.linear_model._coordinate_descent": {
  "data": {},
  "type": "module"
 },
 "sklearn.linear_model._coordinate_descent.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "sklearn.linear_model._coordinate_descent.ElasticNet": {
  "data": {
   "lineno": 558,
   "symbols_in_volume": [
    "sklearn.linear_model._coordinate_descent.enet_path",
    "staticmethod"
   ]
  },
  "type": "class"
 },
 "sklearn.linear_model._coordinate_descent.ElasticNet.__init__": {
  "data": {
   "lineno": 701
  },
  "type": "function"
 },
 "sklearn.linear_model._coordinate_descent.ElasticNet._decision_function": {
  "data": {
   "lineno": 881,
   "symbols_in_volume": [
    "check_is_fitted",
    "safe_sparse_dot",
    "scipy.sparse.isspmatrix",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._coordinate_descent.ElasticNet.fit": {
  "data": {
   "lineno": 719,
   "symbols_in_volume": [
    "ValueError",
    "_check_sample_weight",
    "_pre_fit",
    "check_array",
    "hasattr",
    "isinstance",
    "numpy.asarray",
    "numpy.float32",
    "numpy.float64",
    "numpy.newaxis",
    "numpy.sum",
    "numpy.zeros",
    "range",
    "scipy.sparse.issparse",
    "sklearn.linear_model._coordinate_descent._set_order",
    "sklearn.linear_model._coordinate_descent.numbers",
    "sklearn.linear_model._coordinate_descent.warnings",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._coordinate_descent.ElasticNet.sparse_coef_": {
  "data": {
   "lineno": 876,
   "symbols_in_volume": [
    "property",
    "scipy.sparse.csr_matrix"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._coordinate_descent.ElasticNetCV": {
  "data": {
   "lineno": 1535,
   "symbols_in_volume": [
    "path",
    "sklearn.linear_model._coordinate_descent.LinearModelCV",
    "sklearn.linear_model._coordinate_descent.enet_path",
    "staticmethod"
   ]
  },
  "type": "class"
 },
 "sklearn.linear_model._coordinate_descent.ElasticNetCV.__init__": {
  "data": {
   "lineno": 1719
  },
  "type": "function"
 },
 "sklearn.linear_model._coordinate_descent.ElasticNetCV._get_estimator": {
  "data": {
   "lineno": 1742,
   "symbols_in_volume": [
    "sklearn.linear_model._coordinate_descent.ElasticNet"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._coordinate_descent.ElasticNetCV._is_multitask": {
  "data": {
   "lineno": 1745
  },
  "type": "function"
 },
 "sklearn.linear_model._coordinate_descent.ElasticNetCV._more_tags": {
  "data": {
   "lineno": 1748
  },
  "type": "function"
 },
 "sklearn.linear_model._coordinate_descent.Lasso": {
  "data": {
   "lineno": 904,
   "symbols_in_volume": [
    "sklearn.linear_model._coordinate_descent.ElasticNet",
    "sklearn.linear_model._coordinate_descent.enet_path",
    "staticmethod"
   ]
  },
  "type": "class"
 },
 "sklearn.linear_model._coordinate_descent.Lasso.__init__": {
  "data": {
   "lineno": 1026,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._coordinate_descent.LassoCV": {
  "data": {
   "lineno": 1359,
   "symbols_in_volume": [
    "path",
    "sklearn.linear_model._coordinate_descent.LinearModelCV",
    "sklearn.linear_model._coordinate_descent.lasso_path",
    "staticmethod"
   ]
  },
  "type": "class"
 },
 "sklearn.linear_model._coordinate_descent.LassoCV.__init__": {
  "data": {
   "lineno": 1512,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._coordinate_descent.LassoCV._get_estimator": {
  "data": {
   "lineno": 1525,
   "symbols_in_volume": [
    "sklearn.linear_model._coordinate_descent.Lasso"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._coordinate_descent.LassoCV._is_multitask": {
  "data": {
   "lineno": 1528
  },
  "type": "function"
 },
 "sklearn.linear_model._coordinate_descent.LassoCV._more_tags": {
  "data": {
   "lineno": 1531
  },
  "type": "function"
 },
 "sklearn.linear_model._coordinate_descent.LinearModelCV": {
  "data": {
   "lineno": 1149,
   "symbols_in_volume": [
    "abc.ABCMeta"
   ]
  },
  "type": "class"
 },
 "sklearn.linear_model._coordinate_descent.LinearModelCV.__init__": {
  "data": {
   "lineno": 1152,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._coordinate_descent.LinearModelCV._get_estimator": {
  "data": {
   "lineno": 1173,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._coordinate_descent.LinearModelCV._is_multitask": {
  "data": {
   "lineno": 1177,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._coordinate_descent.LinearModelCV.fit": {
  "data": {
   "lineno": 1181,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "_joblib_parallel_args",
    "check_cv",
    "column_or_1d",
    "delayed",
    "dict",
    "getattr",
    "hasattr",
    "isinstance",
    "joblib.Parallel",
    "joblib.effective_n_jobs",
    "len",
    "list",
    "numpy.argmin",
    "numpy.asarray",
    "numpy.atleast_1d",
    "numpy.float32",
    "numpy.float64",
    "numpy.inf",
    "numpy.may_share_memory",
    "numpy.mean",
    "numpy.ndarray",
    "numpy.reshape",
    "numpy.rollaxis",
    "numpy.sort",
    "numpy.squeeze",
    "numpy.tile",
    "scipy.sparse.isspmatrix",
    "sklearn.linear_model._coordinate_descent._alpha_grid",
    "sklearn.linear_model._coordinate_descent._path_residuals",
    "str",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._coordinate_descent.MultiTaskElasticNet": {
  "data": {
   "lineno": 1755,
   "symbols_in_volume": [
    "sklearn.linear_model._coordinate_descent.Lasso"
   ]
  },
  "type": "class"
 },
 "sklearn.linear_model._coordinate_descent.MultiTaskElasticNet.__init__": {
  "data": {
   "lineno": 1876
  },
  "type": "function"
 },
 "sklearn.linear_model._coordinate_descent.MultiTaskElasticNet._more_tags": {
  "data": {
   "lineno": 1960
  },
  "type": "function"
 },
 "sklearn.linear_model._coordinate_descent.MultiTaskElasticNet.fit": {
  "data": {
   "lineno": 1891,
   "symbols_in_volume": [
    "ValueError",
    "_preprocess_data",
    "check_random_state",
    "dict",
    "hasattr",
    "numpy.asfortranarray",
    "numpy.float32",
    "numpy.float64",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._coordinate_descent.MultiTaskElasticNetCV": {
  "data": {
   "lineno": 2090,
   "symbols_in_volume": [
    "path",
    "sklearn.linear_model._coordinate_descent.LinearModelCV",
    "sklearn.linear_model._coordinate_descent.enet_path",
    "staticmethod"
   ]
  },
  "type": "class"
 },
 "sklearn.linear_model._coordinate_descent.MultiTaskElasticNetCV.__init__": {
  "data": {
   "lineno": 2257
  },
  "type": "function"
 },
 "sklearn.linear_model._coordinate_descent.MultiTaskElasticNetCV._get_estimator": {
  "data": {
   "lineno": 2278,
   "symbols_in_volume": [
    "sklearn.linear_model._coordinate_descent.MultiTaskElasticNet"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._coordinate_descent.MultiTaskElasticNetCV._is_multitask": {
  "data": {
   "lineno": 2281
  },
  "type": "function"
 },
 "sklearn.linear_model._coordinate_descent.MultiTaskElasticNetCV._more_tags": {
  "data": {
   "lineno": 2284
  },
  "type": "function"
 },
 "sklearn.linear_model._coordinate_descent.MultiTaskLasso": {
  "data": {
   "lineno": 1964,
   "symbols_in_volume": [
    "sklearn.linear_model._coordinate_descent.MultiTaskElasticNet"
   ]
  },
  "type": "class"
 },
 "sklearn.linear_model._coordinate_descent.MultiTaskLasso.__init__": {
  "data": {
   "lineno": 2074
  },
  "type": "function"
 },
 "sklearn.linear_model._coordinate_descent.MultiTaskLassoCV": {
  "data": {
   "lineno": 2288,
   "symbols_in_volume": [
    "path",
    "sklearn.linear_model._coordinate_descent.LinearModelCV",
    "sklearn.linear_model._coordinate_descent.lasso_path",
    "staticmethod"
   ]
  },
  "type": "class"
 },
 "sklearn.linear_model._coordinate_descent.MultiTaskLassoCV.__init__": {
  "data": {
   "lineno": 2438,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._coordinate_descent.MultiTaskLassoCV._get_estimator": {
  "data": {
   "lineno": 2451,
   "symbols_in_volume": [
    "sklearn.linear_model._coordinate_descent.MultiTaskLasso"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._coordinate_descent.MultiTaskLassoCV._is_multitask": {
  "data": {
   "lineno": 2454
  },
  "type": "function"
 },
 "sklearn.linear_model._coordinate_descent.MultiTaskLassoCV._more_tags": {
  "data": {
   "lineno": 2457
  },
  "type": "function"
 },
 "sklearn.linear_model._coordinate_descent.Parallel": {
  "data": {
   "shadows": "joblib.Parallel"
  },
  "type": "import"
 },
 "sklearn.linear_model._coordinate_descent._alpha_grid": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "ValueError",
    "_preprocess_data",
    "check_array",
    "float",
    "len",
    "numpy.empty",
    "numpy.finfo",
    "numpy.log10",
    "numpy.logspace",
    "numpy.newaxis",
    "numpy.sqrt",
    "numpy.sum",
    "safe_sparse_dot",
    "scipy.sparse.isspmatrix"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._coordinate_descent._path_residuals": {
  "data": {
   "lineno": 1042,
   "symbols_in_volume": [
    "_pre_fit",
    "check_array",
    "numpy.atleast_1d",
    "numpy.dot",
    "numpy.flatnonzero",
    "numpy.newaxis",
    "path",
    "safe_sparse_dot",
    "scipy.sparse.issparse"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._coordinate_descent._set_order": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "ValueError",
    "_astype_copy_false",
    "numpy.asarray",
    "scipy.sparse.issparse"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._coordinate_descent.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "sklearn.linear_model._coordinate_descent.cd_fast": {
  "data": {
   "shadows": "_cd_fast"
  },
  "type": "import"
 },
 "sklearn.linear_model._coordinate_descent.effective_n_jobs": {
  "data": {
   "shadows": "joblib.effective_n_jobs"
  },
  "type": "import"
 },
 "sklearn.linear_model._coordinate_descent.enet_path": {
  "data": {
   "lineno": 317,
   "symbols_in_volume": [
    "ValueError",
    "_pre_fit",
    "check_array",
    "check_random_state",
    "enumerate",
    "isinstance",
    "len",
    "numpy.asarray",
    "numpy.asfortranarray",
    "numpy.empty",
    "numpy.float32",
    "numpy.float64",
    "numpy.ndarray",
    "numpy.sort",
    "numpy.zeros",
    "print",
    "scipy.sparse.isspmatrix",
    "sklearn.linear_model._coordinate_descent._alpha_grid",
    "sklearn.linear_model._coordinate_descent.sys"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._coordinate_descent.lasso_path": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "sklearn.linear_model._coordinate_descent.enet_path"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._coordinate_descent.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.linear_model._coordinate_descent.numbers": {
  "data": {
   "shadows": "numbers"
  },
  "type": "import"
 },
 "sklearn.linear_model._coordinate_descent.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.linear_model._coordinate_descent.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "sklearn.linear_model._coordinate_descent.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.linear_model._glm": {
  "data": {},
  "type": "module"
 },
 "sklearn.linear_model._glm.__all__": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "sklearn.linear_model._glm.glm": {
  "data": {},
  "type": "module"
 },
 "sklearn.linear_model._glm.glm.GammaRegressor": {
  "data": {
   "lineno": 473,
   "symbols_in_volume": [
    "sklearn.linear_model._glm.glm.GeneralizedLinearRegressor"
   ]
  },
  "type": "class"
 },
 "sklearn.linear_model._glm.glm.GammaRegressor.__init__": {
  "data": {
   "lineno": 537,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._glm.glm.GammaRegressor.family": {
  "data": {
   "lineno": 549,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._glm.glm.GeneralizedLinearRegressor": {
  "data": {
   "lineno": 51
  },
  "type": "class"
 },
 "sklearn.linear_model._glm.glm.GeneralizedLinearRegressor.__init__": {
  "data": {
   "lineno": 129
  },
  "type": "function"
 },
 "sklearn.linear_model._glm.glm.GeneralizedLinearRegressor._linear_predictor": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "check_array",
    "check_is_fitted",
    "numpy.float32",
    "numpy.float64"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._glm.glm.GeneralizedLinearRegressor._more_tags": {
  "data": {
   "lineno": 378,
   "symbols_in_volume": [
    "ValueError",
    "hasattr",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._glm.glm.GeneralizedLinearRegressor.fit": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "IdentityLink",
    "LogLink",
    "ValueError",
    "_check_optimize_result",
    "_check_sample_weight",
    "bool",
    "check_X_y",
    "float",
    "hasattr",
    "isinstance",
    "link",
    "numpy.all",
    "numpy.array",
    "numpy.average",
    "numpy.concatenate",
    "numpy.finfo",
    "numpy.float32",
    "numpy.float64",
    "numpy.zeros",
    "sklearn.linear_model._glm.glm.numbers"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._glm.glm.GeneralizedLinearRegressor.fit.func": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "link",
    "sklearn.linear_model._glm.glm._y_pred_deviance_derivative"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._glm.glm.GeneralizedLinearRegressor.predict": {
  "data": {
   "lineno": 319
  },
  "type": "function"
 },
 "sklearn.linear_model._glm.glm.GeneralizedLinearRegressor.score": {
  "data": {
   "lineno": 337,
   "symbols_in_volume": [
    "_check_sample_weight",
    "numpy.average"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._glm.glm.PoissonRegressor": {
  "data": {
   "lineno": 391,
   "symbols_in_volume": [
    "sklearn.linear_model._glm.glm.GeneralizedLinearRegressor"
   ]
  },
  "type": "class"
 },
 "sklearn.linear_model._glm.glm.PoissonRegressor.__init__": {
  "data": {
   "lineno": 455,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._glm.glm.PoissonRegressor.family": {
  "data": {
   "lineno": 467,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._glm.glm.TweedieRegressor": {
  "data": {
   "lineno": 555,
   "symbols_in_volume": [
    "sklearn.linear_model._glm.glm.GeneralizedLinearRegressor"
   ]
  },
  "type": "class"
 },
 "sklearn.linear_model._glm.glm.TweedieRegressor.__init__": {
  "data": {
   "lineno": 650,
   "symbols_in_volume": [
    "TweedieDistribution",
    "link",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._glm.glm.TweedieRegressor.family": {
  "data": {
   "lineno": 668,
   "symbols_in_volume": [
    "TweedieDistribution",
    "TypeError",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._glm.glm._safe_lin_pred": {
  "data": {
   "lineno": 30
  },
  "type": "function"
 },
 "sklearn.linear_model._glm.glm._y_pred_deviance_derivative": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "numpy.concatenate",
    "sklearn.linear_model._glm.glm._safe_lin_pred"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._glm.glm.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.linear_model._glm.glm.numbers": {
  "data": {
   "shadows": "numbers"
  },
  "type": "import"
 },
 "sklearn.linear_model._glm.glm.scipy.optimize": {
  "data": {
   "shadows": "scipy.optimize"
  },
  "type": "import"
 },
 "sklearn.linear_model._glm.link": {
  "data": {},
  "type": "module"
 },
 "sklearn.linear_model._glm.link.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "sklearn.linear_model._glm.link.BaseLink": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "abc.ABCMeta"
   ]
  },
  "type": "class"
 },
 "sklearn.linear_model._glm.link.BaseLink.__call__": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._glm.link.BaseLink.derivative": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._glm.link.BaseLink.inverse": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._glm.link.BaseLink.inverse_derivative": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._glm.link.IdentityLink": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "sklearn.linear_model._glm.link.BaseLink"
   ]
  },
  "type": "class"
 },
 "sklearn.linear_model._glm.link.IdentityLink.__call__": {
  "data": {
   "lineno": 67
  },
  "type": "function"
 },
 "sklearn.linear_model._glm.link.IdentityLink.derivative": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "numpy.ones_like"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._glm.link.IdentityLink.inverse": {
  "data": {
   "lineno": 73
  },
  "type": "function"
 },
 "sklearn.linear_model._glm.link.IdentityLink.inverse_derivative": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "numpy.ones_like"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._glm.link.LogLink": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "sklearn.linear_model._glm.link.BaseLink"
   ]
  },
  "type": "class"
 },
 "sklearn.linear_model._glm.link.LogLink.__call__": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "numpy.log"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._glm.link.LogLink.derivative": {
  "data": {
   "lineno": 86
  },
  "type": "function"
 },
 "sklearn.linear_model._glm.link.LogLink.inverse": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "numpy.exp"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._glm.link.LogLink.inverse_derivative": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "numpy.exp"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._glm.link.LogitLink": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "sklearn.linear_model._glm.link.BaseLink"
   ]
  },
  "type": "class"
 },
 "sklearn.linear_model._glm.link.LogitLink.__call__": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "scipy.special.logit"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._glm.link.LogitLink.derivative": {
  "data": {
   "lineno": 102
  },
  "type": "function"
 },
 "sklearn.linear_model._glm.link.LogitLink.inverse": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "scipy.special.expit"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._glm.link.LogitLink.inverse_derivative": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "scipy.special.expit"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._glm.link.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "sklearn.linear_model._glm.link.expit": {
  "data": {
   "shadows": "scipy.special.expit"
  },
  "type": "import"
 },
 "sklearn.linear_model._glm.link.logit": {
  "data": {
   "shadows": "scipy.special.logit"
  },
  "type": "import"
 },
 "sklearn.linear_model._glm.link.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.linear_model._glm.tests": {
  "data": {},
  "type": "module"
 },
 "sklearn.linear_model._glm.tests.test_glm": {
  "data": {},
  "type": "module"
 },
 "sklearn.linear_model._glm.tests.test_glm.ConvergenceWarning": {
  "data": {
   "shadows": "sklearn.exceptions.ConvergenceWarning"
  },
  "type": "import"
 },
 "sklearn.linear_model._glm.tests.test_glm.GammaDistribution": {
  "data": {
   "shadows": "sklearn._loss.glm_distribution.GammaDistribution"
  },
  "type": "import"
 },
 "sklearn.linear_model._glm.tests.test_glm.GammaRegressor": {
  "data": {
   "shadows": "sklearn.linear_model.GammaRegressor"
  },
  "type": "import"
 },
 "sklearn.linear_model._glm.tests.test_glm.GeneralizedLinearRegressor": {
  "data": {
   "shadows": "sklearn.linear_model._glm.GeneralizedLinearRegressor"
  },
  "type": "import"
 },
 "sklearn.linear_model._glm.tests.test_glm.IdentityLink": {
  "data": {
   "shadows": "sklearn.linear_model._glm.link.IdentityLink"
  },
  "type": "import"
 },
 "sklearn.linear_model._glm.tests.test_glm.InverseGaussianDistribution": {
  "data": {
   "shadows": "sklearn._loss.glm_distribution.InverseGaussianDistribution"
  },
  "type": "import"
 },
 "sklearn.linear_model._glm.tests.test_glm.LogLink": {
  "data": {
   "shadows": "sklearn.linear_model._glm.link.LogLink"
  },
  "type": "import"
 },
 "sklearn.linear_model._glm.tests.test_glm.NormalDistribution": {
  "data": {
   "shadows": "sklearn._loss.glm_distribution.NormalDistribution"
  },
  "type": "import"
 },
 "sklearn.linear_model._glm.tests.test_glm.PoissonDistribution": {
  "data": {
   "shadows": "sklearn._loss.glm_distribution.PoissonDistribution"
  },
  "type": "import"
 },
 "sklearn.linear_model._glm.tests.test_glm.PoissonRegressor": {
  "data": {
   "shadows": "sklearn.linear_model.PoissonRegressor"
  },
  "type": "import"
 },
 "sklearn.linear_model._glm.tests.test_glm.Ridge": {
  "data": {
   "shadows": "sklearn.linear_model.Ridge"
  },
  "type": "import"
 },
 "sklearn.linear_model._glm.tests.test_glm.TweedieDistribution": {
  "data": {
   "shadows": "sklearn._loss.glm_distribution.TweedieDistribution"
  },
  "type": "import"
 },
 "sklearn.linear_model._glm.tests.test_glm.TweedieRegressor": {
  "data": {
   "shadows": "sklearn.linear_model.TweedieRegressor"
  },
  "type": "import"
 },
 "sklearn.linear_model._glm.tests.test_glm.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "sklearn.linear_model._glm.tests.test_glm.make_regression": {
  "data": {
   "shadows": "sklearn.datasets.make_regression"
  },
  "type": "import"
 },
 "sklearn.linear_model._glm.tests.test_glm.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.linear_model._glm.tests.test_glm.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.linear_model._glm.tests.test_glm.regression_data": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "sklearn.datasets.make_regression",
    "sklearn.linear_model._glm.tests.test_glm.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._glm.tests.test_glm.test_convergence_warning": {
  "data": {
   "lineno": 370,
   "symbols_in_volume": [
    "sklearn.exceptions.ConvergenceWarning",
    "sklearn.linear_model._glm.GeneralizedLinearRegressor",
    "sklearn.linear_model._glm.tests.test_glm.pytest",
    "sklearn.linear_model._glm.tests.test_glm.regression_data"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._glm.tests.test_glm.test_gamma_regression_family": {
  "data": {
   "lineno": 389,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.linear_model.GammaRegressor",
    "sklearn.linear_model._glm.tests.test_glm.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._glm.tests.test_glm.test_glm_alpha_argument": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "sklearn.linear_model._glm.GeneralizedLinearRegressor",
    "sklearn.linear_model._glm.tests.test_glm.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._glm.tests.test_glm.test_glm_family_argument": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "numpy.array",
    "sklearn._loss.glm_distribution.GammaDistribution",
    "sklearn._loss.glm_distribution.InverseGaussianDistribution",
    "sklearn._loss.glm_distribution.NormalDistribution",
    "sklearn._loss.glm_distribution.PoissonDistribution",
    "sklearn.linear_model._glm.GeneralizedLinearRegressor",
    "sklearn.linear_model._glm.tests.test_glm.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._glm.tests.test_glm.test_glm_fit_intercept_argument": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "sklearn.linear_model._glm.GeneralizedLinearRegressor",
    "sklearn.linear_model._glm.tests.test_glm.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._glm.tests.test_glm.test_glm_identity_regression": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.dot",
    "numpy.testing.assert_allclose",
    "sklearn.linear_model._glm.GeneralizedLinearRegressor",
    "sklearn.linear_model._glm.tests.test_glm.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._glm.tests.test_glm.test_glm_link_argument": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "numpy.array",
    "sklearn.linear_model._glm.GeneralizedLinearRegressor",
    "sklearn.linear_model._glm.link.IdentityLink",
    "sklearn.linear_model._glm.link.LogLink",
    "sklearn.linear_model._glm.tests.test_glm.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._glm.tests.test_glm.test_glm_link_auto": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "isinstance",
    "numpy.array",
    "sklearn.linear_model._glm.GeneralizedLinearRegressor",
    "sklearn.linear_model._glm.link.IdentityLink",
    "sklearn.linear_model._glm.link.LogLink",
    "sklearn.linear_model._glm.tests.test_glm.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._glm.tests.test_glm.test_glm_log_regression": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.dot",
    "numpy.exp",
    "numpy.testing.assert_allclose",
    "sklearn._loss.glm_distribution.GammaDistribution",
    "sklearn._loss.glm_distribution.InverseGaussianDistribution",
    "sklearn._loss.glm_distribution.NormalDistribution",
    "sklearn._loss.glm_distribution.PoissonDistribution",
    "sklearn._loss.glm_distribution.TweedieDistribution",
    "sklearn.linear_model._glm.GeneralizedLinearRegressor",
    "sklearn.linear_model._glm.tests.test_glm.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._glm.tests.test_glm.test_glm_max_iter_argument": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "sklearn.linear_model._glm.GeneralizedLinearRegressor",
    "sklearn.linear_model._glm.tests.test_glm.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._glm.tests.test_glm.test_glm_sample_weight_consistentcy": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "dict",
    "len",
    "numpy.concatenate",
    "numpy.ones",
    "numpy.random.RandomState",
    "numpy.testing.assert_allclose",
    "sklearn.linear_model._glm.GeneralizedLinearRegressor",
    "sklearn.linear_model._glm.tests.test_glm.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._glm.tests.test_glm.test_glm_solver_argument": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "sklearn.linear_model._glm.GeneralizedLinearRegressor",
    "sklearn.linear_model._glm.tests.test_glm.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._glm.tests.test_glm.test_glm_tol_argument": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "sklearn.linear_model._glm.GeneralizedLinearRegressor",
    "sklearn.linear_model._glm.tests.test_glm.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._glm.tests.test_glm.test_glm_warm_start_argument": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "sklearn.linear_model._glm.GeneralizedLinearRegressor",
    "sklearn.linear_model._glm.tests.test_glm.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._glm.tests.test_glm.test_normal_ridge_comparison": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "len",
    "numpy.random.RandomState",
    "numpy.testing.assert_allclose",
    "sklearn.datasets.make_regression",
    "sklearn.linear_model.Ridge",
    "sklearn.linear_model._glm.GeneralizedLinearRegressor",
    "sklearn.linear_model._glm.tests.test_glm.pytest",
    "sklearn.model_selection.train_test_split"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._glm.tests.test_glm.test_poisson_glmnet": {
  "data": {
   "lineno": 345,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.assert_allclose",
    "sklearn.linear_model._glm.GeneralizedLinearRegressor"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._glm.tests.test_glm.test_poisson_regression_family": {
  "data": {
   "lineno": 378,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.linear_model.PoissonRegressor",
    "sklearn.linear_model._glm.tests.test_glm.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._glm.tests.test_glm.test_sample_weights_validation": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.linear_model._glm.GeneralizedLinearRegressor",
    "sklearn.linear_model._glm.tests.test_glm.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._glm.tests.test_glm.test_tags": {
  "data": {
   "lineno": 421,
   "symbols_in_volume": [
    "sklearn.linear_model.GammaRegressor",
    "sklearn.linear_model.PoissonRegressor",
    "sklearn.linear_model.TweedieRegressor",
    "sklearn.linear_model._glm.tests.test_glm.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._glm.tests.test_glm.test_tweedie_regression_family": {
  "data": {
   "lineno": 400,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "sklearn._loss.glm_distribution.TweedieDistribution",
    "sklearn.linear_model.TweedieRegressor",
    "sklearn.linear_model._glm.tests.test_glm.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._glm.tests.test_glm.test_warm_start": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose",
    "sklearn.datasets.make_regression",
    "sklearn.exceptions.ConvergenceWarning",
    "sklearn.linear_model._glm.GeneralizedLinearRegressor",
    "sklearn.linear_model._glm.tests.test_glm.pytest",
    "sklearn.linear_model._glm.tests.test_glm.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._glm.tests.test_glm.train_test_split": {
  "data": {
   "shadows": "sklearn.model_selection.train_test_split"
  },
  "type": "import"
 },
 "sklearn.linear_model._glm.tests.test_glm.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.linear_model._glm.tests.test_link": {
  "data": {
   "symbols_in_volume": [
    "sklearn.linear_model._glm.link.IdentityLink",
    "sklearn.linear_model._glm.link.LogLink",
    "sklearn.linear_model._glm.link.LogitLink"
   ]
  },
  "type": "module"
 },
 "sklearn.linear_model._glm.tests.test_link.IdentityLink": {
  "data": {
   "shadows": "sklearn.linear_model._glm.link.IdentityLink"
  },
  "type": "import"
 },
 "sklearn.linear_model._glm.tests.test_link.LINK_FUNCTIONS": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "sklearn.linear_model._glm.tests.test_link.LogLink": {
  "data": {
   "shadows": "sklearn.linear_model._glm.link.LogLink"
  },
  "type": "import"
 },
 "sklearn.linear_model._glm.tests.test_link.LogitLink": {
  "data": {
   "shadows": "sklearn.linear_model._glm.link.LogitLink"
  },
  "type": "import"
 },
 "sklearn.linear_model._glm.tests.test_link.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "sklearn.linear_model._glm.tests.test_link.check_grad": {
  "data": {
   "shadows": "scipy.optimize.check_grad"
  },
  "type": "import"
 },
 "sklearn.linear_model._glm.tests.test_link.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.linear_model._glm.tests.test_link.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.linear_model._glm.tests.test_link.test_link_derivative": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "Link",
    "abs",
    "link",
    "link.derivative",
    "link.inverse",
    "link.inverse_derivative",
    "numpy.random.RandomState",
    "scipy.optimize.check_grad",
    "sklearn.linear_model._glm.tests.test_link.LINK_FUNCTIONS",
    "sklearn.linear_model._glm.tests.test_link.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._glm.tests.test_link.test_link_properties": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "Link",
    "isinstance",
    "link",
    "link.derivative",
    "link.inverse",
    "link.inverse_derivative",
    "numpy.random.RandomState",
    "numpy.testing.assert_allclose",
    "sklearn.linear_model._glm.link.LogitLink",
    "sklearn.linear_model._glm.tests.test_link.LINK_FUNCTIONS",
    "sklearn.linear_model._glm.tests.test_link.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._huber": {
  "data": {},
  "type": "module"
 },
 "sklearn.linear_model._huber.HuberRegressor": {
  "data": {
   "lineno": 125
  },
  "type": "class"
 },
 "sklearn.linear_model._huber.HuberRegressor.__init__": {
  "data": {
   "lineno": 226
  },
  "type": "function"
 },
 "sklearn.linear_model._huber.HuberRegressor.fit": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "ValueError",
    "_check_optimize_result",
    "_check_sample_weight",
    "hasattr",
    "numpy.abs",
    "numpy.concatenate",
    "numpy.finfo",
    "numpy.float32",
    "numpy.float64",
    "numpy.inf",
    "numpy.tile",
    "numpy.zeros",
    "safe_sparse_dot",
    "scipy.optimize.minimize",
    "sklearn.linear_model._huber._huber_loss_and_gradient"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._huber._huber_loss_and_gradient": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "axis0_safe_slice",
    "numpy.abs",
    "numpy.count_nonzero",
    "numpy.dot",
    "numpy.ones_like",
    "numpy.sum",
    "numpy.zeros",
    "safe_sparse_dot"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._huber.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.linear_model._huber.optimize": {
  "data": {
   "shadows": "scipy.optimize"
  },
  "type": "import"
 },
 "sklearn.linear_model._logistic": {
  "data": {},
  "type": "module"
 },
 "sklearn.linear_model._logistic.LogisticRegression": {
  "data": {
   "lineno": 1012
  },
  "type": "class"
 },
 "sklearn.linear_model._logistic.LogisticRegression.__init__": {
  "data": {
   "lineno": 1254
  },
  "type": "function"
 },
 "sklearn.linear_model._logistic.LogisticRegression.fit": {
  "data": {
   "lineno": 1277,
   "symbols_in_volume": [
    "ValueError",
    "_fit_liblinear",
    "_joblib_parallel_args",
    "check_classification_targets",
    "delayed",
    "getattr",
    "int",
    "isinstance",
    "joblib.Parallel",
    "joblib.effective_n_jobs",
    "len",
    "numpy.append",
    "numpy.array",
    "numpy.asarray",
    "numpy.float32",
    "numpy.float64",
    "numpy.inf",
    "numpy.int32",
    "numpy.newaxis",
    "numpy.unique",
    "numpy.zeros",
    "path_func",
    "row_norms",
    "sklearn.linear_model._logistic._check_multi_class",
    "sklearn.linear_model._logistic._check_solver",
    "sklearn.linear_model._logistic._logistic_regression_path",
    "sklearn.linear_model._logistic.numbers",
    "sklearn.linear_model._logistic.warnings",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._logistic.LogisticRegression.predict_log_proba": {
  "data": {
   "lineno": 1480,
   "symbols_in_volume": [
    "numpy.log"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._logistic.LogisticRegression.predict_proba": {
  "data": {
   "lineno": 1437,
   "symbols_in_volume": [
    "check_is_fitted",
    "numpy.c_",
    "softmax",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._logistic.LogisticRegressionCV": {
  "data": {
   "lineno": 1502,
   "symbols_in_volume": [
    "sklearn.linear_model._logistic.LogisticRegression"
   ]
  },
  "type": "class"
 },
 "sklearn.linear_model._logistic.LogisticRegressionCV.__init__": {
  "data": {
   "lineno": 1745,
   "symbols_in_volume": [
    "scoring"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._logistic.LogisticRegressionCV._more_tags": {
  "data": {
   "lineno": 2090
  },
  "type": "function"
 },
 "sklearn.linear_model._logistic.LogisticRegressionCV.fit": {
  "data": {
   "lineno": 1769,
   "symbols_in_volume": [
    "LabelEncoder",
    "ValueError",
    "_joblib_parallel_args",
    "any",
    "check_classification_targets",
    "check_cv",
    "compute_class_weight",
    "delayed",
    "dict",
    "enumerate",
    "isinstance",
    "joblib.Parallel",
    "len",
    "list",
    "max",
    "numpy.arange",
    "numpy.argmax",
    "numpy.asarray",
    "numpy.empty",
    "numpy.float64",
    "numpy.mean",
    "numpy.reshape",
    "numpy.swapaxes",
    "numpy.tile",
    "numpy.transpose",
    "numpy.zeros",
    "path_func",
    "range",
    "row_norms",
    "sklearn.linear_model._logistic._check_multi_class",
    "sklearn.linear_model._logistic._check_solver",
    "sklearn.linear_model._logistic._log_reg_scoring_path",
    "sklearn.linear_model._logistic._logistic_regression_path",
    "sklearn.linear_model._logistic.numbers",
    "sklearn.linear_model._logistic.warnings",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._logistic.LogisticRegressionCV.score": {
  "data": {
   "lineno": 2064,
   "symbols_in_volume": [
    "get_scorer",
    "scoring"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._logistic.Parallel": {
  "data": {
   "shadows": "joblib.Parallel"
  },
  "type": "import"
 },
 "sklearn.linear_model._logistic._LOGISTIC_SOLVER_CONVERGENCE_MSG": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "sklearn.linear_model._logistic._check_multi_class": {
  "data": {
   "lineno": 461,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._logistic._check_solver": {
  "data": {
   "lineno": 431,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._logistic._intercept_dot": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "safe_sparse_dot"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._logistic._log_reg_scoring_path": {
  "data": {
   "lineno": 823,
   "symbols_in_volume": [
    "ValueError",
    "_check_sample_weight",
    "get_scorer",
    "list",
    "numpy.array",
    "numpy.float64",
    "numpy.newaxis",
    "numpy.ones",
    "numpy.unique",
    "scoring",
    "sklearn.linear_model._logistic.LogisticRegression",
    "sklearn.linear_model._logistic._logistic_regression_path"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._logistic._logistic_grad_hess": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.empty_like",
    "numpy.newaxis",
    "numpy.ones",
    "numpy.squeeze",
    "safe_sparse_dot",
    "scipy.sparse.dia_matrix",
    "scipy.sparse.issparse",
    "scipy.special.expit",
    "sklearn.linear_model._logistic._intercept_dot"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._logistic._logistic_grad_hess.Hs": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "numpy.empty_like"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._logistic._logistic_loss": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "log_logistic",
    "numpy.dot",
    "numpy.ones",
    "numpy.sum",
    "sklearn.linear_model._logistic._intercept_dot"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._logistic._logistic_loss_and_grad": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "log_logistic",
    "numpy.dot",
    "numpy.empty_like",
    "numpy.ones",
    "numpy.sum",
    "safe_sparse_dot",
    "scipy.special.expit",
    "sklearn.linear_model._logistic._intercept_dot"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._logistic._logistic_regression_path": {
  "data": {
   "lineno": 478,
   "symbols_in_volume": [
    "LabelBinarizer",
    "LabelEncoder",
    "ValueError",
    "_check_optimize_result",
    "_check_sample_weight",
    "_fit_liblinear",
    "_newton_cg",
    "check_array",
    "check_consistent_length",
    "check_random_state",
    "compute_class_weight",
    "dict",
    "enumerate",
    "int",
    "isinstance",
    "len",
    "list",
    "max",
    "numpy.array",
    "numpy.concatenate",
    "numpy.expand_dims",
    "numpy.float64",
    "numpy.hstack",
    "numpy.int32",
    "numpy.logspace",
    "numpy.newaxis",
    "numpy.ones",
    "numpy.reshape",
    "numpy.searchsorted",
    "numpy.unique",
    "numpy.zeros",
    "sag_solver",
    "scipy.optimize.minimize",
    "sklearn.linear_model._logistic._LOGISTIC_SOLVER_CONVERGENCE_MSG",
    "sklearn.linear_model._logistic._check_multi_class",
    "sklearn.linear_model._logistic._check_solver",
    "sklearn.linear_model._logistic._logistic_grad_hess",
    "sklearn.linear_model._logistic._logistic_loss",
    "sklearn.linear_model._logistic._logistic_loss_and_grad",
    "sklearn.linear_model._logistic._multinomial_grad_hess",
    "sklearn.linear_model._logistic.numbers"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._logistic._logistic_regression_path.func": {
  "data": {
   "lineno": 738,
   "symbols_in_volume": [
    "sklearn.linear_model._logistic._multinomial_loss"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._logistic._logistic_regression_path.grad": {
  "data": {
   "lineno": 748,
   "symbols_in_volume": [
    "sklearn.linear_model._logistic._logistic_loss_and_grad"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._logistic._multinomial_grad_hess": {
  "data": {
   "lineno": 358,
   "symbols_in_volume": [
    "numpy.newaxis",
    "sklearn.linear_model._logistic._multinomial_loss_grad"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._logistic._multinomial_grad_hess.hessp": {
  "data": {
   "lineno": 407,
   "symbols_in_volume": [
    "bool",
    "numpy.newaxis",
    "numpy.zeros",
    "safe_sparse_dot"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._logistic._multinomial_loss": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "numpy.exp",
    "numpy.newaxis",
    "safe_sparse_dot",
    "scipy.special.logsumexp",
    "squared_norm"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._logistic._multinomial_loss_grad": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "bool",
    "numpy.newaxis",
    "numpy.zeros",
    "safe_sparse_dot",
    "sklearn.linear_model._logistic._multinomial_loss"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._logistic.effective_n_jobs": {
  "data": {
   "shadows": "joblib.effective_n_jobs"
  },
  "type": "import"
 },
 "sklearn.linear_model._logistic.expit": {
  "data": {
   "shadows": "scipy.special.expit"
  },
  "type": "import"
 },
 "sklearn.linear_model._logistic.logsumexp": {
  "data": {
   "shadows": "scipy.special.logsumexp"
  },
  "type": "import"
 },
 "sklearn.linear_model._logistic.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.linear_model._logistic.numbers": {
  "data": {
   "shadows": "numbers"
  },
  "type": "import"
 },
 "sklearn.linear_model._logistic.optimize": {
  "data": {
   "shadows": "scipy.optimize"
  },
  "type": "import"
 },
 "sklearn.linear_model._logistic.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.linear_model._logistic.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.linear_model._omp": {
  "data": {},
  "type": "module"
 },
 "sklearn.linear_model._omp.OrthogonalMatchingPursuit": {
  "data": {
   "lineno": 547
  },
  "type": "class"
 },
 "sklearn.linear_model._omp.OrthogonalMatchingPursuit.__init__": {
  "data": {
   "lineno": 629
  },
  "type": "function"
 },
 "sklearn.linear_model._omp.OrthogonalMatchingPursuit.fit": {
  "data": {
   "lineno": 638,
   "symbols_in_volume": [
    "_pre_fit",
    "int",
    "max",
    "numpy.newaxis",
    "numpy.sum",
    "sklearn.linear_model._omp.orthogonal_mp",
    "sklearn.linear_model._omp.orthogonal_mp_gram"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._omp.OrthogonalMatchingPursuitCV": {
  "data": {
   "lineno": 767
  },
  "type": "class"
 },
 "sklearn.linear_model._omp.OrthogonalMatchingPursuitCV.__init__": {
  "data": {
   "lineno": 867
  },
  "type": "function"
 },
 "sklearn.linear_model._omp.OrthogonalMatchingPursuitCV.fit": {
  "data": {
   "lineno": 878,
   "symbols_in_volume": [
    "as_float_array",
    "check_cv",
    "delayed",
    "int",
    "joblib.Parallel",
    "max",
    "min",
    "numpy.argmin",
    "numpy.array",
    "sklearn.linear_model._omp.OrthogonalMatchingPursuit",
    "sklearn.linear_model._omp._omp_path_residues"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._omp.Parallel": {
  "data": {
   "shadows": "joblib.Parallel"
  },
  "type": "import"
 },
 "sklearn.linear_model._omp._cholesky_omp": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "RuntimeWarning",
    "math.sqrt",
    "nrm2",
    "numpy.abs",
    "numpy.arange",
    "numpy.argmax",
    "numpy.asfortranarray",
    "numpy.dot",
    "numpy.empty",
    "numpy.empty_like",
    "numpy.finfo",
    "potrs",
    "scipy.linalg.get_blas_funcs",
    "scipy.linalg.lapack.get_lapack_funcs",
    "scipy.linalg.norm",
    "scipy.linalg.solve_triangular",
    "sklearn.linear_model._omp.premature",
    "sklearn.linear_model._omp.warnings",
    "swap"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._omp._gram_omp": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "RuntimeWarning",
    "abs",
    "len",
    "math.sqrt",
    "nrm2",
    "numpy.abs",
    "numpy.arange",
    "numpy.argmax",
    "numpy.asfortranarray",
    "numpy.dot",
    "numpy.empty",
    "numpy.empty_like",
    "numpy.finfo",
    "numpy.inner",
    "potrs",
    "scipy.linalg.get_blas_funcs",
    "scipy.linalg.lapack.get_lapack_funcs",
    "scipy.linalg.solve_triangular",
    "sklearn.linear_model._omp.premature",
    "sklearn.linear_model._omp.warnings",
    "swap"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._omp._omp_path_residues": {
  "data": {
   "lineno": 690,
   "symbols_in_volume": [
    "as_float_array",
    "numpy.dot",
    "numpy.flatnonzero",
    "numpy.newaxis",
    "numpy.sqrt",
    "numpy.sum",
    "sklearn.linear_model._omp.orthogonal_mp"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._omp.get_lapack_funcs": {
  "data": {
   "shadows": "scipy.linalg.lapack.get_lapack_funcs"
  },
  "type": "import"
 },
 "sklearn.linear_model._omp.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "sklearn.linear_model._omp.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.linear_model._omp.orthogonal_mp": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "ValueError",
    "check_array",
    "enumerate",
    "int",
    "len",
    "max",
    "numpy.asfortranarray",
    "numpy.dot",
    "numpy.squeeze",
    "numpy.sum",
    "numpy.zeros",
    "range",
    "sklearn.linear_model._omp._cholesky_omp",
    "sklearn.linear_model._omp.orthogonal_mp_gram"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._omp.orthogonal_mp_gram": {
  "data": {
   "lineno": 411,
   "symbols_in_volume": [
    "ValueError",
    "check_array",
    "enumerate",
    "int",
    "len",
    "numpy.asarray",
    "numpy.newaxis",
    "numpy.squeeze",
    "numpy.zeros",
    "range",
    "sklearn.linear_model._omp._gram_omp"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._omp.premature": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "sklearn.linear_model._omp.sqrt": {
  "data": {
   "shadows": "math.sqrt"
  },
  "type": "import"
 },
 "sklearn.linear_model._omp.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.linear_model._passive_aggressive": {
  "data": {},
  "type": "module"
 },
 "sklearn.linear_model._passive_aggressive.PassiveAggressiveClassifier": {
  "data": {
   "lineno": 10
  },
  "type": "class"
 },
 "sklearn.linear_model._passive_aggressive.PassiveAggressiveClassifier.__init__": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._passive_aggressive.PassiveAggressiveClassifier.fit": {
  "data": {
   "lineno": 233
  },
  "type": "function"
 },
 "sklearn.linear_model._passive_aggressive.PassiveAggressiveClassifier.partial_fit": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._passive_aggressive.PassiveAggressiveRegressor": {
  "data": {
   "lineno": 261
  },
  "type": "class"
 },
 "sklearn.linear_model._passive_aggressive.PassiveAggressiveRegressor.__init__": {
  "data": {
   "lineno": 394,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._passive_aggressive.PassiveAggressiveRegressor.fit": {
  "data": {
   "lineno": 443
  },
  "type": "function"
 },
 "sklearn.linear_model._passive_aggressive.PassiveAggressiveRegressor.partial_fit": {
  "data": {
   "lineno": 420
  },
  "type": "function"
 },
 "sklearn.linear_model._perceptron": {
  "data": {},
  "type": "module"
 },
 "sklearn.linear_model._perceptron.Perceptron": {
  "data": {
   "lineno": 8
  },
  "type": "class"
 },
 "sklearn.linear_model._perceptron.Perceptron.__init__": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._ransac": {
  "data": {
   "symbols_in_volume": [
    "numpy.spacing"
   ]
  },
  "type": "module"
 },
 "sklearn.linear_model._ransac.RANSACRegressor": {
  "data": {
   "lineno": 57
  },
  "type": "class"
 },
 "sklearn.linear_model._ransac.RANSACRegressor.__init__": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "numpy.inf"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._ransac.RANSACRegressor._more_tags": {
  "data": {
   "lineno": 506
  },
  "type": "function"
 },
 "sklearn.linear_model._ransac.RANSACRegressor.fit": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "LinearRegression",
    "ValueError",
    "_check_sample_weight",
    "callable",
    "check_consistent_length",
    "check_random_state",
    "clone",
    "dict",
    "has_fit_parameter",
    "loss_function",
    "min",
    "numpy.abs",
    "numpy.arange",
    "numpy.ceil",
    "numpy.inf",
    "numpy.median",
    "numpy.sum",
    "sample_without_replacement",
    "sklearn.linear_model._ransac._dynamic_max_trials",
    "sklearn.linear_model._ransac.warnings",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._ransac.RANSACRegressor.predict": {
  "data": {
   "lineno": 466,
   "symbols_in_volume": [
    "check_is_fitted"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._ransac.RANSACRegressor.score": {
  "data": {
   "lineno": 484,
   "symbols_in_volume": [
    "check_is_fitted"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._ransac._EPSILON": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "sklearn.linear_model._ransac._dynamic_max_trials": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "abs",
    "float",
    "max",
    "numpy.ceil",
    "numpy.log",
    "sklearn.linear_model._ransac._EPSILON"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._ransac.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.linear_model._ransac.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.linear_model._ridge": {
  "data": {},
  "type": "module"
 },
 "sklearn.linear_model._ridge.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "sklearn.linear_model._ridge.Ridge": {
  "data": {
   "lineno": 603,
   "symbols_in_volume": [
    "sklearn.linear_model._ridge._BaseRidge"
   ]
  },
  "type": "class"
 },
 "sklearn.linear_model._ridge.Ridge.__init__": {
  "data": {
   "lineno": 733,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._ridge.Ridge.fit": {
  "data": {
   "lineno": 743,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._ridge.RidgeCV": {
  "data": {
   "lineno": 1668,
   "symbols_in_volume": [
    "sklearn.linear_model._ridge._BaseRidgeCV"
   ]
  },
  "type": "class"
 },
 "sklearn.linear_model._ridge.RidgeClassifier": {
  "data": {
   "lineno": 765,
   "symbols_in_volume": [
    "sklearn.linear_model._ridge._BaseRidge"
   ]
  },
  "type": "class"
 },
 "sklearn.linear_model._ridge.RidgeClassifier.__init__": {
  "data": {
   "lineno": 891,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._ridge.RidgeClassifier.classes_": {
  "data": {
   "lineno": 948,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._ridge.RidgeClassifier.fit": {
  "data": {
   "lineno": 901,
   "symbols_in_volume": [
    "LabelBinarizer",
    "ValueError",
    "_check_sample_weight",
    "column_or_1d",
    "compute_sample_weight",
    "scipy.sparse.issparse",
    "sklearn.linear_model._ridge._get_valid_accept_sparse",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._ridge.RidgeClassifierCV": {
  "data": {
   "lineno": 1798,
   "symbols_in_volume": [
    "sklearn.linear_model._ridge._BaseRidgeCV"
   ]
  },
  "type": "class"
 },
 "sklearn.linear_model._ridge.RidgeClassifierCV.__init__": {
  "data": {
   "lineno": 1913,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._ridge.RidgeClassifierCV._more_tags": {
  "data": {
   "lineno": 1965
  },
  "type": "function"
 },
 "sklearn.linear_model._ridge.RidgeClassifierCV.classes_": {
  "data": {
   "lineno": 1961,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._ridge.RidgeClassifierCV.fit": {
  "data": {
   "lineno": 1922,
   "symbols_in_volume": [
    "LabelBinarizer",
    "_check_sample_weight",
    "column_or_1d",
    "compute_sample_weight",
    "sklearn.linear_model._ridge._BaseRidgeCV"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._ridge._BaseRidge": {
  "data": {
   "lineno": 521,
   "symbols_in_volume": [
    "abc.ABCMeta"
   ]
  },
  "type": "class"
 },
 "sklearn.linear_model._ridge._BaseRidge.__init__": {
  "data": {
   "lineno": 522,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._ridge._BaseRidge.fit": {
  "data": {
   "lineno": 536,
   "symbols_in_volume": [
    "ValueError",
    "_check_sample_weight",
    "numpy.float32",
    "numpy.float64",
    "scipy.sparse.issparse",
    "sklearn.linear_model._ridge._get_valid_accept_sparse",
    "sklearn.linear_model._ridge._ridge_regression",
    "sklearn.linear_model._ridge.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._ridge._BaseRidgeCV": {
  "data": {
   "lineno": 1584
  },
  "type": "class"
 },
 "sklearn.linear_model._ridge._BaseRidgeCV.__init__": {
  "data": {
   "lineno": 1585,
   "symbols_in_volume": [
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._ridge._BaseRidgeCV.fit": {
  "data": {
   "lineno": 1599,
   "symbols_in_volume": [
    "GridSearchCV",
    "ValueError",
    "is_classifier",
    "model",
    "scipy.sparse.issparse",
    "sklearn.linear_model._ridge.Ridge",
    "sklearn.linear_model._ridge.RidgeClassifier",
    "sklearn.linear_model._ridge._RidgeGCV"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._ridge._IdentityClassifier": {
  "data": {
   "lineno": 1063
  },
  "type": "class"
 },
 "sklearn.linear_model._ridge._IdentityClassifier.__init__": {
  "data": {
   "lineno": 1069
  },
  "type": "function"
 },
 "sklearn.linear_model._ridge._IdentityClassifier.decision_function": {
  "data": {
   "lineno": 1072
  },
  "type": "function"
 },
 "sklearn.linear_model._ridge._IdentityRegressor": {
  "data": {
   "lineno": 1053
  },
  "type": "class"
 },
 "sklearn.linear_model._ridge._IdentityRegressor.decision_function": {
  "data": {
   "lineno": 1056
  },
  "type": "function"
 },
 "sklearn.linear_model._ridge._IdentityRegressor.predict": {
  "data": {
   "lineno": 1059
  },
  "type": "function"
 },
 "sklearn.linear_model._ridge._RidgeGCV": {
  "data": {
   "lineno": 1076
  },
  "type": "class"
 },
 "sklearn.linear_model._ridge._RidgeGCV.__init__": {
  "data": {
   "lineno": 1116,
   "symbols_in_volume": [
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._ridge._RidgeGCV._compute_covariance": {
  "data": {
   "lineno": 1195,
   "symbols_in_volume": [
    "mean_variance_axis",
    "numpy.outer",
    "numpy.zeros",
    "safe_sparse_dot",
    "scipy.sparse.dia_matrix"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._ridge._RidgeGCV._compute_gram": {
  "data": {
   "lineno": 1145,
   "symbols_in_volume": [
    "mean_variance_axis",
    "numpy.dot",
    "numpy.outer",
    "numpy.zeros",
    "safe_sparse_dot",
    "scipy.sparse.dia_matrix",
    "scipy.sparse.issparse"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._ridge._RidgeGCV._decomp_diag": {
  "data": {
   "lineno": 1132,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._ridge._RidgeGCV._diag_dot": {
  "data": {
   "lineno": 1137,
   "symbols_in_volume": [
    "len",
    "numpy.newaxis",
    "slice",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._ridge._RidgeGCV._eigen_decompose_covariance": {
  "data": {
   "lineno": 1315,
   "symbols_in_volume": [
    "max",
    "numpy.empty",
    "scipy.sparse.linalg.eigh"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._ridge._RidgeGCV._eigen_decompose_gram": {
  "data": {
   "lineno": 1278,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.outer",
    "scipy.sparse.linalg.eigh"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._ridge._RidgeGCV._solve_eigen_covariance": {
  "data": {
   "lineno": 1387
  },
  "type": "function"
 },
 "sklearn.linear_model._ridge._RidgeGCV._solve_eigen_covariance_intercept": {
  "data": {
   "lineno": 1357,
   "symbols_in_volume": [
    "len",
    "numpy.newaxis",
    "numpy.zeros",
    "sklearn.linear_model._ridge._X_CenterStackOp",
    "sklearn.linear_model._ridge._find_smallest_angle"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._ridge._RidgeGCV._solve_eigen_covariance_no_intercept": {
  "data": {
   "lineno": 1340,
   "symbols_in_volume": [
    "len",
    "numpy.newaxis",
    "safe_sparse_dot"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._ridge._RidgeGCV._solve_eigen_gram": {
  "data": {
   "lineno": 1292,
   "symbols_in_volume": [
    "len",
    "numpy.dot",
    "numpy.linalg.norm",
    "numpy.newaxis",
    "sklearn.linear_model._ridge._find_smallest_angle"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._ridge._RidgeGCV._solve_svd_design_matrix": {
  "data": {
   "lineno": 1414,
   "symbols_in_volume": [
    "len",
    "numpy.dot",
    "numpy.linalg.norm",
    "numpy.newaxis",
    "sklearn.linear_model._ridge._find_smallest_angle"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._ridge._RidgeGCV._sparse_multidot_diag": {
  "data": {
   "lineno": 1240,
   "symbols_in_volume": [
    "min",
    "numpy.empty",
    "range",
    "slice"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._ridge._RidgeGCV._svd_decompose_design_matrix": {
  "data": {
   "lineno": 1400,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.hstack",
    "numpy.zeros",
    "scipy.sparse.linalg.svd"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._ridge._RidgeGCV.fit": {
  "data": {
   "lineno": 1435,
   "symbols_in_volume": [
    "ValueError",
    "_check_sample_weight",
    "_rescale_data",
    "check_scoring",
    "decompose",
    "enumerate",
    "float",
    "len",
    "numpy.any",
    "numpy.arange",
    "numpy.array",
    "numpy.atleast_1d",
    "numpy.empty",
    "numpy.float64",
    "numpy.full",
    "numpy.ndim",
    "numpy.ones",
    "numpy.sqrt",
    "range",
    "safe_sparse_dot",
    "scipy.sparse.issparse",
    "scorer",
    "sklearn.linear_model._ridge._IdentityClassifier",
    "sklearn.linear_model._ridge._IdentityRegressor",
    "sklearn.linear_model._ridge._check_gcv_mode",
    "solve"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._ridge._XT_CenterStackOp": {
  "data": {
   "lineno": 1017,
   "symbols_in_volume": [
    "scipy.sparse.linalg.LinearOperator"
   ]
  },
  "type": "class"
 },
 "sklearn.linear_model._ridge._XT_CenterStackOp.__init__": {
  "data": {
   "lineno": 1024,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._ridge._XT_CenterStackOp._matmat": {
  "data": {
   "lineno": 1042,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.empty",
    "safe_sparse_dot"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._ridge._XT_CenterStackOp._matvec": {
  "data": {
   "lineno": 1031,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.empty",
    "safe_sparse_dot"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._ridge._X_CenterStackOp": {
  "data": {
   "lineno": 987,
   "symbols_in_volume": [
    "scipy.sparse.linalg.LinearOperator"
   ]
  },
  "type": "class"
 },
 "sklearn.linear_model._ridge._X_CenterStackOp.__init__": {
  "data": {
   "lineno": 994,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._ridge._X_CenterStackOp._matmat": {
  "data": {
   "lineno": 1007,
   "symbols_in_volume": [
    "safe_sparse_dot"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._ridge._X_CenterStackOp._matvec": {
  "data": {
   "lineno": 1001,
   "symbols_in_volume": [
    "safe_sparse_dot"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._ridge._X_CenterStackOp._transpose": {
  "data": {
   "lineno": 1013,
   "symbols_in_volume": [
    "sklearn.linear_model._ridge._XT_CenterStackOp"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._ridge._check_gcv_mode": {
  "data": {
   "lineno": 953,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._ridge._find_smallest_angle": {
  "data": {
   "lineno": 969,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.argmax"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._ridge._get_valid_accept_sparse": {
  "data": {
   "lineno": 231
  },
  "type": "function"
 },
 "sklearn.linear_model._ridge._ridge_regression": {
  "data": {
   "lineno": 380,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "_check_sample_weight",
    "_rescale_data",
    "check_array",
    "check_consistent_length",
    "enumerate",
    "int",
    "numpy.asarray",
    "numpy.empty",
    "numpy.float32",
    "numpy.float64",
    "numpy.int32",
    "numpy.repeat",
    "numpy.zeros",
    "row_norms",
    "safe_sparse_dot",
    "sag_solver",
    "scipy.sparse.issparse",
    "scipy.sparse.linalg.LinAlgError",
    "sklearn.linear_model._ridge._get_valid_accept_sparse",
    "sklearn.linear_model._ridge._solve_cholesky",
    "sklearn.linear_model._ridge._solve_cholesky_kernel",
    "sklearn.linear_model._ridge._solve_lsqr",
    "sklearn.linear_model._ridge._solve_sparse_cg",
    "sklearn.linear_model._ridge._solve_svd",
    "str",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._ridge._solve_cholesky": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "len",
    "numpy.array_equal",
    "numpy.empty",
    "safe_sparse_dot",
    "scipy.sparse.linalg.solve",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._ridge._solve_cholesky_kernel": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "isinstance",
    "numpy.atleast_1d",
    "numpy.empty",
    "numpy.linalg.LinAlgError",
    "numpy.ndarray",
    "numpy.newaxis",
    "numpy.outer",
    "numpy.sqrt",
    "scipy.sparse.linalg.lstsq",
    "scipy.sparse.linalg.solve",
    "sklearn.linear_model._ridge.warnings",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._ridge._solve_lsqr": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "numpy.empty",
    "numpy.int32",
    "numpy.sqrt",
    "range",
    "scipy.sparse.linalg.lsqr"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._ridge._solve_sparse_cg": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "_get_rescaled_operator",
    "create_mv",
    "numpy.empty",
    "range",
    "scipy.sparse.linalg.LinearOperator",
    "scipy.sparse.linalg.aslinearoperator",
    "scipy.sparse.linalg.cg",
    "sklearn.linear_model._ridge.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._ridge._solve_sparse_cg._get_rescaled_operator": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "scipy.sparse.linalg.LinearOperator"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._ridge._solve_sparse_cg._get_rescaled_operator.matvec": {
  "data": {
   "lineno": 45
  },
  "type": "function"
 },
 "sklearn.linear_model._ridge._solve_sparse_cg._get_rescaled_operator.rmatvec": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._ridge._solve_sparse_cg.create_mv": {
  "data": {
   "lineno": 71
  },
  "type": "function"
 },
 "sklearn.linear_model._ridge._solve_sparse_cg.create_mv._mv": {
  "data": {
   "lineno": 72
  },
  "type": "function"
 },
 "sklearn.linear_model._ridge._solve_svd": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.newaxis",
    "numpy.zeros",
    "scipy.sparse.linalg.svd"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._ridge.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "sklearn.linear_model._ridge.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "sklearn.linear_model._ridge.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.linear_model._ridge.ridge_regression": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "sklearn.linear_model._ridge._ridge_regression"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._ridge.sp_linalg": {
  "data": {
   "shadows": "scipy.sparse.linalg"
  },
  "type": "import"
 },
 "sklearn.linear_model._ridge.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.linear_model._ridge.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.linear_model._sag": {
  "data": {},
  "type": "module"
 },
 "sklearn.linear_model._sag.get_auto_step_size": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "min"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._sag.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.linear_model._sag.sag_solver": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "ZeroDivisionError",
    "_check_sample_weight",
    "check_array",
    "float",
    "int",
    "make_dataset",
    "numpy.float32",
    "numpy.float64",
    "numpy.int32",
    "numpy.vstack",
    "numpy.zeros",
    "row_norms",
    "sag",
    "sklearn.linear_model._sag.get_auto_step_size",
    "sklearn.linear_model._sag.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._sag.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.linear_model._stochastic_gradient": {
  "data": {
   "symbols_in_volume": [
    "numpy.iinfo",
    "numpy.int32"
   ]
  },
  "type": "module"
 },
 "sklearn.linear_model._stochastic_gradient.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "sklearn.linear_model._stochastic_gradient.BaseSGD": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "abc.ABCMeta"
   ]
  },
  "type": "class"
 },
 "sklearn.linear_model._stochastic_gradient.BaseSGD.__init__": {
  "data": {
   "lineno": 73
  },
  "type": "function"
 },
 "sklearn.linear_model._stochastic_gradient.BaseSGD._allocate_parameter_mem": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "ValueError",
    "numpy.asarray",
    "numpy.float64",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._stochastic_gradient.BaseSGD._get_learning_rate_type": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "sklearn.linear_model._stochastic_gradient.LEARNING_RATE_TYPES"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._stochastic_gradient.BaseSGD._get_loss_function": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "loss_class"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._stochastic_gradient.BaseSGD._get_penalty_type": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "sklearn.linear_model._stochastic_gradient.PENALTY_TYPES",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._stochastic_gradient.BaseSGD._make_validation_score_cb": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "sklearn.linear_model._stochastic_gradient._ValidationScoreCallback"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._stochastic_gradient.BaseSGD._make_validation_split": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "ValueError",
    "is_classifier",
    "next",
    "numpy.uint8",
    "numpy.zeros",
    "splitter_type"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._stochastic_gradient.BaseSGD._validate_params": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._stochastic_gradient.BaseSGD.average_coef_": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": [
    "deprecated",
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._stochastic_gradient.BaseSGD.average_intercept_": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": [
    "deprecated",
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._stochastic_gradient.BaseSGD.fit": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._stochastic_gradient.BaseSGD.set_params": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._stochastic_gradient.BaseSGD.standard_coef_": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "deprecated",
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._stochastic_gradient.BaseSGD.standard_intercept_": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "deprecated",
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._stochastic_gradient.BaseSGDClassifier": {
  "data": {
   "lineno": 453,
   "symbols_in_volume": [
    "abc.ABCMeta",
    "sklearn.linear_model._stochastic_gradient.BaseSGD",
    "sklearn.linear_model._stochastic_gradient.DEFAULT_EPSILON"
   ]
  },
  "type": "class"
 },
 "sklearn.linear_model._stochastic_gradient.BaseSGDClassifier.__init__": {
  "data": {
   "lineno": 468,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "sklearn.linear_model._stochastic_gradient.DEFAULT_EPSILON",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._stochastic_gradient.BaseSGDClassifier._fit": {
  "data": {
   "lineno": 537,
   "symbols_in_volume": [
    "hasattr",
    "numpy.float64",
    "numpy.inf",
    "numpy.unique",
    "sklearn.linear_model._stochastic_gradient.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._stochastic_gradient.BaseSGDClassifier._fit_binary": {
  "data": {
   "lineno": 580,
   "symbols_in_volume": [
    "numpy.atleast_1d",
    "sklearn.linear_model._stochastic_gradient.fit_binary"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._stochastic_gradient.BaseSGDClassifier._fit_multiclass": {
  "data": {
   "lineno": 607,
   "symbols_in_volume": [
    "_joblib_parallel_args",
    "check_random_state",
    "delayed",
    "enumerate",
    "joblib.Parallel",
    "len",
    "max",
    "numpy.atleast_1d",
    "sklearn.linear_model._stochastic_gradient.MAX_INT",
    "sklearn.linear_model._stochastic_gradient.fit_binary"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._stochastic_gradient.BaseSGDClassifier._partial_fit": {
  "data": {
   "lineno": 490,
   "symbols_in_volume": [
    "ValueError",
    "_check_partial_fit_first_call",
    "_check_sample_weight",
    "check_X_y",
    "compute_class_weight",
    "getattr",
    "hasattr",
    "numpy.float64"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._stochastic_gradient.BaseSGDClassifier.fit": {
  "data": {
   "lineno": 700
  },
  "type": "function"
 },
 "sklearn.linear_model._stochastic_gradient.BaseSGDClassifier.partial_fit": {
  "data": {
   "lineno": 651,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._stochastic_gradient.BaseSGDRegressor": {
  "data": {
   "lineno": 1111,
   "symbols_in_volume": [
    "sklearn.linear_model._stochastic_gradient.BaseSGD",
    "sklearn.linear_model._stochastic_gradient.DEFAULT_EPSILON"
   ]
  },
  "type": "class"
 },
 "sklearn.linear_model._stochastic_gradient.BaseSGDRegressor.__init__": {
  "data": {
   "lineno": 1121,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "sklearn.linear_model._stochastic_gradient.DEFAULT_EPSILON",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._stochastic_gradient.BaseSGDRegressor._decision_function": {
  "data": {
   "lineno": 1258,
   "symbols_in_volume": [
    "check_array",
    "check_is_fitted",
    "safe_sparse_dot"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._stochastic_gradient.BaseSGDRegressor._fit": {
  "data": {
   "lineno": 1199,
   "symbols_in_volume": [
    "getattr",
    "numpy.inf",
    "sklearn.linear_model._stochastic_gradient.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._stochastic_gradient.BaseSGDRegressor._fit_regressor": {
  "data": {
   "lineno": 1292,
   "symbols_in_volume": [
    "_plain_sgd",
    "check_random_state",
    "hasattr",
    "int",
    "make_dataset",
    "numpy.atleast_1d",
    "numpy.iinfo",
    "numpy.inf",
    "numpy.int32"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._stochastic_gradient.BaseSGDRegressor._partial_fit": {
  "data": {
   "lineno": 1139,
   "symbols_in_volume": [
    "ValueError",
    "_check_sample_weight",
    "getattr",
    "numpy.float64",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._stochastic_gradient.BaseSGDRegressor.fit": {
  "data": {
   "lineno": 1227
  },
  "type": "function"
 },
 "sklearn.linear_model._stochastic_gradient.BaseSGDRegressor.partial_fit": {
  "data": {
   "lineno": 1168
  },
  "type": "function"
 },
 "sklearn.linear_model._stochastic_gradient.BaseSGDRegressor.predict": {
  "data": {
   "lineno": 1278
  },
  "type": "function"
 },
 "sklearn.linear_model._stochastic_gradient.DEFAULT_EPSILON": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "sklearn.linear_model._stochastic_gradient.LEARNING_RATE_TYPES": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "sklearn.linear_model._stochastic_gradient.MAX_INT": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "sklearn.linear_model._stochastic_gradient.PENALTY_TYPES": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "sklearn.linear_model._stochastic_gradient.Parallel": {
  "data": {
   "shadows": "joblib.Parallel"
  },
  "type": "import"
 },
 "sklearn.linear_model._stochastic_gradient.SGDClassifier": {
  "data": {
   "lineno": 735,
   "symbols_in_volume": [
    "sklearn.linear_model._stochastic_gradient.BaseSGDClassifier"
   ]
  },
  "type": "class"
 },
 "sklearn.linear_model._stochastic_gradient.SGDClassifier.__init__": {
  "data": {
   "lineno": 966,
   "symbols_in_volume": [
    "sklearn.linear_model._stochastic_gradient.DEFAULT_EPSILON",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._stochastic_gradient.SGDClassifier._check_proba": {
  "data": {
   "lineno": 985,
   "symbols_in_volume": [
    "AttributeError"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._stochastic_gradient.SGDClassifier._more_tags": {
  "data": {
   "lineno": 1102
  },
  "type": "function"
 },
 "sklearn.linear_model._stochastic_gradient.SGDClassifier._predict_log_proba": {
  "data": {
   "lineno": 1099,
   "symbols_in_volume": [
    "numpy.log"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._stochastic_gradient.SGDClassifier._predict_proba": {
  "data": {
   "lineno": 1030,
   "symbols_in_volume": [
    "NotImplementedError",
    "check_is_fitted",
    "len",
    "numpy.any",
    "numpy.clip",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._stochastic_gradient.SGDClassifier.predict_log_proba": {
  "data": {
   "lineno": 1073,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._stochastic_gradient.SGDClassifier.predict_proba": {
  "data": {
   "lineno": 990,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._stochastic_gradient.SGDRegressor": {
  "data": {
   "lineno": 1366,
   "symbols_in_volume": [
    "sklearn.linear_model._stochastic_gradient.BaseSGDRegressor"
   ]
  },
  "type": "class"
 },
 "sklearn.linear_model._stochastic_gradient.SGDRegressor.__init__": {
  "data": {
   "lineno": 1575,
   "symbols_in_volume": [
    "sklearn.linear_model._stochastic_gradient.DEFAULT_EPSILON",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._stochastic_gradient.SGDRegressor._more_tags": {
  "data": {
   "lineno": 1592
  },
  "type": "function"
 },
 "sklearn.linear_model._stochastic_gradient._ValidationScoreCallback": {
  "data": {
   "lineno": 51
  },
  "type": "class"
 },
 "sklearn.linear_model._stochastic_gradient._ValidationScoreCallback.__call__": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "numpy.atleast_1d"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._stochastic_gradient._ValidationScoreCallback.__init__": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "clone"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._stochastic_gradient._prepare_fit_binary": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": [
    "len",
    "numpy.float64",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._stochastic_gradient.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "sklearn.linear_model._stochastic_gradient.fit_binary": {
  "data": {
   "lineno": 358,
   "symbols_in_volume": [
    "_plain_sgd",
    "check_random_state",
    "int",
    "len",
    "make_dataset",
    "numpy.array",
    "numpy.inf",
    "sklearn.linear_model._stochastic_gradient.MAX_INT",
    "sklearn.linear_model._stochastic_gradient._prepare_fit_binary"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._stochastic_gradient.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.linear_model._stochastic_gradient.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.linear_model._theil_sen": {
  "data": {
   "symbols_in_volume": [
    "numpy.double",
    "numpy.finfo"
   ]
  },
  "type": "module"
 },
 "sklearn.linear_model._theil_sen.Parallel": {
  "data": {
   "shadows": "joblib.Parallel"
  },
  "type": "import"
 },
 "sklearn.linear_model._theil_sen.TheilSenRegressor": {
  "data": {
   "lineno": 196
  },
  "type": "class"
 },
 "sklearn.linear_model._theil_sen.TheilSenRegressor.__init__": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._theil_sen.TheilSenRegressor._check_subparams": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "max",
    "min",
    "numpy.rint",
    "scipy.special.binom"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._theil_sen.TheilSenRegressor.fit": {
  "data": {
   "lineno": 345,
   "symbols_in_volume": [
    "check_random_state",
    "delayed",
    "int",
    "itertools.combinations",
    "joblib.Parallel",
    "joblib.effective_n_jobs",
    "list",
    "numpy.array_split",
    "numpy.rint",
    "numpy.vstack",
    "print",
    "range",
    "scipy.special.binom",
    "sklearn.linear_model._theil_sen._breakdown_point",
    "sklearn.linear_model._theil_sen._lstsq",
    "sklearn.linear_model._theil_sen._spatial_median"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._theil_sen._EPSILON": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "sklearn.linear_model._theil_sen._breakdown_point": {
  "data": {
   "lineno": 131
  },
  "type": "function"
 },
 "sklearn.linear_model._theil_sen._lstsq": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "enumerate",
    "int",
    "lstsq",
    "max",
    "numpy.empty",
    "numpy.ones",
    "numpy.zeros",
    "scipy.linalg.lapack.get_lapack_funcs"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._theil_sen._modified_weiszfeld_step": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "int",
    "max",
    "min",
    "numpy.newaxis",
    "numpy.sqrt",
    "numpy.sum",
    "scipy.linalg.norm",
    "sklearn.linear_model._theil_sen._EPSILON"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._theil_sen._spatial_median": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "numpy.mean",
    "numpy.median",
    "numpy.sum",
    "range",
    "sklearn.linear_model._theil_sen._modified_weiszfeld_step",
    "sklearn.linear_model._theil_sen.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model._theil_sen.binom": {
  "data": {
   "shadows": "scipy.special.binom"
  },
  "type": "import"
 },
 "sklearn.linear_model._theil_sen.combinations": {
  "data": {
   "shadows": "itertools.combinations"
  },
  "type": "import"
 },
 "sklearn.linear_model._theil_sen.effective_n_jobs": {
  "data": {
   "shadows": "joblib.effective_n_jobs"
  },
  "type": "import"
 },
 "sklearn.linear_model._theil_sen.get_lapack_funcs": {
  "data": {
   "shadows": "scipy.linalg.lapack.get_lapack_funcs"
  },
  "type": "import"
 },
 "sklearn.linear_model._theil_sen.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "sklearn.linear_model._theil_sen.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.linear_model._theil_sen.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.linear_model.setup": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.distutils.core.setup",
    "sklearn.linear_model.setup.configuration"
   ]
  },
  "type": "module"
 },
 "sklearn.linear_model.setup.Configuration": {
  "data": {
   "shadows": "numpy.distutils.misc_util.Configuration"
  },
  "type": "import"
 },
 "sklearn.linear_model.setup.configuration": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "numpy.distutils.misc_util.Configuration",
    "sklearn._build_utils.gen_from_templates",
    "sklearn.linear_model.setup.numpy",
    "sklearn.linear_model.setup.os"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.setup.gen_from_templates": {
  "data": {
   "shadows": "sklearn._build_utils.gen_from_templates"
  },
  "type": "import"
 },
 "sklearn.linear_model.setup.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.linear_model.setup.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "sklearn.linear_model.setup.setup": {
  "data": {
   "shadows": "numpy.distutils.core.setup"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests": {
  "data": {},
  "type": "module"
 },
 "sklearn.linear_model.tests.test_base": {
  "data": {
   "symbols_in_volume": [
    "numpy.random.RandomState"
   ]
  },
  "type": "module"
 },
 "sklearn.linear_model.tests.test_base.LinearRegression": {
  "data": {
   "shadows": "sklearn.linear_model.LinearRegression"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_base._preprocess_data": {
  "data": {
   "shadows": "sklearn.linear_model._base._preprocess_data"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_base._rescale_data": {
  "data": {
   "shadows": "sklearn.linear_model._base._rescale_data"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_base.assert_allclose": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_allclose"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_base.assert_almost_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_almost_equal"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_base.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_base.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_base.check_random_state": {
  "data": {
   "shadows": "sklearn.utils.check_random_state"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_base.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_base.load_iris": {
  "data": {
   "shadows": "sklearn.datasets.load_iris"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_base.make_dataset": {
  "data": {
   "shadows": "sklearn.linear_model._base.make_dataset"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_base.make_regression": {
  "data": {
   "shadows": "sklearn.datasets.make_regression"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_base.make_sparse_uncorrelated": {
  "data": {
   "shadows": "sklearn.datasets.make_sparse_uncorrelated"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_base.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_base.parse_version": {
  "data": {
   "shadows": "sklearn.utils.fixes.parse_version"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_base.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_base.rng": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "sklearn.linear_model.tests.test_base.rtol": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "sklearn.linear_model.tests.test_base.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_base.test_csr_preprocess_data": {
  "data": {
   "lineno": 450,
   "symbols_in_volume": [
    "scipy.sparse.csr_matrix",
    "sklearn.datasets.make_regression",
    "sklearn.linear_model._base._preprocess_data"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_base.test_dtype_preprocess_data": {
  "data": {
   "lineno": 481,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.float32",
    "numpy.float64",
    "sklearn.linear_model._base._preprocess_data",
    "sklearn.linear_model.tests.test_base.rng",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_base.test_fit_intercept": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.linear_model.LinearRegression"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_base.test_fused_types_make_dataset": {
  "data": {
   "lineno": 568,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.float32",
    "numpy.float64",
    "scipy.sparse.csr_matrix",
    "sklearn.datasets.load_iris",
    "sklearn.linear_model._base.make_dataset",
    "sklearn.linear_model.tests.test_base.rtol",
    "sklearn.utils._testing.assert_allclose",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_base.test_linear_regression": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "sklearn.linear_model.LinearRegression",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_base.test_linear_regression_multiple_outcome": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "numpy.vstack",
    "sklearn.datasets.make_regression",
    "sklearn.linear_model.LinearRegression",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_base.test_linear_regression_pd_sparse_dataframe_warning": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "UserWarning",
    "hasattr",
    "numpy.random.randn",
    "range",
    "sklearn.linear_model.LinearRegression",
    "sklearn.linear_model.tests.test_base.pytest",
    "sklearn.utils.fixes.parse_version",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_base.test_linear_regression_positive": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "sklearn.linear_model.LinearRegression",
    "sklearn.utils._testing.assert_allclose",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_base.test_linear_regression_positive_multiple_outcome": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.vstack",
    "sklearn.datasets.make_sparse_uncorrelated",
    "sklearn.linear_model.LinearRegression",
    "sklearn.utils._testing.assert_allclose",
    "sklearn.utils.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_base.test_linear_regression_positive_vs_nonpositive": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "numpy.mean",
    "sklearn.datasets.make_sparse_uncorrelated",
    "sklearn.linear_model.LinearRegression"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_base.test_linear_regression_positive_vs_nonpositive_when_positive": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "numpy.mean",
    "sklearn.linear_model.LinearRegression",
    "sklearn.linear_model.tests.test_base.rng"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_base.test_linear_regression_sample_weights": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "numpy.concatenate",
    "numpy.diag",
    "numpy.ones",
    "numpy.random.RandomState",
    "scipy.linalg.solve",
    "sklearn.linear_model.LinearRegression",
    "sklearn.linear_model.tests.test_base.rng",
    "sklearn.utils._testing.assert_almost_equal",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_base.test_linear_regression_sparse": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "numpy.newaxis",
    "range",
    "scipy.sparse.eye",
    "sklearn.linear_model.LinearRegression",
    "sklearn.utils._testing.assert_array_almost_equal",
    "sklearn.utils.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_base.test_linear_regression_sparse_equal_dense": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "dict",
    "scipy.sparse.csr_matrix",
    "sklearn.linear_model.LinearRegression",
    "sklearn.linear_model.tests.test_base.pytest",
    "sklearn.linear_model.tests.test_base.rng",
    "sklearn.utils._testing.assert_allclose",
    "sklearn.utils.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_base.test_linear_regression_sparse_multiple_outcome": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "numpy.vstack",
    "scipy.sparse.coo_matrix",
    "sklearn.datasets.make_sparse_uncorrelated",
    "sklearn.linear_model.LinearRegression",
    "sklearn.utils._testing.assert_array_almost_equal",
    "sklearn.utils.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_base.test_preprocess_copy_data_no_checks": {
  "data": {
   "lineno": 459,
   "symbols_in_volume": [
    "numpy.may_share_memory",
    "scipy.sparse.csr_matrix",
    "sklearn.datasets.make_regression",
    "sklearn.linear_model._base._preprocess_data",
    "sklearn.linear_model.tests.test_base.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_base.test_preprocess_data": {
  "data": {
   "lineno": 319,
   "symbols_in_volume": [
    "numpy.mean",
    "numpy.ones",
    "numpy.sqrt",
    "numpy.std",
    "numpy.zeros",
    "sklearn.linear_model._base._preprocess_data",
    "sklearn.linear_model.tests.test_base.rng",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_base.test_preprocess_data_multioutput": {
  "data": {
   "lineno": 353,
   "symbols_in_volume": [
    "numpy.mean",
    "numpy.zeros",
    "scipy.sparse.csc_matrix",
    "sklearn.linear_model._base._preprocess_data",
    "sklearn.linear_model.tests.test_base.rng",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_base.test_preprocess_data_weighted": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": [
    "numpy.average",
    "numpy.mean",
    "numpy.ones",
    "numpy.sqrt",
    "sklearn.linear_model._base._preprocess_data",
    "sklearn.linear_model.tests.test_base.rng",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_base.test_raises_value_error_if_positive_and_sparse": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "TypeError",
    "numpy.ones",
    "scipy.sparse.eye",
    "sklearn.linear_model.LinearRegression",
    "sklearn.linear_model.tests.test_base.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_base.test_raises_value_error_if_sample_weights_greater_than_1d": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "sklearn.linear_model.LinearRegression",
    "sklearn.linear_model.tests.test_base.rng",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_base.test_rescale_data_dense": {
  "data": {
   "lineno": 547,
   "symbols_in_volume": [
    "numpy.newaxis",
    "numpy.sqrt",
    "sklearn.linear_model._base._rescale_data",
    "sklearn.linear_model.tests.test_base.pytest",
    "sklearn.linear_model.tests.test_base.rng",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_base.test_sparse_preprocess_data_with_return_mean": {
  "data": {
   "lineno": 412,
   "symbols_in_volume": [
    "numpy.mean",
    "numpy.ones",
    "numpy.sqrt",
    "numpy.std",
    "numpy.zeros",
    "scipy.sparse.rand",
    "sklearn.linear_model._base._preprocess_data",
    "sklearn.linear_model.tests.test_base.rng",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_bayes": {
  "data": {
   "symbols_in_volume": [
    "sklearn.datasets.load_diabetes"
   ]
  },
  "type": "module"
 },
 "sklearn.linear_model.tests.test_bayes.ARDRegression": {
  "data": {
   "shadows": "sklearn.linear_model.ARDRegression"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_bayes.BayesianRidge": {
  "data": {
   "shadows": "sklearn.linear_model.BayesianRidge"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_bayes.Ridge": {
  "data": {
   "shadows": "sklearn.linear_model.Ridge"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_bayes.assert_almost_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_almost_equal"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_bayes.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_bayes.assert_array_less": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_array_less"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_bayes.assert_raise_message": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_raise_message"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_bayes.check_random_state": {
  "data": {
   "shadows": "sklearn.utils.check_random_state"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_bayes.datasets": {
  "data": {
   "shadows": "sklearn.datasets"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_bayes.diabetes": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "sklearn.linear_model.tests.test_bayes.fast_logdet": {
  "data": {
   "shadows": "sklearn.utils.extmath.fast_logdet"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_bayes.log": {
  "data": {
   "shadows": "math.log"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_bayes.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_bayes.pinvh": {
  "data": {
   "shadows": "scipy.linalg.pinvh"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_bayes.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_bayes.test_ard_accuracy_on_easy_problem": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.random.RandomState",
    "range",
    "sklearn.linear_model.ARDRegression",
    "sklearn.linear_model.tests.test_bayes.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_bayes.test_ard_regression_predict_normalize_true": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "sklearn.linear_model.ARDRegression"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_bayes.test_bayesian_initial_params": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.linspace",
    "numpy.vander",
    "sklearn.linear_model.BayesianRidge",
    "sklearn.utils._testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_bayes.test_bayesian_ridge_parameter": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.linear_model.BayesianRidge",
    "sklearn.linear_model.Ridge",
    "sklearn.utils._testing.assert_almost_equal",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_bayes.test_bayesian_ridge_score_values": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "math.log",
    "numpy.dot",
    "numpy.eye",
    "numpy.finfo",
    "numpy.float64",
    "numpy.pi",
    "numpy.var",
    "scipy.linalg.pinvh",
    "sklearn.linear_model.BayesianRidge",
    "sklearn.linear_model.tests.test_bayes.diabetes",
    "sklearn.utils._testing.assert_almost_equal",
    "sklearn.utils.extmath.fast_logdet"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_bayes.test_bayesian_ridge_scores": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "sklearn.linear_model.BayesianRidge",
    "sklearn.linear_model.tests.test_bayes.diabetes"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_bayes.test_bayesian_sample_weights": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.linear_model.BayesianRidge",
    "sklearn.linear_model.Ridge",
    "sklearn.utils._testing.assert_almost_equal",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_bayes.test_n_iter": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "sklearn.linear_model.BayesianRidge",
    "sklearn.utils._testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_bayes.test_prediction_bayesian_ridge_ard_with_constant_input": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.full",
    "sklearn.linear_model.ARDRegression",
    "sklearn.linear_model.BayesianRidge",
    "sklearn.utils._testing.assert_array_almost_equal",
    "sklearn.utils.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_bayes.test_return_std": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "enumerate",
    "f_noise",
    "numpy.array",
    "numpy.random.random",
    "sklearn.linear_model.ARDRegression",
    "sklearn.linear_model.BayesianRidge",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_bayes.test_return_std.f": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "numpy.dot"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_bayes.test_return_std.f_noise": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "f",
    "numpy.random.randn"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_bayes.test_std_bayesian_ridge_ard_with_constant_input": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.full",
    "sklearn.linear_model.ARDRegression",
    "sklearn.linear_model.BayesianRidge",
    "sklearn.utils._testing.assert_array_less",
    "sklearn.utils.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_bayes.test_toy_ard_object": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.linear_model.ARDRegression",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_bayes.test_toy_bayesian_ridge_object": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.linear_model.BayesianRidge",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_bayes.test_update_of_sigma_in_ard": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.linear_model.ARDRegression"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_bayes.test_update_sigma": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "numpy.random.RandomState",
    "numpy.testing.assert_allclose",
    "range",
    "sklearn.linear_model.ARDRegression",
    "sklearn.linear_model.tests.test_bayes.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_coordinate_descent": {
  "data": {},
  "type": "module"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.ARDRegression": {
  "data": {
   "shadows": "sklearn.linear_model.ARDRegression"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.BayesianRidge": {
  "data": {
   "shadows": "sklearn.linear_model.BayesianRidge"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.ConvergenceWarning": {
  "data": {
   "shadows": "sklearn.exceptions.ConvergenceWarning"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.ElasticNet": {
  "data": {
   "shadows": "sklearn.linear_model.ElasticNet"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.ElasticNetCV": {
  "data": {
   "shadows": "sklearn.linear_model.ElasticNetCV"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.Lars": {
  "data": {
   "shadows": "sklearn.linear_model.Lars"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.Lasso": {
  "data": {
   "shadows": "sklearn.linear_model.Lasso"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.LassoCV": {
  "data": {
   "shadows": "sklearn.linear_model.LassoCV"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.LassoLars": {
  "data": {
   "shadows": "sklearn.linear_model.LassoLars"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.LassoLarsCV": {
  "data": {
   "shadows": "sklearn.linear_model.LassoLarsCV"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.LassoLarsIC": {
  "data": {
   "shadows": "sklearn.linear_model.LassoLarsIC"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.LinearRegression": {
  "data": {
   "shadows": "sklearn.linear_model.LinearRegression"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.MultiTaskElasticNet": {
  "data": {
   "shadows": "sklearn.linear_model.MultiTaskElasticNet"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.MultiTaskElasticNetCV": {
  "data": {
   "shadows": "sklearn.linear_model.MultiTaskElasticNetCV"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.MultiTaskLasso": {
  "data": {
   "shadows": "sklearn.linear_model.MultiTaskLasso"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.MultiTaskLassoCV": {
  "data": {
   "shadows": "sklearn.linear_model.MultiTaskLassoCV"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.OrthogonalMatchingPursuit": {
  "data": {
   "shadows": "sklearn.linear_model.OrthogonalMatchingPursuit"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.Ridge": {
  "data": {
   "shadows": "sklearn.linear_model.Ridge"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.RidgeCV": {
  "data": {
   "shadows": "sklearn.linear_model.RidgeCV"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.RidgeClassifier": {
  "data": {
   "shadows": "sklearn.linear_model.RidgeClassifier"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.ShuffleSplit": {
  "data": {
   "shadows": "sklearn.model_selection.ShuffleSplit"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.StandardScaler": {
  "data": {
   "shadows": "sklearn.preprocessing.StandardScaler"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.TempMemmap": {
  "data": {
   "shadows": "sklearn.utils._testing.TempMemmap"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_coordinate_descent._set_order": {
  "data": {
   "shadows": "sklearn.linear_model._coordinate_descent._set_order"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.assert_allclose": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_allclose"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.assert_almost_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_almost_equal"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.assert_raise_message": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_raise_message"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.assert_raises": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.assert_raises_regex": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_raises_regex"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.assert_warns": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_warns"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.assert_warns_message": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_warns_message"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.build_dataset": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.random.RandomState"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.check_array": {
  "data": {
   "shadows": "sklearn.utils.check_array"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.datasets": {
  "data": {
   "shadows": "sklearn.datasets"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.enet_path": {
  "data": {
   "shadows": "sklearn.linear_model.enet_path"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.ignore_warnings": {
  "data": {
   "shadows": "sklearn.utils._testing.ignore_warnings"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.interpolate": {
  "data": {
   "shadows": "scipy.interpolate"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.is_classifier": {
  "data": {
   "shadows": "sklearn.base.is_classifier"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.joblib": {
  "data": {
   "shadows": "joblib"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.lars_path": {
  "data": {
   "shadows": "sklearn.linear_model.lars_path"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.lasso_path": {
  "data": {
   "shadows": "sklearn.linear_model.lasso_path"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.load_diabetes": {
  "data": {
   "shadows": "sklearn.datasets.load_diabetes"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.make_pipeline": {
  "data": {
   "shadows": "sklearn.pipeline.make_pipeline"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.make_regression": {
  "data": {
   "shadows": "sklearn.datasets.make_regression"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.parse_version": {
  "data": {
   "shadows": "sklearn.utils.fixes.parse_version"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.test_1d_multioutput_enet_and_multitask_enet_cv": {
  "data": {
   "lineno": 692,
   "symbols_in_volume": [
    "numpy.newaxis",
    "sklearn.linear_model.ElasticNetCV",
    "sklearn.linear_model.MultiTaskElasticNetCV",
    "sklearn.linear_model.tests.test_coordinate_descent.build_dataset",
    "sklearn.utils._testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.test_1d_multioutput_lasso_and_multitask_lasso_cv": {
  "data": {
   "lineno": 705,
   "symbols_in_volume": [
    "numpy.newaxis",
    "sklearn.linear_model.LassoCV",
    "sklearn.linear_model.MultiTaskLassoCV",
    "sklearn.linear_model.tests.test_coordinate_descent.build_dataset",
    "sklearn.utils._testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.test_check_input_false": {
  "data": {
   "lineno": 863,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.linear_model.ElasticNet",
    "sklearn.linear_model.tests.test_coordinate_descent.build_dataset",
    "sklearn.utils._testing.assert_raises",
    "sklearn.utils.check_array"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.test_coef_shape_not_zero": {
  "data": {
   "lineno": 1015,
   "symbols_in_volume": [
    "numpy.c_",
    "numpy.ones",
    "sklearn.linear_model.Lasso"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.test_convergence_warnings": {
  "data": {
   "lineno": 1050,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.exceptions.ConvergenceWarning",
    "sklearn.linear_model.MultiTaskElasticNet",
    "sklearn.linear_model.tests.test_coordinate_descent.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.test_enet_coordinate_descent": {
  "data": {
   "lineno": 1033,
   "symbols_in_volume": [
    "dict",
    "klass",
    "numpy.ones",
    "sklearn.exceptions.ConvergenceWarning",
    "sklearn.linear_model.Lasso",
    "sklearn.linear_model.MultiTaskLasso",
    "sklearn.linear_model.tests.test_coordinate_descent.pytest",
    "sklearn.utils._testing.assert_warns"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.test_enet_copy_X_False_check_input_False": {
  "data": {
   "lineno": 893,
   "symbols_in_volume": [
    "numpy.any",
    "numpy.not_equal",
    "sklearn.linear_model.ElasticNet",
    "sklearn.linear_model.tests.test_coordinate_descent.build_dataset"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.test_enet_copy_X_True": {
  "data": {
   "lineno": 881,
   "symbols_in_volume": [
    "sklearn.linear_model.ElasticNet",
    "sklearn.linear_model.tests.test_coordinate_descent.build_dataset",
    "sklearn.linear_model.tests.test_coordinate_descent.pytest",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.test_enet_cv_positive_constraint": {
  "data": {
   "lineno": 554,
   "symbols_in_volume": [
    "min",
    "sklearn.linear_model.ElasticNetCV",
    "sklearn.linear_model.tests.test_coordinate_descent.build_dataset"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.test_enet_float_precision": {
  "data": {
   "lineno": 929,
   "symbols_in_volume": [
    "dtype",
    "numpy.float32",
    "numpy.float64",
    "numpy.hstack",
    "numpy.newaxis",
    "sklearn.linear_model.ElasticNet",
    "sklearn.linear_model.MultiTaskElasticNet",
    "sklearn.linear_model.tests.test_coordinate_descent.build_dataset",
    "sklearn.utils._testing.assert_array_almost_equal",
    "sklearn.utils._testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.test_enet_l1_ratio": {
  "data": {
   "lineno": 983,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "sklearn.linear_model.ElasticNetCV",
    "sklearn.linear_model.MultiTaskElasticNetCV",
    "sklearn.utils._testing.assert_array_almost_equal",
    "sklearn.utils._testing.assert_raise_message",
    "sklearn.utils._testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.test_enet_multitarget": {
  "data": {
   "lineno": 642,
   "symbols_in_volume": [
    "range",
    "sklearn.linear_model.ElasticNet",
    "sklearn.linear_model.tests.test_coordinate_descent.build_dataset",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.test_enet_path": {
  "data": {
   "lineno": 444,
   "symbols_in_volume": [
    "min",
    "numpy.newaxis",
    "sklearn.linear_model.ElasticNetCV",
    "sklearn.linear_model.MultiTaskElasticNetCV",
    "sklearn.linear_model.tests.test_coordinate_descent.build_dataset",
    "sklearn.utils._testing.assert_almost_equal",
    "sklearn.utils._testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.test_enet_path_positive": {
  "data": {
   "lineno": 836,
   "symbols_in_volume": [
    "ValueError",
    "numpy.all",
    "path",
    "sklearn.linear_model.enet_path",
    "sklearn.linear_model.lasso_path",
    "sklearn.linear_model.tests.test_coordinate_descent.build_dataset",
    "sklearn.utils._testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.test_enet_positive_constraint": {
  "data": {
   "lineno": 545,
   "symbols_in_volume": [
    "min",
    "sklearn.linear_model.ElasticNet"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.test_enet_sample_weight_consistency": {
  "data": {
   "lineno": 1114,
   "symbols_in_volume": [
    "dict",
    "len",
    "numpy.concatenate",
    "numpy.ones",
    "numpy.ones_like",
    "numpy.random.RandomState",
    "scipy.sparse.issparse",
    "sklearn.linear_model.ElasticNet",
    "sklearn.linear_model.tests.test_coordinate_descent.pytest",
    "sklearn.utils._testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.test_enet_sample_weight_sparse": {
  "data": {
   "lineno": 1188,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "numpy.zeros",
    "scipy.sparse.csc_matrix",
    "sklearn.linear_model.ElasticNet",
    "sklearn.linear_model.tests.test_coordinate_descent.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.test_enet_toy": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.dot",
    "sklearn.linear_model.ElasticNet",
    "sklearn.utils._testing.assert_almost_equal",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.test_l1_ratio_param_invalid": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "sklearn.linear_model.ElasticNet",
    "sklearn.linear_model.tests.test_coordinate_descent.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.test_lassoCV_does_not_set_precompute": {
  "data": {
   "lineno": 1080,
   "symbols_in_volume": [
    "sklearn.linear_model.LassoCV",
    "sklearn.linear_model.tests.test_coordinate_descent.build_dataset",
    "sklearn.linear_model.tests.test_coordinate_descent.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.test_lassoCV_does_not_set_precompute.LassoMock": {
  "data": {
   "lineno": 1090,
   "symbols_in_volume": [
    "sklearn.linear_model.Lasso"
   ]
  },
  "type": "class"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.test_lassoCV_does_not_set_precompute.LassoMock.fit": {
  "data": {
   "lineno": 1091,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.test_lasso_alpha_warning": {
  "data": {
   "lineno": 524,
   "symbols_in_volume": [
    "UserWarning",
    "sklearn.linear_model.Lasso",
    "sklearn.utils._testing.assert_warns"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.test_lasso_cv": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "mse_lars",
    "numpy.abs",
    "numpy.searchsorted",
    "numpy.testing.assert_approx_equal",
    "scipy.interpolate.interp1d",
    "sklearn.linear_model.LassoCV",
    "sklearn.linear_model.LassoLarsCV",
    "sklearn.linear_model.tests.test_coordinate_descent.build_dataset",
    "sklearn.utils._testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.test_lasso_cv_positive_constraint": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "min",
    "sklearn.linear_model.LassoCV",
    "sklearn.linear_model.tests.test_coordinate_descent.build_dataset"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.test_lasso_cv_with_some_model_selection": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "sklearn.datasets.load_diabetes",
    "sklearn.linear_model.LassoCV",
    "sklearn.model_selection.ShuffleSplit",
    "sklearn.pipeline.make_pipeline",
    "sklearn.preprocessing.StandardScaler"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.test_lasso_non_float_y": {
  "data": {
   "lineno": 916,
   "symbols_in_volume": [
    "model",
    "sklearn.linear_model.ElasticNet",
    "sklearn.linear_model.Lasso",
    "sklearn.linear_model.tests.test_coordinate_descent.pytest",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.test_lasso_path_return_models_vs_new_return_gives_same_coefficients": {
  "data": {
   "lineno": 420,
   "symbols_in_volume": [
    "coef_path_cont_lars",
    "coef_path_cont_lasso",
    "numpy.array",
    "scipy.interpolate.interp1d",
    "sklearn.linear_model.lars_path",
    "sklearn.linear_model.lasso_path",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.test_lasso_positive_constraint": {
  "data": {
   "lineno": 532,
   "symbols_in_volume": [
    "min",
    "sklearn.linear_model.Lasso"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.test_lasso_readonly_data": {
  "data": {
   "lineno": 619,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.linear_model.Lasso",
    "sklearn.utils._testing.TempMemmap",
    "sklearn.utils._testing.assert_almost_equal",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.test_lasso_toy": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "sklearn.linear_model.Lasso",
    "sklearn.utils._testing.assert_almost_equal",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.test_lasso_zero": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "sklearn.linear_model.Lasso",
    "sklearn.utils._testing.assert_almost_equal",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.test_linear_models_cv_fit_for_all_backends": {
  "data": {
   "lineno": 1198,
   "symbols_in_volume": [
    "estimator",
    "sklearn.datasets.make_regression",
    "sklearn.linear_model.ElasticNetCV",
    "sklearn.linear_model.LassoCV",
    "sklearn.linear_model.MultiTaskElasticNetCV",
    "sklearn.linear_model.MultiTaskLassoCV",
    "sklearn.linear_model.tests.test_coordinate_descent.joblib",
    "sklearn.linear_model.tests.test_coordinate_descent.pytest",
    "sklearn.utils.fixes.parse_version"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.test_model_pipeline_same_as_normalize_true": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "LinearModel",
    "dict",
    "locals",
    "numpy.mean",
    "numpy.random.RandomState",
    "numpy.sqrt",
    "numpy.stack",
    "sklearn.base.is_classifier",
    "sklearn.linear_model.ARDRegression",
    "sklearn.linear_model.BayesianRidge",
    "sklearn.linear_model.ElasticNet",
    "sklearn.linear_model.Lars",
    "sklearn.linear_model.Lasso",
    "sklearn.linear_model.LassoLars",
    "sklearn.linear_model.LassoLarsIC",
    "sklearn.linear_model.LinearRegression",
    "sklearn.linear_model.MultiTaskElasticNet",
    "sklearn.linear_model.MultiTaskLasso",
    "sklearn.linear_model.OrthogonalMatchingPursuit",
    "sklearn.linear_model.Ridge",
    "sklearn.linear_model.RidgeClassifier",
    "sklearn.linear_model.tests.test_coordinate_descent.pytest",
    "sklearn.model_selection.train_test_split",
    "sklearn.pipeline.make_pipeline",
    "sklearn.preprocessing.StandardScaler",
    "sklearn.utils._testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.test_model_pipeline_same_dense_and_sparse": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": [
    "LinearModel",
    "numpy.random.RandomState",
    "numpy.sign",
    "scipy.sparse.csr_matrix",
    "sklearn.base.is_classifier",
    "sklearn.linear_model.ElasticNet",
    "sklearn.linear_model.ElasticNetCV",
    "sklearn.linear_model.Lasso",
    "sklearn.linear_model.LassoCV",
    "sklearn.linear_model.LinearRegression",
    "sklearn.linear_model.Ridge",
    "sklearn.linear_model.RidgeCV",
    "sklearn.linear_model.RidgeClassifier",
    "sklearn.linear_model.tests.test_coordinate_descent.pytest",
    "sklearn.pipeline.make_pipeline",
    "sklearn.preprocessing.StandardScaler",
    "sklearn.utils._testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.test_multi_task_lasso_and_enet": {
  "data": {
   "lineno": 603,
   "symbols_in_volume": [
    "numpy.c_",
    "sklearn.exceptions.ConvergenceWarning",
    "sklearn.linear_model.MultiTaskElasticNet",
    "sklearn.linear_model.MultiTaskLasso",
    "sklearn.linear_model.tests.test_coordinate_descent.build_dataset",
    "sklearn.utils._testing.assert_array_almost_equal",
    "sklearn.utils._testing.assert_warns_message"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.test_multi_task_lasso_cv_dtype": {
  "data": {
   "lineno": 1104,
   "symbols_in_volume": [
    "int",
    "numpy.random.RandomState",
    "sklearn.linear_model.MultiTaskLassoCV",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.test_multi_task_lasso_readonly_data": {
  "data": {
   "lineno": 632,
   "symbols_in_volume": [
    "numpy.c_",
    "sklearn.linear_model.MultiTaskLasso",
    "sklearn.linear_model.tests.test_coordinate_descent.build_dataset",
    "sklearn.utils._testing.TempMemmap",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.test_multioutput_enetcv_error": {
  "data": {
   "lineno": 658,
   "symbols_in_volume": [
    "ValueError",
    "numpy.random.RandomState",
    "sklearn.linear_model.ElasticNetCV",
    "sklearn.utils._testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.test_multitask_enet_and_lasso_cv": {
  "data": {
   "lineno": 666,
   "symbols_in_volume": [
    "len",
    "sklearn.linear_model.MultiTaskElasticNetCV",
    "sklearn.linear_model.MultiTaskLassoCV",
    "sklearn.linear_model.tests.test_coordinate_descent.build_dataset",
    "sklearn.utils._testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.test_overrided_gram_matrix": {
  "data": {
   "lineno": 905,
   "symbols_in_volume": [
    "UserWarning",
    "sklearn.linear_model.ElasticNet",
    "sklearn.linear_model.tests.test_coordinate_descent.build_dataset",
    "sklearn.utils._testing.assert_warns_message"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.test_path_parameters": {
  "data": {
   "lineno": 501,
   "symbols_in_volume": [
    "len",
    "sklearn.linear_model.ElasticNetCV",
    "sklearn.linear_model.tests.test_coordinate_descent.build_dataset",
    "sklearn.utils._testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.test_precompute_invalid_argument": {
  "data": {
   "lineno": 734,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.linear_model.ElasticNet",
    "sklearn.linear_model.ElasticNetCV",
    "sklearn.linear_model.LassoCV",
    "sklearn.linear_model.tests.test_coordinate_descent.build_dataset",
    "sklearn.utils._testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.test_random_descent": {
  "data": {
   "lineno": 791,
   "symbols_in_volume": [
    "ValueError",
    "numpy.hstack",
    "numpy.newaxis",
    "scipy.sparse.csr_matrix",
    "sklearn.linear_model.ElasticNet",
    "sklearn.linear_model.MultiTaskElasticNet",
    "sklearn.linear_model.tests.test_coordinate_descent.build_dataset",
    "sklearn.utils._testing.assert_almost_equal",
    "sklearn.utils._testing.assert_array_almost_equal",
    "sklearn.utils._testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.test_set_order_dense": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.linear_model._coordinate_descent._set_order",
    "sklearn.linear_model.tests.test_coordinate_descent.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.test_set_order_sparse": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "numpy.array",
    "scipy.sparse.coo_matrix",
    "scipy.sparse.isspmatrix_csc",
    "scipy.sparse.isspmatrix_csr",
    "sklearn.linear_model._coordinate_descent._set_order",
    "sklearn.linear_model.tests.test_coordinate_descent.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.test_sparse_dense_descent_paths": {
  "data": {
   "lineno": 853,
   "symbols_in_volume": [
    "path",
    "scipy.sparse.csr_matrix",
    "sklearn.linear_model.enet_path",
    "sklearn.linear_model.lasso_path",
    "sklearn.linear_model.tests.test_coordinate_descent.build_dataset",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.test_sparse_input_convergence_warning": {
  "data": {
   "lineno": 1066,
   "symbols_in_volume": [
    "numpy.float32",
    "scipy.sparse.csr_matrix",
    "sklearn.exceptions.ConvergenceWarning",
    "sklearn.linear_model.ElasticNet",
    "sklearn.linear_model.Lasso",
    "sklearn.linear_model.tests.test_coordinate_descent.build_dataset",
    "sklearn.linear_model.tests.test_coordinate_descent.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.test_sparse_input_dtype_enet_and_lassocv": {
  "data": {
   "lineno": 717,
   "symbols_in_volume": [
    "numpy.float32",
    "scipy.sparse.csr_matrix",
    "sklearn.linear_model.ElasticNetCV",
    "sklearn.linear_model.LassoCV",
    "sklearn.linear_model.tests.test_coordinate_descent.build_dataset",
    "sklearn.utils._testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.test_uniform_targets": {
  "data": {
   "lineno": 572,
   "symbols_in_volume": [
    "float",
    "numpy.empty",
    "numpy.finfo",
    "numpy.random.RandomState",
    "sklearn.linear_model.ElasticNetCV",
    "sklearn.linear_model.LassoCV",
    "sklearn.linear_model.MultiTaskElasticNetCV",
    "sklearn.linear_model.MultiTaskLassoCV",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.test_warm_start": {
  "data": {
   "lineno": 513,
   "symbols_in_volume": [
    "sklearn.linear_model.ElasticNet",
    "sklearn.linear_model.tests.test_coordinate_descent.build_dataset",
    "sklearn.utils._testing.assert_array_almost_equal",
    "sklearn.utils._testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.test_warm_start_convergence": {
  "data": {
   "lineno": 746,
   "symbols_in_volume": [
    "sklearn.linear_model.ElasticNet",
    "sklearn.linear_model.tests.test_coordinate_descent.build_dataset"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.test_warm_start_convergence_with_regularizer_decrement": {
  "data": {
   "lineno": 768,
   "symbols_in_volume": [
    "copy.deepcopy",
    "sklearn.datasets.load_diabetes",
    "sklearn.linear_model.ElasticNet"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.test_warm_start_multitask_lasso": {
  "data": {
   "lineno": 1021,
   "symbols_in_volume": [
    "numpy.c_",
    "sklearn.linear_model.MultiTaskLasso",
    "sklearn.linear_model.tests.test_coordinate_descent.build_dataset",
    "sklearn.utils._testing.assert_array_almost_equal",
    "sklearn.utils._testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.train_test_split": {
  "data": {
   "shadows": "sklearn.model_selection.train_test_split"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_huber": {
  "data": {},
  "type": "module"
 },
 "sklearn.linear_model.tests.test_huber.HuberRegressor": {
  "data": {
   "shadows": "sklearn.linear_model.HuberRegressor"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_huber.LinearRegression": {
  "data": {
   "shadows": "sklearn.linear_model.LinearRegression"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_huber.Ridge": {
  "data": {
   "shadows": "sklearn.linear_model.Ridge"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_huber.SGDRegressor": {
  "data": {
   "shadows": "sklearn.linear_model.SGDRegressor"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_huber._huber_loss_and_gradient": {
  "data": {
   "shadows": "sklearn.linear_model._huber._huber_loss_and_gradient"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_huber.assert_almost_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_almost_equal"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_huber.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_huber.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_huber.make_regression": {
  "data": {
   "shadows": "sklearn.datasets.make_regression"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_huber.make_regression_with_outliers": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "int",
    "numpy.random.RandomState",
    "sklearn.datasets.make_regression"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_huber.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_huber.optimize": {
  "data": {
   "shadows": "scipy.optimize"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_huber.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_huber.test_huber_and_sgd_same_results": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "sklearn.linear_model.HuberRegressor",
    "sklearn.linear_model.SGDRegressor",
    "sklearn.linear_model.tests.test_huber.make_regression_with_outliers",
    "sklearn.utils._testing.assert_almost_equal",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_huber.test_huber_better_r2_score": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.dot",
    "sklearn.linear_model.HuberRegressor",
    "sklearn.linear_model.Ridge",
    "sklearn.linear_model.tests.test_huber.make_regression_with_outliers"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_huber.test_huber_bool": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "sklearn.datasets.make_regression",
    "sklearn.linear_model.HuberRegressor"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_huber.test_huber_equals_lr_for_high_epsilon": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "sklearn.linear_model.HuberRegressor",
    "sklearn.linear_model.LinearRegression",
    "sklearn.linear_model.tests.test_huber.make_regression_with_outliers",
    "sklearn.utils._testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_huber.test_huber_gradient": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.random.RandomState",
    "range",
    "scipy.optimize.check_grad",
    "sklearn.linear_model.tests.test_huber.make_regression_with_outliers",
    "sklearn.utils._testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_huber.test_huber_gradient.grad_func": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "sklearn.linear_model._huber._huber_loss_and_gradient"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_huber.test_huber_gradient.loss_func": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "sklearn.linear_model._huber._huber_loss_and_gradient"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_huber.test_huber_max_iter": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "sklearn.linear_model.HuberRegressor",
    "sklearn.linear_model.tests.test_huber.make_regression_with_outliers"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_huber.test_huber_sample_weights": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "max",
    "numpy.abs",
    "numpy.concatenate",
    "numpy.mean",
    "numpy.ones",
    "numpy.vstack",
    "scipy.sparse.csr_matrix",
    "sklearn.linear_model.HuberRegressor",
    "sklearn.linear_model.tests.test_huber.make_regression_with_outliers",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_huber.test_huber_scaling_invariant": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "numpy.all",
    "sklearn.linear_model.HuberRegressor",
    "sklearn.linear_model.tests.test_huber.make_regression_with_outliers",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_huber.test_huber_sparse": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "scipy.sparse.csr_matrix",
    "sklearn.linear_model.HuberRegressor",
    "sklearn.linear_model.tests.test_huber.make_regression_with_outliers",
    "sklearn.utils._testing.assert_array_almost_equal",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_huber.test_huber_warm_start": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "sklearn.linear_model.HuberRegressor",
    "sklearn.linear_model.tests.test_huber.make_regression_with_outliers",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_least_angle": {
  "data": {
   "symbols_in_volume": [
    "numpy.dot",
    "sklearn.datasets.load_diabetes",
    "sklearn.linear_model.tests.test_least_angle.diabetes"
   ]
  },
  "type": "module"
 },
 "sklearn.linear_model.tests.test_least_angle.ConvergenceWarning": {
  "data": {
   "shadows": "sklearn.exceptions.ConvergenceWarning"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_least_angle.G": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "sklearn.linear_model.tests.test_least_angle.Lars": {
  "data": {
   "shadows": "sklearn.linear_model.Lars"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_least_angle.LassoLars": {
  "data": {
   "shadows": "sklearn.linear_model.LassoLars"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_least_angle.LassoLarsIC": {
  "data": {
   "shadows": "sklearn.linear_model.LassoLarsIC"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_least_angle.StringIO": {
  "data": {
   "shadows": "io.StringIO"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_least_angle.TempMemmap": {
  "data": {
   "shadows": "sklearn.utils._testing.TempMemmap"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_least_angle.Xy": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "sklearn.linear_model.tests.test_least_angle._assert_same_lars_path_result": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "len",
    "sklearn.utils._testing.assert_allclose",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_least_angle._lars_path_residues": {
  "data": {
   "shadows": "sklearn.linear_model._least_angle._lars_path_residues"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_least_angle.assert_allclose": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_allclose"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_least_angle.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_least_angle.assert_raises": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_least_angle.assert_warns": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_warns"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_least_angle.clone": {
  "data": {
   "shadows": "sklearn.base.clone"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_least_angle.datasets": {
  "data": {
   "shadows": "sklearn.datasets"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_least_angle.default_parameter": {
  "data": {
   "lineno": 533
  },
  "type": "constant"
 },
 "sklearn.linear_model.tests.test_least_angle.diabetes": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "sklearn.linear_model.tests.test_least_angle.estimator_parameter_map": {
  "data": {
   "lineno": 535
  },
  "type": "constant"
 },
 "sklearn.linear_model.tests.test_least_angle.ignore_warnings": {
  "data": {
   "shadows": "sklearn.utils._testing.ignore_warnings"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_least_angle.lars_path": {
  "data": {
   "shadows": "sklearn.linear_model.lars_path"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_least_angle.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_least_angle.linear_model": {
  "data": {
   "shadows": "sklearn.linear_model"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_least_angle.n_samples": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "sklearn.linear_model.tests.test_least_angle.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_least_angle.np_version": {
  "data": {
   "shadows": "sklearn.utils.fixes.np_version"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_least_angle.parse_version": {
  "data": {
   "shadows": "sklearn.utils.fixes.parse_version"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_least_angle.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_least_angle.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_least_angle.test_X_none_gram_not_none": {
  "data": {
   "lineno": 760,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.linear_model.lars_path",
    "sklearn.linear_model.tests.test_least_angle.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_least_angle.test_all_precomputed": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "numpy.dot",
    "sklearn.linear_model.lars_path",
    "sklearn.linear_model.tests.test_least_angle.G",
    "sklearn.linear_model.tests.test_least_angle.Xy",
    "sklearn.utils._testing.assert_array_almost_equal",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_least_angle.test_collinearity": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "f",
    "numpy.array",
    "numpy.dot",
    "numpy.isnan",
    "numpy.random.RandomState",
    "numpy.zeros",
    "numpy.zeros_like",
    "sklearn.linear_model.lars_path",
    "sklearn.linear_model.tests.test_least_angle.n_samples",
    "sklearn.utils._testing.assert_array_almost_equal",
    "sklearn.utils._testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_least_angle.test_copy_X_with_auto_gram": {
  "data": {
   "lineno": 766,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.linear_model.lars_path",
    "sklearn.utils._testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_least_angle.test_estimatorclasses_positive_constraint": {
  "data": {
   "lineno": 540,
   "symbols_in_volume": [
    "getattr",
    "min",
    "sklearn.linear_model",
    "sklearn.linear_model.tests.test_least_angle.default_parameter",
    "sklearn.linear_model.tests.test_least_angle.estimator_parameter_map"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_least_angle.test_lars_add_features": {
  "data": {
   "lineno": 386,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.arange",
    "numpy.isfinite",
    "numpy.newaxis",
    "sklearn.linear_model.Lars"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_least_angle.test_lars_cv": {
  "data": {
   "lineno": 434,
   "symbols_in_volume": [
    "hasattr",
    "numpy.testing.assert_array_less",
    "sklearn.linear_model.LassoLarsCV",
    "sklearn.linear_model.tests.test_least_angle.diabetes"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_least_angle.test_lars_cv_max_iter": {
  "data": {
   "lineno": 450,
   "symbols_in_volume": [
    "len",
    "numpy.c_",
    "numpy.errstate",
    "numpy.random.RandomState",
    "sklearn.linear_model.LassoLarsCV",
    "sklearn.linear_model.tests.test_least_angle.diabetes",
    "sklearn.linear_model.tests.test_least_angle.warnings",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_least_angle.test_lars_lstsq": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "numpy.linalg.lstsq",
    "sklearn.linear_model.LassoLars",
    "sklearn.linear_model.tests.test_least_angle.pytest",
    "sklearn.utils._testing.assert_array_almost_equal",
    "sklearn.utils.fixes.np_version",
    "sklearn.utils.fixes.parse_version"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_least_angle.test_lars_n_nonzero_coefs": {
  "data": {
   "lineno": 397,
   "symbols_in_volume": [
    "len",
    "sklearn.linear_model.Lars"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_least_angle.test_lars_path_gram_equivalent": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "sklearn.linear_model.lars_path",
    "sklearn.linear_model.lars_path_gram",
    "sklearn.linear_model.tests.test_least_angle.G",
    "sklearn.linear_model.tests.test_least_angle.Xy",
    "sklearn.linear_model.tests.test_least_angle._assert_same_lars_path_result",
    "sklearn.linear_model.tests.test_least_angle.n_samples",
    "sklearn.linear_model.tests.test_least_angle.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_least_angle.test_lars_path_positive_constraint": {
  "data": {
   "lineno": 503,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.linear_model.lars_path",
    "sklearn.linear_model.tests.test_least_angle.diabetes",
    "sklearn.linear_model.tests.test_least_angle.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_least_angle.test_lars_path_readonly_data": {
  "data": {
   "lineno": 492,
   "symbols_in_volume": [
    "sklearn.linear_model._least_angle._lars_path_residues",
    "sklearn.model_selection.train_test_split",
    "sklearn.utils._testing.TempMemmap"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_least_angle.test_lars_precompute": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "classifier",
    "numpy.dot",
    "sklearn.linear_model.Lars",
    "sklearn.linear_model.LarsCV",
    "sklearn.linear_model.LassoLarsIC",
    "sklearn.linear_model.tests.test_least_angle.G",
    "sklearn.linear_model.tests.test_least_angle.pytest",
    "sklearn.utils._testing.assert_array_almost_equal",
    "sklearn.utils._testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_least_angle.test_lars_with_jitter": {
  "data": {
   "lineno": 738,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.mean",
    "numpy.testing.assert_allclose",
    "sklearn.base.clone",
    "sklearn.linear_model.Lars",
    "sklearn.linear_model.LassoLars",
    "sklearn.linear_model.tests.test_least_angle.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_least_angle.test_lasso_gives_lstsq_solution": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "numpy.linalg.lstsq",
    "sklearn.linear_model.lars_path",
    "sklearn.linear_model.tests.test_least_angle.pytest",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_least_angle.test_lasso_lars_copyX_behaviour": {
  "data": {
   "lineno": 707,
   "symbols_in_volume": [
    "numpy.array_equal",
    "numpy.random.RandomState",
    "sklearn.linear_model.LassoLarsIC",
    "sklearn.linear_model.tests.test_least_angle.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_least_angle.test_lasso_lars_fit_copyX_behaviour": {
  "data": {
   "lineno": 723,
   "symbols_in_volume": [
    "numpy.array_equal",
    "numpy.random.RandomState",
    "sklearn.linear_model.LassoLarsIC",
    "sklearn.linear_model.tests.test_least_angle.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_least_angle.test_lasso_lars_ic": {
  "data": {
   "lineno": 469,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.c_",
    "numpy.max",
    "numpy.random.RandomState",
    "numpy.where",
    "sklearn.linear_model.LassoLarsIC",
    "sklearn.linear_model.tests.test_least_angle.diabetes",
    "sklearn.utils._testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_least_angle.test_lasso_lars_path_length": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.diff",
    "sklearn.linear_model.LassoLars",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_least_angle.test_lasso_lars_vs_R_implementation": {
  "data": {
   "lineno": 611,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.mean",
    "numpy.newaxis",
    "numpy.sqrt",
    "numpy.sum",
    "sklearn.linear_model.LassoLars",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_least_angle.test_lasso_lars_vs_lasso_cd": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "numpy.linspace",
    "scipy.linalg.norm",
    "sklearn.linear_model.Lasso",
    "sklearn.linear_model.LassoLars",
    "sklearn.linear_model.lars_path",
    "sklearn.linear_model.tests.test_least_angle.diabetes",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_least_angle.test_lasso_lars_vs_lasso_cd_early_stopping": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "scipy.linalg.norm",
    "sklearn.linear_model.Lasso",
    "sklearn.linear_model.lars_path"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_least_angle.test_lasso_lars_vs_lasso_cd_ill_conditioned": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.dot",
    "numpy.random.RandomState",
    "numpy.sign",
    "numpy.zeros",
    "sklearn.linear_model.lars_path",
    "sklearn.linear_model.lasso_path",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_least_angle.test_lasso_lars_vs_lasso_cd_ill_conditioned2": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "objective_function",
    "sklearn.exceptions.ConvergenceWarning",
    "sklearn.linear_model.Lasso",
    "sklearn.linear_model.LassoLars",
    "sklearn.utils._testing.assert_warns"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_least_angle.test_lasso_lars_vs_lasso_cd_ill_conditioned2.objective_function": {
  "data": {
   "lineno": 370,
   "symbols_in_volume": [
    "len",
    "numpy.dot",
    "scipy.linalg.norm"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_least_angle.test_lasso_lars_vs_lasso_cd_positive": {
  "data": {
   "lineno": 559,
   "symbols_in_volume": [
    "numpy.linspace",
    "scipy.linalg.norm",
    "sklearn.linear_model.Lasso",
    "sklearn.linear_model.LassoLars",
    "sklearn.linear_model.lars_path",
    "sklearn.linear_model.tests.test_least_angle.diabetes",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_least_angle.test_multitarget": {
  "data": {
   "lineno": 406,
   "symbols_in_volume": [
    "numpy.vstack",
    "range",
    "sklearn.linear_model.Lars",
    "sklearn.linear_model.LassoLars",
    "sklearn.utils._testing.assert_array_almost_equal",
    "sklearn.utils._testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_least_angle.test_no_path": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "sklearn.linear_model.lars_path",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_least_angle.test_no_path_all_precomputed": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "numpy.dot",
    "sklearn.linear_model.lars_path",
    "sklearn.linear_model.tests.test_least_angle.G",
    "sklearn.linear_model.tests.test_least_angle.Xy",
    "sklearn.linear_model.tests.test_least_angle.diabetes",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_least_angle.test_no_path_precomputed": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "sklearn.linear_model.lars_path",
    "sklearn.linear_model.tests.test_least_angle.G",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_least_angle.test_rank_deficient_design": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "numpy.dot",
    "scipy.linalg.norm",
    "sklearn.linear_model.Lasso",
    "sklearn.linear_model.LassoLars"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_least_angle.test_simple": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "abs",
    "enumerate",
    "io.StringIO",
    "len",
    "numpy.dot",
    "numpy.max",
    "sklearn.linear_model.lars_path",
    "sklearn.linear_model.tests.test_least_angle.sys"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_least_angle.test_simple_precomputed": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "abs",
    "enumerate",
    "len",
    "numpy.dot",
    "numpy.max",
    "sklearn.linear_model.lars_path",
    "sklearn.linear_model.tests.test_least_angle.G"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_least_angle.test_singular_matrix": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.linear_model.lars_path",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_least_angle.test_x_none_gram_none_raises_value_error": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "ValueError",
    "numpy.dot",
    "sklearn.linear_model.lars_path",
    "sklearn.linear_model.tests.test_least_angle.Xy",
    "sklearn.utils._testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_least_angle.train_test_split": {
  "data": {
   "shadows": "sklearn.model_selection.train_test_split"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_least_angle.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_logistic": {
  "data": {
   "symbols_in_volume": [
    "scipy.sparse.csr_matrix",
    "sklearn.datasets.load_iris",
    "sklearn.linear_model.tests.test_logistic.X"
   ]
  },
  "type": "module"
 },
 "sklearn.linear_model.tests.test_logistic.ConvergenceWarning": {
  "data": {
   "shadows": "sklearn.exceptions.ConvergenceWarning"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_logistic.GridSearchCV": {
  "data": {
   "shadows": "sklearn.model_selection.GridSearchCV"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_logistic.LabelEncoder": {
  "data": {
   "shadows": "sklearn.preprocessing.LabelEncoder"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_logistic.LogisticRegression": {
  "data": {
   "shadows": "sklearn.linear_model._logistic.LogisticRegression"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_logistic.LogisticRegressionCV": {
  "data": {
   "shadows": "sklearn.linear_model._logistic.LogisticRegressionCV"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_logistic.SGDClassifier": {
  "data": {
   "shadows": "sklearn.linear_model.SGDClassifier"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_logistic.StandardScaler": {
  "data": {
   "shadows": "sklearn.preprocessing.StandardScaler"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_logistic.StratifiedKFold": {
  "data": {
   "shadows": "sklearn.model_selection.StratifiedKFold"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_logistic.X": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "sklearn.linear_model.tests.test_logistic.X_sp": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "sklearn.linear_model.tests.test_logistic.Y1": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "sklearn.linear_model.tests.test_logistic.Y2": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "sklearn.linear_model.tests.test_logistic._IS_32BIT": {
  "data": {
   "shadows": "sklearn.utils._IS_32BIT"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_logistic._compute_class_weight_dictionary": {
  "data": {
   "lineno": 885,
   "symbols_in_volume": [
    "dict",
    "numpy.unique",
    "sklearn.utils.compute_class_weight",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic._log_reg_scoring_path": {
  "data": {
   "shadows": "sklearn.linear_model._logistic._log_reg_scoring_path"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_logistic._logistic_grad_hess": {
  "data": {
   "shadows": "sklearn.linear_model._logistic._logistic_grad_hess"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_logistic._logistic_loss": {
  "data": {
   "shadows": "sklearn.linear_model._logistic._logistic_loss"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_logistic._logistic_loss_and_grad": {
  "data": {
   "shadows": "sklearn.linear_model._logistic._logistic_loss_and_grad"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_logistic._logistic_regression_path": {
  "data": {
   "shadows": "sklearn.linear_model._logistic._logistic_regression_path"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_logistic._multinomial_grad_hess": {
  "data": {
   "shadows": "sklearn.linear_model._logistic._multinomial_grad_hess"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_logistic.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_logistic.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_logistic.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_logistic.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_logistic.assert_raise_message": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_raise_message"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_logistic.assert_raises": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_logistic.assert_warns": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_warns"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_logistic.assert_warns_message": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_warns_message"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_logistic.check_predictions": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "len",
    "numpy.ones",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_array_equal",
    "numpy.unique",
    "sklearn.linear_model.tests.test_logistic.X"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.clone": {
  "data": {
   "shadows": "sklearn.base.clone"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_logistic.compute_class_weight": {
  "data": {
   "shadows": "sklearn.utils.compute_class_weight"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_logistic.cross_val_score": {
  "data": {
   "shadows": "sklearn.model_selection.cross_val_score"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_logistic.get_scorer": {
  "data": {
   "shadows": "sklearn.metrics.get_scorer"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_logistic.ignore_warnings": {
  "data": {
   "shadows": "sklearn.utils._testing.ignore_warnings"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_logistic.iris": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "sklearn.linear_model.tests.test_logistic.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_logistic.load_iris": {
  "data": {
   "shadows": "sklearn.datasets.load_iris"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_logistic.log_loss": {
  "data": {
   "shadows": "sklearn.metrics.log_loss"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_logistic.make_classification": {
  "data": {
   "shadows": "sklearn.datasets.make_classification"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_logistic.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_logistic.optimize": {
  "data": {
   "shadows": "scipy.optimize"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_logistic.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_logistic.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_logistic.scale": {
  "data": {
   "shadows": "sklearn.preprocessing.scale"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_logistic.shuffle": {
  "data": {
   "shadows": "sklearn.utils.shuffle"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_logistic.skip_if_no_parallel": {
  "data": {
   "shadows": "sklearn.utils._testing.skip_if_no_parallel"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_logistic.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_logistic.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_logistic.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_logistic.test_LogisticRegressionCV_GridSearchCV_elastic_net": {
  "data": {
   "lineno": 1499,
   "symbols_in_volume": [
    "numpy.linspace",
    "numpy.logspace",
    "sklearn.datasets.make_classification",
    "sklearn.linear_model._logistic.LogisticRegression",
    "sklearn.linear_model._logistic.LogisticRegressionCV",
    "sklearn.linear_model.tests.test_logistic.X",
    "sklearn.linear_model.tests.test_logistic.pytest",
    "sklearn.model_selection.GridSearchCV",
    "sklearn.model_selection.StratifiedKFold"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_LogisticRegressionCV_GridSearchCV_elastic_net_ovr": {
  "data": {
   "lineno": 1532,
   "symbols_in_volume": [
    "numpy.linspace",
    "numpy.logspace",
    "sklearn.datasets.make_classification",
    "sklearn.linear_model._logistic.LogisticRegression",
    "sklearn.linear_model._logistic.LogisticRegressionCV",
    "sklearn.linear_model.tests.test_logistic.X",
    "sklearn.model_selection.GridSearchCV",
    "sklearn.model_selection.StratifiedKFold",
    "sklearn.model_selection.train_test_split"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_LogisticRegressionCV_elasticnet_attribute_shapes": {
  "data": {
   "lineno": 1590,
   "symbols_in_volume": [
    "list",
    "numpy.asarray",
    "numpy.linspace",
    "numpy.logspace",
    "sklearn.datasets.make_classification",
    "sklearn.linear_model._logistic.LogisticRegressionCV",
    "sklearn.linear_model.tests.test_logistic.X"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_LogisticRegressionCV_no_refit": {
  "data": {
   "lineno": 1564,
   "symbols_in_volume": [
    "numpy.linspace",
    "numpy.logspace",
    "sklearn.datasets.make_classification",
    "sklearn.linear_model._logistic.LogisticRegressionCV",
    "sklearn.linear_model.tests.test_logistic.X",
    "sklearn.linear_model.tests.test_logistic.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_LogisticRegression_elastic_net_objective": {
  "data": {
   "lineno": 1468,
   "symbols_in_volume": [
    "enet_objective",
    "numpy.logspace",
    "sklearn.datasets.make_classification",
    "sklearn.linear_model._logistic.LogisticRegression",
    "sklearn.linear_model.tests.test_logistic.X",
    "sklearn.linear_model.tests.test_logistic.pytest",
    "sklearn.preprocessing.scale"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_LogisticRegression_elastic_net_objective.enet_objective": {
  "data": {
   "lineno": 1489,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.dot",
    "numpy.sum",
    "sklearn.linear_model.tests.test_logistic.X",
    "sklearn.metrics.log_loss"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_check_solver_option": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "LR",
    "ValueError",
    "sklearn.linear_model._logistic.LogisticRegression",
    "sklearn.linear_model._logistic.LogisticRegressionCV",
    "sklearn.linear_model.tests.test_logistic.X",
    "sklearn.linear_model.tests.test_logistic.iris",
    "sklearn.linear_model.tests.test_logistic.pytest",
    "sklearn.utils._testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_consistency_path": {
  "data": {
   "lineno": 347,
   "symbols_in_volume": [
    "enumerate",
    "f",
    "numpy.concatenate",
    "numpy.logspace",
    "numpy.random.RandomState",
    "numpy.testing.assert_array_almost_equal",
    "sklearn.linear_model._logistic.LogisticRegression",
    "sklearn.linear_model._logistic._logistic_regression_path",
    "sklearn.linear_model.tests.test_logistic.X",
    "sklearn.utils._testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_dtype_match": {
  "data": {
   "lineno": 1310,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.float32",
    "numpy.float64",
    "numpy.testing.assert_allclose",
    "scipy.sparse.csr_matrix",
    "sklearn.base.clone",
    "sklearn.linear_model._logistic.LogisticRegression",
    "sklearn.linear_model.tests.test_logistic.X",
    "sklearn.linear_model.tests.test_logistic.Y1",
    "sklearn.linear_model.tests.test_logistic.os",
    "sklearn.linear_model.tests.test_logistic.pytest",
    "sklearn.utils._IS_32BIT"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_elastic_net_coeffs": {
  "data": {
   "lineno": 1402,
   "symbols_in_volume": [
    "list",
    "numpy.allclose",
    "sklearn.datasets.make_classification",
    "sklearn.linear_model._logistic.LogisticRegression",
    "sklearn.linear_model.tests.test_logistic.X"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_elastic_net_l1_l2_equivalence": {
  "data": {
   "lineno": 1423,
   "symbols_in_volume": [
    "numpy.testing.assert_array_almost_equal",
    "sklearn.datasets.make_classification",
    "sklearn.linear_model._logistic.LogisticRegression",
    "sklearn.linear_model.tests.test_logistic.X",
    "sklearn.linear_model.tests.test_logistic.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_elastic_net_versus_sgd": {
  "data": {
   "lineno": 1651,
   "symbols_in_volume": [
    "numpy.inf",
    "numpy.logspace",
    "numpy.testing.assert_array_almost_equal",
    "sklearn.datasets.make_classification",
    "sklearn.linear_model.SGDClassifier",
    "sklearn.linear_model._logistic.LogisticRegression",
    "sklearn.linear_model.tests.test_logistic.X",
    "sklearn.linear_model.tests.test_logistic.pytest",
    "sklearn.preprocessing.scale"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_elastic_net_vs_l1_l2": {
  "data": {
   "lineno": 1442,
   "symbols_in_volume": [
    "numpy.linspace",
    "sklearn.datasets.make_classification",
    "sklearn.linear_model._logistic.LogisticRegression",
    "sklearn.linear_model.tests.test_logistic.X",
    "sklearn.linear_model.tests.test_logistic.pytest",
    "sklearn.model_selection.GridSearchCV",
    "sklearn.model_selection.train_test_split"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_error": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "LR",
    "ValueError",
    "sklearn.linear_model._logistic.LogisticRegression",
    "sklearn.linear_model._logistic.LogisticRegressionCV",
    "sklearn.linear_model.tests.test_logistic.X",
    "sklearn.linear_model.tests.test_logistic.Y1",
    "sklearn.utils._testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_inconsistent_input": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "ValueError",
    "numpy.ones",
    "numpy.random.RandomState",
    "sklearn.linear_model._logistic.LogisticRegression",
    "sklearn.linear_model.tests.test_logistic.X",
    "sklearn.utils._testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_intercept_logistic_helper": {
  "data": {
   "lineno": 621,
   "symbols_in_volume": [
    "hess",
    "hess_interp",
    "numpy.hstack",
    "numpy.newaxis",
    "numpy.ones",
    "numpy.random.RandomState",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_array_almost_equal",
    "sklearn.datasets.make_classification",
    "sklearn.linear_model._logistic._logistic_grad_hess",
    "sklearn.linear_model._logistic._logistic_loss",
    "sklearn.linear_model.tests.test_logistic.X"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_l1_ratio_param": {
  "data": {
   "lineno": 1617,
   "symbols_in_volume": [
    "UserWarning",
    "ValueError",
    "sklearn.linear_model._logistic.LogisticRegression",
    "sklearn.linear_model.tests.test_logistic.X",
    "sklearn.linear_model.tests.test_logistic.Y1",
    "sklearn.linear_model.tests.test_logistic.pytest",
    "sklearn.utils._testing.assert_raise_message",
    "sklearn.utils._testing.assert_warns_message"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_l1_ratios_param": {
  "data": {
   "lineno": 1633,
   "symbols_in_volume": [
    "UserWarning",
    "ValueError",
    "sklearn.linear_model._logistic.LogisticRegressionCV",
    "sklearn.linear_model.tests.test_logistic.X",
    "sklearn.linear_model.tests.test_logistic.Y1",
    "sklearn.linear_model.tests.test_logistic.pytest",
    "sklearn.utils._testing.assert_raise_message",
    "sklearn.utils._testing.assert_warns_message"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_liblinear_decision_function_zero": {
  "data": {
   "lineno": 1005,
   "symbols_in_volume": [
    "numpy.testing.assert_array_equal",
    "numpy.zeros",
    "sklearn.datasets.make_classification",
    "sklearn.linear_model._logistic.LogisticRegression",
    "sklearn.linear_model.tests.test_logistic.X"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_liblinear_dual_random_state": {
  "data": {
   "lineno": 409,
   "symbols_in_volume": [
    "AssertionError",
    "numpy.testing.assert_array_almost_equal",
    "sklearn.datasets.make_classification",
    "sklearn.linear_model._logistic.LogisticRegression",
    "sklearn.linear_model.tests.test_logistic.X",
    "sklearn.utils._testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_liblinear_logregcv_sparse": {
  "data": {
   "lineno": 1021,
   "symbols_in_volume": [
    "scipy.sparse.csr_matrix",
    "sklearn.datasets.make_classification",
    "sklearn.linear_model._logistic.LogisticRegressionCV",
    "sklearn.linear_model.tests.test_logistic.X"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_logistic_cv": {
  "data": {
   "lineno": 509,
   "symbols_in_volume": [
    "len",
    "list",
    "numpy.asarray",
    "numpy.random.RandomState",
    "numpy.sign",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_array_equal",
    "sklearn.linear_model._logistic.LogisticRegression",
    "sklearn.linear_model._logistic.LogisticRegressionCV"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_logistic_cv_mock_scorer": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "MockScorer",
    "len",
    "sklearn.linear_model._logistic.LogisticRegressionCV",
    "sklearn.linear_model.tests.test_logistic.X",
    "sklearn.linear_model.tests.test_logistic.Y1"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_logistic_cv_mock_scorer.MockScorer": {
  "data": {
   "lineno": 105
  },
  "type": "class"
 },
 "sklearn.linear_model.tests.test_logistic.test_logistic_cv_mock_scorer.MockScorer.__call__": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_logistic_cv_mock_scorer.MockScorer.__init__": {
  "data": {
   "lineno": 106
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_logistic_cv_multinomial_score": {
  "data": {
   "lineno": 536,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.testing.assert_array_almost_equal",
    "scorer",
    "sklearn.datasets.make_classification",
    "sklearn.linear_model._logistic.LogisticRegression",
    "sklearn.linear_model._logistic._log_reg_scoring_path",
    "sklearn.linear_model.tests.test_logistic.X",
    "sklearn.linear_model.tests.test_logistic.pytest",
    "sklearn.metrics.get_scorer"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_logistic_cv_score_does_not_warn_by_default": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "len",
    "sklearn.linear_model._logistic.LogisticRegressionCV",
    "sklearn.linear_model.tests.test_logistic.X",
    "sklearn.linear_model.tests.test_logistic.Y1",
    "sklearn.linear_model.tests.test_logistic.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_logistic_cv_sparse": {
  "data": {
   "lineno": 606,
   "symbols_in_volume": [
    "numpy.testing.assert_array_almost_equal",
    "scipy.sparse.csr_matrix",
    "sklearn.datasets.make_classification",
    "sklearn.linear_model._logistic.LogisticRegressionCV",
    "sklearn.linear_model.tests.test_logistic.X"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_logistic_grad_hess": {
  "data": {
   "lineno": 460,
   "symbols_in_volume": [
    "hess",
    "numpy.array",
    "numpy.full",
    "numpy.linspace",
    "numpy.newaxis",
    "numpy.random.RandomState",
    "numpy.sign",
    "numpy.testing.assert_array_almost_equal",
    "numpy.zeros",
    "numpy.zeros_like",
    "scipy.linalg.lstsq",
    "scipy.sparse.csr_matrix",
    "sklearn.linear_model._logistic._logistic_grad_hess",
    "sklearn.linear_model._logistic._logistic_loss",
    "sklearn.linear_model._logistic._logistic_loss_and_grad",
    "sklearn.linear_model.tests.test_logistic.X",
    "sklearn.linear_model.tests.test_logistic.X_sp"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_logistic_loss_and_grad": {
  "data": {
   "lineno": 430,
   "symbols_in_volume": [
    "numpy.testing.assert_array_almost_equal",
    "numpy.zeros",
    "scipy.optimize.approx_fprime",
    "scipy.sparse.csr_matrix",
    "sklearn.datasets.make_classification",
    "sklearn.linear_model._logistic._logistic_loss_and_grad",
    "sklearn.linear_model.tests.test_logistic.X",
    "sklearn.linear_model.tests.test_logistic.X_sp"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_logistic_regression_class_weights": {
  "data": {
   "lineno": 893,
   "symbols_in_volume": [
    "numpy.testing.assert_array_almost_equal",
    "sklearn.linear_model._logistic.LogisticRegression",
    "sklearn.linear_model.tests.test_logistic.X",
    "sklearn.linear_model.tests.test_logistic._compute_class_weight_dictionary",
    "sklearn.linear_model.tests.test_logistic.iris"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_logistic_regression_cv_refit": {
  "data": {
   "lineno": 1122,
   "symbols_in_volume": [
    "dict",
    "numpy.testing.assert_array_almost_equal",
    "sklearn.datasets.make_classification",
    "sklearn.linear_model._logistic.LogisticRegression",
    "sklearn.linear_model._logistic.LogisticRegressionCV",
    "sklearn.linear_model.tests.test_logistic.X",
    "sklearn.linear_model.tests.test_logistic.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_logistic_regression_multi_class_auto": {
  "data": {
   "lineno": 1693,
   "symbols_in_volume": [
    "fit",
    "numpy.allclose",
    "numpy.testing.assert_allclose",
    "sklearn.linear_model._logistic.LogisticRegression",
    "sklearn.linear_model._logistic.LogisticRegressionCV",
    "sklearn.linear_model.tests.test_logistic.X",
    "sklearn.linear_model.tests.test_logistic.iris",
    "sklearn.linear_model.tests.test_logistic.pytest",
    "sklearn.linear_model.tests.test_logistic.sys"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_logistic_regression_multi_class_auto.fit": {
  "data": {
   "lineno": 1703,
   "symbols_in_volume": [
    "sklearn.base.clone",
    "sklearn.linear_model.tests.test_logistic.X"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_logistic_regression_multinomial": {
  "data": {
   "lineno": 925,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose",
    "sklearn.datasets.make_classification",
    "sklearn.linear_model._logistic.LogisticRegression",
    "sklearn.linear_model._logistic.LogisticRegressionCV",
    "sklearn.linear_model.tests.test_logistic.X",
    "sklearn.preprocessing.StandardScaler"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_logistic_regression_path_coefs_multinomial": {
  "data": {
   "lineno": 1673,
   "symbols_in_volume": [
    "AssertionError",
    "numpy.testing.assert_array_almost_equal",
    "sklearn.datasets.make_classification",
    "sklearn.linear_model._logistic._logistic_regression_path",
    "sklearn.linear_model.tests.test_logistic.X",
    "sklearn.linear_model.tests.test_logistic.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_logistic_regression_path_convergence_fail": {
  "data": {
   "lineno": 385,
   "symbols_in_volume": [
    "DeprecationWarning",
    "len",
    "numpy.concatenate",
    "numpy.random.RandomState",
    "sklearn.exceptions.ConvergenceWarning",
    "sklearn.linear_model._logistic._logistic_regression_path",
    "sklearn.linear_model.tests.test_logistic.X",
    "sklearn.linear_model.tests.test_logistic.pytest",
    "sklearn.linear_model.tests.test_logistic.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_logistic_regression_sample_weights": {
  "data": {
   "lineno": 811,
   "symbols_in_volume": [
    "LR",
    "numpy.ones",
    "numpy.testing.assert_array_almost_equal",
    "sklearn.datasets.make_classification",
    "sklearn.linear_model._logistic.LogisticRegression",
    "sklearn.linear_model._logistic.LogisticRegressionCV",
    "sklearn.linear_model.tests.test_logistic.X",
    "sklearn.utils._testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_logistic_regression_solvers": {
  "data": {
   "lineno": 713,
   "symbols_in_volume": [
    "dict",
    "numpy.testing.assert_array_almost_equal",
    "sklearn.datasets.make_classification",
    "sklearn.linear_model._logistic.LogisticRegression",
    "sklearn.linear_model.tests.test_logistic.X"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_logistic_regression_solvers_multiclass": {
  "data": {
   "lineno": 739,
   "symbols_in_volume": [
    "dict",
    "numpy.testing.assert_array_almost_equal",
    "sklearn.datasets.make_classification",
    "sklearn.linear_model._logistic.LogisticRegression",
    "sklearn.linear_model.tests.test_logistic.X"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_logistic_regressioncv_class_weights": {
  "data": {
   "lineno": 767,
   "symbols_in_volume": [
    "len",
    "numpy.testing.assert_array_almost_equal",
    "sklearn.datasets.make_classification",
    "sklearn.linear_model._logistic.LogisticRegressionCV",
    "sklearn.linear_model.tests.test_logistic.X"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_logisticregression_liblinear_sample_weight": {
  "data": {
   "lineno": 1771,
   "symbols_in_volume": [
    "getattr",
    "len",
    "numpy.array",
    "numpy.dtype",
    "numpy.hstack",
    "numpy.ones",
    "numpy.testing.assert_allclose",
    "numpy.vstack",
    "sklearn.base.clone",
    "sklearn.linear_model._logistic.LogisticRegression",
    "sklearn.linear_model.tests.test_logistic.X",
    "sklearn.linear_model.tests.test_logistic.pytest",
    "sklearn.utils.shuffle"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_logreg_intercept_scaling": {
  "data": {
   "lineno": 1037,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.linear_model._logistic.LogisticRegression",
    "sklearn.linear_model.tests.test_logistic.X",
    "sklearn.linear_model.tests.test_logistic.Y1",
    "sklearn.utils._testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_logreg_intercept_scaling_zero": {
  "data": {
   "lineno": 1049,
   "symbols_in_volume": [
    "sklearn.linear_model._logistic.LogisticRegression",
    "sklearn.linear_model.tests.test_logistic.X",
    "sklearn.linear_model.tests.test_logistic.Y1"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_logreg_l1": {
  "data": {
   "lineno": 1057,
   "symbols_in_volume": [
    "numpy.concatenate",
    "numpy.ones",
    "numpy.random.RandomState",
    "numpy.testing.assert_array_almost_equal",
    "numpy.zeros",
    "sklearn.datasets.make_classification",
    "sklearn.linear_model._logistic.LogisticRegression",
    "sklearn.linear_model.tests.test_logistic.X"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_logreg_l1_sparse_data": {
  "data": {
   "lineno": 1085,
   "symbols_in_volume": [
    "numpy.concatenate",
    "numpy.random.RandomState",
    "numpy.testing.assert_array_almost_equal",
    "numpy.zeros",
    "scipy.sparse.csr_matrix",
    "sklearn.datasets.make_classification",
    "sklearn.linear_model._logistic.LogisticRegression",
    "sklearn.linear_model.tests.test_logistic.X"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_logreg_predict_proba_multinomial": {
  "data": {
   "lineno": 1149,
   "symbols_in_volume": [
    "sklearn.datasets.make_classification",
    "sklearn.linear_model._logistic.LogisticRegression",
    "sklearn.linear_model.tests.test_logistic.X",
    "sklearn.metrics.log_loss"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_lr_liblinear_warning": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "UserWarning",
    "sklearn.linear_model._logistic.LogisticRegression",
    "sklearn.linear_model.tests.test_logistic.iris",
    "sklearn.utils._testing.assert_warns_message",
    "sklearn.utils._testing.skip_if_no_parallel"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_max_iter": {
  "data": {
   "lineno": 1170,
   "symbols_in_volume": [
    "range",
    "sklearn.exceptions.ConvergenceWarning",
    "sklearn.linear_model._logistic.LogisticRegression",
    "sklearn.linear_model.tests.test_logistic.X",
    "sklearn.linear_model.tests.test_logistic.iris",
    "sklearn.utils._testing.assert_warns"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_multinomial_binary": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "numpy.argmax",
    "numpy.array",
    "numpy.intp",
    "numpy.mean",
    "numpy.testing.assert_array_equal",
    "sklearn.linear_model._logistic.LogisticRegression",
    "sklearn.linear_model.tests.test_logistic.iris",
    "sklearn.linear_model.tests.test_logistic.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_multinomial_binary_probabilities": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "numpy.c_",
    "numpy.exp",
    "numpy.testing.assert_almost_equal",
    "sklearn.datasets.make_classification",
    "sklearn.linear_model._logistic.LogisticRegression",
    "sklearn.linear_model.tests.test_logistic.X"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_multinomial_grad_hess": {
  "data": {
   "lineno": 974,
   "symbols_in_volume": [
    "hessp",
    "numpy.argmax",
    "numpy.array",
    "numpy.dot",
    "numpy.linspace",
    "numpy.newaxis",
    "numpy.ones",
    "numpy.random.RandomState",
    "numpy.testing.assert_array_almost_equal",
    "numpy.zeros",
    "range",
    "scipy.linalg.lstsq",
    "sklearn.linear_model._logistic._multinomial_grad_hess",
    "sklearn.linear_model.tests.test_logistic.X"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_multinomial_identifiability_on_iris": {
  "data": {
   "lineno": 1834,
   "symbols_in_volume": [
    "len",
    "numpy.testing.assert_allclose",
    "sklearn.linear_model._logistic.LogisticRegression",
    "sklearn.linear_model.tests.test_logistic.iris",
    "sklearn.linear_model.tests.test_logistic.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_multinomial_logistic_regression_string_inputs": {
  "data": {
   "lineno": 569,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.assert_array_almost_equal",
    "numpy.unique",
    "sklearn.datasets.make_classification",
    "sklearn.linear_model._logistic.LogisticRegression",
    "sklearn.linear_model._logistic.LogisticRegressionCV",
    "sklearn.preprocessing.LabelEncoder",
    "sorted"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_multinomial_validation": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.linear_model._logistic.LogisticRegression",
    "sklearn.linear_model.tests.test_logistic.pytest",
    "sklearn.utils._testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_n_iter": {
  "data": {
   "lineno": 1189,
   "symbols_in_volume": [
    "numpy.unique",
    "sklearn.linear_model._logistic.LogisticRegression",
    "sklearn.linear_model._logistic.LogisticRegressionCV",
    "sklearn.linear_model.tests.test_logistic.X",
    "sklearn.linear_model.tests.test_logistic.iris",
    "sklearn.linear_model.tests.test_logistic.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_nan": {
  "data": {
   "lineno": 338,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "numpy.float64",
    "numpy.nan",
    "sklearn.linear_model._logistic.LogisticRegression",
    "sklearn.linear_model.tests.test_logistic.X",
    "sklearn.linear_model.tests.test_logistic.Y1",
    "sklearn.utils._testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_ovr_multinomial_iris": {
  "data": {
   "lineno": 654,
   "symbols_in_volume": [
    "list",
    "numpy.asarray",
    "numpy.newaxis",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal",
    "sklearn.linear_model._logistic.LogisticRegressionCV",
    "sklearn.linear_model.tests.test_logistic.iris",
    "sklearn.model_selection.StratifiedKFold"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_penalty_none": {
  "data": {
   "lineno": 1742,
   "symbols_in_volume": [
    "UserWarning",
    "ValueError",
    "numpy.inf",
    "numpy.testing.assert_array_equal",
    "sklearn.datasets.make_classification",
    "sklearn.linear_model._logistic.LogisticRegression",
    "sklearn.linear_model._logistic.LogisticRegressionCV",
    "sklearn.linear_model.tests.test_logistic.X",
    "sklearn.linear_model.tests.test_logistic.pytest",
    "sklearn.utils._testing.assert_raise_message",
    "sklearn.utils._testing.assert_warns_message"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_predict_2_classes": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "sklearn.linear_model._logistic.LogisticRegression",
    "sklearn.linear_model.tests.test_logistic.X",
    "sklearn.linear_model.tests.test_logistic.X_sp",
    "sklearn.linear_model.tests.test_logistic.Y1",
    "sklearn.linear_model.tests.test_logistic.check_predictions"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_predict_3_classes": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "sklearn.linear_model._logistic.LogisticRegression",
    "sklearn.linear_model.tests.test_logistic.X",
    "sklearn.linear_model.tests.test_logistic.X_sp",
    "sklearn.linear_model.tests.test_logistic.Y2",
    "sklearn.linear_model.tests.test_logistic.check_predictions"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_predict_iris": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "len",
    "numpy.mean",
    "numpy.ones",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_array_equal",
    "numpy.unique",
    "sklearn.linear_model._logistic.LogisticRegression",
    "sklearn.linear_model.tests.test_logistic.iris"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_saga_sparse": {
  "data": {
   "lineno": 1029,
   "symbols_in_volume": [
    "scipy.sparse.csr_matrix",
    "sklearn.datasets.make_classification",
    "sklearn.linear_model._logistic.LogisticRegressionCV",
    "sklearn.linear_model.tests.test_logistic.X"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_saga_vs_liblinear": {
  "data": {
   "lineno": 1270,
   "symbols_in_volume": [
    "numpy.concatenate",
    "numpy.logspace",
    "numpy.testing.assert_array_almost_equal",
    "scipy.sparse.csr_matrix",
    "sklearn.datasets.load_iris",
    "sklearn.datasets.make_classification",
    "sklearn.linear_model._logistic.LogisticRegression",
    "sklearn.linear_model.tests.test_logistic.X",
    "sklearn.linear_model.tests.test_logistic.iris"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_scores_attribute_layout_elasticnet": {
  "data": {
   "lineno": 1804,
   "symbols_in_volume": [
    "enumerate",
    "sklearn.datasets.make_classification",
    "sklearn.linear_model._logistic.LogisticRegression",
    "sklearn.linear_model._logistic.LogisticRegressionCV",
    "sklearn.linear_model.tests.test_logistic.X",
    "sklearn.linear_model.tests.test_logistic.pytest",
    "sklearn.model_selection.StratifiedKFold",
    "sklearn.model_selection.cross_val_score"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_sparsify": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "numpy.testing.assert_array_almost_equal",
    "scipy.sparse.coo_matrix",
    "scipy.sparse.issparse",
    "sklearn.linear_model._logistic.LogisticRegression",
    "sklearn.linear_model.tests.test_logistic.iris"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_warm_start": {
  "data": {
   "lineno": 1238,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.sum",
    "sklearn.exceptions.ConvergenceWarning",
    "sklearn.linear_model._logistic.LogisticRegression",
    "sklearn.linear_model.tests.test_logistic.X",
    "sklearn.linear_model.tests.test_logistic.iris",
    "sklearn.linear_model.tests.test_logistic.pytest",
    "sklearn.utils._testing.ignore_warnings",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_warm_start_converge_LR": {
  "data": {
   "lineno": 1381,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.concatenate",
    "numpy.random.RandomState",
    "numpy.testing.assert_allclose",
    "range",
    "sklearn.linear_model._logistic.LogisticRegression",
    "sklearn.linear_model.tests.test_logistic.X",
    "sklearn.metrics.log_loss"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_write_parameters": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": [
    "numpy.testing.assert_array_almost_equal",
    "sklearn.linear_model._logistic.LogisticRegression",
    "sklearn.linear_model.tests.test_logistic.X",
    "sklearn.linear_model.tests.test_logistic.Y1"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.train_test_split": {
  "data": {
   "shadows": "sklearn.model_selection.train_test_split"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_logistic.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_omp": {
  "data": {
   "symbols_in_volume": [
    "numpy.dot",
    "sklearn.datasets.make_sparse_coded_signal"
   ]
  },
  "type": "module"
 },
 "sklearn.linear_model.tests.test_omp.LinearRegression": {
  "data": {
   "shadows": "sklearn.linear_model.LinearRegression"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_omp.OrthogonalMatchingPursuit": {
  "data": {
   "shadows": "sklearn.linear_model.OrthogonalMatchingPursuit"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_omp.OrthogonalMatchingPursuitCV": {
  "data": {
   "shadows": "sklearn.linear_model.OrthogonalMatchingPursuitCV"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_omp.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_omp.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_omp.assert_raises": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_omp.assert_warns": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_warns"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_omp.check_random_state": {
  "data": {
   "shadows": "sklearn.utils.check_random_state"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_omp.ignore_warnings": {
  "data": {
   "shadows": "sklearn.utils._testing.ignore_warnings"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_omp.make_sparse_coded_signal": {
  "data": {
   "shadows": "sklearn.datasets.make_sparse_coded_signal"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_omp.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_omp.orthogonal_mp": {
  "data": {
   "shadows": "sklearn.linear_model.orthogonal_mp"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_omp.orthogonal_mp_gram": {
  "data": {
   "shadows": "sklearn.linear_model.orthogonal_mp_gram"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_omp.test_bad_input": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.linear_model.orthogonal_mp",
    "sklearn.linear_model.orthogonal_mp_gram",
    "sklearn.utils._testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_omp.test_correct_shapes": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "sklearn.linear_model.orthogonal_mp"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_omp.test_correct_shapes_gram": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "sklearn.linear_model.orthogonal_mp_gram"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_omp.test_estimator": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "numpy.count_nonzero",
    "sklearn.linear_model.OrthogonalMatchingPursuit",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_omp.test_identical_regressors": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "RuntimeWarning",
    "numpy.dot",
    "numpy.zeros",
    "sklearn.linear_model.orthogonal_mp",
    "sklearn.utils._testing.assert_warns"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_omp.test_n_nonzero_coefs": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "numpy.count_nonzero",
    "sklearn.linear_model.orthogonal_mp"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_omp.test_no_atoms": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.dot",
    "numpy.zeros_like",
    "sklearn.linear_model.orthogonal_mp",
    "sklearn.utils._testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_omp.test_omp_cv": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "sklearn.linear_model.OrthogonalMatchingPursuit",
    "sklearn.linear_model.OrthogonalMatchingPursuitCV",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_omp.test_omp_path": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "sklearn.linear_model.orthogonal_mp",
    "sklearn.linear_model.orthogonal_mp_gram",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_omp.test_omp_reaches_least_squares": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "sklearn.linear_model.LinearRegression",
    "sklearn.linear_model.OrthogonalMatchingPursuit",
    "sklearn.utils._testing.assert_array_almost_equal",
    "sklearn.utils.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_omp.test_omp_return_path_prop_with_gram": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "sklearn.linear_model.orthogonal_mp",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_omp.test_orthogonal_mp_gram_readonly": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "numpy.flatnonzero",
    "sklearn.linear_model.orthogonal_mp_gram",
    "sklearn.utils._testing.assert_array_almost_equal",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_omp.test_perfect_signal_recovery": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "numpy.flatnonzero",
    "sklearn.linear_model.orthogonal_mp",
    "sklearn.linear_model.orthogonal_mp_gram",
    "sklearn.utils._testing.assert_array_almost_equal",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_omp.test_swapped_regressors": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.flatnonzero",
    "numpy.zeros",
    "sklearn.linear_model.orthogonal_mp",
    "sklearn.linear_model.orthogonal_mp_gram",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_omp.test_tol": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.sum",
    "sklearn.linear_model.orthogonal_mp"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_omp.test_unreachable_accuracy": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "RuntimeWarning",
    "sklearn.linear_model.orthogonal_mp",
    "sklearn.utils._testing.assert_array_almost_equal",
    "sklearn.utils._testing.assert_warns"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_omp.test_with_without_gram": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "sklearn.linear_model.orthogonal_mp",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_omp.test_with_without_gram_tol": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "sklearn.linear_model.orthogonal_mp",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_passive_aggressive": {
  "data": {
   "symbols_in_volume": [
    "numpy.arange",
    "scipy.sparse.csr_matrix",
    "sklearn.datasets.load_iris",
    "sklearn.linear_model.tests.test_passive_aggressive.X",
    "sklearn.linear_model.tests.test_passive_aggressive.indices",
    "sklearn.linear_model.tests.test_passive_aggressive.iris",
    "sklearn.linear_model.tests.test_passive_aggressive.random_state",
    "sklearn.utils.check_random_state"
   ]
  },
  "type": "module"
 },
 "sklearn.linear_model.tests.test_passive_aggressive.ClassifierMixin": {
  "data": {
   "shadows": "sklearn.base.ClassifierMixin"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_passive_aggressive.MyPassiveAggressive": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "sklearn.base.ClassifierMixin"
   ]
  },
  "type": "class"
 },
 "sklearn.linear_model.tests.test_passive_aggressive.MyPassiveAggressive.__init__": {
  "data": {
   "lineno": 28
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_passive_aggressive.MyPassiveAggressive.fit": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "max",
    "min",
    "numpy.abs",
    "numpy.dot",
    "numpy.float64",
    "numpy.sign",
    "numpy.zeros",
    "range",
    "sklearn.linear_model.tests.test_passive_aggressive.X",
    "sklearn.linear_model.tests.test_passive_aggressive.y"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_passive_aggressive.MyPassiveAggressive.project": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "numpy.dot",
    "sklearn.linear_model.tests.test_passive_aggressive.X"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_passive_aggressive.PassiveAggressiveClassifier": {
  "data": {
   "shadows": "sklearn.linear_model.PassiveAggressiveClassifier"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_passive_aggressive.PassiveAggressiveRegressor": {
  "data": {
   "shadows": "sklearn.linear_model.PassiveAggressiveRegressor"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_passive_aggressive.X": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "sklearn.linear_model.tests.test_passive_aggressive.X_csr": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "sklearn.linear_model.tests.test_passive_aggressive.assert_almost_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_almost_equal"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_passive_aggressive.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_passive_aggressive.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_passive_aggressive.assert_raises": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_passive_aggressive.check_random_state": {
  "data": {
   "shadows": "sklearn.utils.check_random_state"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_passive_aggressive.indices": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "sklearn.linear_model.tests.test_passive_aggressive.iris": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "sklearn.linear_model.tests.test_passive_aggressive.load_iris": {
  "data": {
   "shadows": "sklearn.datasets.load_iris"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_passive_aggressive.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_passive_aggressive.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_passive_aggressive.random_state": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "sklearn.linear_model.tests.test_passive_aggressive.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_passive_aggressive.test_class_weights": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.linear_model.PassiveAggressiveClassifier",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_passive_aggressive.test_classifier_accuracy": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "hasattr",
    "sklearn.linear_model.PassiveAggressiveClassifier",
    "sklearn.linear_model.tests.test_passive_aggressive.X",
    "sklearn.linear_model.tests.test_passive_aggressive.X_csr",
    "sklearn.linear_model.tests.test_passive_aggressive.y"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_passive_aggressive.test_classifier_correctness": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "sklearn.linear_model.PassiveAggressiveClassifier",
    "sklearn.linear_model.tests.test_passive_aggressive.MyPassiveAggressive",
    "sklearn.linear_model.tests.test_passive_aggressive.X",
    "sklearn.linear_model.tests.test_passive_aggressive.X_csr",
    "sklearn.linear_model.tests.test_passive_aggressive.pytest",
    "sklearn.linear_model.tests.test_passive_aggressive.y",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_passive_aggressive.test_classifier_partial_fit": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "hasattr",
    "numpy.unique",
    "range",
    "sklearn.linear_model.PassiveAggressiveClassifier",
    "sklearn.linear_model.tests.test_passive_aggressive.X",
    "sklearn.linear_model.tests.test_passive_aggressive.X_csr",
    "sklearn.linear_model.tests.test_passive_aggressive.y"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_passive_aggressive.test_classifier_refit": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "numpy.unique",
    "sklearn.linear_model.PassiveAggressiveClassifier",
    "sklearn.linear_model.tests.test_passive_aggressive.X",
    "sklearn.linear_model.tests.test_passive_aggressive.iris",
    "sklearn.linear_model.tests.test_passive_aggressive.y",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_passive_aggressive.test_classifier_undefined_methods": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "AttributeError",
    "getattr",
    "sklearn.linear_model.PassiveAggressiveClassifier",
    "sklearn.utils._testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_passive_aggressive.test_equal_class_weight": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "sklearn.linear_model.PassiveAggressiveClassifier",
    "sklearn.utils._testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_passive_aggressive.test_partial_fit_weight_class_balanced": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "ValueError",
    "numpy.unique",
    "sklearn.linear_model.PassiveAggressiveClassifier",
    "sklearn.linear_model.tests.test_passive_aggressive.X",
    "sklearn.linear_model.tests.test_passive_aggressive.y",
    "sklearn.utils._testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_passive_aggressive.test_passive_aggressive_deprecated_attr": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "FutureWarning",
    "getattr",
    "klass",
    "sklearn.linear_model.PassiveAggressiveClassifier",
    "sklearn.linear_model.PassiveAggressiveRegressor",
    "sklearn.linear_model.tests.test_passive_aggressive.X",
    "sklearn.linear_model.tests.test_passive_aggressive.pytest",
    "sklearn.linear_model.tests.test_passive_aggressive.y"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_passive_aggressive.test_regressor_correctness": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "sklearn.linear_model.PassiveAggressiveRegressor",
    "sklearn.linear_model.tests.test_passive_aggressive.MyPassiveAggressive",
    "sklearn.linear_model.tests.test_passive_aggressive.X",
    "sklearn.linear_model.tests.test_passive_aggressive.X_csr",
    "sklearn.linear_model.tests.test_passive_aggressive.pytest",
    "sklearn.linear_model.tests.test_passive_aggressive.y",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_passive_aggressive.test_regressor_mse": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "hasattr",
    "numpy.mean",
    "sklearn.linear_model.PassiveAggressiveRegressor",
    "sklearn.linear_model.tests.test_passive_aggressive.X",
    "sklearn.linear_model.tests.test_passive_aggressive.X_csr",
    "sklearn.linear_model.tests.test_passive_aggressive.y"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_passive_aggressive.test_regressor_partial_fit": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "hasattr",
    "numpy.mean",
    "range",
    "sklearn.linear_model.PassiveAggressiveRegressor",
    "sklearn.linear_model.tests.test_passive_aggressive.X",
    "sklearn.linear_model.tests.test_passive_aggressive.X_csr",
    "sklearn.linear_model.tests.test_passive_aggressive.y"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_passive_aggressive.test_regressor_undefined_methods": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "AttributeError",
    "getattr",
    "sklearn.linear_model.PassiveAggressiveRegressor",
    "sklearn.utils._testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_passive_aggressive.test_wrong_class_weight_format": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "sklearn.linear_model.PassiveAggressiveClassifier",
    "sklearn.utils._testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_passive_aggressive.test_wrong_class_weight_label": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "sklearn.linear_model.PassiveAggressiveClassifier",
    "sklearn.utils._testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_passive_aggressive.y": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "sklearn.linear_model.tests.test_perceptron": {
  "data": {
   "symbols_in_volume": [
    "numpy.arange",
    "scipy.sparse.csr_matrix",
    "sklearn.datasets.load_iris",
    "sklearn.linear_model.tests.test_perceptron.X",
    "sklearn.linear_model.tests.test_perceptron.X_csr",
    "sklearn.linear_model.tests.test_perceptron.indices",
    "sklearn.linear_model.tests.test_perceptron.iris",
    "sklearn.linear_model.tests.test_perceptron.random_state",
    "sklearn.utils.check_random_state"
   ]
  },
  "type": "module"
 },
 "sklearn.linear_model.tests.test_perceptron.MyPerceptron": {
  "data": {
   "lineno": 22
  },
  "type": "class"
 },
 "sklearn.linear_model.tests.test_perceptron.MyPerceptron.__init__": {
  "data": {
   "lineno": 24
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_perceptron.MyPerceptron.fit": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "numpy.float64",
    "numpy.zeros",
    "range",
    "sklearn.linear_model.tests.test_perceptron.X",
    "sklearn.linear_model.tests.test_perceptron.y"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_perceptron.MyPerceptron.predict": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "numpy.atleast_2d",
    "numpy.sign",
    "sklearn.linear_model.tests.test_perceptron.X"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_perceptron.MyPerceptron.project": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "numpy.dot",
    "sklearn.linear_model.tests.test_perceptron.X"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_perceptron.Perceptron": {
  "data": {
   "shadows": "sklearn.linear_model.Perceptron"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_perceptron.X": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "sklearn.linear_model.tests.test_perceptron.X_csr": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "sklearn.linear_model.tests.test_perceptron.assert_allclose": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_allclose"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_perceptron.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_perceptron.assert_raises": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_perceptron.check_random_state": {
  "data": {
   "shadows": "sklearn.utils.check_random_state"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_perceptron.indices": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "sklearn.linear_model.tests.test_perceptron.iris": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "sklearn.linear_model.tests.test_perceptron.load_iris": {
  "data": {
   "shadows": "sklearn.datasets.load_iris"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_perceptron.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_perceptron.random_state": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "sklearn.linear_model.tests.test_perceptron.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_perceptron.test_perceptron_accuracy": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "sklearn.linear_model.Perceptron",
    "sklearn.linear_model.tests.test_perceptron.X",
    "sklearn.linear_model.tests.test_perceptron.X_csr",
    "sklearn.linear_model.tests.test_perceptron.y"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_perceptron.test_perceptron_correctness": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "sklearn.linear_model.Perceptron",
    "sklearn.linear_model.tests.test_perceptron.MyPerceptron",
    "sklearn.linear_model.tests.test_perceptron.X",
    "sklearn.linear_model.tests.test_perceptron.y",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_perceptron.test_perceptron_l1_ratio": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "sklearn.linear_model.Perceptron",
    "sklearn.linear_model.tests.test_perceptron.X",
    "sklearn.linear_model.tests.test_perceptron.y",
    "sklearn.utils._testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_perceptron.test_undefined_methods": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "AttributeError",
    "getattr",
    "sklearn.linear_model.Perceptron",
    "sklearn.utils._testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_perceptron.y": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "sklearn.linear_model.tests.test_ransac": {
  "data": {
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "numpy.column_stack",
    "numpy.newaxis",
    "numpy.random.RandomState",
    "numpy.unique",
    "sklearn.linear_model.tests.test_ransac.X",
    "sklearn.linear_model.tests.test_ransac.data",
    "sklearn.linear_model.tests.test_ransac.outliers",
    "sklearn.linear_model.tests.test_ransac.rng",
    "sklearn.linear_model.tests.test_ransac.y"
   ]
  },
  "type": "module"
 },
 "sklearn.linear_model.tests.test_ransac.ConvergenceWarning": {
  "data": {
   "shadows": "sklearn.exceptions.ConvergenceWarning"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_ransac.LinearRegression": {
  "data": {
   "shadows": "sklearn.linear_model.LinearRegression"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_ransac.OrthogonalMatchingPursuit": {
  "data": {
   "shadows": "sklearn.linear_model.OrthogonalMatchingPursuit"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_ransac.RANSACRegressor": {
  "data": {
   "shadows": "sklearn.linear_model.RANSACRegressor"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_ransac.X": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "sklearn.linear_model.tests.test_ransac._dynamic_max_trials": {
  "data": {
   "shadows": "sklearn.linear_model._ransac._dynamic_max_trials"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_ransac.assert_allclose": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_allclose"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_ransac.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_ransac.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_ransac.assert_raises": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_ransac.assert_raises_regexp": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_raises_regexp"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_ransac.assert_warns": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_warns"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_ransac.check_random_state": {
  "data": {
   "shadows": "sklearn.utils.check_random_state"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_ransac.data": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "sklearn.linear_model.tests.test_ransac.make_regression": {
  "data": {
   "shadows": "sklearn.datasets.make_regression"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_ransac.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_ransac.outliers": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "sklearn.linear_model.tests.test_ransac.rng": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "sklearn.linear_model.tests.test_ransac.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_ransac.test_ransac_default_residual_threshold": {
  "data": {
   "lineno": 398,
   "symbols_in_volume": [
    "numpy.bool_",
    "numpy.ones_like",
    "numpy.testing.assert_array_equal",
    "sklearn.linear_model.LinearRegression",
    "sklearn.linear_model.RANSACRegressor",
    "sklearn.linear_model.tests.test_ransac.X",
    "sklearn.linear_model.tests.test_ransac.outliers",
    "sklearn.linear_model.tests.test_ransac.y"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ransac.test_ransac_dynamic_max_trials": {
  "data": {
   "lineno": 414,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "sklearn.linear_model.LinearRegression",
    "sklearn.linear_model.RANSACRegressor",
    "sklearn.linear_model._ransac._dynamic_max_trials",
    "sklearn.linear_model.tests.test_ransac.X",
    "sklearn.linear_model.tests.test_ransac.y",
    "sklearn.utils._testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ransac.test_ransac_exceed_max_skips": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.linear_model.LinearRegression",
    "sklearn.linear_model.RANSACRegressor",
    "sklearn.linear_model.tests.test_ransac.X",
    "sklearn.linear_model.tests.test_ransac.y",
    "sklearn.utils._testing.assert_raises_regexp"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ransac.test_ransac_exceed_max_skips.is_data_valid": {
  "data": {
   "lineno": 200
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ransac.test_ransac_final_model_fit_sample_weight": {
  "data": {
   "lineno": 500,
   "symbols_in_volume": [
    "sklearn.datasets.make_regression",
    "sklearn.linear_model.LinearRegression",
    "sklearn.linear_model.RANSACRegressor",
    "sklearn.linear_model.tests.test_ransac.X",
    "sklearn.linear_model.tests.test_ransac.rng",
    "sklearn.linear_model.tests.test_ransac.y",
    "sklearn.utils._testing.assert_allclose",
    "sklearn.utils.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ransac.test_ransac_fit_sample_weight": {
  "data": {
   "lineno": 454,
   "symbols_in_volume": [
    "ValueError",
    "numpy.append",
    "numpy.bool_",
    "numpy.ndarray.flatten",
    "numpy.ones",
    "numpy.ones_like",
    "numpy.repeat",
    "numpy.testing.assert_array_equal",
    "sklearn.linear_model.OrthogonalMatchingPursuit",
    "sklearn.linear_model.RANSACRegressor",
    "sklearn.linear_model.tests.test_ransac.X",
    "sklearn.linear_model.tests.test_ransac.outliers",
    "sklearn.linear_model.tests.test_ransac.y",
    "sklearn.utils._testing.assert_allclose",
    "sklearn.utils._testing.assert_raises",
    "sklearn.utils.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ransac.test_ransac_inliers_outliers": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "numpy.bool_",
    "numpy.ones_like",
    "numpy.testing.assert_array_equal",
    "sklearn.linear_model.LinearRegression",
    "sklearn.linear_model.RANSACRegressor",
    "sklearn.linear_model.tests.test_ransac.X",
    "sklearn.linear_model.tests.test_ransac.outliers",
    "sklearn.linear_model.tests.test_ransac.y"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ransac.test_ransac_is_data_valid": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "ValueError",
    "numpy.random.RandomState",
    "sklearn.linear_model.LinearRegression",
    "sklearn.linear_model.RANSACRegressor",
    "sklearn.linear_model.tests.test_ransac.X",
    "sklearn.linear_model.tests.test_ransac.rng",
    "sklearn.linear_model.tests.test_ransac.y",
    "sklearn.utils._testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ransac.test_ransac_is_data_valid.is_data_valid": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "sklearn.linear_model.tests.test_ransac.X",
    "sklearn.linear_model.tests.test_ransac.y"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ransac.test_ransac_is_model_valid": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.linear_model.LinearRegression",
    "sklearn.linear_model.RANSACRegressor",
    "sklearn.linear_model.tests.test_ransac.X",
    "sklearn.linear_model.tests.test_ransac.y",
    "sklearn.utils._testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ransac.test_ransac_is_model_valid.is_model_valid": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "sklearn.linear_model.tests.test_ransac.X",
    "sklearn.linear_model.tests.test_ransac.y"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ransac.test_ransac_max_trials": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "range",
    "sklearn.linear_model.LinearRegression",
    "sklearn.linear_model.RANSACRegressor",
    "sklearn.linear_model._ransac._dynamic_max_trials",
    "sklearn.linear_model.tests.test_ransac.X",
    "sklearn.linear_model.tests.test_ransac.outliers",
    "sklearn.linear_model.tests.test_ransac.y",
    "sklearn.utils._testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ransac.test_ransac_min_n_samples": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "ValueError",
    "numpy.testing.assert_array_almost_equal",
    "sklearn.linear_model.LinearRegression",
    "sklearn.linear_model.RANSACRegressor",
    "sklearn.linear_model.tests.test_ransac.X",
    "sklearn.linear_model.tests.test_ransac.y",
    "sklearn.utils._testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ransac.test_ransac_multi_dimensional_targets": {
  "data": {
   "lineno": 338,
   "symbols_in_volume": [
    "numpy.bool_",
    "numpy.column_stack",
    "numpy.ones_like",
    "numpy.testing.assert_array_equal",
    "sklearn.linear_model.LinearRegression",
    "sklearn.linear_model.RANSACRegressor",
    "sklearn.linear_model.tests.test_ransac.X",
    "sklearn.linear_model.tests.test_ransac.outliers",
    "sklearn.linear_model.tests.test_ransac.y"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ransac.test_ransac_no_valid_data": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.linear_model.LinearRegression",
    "sklearn.linear_model.RANSACRegressor",
    "sklearn.linear_model.tests.test_ransac.X",
    "sklearn.linear_model.tests.test_ransac.y",
    "sklearn.utils._testing.assert_raises_regexp"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ransac.test_ransac_no_valid_data.is_data_valid": {
  "data": {
   "lineno": 168
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ransac.test_ransac_no_valid_model": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.linear_model.LinearRegression",
    "sklearn.linear_model.RANSACRegressor",
    "sklearn.linear_model.tests.test_ransac.X",
    "sklearn.linear_model.tests.test_ransac.y",
    "sklearn.utils._testing.assert_raises_regexp"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ransac.test_ransac_no_valid_model.is_model_valid": {
  "data": {
   "lineno": 184
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ransac.test_ransac_none_estimator": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "numpy.testing.assert_array_almost_equal",
    "sklearn.linear_model.LinearRegression",
    "sklearn.linear_model.RANSACRegressor",
    "sklearn.linear_model.tests.test_ransac.X",
    "sklearn.linear_model.tests.test_ransac.y"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ransac.test_ransac_predict": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.testing.assert_array_equal",
    "numpy.zeros",
    "sklearn.linear_model.LinearRegression",
    "sklearn.linear_model.RANSACRegressor",
    "sklearn.linear_model.tests.test_ransac.X",
    "sklearn.linear_model.tests.test_ransac.y"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ransac.test_ransac_resid_thresh_no_inliers": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.linear_model.LinearRegression",
    "sklearn.linear_model.RANSACRegressor",
    "sklearn.linear_model.tests.test_ransac.X",
    "sklearn.linear_model.tests.test_ransac.y",
    "sklearn.utils._testing.assert_raises_regexp"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ransac.test_ransac_residual_loss": {
  "data": {
   "lineno": 358,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.column_stack",
    "numpy.sum",
    "numpy.testing.assert_array_almost_equal",
    "sklearn.linear_model.LinearRegression",
    "sklearn.linear_model.RANSACRegressor",
    "sklearn.linear_model.tests.test_ransac.X",
    "sklearn.linear_model.tests.test_ransac.y"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ransac.test_ransac_score": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.zeros",
    "sklearn.linear_model.LinearRegression",
    "sklearn.linear_model.RANSACRegressor",
    "sklearn.linear_model.tests.test_ransac.X",
    "sklearn.linear_model.tests.test_ransac.y"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ransac.test_ransac_sparse_coo": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "numpy.bool_",
    "numpy.ones_like",
    "numpy.testing.assert_array_equal",
    "scipy.sparse.coo_matrix",
    "sklearn.linear_model.LinearRegression",
    "sklearn.linear_model.RANSACRegressor",
    "sklearn.linear_model.tests.test_ransac.X",
    "sklearn.linear_model.tests.test_ransac.outliers",
    "sklearn.linear_model.tests.test_ransac.y"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ransac.test_ransac_sparse_csc": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "numpy.bool_",
    "numpy.ones_like",
    "numpy.testing.assert_array_equal",
    "scipy.sparse.csc_matrix",
    "sklearn.linear_model.LinearRegression",
    "sklearn.linear_model.RANSACRegressor",
    "sklearn.linear_model.tests.test_ransac.X",
    "sklearn.linear_model.tests.test_ransac.outliers",
    "sklearn.linear_model.tests.test_ransac.y"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ransac.test_ransac_sparse_csr": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "numpy.bool_",
    "numpy.ones_like",
    "numpy.testing.assert_array_equal",
    "scipy.sparse.csr_matrix",
    "sklearn.linear_model.LinearRegression",
    "sklearn.linear_model.RANSACRegressor",
    "sklearn.linear_model.tests.test_ransac.X",
    "sklearn.linear_model.tests.test_ransac.outliers",
    "sklearn.linear_model.tests.test_ransac.y"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ransac.test_ransac_stop_n_inliers": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "sklearn.linear_model.LinearRegression",
    "sklearn.linear_model.RANSACRegressor",
    "sklearn.linear_model.tests.test_ransac.X",
    "sklearn.linear_model.tests.test_ransac.y"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ransac.test_ransac_stop_score": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "sklearn.linear_model.LinearRegression",
    "sklearn.linear_model.RANSACRegressor",
    "sklearn.linear_model.tests.test_ransac.X",
    "sklearn.linear_model.tests.test_ransac.y"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ransac.test_ransac_warn_exceed_max_skips": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "sklearn.exceptions.ConvergenceWarning",
    "sklearn.linear_model.LinearRegression",
    "sklearn.linear_model.RANSACRegressor",
    "sklearn.linear_model.tests.test_ransac.X",
    "sklearn.linear_model.tests.test_ransac.y",
    "sklearn.utils._testing.assert_warns"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ransac.test_ransac_warn_exceed_max_skips.is_data_valid": {
  "data": {
   "lineno": 220
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ransac.y": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "sklearn.linear_model.tests.test_ridge": {
  "data": {
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.random.RandomState",
    "scipy.sparse.csr_matrix",
    "sklearn.datasets.load_diabetes",
    "sklearn.datasets.load_iris",
    "sklearn.linear_model.tests.test_ridge.diabetes",
    "sklearn.linear_model.tests.test_ridge.ind",
    "sklearn.linear_model.tests.test_ridge.iris",
    "sklearn.linear_model.tests.test_ridge.rng"
   ]
  },
  "type": "module"
 },
 "sklearn.linear_model.tests.test_ridge.ConvergenceWarning": {
  "data": {
   "shadows": "sklearn.exceptions.ConvergenceWarning"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_ridge.DENSE_FILTER": {
  "data": {
   "lineno": 62
  },
  "type": "constant"
 },
 "sklearn.linear_model.tests.test_ridge.GridSearchCV": {
  "data": {
   "shadows": "sklearn.model_selection.GridSearchCV"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_ridge.GroupKFold": {
  "data": {
   "shadows": "sklearn.model_selection.GroupKFold"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_ridge.KFold": {
  "data": {
   "shadows": "sklearn.model_selection.KFold"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_ridge.LeaveOneOut": {
  "data": {
   "shadows": "sklearn.model_selection.LeaveOneOut"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_ridge.LinearRegression": {
  "data": {
   "shadows": "sklearn.linear_model.LinearRegression"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_ridge.Ridge": {
  "data": {
   "shadows": "sklearn.linear_model.Ridge"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_ridge.RidgeCV": {
  "data": {
   "shadows": "sklearn.linear_model.RidgeCV"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_ridge.RidgeClassifier": {
  "data": {
   "shadows": "sklearn.linear_model.RidgeClassifier"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_ridge.RidgeClassifierCV": {
  "data": {
   "shadows": "sklearn.linear_model.RidgeClassifierCV"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_ridge.SPARSE_FILTER": {
  "data": {
   "lineno": 63
  },
  "type": "constant"
 },
 "sklearn.linear_model.tests.test_ridge.X_iris": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "sklearn.linear_model.tests.test_ridge._RidgeGCV": {
  "data": {
   "shadows": "sklearn.linear_model._ridge._RidgeGCV"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_ridge._X_CenterStackOp": {
  "data": {
   "shadows": "sklearn.linear_model._ridge._X_CenterStackOp"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_ridge._accuracy_callable": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "numpy.mean"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge._check_gcv_mode": {
  "data": {
   "shadows": "sklearn.linear_model._ridge._check_gcv_mode"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_ridge._make_sparse_offset_regression": {
  "data": {
   "lineno": 381,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.random.RandomState",
    "sklearn.datasets.make_regression"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge._mean_squared_error_callable": {
  "data": {
   "lineno": 70
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge._solve_cholesky": {
  "data": {
   "shadows": "sklearn.linear_model._ridge._solve_cholesky"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_ridge._solve_cholesky_kernel": {
  "data": {
   "shadows": "sklearn.linear_model._ridge._solve_cholesky_kernel"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_ridge._test_multi_ridge_diabetes": {
  "data": {
   "lineno": 773,
   "symbols_in_volume": [
    "filter_",
    "numpy.vstack",
    "sklearn.linear_model.Ridge",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge._test_ridge_classifiers": {
  "data": {
   "lineno": 788,
   "symbols_in_volume": [
    "filter_",
    "numpy.mean",
    "numpy.unique",
    "sklearn.linear_model.RidgeClassifier",
    "sklearn.linear_model.RidgeClassifierCV",
    "sklearn.linear_model.tests.test_ridge.X_iris",
    "sklearn.linear_model.tests.test_ridge.y_iris",
    "sklearn.model_selection.KFold"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge._test_ridge_cv": {
  "data": {
   "lineno": 655,
   "symbols_in_volume": [
    "filter_",
    "len",
    "numpy.float64",
    "sklearn.linear_model.RidgeCV",
    "sklearn.model_selection.KFold",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge._test_ridge_cv_normalize": {
  "data": {
   "lineno": 645,
   "symbols_in_volume": [
    "filter_",
    "sklearn.linear_model.Ridge",
    "sklearn.linear_model.RidgeCV",
    "sklearn.model_selection.GridSearchCV"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge._test_ridge_diabetes": {
  "data": {
   "lineno": 767,
   "symbols_in_volume": [
    "filter_",
    "numpy.round",
    "sklearn.linear_model.Ridge"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge._test_ridge_loo": {
  "data": {
   "lineno": 591,
   "symbols_in_volume": [
    "f",
    "filter_",
    "numpy.ones",
    "numpy.vstack",
    "sklearn.linear_model.RidgeCV",
    "sklearn.linear_model._ridge._RidgeGCV",
    "sklearn.linear_model.tests.test_ridge.DENSE_FILTER",
    "sklearn.linear_model.tests.test_ridge.pytest",
    "sklearn.metrics.get_scorer",
    "sklearn.metrics.make_scorer",
    "sklearn.metrics.mean_squared_error",
    "sklearn.utils._testing.assert_allclose",
    "sklearn.utils._testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge._test_tolerance": {
  "data": {
   "lineno": 836,
   "symbols_in_volume": [
    "filter_",
    "sklearn.linear_model.Ridge"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge.assert_allclose": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_allclose"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_ridge.assert_almost_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_almost_equal"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_ridge.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_ridge.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_ridge.assert_raise_message": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_raise_message"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_ridge.assert_raises": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_ridge.assert_raises_regex": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_raises_regex"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_ridge.assert_warns": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_warns"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_ridge.check_dense_sparse": {
  "data": {
   "lineno": 848,
   "symbols_in_volume": [
    "sklearn.linear_model.tests.test_ridge.DENSE_FILTER",
    "sklearn.linear_model.tests.test_ridge.SPARSE_FILTER",
    "sklearn.utils._testing.assert_array_almost_equal",
    "test_func"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge.check_random_state": {
  "data": {
   "shadows": "sklearn.utils.check_random_state"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_ridge.cross_val_predict": {
  "data": {
   "shadows": "sklearn.model_selection.cross_val_predict"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_ridge.datasets": {
  "data": {
   "shadows": "sklearn.datasets"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_ridge.diabetes": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "sklearn.linear_model.tests.test_ridge.get_scorer": {
  "data": {
   "shadows": "sklearn.metrics.get_scorer"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_ridge.ignore_warnings": {
  "data": {
   "shadows": "sklearn.utils._testing.ignore_warnings"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_ridge.ind": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "sklearn.linear_model.tests.test_ridge.iris": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "sklearn.linear_model.tests.test_ridge.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_ridge.make_classification": {
  "data": {
   "shadows": "sklearn.datasets.make_classification"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_ridge.make_multilabel_classification": {
  "data": {
   "shadows": "sklearn.datasets.make_multilabel_classification"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_ridge.make_regression": {
  "data": {
   "shadows": "sklearn.datasets.make_regression"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_ridge.make_scorer": {
  "data": {
   "shadows": "sklearn.metrics.make_scorer"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_ridge.mean_squared_error": {
  "data": {
   "shadows": "sklearn.metrics.mean_squared_error"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_ridge.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_ridge.product": {
  "data": {
   "shadows": "itertools.product"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_ridge.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_ridge.ridge_regression": {
  "data": {
   "shadows": "sklearn.linear_model.ridge_regression"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_ridge.rng": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "sklearn.linear_model.tests.test_ridge.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_ridge.test_X_CenterStackOp": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": [
    "len",
    "numpy.hstack",
    "numpy.random.RandomState",
    "scipy.sparse.csr_matrix",
    "sklearn.linear_model._ridge._X_CenterStackOp",
    "sklearn.linear_model.tests.test_ridge.pytest",
    "sklearn.linear_model.tests.test_ridge.rng",
    "sklearn.utils._testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge.test_check_gcv_mode_choice": {
  "data": {
   "lineno": 574,
   "symbols_in_volume": [
    "scipy.sparse.csr_matrix",
    "sklearn.datasets.make_regression",
    "sklearn.linear_model._ridge._check_gcv_mode",
    "sklearn.linear_model.tests.test_ridge.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge.test_check_gcv_mode_error": {
  "data": {
   "lineno": 564,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.datasets.make_regression",
    "sklearn.linear_model.RidgeCV",
    "sklearn.linear_model._ridge._check_gcv_mode",
    "sklearn.linear_model.tests.test_ridge.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge.test_class_weight_vs_sample_weight": {
  "data": {
   "lineno": 910,
   "symbols_in_volume": [
    "numpy.ones",
    "reg",
    "sklearn.linear_model.RidgeClassifier",
    "sklearn.linear_model.RidgeClassifierCV",
    "sklearn.linear_model.tests.test_ridge.iris",
    "sklearn.linear_model.tests.test_ridge.pytest",
    "sklearn.utils._testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge.test_class_weights": {
  "data": {
   "lineno": 874,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "sklearn.linear_model.RidgeClassifier",
    "sklearn.utils._testing.assert_array_almost_equal",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge.test_class_weights_cv": {
  "data": {
   "lineno": 939,
   "symbols_in_volume": [
    "numpy.array",
    "reg",
    "reg.fit",
    "reg.predict",
    "sklearn.linear_model.RidgeClassifierCV",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge.test_compute_covariance": {
  "data": {
   "lineno": 361,
   "symbols_in_volume": [
    "numpy.average",
    "numpy.ones",
    "numpy.random.RandomState",
    "numpy.sqrt",
    "scipy.sparse.csr_matrix",
    "sklearn.linear_model._ridge._RidgeGCV",
    "sklearn.linear_model.tests.test_ridge.pytest",
    "sklearn.linear_model.tests.test_ridge.rng",
    "sklearn.utils._testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge.test_compute_gram": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": [
    "numpy.average",
    "numpy.ones",
    "numpy.random.RandomState",
    "numpy.sqrt",
    "scipy.sparse.csr_matrix",
    "sklearn.linear_model._ridge._RidgeGCV",
    "sklearn.linear_model.tests.test_ridge.pytest",
    "sklearn.linear_model.tests.test_ridge.rng",
    "sklearn.utils._testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge.test_dense_sparse": {
  "data": {
   "lineno": 858,
   "symbols_in_volume": [
    "sklearn.linear_model.tests.test_ridge._test_multi_ridge_diabetes",
    "sklearn.linear_model.tests.test_ridge._test_ridge_classifiers",
    "sklearn.linear_model.tests.test_ridge._test_ridge_cv",
    "sklearn.linear_model.tests.test_ridge._test_ridge_cv_normalize",
    "sklearn.linear_model.tests.test_ridge._test_ridge_diabetes",
    "sklearn.linear_model.tests.test_ridge._test_ridge_loo",
    "sklearn.linear_model.tests.test_ridge._test_tolerance",
    "sklearn.linear_model.tests.test_ridge.check_dense_sparse",
    "sklearn.linear_model.tests.test_ridge.pytest",
    "test_func"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge.test_dtype_match": {
  "data": {
   "lineno": 1294,
   "symbols_in_volume": [
    "numpy.finfo",
    "numpy.float32",
    "numpy.random.RandomState",
    "sklearn.linear_model.Ridge",
    "sklearn.linear_model.tests.test_ridge.pytest",
    "sklearn.linear_model.tests.test_ridge.rng",
    "sklearn.utils._testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge.test_dtype_match_cholesky": {
  "data": {
   "lineno": 1325,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.random.RandomState",
    "sklearn.linear_model.Ridge",
    "sklearn.linear_model.tests.test_ridge.rng",
    "sklearn.utils._testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge.test_n_iter": {
  "data": {
   "lineno": 1163,
   "symbols_in_volume": [
    "numpy.tile",
    "range",
    "reg",
    "reg.fit",
    "reg.n_iter_",
    "sklearn.linear_model.Ridge",
    "sklearn.utils._testing.assert_array_equal",
    "sklearn.utils._testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge.test_primal_dual_relationship": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "numpy.dot",
    "sklearn.linear_model._ridge._solve_cholesky",
    "sklearn.linear_model._ridge._solve_cholesky_kernel",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge.test_raises_value_error_if_sample_weights_greater_than_1d": {
  "data": {
   "lineno": 1041,
   "symbols_in_volume": [
    "ValueError",
    "numpy.newaxis",
    "numpy.random.RandomState",
    "sklearn.linear_model.Ridge",
    "sklearn.linear_model.tests.test_ridge.rng",
    "sklearn.utils._testing.assert_raise_message",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge.test_raises_value_error_if_sample_weights_greater_than_1d.fit_ridge_not_ok": {
  "data": {
   "lineno": 1065
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge.test_raises_value_error_if_sample_weights_greater_than_1d.fit_ridge_not_ok_2": {
  "data": {
   "lineno": 1068
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge.test_raises_value_error_if_solver_not_supported": {
  "data": {
   "lineno": 1139,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.utils._testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge.test_raises_value_error_if_solver_not_supported.func": {
  "data": {
   "lineno": 1149,
   "symbols_in_volume": [
    "numpy.eye",
    "numpy.ones",
    "sklearn.linear_model.ridge_regression"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge.test_ridge": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "numpy.ones",
    "numpy.random.RandomState",
    "sklearn.linear_model.Ridge",
    "sklearn.linear_model.tests.test_ridge.pytest",
    "sklearn.linear_model.tests.test_ridge.rng"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge.test_ridge_best_score": {
  "data": {
   "lineno": 684,
   "symbols_in_volume": [
    "float",
    "hasattr",
    "isinstance",
    "make_dataset",
    "sklearn.datasets.make_classification",
    "sklearn.datasets.make_regression",
    "sklearn.linear_model.RidgeCV",
    "sklearn.linear_model.RidgeClassifierCV",
    "sklearn.linear_model.tests.test_ridge.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge.test_ridge_classifier_cv_store_cv_values": {
  "data": {
   "lineno": 987,
   "symbols_in_volume": [
    "callable",
    "len",
    "numpy.array",
    "sklearn.linear_model.RidgeClassifierCV",
    "sklearn.linear_model.tests.test_ridge._accuracy_callable",
    "sklearn.linear_model.tests.test_ridge.pytest",
    "sklearn.metrics.make_scorer"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge.test_ridge_classifier_no_support_multilabel": {
  "data": {
   "lineno": 1289,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.datasets.make_multilabel_classification",
    "sklearn.linear_model.RidgeClassifier",
    "sklearn.utils._testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge.test_ridge_classifier_with_scoring": {
  "data": {
   "lineno": 804,
   "symbols_in_volume": [
    "callable",
    "filter_",
    "sklearn.linear_model.RidgeClassifierCV",
    "sklearn.linear_model.tests.test_ridge.DENSE_FILTER",
    "sklearn.linear_model.tests.test_ridge.SPARSE_FILTER",
    "sklearn.linear_model.tests.test_ridge.X_iris",
    "sklearn.linear_model.tests.test_ridge._accuracy_callable",
    "sklearn.linear_model.tests.test_ridge.pytest",
    "sklearn.linear_model.tests.test_ridge.y_iris",
    "sklearn.metrics.make_scorer",
    "sklearn.model_selection.KFold"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge.test_ridge_cv_individual_penalties": {
  "data": {
   "lineno": 699,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.dot",
    "numpy.isscalar",
    "numpy.ones",
    "numpy.random.RandomState",
    "sklearn.linear_model.Ridge",
    "sklearn.linear_model.RidgeCV",
    "sklearn.linear_model.tests.test_ridge.pytest",
    "sklearn.linear_model.tests.test_ridge.rng",
    "sklearn.model_selection.LeaveOneOut",
    "sklearn.utils._testing.assert_array_almost_equal",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge.test_ridge_fit_intercept_sparse": {
  "data": {
   "lineno": 1182,
   "symbols_in_volume": [
    "len",
    "numpy.allclose",
    "scipy.sparse.csr_matrix",
    "sklearn.linear_model.Ridge",
    "sklearn.linear_model.tests.test_ridge._make_sparse_offset_regression",
    "sklearn.linear_model.tests.test_ridge.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge.test_ridge_fit_intercept_sparse_error": {
  "data": {
   "lineno": 1209,
   "symbols_in_volume": [
    "ValueError",
    "scipy.sparse.csr_matrix",
    "sklearn.linear_model.Ridge",
    "sklearn.linear_model.tests.test_ridge._make_sparse_offset_regression",
    "sklearn.linear_model.tests.test_ridge.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge.test_ridge_fit_intercept_sparse_sag": {
  "data": {
   "lineno": 1219,
   "symbols_in_volume": [
    "UserWarning",
    "dict",
    "len",
    "numpy.allclose",
    "scipy.sparse.csr_matrix",
    "sklearn.linear_model.Ridge",
    "sklearn.linear_model.tests.test_ridge._make_sparse_offset_regression",
    "sklearn.linear_model.tests.test_ridge.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge.test_ridge_gcv_cv_values_not_stored": {
  "data": {
   "lineno": 672,
   "symbols_in_volume": [
    "hasattr",
    "make_dataset",
    "sklearn.datasets.make_classification",
    "sklearn.datasets.make_regression",
    "sklearn.linear_model.RidgeCV",
    "sklearn.linear_model.RidgeClassifierCV",
    "sklearn.linear_model.tests.test_ridge.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge.test_ridge_gcv_sample_weights": {
  "data": {
   "lineno": 508,
   "symbols_in_volume": [
    "X_constructor",
    "float",
    "int",
    "len",
    "numpy.arange",
    "numpy.asarray",
    "numpy.random.RandomState",
    "numpy.repeat",
    "numpy.sum",
    "scipy.sparse.csr_matrix",
    "sklearn.linear_model.Ridge",
    "sklearn.linear_model.RidgeCV",
    "sklearn.linear_model.tests.test_ridge._make_sparse_offset_regression",
    "sklearn.linear_model.tests.test_ridge.pytest",
    "sklearn.linear_model.tests.test_ridge.rng",
    "sklearn.model_selection.GroupKFold",
    "sklearn.model_selection.cross_val_predict",
    "sklearn.utils._testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge.test_ridge_gcv_vs_ridge_loo_cv": {
  "data": {
   "lineno": 441,
   "symbols_in_volume": [
    "X_constructor",
    "len",
    "numpy.asarray",
    "scipy.sparse.csr_matrix",
    "sklearn.linear_model.RidgeCV",
    "sklearn.linear_model.tests.test_ridge._make_sparse_offset_regression",
    "sklearn.linear_model.tests.test_ridge.pytest",
    "sklearn.utils._testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge.test_ridge_individual_penalties": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "ValueError",
    "numpy.arange",
    "numpy.array",
    "numpy.random.RandomState",
    "sklearn.linear_model.Ridge",
    "sklearn.linear_model.tests.test_ridge.rng",
    "sklearn.utils._testing.assert_array_almost_equal",
    "sklearn.utils._testing.assert_raises",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge.test_ridge_intercept": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "numpy.c_",
    "numpy.random.RandomState",
    "sklearn.linear_model.Ridge",
    "sklearn.linear_model.tests.test_ridge.rng",
    "sklearn.utils._testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge.test_ridge_loo_cv_asym_scoring": {
  "data": {
   "lineno": 481,
   "symbols_in_volume": [
    "sklearn.linear_model.RidgeCV",
    "sklearn.linear_model.tests.test_ridge._make_sparse_offset_regression",
    "sklearn.linear_model.tests.test_ridge.pytest",
    "sklearn.utils._testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge.test_ridge_regression_check_arguments_validity": {
  "data": {
   "lineno": 1239,
   "symbols_in_volume": [
    "ValueError",
    "arr_type",
    "numpy.array",
    "numpy.dot",
    "numpy.ones",
    "scipy.sparse.csr_matrix",
    "sklearn.linear_model.ridge_regression",
    "sklearn.linear_model.tests.test_ridge.pytest",
    "sklearn.linear_model.tests.test_ridge.rng",
    "sklearn.utils._testing.assert_allclose",
    "sklearn.utils._testing.assert_raises_regex",
    "sklearn.utils.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge.test_ridge_regression_convergence_fail": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.exceptions.ConvergenceWarning",
    "sklearn.linear_model.ridge_regression",
    "sklearn.linear_model.tests.test_ridge.rng",
    "sklearn.utils._testing.assert_warns"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge.test_ridge_regression_custom_scoring": {
  "data": {
   "lineno": 817,
   "symbols_in_volume": [
    "filter_",
    "numpy.logspace",
    "sklearn.linear_model.RidgeClassifierCV",
    "sklearn.linear_model.tests.test_ridge.DENSE_FILTER",
    "sklearn.linear_model.tests.test_ridge.SPARSE_FILTER",
    "sklearn.linear_model.tests.test_ridge.X_iris",
    "sklearn.linear_model.tests.test_ridge.pytest",
    "sklearn.linear_model.tests.test_ridge.y_iris",
    "sklearn.metrics.make_scorer",
    "sklearn.model_selection.KFold"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge.test_ridge_regression_custom_scoring._dummy_score": {
  "data": {
   "lineno": 823
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge.test_ridge_regression_dtype_stability": {
  "data": {
   "lineno": 1355,
   "symbols_in_volume": [
    "dict",
    "numpy.dot",
    "numpy.float32",
    "numpy.float32.dtype",
    "numpy.float64",
    "numpy.float64.dtype",
    "numpy.random.RandomState",
    "range",
    "sklearn.linear_model.ridge_regression",
    "sklearn.linear_model.tests.test_ridge.pytest",
    "sklearn.utils._testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge.test_ridge_regression_sample_weights": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "numpy.newaxis",
    "numpy.random.RandomState",
    "numpy.sqrt",
    "sklearn.linear_model.ridge_regression",
    "sklearn.linear_model.tests.test_ridge.rng",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge.test_ridge_sag_with_X_fortran": {
  "data": {
   "lineno": 1386,
   "symbols_in_volume": [
    "numpy.asfortranarray",
    "sklearn.datasets.make_regression",
    "sklearn.linear_model.Ridge"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge.test_ridge_sample_weights": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "itertools.product",
    "numpy.concatenate",
    "numpy.diag",
    "numpy.eye",
    "numpy.ones",
    "numpy.random.RandomState",
    "scipy.linalg.solve",
    "sklearn.linear_model.Ridge",
    "sklearn.linear_model.tests.test_ridge.rng",
    "sklearn.utils._testing.assert_almost_equal",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge.test_ridge_shapes": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "numpy.c_",
    "numpy.newaxis",
    "numpy.random.RandomState",
    "sklearn.linear_model.Ridge",
    "sklearn.linear_model.tests.test_ridge.rng"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge.test_ridge_singular": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "numpy.concatenate",
    "numpy.random.RandomState",
    "sklearn.linear_model.Ridge",
    "sklearn.linear_model.tests.test_ridge.rng"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge.test_ridge_sparse_svd": {
  "data": {
   "lineno": 867,
   "symbols_in_volume": [
    "TypeError",
    "scipy.sparse.csc_matrix",
    "sklearn.linear_model.Ridge",
    "sklearn.linear_model.tests.test_ridge.rng",
    "sklearn.utils._testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge.test_ridge_vs_lstsq": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.linear_model.LinearRegression",
    "sklearn.linear_model.Ridge",
    "sklearn.linear_model.tests.test_ridge.rng",
    "sklearn.utils._testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge.test_ridgecv_int_alphas": {
  "data": {
   "lineno": 1111,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.linear_model.RidgeCV"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge.test_ridgecv_negative_alphas": {
  "data": {
   "lineno": 1121,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "sklearn.linear_model.RidgeCV",
    "sklearn.utils._testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge.test_ridgecv_sample_weight": {
  "data": {
   "lineno": 1017,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.linear_model.Ridge",
    "sklearn.linear_model.RidgeCV",
    "sklearn.linear_model.tests.test_ridge.rng",
    "sklearn.model_selection.GridSearchCV",
    "sklearn.model_selection.KFold",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge.test_ridgecv_store_cv_values": {
  "data": {
   "lineno": 955,
   "symbols_in_volume": [
    "ValueError",
    "callable",
    "len",
    "numpy.random.RandomState",
    "sklearn.linear_model.RidgeCV",
    "sklearn.linear_model.tests.test_ridge._mean_squared_error_callable",
    "sklearn.linear_model.tests.test_ridge.pytest",
    "sklearn.linear_model.tests.test_ridge.rng",
    "sklearn.metrics.make_scorer",
    "sklearn.utils._testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge.test_solver_consistency": {
  "data": {
   "lineno": 406,
   "symbols_in_volume": [
    "itertools.product",
    "numpy.arange",
    "scipy.sparse.csr_matrix",
    "sklearn.linear_model.Ridge",
    "sklearn.linear_model.RidgeCV",
    "sklearn.linear_model.tests.test_ridge._make_sparse_offset_regression",
    "sklearn.linear_model.tests.test_ridge.pytest",
    "sklearn.utils._testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge.test_sparse_cg_max_iter": {
  "data": {
   "lineno": 1157,
   "symbols_in_volume": [
    "reg",
    "reg.coef_.shape",
    "reg.fit",
    "sklearn.linear_model.Ridge"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge.test_sparse_design_with_sample_weights": {
  "data": {
   "lineno": 1080,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "scipy.sparse.coo_matrix",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.dok_matrix",
    "scipy.sparse.lil_matrix",
    "sklearn.linear_model.Ridge",
    "sklearn.linear_model.tests.test_ridge.rng",
    "sklearn.utils._testing.assert_array_almost_equal",
    "sparse_converter",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge.test_toy_ridge_object": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "numpy.float64",
    "numpy.ndarray",
    "numpy.vstack",
    "sklearn.linear_model.Ridge",
    "sklearn.utils._testing.assert_almost_equal",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge.y_iris": {
  "data": {
   "lineno": 59
  },
  "type": "constant"
 },
 "sklearn.linear_model.tests.test_sag": {
  "data": {
   "symbols_in_volume": [
    "sklearn.datasets.load_iris"
   ]
  },
  "type": "module"
 },
 "sklearn.linear_model.tests.test_sag.LabelBinarizer": {
  "data": {
   "shadows": "sklearn.preprocessing.LabelBinarizer"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sag.LabelEncoder": {
  "data": {
   "shadows": "sklearn.preprocessing.LabelEncoder"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sag.LogisticRegression": {
  "data": {
   "shadows": "sklearn.linear_model.LogisticRegression"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sag.Ridge": {
  "data": {
   "shadows": "sklearn.linear_model.Ridge"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sag._multinomial_grad_loss_all_samples": {
  "data": {
   "shadows": "sklearn.linear_model._sag_fast._multinomial_grad_loss_all_samples"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sag._multinomial_loss_grad": {
  "data": {
   "shadows": "sklearn.linear_model._logistic._multinomial_loss_grad"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sag.assert_allclose": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_allclose"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sag.assert_almost_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_almost_equal"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sag.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sag.assert_raise_message": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_raise_message"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sag.check_random_state": {
  "data": {
   "shadows": "sklearn.utils.check_random_state"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sag.clone": {
  "data": {
   "shadows": "sklearn.base.clone"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sag.compute_class_weight": {
  "data": {
   "shadows": "sklearn.utils.compute_class_weight"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sag.get_auto_step_size": {
  "data": {
   "shadows": "sklearn.linear_model._sag.get_auto_step_size"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sag.get_pobj": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "loss",
    "numpy.dot"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sag.get_step_size": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "numpy.max",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sag.iris": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "sklearn.linear_model.tests.test_sag.load_iris": {
  "data": {
   "shadows": "sklearn.datasets.load_iris"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sag.log_dloss": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "sklearn.linear_model.tests.test_sag.math"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sag.log_loss": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "numpy.exp",
    "numpy.log",
    "numpy.mean"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sag.logsumexp": {
  "data": {
   "shadows": "scipy.special.logsumexp"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sag.make_blobs": {
  "data": {
   "shadows": "sklearn.datasets.make_blobs"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sag.make_classification": {
  "data": {
   "shadows": "sklearn.datasets.make_classification"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sag.make_dataset": {
  "data": {
   "shadows": "sklearn.linear_model._base.make_dataset"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sag.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sag.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sag.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sag.row_norms": {
  "data": {
   "shadows": "sklearn.utils.extmath.row_norms"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sag.sag": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "dloss",
    "int",
    "len",
    "numpy.dot",
    "numpy.random.RandomState",
    "numpy.zeros",
    "range",
    "set"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sag.sag_sparse": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "ZeroDivisionError",
    "dloss",
    "int",
    "len",
    "numpy.dot",
    "numpy.zeros",
    "range",
    "set",
    "sklearn.utils.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sag.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sag.squared_dloss": {
  "data": {
   "lineno": 48
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sag.squared_loss": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "numpy.mean"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sag.test_binary_classifier_class_weight": {
  "data": {
   "lineno": 620,
   "symbols_in_volume": [
    "numpy.ones",
    "numpy.unique",
    "scipy.sparse.csr_matrix",
    "sklearn.base.clone",
    "sklearn.datasets.make_blobs",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.linear_model.tests.test_sag.get_step_size",
    "sklearn.linear_model.tests.test_sag.log_dloss",
    "sklearn.linear_model.tests.test_sag.pytest",
    "sklearn.linear_model.tests.test_sag.sag_sparse",
    "sklearn.preprocessing.LabelEncoder",
    "sklearn.utils._testing.assert_almost_equal",
    "sklearn.utils._testing.assert_array_almost_equal",
    "sklearn.utils.compute_class_weight"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sag.test_classifier_matching": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "numpy.atleast_1d",
    "numpy.atleast_2d",
    "sklearn.datasets.make_blobs",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.linear_model.tests.test_sag.get_step_size",
    "sklearn.linear_model.tests.test_sag.log_dloss",
    "sklearn.linear_model.tests.test_sag.sag",
    "sklearn.linear_model.tests.test_sag.sag_sparse",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sag.test_classifier_results": {
  "data": {
   "lineno": 596,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.random.RandomState",
    "numpy.sign",
    "scipy.sparse.csr_matrix",
    "sklearn.base.clone",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.utils._testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sag.test_classifier_single_class": {
  "data": {
   "lineno": 735,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.utils._testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sag.test_get_auto_step_size": {
  "data": {
   "lineno": 412,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "min",
    "numpy.array",
    "numpy.float64",
    "sklearn.linear_model._sag.get_auto_step_size",
    "sklearn.utils._testing.assert_almost_equal",
    "sklearn.utils._testing.assert_raise_message",
    "sklearn.utils.extmath.row_norms"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sag.test_multiclass_classifier_class_weight": {
  "data": {
   "lineno": 671,
   "symbols_in_volume": [
    "enumerate",
    "numpy.array",
    "numpy.ones",
    "numpy.unique",
    "numpy.vstack",
    "scipy.sparse.csr_matrix",
    "sklearn.base.clone",
    "sklearn.datasets.make_blobs",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.linear_model.tests.test_sag.get_step_size",
    "sklearn.linear_model.tests.test_sag.log_dloss",
    "sklearn.linear_model.tests.test_sag.pytest",
    "sklearn.linear_model.tests.test_sag.sag_sparse",
    "sklearn.preprocessing.LabelEncoder",
    "sklearn.utils._testing.assert_almost_equal",
    "sklearn.utils._testing.assert_array_almost_equal",
    "sklearn.utils.compute_class_weight"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sag.test_multinomial_loss": {
  "data": {
   "lineno": 763,
   "symbols_in_volume": [
    "len",
    "numpy.abs",
    "numpy.float64",
    "numpy.unique",
    "numpy.vstack",
    "sklearn.linear_model._base.make_dataset",
    "sklearn.linear_model._logistic._multinomial_loss_grad",
    "sklearn.linear_model._sag_fast._multinomial_grad_loss_all_samples",
    "sklearn.linear_model.tests.test_sag.iris",
    "sklearn.preprocessing.LabelBinarizer",
    "sklearn.utils._testing.assert_almost_equal",
    "sklearn.utils._testing.assert_array_almost_equal",
    "sklearn.utils.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sag.test_multinomial_loss_ground_truth": {
  "data": {
   "lineno": 794,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.dot",
    "numpy.exp",
    "numpy.newaxis",
    "numpy.newaxis.sum",
    "numpy.vstack",
    "scipy.special.logsumexp",
    "sklearn.linear_model._logistic._multinomial_loss_grad",
    "sklearn.preprocessing.LabelBinarizer",
    "sklearn.utils._testing.assert_almost_equal",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sag.test_regressor_matching": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.linear_model.Ridge",
    "sklearn.linear_model.tests.test_sag.get_step_size",
    "sklearn.linear_model.tests.test_sag.sag",
    "sklearn.linear_model.tests.test_sag.sag_sparse",
    "sklearn.linear_model.tests.test_sag.squared_dloss",
    "sklearn.utils._testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sag.test_sag_classifier_computed_correctly": {
  "data": {
   "lineno": 494,
   "symbols_in_volume": [
    "numpy.ones",
    "numpy.unique",
    "scipy.sparse.csr_matrix",
    "sklearn.base.clone",
    "sklearn.datasets.make_blobs",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.linear_model.tests.test_sag.get_step_size",
    "sklearn.linear_model.tests.test_sag.log_dloss",
    "sklearn.linear_model.tests.test_sag.pytest",
    "sklearn.linear_model.tests.test_sag.sag_sparse",
    "sklearn.utils._testing.assert_almost_equal",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sag.test_sag_classifier_raises_error": {
  "data": {
   "lineno": 830,
   "symbols_in_volume": [
    "ValueError",
    "numpy.nan",
    "numpy.random.RandomState",
    "sklearn.datasets.make_classification",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.linear_model.tests.test_sag.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sag.test_sag_multiclass_computed_correctly": {
  "data": {
   "lineno": 537,
   "symbols_in_volume": [
    "enumerate",
    "numpy.array",
    "numpy.ones",
    "numpy.unique",
    "numpy.vstack",
    "scipy.sparse.csr_matrix",
    "sklearn.base.clone",
    "sklearn.datasets.make_blobs",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.linear_model.tests.test_sag.get_step_size",
    "sklearn.linear_model.tests.test_sag.log_dloss",
    "sklearn.linear_model.tests.test_sag.pytest",
    "sklearn.linear_model.tests.test_sag.sag_sparse",
    "sklearn.utils._testing.assert_almost_equal",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sag.test_sag_pobj_matches_logistic_regression": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "scipy.sparse.csr_matrix",
    "sklearn.base.clone",
    "sklearn.datasets.make_blobs",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.linear_model.tests.test_sag.get_pobj",
    "sklearn.linear_model.tests.test_sag.log_loss",
    "sklearn.linear_model.tests.test_sag.pytest",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sag.test_sag_pobj_matches_ridge_regression": {
  "data": {
   "lineno": 333,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "scipy.sparse.csr_matrix",
    "sklearn.base.clone",
    "sklearn.linear_model.Ridge",
    "sklearn.linear_model.tests.test_sag.get_pobj",
    "sklearn.linear_model.tests.test_sag.pytest",
    "sklearn.linear_model.tests.test_sag.squared_loss",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sag.test_sag_regressor": {
  "data": {
   "lineno": 456,
   "symbols_in_volume": [
    "numpy.linspace",
    "numpy.random.RandomState",
    "range",
    "scipy.sparse.csr_matrix",
    "sklearn.base.clone",
    "sklearn.linear_model.Ridge",
    "sklearn.linear_model.tests.test_sag.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sag.test_sag_regressor_computed_correctly": {
  "data": {
   "lineno": 365,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.random.RandomState",
    "scipy.sparse.csr_matrix",
    "sklearn.base.clone",
    "sklearn.linear_model.Ridge",
    "sklearn.linear_model.tests.test_sag.get_step_size",
    "sklearn.linear_model.tests.test_sag.pytest",
    "sklearn.linear_model.tests.test_sag.sag_sparse",
    "sklearn.linear_model.tests.test_sag.squared_dloss",
    "sklearn.utils._testing.assert_almost_equal",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sag.test_step_size_alpha_error": {
  "data": {
   "lineno": 747,
   "symbols_in_volume": [
    "ZeroDivisionError",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.linear_model.Ridge",
    "sklearn.utils._testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd": {
  "data": {
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.datasets.load_iris"
   ]
  },
  "type": "module"
 },
 "sklearn.linear_model.tests.test_sgd.ConvergenceWarning": {
  "data": {
   "shadows": "sklearn.exceptions.ConvergenceWarning"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sgd.LabelEncoder": {
  "data": {
   "shadows": "sklearn.preprocessing.LabelEncoder"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sgd.MinMaxScaler": {
  "data": {
   "shadows": "sklearn.preprocessing.MinMaxScaler"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sgd.RandomizedSearchCV": {
  "data": {
   "shadows": "sklearn.model_selection.RandomizedSearchCV"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sgd.SGDClassifier": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "sklearn.linear_model.SGDClassifier",
    "sklearn.linear_model.tests.test_sgd._update_kwargs"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.SGDRegressor": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "sklearn.linear_model.SGDRegressor",
    "sklearn.linear_model.tests.test_sgd._update_kwargs"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.ShuffleSplit": {
  "data": {
   "shadows": "sklearn.model_selection.ShuffleSplit"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sgd.SparseSGDClassifier": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "sklearn.linear_model.tests.test_sgd._SparseSGDClassifier",
    "sklearn.linear_model.tests.test_sgd._update_kwargs"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.SparseSGDRegressor": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "sklearn.linear_model.tests.test_sgd._SparseSGDRegressor",
    "sklearn.linear_model.tests.test_sgd._update_kwargs"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.StandardScaler": {
  "data": {
   "shadows": "sklearn.preprocessing.StandardScaler"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sgd.StratifiedShuffleSplit": {
  "data": {
   "shadows": "sklearn.model_selection.StratifiedShuffleSplit"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sgd.T": {
  "data": {
   "lineno": 96
  },
  "type": "constant"
 },
 "sklearn.linear_model.tests.test_sgd.T2": {
  "data": {
   "lineno": 104
  },
  "type": "constant"
 },
 "sklearn.linear_model.tests.test_sgd.X": {
  "data": {
   "lineno": 94
  },
  "type": "constant"
 },
 "sklearn.linear_model.tests.test_sgd.X2": {
  "data": {
   "lineno": 100
  },
  "type": "constant"
 },
 "sklearn.linear_model.tests.test_sgd.X3": {
  "data": {
   "lineno": 108
  },
  "type": "constant"
 },
 "sklearn.linear_model.tests.test_sgd.X4": {
  "data": {
   "lineno": 115
  },
  "type": "constant"
 },
 "sklearn.linear_model.tests.test_sgd.X5": {
  "data": {
   "lineno": 124
  },
  "type": "constant"
 },
 "sklearn.linear_model.tests.test_sgd.Y": {
  "data": {
   "lineno": 95
  },
  "type": "constant"
 },
 "sklearn.linear_model.tests.test_sgd.Y2": {
  "data": {
   "lineno": 103
  },
  "type": "constant"
 },
 "sklearn.linear_model.tests.test_sgd.Y3": {
  "data": {
   "lineno": 112
  },
  "type": "constant"
 },
 "sklearn.linear_model.tests.test_sgd.Y4": {
  "data": {
   "lineno": 119
  },
  "type": "constant"
 },
 "sklearn.linear_model.tests.test_sgd.Y5": {
  "data": {
   "lineno": 125
  },
  "type": "constant"
 },
 "sklearn.linear_model.tests.test_sgd._SparseSGDClassifier": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "sklearn.linear_model.SGDClassifier"
   ]
  },
  "type": "class"
 },
 "sklearn.linear_model.tests.test_sgd._SparseSGDClassifier.decision_function": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "scipy.sparse.csr_matrix",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd._SparseSGDClassifier.fit": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "scipy.sparse.csr_matrix",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd._SparseSGDClassifier.partial_fit": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "scipy.sparse.csr_matrix",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd._SparseSGDClassifier.predict_proba": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "scipy.sparse.csr_matrix",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd._SparseSGDRegressor": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "sklearn.linear_model.SGDRegressor"
   ]
  },
  "type": "class"
 },
 "sklearn.linear_model.tests.test_sgd._SparseSGDRegressor.decision_function": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "scipy.sparse.csr_matrix",
    "sklearn.linear_model.SGDRegressor.decision_function"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd._SparseSGDRegressor.fit": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "scipy.sparse.csr_matrix",
    "sklearn.linear_model.SGDRegressor.fit"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd._SparseSGDRegressor.partial_fit": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "scipy.sparse.csr_matrix",
    "sklearn.linear_model.SGDRegressor.partial_fit"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd._test_gradient_common": {
  "data": {
   "lineno": 1437,
   "symbols_in_volume": [
    "sklearn.utils._testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd._test_warm_start": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "klass",
    "sklearn.linear_model.tests.test_sgd.X",
    "sklearn.linear_model.tests.test_sgd.Y",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd._update_kwargs": {
  "data": {
   "lineno": 27
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.asgd": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "enumerate",
    "numpy.dot",
    "numpy.zeros",
    "sklearn.linear_model.tests.test_sgd.SparseSGDClassifier",
    "sklearn.linear_model.tests.test_sgd.SparseSGDRegressor",
    "sklearn.linear_model.tests.test_sgd.X"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.assert_almost_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_almost_equal"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sgd.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sgd.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sgd.assert_raises": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sgd.assert_raises_regexp": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_raises_regexp"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sgd.assert_warns": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_warns"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sgd.clone": {
  "data": {
   "shadows": "sklearn.base.clone"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sgd.datasets": {
  "data": {
   "shadows": "sklearn.datasets"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sgd.ignore_warnings": {
  "data": {
   "shadows": "sklearn.utils._testing.ignore_warnings"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sgd.iris": {
  "data": {
   "lineno": 121
  },
  "type": "constant"
 },
 "sklearn.linear_model.tests.test_sgd.is_classifier": {
  "data": {
   "shadows": "sklearn.base.is_classifier"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sgd.joblib": {
  "data": {
   "shadows": "joblib"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sgd.linear_model": {
  "data": {
   "shadows": "sklearn.linear_model"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sgd.metrics": {
  "data": {
   "shadows": "sklearn.metrics"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sgd.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sgd.parse_version": {
  "data": {
   "shadows": "sklearn.utils.fixes.parse_version"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sgd.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sgd.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sgd.scale": {
  "data": {
   "shadows": "sklearn.preprocessing.scale"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sgd.sgd_fast": {
  "data": {
   "shadows": "sklearn.linear_model._sgd_fast"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sgd.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sgd.test_SGDClassifier_fit_for_all_backends": {
  "data": {
   "lineno": 1580,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "scipy.sparse.random",
    "sklearn.linear_model.tests.test_sgd.SGDClassifier",
    "sklearn.linear_model.tests.test_sgd.X",
    "sklearn.linear_model.tests.test_sgd.joblib",
    "sklearn.linear_model.tests.test_sgd.pytest",
    "sklearn.utils._testing.assert_array_almost_equal",
    "sklearn.utils.fixes.parse_version"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_adaptive_longer_than_constant": {
  "data": {
   "lineno": 353,
   "symbols_in_volume": [
    "klass",
    "sklearn.linear_model.tests.test_sgd.SGDClassifier",
    "sklearn.linear_model.tests.test_sgd.SGDRegressor",
    "sklearn.linear_model.tests.test_sgd.SparseSGDClassifier",
    "sklearn.linear_model.tests.test_sgd.SparseSGDRegressor",
    "sklearn.linear_model.tests.test_sgd.iris",
    "sklearn.linear_model.tests.test_sgd.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_argument_coef": {
  "data": {
   "lineno": 487,
   "symbols_in_volume": [
    "TypeError",
    "klass",
    "numpy.zeros",
    "sklearn.linear_model.tests.test_sgd.SGDClassifier",
    "sklearn.linear_model.tests.test_sgd.SparseSGDClassifier",
    "sklearn.linear_model.tests.test_sgd.pytest",
    "sklearn.utils._testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_average_binary_computed_correctly": {
  "data": {
   "lineno": 523,
   "symbols_in_volume": [
    "klass",
    "numpy.dot",
    "numpy.random.RandomState",
    "numpy.sign",
    "sklearn.linear_model.tests.test_sgd.SGDClassifier",
    "sklearn.linear_model.tests.test_sgd.SparseSGDClassifier",
    "sklearn.linear_model.tests.test_sgd.X",
    "sklearn.linear_model.tests.test_sgd.asgd",
    "sklearn.linear_model.tests.test_sgd.pytest",
    "sklearn.utils._testing.assert_almost_equal",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_average_sparse": {
  "data": {
   "lineno": 1148,
   "symbols_in_volume": [
    "int",
    "klass",
    "sklearn.linear_model.tests.test_sgd.SGDRegressor",
    "sklearn.linear_model.tests.test_sgd.SparseSGDRegressor",
    "sklearn.linear_model.tests.test_sgd.X3",
    "sklearn.linear_model.tests.test_sgd.Y3",
    "sklearn.linear_model.tests.test_sgd.asgd",
    "sklearn.linear_model.tests.test_sgd.pytest",
    "sklearn.utils._testing.assert_almost_equal",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_balanced_weight": {
  "data": {
   "lineno": 866,
   "symbols_in_volume": [
    "klass",
    "numpy.arange",
    "numpy.concatenate",
    "numpy.random.RandomState",
    "numpy.vstack",
    "sklearn.linear_model.tests.test_sgd.SGDClassifier",
    "sklearn.linear_model.tests.test_sgd.SparseSGDClassifier",
    "sklearn.linear_model.tests.test_sgd.X",
    "sklearn.linear_model.tests.test_sgd.iris",
    "sklearn.linear_model.tests.test_sgd.pytest",
    "sklearn.metrics.f1_score",
    "sklearn.preprocessing.scale",
    "sklearn.utils._testing.assert_almost_equal",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_class_weights": {
  "data": {
   "lineno": 793,
   "symbols_in_volume": [
    "klass",
    "numpy.array",
    "sklearn.linear_model.tests.test_sgd.SGDClassifier",
    "sklearn.linear_model.tests.test_sgd.SparseSGDClassifier",
    "sklearn.linear_model.tests.test_sgd.X",
    "sklearn.linear_model.tests.test_sgd.pytest",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_clone": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "klass",
    "sklearn.base.clone",
    "sklearn.linear_model.tests.test_sgd.SGDClassifier",
    "sklearn.linear_model.tests.test_sgd.SGDRegressor",
    "sklearn.linear_model.tests.test_sgd.SparseSGDClassifier",
    "sklearn.linear_model.tests.test_sgd.SparseSGDRegressor",
    "sklearn.linear_model.tests.test_sgd.X",
    "sklearn.linear_model.tests.test_sgd.Y",
    "sklearn.linear_model.tests.test_sgd.pytest",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_early_stopping": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": [
    "klass",
    "sklearn.linear_model.tests.test_sgd.SGDClassifier",
    "sklearn.linear_model.tests.test_sgd.SGDRegressor",
    "sklearn.linear_model.tests.test_sgd.SparseSGDClassifier",
    "sklearn.linear_model.tests.test_sgd.SparseSGDRegressor",
    "sklearn.linear_model.tests.test_sgd.X",
    "sklearn.linear_model.tests.test_sgd.Y",
    "sklearn.linear_model.tests.test_sgd.iris",
    "sklearn.linear_model.tests.test_sgd.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_elasticnet_convergence": {
  "data": {
   "lineno": 1252,
   "symbols_in_volume": [
    "klass",
    "numpy.dot",
    "numpy.random.RandomState",
    "sklearn.linear_model.ElasticNet",
    "sklearn.linear_model.tests.test_sgd.SGDRegressor",
    "sklearn.linear_model.tests.test_sgd.SparseSGDRegressor",
    "sklearn.linear_model.tests.test_sgd.X",
    "sklearn.linear_model.tests.test_sgd.pytest",
    "sklearn.utils._testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_equal_class_weight": {
  "data": {
   "lineno": 815,
   "symbols_in_volume": [
    "klass",
    "sklearn.linear_model.tests.test_sgd.SGDClassifier",
    "sklearn.linear_model.tests.test_sgd.SparseSGDClassifier",
    "sklearn.linear_model.tests.test_sgd.X",
    "sklearn.linear_model.tests.test_sgd.pytest",
    "sklearn.utils._testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_fit_then_partial_fit": {
  "data": {
   "lineno": 1003,
   "symbols_in_volume": [
    "klass",
    "sklearn.linear_model.tests.test_sgd.SGDClassifier",
    "sklearn.linear_model.tests.test_sgd.SparseSGDClassifier",
    "sklearn.linear_model.tests.test_sgd.X2",
    "sklearn.linear_model.tests.test_sgd.Y2",
    "sklearn.linear_model.tests.test_sgd.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_gradient_epsilon_insensitive": {
  "data": {
   "lineno": 1529,
   "symbols_in_volume": [
    "sklearn.linear_model._sgd_fast.EpsilonInsensitive",
    "sklearn.linear_model.tests.test_sgd._test_gradient_common"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_gradient_hinge": {
  "data": {
   "lineno": 1444,
   "symbols_in_volume": [
    "sklearn.linear_model._sgd_fast.Hinge",
    "sklearn.linear_model.tests.test_sgd._test_gradient_common"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_gradient_huber": {
  "data": {
   "lineno": 1506,
   "symbols_in_volume": [
    "sklearn.linear_model._sgd_fast.Huber",
    "sklearn.linear_model.tests.test_sgd._test_gradient_common"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_gradient_log": {
  "data": {
   "lineno": 1478,
   "symbols_in_volume": [
    "numpy.exp",
    "sklearn.linear_model._sgd_fast.Log",
    "sklearn.linear_model.tests.test_sgd._test_gradient_common",
    "sklearn.utils._testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_gradient_modified_huber": {
  "data": {
   "lineno": 1517,
   "symbols_in_volume": [
    "sklearn.linear_model._sgd_fast.ModifiedHuber",
    "sklearn.linear_model.tests.test_sgd._test_gradient_common"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_gradient_squared_epsilon_insensitive": {
  "data": {
   "lineno": 1540,
   "symbols_in_volume": [
    "sklearn.linear_model._sgd_fast.SquaredEpsilonInsensitive",
    "sklearn.linear_model.tests.test_sgd._test_gradient_common"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_gradient_squared_hinge": {
  "data": {
   "lineno": 1467,
   "symbols_in_volume": [
    "sklearn.linear_model._sgd_fast.SquaredHinge",
    "sklearn.linear_model.tests.test_sgd._test_gradient_common"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_gradient_squared_loss": {
  "data": {
   "lineno": 1495,
   "symbols_in_volume": [
    "sklearn.linear_model._sgd_fast.SquaredLoss",
    "sklearn.linear_model.tests.test_sgd._test_gradient_common"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_input_format": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "ValueError",
    "klass",
    "numpy.array",
    "numpy.c_",
    "numpy.newaxis",
    "sklearn.linear_model.tests.test_sgd.SGDClassifier",
    "sklearn.linear_model.tests.test_sgd.SGDRegressor",
    "sklearn.linear_model.tests.test_sgd.SparseSGDClassifier",
    "sklearn.linear_model.tests.test_sgd.SparseSGDRegressor",
    "sklearn.linear_model.tests.test_sgd.X",
    "sklearn.linear_model.tests.test_sgd.Y",
    "sklearn.linear_model.tests.test_sgd.pytest",
    "sklearn.utils._testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_l1_ratio": {
  "data": {
   "lineno": 1326,
   "symbols_in_volume": [
    "sklearn.datasets.make_classification",
    "sklearn.linear_model.tests.test_sgd.SGDClassifier",
    "sklearn.linear_model.tests.test_sgd.X",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_large_regularization": {
  "data": {
   "lineno": 1395,
   "symbols_in_volume": [
    "numpy.errstate",
    "numpy.zeros_like",
    "sklearn.linear_model.tests.test_sgd.SGDClassifier",
    "sklearn.linear_model.tests.test_sgd.iris",
    "sklearn.linear_model.tests.test_sgd.pytest",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_late_onset_averaging_not_reached": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "klass",
    "numpy.unique",
    "range",
    "sklearn.base.is_classifier",
    "sklearn.linear_model.tests.test_sgd.SGDClassifier",
    "sklearn.linear_model.tests.test_sgd.SGDRegressor",
    "sklearn.linear_model.tests.test_sgd.SparseSGDClassifier",
    "sklearn.linear_model.tests.test_sgd.SparseSGDRegressor",
    "sklearn.linear_model.tests.test_sgd.X",
    "sklearn.linear_model.tests.test_sgd.Y",
    "sklearn.linear_model.tests.test_sgd.pytest",
    "sklearn.utils._testing.assert_almost_equal",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_late_onset_averaging_reached": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "klass",
    "numpy.array",
    "sklearn.linear_model.tests.test_sgd.SGDClassifier",
    "sklearn.linear_model.tests.test_sgd.SGDRegressor",
    "sklearn.linear_model.tests.test_sgd.SparseSGDClassifier",
    "sklearn.linear_model.tests.test_sgd.SparseSGDRegressor",
    "sklearn.linear_model.tests.test_sgd.X",
    "sklearn.linear_model.tests.test_sgd.Y",
    "sklearn.linear_model.tests.test_sgd.asgd",
    "sklearn.linear_model.tests.test_sgd.pytest",
    "sklearn.utils._testing.assert_almost_equal",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_loss_function_epsilon": {
  "data": {
   "lineno": 1319,
   "symbols_in_volume": [
    "klass",
    "sklearn.linear_model.tests.test_sgd.SGDRegressor",
    "sklearn.linear_model.tests.test_sgd.SparseSGDRegressor",
    "sklearn.linear_model.tests.test_sgd.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_multi_core_gridsearch_and_early_stopping": {
  "data": {
   "lineno": 1563,
   "symbols_in_volume": [
    "numpy.logspace",
    "sklearn.linear_model.tests.test_sgd.SGDClassifier",
    "sklearn.linear_model.tests.test_sgd.iris",
    "sklearn.model_selection.RandomizedSearchCV"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_multi_thread_multi_class_and_early_stopping": {
  "data": {
   "lineno": 1551,
   "symbols_in_volume": [
    "sklearn.linear_model.tests.test_sgd.SGDClassifier",
    "sklearn.linear_model.tests.test_sgd.iris"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_multiple_fit": {
  "data": {
   "lineno": 1065,
   "symbols_in_volume": [
    "hasattr",
    "klass",
    "sklearn.linear_model.tests.test_sgd.SGDClassifier",
    "sklearn.linear_model.tests.test_sgd.SparseSGDClassifier",
    "sklearn.linear_model.tests.test_sgd.X",
    "sklearn.linear_model.tests.test_sgd.Y",
    "sklearn.linear_model.tests.test_sgd.pytest",
    "sklearn.preprocessing.LabelEncoder"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_n_iter_no_change": {
  "data": {
   "lineno": 400,
   "symbols_in_volume": [
    "klass",
    "sklearn.linear_model.tests.test_sgd.SGDClassifier",
    "sklearn.linear_model.tests.test_sgd.SGDRegressor",
    "sklearn.linear_model.tests.test_sgd.SparseSGDClassifier",
    "sklearn.linear_model.tests.test_sgd.SparseSGDRegressor",
    "sklearn.linear_model.tests.test_sgd.X",
    "sklearn.linear_model.tests.test_sgd.Y",
    "sklearn.linear_model.tests.test_sgd.iris",
    "sklearn.linear_model.tests.test_sgd.pytest",
    "sklearn.utils._testing.assert_array_equal",
    "sorted"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_not_enough_sample_for_early_stopping": {
  "data": {
   "lineno": 414,
   "symbols_in_volume": [
    "ValueError",
    "klass",
    "sklearn.linear_model.tests.test_sgd.SGDClassifier",
    "sklearn.linear_model.tests.test_sgd.SGDRegressor",
    "sklearn.linear_model.tests.test_sgd.SparseSGDClassifier",
    "sklearn.linear_model.tests.test_sgd.SparseSGDRegressor",
    "sklearn.linear_model.tests.test_sgd.X3",
    "sklearn.linear_model.tests.test_sgd.Y3",
    "sklearn.linear_model.tests.test_sgd.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_numerical_stability_large_gradient": {
  "data": {
   "lineno": 1384,
   "symbols_in_volume": [
    "numpy.errstate",
    "numpy.isfinite",
    "sklearn.linear_model.tests.test_sgd.SGDClassifier",
    "sklearn.linear_model.tests.test_sgd.iris"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_partial_fit": {
  "data": {
   "lineno": 1281,
   "symbols_in_volume": [
    "id",
    "klass",
    "sklearn.linear_model.tests.test_sgd.SGDRegressor",
    "sklearn.linear_model.tests.test_sgd.SparseSGDRegressor",
    "sklearn.linear_model.tests.test_sgd.X",
    "sklearn.linear_model.tests.test_sgd.Y",
    "sklearn.linear_model.tests.test_sgd.pytest",
    "sklearn.utils._testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_partial_fit_binary": {
  "data": {
   "lineno": 949,
   "symbols_in_volume": [
    "id",
    "klass",
    "numpy.unique",
    "sklearn.linear_model.tests.test_sgd.SGDClassifier",
    "sklearn.linear_model.tests.test_sgd.SparseSGDClassifier",
    "sklearn.linear_model.tests.test_sgd.T",
    "sklearn.linear_model.tests.test_sgd.X",
    "sklearn.linear_model.tests.test_sgd.Y",
    "sklearn.linear_model.tests.test_sgd.pytest",
    "sklearn.linear_model.tests.test_sgd.true_result",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_partial_fit_equal_fit": {
  "data": {
   "lineno": 1299,
   "symbols_in_volume": [
    "klass",
    "range",
    "sklearn.linear_model.tests.test_sgd.SGDRegressor",
    "sklearn.linear_model.tests.test_sgd.SparseSGDRegressor",
    "sklearn.linear_model.tests.test_sgd.T",
    "sklearn.linear_model.tests.test_sgd.X",
    "sklearn.linear_model.tests.test_sgd.Y",
    "sklearn.linear_model.tests.test_sgd.pytest",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_partial_fit_equal_fit_classif": {
  "data": {
   "lineno": 1013,
   "symbols_in_volume": [
    "klass",
    "numpy.unique",
    "range",
    "sklearn.linear_model.tests.test_sgd.SGDClassifier",
    "sklearn.linear_model.tests.test_sgd.SparseSGDClassifier",
    "sklearn.linear_model.tests.test_sgd.T",
    "sklearn.linear_model.tests.test_sgd.T2",
    "sklearn.linear_model.tests.test_sgd.X",
    "sklearn.linear_model.tests.test_sgd.X2",
    "sklearn.linear_model.tests.test_sgd.Y",
    "sklearn.linear_model.tests.test_sgd.Y2",
    "sklearn.linear_model.tests.test_sgd.pytest",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_partial_fit_exception": {
  "data": {
   "lineno": 942,
   "symbols_in_volume": [
    "ValueError",
    "klass",
    "sklearn.linear_model.tests.test_sgd.SGDClassifier",
    "sklearn.linear_model.tests.test_sgd.SparseSGDClassifier",
    "sklearn.linear_model.tests.test_sgd.X3",
    "sklearn.linear_model.tests.test_sgd.Y3",
    "sklearn.linear_model.tests.test_sgd.pytest",
    "sklearn.utils._testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_partial_fit_multiclass": {
  "data": {
   "lineno": 970,
   "symbols_in_volume": [
    "id",
    "klass",
    "numpy.unique",
    "sklearn.linear_model.tests.test_sgd.SGDClassifier",
    "sklearn.linear_model.tests.test_sgd.SparseSGDClassifier",
    "sklearn.linear_model.tests.test_sgd.X2",
    "sklearn.linear_model.tests.test_sgd.Y2",
    "sklearn.linear_model.tests.test_sgd.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_partial_fit_multiclass_average": {
  "data": {
   "lineno": 988,
   "symbols_in_volume": [
    "klass",
    "numpy.unique",
    "sklearn.linear_model.tests.test_sgd.SGDClassifier",
    "sklearn.linear_model.tests.test_sgd.SparseSGDClassifier",
    "sklearn.linear_model.tests.test_sgd.X2",
    "sklearn.linear_model.tests.test_sgd.Y2",
    "sklearn.linear_model.tests.test_sgd.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_partial_fit_weight_class_balanced": {
  "data": {
   "lineno": 571,
   "symbols_in_volume": [
    "ValueError",
    "klass",
    "numpy.unique",
    "sklearn.linear_model.tests.test_sgd.SGDClassifier",
    "sklearn.linear_model.tests.test_sgd.SparseSGDClassifier",
    "sklearn.linear_model.tests.test_sgd.X",
    "sklearn.linear_model.tests.test_sgd.Y",
    "sklearn.linear_model.tests.test_sgd.pytest",
    "sklearn.utils._testing.assert_raises_regexp"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_plain_has_no_average_attr": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "hasattr",
    "klass",
    "sklearn.linear_model.tests.test_sgd.SGDClassifier",
    "sklearn.linear_model.tests.test_sgd.SGDRegressor",
    "sklearn.linear_model.tests.test_sgd.SparseSGDClassifier",
    "sklearn.linear_model.tests.test_sgd.SparseSGDRegressor",
    "sklearn.linear_model.tests.test_sgd.X",
    "sklearn.linear_model.tests.test_sgd.Y",
    "sklearn.linear_model.tests.test_sgd.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_provide_coef": {
  "data": {
   "lineno": 494,
   "symbols_in_volume": [
    "ValueError",
    "klass",
    "numpy.zeros",
    "sklearn.linear_model.tests.test_sgd.SGDClassifier",
    "sklearn.linear_model.tests.test_sgd.SparseSGDClassifier",
    "sklearn.linear_model.tests.test_sgd.X",
    "sklearn.linear_model.tests.test_sgd.Y",
    "sklearn.linear_model.tests.test_sgd.pytest",
    "sklearn.utils._testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_regression_losses": {
  "data": {
   "lineno": 1035,
   "symbols_in_volume": [
    "klass",
    "numpy.mean",
    "numpy.random.RandomState",
    "sklearn.linear_model.tests.test_sgd.SGDClassifier",
    "sklearn.linear_model.tests.test_sgd.SparseSGDClassifier",
    "sklearn.linear_model.tests.test_sgd.X",
    "sklearn.linear_model.tests.test_sgd.Y",
    "sklearn.linear_model.tests.test_sgd.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_sample_weights": {
  "data": {
   "lineno": 915,
   "symbols_in_volume": [
    "klass",
    "numpy.array",
    "sklearn.linear_model.tests.test_sgd.SGDClassifier",
    "sklearn.linear_model.tests.test_sgd.SparseSGDClassifier",
    "sklearn.linear_model.tests.test_sgd.X",
    "sklearn.linear_model.tests.test_sgd.pytest",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_set_coef_multiclass": {
  "data": {
   "lineno": 647,
   "symbols_in_volume": [
    "ValueError",
    "klass",
    "numpy.zeros",
    "sklearn.linear_model.tests.test_sgd.SGDClassifier",
    "sklearn.linear_model.tests.test_sgd.SparseSGDClassifier",
    "sklearn.linear_model.tests.test_sgd.X2",
    "sklearn.linear_model.tests.test_sgd.Y2",
    "sklearn.linear_model.tests.test_sgd.pytest",
    "sklearn.utils._testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_set_intercept": {
  "data": {
   "lineno": 502,
   "symbols_in_volume": [
    "ValueError",
    "klass",
    "numpy.zeros",
    "sklearn.linear_model.tests.test_sgd.SGDClassifier",
    "sklearn.linear_model.tests.test_sgd.SparseSGDClassifier",
    "sklearn.linear_model.tests.test_sgd.X",
    "sklearn.linear_model.tests.test_sgd.Y",
    "sklearn.linear_model.tests.test_sgd.pytest",
    "sklearn.utils._testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_set_intercept_binary": {
  "data": {
   "lineno": 517,
   "symbols_in_volume": [
    "klass",
    "sklearn.linear_model.tests.test_sgd.SGDClassifier",
    "sklearn.linear_model.tests.test_sgd.SparseSGDClassifier",
    "sklearn.linear_model.tests.test_sgd.X5",
    "sklearn.linear_model.tests.test_sgd.Y5",
    "sklearn.linear_model.tests.test_sgd.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_set_intercept_to_intercept": {
  "data": {
   "lineno": 554,
   "symbols_in_volume": [
    "klass",
    "sklearn.linear_model.tests.test_sgd.SGDClassifier",
    "sklearn.linear_model.tests.test_sgd.SparseSGDClassifier",
    "sklearn.linear_model.tests.test_sgd.X",
    "sklearn.linear_model.tests.test_sgd.X5",
    "sklearn.linear_model.tests.test_sgd.Y",
    "sklearn.linear_model.tests.test_sgd.Y5",
    "sklearn.linear_model.tests.test_sgd.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_sgd_at_least_two_labels": {
  "data": {
   "lineno": 564,
   "symbols_in_volume": [
    "ValueError",
    "klass",
    "numpy.ones",
    "sklearn.linear_model.tests.test_sgd.SGDClassifier",
    "sklearn.linear_model.tests.test_sgd.SparseSGDClassifier",
    "sklearn.linear_model.tests.test_sgd.X2",
    "sklearn.linear_model.tests.test_sgd.pytest",
    "sklearn.utils._testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_sgd_averaged_computed_correctly": {
  "data": {
   "lineno": 1088,
   "symbols_in_volume": [
    "klass",
    "numpy.dot",
    "numpy.random.RandomState",
    "sklearn.linear_model.tests.test_sgd.SGDRegressor",
    "sklearn.linear_model.tests.test_sgd.SparseSGDRegressor",
    "sklearn.linear_model.tests.test_sgd.X",
    "sklearn.linear_model.tests.test_sgd.asgd",
    "sklearn.linear_model.tests.test_sgd.pytest",
    "sklearn.utils._testing.assert_almost_equal",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_sgd_averaged_partial_fit": {
  "data": {
   "lineno": 1118,
   "symbols_in_volume": [
    "int",
    "klass",
    "numpy.dot",
    "numpy.random.RandomState",
    "sklearn.linear_model.tests.test_sgd.SGDRegressor",
    "sklearn.linear_model.tests.test_sgd.SparseSGDRegressor",
    "sklearn.linear_model.tests.test_sgd.X",
    "sklearn.linear_model.tests.test_sgd.asgd",
    "sklearn.linear_model.tests.test_sgd.pytest",
    "sklearn.utils._testing.assert_almost_equal",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_sgd_bad_alpha": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.linear_model.tests.test_sgd.SGDClassifier",
    "sklearn.linear_model.tests.test_sgd.SGDRegressor",
    "sklearn.linear_model.tests.test_sgd.SparseSGDClassifier",
    "sklearn.linear_model.tests.test_sgd.SparseSGDRegressor",
    "sklearn.linear_model.tests.test_sgd.pytest",
    "sklearn.utils._testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_sgd_bad_alpha_for_optimal_learning_rate": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": [
    "ValueError",
    "klass",
    "sklearn.linear_model.tests.test_sgd.SGDClassifier",
    "sklearn.linear_model.tests.test_sgd.SGDRegressor",
    "sklearn.linear_model.tests.test_sgd.SparseSGDClassifier",
    "sklearn.linear_model.tests.test_sgd.SparseSGDRegressor",
    "sklearn.linear_model.tests.test_sgd.pytest",
    "sklearn.utils._testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_sgd_bad_eta0": {
  "data": {
   "lineno": 450,
   "symbols_in_volume": [
    "ValueError",
    "klass",
    "sklearn.linear_model.tests.test_sgd.SGDClassifier",
    "sklearn.linear_model.tests.test_sgd.SparseSGDClassifier",
    "sklearn.linear_model.tests.test_sgd.pytest",
    "sklearn.utils._testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_sgd_bad_l1_ratio": {
  "data": {
   "lineno": 438,
   "symbols_in_volume": [
    "ValueError",
    "klass",
    "sklearn.linear_model.tests.test_sgd.SGDClassifier",
    "sklearn.linear_model.tests.test_sgd.SparseSGDClassifier",
    "sklearn.linear_model.tests.test_sgd.pytest",
    "sklearn.utils._testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_sgd_bad_learning_rate_schedule": {
  "data": {
   "lineno": 444,
   "symbols_in_volume": [
    "ValueError",
    "klass",
    "sklearn.linear_model.tests.test_sgd.SGDClassifier",
    "sklearn.linear_model.tests.test_sgd.SparseSGDClassifier",
    "sklearn.linear_model.tests.test_sgd.pytest",
    "sklearn.utils._testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_sgd_bad_loss": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.linear_model.tests.test_sgd.SGDClassifier",
    "sklearn.linear_model.tests.test_sgd.SGDRegressor",
    "sklearn.linear_model.tests.test_sgd.SparseSGDClassifier",
    "sklearn.linear_model.tests.test_sgd.SparseSGDRegressor",
    "sklearn.linear_model.tests.test_sgd.pytest",
    "sklearn.utils._testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_sgd_bad_penalty": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.linear_model.tests.test_sgd.SGDClassifier",
    "sklearn.linear_model.tests.test_sgd.SGDRegressor",
    "sklearn.linear_model.tests.test_sgd.SparseSGDClassifier",
    "sklearn.linear_model.tests.test_sgd.SparseSGDRegressor",
    "sklearn.linear_model.tests.test_sgd.pytest",
    "sklearn.utils._testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_sgd_clf": {
  "data": {
   "lineno": 426,
   "symbols_in_volume": [
    "klass",
    "sklearn.linear_model.tests.test_sgd.SGDClassifier",
    "sklearn.linear_model.tests.test_sgd.SparseSGDClassifier",
    "sklearn.linear_model.tests.test_sgd.T",
    "sklearn.linear_model.tests.test_sgd.X",
    "sklearn.linear_model.tests.test_sgd.Y",
    "sklearn.linear_model.tests.test_sgd.pytest",
    "sklearn.linear_model.tests.test_sgd.true_result",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_sgd_deprecated_attr": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "FutureWarning",
    "getattr",
    "klass",
    "sklearn.linear_model.tests.test_sgd.SGDClassifier",
    "sklearn.linear_model.tests.test_sgd.SGDRegressor",
    "sklearn.linear_model.tests.test_sgd.X",
    "sklearn.linear_model.tests.test_sgd.Y",
    "sklearn.linear_model.tests.test_sgd.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_sgd_early_stopping_param": {
  "data": {
   "lineno": 469,
   "symbols_in_volume": [
    "ValueError",
    "klass",
    "sklearn.linear_model.tests.test_sgd.SGDClassifier",
    "sklearn.linear_model.tests.test_sgd.SparseSGDClassifier",
    "sklearn.linear_model.tests.test_sgd.pytest",
    "sklearn.utils._testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_sgd_early_stopping_with_partial_fit": {
  "data": {
   "lineno": 510,
   "symbols_in_volume": [
    "ValueError",
    "klass",
    "sklearn.linear_model.tests.test_sgd.SGDClassifier",
    "sklearn.linear_model.tests.test_sgd.SparseSGDClassifier",
    "sklearn.linear_model.tests.test_sgd.X",
    "sklearn.linear_model.tests.test_sgd.Y",
    "sklearn.linear_model.tests.test_sgd.pytest",
    "sklearn.utils._testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_sgd_epsilon_insensitive": {
  "data": {
   "lineno": 1198,
   "symbols_in_volume": [
    "klass",
    "numpy.linspace",
    "numpy.random.RandomState",
    "sklearn.linear_model.tests.test_sgd.SGDRegressor",
    "sklearn.linear_model.tests.test_sgd.SparseSGDRegressor",
    "sklearn.linear_model.tests.test_sgd.X",
    "sklearn.linear_model.tests.test_sgd.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_sgd_huber_fit": {
  "data": {
   "lineno": 1226,
   "symbols_in_volume": [
    "klass",
    "numpy.linspace",
    "numpy.random.RandomState",
    "sklearn.linear_model.tests.test_sgd.SGDRegressor",
    "sklearn.linear_model.tests.test_sgd.SparseSGDRegressor",
    "sklearn.linear_model.tests.test_sgd.X",
    "sklearn.linear_model.tests.test_sgd.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_sgd_l1": {
  "data": {
   "lineno": 762,
   "symbols_in_volume": [
    "klass",
    "len",
    "numpy.arange",
    "numpy.random.RandomState",
    "numpy.zeros",
    "scipy.sparse.issparse",
    "sklearn.linear_model.tests.test_sgd.SGDClassifier",
    "sklearn.linear_model.tests.test_sgd.SparseSGDClassifier",
    "sklearn.linear_model.tests.test_sgd.X",
    "sklearn.linear_model.tests.test_sgd.X4",
    "sklearn.linear_model.tests.test_sgd.Y",
    "sklearn.linear_model.tests.test_sgd.Y4",
    "sklearn.linear_model.tests.test_sgd.pickle",
    "sklearn.linear_model.tests.test_sgd.pytest",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_sgd_least_squares_fit": {
  "data": {
   "lineno": 1172,
   "symbols_in_volume": [
    "klass",
    "numpy.linspace",
    "numpy.random.RandomState",
    "sklearn.linear_model.tests.test_sgd.SGDRegressor",
    "sklearn.linear_model.tests.test_sgd.SparseSGDRegressor",
    "sklearn.linear_model.tests.test_sgd.X",
    "sklearn.linear_model.tests.test_sgd.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_sgd_max_iter_param": {
  "data": {
   "lineno": 457,
   "symbols_in_volume": [
    "ValueError",
    "klass",
    "sklearn.linear_model.tests.test_sgd.SGDClassifier",
    "sklearn.linear_model.tests.test_sgd.SparseSGDClassifier",
    "sklearn.linear_model.tests.test_sgd.pytest",
    "sklearn.utils._testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_sgd_multiclass": {
  "data": {
   "lineno": 588,
   "symbols_in_volume": [
    "klass",
    "sklearn.linear_model.tests.test_sgd.SGDClassifier",
    "sklearn.linear_model.tests.test_sgd.SparseSGDClassifier",
    "sklearn.linear_model.tests.test_sgd.T2",
    "sklearn.linear_model.tests.test_sgd.X2",
    "sklearn.linear_model.tests.test_sgd.Y2",
    "sklearn.linear_model.tests.test_sgd.pytest",
    "sklearn.linear_model.tests.test_sgd.true_result2",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_sgd_multiclass_average": {
  "data": {
   "lineno": 599,
   "symbols_in_volume": [
    "enumerate",
    "klass",
    "numpy.array",
    "numpy.ones",
    "numpy.unique",
    "sklearn.linear_model.tests.test_sgd.SGDClassifier",
    "sklearn.linear_model.tests.test_sgd.SparseSGDClassifier",
    "sklearn.linear_model.tests.test_sgd.X2",
    "sklearn.linear_model.tests.test_sgd.Y2",
    "sklearn.linear_model.tests.test_sgd.asgd",
    "sklearn.linear_model.tests.test_sgd.pytest",
    "sklearn.utils._testing.assert_almost_equal",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_sgd_multiclass_njobs": {
  "data": {
   "lineno": 636,
   "symbols_in_volume": [
    "klass",
    "sklearn.linear_model.tests.test_sgd.SGDClassifier",
    "sklearn.linear_model.tests.test_sgd.SparseSGDClassifier",
    "sklearn.linear_model.tests.test_sgd.T2",
    "sklearn.linear_model.tests.test_sgd.X2",
    "sklearn.linear_model.tests.test_sgd.Y2",
    "sklearn.linear_model.tests.test_sgd.pytest",
    "sklearn.linear_model.tests.test_sgd.true_result2",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_sgd_multiclass_with_init_coef": {
  "data": {
   "lineno": 624,
   "symbols_in_volume": [
    "klass",
    "numpy.zeros",
    "sklearn.linear_model.tests.test_sgd.SGDClassifier",
    "sklearn.linear_model.tests.test_sgd.SparseSGDClassifier",
    "sklearn.linear_model.tests.test_sgd.T2",
    "sklearn.linear_model.tests.test_sgd.X2",
    "sklearn.linear_model.tests.test_sgd.Y2",
    "sklearn.linear_model.tests.test_sgd.pytest",
    "sklearn.linear_model.tests.test_sgd.true_result2",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_sgd_n_iter_no_change": {
  "data": {
   "lineno": 481,
   "symbols_in_volume": [
    "ValueError",
    "klass",
    "sklearn.linear_model.tests.test_sgd.SGDClassifier",
    "sklearn.linear_model.tests.test_sgd.SparseSGDClassifier",
    "sklearn.linear_model.tests.test_sgd.pytest",
    "sklearn.utils._testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_sgd_predict_proba_method_access": {
  "data": {
   "lineno": 667,
   "symbols_in_volume": [
    "AttributeError",
    "hasattr",
    "sklearn.linear_model.SGDClassifier.loss_functions",
    "sklearn.linear_model.tests.test_sgd.SGDClassifier",
    "sklearn.linear_model.tests.test_sgd.SparseSGDClassifier",
    "sklearn.linear_model.tests.test_sgd.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_sgd_proba": {
  "data": {
   "lineno": 692,
   "symbols_in_volume": [
    "hasattr",
    "klass",
    "numpy.all",
    "numpy.argmax",
    "numpy.argmin",
    "numpy.argsort",
    "numpy.log",
    "sklearn.linear_model.tests.test_sgd.SGDClassifier",
    "sklearn.linear_model.tests.test_sgd.SparseSGDClassifier",
    "sklearn.linear_model.tests.test_sgd.X",
    "sklearn.linear_model.tests.test_sgd.X2",
    "sklearn.linear_model.tests.test_sgd.Y",
    "sklearn.linear_model.tests.test_sgd.Y2",
    "sklearn.linear_model.tests.test_sgd.pytest",
    "sklearn.utils._testing.assert_almost_equal",
    "sklearn.utils._testing.assert_array_almost_equal",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_sgd_reg": {
  "data": {
   "lineno": 1080,
   "symbols_in_volume": [
    "klass",
    "sklearn.linear_model.tests.test_sgd.SGDRegressor",
    "sklearn.linear_model.tests.test_sgd.SparseSGDRegressor",
    "sklearn.linear_model.tests.test_sgd.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_sgd_shuffle_param": {
  "data": {
   "lineno": 463,
   "symbols_in_volume": [
    "ValueError",
    "klass",
    "sklearn.linear_model.tests.test_sgd.SGDClassifier",
    "sklearn.linear_model.tests.test_sgd.SparseSGDClassifier",
    "sklearn.linear_model.tests.test_sgd.pytest",
    "sklearn.utils._testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_sgd_validation_fraction": {
  "data": {
   "lineno": 475,
   "symbols_in_volume": [
    "ValueError",
    "klass",
    "sklearn.linear_model.tests.test_sgd.SGDClassifier",
    "sklearn.linear_model.tests.test_sgd.SparseSGDClassifier",
    "sklearn.linear_model.tests.test_sgd.pytest",
    "sklearn.utils._testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_tol_parameter": {
  "data": {
   "lineno": 1407,
   "symbols_in_volume": [
    "sklearn.exceptions.ConvergenceWarning",
    "sklearn.linear_model.tests.test_sgd.SGDClassifier",
    "sklearn.linear_model.tests.test_sgd.X",
    "sklearn.linear_model.tests.test_sgd.iris",
    "sklearn.preprocessing.StandardScaler",
    "sklearn.utils._testing.assert_warns"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_underflow_or_overlow": {
  "data": {
   "lineno": 1349,
   "symbols_in_volume": [
    "ValueError",
    "numpy.dot",
    "numpy.errstate",
    "numpy.int32",
    "numpy.isfinite",
    "numpy.random.RandomState",
    "numpy.unique",
    "sklearn.linear_model.tests.test_sgd.SGDClassifier",
    "sklearn.linear_model.tests.test_sgd.X",
    "sklearn.preprocessing.MinMaxScaler",
    "sklearn.utils._testing.assert_array_equal",
    "sklearn.utils._testing.assert_raises_regexp"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_validation_set_not_used_for_training": {
  "data": {
   "lineno": 365,
   "symbols_in_volume": [
    "klass",
    "next",
    "numpy.random.RandomState",
    "numpy.sort",
    "sklearn.base.is_classifier",
    "sklearn.linear_model.tests.test_sgd.SGDClassifier",
    "sklearn.linear_model.tests.test_sgd.SGDRegressor",
    "sklearn.linear_model.tests.test_sgd.SparseSGDClassifier",
    "sklearn.linear_model.tests.test_sgd.SparseSGDRegressor",
    "sklearn.linear_model.tests.test_sgd.X",
    "sklearn.linear_model.tests.test_sgd.Y",
    "sklearn.linear_model.tests.test_sgd.iris",
    "sklearn.linear_model.tests.test_sgd.pytest",
    "sklearn.model_selection.ShuffleSplit",
    "sklearn.model_selection.StratifiedShuffleSplit",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_warm_start": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "klass",
    "sklearn.linear_model.tests.test_sgd.SGDClassifier",
    "sklearn.linear_model.tests.test_sgd.SGDRegressor",
    "sklearn.linear_model.tests.test_sgd.SparseSGDClassifier",
    "sklearn.linear_model.tests.test_sgd.SparseSGDRegressor",
    "sklearn.linear_model.tests.test_sgd.X",
    "sklearn.linear_model.tests.test_sgd.Y",
    "sklearn.linear_model.tests.test_sgd._test_warm_start",
    "sklearn.linear_model.tests.test_sgd.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_warm_start_multiclass": {
  "data": {
   "lineno": 1060,
   "symbols_in_volume": [
    "klass",
    "sklearn.linear_model.tests.test_sgd.SGDClassifier",
    "sklearn.linear_model.tests.test_sgd.SparseSGDClassifier",
    "sklearn.linear_model.tests.test_sgd.X2",
    "sklearn.linear_model.tests.test_sgd.Y2",
    "sklearn.linear_model.tests.test_sgd._test_warm_start",
    "sklearn.linear_model.tests.test_sgd.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_weights_multiplied": {
  "data": {
   "lineno": 847,
   "symbols_in_volume": [
    "klass",
    "numpy.copy",
    "numpy.random.RandomState",
    "sklearn.linear_model.tests.test_sgd.SGDClassifier",
    "sklearn.linear_model.tests.test_sgd.SparseSGDClassifier",
    "sklearn.linear_model.tests.test_sgd.X4",
    "sklearn.linear_model.tests.test_sgd.Y4",
    "sklearn.linear_model.tests.test_sgd.pytest",
    "sklearn.utils._testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_wrong_class_weight_format": {
  "data": {
   "lineno": 840,
   "symbols_in_volume": [
    "ValueError",
    "klass",
    "sklearn.linear_model.tests.test_sgd.SGDClassifier",
    "sklearn.linear_model.tests.test_sgd.SparseSGDClassifier",
    "sklearn.linear_model.tests.test_sgd.X",
    "sklearn.linear_model.tests.test_sgd.Y",
    "sklearn.linear_model.tests.test_sgd.pytest",
    "sklearn.utils._testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_wrong_class_weight_label": {
  "data": {
   "lineno": 833,
   "symbols_in_volume": [
    "ValueError",
    "klass",
    "sklearn.linear_model.tests.test_sgd.SGDClassifier",
    "sklearn.linear_model.tests.test_sgd.SparseSGDClassifier",
    "sklearn.linear_model.tests.test_sgd.X",
    "sklearn.linear_model.tests.test_sgd.Y",
    "sklearn.linear_model.tests.test_sgd.pytest",
    "sklearn.utils._testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_wrong_sample_weights": {
  "data": {
   "lineno": 934,
   "symbols_in_volume": [
    "ValueError",
    "klass",
    "numpy.arange",
    "sklearn.linear_model.tests.test_sgd.SGDClassifier",
    "sklearn.linear_model.tests.test_sgd.SparseSGDClassifier",
    "sklearn.linear_model.tests.test_sgd.X",
    "sklearn.linear_model.tests.test_sgd.Y",
    "sklearn.linear_model.tests.test_sgd.pytest",
    "sklearn.utils._testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.true_result": {
  "data": {
   "lineno": 97
  },
  "type": "constant"
 },
 "sklearn.linear_model.tests.test_sgd.true_result2": {
  "data": {
   "lineno": 105
  },
  "type": "constant"
 },
 "sklearn.linear_model.tests.test_sgd.true_result5": {
  "data": {
   "lineno": 126
  },
  "type": "constant"
 },
 "sklearn.linear_model.tests.test_sparse_coordinate_descent": {
  "data": {},
  "type": "module"
 },
 "sklearn.linear_model.tests.test_sparse_coordinate_descent.ConvergenceWarning": {
  "data": {
   "shadows": "sklearn.exceptions.ConvergenceWarning"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sparse_coordinate_descent.ElasticNet": {
  "data": {
   "shadows": "sklearn.linear_model.ElasticNet"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sparse_coordinate_descent.ElasticNetCV": {
  "data": {
   "shadows": "sklearn.linear_model.ElasticNetCV"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sparse_coordinate_descent.Lasso": {
  "data": {
   "shadows": "sklearn.linear_model.Lasso"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sparse_coordinate_descent.LassoCV": {
  "data": {
   "shadows": "sklearn.linear_model.LassoCV"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sparse_coordinate_descent._test_sparse_enet_not_as_toy_dataset": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "numpy.sum",
    "sklearn.linear_model.ElasticNet",
    "sklearn.linear_model.tests.test_sparse_coordinate_descent.make_sparse_data",
    "sklearn.utils._testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sparse_coordinate_descent.assert_almost_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_almost_equal"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sparse_coordinate_descent.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sparse_coordinate_descent.assert_warns": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_warns"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sparse_coordinate_descent.ignore_warnings": {
  "data": {
   "shadows": "sklearn.utils._testing.ignore_warnings"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sparse_coordinate_descent.make_sparse_data": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.dot",
    "numpy.random.RandomState",
    "numpy.ravel",
    "scipy.sparse.csc_matrix"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sparse_coordinate_descent.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sparse_coordinate_descent.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sparse_coordinate_descent.test_enet_multitarget": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "range",
    "sklearn.linear_model.ElasticNet",
    "sklearn.linear_model.tests.test_sparse_coordinate_descent.make_sparse_data",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sparse_coordinate_descent.test_enet_toy_explicit_sparse_input": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "f",
    "scipy.sparse.lil_matrix",
    "sklearn.linear_model.ElasticNet",
    "sklearn.utils._testing.assert_almost_equal",
    "sklearn.utils._testing.assert_array_almost_equal",
    "sklearn.utils._testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sparse_coordinate_descent.test_enet_toy_list_input": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "numpy.array",
    "scipy.sparse.csc_matrix",
    "sklearn.linear_model.ElasticNet",
    "sklearn.utils._testing.assert_almost_equal",
    "sklearn.utils._testing.assert_array_almost_equal",
    "sklearn.utils._testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sparse_coordinate_descent.test_lasso_zero": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "numpy.array",
    "scipy.sparse.csc_matrix",
    "sklearn.linear_model.Lasso",
    "sklearn.utils._testing.assert_almost_equal",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sparse_coordinate_descent.test_normalize_option": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "scipy.sparse.csc_matrix",
    "sklearn.linear_model.ElasticNet",
    "sklearn.utils._testing.assert_almost_equal",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sparse_coordinate_descent.test_path_parameters": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "len",
    "sklearn.linear_model.ElasticNetCV",
    "sklearn.linear_model.tests.test_sparse_coordinate_descent.make_sparse_data",
    "sklearn.utils._testing.assert_almost_equal",
    "sklearn.utils._testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sparse_coordinate_descent.test_same_multiple_output_sparse_dense": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "numpy.array",
    "scipy.sparse.coo_matrix",
    "sklearn.linear_model.ElasticNet",
    "sklearn.utils._testing.assert_array_almost_equal",
    "sklearn.utils._testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sparse_coordinate_descent.test_same_output_sparse_dense_lasso_and_enet_cv": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "sklearn.linear_model.ElasticNetCV",
    "sklearn.linear_model.LassoCV",
    "sklearn.linear_model.tests.test_sparse_coordinate_descent.make_sparse_data",
    "sklearn.utils._testing.assert_almost_equal",
    "sklearn.utils._testing.assert_array_almost_equal",
    "sklearn.utils._testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sparse_coordinate_descent.test_sparse_coef": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "scipy.sparse.isspmatrix",
    "sklearn.linear_model.ElasticNet"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sparse_coordinate_descent.test_sparse_enet_coordinate_descent": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "numpy.ones",
    "scipy.sparse.csc_matrix",
    "sklearn.exceptions.ConvergenceWarning",
    "sklearn.linear_model.Lasso",
    "sklearn.utils._testing.assert_warns"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sparse_coordinate_descent.test_sparse_enet_not_as_toy_dataset": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "sklearn.linear_model.tests.test_sparse_coordinate_descent._test_sparse_enet_not_as_toy_dataset"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sparse_coordinate_descent.test_sparse_lasso_not_as_toy_dataset": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "numpy.sum",
    "sklearn.linear_model.Lasso",
    "sklearn.linear_model.tests.test_sparse_coordinate_descent.make_sparse_data",
    "sklearn.utils._testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_theil_sen": {
  "data": {},
  "type": "module"
 },
 "sklearn.linear_model.tests.test_theil_sen.ConvergenceWarning": {
  "data": {
   "shadows": "sklearn.exceptions.ConvergenceWarning"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_theil_sen.LinearRegression": {
  "data": {
   "shadows": "sklearn.linear_model.LinearRegression"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_theil_sen.TheilSenRegressor": {
  "data": {
   "shadows": "sklearn.linear_model.TheilSenRegressor"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_theil_sen._breakdown_point": {
  "data": {
   "shadows": "sklearn.linear_model._theil_sen._breakdown_point"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_theil_sen._modified_weiszfeld_step": {
  "data": {
   "shadows": "sklearn.linear_model._theil_sen._modified_weiszfeld_step"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_theil_sen._spatial_median": {
  "data": {
   "shadows": "sklearn.linear_model._theil_sen._spatial_median"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_theil_sen.assert_almost_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_almost_equal"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_theil_sen.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_theil_sen.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_theil_sen.assert_array_less": {
  "data": {
   "shadows": "numpy.testing.assert_array_less"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_theil_sen.assert_raises": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_theil_sen.assert_warns": {
  "data": {
   "shadows": "numpy.testing.assert_warns"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_theil_sen.contextmanager": {
  "data": {
   "shadows": "contextlib.contextmanager"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_theil_sen.fmin_bfgs": {
  "data": {
   "shadows": "scipy.optimize.fmin_bfgs"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_theil_sen.gen_toy_problem_1d": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "numpy.newaxis",
    "numpy.random.RandomState"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_theil_sen.gen_toy_problem_2d": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.dot",
    "numpy.random.RandomState"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_theil_sen.gen_toy_problem_4d": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.dot",
    "numpy.random.RandomState"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_theil_sen.no_stdout_stderr": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "contextlib.contextmanager",
    "open",
    "sklearn.linear_model.tests.test_theil_sen.os",
    "sklearn.linear_model.tests.test_theil_sen.sys"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_theil_sen.norm": {
  "data": {
   "shadows": "scipy.linalg.norm"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_theil_sen.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_theil_sen.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_theil_sen.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_theil_sen.test_calc_breakdown_point": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.sqrt",
    "sklearn.linear_model._theil_sen._breakdown_point"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_theil_sen.test_checksubparams_n_subsamples_if_less_samples_than_features": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "ValueError",
    "numpy.random.RandomState",
    "sklearn.linear_model.TheilSenRegressor",
    "sklearn.utils._testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_theil_sen.test_checksubparams_negative_subpopulation": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.linear_model.TheilSenRegressor",
    "sklearn.linear_model.tests.test_theil_sen.gen_toy_problem_1d",
    "sklearn.utils._testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_theil_sen.test_checksubparams_too_few_subsamples": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.linear_model.TheilSenRegressor",
    "sklearn.linear_model.tests.test_theil_sen.gen_toy_problem_1d",
    "sklearn.utils._testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_theil_sen.test_checksubparams_too_many_subsamples": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.linear_model.TheilSenRegressor",
    "sklearn.linear_model.tests.test_theil_sen.gen_toy_problem_1d",
    "sklearn.utils._testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_theil_sen.test_less_samples_than_features": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "numpy.testing.assert_array_almost_equal",
    "sklearn.linear_model.LinearRegression",
    "sklearn.linear_model.TheilSenRegressor"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_theil_sen.test_modweiszfeld_step_1d": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_array_less",
    "sklearn.linear_model._theil_sen._modified_weiszfeld_step"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_theil_sen.test_modweiszfeld_step_2d": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.assert_array_almost_equal",
    "sklearn.linear_model._theil_sen._modified_weiszfeld_step"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_theil_sen.test_spatial_median_1d": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.median",
    "numpy.random.RandomState",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_array_equal",
    "sklearn.linear_model._theil_sen._spatial_median"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_theil_sen.test_spatial_median_2d": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_warns",
    "scipy.optimize.fmin_bfgs",
    "sklearn.exceptions.ConvergenceWarning",
    "sklearn.linear_model._theil_sen._spatial_median"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_theil_sen.test_spatial_median_2d.cost_func": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.sum",
    "scipy.linalg.norm"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_theil_sen.test_subpopulation": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "numpy.testing.assert_array_almost_equal",
    "sklearn.linear_model.TheilSenRegressor",
    "sklearn.linear_model.tests.test_theil_sen.gen_toy_problem_4d"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_theil_sen.test_subsamples": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "numpy.testing.assert_array_almost_equal",
    "sklearn.linear_model.LinearRegression",
    "sklearn.linear_model.TheilSenRegressor",
    "sklearn.linear_model.tests.test_theil_sen.gen_toy_problem_4d"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_theil_sen.test_theil_sen_1d": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.testing.assert_array_almost_equal",
    "sklearn.linear_model.LinearRegression",
    "sklearn.linear_model.TheilSenRegressor",
    "sklearn.linear_model.tests.test_theil_sen.gen_toy_problem_1d"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_theil_sen.test_theil_sen_1d_no_intercept": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.testing.assert_array_almost_equal",
    "sklearn.linear_model.LinearRegression",
    "sklearn.linear_model.TheilSenRegressor",
    "sklearn.linear_model.tests.test_theil_sen.gen_toy_problem_1d",
    "sklearn.utils._testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_theil_sen.test_theil_sen_2d": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "numpy.testing.assert_array_almost_equal",
    "scipy.linalg.norm",
    "sklearn.linear_model.LinearRegression",
    "sklearn.linear_model.TheilSenRegressor",
    "sklearn.linear_model.tests.test_theil_sen.gen_toy_problem_2d"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_theil_sen.test_theil_sen_parallel": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "numpy.testing.assert_array_almost_equal",
    "scipy.linalg.norm",
    "sklearn.linear_model.LinearRegression",
    "sklearn.linear_model.TheilSenRegressor",
    "sklearn.linear_model.tests.test_theil_sen.gen_toy_problem_2d"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_theil_sen.test_verbosity": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "sklearn.linear_model.TheilSenRegressor",
    "sklearn.linear_model.tests.test_theil_sen.gen_toy_problem_1d",
    "sklearn.linear_model.tests.test_theil_sen.no_stdout_stderr"
   ]
  },
  "type": "function"
 },
 "sklearn.logger": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "sklearn.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "sklearn.manifold": {
  "data": {},
  "type": "module"
 },
 "sklearn.manifold.__all__": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "sklearn.manifold._isomap": {
  "data": {},
  "type": "module"
 },
 "sklearn.manifold._isomap.Isomap": {
  "data": {
   "lineno": 16
  },
  "type": "class"
 },
 "sklearn.manifold._isomap.Isomap.__init__": {
  "data": {
   "lineno": 126
  },
  "type": "function"
 },
 "sklearn.manifold._isomap.Isomap._fit_transform": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "KernelPCA",
    "NearestNeighbors",
    "graph_shortest_path",
    "kneighbors_graph"
   ]
  },
  "type": "function"
 },
 "sklearn.manifold._isomap.Isomap.fit": {
  "data": {
   "lineno": 195
  },
  "type": "function"
 },
 "sklearn.manifold._isomap.Isomap.fit_transform": {
  "data": {
   "lineno": 214
  },
  "type": "function"
 },
 "sklearn.manifold._isomap.Isomap.reconstruction_error": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "KernelCenterer",
    "numpy.sqrt",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "sklearn.manifold._isomap.Isomap.transform": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "check_is_fitted",
    "numpy.min",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "sklearn.manifold._isomap.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.manifold._locally_linear": {
  "data": {},
  "type": "module"
 },
 "sklearn.manifold._locally_linear.LocallyLinearEmbedding": {
  "data": {
   "lineno": 525
  },
  "type": "class"
 },
 "sklearn.manifold._locally_linear.LocallyLinearEmbedding.__init__": {
  "data": {
   "lineno": 639
  },
  "type": "function"
 },
 "sklearn.manifold._locally_linear.LocallyLinearEmbedding._fit_transform": {
  "data": {
   "lineno": 657,
   "symbols_in_volume": [
    "NearestNeighbors",
    "check_random_state",
    "float",
    "sklearn.manifold._locally_linear.locally_linear_embedding"
   ]
  },
  "type": "function"
 },
 "sklearn.manifold._locally_linear.LocallyLinearEmbedding.fit": {
  "data": {
   "lineno": 674
  },
  "type": "function"
 },
 "sklearn.manifold._locally_linear.LocallyLinearEmbedding.fit_transform": {
  "data": {
   "lineno": 691
  },
  "type": "function"
 },
 "sklearn.manifold._locally_linear.LocallyLinearEmbedding.transform": {
  "data": {
   "lineno": 708,
   "symbols_in_volume": [
    "check_array",
    "check_is_fitted",
    "numpy.dot",
    "numpy.empty",
    "range",
    "sklearn.manifold._locally_linear.barycenter_weights"
   ]
  },
  "type": "function"
 },
 "sklearn.manifold._locally_linear.barycenter_kneighbors_graph": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "NearestNeighbors",
    "numpy.arange",
    "scipy.sparse.csr_matrix",
    "sklearn.manifold._locally_linear.barycenter_weights"
   ]
  },
  "type": "function"
 },
 "sklearn.manifold._locally_linear.barycenter_weights": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "check_array",
    "enumerate",
    "int",
    "numpy.dot",
    "numpy.empty",
    "numpy.ones",
    "numpy.sum",
    "numpy.trace",
    "scipy.linalg.solve"
   ]
  },
  "type": "function"
 },
 "sklearn.manifold._locally_linear.csr_matrix": {
  "data": {
   "shadows": "scipy.sparse.csr_matrix"
  },
  "type": "import"
 },
 "sklearn.manifold._locally_linear.eigh": {
  "data": {
   "shadows": "scipy.linalg.eigh"
  },
  "type": "import"
 },
 "sklearn.manifold._locally_linear.eigsh": {
  "data": {
   "shadows": "scipy.sparse.linalg.eigsh"
  },
  "type": "import"
 },
 "sklearn.manifold._locally_linear.eye": {
  "data": {
   "shadows": "scipy.sparse.eye"
  },
  "type": "import"
 },
 "sklearn.manifold._locally_linear.locally_linear_embedding": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "NearestNeighbors",
    "ValueError",
    "abs",
    "int",
    "min",
    "numpy.dot",
    "numpy.empty",
    "numpy.float64",
    "numpy.full",
    "numpy.linalg.norm",
    "numpy.median",
    "numpy.meshgrid",
    "numpy.ones",
    "numpy.outer",
    "numpy.searchsorted",
    "numpy.sqrt",
    "numpy.where",
    "numpy.zeros",
    "range",
    "scipy.linalg.eigh",
    "scipy.linalg.qr",
    "scipy.linalg.svd",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.eye",
    "sklearn.manifold._locally_linear.barycenter_kneighbors_graph",
    "sklearn.manifold._locally_linear.null_space",
    "stable_cumsum"
   ]
  },
  "type": "function"
 },
 "sklearn.manifold._locally_linear.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.manifold._locally_linear.null_space": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "_init_arpack_v0",
    "hasattr",
    "numpy.abs",
    "numpy.argsort",
    "numpy.sum",
    "scipy.linalg.eigh",
    "scipy.sparse.linalg.eigsh"
   ]
  },
  "type": "function"
 },
 "sklearn.manifold._locally_linear.qr": {
  "data": {
   "shadows": "scipy.linalg.qr"
  },
  "type": "import"
 },
 "sklearn.manifold._locally_linear.solve": {
  "data": {
   "shadows": "scipy.linalg.solve"
  },
  "type": "import"
 },
 "sklearn.manifold._locally_linear.svd": {
  "data": {
   "shadows": "scipy.linalg.svd"
  },
  "type": "import"
 },
 "sklearn.manifold._mds": {
  "data": {},
  "type": "module"
 },
 "sklearn.manifold._mds.MDS": {
  "data": {
   "lineno": 279
  },
  "type": "class"
 },
 "sklearn.manifold._mds.MDS.__init__": {
  "data": {
   "lineno": 375
  },
  "type": "function"
 },
 "sklearn.manifold._mds.MDS._more_tags": {
  "data": {
   "lineno": 389
  },
  "type": "function"
 },
 "sklearn.manifold._mds.MDS._pairwise": {
  "data": {
   "lineno": 394,
   "symbols_in_volume": [
    "deprecated",
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.manifold._mds.MDS.fit": {
  "data": {
   "lineno": 400
  },
  "type": "function"
 },
 "sklearn.manifold._mds.MDS.fit_transform": {
  "data": {
   "lineno": 421,
   "symbols_in_volume": [
    "ValueError",
    "euclidean_distances",
    "sklearn.manifold._mds.smacof",
    "sklearn.manifold._mds.warnings",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.manifold._mds.Parallel": {
  "data": {
   "shadows": "joblib.Parallel"
  },
  "type": "import"
 },
 "sklearn.manifold._mds._smacof_single": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "IsotonicRegression",
    "ValueError",
    "check_random_state",
    "check_symmetric",
    "euclidean_distances",
    "len",
    "numpy.arange",
    "numpy.dot",
    "numpy.sqrt",
    "numpy.tri",
    "print",
    "range"
   ]
  },
  "type": "function"
 },
 "sklearn.manifold._mds.effective_n_jobs": {
  "data": {
   "shadows": "joblib.effective_n_jobs"
  },
  "type": "import"
 },
 "sklearn.manifold._mds.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.manifold._mds.smacof": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "check_array",
    "check_random_state",
    "delayed",
    "hasattr",
    "joblib.Parallel",
    "joblib.effective_n_jobs",
    "max",
    "numpy.argmin",
    "numpy.asarray",
    "numpy.iinfo",
    "numpy.int32",
    "range",
    "sklearn.manifold._mds._smacof_single",
    "sklearn.manifold._mds.warnings",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.manifold._mds.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.manifold._spectral_embedding": {
  "data": {},
  "type": "module"
 },
 "sklearn.manifold._spectral_embedding.SpectralEmbedding": {
  "data": {
   "lineno": 363
  },
  "type": "class"
 },
 "sklearn.manifold._spectral_embedding.SpectralEmbedding.__init__": {
  "data": {
   "lineno": 459
  },
  "type": "function"
 },
 "sklearn.manifold._spectral_embedding.SpectralEmbedding._get_affinity_matrix": {
  "data": {
   "lineno": 484,
   "symbols_in_volume": [
    "NearestNeighbors",
    "int",
    "kneighbors_graph",
    "max",
    "rbf_kernel",
    "scipy.sparse.issparse",
    "sklearn.manifold._spectral_embedding.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.manifold._spectral_embedding.SpectralEmbedding._more_tags": {
  "data": {
   "lineno": 471
  },
  "type": "function"
 },
 "sklearn.manifold._spectral_embedding.SpectralEmbedding._pairwise": {
  "data": {
   "lineno": 477,
   "symbols_in_volume": [
    "deprecated",
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.manifold._spectral_embedding.SpectralEmbedding.fit": {
  "data": {
   "lineno": 538,
   "symbols_in_volume": [
    "ValueError",
    "callable",
    "check_random_state",
    "isinstance",
    "sklearn.manifold._spectral_embedding.spectral_embedding",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.manifold._spectral_embedding.SpectralEmbedding.fit_transform": {
  "data": {
   "lineno": 581
  },
  "type": "function"
 },
 "sklearn.manifold._spectral_embedding._graph_connected_component": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "bool",
    "numpy.logical_or",
    "numpy.where",
    "numpy.zeros",
    "range",
    "scipy.sparse.issparse"
   ]
  },
  "type": "function"
 },
 "sklearn.manifold._spectral_embedding._graph_is_connected": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "scipy.sparse.csgraph.connected_components",
    "scipy.sparse.isspmatrix",
    "sklearn.manifold._spectral_embedding._graph_connected_component"
   ]
  },
  "type": "function"
 },
 "sklearn.manifold._spectral_embedding._set_diag": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "numpy.unique",
    "scipy.sparse.csgraph.laplacian",
    "scipy.sparse.csgraph.laplacian.col",
    "scipy.sparse.csgraph.laplacian.data",
    "scipy.sparse.csgraph.laplacian.flat",
    "scipy.sparse.csgraph.laplacian.row",
    "scipy.sparse.csgraph.laplacian.shape",
    "scipy.sparse.csgraph.laplacian.tocoo",
    "scipy.sparse.csgraph.laplacian.tocsr",
    "scipy.sparse.csgraph.laplacian.todia",
    "scipy.sparse.isspmatrix"
   ]
  },
  "type": "function"
 },
 "sklearn.manifold._spectral_embedding.connected_components": {
  "data": {
   "shadows": "scipy.sparse.csgraph.connected_components"
  },
  "type": "import"
 },
 "sklearn.manifold._spectral_embedding.csgraph_laplacian": {
  "data": {
   "shadows": "scipy.sparse.csgraph.laplacian"
  },
  "type": "import"
 },
 "sklearn.manifold._spectral_embedding.eigh": {
  "data": {
   "shadows": "scipy.linalg.eigh"
  },
  "type": "import"
 },
 "sklearn.manifold._spectral_embedding.eigsh": {
  "data": {
   "shadows": "scipy.sparse.linalg.eigsh"
  },
  "type": "import"
 },
 "sklearn.manifold._spectral_embedding.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.manifold._spectral_embedding.smoothed_aggregation_solver": {
  "data": {
   "shadows": "pyamg.smoothed_aggregation_solver"
  },
  "type": "import"
 },
 "sklearn.manifold._spectral_embedding.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.manifold._spectral_embedding.spectral_embedding": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "ImportError",
    "RuntimeError",
    "ValueError",
    "_deterministic_vector_sign_flip",
    "_init_arpack_v0",
    "check_array",
    "check_random_state",
    "check_symmetric",
    "lobpcg",
    "numpy.float64",
    "pyamg.smoothed_aggregation_solver",
    "scipy.linalg.eigh",
    "scipy.sparse.csgraph.laplacian",
    "scipy.sparse.csgraph.laplacian.shape",
    "scipy.sparse.csgraph.laplacian.toarray",
    "scipy.sparse.eye",
    "scipy.sparse.issparse",
    "scipy.sparse.isspmatrix",
    "scipy.sparse.linalg.eigsh",
    "sklearn.manifold._spectral_embedding._graph_is_connected",
    "sklearn.manifold._spectral_embedding._set_diag",
    "sklearn.manifold._spectral_embedding.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.manifold._spectral_embedding.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.manifold._t_sne": {
  "data": {
   "symbols_in_volume": [
    "numpy.double",
    "numpy.finfo"
   ]
  },
  "type": "module"
 },
 "sklearn.manifold._t_sne.MACHINE_EPSILON": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "sklearn.manifold._t_sne.TSNE": {
  "data": {
   "lineno": 480
  },
  "type": "class"
 },
 "sklearn.manifold._t_sne.TSNE.__init__": {
  "data": {
   "lineno": 657
  },
  "type": "function"
 },
 "sklearn.manifold._t_sne.TSNE._fit": {
  "data": {
   "lineno": 681,
   "symbols_in_volume": [
    "FutureWarning",
    "NearestNeighbors",
    "PCA",
    "TypeError",
    "ValueError",
    "check_non_negative",
    "check_random_state",
    "int",
    "isinstance",
    "max",
    "min",
    "numpy.all",
    "numpy.any",
    "numpy.float32",
    "numpy.float64",
    "numpy.isfinite",
    "numpy.ndarray",
    "pairwise_distances",
    "print",
    "scipy.sparse.issparse",
    "sklearn.manifold._t_sne._joint_probabilities",
    "sklearn.manifold._t_sne._joint_probabilities_nn",
    "sklearn.manifold._t_sne.warnings",
    "str",
    "time.time"
   ]
  },
  "type": "function"
 },
 "sklearn.manifold._t_sne.TSNE._tsne": {
  "data": {
   "lineno": 846,
   "symbols_in_volume": [
    "_openmp_effective_n_threads",
    "dict",
    "print",
    "sklearn.manifold._t_sne._gradient_descent",
    "sklearn.manifold._t_sne._kl_divergence",
    "sklearn.manifold._t_sne._kl_divergence_bh"
   ]
  },
  "type": "function"
 },
 "sklearn.manifold._t_sne.TSNE.fit": {
  "data": {
   "lineno": 936
  },
  "type": "function"
 },
 "sklearn.manifold._t_sne.TSNE.fit_transform": {
  "data": {
   "lineno": 912
  },
  "type": "function"
 },
 "sklearn.manifold._t_sne._gradient_descent": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "float",
    "numpy.clip",
    "numpy.finfo",
    "numpy.inf",
    "numpy.invert",
    "numpy.ones_like",
    "numpy.zeros_like",
    "objective",
    "print",
    "range",
    "scipy.linalg.norm",
    "time.time"
   ]
  },
  "type": "function"
 },
 "sklearn.manifold._t_sne._joint_probabilities": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.maximum",
    "numpy.sum",
    "scipy.spatial.distance.squareform",
    "sklearn.manifold._t_sne.MACHINE_EPSILON"
   ]
  },
  "type": "function"
 },
 "sklearn.manifold._t_sne._joint_probabilities_nn": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.all",
    "numpy.float32",
    "numpy.isfinite",
    "numpy.maximum",
    "print",
    "scipy.sparse.csr_matrix",
    "sklearn.manifold._t_sne.MACHINE_EPSILON",
    "time.time"
   ]
  },
  "type": "function"
 },
 "sklearn.manifold._t_sne._kl_divergence": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.log",
    "numpy.maximum",
    "numpy.nan",
    "numpy.ndarray",
    "numpy.ravel",
    "numpy.sum",
    "range",
    "scipy.spatial.distance.pdist",
    "scipy.spatial.distance.squareform",
    "sklearn.manifold._t_sne.MACHINE_EPSILON"
   ]
  },
  "type": "function"
 },
 "sklearn.manifold._t_sne._kl_divergence_bh": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.int64",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "sklearn.manifold._t_sne.csr_matrix": {
  "data": {
   "shadows": "scipy.sparse.csr_matrix"
  },
  "type": "import"
 },
 "sklearn.manifold._t_sne.issparse": {
  "data": {
   "shadows": "scipy.sparse.issparse"
  },
  "type": "import"
 },
 "sklearn.manifold._t_sne.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "sklearn.manifold._t_sne.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.manifold._t_sne.pdist": {
  "data": {
   "shadows": "scipy.spatial.distance.pdist"
  },
  "type": "import"
 },
 "sklearn.manifold._t_sne.squareform": {
  "data": {
   "shadows": "scipy.spatial.distance.squareform"
  },
  "type": "import"
 },
 "sklearn.manifold._t_sne.time": {
  "data": {
   "shadows": "time.time"
  },
  "type": "import"
 },
 "sklearn.manifold._t_sne.trustworthiness": {
  "data": {
   "lineno": 404,
   "symbols_in_volume": [
    "NearestNeighbors",
    "int",
    "numpy.arange",
    "numpy.argsort",
    "numpy.fill_diagonal",
    "numpy.inf",
    "numpy.newaxis",
    "numpy.sum",
    "numpy.zeros",
    "pairwise_distances"
   ]
  },
  "type": "function"
 },
 "sklearn.manifold._t_sne.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.manifold.setup": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.distutils.core.setup",
    "sklearn.manifold.setup.configuration"
   ]
  },
  "type": "module"
 },
 "sklearn.manifold.setup.Configuration": {
  "data": {
   "shadows": "numpy.distutils.misc_util.Configuration"
  },
  "type": "import"
 },
 "sklearn.manifold.setup.configuration": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "numpy.distutils.misc_util.Configuration",
    "sklearn.manifold.setup.numpy",
    "sklearn.manifold.setup.os"
   ]
  },
  "type": "function"
 },
 "sklearn.manifold.setup.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.manifold.setup.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "sklearn.manifold.setup.setup": {
  "data": {
   "shadows": "numpy.distutils.core.setup"
  },
  "type": "import"
 },
 "sklearn.manifold.tests": {
  "data": {},
  "type": "module"
 },
 "sklearn.manifold.tests.test_isomap": {
  "data": {},
  "type": "module"
 },
 "sklearn.manifold.tests.test_isomap.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "sklearn.manifold.tests.test_isomap.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.manifold.tests.test_isomap.datasets": {
  "data": {
   "shadows": "sklearn.datasets"
  },
  "type": "import"
 },
 "sklearn.manifold.tests.test_isomap.eigen_solvers": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "sklearn.manifold.tests.test_isomap.manifold": {
  "data": {
   "shadows": "sklearn.manifold"
  },
  "type": "import"
 },
 "sklearn.manifold.tests.test_isomap.neighbors": {
  "data": {
   "shadows": "sklearn.neighbors"
  },
  "type": "import"
 },
 "sklearn.manifold.tests.test_isomap.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.manifold.tests.test_isomap.path_methods": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "sklearn.manifold.tests.test_isomap.pipeline": {
  "data": {
   "shadows": "sklearn.pipeline"
  },
  "type": "import"
 },
 "sklearn.manifold.tests.test_isomap.preprocessing": {
  "data": {
   "shadows": "sklearn.preprocessing"
  },
  "type": "import"
 },
 "sklearn.manifold.tests.test_isomap.product": {
  "data": {
   "shadows": "itertools.product"
  },
  "type": "import"
 },
 "sklearn.manifold.tests.test_isomap.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.manifold.tests.test_isomap.sparse_rand": {
  "data": {
   "shadows": "scipy.sparse.rand"
  },
  "type": "import"
 },
 "sklearn.manifold.tests.test_isomap.test_different_metric": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "AssertionError",
    "numpy.testing.assert_array_almost_equal",
    "sklearn.datasets.make_blobs",
    "sklearn.manifold.Isomap",
    "sklearn.manifold.tests.test_isomap.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.manifold.tests.test_isomap.test_different_metric.custom_metric": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "numpy.sqrt",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "sklearn.manifold.tests.test_isomap.test_isomap_clone_bug": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "numpy.random.rand",
    "sklearn.manifold.Isomap"
   ]
  },
  "type": "function"
 },
 "sklearn.manifold.tests.test_isomap.test_isomap_reconstruction_error": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "itertools.product",
    "list",
    "numpy.array",
    "numpy.concatenate",
    "numpy.linalg.norm",
    "numpy.random.RandomState",
    "numpy.testing.assert_almost_equal",
    "range",
    "sklearn.manifold.Isomap",
    "sklearn.manifold.tests.test_isomap.eigen_solvers",
    "sklearn.manifold.tests.test_isomap.path_methods",
    "sklearn.neighbors.kneighbors_graph",
    "sklearn.preprocessing.KernelCenterer"
   ]
  },
  "type": "function"
 },
 "sklearn.manifold.tests.test_isomap.test_isomap_simple_grid": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "itertools.product",
    "list",
    "numpy.array",
    "numpy.testing.assert_array_almost_equal",
    "range",
    "sklearn.manifold.Isomap",
    "sklearn.manifold.tests.test_isomap.eigen_solvers",
    "sklearn.manifold.tests.test_isomap.path_methods",
    "sklearn.neighbors.kneighbors_graph"
   ]
  },
  "type": "function"
 },
 "sklearn.manifold.tests.test_isomap.test_pipeline": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "sklearn.datasets.make_blobs",
    "sklearn.manifold.Isomap",
    "sklearn.neighbors.KNeighborsClassifier",
    "sklearn.pipeline.Pipeline"
   ]
  },
  "type": "function"
 },
 "sklearn.manifold.tests.test_isomap.test_pipeline_with_nearest_neighbors_transformer": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "numpy.testing.assert_array_almost_equal",
    "sklearn.datasets.make_blobs",
    "sklearn.manifold.Isomap",
    "sklearn.neighbors.KNeighborsTransformer",
    "sklearn.pipeline.make_pipeline"
   ]
  },
  "type": "function"
 },
 "sklearn.manifold.tests.test_isomap.test_sparse_input": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "scipy.sparse.rand",
    "sklearn.manifold.Isomap",
    "sklearn.manifold.tests.test_isomap.eigen_solvers",
    "sklearn.manifold.tests.test_isomap.path_methods"
   ]
  },
  "type": "function"
 },
 "sklearn.manifold.tests.test_isomap.test_transform": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "numpy.mean",
    "numpy.random.RandomState",
    "numpy.sqrt",
    "sklearn.datasets.make_s_curve",
    "sklearn.manifold.Isomap"
   ]
  },
  "type": "function"
 },
 "sklearn.manifold.tests.test_locally_linear": {
  "data": {},
  "type": "module"
 },
 "sklearn.manifold.tests.test_locally_linear.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "sklearn.manifold.tests.test_locally_linear.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.manifold.tests.test_locally_linear.assert_raise_message": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_raise_message"
  },
  "type": "import"
 },
 "sklearn.manifold.tests.test_locally_linear.barycenter_kneighbors_graph": {
  "data": {
   "shadows": "sklearn.manifold._locally_linear.barycenter_kneighbors_graph"
  },
  "type": "import"
 },
 "sklearn.manifold.tests.test_locally_linear.datasets": {
  "data": {
   "shadows": "sklearn.datasets"
  },
  "type": "import"
 },
 "sklearn.manifold.tests.test_locally_linear.eigen_solvers": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "sklearn.manifold.tests.test_locally_linear.ignore_warnings": {
  "data": {
   "shadows": "sklearn.utils._testing.ignore_warnings"
  },
  "type": "import"
 },
 "sklearn.manifold.tests.test_locally_linear.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "sklearn.manifold.tests.test_locally_linear.manifold": {
  "data": {
   "shadows": "sklearn.manifold"
  },
  "type": "import"
 },
 "sklearn.manifold.tests.test_locally_linear.neighbors": {
  "data": {
   "shadows": "sklearn.neighbors"
  },
  "type": "import"
 },
 "sklearn.manifold.tests.test_locally_linear.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.manifold.tests.test_locally_linear.pipeline": {
  "data": {
   "shadows": "sklearn.pipeline"
  },
  "type": "import"
 },
 "sklearn.manifold.tests.test_locally_linear.product": {
  "data": {
   "shadows": "itertools.product"
  },
  "type": "import"
 },
 "sklearn.manifold.tests.test_locally_linear.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.manifold.tests.test_locally_linear.test_barycenter_kneighbors_graph": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.dot",
    "numpy.ones",
    "numpy.sum",
    "numpy.testing.assert_array_almost_equal",
    "scipy.linalg.norm",
    "sklearn.manifold._locally_linear.barycenter_kneighbors_graph"
   ]
  },
  "type": "function"
 },
 "sklearn.manifold.tests.test_locally_linear.test_integer_input": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.manifold.LocallyLinearEmbedding"
   ]
  },
  "type": "function"
 },
 "sklearn.manifold.tests.test_locally_linear.test_lle_init_parameters": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "ValueError",
    "numpy.random.rand",
    "sklearn.manifold.LocallyLinearEmbedding",
    "sklearn.utils._testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.manifold.tests.test_locally_linear.test_lle_manifold": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "itertools.product",
    "list",
    "numpy.abs",
    "numpy.arange",
    "numpy.array",
    "numpy.c_",
    "numpy.dot",
    "numpy.random.RandomState",
    "scipy.linalg.norm",
    "sklearn.manifold.LocallyLinearEmbedding",
    "sklearn.manifold._locally_linear.barycenter_kneighbors_graph",
    "sklearn.manifold.tests.test_locally_linear.eigen_solvers"
   ]
  },
  "type": "function"
 },
 "sklearn.manifold.tests.test_locally_linear.test_lle_simple_grid": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "itertools.product",
    "list",
    "numpy.array",
    "numpy.dot",
    "numpy.random.RandomState",
    "numpy.testing.assert_almost_equal",
    "range",
    "scipy.linalg.norm",
    "sklearn.manifold.LocallyLinearEmbedding",
    "sklearn.manifold._locally_linear.barycenter_kneighbors_graph",
    "sklearn.manifold.tests.test_locally_linear.eigen_solvers"
   ]
  },
  "type": "function"
 },
 "sklearn.manifold.tests.test_locally_linear.test_pipeline": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "sklearn.datasets.make_blobs",
    "sklearn.manifold.LocallyLinearEmbedding",
    "sklearn.neighbors.KNeighborsClassifier",
    "sklearn.pipeline.Pipeline"
   ]
  },
  "type": "function"
 },
 "sklearn.manifold.tests.test_locally_linear.test_singular_matrix": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "ValueError",
    "f",
    "numpy.ones",
    "sklearn.manifold.locally_linear_embedding",
    "sklearn.manifold.tests.test_locally_linear.pytest",
    "sklearn.utils._testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.manifold.tests.test_mds": {
  "data": {},
  "type": "module"
 },
 "sklearn.manifold.tests.test_mds.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.manifold.tests.test_mds.ignore_warnings": {
  "data": {
   "shadows": "sklearn.utils._testing.ignore_warnings"
  },
  "type": "import"
 },
 "sklearn.manifold.tests.test_mds.mds": {
  "data": {
   "shadows": "sklearn.manifold._mds"
  },
  "type": "import"
 },
 "sklearn.manifold.tests.test_mds.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.manifold.tests.test_mds.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.manifold.tests.test_mds.test_MDS": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.manifold._mds.MDS"
   ]
  },
  "type": "function"
 },
 "sklearn.manifold.tests.test_mds.test_MDS_pairwise": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "FutureWarning",
    "sklearn.manifold._mds.MDS",
    "sklearn.manifold.tests.test_mds.pytest",
    "sklearn.utils._testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.manifold.tests.test_mds.test_MDS_pairwise_deprecated": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "FutureWarning",
    "sklearn.manifold._mds.MDS",
    "sklearn.manifold.tests.test_mds.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.manifold.tests.test_mds.test_smacof": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.assert_array_almost_equal",
    "sklearn.manifold._mds.smacof"
   ]
  },
  "type": "function"
 },
 "sklearn.manifold.tests.test_mds.test_smacof_error": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "sklearn.manifold._mds.smacof",
    "sklearn.manifold.tests.test_mds.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.manifold.tests.test_spectral_embedding": {
  "data": {
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.datasets.make_blobs",
    "sklearn.manifold.tests.test_spectral_embedding.centers",
    "sklearn.manifold.tests.test_spectral_embedding.n_samples"
   ]
  },
  "type": "module"
 },
 "sklearn.manifold.tests.test_spectral_embedding.KMeans": {
  "data": {
   "shadows": "sklearn.cluster.KMeans"
  },
  "type": "import"
 },
 "sklearn.manifold.tests.test_spectral_embedding.NearestNeighbors": {
  "data": {
   "shadows": "sklearn.neighbors.NearestNeighbors"
  },
  "type": "import"
 },
 "sklearn.manifold.tests.test_spectral_embedding.SpectralEmbedding": {
  "data": {
   "shadows": "sklearn.manifold.SpectralEmbedding"
  },
  "type": "import"
 },
 "sklearn.manifold.tests.test_spectral_embedding._assert_equal_with_sign_flipping": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "numpy.max",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.manifold.tests.test_spectral_embedding._deterministic_vector_sign_flip": {
  "data": {
   "shadows": "sklearn.utils.extmath._deterministic_vector_sign_flip"
  },
  "type": "import"
 },
 "sklearn.manifold.tests.test_spectral_embedding._graph_connected_component": {
  "data": {
   "shadows": "sklearn.manifold._spectral_embedding._graph_connected_component"
  },
  "type": "import"
 },
 "sklearn.manifold.tests.test_spectral_embedding._graph_is_connected": {
  "data": {
   "shadows": "sklearn.manifold._spectral_embedding._graph_is_connected"
  },
  "type": "import"
 },
 "sklearn.manifold.tests.test_spectral_embedding.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.manifold.tests.test_spectral_embedding.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.manifold.tests.test_spectral_embedding.centers": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "sklearn.manifold.tests.test_spectral_embedding.csgraph": {
  "data": {
   "shadows": "scipy.sparse.csgraph"
  },
  "type": "import"
 },
 "sklearn.manifold.tests.test_spectral_embedding.eigh": {
  "data": {
   "shadows": "scipy.linalg.eigh"
  },
  "type": "import"
 },
 "sklearn.manifold.tests.test_spectral_embedding.make_blobs": {
  "data": {
   "shadows": "sklearn.datasets.make_blobs"
  },
  "type": "import"
 },
 "sklearn.manifold.tests.test_spectral_embedding.n_samples": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "sklearn.manifold.tests.test_spectral_embedding.normalized_mutual_info_score": {
  "data": {
   "shadows": "sklearn.metrics.normalized_mutual_info_score"
  },
  "type": "import"
 },
 "sklearn.manifold.tests.test_spectral_embedding.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.manifold.tests.test_spectral_embedding.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.manifold.tests.test_spectral_embedding.rbf_kernel": {
  "data": {
   "shadows": "sklearn.metrics.pairwise.rbf_kernel"
  },
  "type": "import"
 },
 "sklearn.manifold.tests.test_spectral_embedding.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.manifold.tests.test_spectral_embedding.spectral_embedding": {
  "data": {
   "shadows": "sklearn.manifold.spectral_embedding"
  },
  "type": "import"
 },
 "sklearn.manifold.tests.test_spectral_embedding.test_connectivity": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": [
    "numpy.array",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "sklearn.manifold._spectral_embedding._graph_is_connected"
   ]
  },
  "type": "function"
 },
 "sklearn.manifold.tests.test_spectral_embedding.test_pipeline_spectral_clustering": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.cluster.KMeans",
    "sklearn.manifold.SpectralEmbedding",
    "sklearn.manifold.tests.test_spectral_embedding.pytest",
    "sklearn.metrics.normalized_mutual_info_score",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.manifold.tests.test_spectral_embedding.test_precomputed_nearest_neighbors_filtering": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "sklearn.manifold.SpectralEmbedding",
    "sklearn.neighbors.NearestNeighbors",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.manifold.tests.test_spectral_embedding.test_sparse_graph_connected_component": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "numpy.random.RandomState",
    "range",
    "scipy.sparse.coo_matrix",
    "sklearn.manifold._spectral_embedding._graph_connected_component",
    "sklearn.manifold.tests.test_spectral_embedding.n_samples",
    "sklearn.utils._testing.assert_array_equal",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.manifold.tests.test_spectral_embedding.test_spectral_embedding_amg_solver": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "scipy.sparse.coo_matrix",
    "sklearn.manifold.SpectralEmbedding",
    "sklearn.manifold.tests.test_spectral_embedding._assert_equal_with_sign_flipping",
    "sklearn.manifold.tests.test_spectral_embedding.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.manifold.tests.test_spectral_embedding.test_spectral_embedding_amg_solver_failure": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "range",
    "scipy.sparse.diags",
    "scipy.sparse.rand",
    "scipy.sparse.triu",
    "sklearn.manifold.spectral_embedding",
    "sklearn.manifold.tests.test_spectral_embedding._assert_equal_with_sign_flipping",
    "sklearn.manifold.tests.test_spectral_embedding.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.manifold.tests.test_spectral_embedding.test_spectral_embedding_callable_affinity": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "scipy.sparse.csr_matrix",
    "sklearn.manifold.SpectralEmbedding",
    "sklearn.manifold.tests.test_spectral_embedding._assert_equal_with_sign_flipping",
    "sklearn.manifold.tests.test_spectral_embedding.pytest",
    "sklearn.metrics.pairwise.rbf_kernel",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.manifold.tests.test_spectral_embedding.test_spectral_embedding_deterministic": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.manifold.spectral_embedding",
    "sklearn.metrics.pairwise.rbf_kernel",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.manifold.tests.test_spectral_embedding.test_spectral_embedding_first_eigen_vector": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "numpy.std",
    "range",
    "sklearn.manifold.spectral_embedding",
    "sklearn.manifold.tests.test_spectral_embedding.pytest",
    "sklearn.metrics.pairwise.rbf_kernel"
   ]
  },
  "type": "function"
 },
 "sklearn.manifold.tests.test_spectral_embedding.test_spectral_embedding_pairwise_deprecated": {
  "data": {
   "lineno": 351,
   "symbols_in_volume": [
    "FutureWarning",
    "sklearn.manifold.SpectralEmbedding",
    "sklearn.manifold.tests.test_spectral_embedding.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.manifold.tests.test_spectral_embedding.test_spectral_embedding_precomputed_affinity": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "scipy.sparse.csr_matrix",
    "sklearn.manifold.SpectralEmbedding",
    "sklearn.manifold.tests.test_spectral_embedding._assert_equal_with_sign_flipping",
    "sklearn.manifold.tests.test_spectral_embedding.pytest",
    "sklearn.metrics.pairwise.rbf_kernel",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.manifold.tests.test_spectral_embedding.test_spectral_embedding_two_components": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.array",
    "numpy.float32",
    "numpy.random.RandomState",
    "numpy.zeros",
    "sklearn.manifold.SpectralEmbedding",
    "sklearn.manifold._spectral_embedding._graph_connected_component",
    "sklearn.manifold.tests.test_spectral_embedding.pytest",
    "sklearn.metrics.normalized_mutual_info_score"
   ]
  },
  "type": "function"
 },
 "sklearn.manifold.tests.test_spectral_embedding.test_spectral_embedding_unknown_affinity": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "ValueError",
    "numpy.random.RandomState",
    "sklearn.manifold.SpectralEmbedding",
    "sklearn.manifold.tests.test_spectral_embedding.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.manifold.tests.test_spectral_embedding.test_spectral_embedding_unknown_eigensolver": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "ValueError",
    "numpy.random.RandomState",
    "sklearn.manifold.SpectralEmbedding",
    "sklearn.manifold.tests.test_spectral_embedding.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.manifold.tests.test_spectral_embedding.test_spectral_embedding_unnormalized": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "scipy.linalg.eigh",
    "scipy.sparse.csgraph.laplacian",
    "sklearn.manifold.spectral_embedding",
    "sklearn.metrics.pairwise.rbf_kernel",
    "sklearn.utils._testing.assert_array_almost_equal",
    "sklearn.utils.extmath._deterministic_vector_sign_flip"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics": {
  "data": {},
  "type": "module"
 },
 "sklearn.metrics.__all__": {
  "data": {
   "lineno": 94
  },
  "type": "constant"
 },
 "sklearn.metrics._base": {
  "data": {},
  "type": "module"
 },
 "sklearn.metrics._base._average_binary_score": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "ValueError",
    "binary_metric",
    "check_array",
    "check_consistent_length",
    "numpy.asarray",
    "numpy.average",
    "numpy.isclose",
    "numpy.multiply",
    "numpy.repeat",
    "numpy.reshape",
    "numpy.sum",
    "numpy.zeros",
    "range",
    "type_of_target"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics._base._average_multiclass_ovo_score": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "binary_metric",
    "check_consistent_length",
    "enumerate",
    "itertools.combinations",
    "numpy.average",
    "numpy.empty",
    "numpy.logical_or",
    "numpy.unique"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics._base._check_pos_label_consistency": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array_equal",
    "numpy.unique",
    "repr"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics._base.combinations": {
  "data": {
   "shadows": "itertools.combinations"
  },
  "type": "import"
 },
 "sklearn.metrics._base.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.metrics._classification": {
  "data": {},
  "type": "module"
 },
 "sklearn.metrics._classification._check_set_wise_labels": {
  "data": {
   "lineno": 1264,
   "symbols_in_volume": [
    "UserWarning",
    "ValueError",
    "len",
    "list",
    "sklearn.metrics._classification._check_targets",
    "sklearn.metrics._classification.warnings",
    "str",
    "unique_labels"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics._classification._check_targets": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "check_consistent_length",
    "column_or_1d",
    "len",
    "numpy.union1d",
    "numpy.unique",
    "scipy.sparse.csr_matrix",
    "type_of_target"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics._classification._check_zero_division": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "int",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics._classification._prf_divide": {
  "data": {
   "lineno": 1203,
   "symbols_in_volume": [
    "len",
    "numpy.any",
    "sklearn.metrics._classification._warn_prf"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics._classification._warn_prf": {
  "data": {
   "lineno": 1250,
   "symbols_in_volume": [
    "sklearn.metrics._classification.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics._classification._weighted_sum": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "numpy.average",
    "numpy.dot"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics._classification.accuracy_score": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "check_consistent_length",
    "count_nonzero",
    "sklearn.metrics._classification._check_targets",
    "sklearn.metrics._classification._weighted_sum"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics._classification.balanced_accuracy_score": {
  "data": {
   "lineno": 1781,
   "symbols_in_volume": [
    "len",
    "numpy.any",
    "numpy.diag",
    "numpy.errstate",
    "numpy.isnan",
    "numpy.mean",
    "sklearn.metrics._classification.confusion_matrix",
    "sklearn.metrics._classification.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics._classification.brier_score_loss": {
  "data": {
   "lineno": 2406,
   "symbols_in_volume": [
    "ValueError",
    "_check_pos_label_consistency",
    "assert_all_finite",
    "check_consistent_length",
    "column_or_1d",
    "int",
    "numpy.array",
    "numpy.average",
    "numpy.unique",
    "type_of_target"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics._classification.classification_report": {
  "data": {
   "lineno": 1861,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "len",
    "max",
    "numpy.asarray",
    "numpy.sum",
    "set",
    "sklearn.metrics._classification._check_targets",
    "sklearn.metrics._classification.precision_recall_fscore_support",
    "sklearn.metrics._classification.warnings",
    "unique_labels",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics._classification.cohen_kappa_score": {
  "data": {
   "lineno": 560,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "numpy.abs",
    "numpy.arange",
    "numpy.ones",
    "numpy.outer",
    "numpy.sum",
    "numpy.zeros",
    "sklearn.metrics._classification.confusion_matrix"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics._classification.confusion_matrix": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "ValueError",
    "check_consistent_length",
    "enumerate",
    "int",
    "numpy.all",
    "numpy.array",
    "numpy.asarray",
    "numpy.errstate",
    "numpy.float64",
    "numpy.int64",
    "numpy.logical_and",
    "numpy.nan_to_num",
    "numpy.ones",
    "numpy.zeros",
    "scipy.sparse.coo_matrix",
    "sklearn.metrics._classification._check_targets",
    "unique_labels"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics._classification.coo_matrix": {
  "data": {
   "shadows": "scipy.sparse.coo_matrix"
  },
  "type": "import"
 },
 "sklearn.metrics._classification.csr_matrix": {
  "data": {
   "shadows": "scipy.sparse.csr_matrix"
  },
  "type": "import"
 },
 "sklearn.metrics._classification.f1_score": {
  "data": {
   "lineno": 949,
   "symbols_in_volume": [
    "sklearn.metrics._classification.fbeta_score"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics._classification.fbeta_score": {
  "data": {
   "lineno": 1074,
   "symbols_in_volume": [
    "sklearn.metrics._classification.precision_recall_fscore_support"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics._classification.hamming_loss": {
  "data": {
   "lineno": 2063,
   "symbols_in_volume": [
    "ValueError",
    "check_consistent_length",
    "count_nonzero",
    "numpy.mean",
    "sklearn.metrics._classification._check_targets",
    "sklearn.metrics._classification._weighted_sum"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics._classification.hinge_loss": {
  "data": {
   "lineno": 2284,
   "symbols_in_volume": [
    "LabelBinarizer",
    "LabelEncoder",
    "TypeError",
    "ValueError",
    "bool",
    "check_array",
    "check_consistent_length",
    "column_or_1d",
    "numpy.arange",
    "numpy.average",
    "numpy.clip",
    "numpy.max",
    "numpy.ones_like",
    "numpy.ravel",
    "numpy.size",
    "numpy.unique"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics._classification.jaccard_score": {
  "data": {
   "lineno": 642,
   "symbols_in_volume": [
    "numpy.any",
    "numpy.array",
    "numpy.average",
    "sklearn.metrics._classification._check_set_wise_labels",
    "sklearn.metrics._classification._prf_divide",
    "sklearn.metrics._classification.multilabel_confusion_matrix"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics._classification.log_loss": {
  "data": {
   "lineno": 2155,
   "symbols_in_volume": [
    "LabelBinarizer",
    "ValueError",
    "check_array",
    "check_consistent_length",
    "len",
    "numpy.append",
    "numpy.clip",
    "numpy.log",
    "numpy.newaxis",
    "sklearn.metrics._classification._weighted_sum"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics._classification.matthews_corrcoef": {
  "data": {
   "lineno": 788,
   "symbols_in_volume": [
    "LabelEncoder",
    "ValueError",
    "check_consistent_length",
    "numpy.dot",
    "numpy.float64",
    "numpy.hstack",
    "numpy.isnan",
    "numpy.sqrt",
    "numpy.trace",
    "sklearn.metrics._classification._check_targets",
    "sklearn.metrics._classification.confusion_matrix"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics._classification.multilabel_confusion_matrix": {
  "data": {
   "lineno": 358,
   "symbols_in_volume": [
    "LabelEncoder",
    "ValueError",
    "check_consistent_length",
    "column_or_1d",
    "count_nonzero",
    "len",
    "numpy.array",
    "numpy.array_equal",
    "numpy.asarray",
    "numpy.bincount",
    "numpy.hstack",
    "numpy.max",
    "numpy.min",
    "numpy.searchsorted",
    "numpy.setdiff1d",
    "numpy.zeros",
    "sklearn.metrics._classification._check_targets",
    "sum",
    "unique_labels"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics._classification.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.metrics._classification.precision_recall_fscore_support": {
  "data": {
   "lineno": 1302,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.array",
    "numpy.average",
    "numpy.float64",
    "numpy.isposinf",
    "sklearn.metrics._classification._check_set_wise_labels",
    "sklearn.metrics._classification._check_zero_division",
    "sklearn.metrics._classification._prf_divide",
    "sklearn.metrics._classification._warn_prf",
    "sklearn.metrics._classification.multilabel_confusion_matrix"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics._classification.precision_score": {
  "data": {
   "lineno": 1543,
   "symbols_in_volume": [
    "sklearn.metrics._classification.precision_recall_fscore_support"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics._classification.recall_score": {
  "data": {
   "lineno": 1663,
   "symbols_in_volume": [
    "sklearn.metrics._classification.precision_recall_fscore_support"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics._classification.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.metrics._classification.zero_one_loss": {
  "data": {
   "lineno": 878,
   "symbols_in_volume": [
    "_num_samples",
    "numpy.sum",
    "sklearn.metrics._classification.accuracy_score"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics._plot": {
  "data": {},
  "type": "module"
 },
 "sklearn.metrics._plot.base": {
  "data": {},
  "type": "module"
 },
 "sklearn.metrics._plot.base._check_classifier_response_method": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "ValueError",
    "getattr"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics._plot.base._get_response": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "ValueError",
    "numpy.flatnonzero",
    "prediction_method",
    "sklearn.base.is_classifier",
    "sklearn.metrics._plot.base._check_classifier_response_method"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics._plot.base.is_classifier": {
  "data": {
   "shadows": "sklearn.base.is_classifier"
  },
  "type": "import"
 },
 "sklearn.metrics._plot.base.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.metrics._plot.confusion_matrix": {
  "data": {},
  "type": "module"
 },
 "sklearn.metrics._plot.confusion_matrix.ConfusionMatrixDisplay": {
  "data": {
   "lineno": 12
  },
  "type": "class"
 },
 "sklearn.metrics._plot.confusion_matrix.ConfusionMatrixDisplay.__init__": {
  "data": {
   "lineno": 69
  },
  "type": "function"
 },
 "sklearn.metrics._plot.confusion_matrix.ConfusionMatrixDisplay.plot": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "check_matplotlib_support",
    "format",
    "itertools.product",
    "len",
    "matplotlib.pyplot.setp",
    "matplotlib.pyplot.subplots",
    "numpy.arange",
    "numpy.empty_like",
    "object",
    "range"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics._plot.confusion_matrix.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.metrics._plot.confusion_matrix.plot_confusion_matrix": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "ValueError",
    "check_matplotlib_support",
    "confusion_matrix",
    "is_classifier",
    "sklearn.metrics._plot.confusion_matrix.ConfusionMatrixDisplay",
    "unique_labels"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics._plot.confusion_matrix.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "sklearn.metrics._plot.confusion_matrix.product": {
  "data": {
   "shadows": "itertools.product"
  },
  "type": "import"
 },
 "sklearn.metrics._plot.det_curve": {
  "data": {},
  "type": "module"
 },
 "sklearn.metrics._plot.det_curve.DetCurveDisplay": {
  "data": {
   "lineno": 10
  },
  "type": "class"
 },
 "sklearn.metrics._plot.det_curve.DetCurveDisplay.__init__": {
  "data": {
   "lineno": 64
  },
  "type": "function"
 },
 "sklearn.metrics._plot.det_curve.DetCurveDisplay.plot": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "check_matplotlib_support",
    "matplotlib.pyplot.subplots",
    "scipy.stats.norm.ppf"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics._plot.det_curve.plot_det_curve": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "_get_response",
    "check_matplotlib_support",
    "det_curve",
    "sklearn.metrics._plot.det_curve.DetCurveDisplay"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics._plot.det_curve.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "sklearn.metrics._plot.det_curve.sp": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "sklearn.metrics._plot.precision_recall_curve": {
  "data": {},
  "type": "module"
 },
 "sklearn.metrics._plot.precision_recall_curve.PrecisionRecallDisplay": {
  "data": {
   "lineno": 10
  },
  "type": "class"
 },
 "sklearn.metrics._plot.precision_recall_curve.PrecisionRecallDisplay.__init__": {
  "data": {
   "lineno": 74
  },
  "type": "function"
 },
 "sklearn.metrics._plot.precision_recall_curve.PrecisionRecallDisplay.plot": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "check_matplotlib_support",
    "matplotlib.pyplot.subplots"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics._plot.precision_recall_curve.plot_precision_recall_curve": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "_get_response",
    "average_precision_score",
    "check_matplotlib_support",
    "precision_recall_curve",
    "sklearn.metrics._plot.precision_recall_curve.PrecisionRecallDisplay"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics._plot.precision_recall_curve.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "sklearn.metrics._plot.roc_curve": {
  "data": {},
  "type": "module"
 },
 "sklearn.metrics._plot.roc_curve.RocCurveDisplay": {
  "data": {
   "lineno": 10
  },
  "type": "class"
 },
 "sklearn.metrics._plot.roc_curve.RocCurveDisplay.__init__": {
  "data": {
   "lineno": 70
  },
  "type": "function"
 },
 "sklearn.metrics._plot.roc_curve.RocCurveDisplay.plot": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "check_matplotlib_support",
    "matplotlib.pyplot.subplots"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics._plot.roc_curve.plot_roc_curve": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "_get_response",
    "auc",
    "check_matplotlib_support",
    "roc_curve",
    "sklearn.metrics._plot.roc_curve.RocCurveDisplay"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics._plot.roc_curve.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "sklearn.metrics._plot.tests": {
  "data": {},
  "type": "module"
 },
 "sklearn.metrics._plot.tests.test_plot_confusion_matrix": {
  "data": {
   "symbols_in_volume": [
    "sklearn.metrics._plot.tests.test_plot_confusion_matrix.pytest"
   ]
  },
  "type": "module"
 },
 "sklearn.metrics._plot.tests.test_plot_confusion_matrix.ConfusionMatrixDisplay": {
  "data": {
   "shadows": "sklearn.metrics.ConfusionMatrixDisplay"
  },
  "type": "import"
 },
 "sklearn.metrics._plot.tests.test_plot_confusion_matrix.LogisticRegression": {
  "data": {
   "shadows": "sklearn.linear_model.LogisticRegression"
  },
  "type": "import"
 },
 "sklearn.metrics._plot.tests.test_plot_confusion_matrix.NotFittedError": {
  "data": {
   "shadows": "sklearn.exceptions.NotFittedError"
  },
  "type": "import"
 },
 "sklearn.metrics._plot.tests.test_plot_confusion_matrix.SVC": {
  "data": {
   "shadows": "sklearn.svm.SVC"
  },
  "type": "import"
 },
 "sklearn.metrics._plot.tests.test_plot_confusion_matrix.SVR": {
  "data": {
   "shadows": "sklearn.svm.SVR"
  },
  "type": "import"
 },
 "sklearn.metrics._plot.tests.test_plot_confusion_matrix.StandardScaler": {
  "data": {
   "shadows": "sklearn.preprocessing.StandardScaler"
  },
  "type": "import"
 },
 "sklearn.metrics._plot.tests.test_plot_confusion_matrix.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "sklearn.metrics._plot.tests.test_plot_confusion_matrix.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.metrics._plot.tests.test_plot_confusion_matrix.confusion_matrix": {
  "data": {
   "shadows": "sklearn.metrics.confusion_matrix"
  },
  "type": "import"
 },
 "sklearn.metrics._plot.tests.test_plot_confusion_matrix.data": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "sklearn.datasets.make_classification",
    "sklearn.metrics._plot.tests.test_plot_confusion_matrix.n_classes",
    "sklearn.metrics._plot.tests.test_plot_confusion_matrix.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics._plot.tests.test_plot_confusion_matrix.fitted_clf": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "sklearn.metrics._plot.tests.test_plot_confusion_matrix.data",
    "sklearn.metrics._plot.tests.test_plot_confusion_matrix.pytest",
    "sklearn.svm.SVC"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics._plot.tests.test_plot_confusion_matrix.make_classification": {
  "data": {
   "shadows": "sklearn.datasets.make_classification"
  },
  "type": "import"
 },
 "sklearn.metrics._plot.tests.test_plot_confusion_matrix.make_column_transformer": {
  "data": {
   "shadows": "sklearn.compose.make_column_transformer"
  },
  "type": "import"
 },
 "sklearn.metrics._plot.tests.test_plot_confusion_matrix.make_pipeline": {
  "data": {
   "shadows": "sklearn.pipeline.make_pipeline"
  },
  "type": "import"
 },
 "sklearn.metrics._plot.tests.test_plot_confusion_matrix.mpl": {
  "data": {
   "shadows": "matplotlib"
  },
  "type": "import"
 },
 "sklearn.metrics._plot.tests.test_plot_confusion_matrix.n_classes": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "sklearn.metrics._plot.tests.test_plot_confusion_matrix.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics._plot.tests.test_plot_confusion_matrix.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.metrics._plot.tests.test_plot_confusion_matrix.plot_confusion_matrix": {
  "data": {
   "shadows": "sklearn.metrics.plot_confusion_matrix"
  },
  "type": "import"
 },
 "sklearn.metrics._plot.tests.test_plot_confusion_matrix.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.metrics._plot.tests.test_plot_confusion_matrix.pytestmark": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "sklearn.metrics._plot.tests.test_plot_confusion_matrix.test_confusion_matrix_contrast": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.eye",
    "numpy.testing.assert_allclose",
    "sklearn.metrics.ConfusionMatrixDisplay"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics._plot.tests.test_plot_confusion_matrix.test_confusion_matrix_display": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "format",
    "numpy.array",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal",
    "sklearn.metrics._plot.tests.test_plot_confusion_matrix.data",
    "sklearn.metrics._plot.tests.test_plot_confusion_matrix.fitted_clf",
    "sklearn.metrics._plot.tests.test_plot_confusion_matrix.n_classes",
    "sklearn.metrics._plot.tests.test_plot_confusion_matrix.y_pred",
    "sklearn.metrics.confusion_matrix",
    "sklearn.metrics.plot_confusion_matrix"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics._plot.tests.test_plot_confusion_matrix.test_confusion_matrix_pipeline": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose",
    "sklearn.compose.make_column_transformer",
    "sklearn.exceptions.NotFittedError",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.metrics._plot.tests.test_plot_confusion_matrix.data",
    "sklearn.metrics._plot.tests.test_plot_confusion_matrix.n_classes",
    "sklearn.metrics._plot.tests.test_plot_confusion_matrix.pytest",
    "sklearn.metrics._plot.tests.test_plot_confusion_matrix.y_pred",
    "sklearn.metrics.confusion_matrix",
    "sklearn.metrics.plot_confusion_matrix",
    "sklearn.pipeline.make_pipeline",
    "sklearn.preprocessing.StandardScaler"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics._plot.tests.test_plot_confusion_matrix.test_confusion_matrix_standard_format": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.metrics.ConfusionMatrixDisplay"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics._plot.tests.test_plot_confusion_matrix.test_confusion_matrix_text_format": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "format",
    "numpy.array",
    "numpy.testing.assert_array_equal",
    "sklearn.metrics._plot.tests.test_plot_confusion_matrix.data",
    "sklearn.metrics._plot.tests.test_plot_confusion_matrix.fitted_clf",
    "sklearn.metrics._plot.tests.test_plot_confusion_matrix.n_classes",
    "sklearn.metrics._plot.tests.test_plot_confusion_matrix.pytest",
    "sklearn.metrics._plot.tests.test_plot_confusion_matrix.y_pred",
    "sklearn.metrics.confusion_matrix",
    "sklearn.metrics.plot_confusion_matrix"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics._plot.tests.test_plot_confusion_matrix.test_default_labels": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.assert_array_equal",
    "sklearn.metrics.ConfusionMatrixDisplay",
    "sklearn.metrics._plot.tests.test_plot_confusion_matrix.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics._plot.tests.test_plot_confusion_matrix.test_error_on_a_dataset_with_unseen_labels": {
  "data": {
   "lineno": 319,
   "symbols_in_volume": [
    "numpy.testing.assert_array_equal",
    "range",
    "sklearn.metrics._plot.tests.test_plot_confusion_matrix.data",
    "sklearn.metrics._plot.tests.test_plot_confusion_matrix.fitted_clf",
    "sklearn.metrics._plot.tests.test_plot_confusion_matrix.n_classes",
    "sklearn.metrics.plot_confusion_matrix",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics._plot.tests.test_plot_confusion_matrix.test_error_on_invalid_option": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.metrics._plot.tests.test_plot_confusion_matrix.data",
    "sklearn.metrics._plot.tests.test_plot_confusion_matrix.fitted_clf",
    "sklearn.metrics._plot.tests.test_plot_confusion_matrix.pytest",
    "sklearn.metrics.plot_confusion_matrix"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics._plot.tests.test_plot_confusion_matrix.test_error_on_regressor": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.metrics._plot.tests.test_plot_confusion_matrix.data",
    "sklearn.metrics._plot.tests.test_plot_confusion_matrix.pytest",
    "sklearn.metrics.plot_confusion_matrix",
    "sklearn.svm.SVR"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics._plot.tests.test_plot_confusion_matrix.test_plot_confusion_matrix": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "format",
    "isinstance",
    "list",
    "matplotlib.image.AxesImage",
    "numpy.array",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal",
    "range",
    "sklearn.metrics._plot.tests.test_plot_confusion_matrix.data",
    "sklearn.metrics._plot.tests.test_plot_confusion_matrix.fitted_clf",
    "sklearn.metrics._plot.tests.test_plot_confusion_matrix.n_classes",
    "sklearn.metrics._plot.tests.test_plot_confusion_matrix.pytest",
    "sklearn.metrics._plot.tests.test_plot_confusion_matrix.y_pred",
    "sklearn.metrics.confusion_matrix",
    "sklearn.metrics.plot_confusion_matrix",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics._plot.tests.test_plot_confusion_matrix.test_plot_confusion_matrix_colorbar": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "_check_colorbar",
    "sklearn.metrics._plot.tests.test_plot_confusion_matrix.data",
    "sklearn.metrics._plot.tests.test_plot_confusion_matrix.fitted_clf",
    "sklearn.metrics._plot.tests.test_plot_confusion_matrix.pytest",
    "sklearn.metrics.plot_confusion_matrix"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics._plot.tests.test_plot_confusion_matrix.test_plot_confusion_matrix_colorbar._check_colorbar": {
  "data": {
   "lineno": 253
  },
  "type": "function"
 },
 "sklearn.metrics._plot.tests.test_plot_confusion_matrix.test_plot_confusion_matrix_custom_labels": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "list",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal",
    "range",
    "sklearn.metrics._plot.tests.test_plot_confusion_matrix.data",
    "sklearn.metrics._plot.tests.test_plot_confusion_matrix.fitted_clf",
    "sklearn.metrics._plot.tests.test_plot_confusion_matrix.n_classes",
    "sklearn.metrics._plot.tests.test_plot_confusion_matrix.pytest",
    "sklearn.metrics._plot.tests.test_plot_confusion_matrix.y_pred",
    "sklearn.metrics.confusion_matrix",
    "sklearn.metrics.plot_confusion_matrix",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics._plot.tests.test_plot_confusion_matrix.y_pred": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "sklearn.metrics._plot.tests.test_plot_confusion_matrix.data",
    "sklearn.metrics._plot.tests.test_plot_confusion_matrix.fitted_clf",
    "sklearn.metrics._plot.tests.test_plot_confusion_matrix.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics._plot.tests.test_plot_curve_common": {
  "data": {},
  "type": "module"
 },
 "sklearn.metrics._plot.tests.test_plot_curve_common.ClassifierMixin": {
  "data": {
   "shadows": "sklearn.base.ClassifierMixin"
  },
  "type": "import"
 },
 "sklearn.metrics._plot.tests.test_plot_curve_common.DecisionTreeClassifier": {
  "data": {
   "shadows": "sklearn.tree.DecisionTreeClassifier"
  },
  "type": "import"
 },
 "sklearn.metrics._plot.tests.test_plot_curve_common.LogisticRegression": {
  "data": {
   "shadows": "sklearn.linear_model.LogisticRegression"
  },
  "type": "import"
 },
 "sklearn.metrics._plot.tests.test_plot_curve_common.NotFittedError": {
  "data": {
   "shadows": "sklearn.exceptions.NotFittedError"
  },
  "type": "import"
 },
 "sklearn.metrics._plot.tests.test_plot_curve_common.StandardScaler": {
  "data": {
   "shadows": "sklearn.preprocessing.StandardScaler"
  },
  "type": "import"
 },
 "sklearn.metrics._plot.tests.test_plot_curve_common.clone": {
  "data": {
   "shadows": "sklearn.base.clone"
  },
  "type": "import"
 },
 "sklearn.metrics._plot.tests.test_plot_curve_common.data": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "sklearn.datasets.load_iris",
    "sklearn.metrics._plot.tests.test_plot_curve_common.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics._plot.tests.test_plot_curve_common.data_binary": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "sklearn.metrics._plot.tests.test_plot_curve_common.data",
    "sklearn.metrics._plot.tests.test_plot_curve_common.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics._plot.tests.test_plot_curve_common.load_iris": {
  "data": {
   "shadows": "sklearn.datasets.load_iris"
  },
  "type": "import"
 },
 "sklearn.metrics._plot.tests.test_plot_curve_common.make_column_transformer": {
  "data": {
   "shadows": "sklearn.compose.make_column_transformer"
  },
  "type": "import"
 },
 "sklearn.metrics._plot.tests.test_plot_curve_common.make_pipeline": {
  "data": {
   "shadows": "sklearn.pipeline.make_pipeline"
  },
  "type": "import"
 },
 "sklearn.metrics._plot.tests.test_plot_curve_common.plot_det_curve": {
  "data": {
   "shadows": "sklearn.metrics.plot_det_curve"
  },
  "type": "import"
 },
 "sklearn.metrics._plot.tests.test_plot_curve_common.plot_roc_curve": {
  "data": {
   "shadows": "sklearn.metrics.plot_roc_curve"
  },
  "type": "import"
 },
 "sklearn.metrics._plot.tests.test_plot_curve_common.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.metrics._plot.tests.test_plot_curve_common.test_plot_curve_error_no_response": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "MyClassifier",
    "ValueError",
    "plot_func",
    "sklearn.metrics._plot.tests.test_plot_curve_common.data_binary",
    "sklearn.metrics._plot.tests.test_plot_curve_common.pytest",
    "sklearn.metrics.plot_det_curve",
    "sklearn.metrics.plot_roc_curve"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics._plot.tests.test_plot_curve_common.test_plot_curve_error_no_response.MyClassifier": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "sklearn.base.ClassifierMixin"
   ]
  },
  "type": "class"
 },
 "sklearn.metrics._plot.tests.test_plot_curve_common.test_plot_curve_error_no_response.MyClassifier.fit": {
  "data": {
   "lineno": 57
  },
  "type": "function"
 },
 "sklearn.metrics._plot.tests.test_plot_curve_common.test_plot_curve_error_non_binary": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "ValueError",
    "plot_func",
    "sklearn.metrics._plot.tests.test_plot_curve_common.data",
    "sklearn.metrics._plot.tests.test_plot_curve_common.pytest",
    "sklearn.metrics.plot_det_curve",
    "sklearn.metrics.plot_roc_curve",
    "sklearn.tree.DecisionTreeClassifier"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics._plot.tests.test_plot_curve_common.test_plot_curve_estimator_name_multiple_calls": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "plot_func",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.metrics._plot.tests.test_plot_curve_common.data_binary",
    "sklearn.metrics._plot.tests.test_plot_curve_common.pytest",
    "sklearn.metrics.plot_det_curve",
    "sklearn.metrics.plot_roc_curve"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics._plot.tests.test_plot_curve_common.test_plot_det_curve_not_fitted_errors": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "plot_func",
    "sklearn.base.clone",
    "sklearn.compose.make_column_transformer",
    "sklearn.exceptions.NotFittedError",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.metrics._plot.tests.test_plot_curve_common.data_binary",
    "sklearn.metrics._plot.tests.test_plot_curve_common.pytest",
    "sklearn.metrics.plot_det_curve",
    "sklearn.metrics.plot_roc_curve",
    "sklearn.pipeline.make_pipeline",
    "sklearn.preprocessing.StandardScaler"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics._plot.tests.test_plot_det_curve": {
  "data": {},
  "type": "module"
 },
 "sklearn.metrics._plot.tests.test_plot_det_curve.LogisticRegression": {
  "data": {
   "shadows": "sklearn.linear_model.LogisticRegression"
  },
  "type": "import"
 },
 "sklearn.metrics._plot.tests.test_plot_det_curve.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "sklearn.metrics._plot.tests.test_plot_det_curve.data": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "sklearn.datasets.load_iris",
    "sklearn.metrics._plot.tests.test_plot_det_curve.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics._plot.tests.test_plot_det_curve.data_binary": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "sklearn.metrics._plot.tests.test_plot_det_curve.data",
    "sklearn.metrics._plot.tests.test_plot_det_curve.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics._plot.tests.test_plot_det_curve.det_curve": {
  "data": {
   "shadows": "sklearn.metrics.det_curve"
  },
  "type": "import"
 },
 "sklearn.metrics._plot.tests.test_plot_det_curve.load_iris": {
  "data": {
   "shadows": "sklearn.datasets.load_iris"
  },
  "type": "import"
 },
 "sklearn.metrics._plot.tests.test_plot_det_curve.mpl": {
  "data": {
   "shadows": "matplotlib"
  },
  "type": "import"
 },
 "sklearn.metrics._plot.tests.test_plot_det_curve.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.metrics._plot.tests.test_plot_det_curve.plot_det_curve": {
  "data": {
   "shadows": "sklearn.metrics.plot_det_curve"
  },
  "type": "import"
 },
 "sklearn.metrics._plot.tests.test_plot_det_curve.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.metrics._plot.tests.test_plot_det_curve.test_plot_det_curve": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "getattr",
    "isinstance",
    "matplotlib.axes.Axes",
    "matplotlib.figure.Figure",
    "matplotlib.lines.Line2D",
    "numpy.array",
    "numpy.random.RandomState",
    "numpy.testing.assert_allclose",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.metrics._plot.tests.test_plot_det_curve.data_binary",
    "sklearn.metrics._plot.tests.test_plot_det_curve.pytest",
    "sklearn.metrics.det_curve",
    "sklearn.metrics.plot_det_curve"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics._plot.tests.test_plot_precision_recall": {
  "data": {
   "symbols_in_volume": [
    "sklearn.metrics._plot.tests.test_plot_precision_recall.pytest"
   ]
  },
  "type": "module"
 },
 "sklearn.metrics._plot.tests.test_plot_precision_recall.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "sklearn.metrics._plot.tests.test_plot_precision_recall.ClassifierMixin": {
  "data": {
   "shadows": "sklearn.base.ClassifierMixin"
  },
  "type": "import"
 },
 "sklearn.metrics._plot.tests.test_plot_precision_recall.DecisionTreeClassifier": {
  "data": {
   "shadows": "sklearn.tree.DecisionTreeClassifier"
  },
  "type": "import"
 },
 "sklearn.metrics._plot.tests.test_plot_precision_recall.DecisionTreeRegressor": {
  "data": {
   "shadows": "sklearn.tree.DecisionTreeRegressor"
  },
  "type": "import"
 },
 "sklearn.metrics._plot.tests.test_plot_precision_recall.LogisticRegression": {
  "data": {
   "shadows": "sklearn.linear_model.LogisticRegression"
  },
  "type": "import"
 },
 "sklearn.metrics._plot.tests.test_plot_precision_recall.NotFittedError": {
  "data": {
   "shadows": "sklearn.exceptions.NotFittedError"
  },
  "type": "import"
 },
 "sklearn.metrics._plot.tests.test_plot_precision_recall.PrecisionRecallDisplay": {
  "data": {
   "shadows": "sklearn.metrics.PrecisionRecallDisplay"
  },
  "type": "import"
 },
 "sklearn.metrics._plot.tests.test_plot_precision_recall.StandardScaler": {
  "data": {
   "shadows": "sklearn.preprocessing.StandardScaler"
  },
  "type": "import"
 },
 "sklearn.metrics._plot.tests.test_plot_precision_recall.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "sklearn.metrics._plot.tests.test_plot_precision_recall.average_precision_score": {
  "data": {
   "shadows": "sklearn.metrics.average_precision_score"
  },
  "type": "import"
 },
 "sklearn.metrics._plot.tests.test_plot_precision_recall.load_breast_cancer": {
  "data": {
   "shadows": "sklearn.datasets.load_breast_cancer"
  },
  "type": "import"
 },
 "sklearn.metrics._plot.tests.test_plot_precision_recall.make_classification": {
  "data": {
   "shadows": "sklearn.datasets.make_classification"
  },
  "type": "import"
 },
 "sklearn.metrics._plot.tests.test_plot_precision_recall.make_column_transformer": {
  "data": {
   "shadows": "sklearn.compose.make_column_transformer"
  },
  "type": "import"
 },
 "sklearn.metrics._plot.tests.test_plot_precision_recall.make_pipeline": {
  "data": {
   "shadows": "sklearn.pipeline.make_pipeline"
  },
  "type": "import"
 },
 "sklearn.metrics._plot.tests.test_plot_precision_recall.mpl": {
  "data": {
   "shadows": "matplotlib"
  },
  "type": "import"
 },
 "sklearn.metrics._plot.tests.test_plot_precision_recall.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.metrics._plot.tests.test_plot_precision_recall.plot_precision_recall_curve": {
  "data": {
   "shadows": "sklearn.metrics.plot_precision_recall_curve"
  },
  "type": "import"
 },
 "sklearn.metrics._plot.tests.test_plot_precision_recall.precision_recall_curve": {
  "data": {
   "shadows": "sklearn.metrics.precision_recall_curve"
  },
  "type": "import"
 },
 "sklearn.metrics._plot.tests.test_plot_precision_recall.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.metrics._plot.tests.test_plot_precision_recall.pytestmark": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "sklearn.metrics._plot.tests.test_plot_precision_recall.shuffle": {
  "data": {
   "shadows": "sklearn.utils.shuffle"
  },
  "type": "import"
 },
 "sklearn.metrics._plot.tests.test_plot_precision_recall.test_default_labels": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.metrics.PrecisionRecallDisplay",
    "sklearn.metrics._plot.tests.test_plot_precision_recall.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics._plot.tests.test_plot_precision_recall.test_error_bad_response": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "MyClassifier",
    "ValueError",
    "sklearn.datasets.make_classification",
    "sklearn.metrics._plot.tests.test_plot_precision_recall.pytest",
    "sklearn.metrics.plot_precision_recall_curve"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics._plot.tests.test_plot_precision_recall.test_error_bad_response.MyClassifier": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator",
    "sklearn.base.ClassifierMixin"
   ]
  },
  "type": "class"
 },
 "sklearn.metrics._plot.tests.test_plot_precision_recall.test_error_bad_response.MyClassifier.fit": {
  "data": {
   "lineno": 66
  },
  "type": "function"
 },
 "sklearn.metrics._plot.tests.test_plot_precision_recall.test_errors": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.datasets.make_classification",
    "sklearn.exceptions.NotFittedError",
    "sklearn.metrics._plot.tests.test_plot_precision_recall.pytest",
    "sklearn.metrics.plot_precision_recall_curve",
    "sklearn.tree.DecisionTreeClassifier",
    "sklearn.tree.DecisionTreeRegressor"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics._plot.tests.test_plot_precision_recall.test_plot_precision_recall": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "getattr",
    "isinstance",
    "matplotlib.axes.Axes",
    "matplotlib.figure.Figure",
    "matplotlib.lines.Line2D",
    "numpy.random.RandomState",
    "numpy.testing.assert_allclose",
    "sklearn.datasets.make_classification",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.metrics._plot.tests.test_plot_precision_recall.pytest",
    "sklearn.metrics.average_precision_score",
    "sklearn.metrics.plot_precision_recall_curve",
    "sklearn.metrics.precision_recall_curve"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics._plot.tests.test_plot_precision_recall.test_plot_precision_recall_curve_estimator_name_multiple_calls": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "sklearn.datasets.make_classification",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.metrics.plot_precision_recall_curve"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics._plot.tests.test_plot_precision_recall.test_plot_precision_recall_pos_label": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.flatnonzero",
    "numpy.hstack",
    "numpy.trapz",
    "object",
    "sklearn.datasets.load_breast_cancer",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.metrics._plot.tests.test_plot_precision_recall.pytest",
    "sklearn.metrics.plot_precision_recall_curve",
    "sklearn.model_selection.train_test_split",
    "sklearn.utils.shuffle"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics._plot.tests.test_plot_precision_recall.test_precision_recall_curve_pipeline": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "sklearn.compose.make_column_transformer",
    "sklearn.datasets.make_classification",
    "sklearn.exceptions.NotFittedError",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.metrics._plot.tests.test_plot_precision_recall.pytest",
    "sklearn.metrics.plot_precision_recall_curve",
    "sklearn.pipeline.make_pipeline",
    "sklearn.preprocessing.StandardScaler"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics._plot.tests.test_plot_precision_recall.test_precision_recall_curve_string_labels": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "sklearn.datasets.load_breast_cancer",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.metrics._plot.tests.test_plot_precision_recall.pytest",
    "sklearn.metrics.average_precision_score",
    "sklearn.metrics.plot_precision_recall_curve",
    "sklearn.pipeline.make_pipeline",
    "sklearn.preprocessing.StandardScaler"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics._plot.tests.test_plot_precision_recall.train_test_split": {
  "data": {
   "shadows": "sklearn.model_selection.train_test_split"
  },
  "type": "import"
 },
 "sklearn.metrics._plot.tests.test_plot_roc_curve": {
  "data": {
   "symbols_in_volume": [
    "sklearn.metrics._plot.tests.test_plot_roc_curve.pytest"
   ]
  },
  "type": "module"
 },
 "sklearn.metrics._plot.tests.test_plot_roc_curve.LogisticRegression": {
  "data": {
   "shadows": "sklearn.linear_model.LogisticRegression"
  },
  "type": "import"
 },
 "sklearn.metrics._plot.tests.test_plot_roc_curve.NotFittedError": {
  "data": {
   "shadows": "sklearn.exceptions.NotFittedError"
  },
  "type": "import"
 },
 "sklearn.metrics._plot.tests.test_plot_roc_curve.RocCurveDisplay": {
  "data": {
   "shadows": "sklearn.metrics.RocCurveDisplay"
  },
  "type": "import"
 },
 "sklearn.metrics._plot.tests.test_plot_roc_curve.StandardScaler": {
  "data": {
   "shadows": "sklearn.preprocessing.StandardScaler"
  },
  "type": "import"
 },
 "sklearn.metrics._plot.tests.test_plot_roc_curve.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "sklearn.metrics._plot.tests.test_plot_roc_curve.auc": {
  "data": {
   "shadows": "sklearn.metrics.auc"
  },
  "type": "import"
 },
 "sklearn.metrics._plot.tests.test_plot_roc_curve.data": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "sklearn.datasets.load_iris",
    "sklearn.metrics._plot.tests.test_plot_roc_curve.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics._plot.tests.test_plot_roc_curve.data_binary": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "sklearn.metrics._plot.tests.test_plot_roc_curve.data",
    "sklearn.metrics._plot.tests.test_plot_roc_curve.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics._plot.tests.test_plot_roc_curve.load_breast_cancer": {
  "data": {
   "shadows": "sklearn.datasets.load_breast_cancer"
  },
  "type": "import"
 },
 "sklearn.metrics._plot.tests.test_plot_roc_curve.load_iris": {
  "data": {
   "shadows": "sklearn.datasets.load_iris"
  },
  "type": "import"
 },
 "sklearn.metrics._plot.tests.test_plot_roc_curve.make_column_transformer": {
  "data": {
   "shadows": "sklearn.compose.make_column_transformer"
  },
  "type": "import"
 },
 "sklearn.metrics._plot.tests.test_plot_roc_curve.make_pipeline": {
  "data": {
   "shadows": "sklearn.pipeline.make_pipeline"
  },
  "type": "import"
 },
 "sklearn.metrics._plot.tests.test_plot_roc_curve.mpl": {
  "data": {
   "shadows": "matplotlib"
  },
  "type": "import"
 },
 "sklearn.metrics._plot.tests.test_plot_roc_curve.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.metrics._plot.tests.test_plot_roc_curve.plot_roc_curve": {
  "data": {
   "shadows": "sklearn.metrics.plot_roc_curve"
  },
  "type": "import"
 },
 "sklearn.metrics._plot.tests.test_plot_roc_curve.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.metrics._plot.tests.test_plot_roc_curve.pytestmark": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "sklearn.metrics._plot.tests.test_plot_roc_curve.roc_curve": {
  "data": {
   "shadows": "sklearn.metrics.roc_curve"
  },
  "type": "import"
 },
 "sklearn.metrics._plot.tests.test_plot_roc_curve.shuffle": {
  "data": {
   "shadows": "sklearn.utils.shuffle"
  },
  "type": "import"
 },
 "sklearn.metrics._plot.tests.test_plot_roc_curve.test_default_labels": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.metrics.RocCurveDisplay",
    "sklearn.metrics._plot.tests.test_plot_roc_curve.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics._plot.tests.test_plot_roc_curve.test_plot_roc_curve": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "getattr",
    "isinstance",
    "matplotlib.axes.Axes",
    "matplotlib.figure.Figure",
    "matplotlib.lines.Line2D",
    "numpy.array",
    "numpy.random.RandomState",
    "numpy.testing.assert_allclose",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.metrics._plot.tests.test_plot_roc_curve.data_binary",
    "sklearn.metrics._plot.tests.test_plot_roc_curve.pytest",
    "sklearn.metrics.auc",
    "sklearn.metrics.plot_roc_curve",
    "sklearn.metrics.roc_curve"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics._plot.tests.test_plot_roc_curve.test_plot_roc_curve_pos_label": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.flatnonzero",
    "numpy.hstack",
    "numpy.trapz",
    "object",
    "sklearn.datasets.load_breast_cancer",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.metrics._plot.tests.test_plot_roc_curve.pytest",
    "sklearn.metrics.plot_roc_curve",
    "sklearn.model_selection.train_test_split",
    "sklearn.utils.shuffle"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics._plot.tests.test_plot_roc_curve.test_roc_curve_not_fitted_errors": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "sklearn.compose.make_column_transformer",
    "sklearn.exceptions.NotFittedError",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.metrics._plot.tests.test_plot_roc_curve.data_binary",
    "sklearn.metrics._plot.tests.test_plot_roc_curve.pytest",
    "sklearn.metrics.plot_roc_curve",
    "sklearn.pipeline.make_pipeline",
    "sklearn.preprocessing.StandardScaler"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics._plot.tests.test_plot_roc_curve.train_test_split": {
  "data": {
   "shadows": "sklearn.model_selection.train_test_split"
  },
  "type": "import"
 },
 "sklearn.metrics._ranking": {
  "data": {},
  "type": "module"
 },
 "sklearn.metrics._ranking._binary_clf_curve": {
  "data": {
   "lineno": 653,
   "symbols_in_volume": [
    "ValueError",
    "_check_pos_label_consistency",
    "assert_all_finite",
    "check_consistent_length",
    "column_or_1d",
    "numpy.argsort",
    "numpy.diff",
    "numpy.r_",
    "numpy.where",
    "stable_cumsum",
    "type_of_target"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics._ranking._binary_roc_auc_score": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.append",
    "numpy.interp",
    "numpy.searchsorted",
    "numpy.unique",
    "sklearn.metrics._ranking.auc",
    "sklearn.metrics._ranking.roc_curve"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics._ranking._check_dcg_target_type": {
  "data": {
   "lineno": 1302,
   "symbols_in_volume": [
    "ValueError",
    "type_of_target"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics._ranking._dcg_sample_scores": {
  "data": {
   "lineno": 1194,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.argsort",
    "numpy.asarray",
    "numpy.cumsum",
    "numpy.log",
    "numpy.newaxis",
    "sklearn.metrics._ranking._tie_averaged_dcg",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics._ranking._multiclass_roc_auc_score": {
  "data": {
   "lineno": 553,
   "symbols_in_volume": [
    "ValueError",
    "_average_binary_score",
    "_average_multiclass_ovo_score",
    "_encode",
    "_unique",
    "column_or_1d",
    "label_binarize",
    "len",
    "numpy.allclose",
    "numpy.array_equal",
    "numpy.setdiff1d",
    "sklearn.metrics._ranking._binary_roc_auc_score"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics._ranking._ndcg_sample_scores": {
  "data": {
   "lineno": 1418,
   "symbols_in_volume": [
    "sklearn.metrics._ranking._dcg_sample_scores"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics._ranking._tie_averaged_dcg": {
  "data": {
   "lineno": 1253,
   "symbols_in_volume": [
    "len",
    "numpy.add.at",
    "numpy.cumsum",
    "numpy.diff",
    "numpy.empty",
    "numpy.unique",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics._ranking.auc": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "ValueError",
    "check_consistent_length",
    "column_or_1d",
    "isinstance",
    "numpy.all",
    "numpy.any",
    "numpy.diff",
    "numpy.memmap",
    "numpy.trapz"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics._ranking.average_precision_score": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "ValueError",
    "_average_binary_score",
    "functools.partial",
    "len",
    "numpy.unique",
    "type_of_target"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics._ranking.average_precision_score._binary_uninterpolated_average_precision": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.diff",
    "numpy.sum",
    "sklearn.metrics._ranking.precision_recall_curve"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics._ranking.coverage_error": {
  "data": {
   "lineno": 1049,
   "symbols_in_volume": [
    "ValueError",
    "check_array",
    "check_consistent_length",
    "numpy.average",
    "numpy.logical_not",
    "numpy.ma.masked_array",
    "type_of_target"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics._ranking.csr_matrix": {
  "data": {
   "shadows": "scipy.sparse.csr_matrix"
  },
  "type": "import"
 },
 "sklearn.metrics._ranking.dcg_score": {
  "data": {
   "lineno": 1312,
   "symbols_in_volume": [
    "check_array",
    "check_consistent_length",
    "numpy.average",
    "sklearn.metrics._ranking._check_dcg_target_type",
    "sklearn.metrics._ranking._dcg_sample_scores"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics._ranking.det_curve": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.unique",
    "sklearn.metrics._ranking._binary_clf_curve",
    "slice"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics._ranking.label_ranking_average_precision_score": {
  "data": {
   "lineno": 959,
   "symbols_in_volume": [
    "ValueError",
    "check_array",
    "check_consistent_length",
    "enumerate",
    "numpy.sum",
    "scipy.sparse.csr_matrix",
    "scipy.stats.rankdata",
    "type_of_target",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics._ranking.label_ranking_loss": {
  "data": {
   "lineno": 1109,
   "symbols_in_volume": [
    "ValueError",
    "check_array",
    "check_consistent_length",
    "count_nonzero",
    "enumerate",
    "len",
    "numpy.average",
    "numpy.bincount",
    "numpy.dot",
    "numpy.errstate",
    "numpy.logical_or",
    "numpy.unique",
    "numpy.zeros",
    "scipy.sparse.csr_matrix",
    "type_of_target",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics._ranking.ndcg_score": {
  "data": {
   "lineno": 1469,
   "symbols_in_volume": [
    "check_array",
    "check_consistent_length",
    "numpy.average",
    "sklearn.metrics._ranking._check_dcg_target_type",
    "sklearn.metrics._ranking._ndcg_sample_scores"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics._ranking.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.metrics._ranking.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "sklearn.metrics._ranking.precision_recall_curve": {
  "data": {
   "lineno": 733,
   "symbols_in_volume": [
    "numpy.isnan",
    "numpy.r_",
    "sklearn.metrics._ranking._binary_clf_curve",
    "slice"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics._ranking.rankdata": {
  "data": {
   "shadows": "scipy.stats.rankdata"
  },
  "type": "import"
 },
 "sklearn.metrics._ranking.roc_auc_score": {
  "data": {
   "lineno": 352,
   "symbols_in_volume": [
    "ValueError",
    "_average_binary_score",
    "check_array",
    "functools.partial",
    "label_binarize",
    "numpy.unique",
    "sklearn.metrics._ranking._binary_roc_auc_score",
    "sklearn.metrics._ranking._multiclass_roc_auc_score",
    "type_of_target"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics._ranking.roc_curve": {
  "data": {
   "lineno": 826,
   "symbols_in_volume": [
    "len",
    "numpy.diff",
    "numpy.logical_or",
    "numpy.nan",
    "numpy.r_",
    "numpy.repeat",
    "numpy.where",
    "sklearn.metrics._ranking._binary_clf_curve",
    "sklearn.metrics._ranking.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics._ranking.top_k_accuracy_score": {
  "data": {
   "lineno": 1572,
   "symbols_in_volume": [
    "ValueError",
    "_encode",
    "_unique",
    "check_array",
    "check_consistent_length",
    "column_or_1d",
    "len",
    "numpy.argsort",
    "numpy.array_equal",
    "numpy.average",
    "numpy.bool_",
    "numpy.dot",
    "numpy.int64",
    "numpy.ones_like",
    "numpy.setdiff1d",
    "numpy.sum",
    "sklearn.metrics._ranking.warnings",
    "type_of_target"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics._ranking.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.metrics._regression": {
  "data": {},
  "type": "module"
 },
 "sklearn.metrics._regression.__ALL__": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "sklearn.metrics._regression._check_reg_targets": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "ValueError",
    "check_array",
    "check_consistent_length",
    "isinstance",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics._regression.explained_variance_score": {
  "data": {
   "lineno": 495,
   "symbols_in_volume": [
    "check_consistent_length",
    "isinstance",
    "numpy.average",
    "numpy.ones",
    "sklearn.metrics._regression._check_reg_targets",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics._regression.max_error": {
  "data": {
   "lineno": 726,
   "symbols_in_volume": [
    "ValueError",
    "numpy.abs",
    "numpy.max",
    "sklearn.metrics._regression._check_reg_targets"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics._regression.mean_absolute_error": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "check_consistent_length",
    "isinstance",
    "numpy.abs",
    "numpy.average",
    "sklearn.metrics._regression._check_reg_targets",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics._regression.mean_absolute_percentage_error": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "check_consistent_length",
    "isinstance",
    "numpy.abs",
    "numpy.average",
    "numpy.finfo",
    "numpy.float64",
    "numpy.maximum",
    "sklearn.metrics._regression._check_reg_targets",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics._regression.mean_gamma_deviance": {
  "data": {
   "lineno": 862,
   "symbols_in_volume": [
    "sklearn.metrics._regression.mean_tweedie_deviance"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics._regression.mean_poisson_deviance": {
  "data": {
   "lineno": 824,
   "symbols_in_volume": [
    "sklearn.metrics._regression.mean_tweedie_deviance"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics._regression.mean_squared_error": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "check_consistent_length",
    "isinstance",
    "numpy.average",
    "numpy.sqrt",
    "sklearn.metrics._regression._check_reg_targets",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics._regression.mean_squared_log_error": {
  "data": {
   "lineno": 354,
   "symbols_in_volume": [
    "ValueError",
    "check_consistent_length",
    "numpy.log1p",
    "sklearn.metrics._regression._check_reg_targets",
    "sklearn.metrics._regression.mean_squared_error"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics._regression.mean_tweedie_deviance": {
  "data": {
   "lineno": 759,
   "symbols_in_volume": [
    "TweedieDistribution",
    "ValueError",
    "check_consistent_length",
    "column_or_1d",
    "numpy.average",
    "numpy.float32",
    "numpy.float64",
    "numpy.newaxis",
    "sklearn.metrics._regression._check_reg_targets"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics._regression.median_absolute_error": {
  "data": {
   "lineno": 421,
   "symbols_in_volume": [
    "_check_sample_weight",
    "_weighted_percentile",
    "isinstance",
    "numpy.abs",
    "numpy.average",
    "numpy.median",
    "sklearn.metrics._regression._check_reg_targets",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics._regression.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.metrics._regression.r2_score": {
  "data": {
   "lineno": 587,
   "symbols_in_volume": [
    "_num_samples",
    "check_consistent_length",
    "column_or_1d",
    "float",
    "isinstance",
    "numpy.any",
    "numpy.average",
    "numpy.float64",
    "numpy.newaxis",
    "numpy.ones",
    "sklearn.metrics._regression._check_reg_targets",
    "sklearn.metrics._regression.warnings",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics._regression.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.metrics._scorer": {
  "data": {
   "symbols_in_volume": [
    "dict",
    "sklearn.metrics._scorer.SCORERS",
    "sklearn.metrics._scorer.accuracy_scorer",
    "sklearn.metrics._scorer.adjusted_mutual_info_scorer",
    "sklearn.metrics._scorer.adjusted_rand_scorer",
    "sklearn.metrics._scorer.average_precision_scorer",
    "sklearn.metrics._scorer.balanced_accuracy_scorer",
    "sklearn.metrics._scorer.completeness_scorer",
    "sklearn.metrics._scorer.explained_variance_scorer",
    "sklearn.metrics._scorer.fowlkes_mallows_scorer",
    "sklearn.metrics._scorer.homogeneity_scorer",
    "sklearn.metrics._scorer.make_scorer",
    "sklearn.metrics._scorer.max_error_scorer",
    "sklearn.metrics._scorer.mutual_info_scorer",
    "sklearn.metrics._scorer.neg_brier_score_scorer",
    "sklearn.metrics._scorer.neg_log_loss_scorer",
    "sklearn.metrics._scorer.neg_mean_absolute_error_scorer",
    "sklearn.metrics._scorer.neg_mean_absolute_percentage_error_scorer",
    "sklearn.metrics._scorer.neg_mean_gamma_deviance_scorer",
    "sklearn.metrics._scorer.neg_mean_poisson_deviance_scorer",
    "sklearn.metrics._scorer.neg_mean_squared_error_scorer",
    "sklearn.metrics._scorer.neg_mean_squared_log_error_scorer",
    "sklearn.metrics._scorer.neg_median_absolute_error_scorer",
    "sklearn.metrics._scorer.neg_root_mean_squared_error_scorer",
    "sklearn.metrics._scorer.normalized_mutual_info_scorer",
    "sklearn.metrics._scorer.qualified_name",
    "sklearn.metrics._scorer.r2_scorer",
    "sklearn.metrics._scorer.rand_scorer",
    "sklearn.metrics._scorer.roc_auc_ovo_scorer",
    "sklearn.metrics._scorer.roc_auc_ovo_weighted_scorer",
    "sklearn.metrics._scorer.roc_auc_ovr_scorer",
    "sklearn.metrics._scorer.roc_auc_ovr_weighted_scorer",
    "sklearn.metrics._scorer.roc_auc_scorer",
    "sklearn.metrics._scorer.top_k_accuracy_scorer",
    "sklearn.metrics._scorer.v_measure_scorer"
   ]
  },
  "type": "module"
 },
 "sklearn.metrics._scorer.Counter": {
  "data": {
   "shadows": "collections.Counter"
  },
  "type": "import"
 },
 "sklearn.metrics._scorer.Iterable": {
  "data": {
   "shadows": "collections.abc.Iterable"
  },
  "type": "import"
 },
 "sklearn.metrics._scorer.SCORERS": {
  "data": {
   "lineno": 698
  },
  "type": "constant"
 },
 "sklearn.metrics._scorer._BaseScorer": {
  "data": {
   "lineno": 125
  },
  "type": "class"
 },
 "sklearn.metrics._scorer._BaseScorer.__call__": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "functools.partial",
    "sklearn.metrics._scorer._cached_call"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics._scorer._BaseScorer.__init__": {
  "data": {
   "lineno": 126
  },
  "type": "function"
 },
 "sklearn.metrics._scorer._BaseScorer.__repr__": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics._scorer._BaseScorer._check_pos_label": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "ValueError",
    "list",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics._scorer._BaseScorer._factory_args": {
  "data": {
   "lineno": 202
  },
  "type": "function"
 },
 "sklearn.metrics._scorer._BaseScorer._select_proba_binary": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "ValueError",
    "numpy.flatnonzero"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics._scorer._MultimetricScorer": {
  "data": {
   "lineno": 63
  },
  "type": "class"
 },
 "sklearn.metrics._scorer._MultimetricScorer.__call__": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "functools.partial",
    "isinstance",
    "scorer",
    "sklearn.metrics._scorer._cached_call"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics._scorer._MultimetricScorer.__init__": {
  "data": {
   "lineno": 76
  },
  "type": "function"
 },
 "sklearn.metrics._scorer._MultimetricScorer._use_cache": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "any",
    "collections.Counter",
    "hasattr",
    "is_regressor",
    "len",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics._scorer._PredictScorer": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "sklearn.metrics._scorer._BaseScorer"
   ]
  },
  "type": "class"
 },
 "sklearn.metrics._scorer._PredictScorer._score": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "method_caller"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics._scorer._ProbaScorer": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "sklearn.metrics._scorer._BaseScorer"
   ]
  },
  "type": "class"
 },
 "sklearn.metrics._scorer._ProbaScorer._factory_args": {
  "data": {
   "lineno": 290
  },
  "type": "function"
 },
 "sklearn.metrics._scorer._ProbaScorer._score": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "method_caller",
    "type_of_target"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics._scorer._ThresholdScorer": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": [
    "sklearn.metrics._scorer._BaseScorer"
   ]
  },
  "type": "class"
 },
 "sklearn.metrics._scorer._ThresholdScorer._factory_args": {
  "data": {
   "lineno": 364
  },
  "type": "function"
 },
 "sklearn.metrics._scorer._ThresholdScorer._score": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": [
    "AttributeError",
    "NotImplementedError",
    "ValueError",
    "is_regressor",
    "isinstance",
    "list",
    "method_caller",
    "numpy.vstack",
    "type_of_target"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics._scorer._cached_call": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "KeyError",
    "getattr"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics._scorer._check_multimetric_scoring": {
  "data": {
   "lineno": 463,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "all",
    "any",
    "callable",
    "dict",
    "isinstance",
    "len",
    "list",
    "scorer",
    "set",
    "sklearn.metrics._scorer.check_scoring",
    "str",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics._scorer._passthrough_scorer": {
  "data": {
   "lineno": 395
  },
  "type": "function"
 },
 "sklearn.metrics._scorer.accuracy_scorer": {
  "data": {
   "lineno": 653
  },
  "type": "constant"
 },
 "sklearn.metrics._scorer.adjusted_mutual_info_scorer": {
  "data": {
   "lineno": 693
  },
  "type": "constant"
 },
 "sklearn.metrics._scorer.adjusted_rand_scorer": {
  "data": {
   "lineno": 687
  },
  "type": "constant"
 },
 "sklearn.metrics._scorer.average_precision_scorer": {
  "data": {
   "lineno": 662
  },
  "type": "constant"
 },
 "sklearn.metrics._scorer.balanced_accuracy_scorer": {
  "data": {
   "lineno": 654
  },
  "type": "constant"
 },
 "sklearn.metrics._scorer.brier_score_loss_scorer": {
  "data": {
   "lineno": 681
  },
  "type": "constant"
 },
 "sklearn.metrics._scorer.check_scoring": {
  "data": {
   "lineno": 400,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "callable",
    "collections.abc.Iterable",
    "getattr",
    "hasattr",
    "isinstance",
    "sklearn.metrics._scorer._passthrough_scorer",
    "sklearn.metrics._scorer.get_scorer",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics._scorer.completeness_scorer": {
  "data": {
   "lineno": 690
  },
  "type": "constant"
 },
 "sklearn.metrics._scorer.explained_variance_scorer": {
  "data": {
   "lineno": 626
  },
  "type": "constant"
 },
 "sklearn.metrics._scorer.fowlkes_mallows_scorer": {
  "data": {
   "lineno": 695
  },
  "type": "constant"
 },
 "sklearn.metrics._scorer.get_scorer": {
  "data": {
   "lineno": 368,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "isinstance",
    "scorer",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics._scorer.homogeneity_scorer": {
  "data": {
   "lineno": 689
  },
  "type": "constant"
 },
 "sklearn.metrics._scorer.make_scorer": {
  "data": {
   "lineno": 533,
   "symbols_in_volume": [
    "ValueError",
    "cls",
    "sklearn.metrics._scorer._PredictScorer",
    "sklearn.metrics._scorer._ProbaScorer",
    "sklearn.metrics._scorer._ThresholdScorer"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics._scorer.max_error_scorer": {
  "data": {
   "lineno": 628
  },
  "type": "constant"
 },
 "sklearn.metrics._scorer.mutual_info_scorer": {
  "data": {
   "lineno": 692
  },
  "type": "constant"
 },
 "sklearn.metrics._scorer.neg_brier_score_scorer": {
  "data": {
   "lineno": 678
  },
  "type": "constant"
 },
 "sklearn.metrics._scorer.neg_log_loss_scorer": {
  "data": {
   "lineno": 676
  },
  "type": "constant"
 },
 "sklearn.metrics._scorer.neg_mean_absolute_error_scorer": {
  "data": {
   "lineno": 634
  },
  "type": "constant"
 },
 "sklearn.metrics._scorer.neg_mean_absolute_percentage_error_scorer": {
  "data": {
   "lineno": 636
  },
  "type": "constant"
 },
 "sklearn.metrics._scorer.neg_mean_gamma_deviance_scorer": {
  "data": {
   "lineno": 648
  },
  "type": "constant"
 },
 "sklearn.metrics._scorer.neg_mean_poisson_deviance_scorer": {
  "data": {
   "lineno": 644
  },
  "type": "constant"
 },
 "sklearn.metrics._scorer.neg_mean_squared_error_scorer": {
  "data": {
   "lineno": 630
  },
  "type": "constant"
 },
 "sklearn.metrics._scorer.neg_mean_squared_log_error_scorer": {
  "data": {
   "lineno": 632
  },
  "type": "constant"
 },
 "sklearn.metrics._scorer.neg_median_absolute_error_scorer": {
  "data": {
   "lineno": 639
  },
  "type": "constant"
 },
 "sklearn.metrics._scorer.neg_root_mean_squared_error_scorer": {
  "data": {
   "lineno": 641
  },
  "type": "constant"
 },
 "sklearn.metrics._scorer.normalized_mutual_info_scorer": {
  "data": {
   "lineno": 694
  },
  "type": "constant"
 },
 "sklearn.metrics._scorer.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.metrics._scorer.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "sklearn.metrics._scorer.qualified_name": {
  "data": {
   "lineno": 737
  },
  "type": "constant"
 },
 "sklearn.metrics._scorer.r2_scorer": {
  "data": {
   "lineno": 627
  },
  "type": "constant"
 },
 "sklearn.metrics._scorer.rand_scorer": {
  "data": {
   "lineno": 688
  },
  "type": "constant"
 },
 "sklearn.metrics._scorer.roc_auc_ovo_scorer": {
  "data": {
   "lineno": 664
  },
  "type": "constant"
 },
 "sklearn.metrics._scorer.roc_auc_ovo_weighted_scorer": {
  "data": {
   "lineno": 666
  },
  "type": "constant"
 },
 "sklearn.metrics._scorer.roc_auc_ovr_scorer": {
  "data": {
   "lineno": 669
  },
  "type": "constant"
 },
 "sklearn.metrics._scorer.roc_auc_ovr_weighted_scorer": {
  "data": {
   "lineno": 671
  },
  "type": "constant"
 },
 "sklearn.metrics._scorer.roc_auc_scorer": {
  "data": {
   "lineno": 660
  },
  "type": "constant"
 },
 "sklearn.metrics._scorer.top_k_accuracy_scorer": {
  "data": {
   "lineno": 657
  },
  "type": "constant"
 },
 "sklearn.metrics._scorer.v_measure_scorer": {
  "data": {
   "lineno": 691
  },
  "type": "constant"
 },
 "sklearn.metrics.cluster": {
  "data": {},
  "type": "module"
 },
 "sklearn.metrics.cluster.__all__": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "sklearn.metrics.cluster._bicluster": {
  "data": {},
  "type": "module"
 },
 "sklearn.metrics.cluster._bicluster.__all__": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "sklearn.metrics.cluster._bicluster._check_rows_and_columns": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "check_array",
    "check_consistent_length",
    "map"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.cluster._bicluster._jaccard": {
  "data": {
   "lineno": 20
  },
  "type": "function"
 },
 "sklearn.metrics.cluster._bicluster._pairwise_similarity": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "list",
    "numpy.array",
    "range",
    "similarity",
    "sklearn.metrics.cluster._bicluster._check_rows_and_columns"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.cluster._bicluster.consensus_score": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "len",
    "max",
    "scipy.optimize.linear_sum_assignment",
    "similarity",
    "sklearn.metrics.cluster._bicluster._jaccard",
    "sklearn.metrics.cluster._bicluster._pairwise_similarity"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.cluster._bicluster.linear_sum_assignment": {
  "data": {
   "shadows": "scipy.optimize.linear_sum_assignment"
  },
  "type": "import"
 },
 "sklearn.metrics.cluster._bicluster.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.metrics.cluster._unsupervised": {
  "data": {},
  "type": "module"
 },
 "sklearn.metrics.cluster._unsupervised._silhouette_reduce": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "numpy.bincount",
    "numpy.inf",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.cluster._unsupervised.calinski_harabasz_score": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "LabelEncoder",
    "check_X_y",
    "len",
    "numpy.mean",
    "numpy.sum",
    "range",
    "sklearn.metrics.cluster._unsupervised.check_number_of_labels"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.cluster._unsupervised.check_number_of_labels": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.cluster._unsupervised.davies_bouldin_score": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "LabelEncoder",
    "_safe_indexing",
    "check_X_y",
    "float",
    "len",
    "numpy.allclose",
    "numpy.average",
    "numpy.inf",
    "numpy.max",
    "numpy.mean",
    "numpy.zeros",
    "pairwise_distances",
    "range",
    "sklearn.metrics.cluster._unsupervised.check_number_of_labels"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.cluster._unsupervised.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "sklearn.metrics.cluster._unsupervised.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.metrics.cluster._unsupervised.silhouette_samples": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "LabelEncoder",
    "ValueError",
    "check_X_y",
    "len",
    "numpy.abs",
    "numpy.any",
    "numpy.bincount",
    "numpy.concatenate",
    "numpy.diagonal",
    "numpy.errstate",
    "numpy.finfo",
    "numpy.maximum",
    "numpy.nan_to_num",
    "pairwise_distances_chunked",
    "sklearn.metrics.cluster._unsupervised._silhouette_reduce",
    "sklearn.metrics.cluster._unsupervised.check_number_of_labels",
    "sklearn.metrics.cluster._unsupervised.functools",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.cluster._unsupervised.silhouette_score": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "check_X_y",
    "check_random_state",
    "numpy.mean",
    "sklearn.metrics.cluster._unsupervised.silhouette_samples"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.cluster.setup": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.distutils.core.setup",
    "sklearn.metrics.cluster.setup.configuration"
   ]
  },
  "type": "module"
 },
 "sklearn.metrics.cluster.setup.Configuration": {
  "data": {
   "shadows": "numpy.distutils.misc_util.Configuration"
  },
  "type": "import"
 },
 "sklearn.metrics.cluster.setup.configuration": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "numpy.distutils.misc_util.Configuration",
    "sklearn.metrics.cluster.setup.numpy",
    "sklearn.metrics.cluster.setup.os"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.cluster.setup.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.metrics.cluster.setup.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "sklearn.metrics.cluster.setup.setup": {
  "data": {
   "shadows": "numpy.distutils.core.setup"
  },
  "type": "import"
 },
 "sklearn.metrics.cluster.tests": {
  "data": {},
  "type": "module"
 },
 "sklearn.metrics.cluster.tests.test_bicluster": {
  "data": {},
  "type": "module"
 },
 "sklearn.metrics.cluster.tests.test_bicluster._jaccard": {
  "data": {
   "shadows": "sklearn.metrics.cluster._bicluster._jaccard"
  },
  "type": "import"
 },
 "sklearn.metrics.cluster.tests.test_bicluster.assert_almost_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_almost_equal"
  },
  "type": "import"
 },
 "sklearn.metrics.cluster.tests.test_bicluster.consensus_score": {
  "data": {
   "shadows": "sklearn.metrics.consensus_score"
  },
  "type": "import"
 },
 "sklearn.metrics.cluster.tests.test_bicluster.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.metrics.cluster.tests.test_bicluster.test_consensus_score": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "sklearn.metrics.consensus_score"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.cluster.tests.test_bicluster.test_consensus_score_issue2445": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.metrics.consensus_score",
    "sklearn.utils._testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.cluster.tests.test_bicluster.test_jaccard": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.metrics.cluster._bicluster._jaccard"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.cluster.tests.test_common": {
  "data": {
   "symbols_in_volume": [
    "functools.partial",
    "numpy.random.RandomState",
    "sklearn.metrics.cluster.adjusted_mutual_info_score",
    "sklearn.metrics.cluster.adjusted_rand_score",
    "sklearn.metrics.cluster.calinski_harabasz_score",
    "sklearn.metrics.cluster.completeness_score",
    "sklearn.metrics.cluster.davies_bouldin_score",
    "sklearn.metrics.cluster.fowlkes_mallows_score",
    "sklearn.metrics.cluster.homogeneity_score",
    "sklearn.metrics.cluster.mutual_info_score",
    "sklearn.metrics.cluster.normalized_mutual_info_score",
    "sklearn.metrics.cluster.rand_score",
    "sklearn.metrics.cluster.silhouette_score",
    "sklearn.metrics.cluster.tests.test_common.rng",
    "sklearn.metrics.cluster.v_measure_score"
   ]
  },
  "type": "module"
 },
 "sklearn.metrics.cluster.tests.test_common.NON_SYMMETRIC_METRICS": {
  "data": {
   "lineno": 68
  },
  "type": "constant"
 },
 "sklearn.metrics.cluster.tests.test_common.NORMALIZED_METRICS": {
  "data": {
   "lineno": 71
  },
  "type": "constant"
 },
 "sklearn.metrics.cluster.tests.test_common.SUPERVISED_METRICS": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "sklearn.metrics.cluster.tests.test_common.SYMMETRIC_METRICS": {
  "data": {
   "lineno": 62
  },
  "type": "constant"
 },
 "sklearn.metrics.cluster.tests.test_common.UNSUPERVISED_METRICS": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "sklearn.metrics.cluster.tests.test_common.adjusted_mutual_info_score": {
  "data": {
   "shadows": "sklearn.metrics.cluster.adjusted_mutual_info_score"
  },
  "type": "import"
 },
 "sklearn.metrics.cluster.tests.test_common.adjusted_rand_score": {
  "data": {
   "shadows": "sklearn.metrics.cluster.adjusted_rand_score"
  },
  "type": "import"
 },
 "sklearn.metrics.cluster.tests.test_common.assert_allclose": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_allclose"
  },
  "type": "import"
 },
 "sklearn.metrics.cluster.tests.test_common.calinski_harabasz_score": {
  "data": {
   "shadows": "sklearn.metrics.cluster.calinski_harabasz_score"
  },
  "type": "import"
 },
 "sklearn.metrics.cluster.tests.test_common.completeness_score": {
  "data": {
   "shadows": "sklearn.metrics.cluster.completeness_score"
  },
  "type": "import"
 },
 "sklearn.metrics.cluster.tests.test_common.davies_bouldin_score": {
  "data": {
   "shadows": "sklearn.metrics.cluster.davies_bouldin_score"
  },
  "type": "import"
 },
 "sklearn.metrics.cluster.tests.test_common.fowlkes_mallows_score": {
  "data": {
   "shadows": "sklearn.metrics.cluster.fowlkes_mallows_score"
  },
  "type": "import"
 },
 "sklearn.metrics.cluster.tests.test_common.homogeneity_score": {
  "data": {
   "shadows": "sklearn.metrics.cluster.homogeneity_score"
  },
  "type": "import"
 },
 "sklearn.metrics.cluster.tests.test_common.mutual_info_score": {
  "data": {
   "shadows": "sklearn.metrics.cluster.mutual_info_score"
  },
  "type": "import"
 },
 "sklearn.metrics.cluster.tests.test_common.normalized_mutual_info_score": {
  "data": {
   "shadows": "sklearn.metrics.cluster.normalized_mutual_info_score"
  },
  "type": "import"
 },
 "sklearn.metrics.cluster.tests.test_common.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.metrics.cluster.tests.test_common.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "sklearn.metrics.cluster.tests.test_common.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.metrics.cluster.tests.test_common.rand_score": {
  "data": {
   "shadows": "sklearn.metrics.cluster.rand_score"
  },
  "type": "import"
 },
 "sklearn.metrics.cluster.tests.test_common.rng": {
  "data": {
   "lineno": 78
  },
  "type": "constant"
 },
 "sklearn.metrics.cluster.tests.test_common.silhouette_score": {
  "data": {
   "shadows": "sklearn.metrics.cluster.silhouette_score"
  },
  "type": "import"
 },
 "sklearn.metrics.cluster.tests.test_common.test_format_invariance": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "dict",
    "float",
    "generate_formats",
    "metric",
    "numpy.random.randint",
    "sklearn.metrics.cluster.tests.test_common.SUPERVISED_METRICS",
    "sklearn.metrics.cluster.tests.test_common.UNSUPERVISED_METRICS",
    "sklearn.metrics.cluster.tests.test_common.pytest",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.cluster.tests.test_common.test_format_invariance.generate_formats": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "numpy.array",
    "object",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.cluster.tests.test_common.test_inf_nan_input": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "metric_func",
    "numpy.inf",
    "numpy.nan",
    "numpy.random.randint",
    "sklearn.metrics.cluster.tests.test_common.SUPERVISED_METRICS",
    "sklearn.metrics.cluster.tests.test_common.UNSUPERVISED_METRICS",
    "sklearn.metrics.cluster.tests.test_common.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.cluster.tests.test_common.test_non_symmetry": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "metric",
    "sklearn.metrics.cluster.tests.test_common.NON_SYMMETRIC_METRICS",
    "sklearn.metrics.cluster.tests.test_common.SUPERVISED_METRICS",
    "sklearn.metrics.cluster.tests.test_common.pytest",
    "sklearn.metrics.cluster.tests.test_common.y1",
    "sklearn.metrics.cluster.tests.test_common.y2"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.cluster.tests.test_common.test_normalized_output": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "metric",
    "numpy.array",
    "sklearn.metrics.cluster.tests.test_common.NORMALIZED_METRICS",
    "sklearn.metrics.cluster.tests.test_common.SUPERVISED_METRICS",
    "sklearn.metrics.cluster.tests.test_common.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.cluster.tests.test_common.test_permute_labels": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "dict",
    "metric",
    "numpy.array",
    "numpy.random.randint",
    "sklearn.metrics.cluster.tests.test_common.SUPERVISED_METRICS",
    "sklearn.metrics.cluster.tests.test_common.UNSUPERVISED_METRICS",
    "sklearn.metrics.cluster.tests.test_common.pytest",
    "sklearn.utils._testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.cluster.tests.test_common.test_single_sample": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "metric",
    "sklearn.metrics.cluster.tests.test_common.SUPERVISED_METRICS",
    "sklearn.metrics.cluster.tests.test_common.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.cluster.tests.test_common.test_symmetric_non_symmetric_union": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "sklearn.metrics.cluster.tests.test_common.NON_SYMMETRIC_METRICS",
    "sklearn.metrics.cluster.tests.test_common.SUPERVISED_METRICS",
    "sklearn.metrics.cluster.tests.test_common.SYMMETRIC_METRICS",
    "sorted"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.cluster.tests.test_common.test_symmetry": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "metric",
    "sklearn.metrics.cluster.tests.test_common.SUPERVISED_METRICS",
    "sklearn.metrics.cluster.tests.test_common.SYMMETRIC_METRICS",
    "sklearn.metrics.cluster.tests.test_common.pytest",
    "sklearn.metrics.cluster.tests.test_common.y1",
    "sklearn.metrics.cluster.tests.test_common.y2"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.cluster.tests.test_common.v_measure_score": {
  "data": {
   "shadows": "sklearn.metrics.cluster.v_measure_score"
  },
  "type": "import"
 },
 "sklearn.metrics.cluster.tests.test_common.y1": {
  "data": {
   "lineno": 79
  },
  "type": "constant"
 },
 "sklearn.metrics.cluster.tests.test_common.y2": {
  "data": {
   "lineno": 80
  },
  "type": "constant"
 },
 "sklearn.metrics.cluster.tests.test_supervised": {
  "data": {
   "symbols_in_volume": [
    "sklearn.metrics.cluster.adjusted_mutual_info_score",
    "sklearn.metrics.cluster.adjusted_rand_score",
    "sklearn.metrics.cluster.completeness_score",
    "sklearn.metrics.cluster.homogeneity_score",
    "sklearn.metrics.cluster.normalized_mutual_info_score",
    "sklearn.metrics.cluster.rand_score",
    "sklearn.metrics.cluster.v_measure_score"
   ]
  },
  "type": "module"
 },
 "sklearn.metrics.cluster.tests.test_supervised._generalized_average": {
  "data": {
   "shadows": "sklearn.metrics.cluster._supervised._generalized_average"
  },
  "type": "import"
 },
 "sklearn.metrics.cluster.tests.test_supervised.adjusted_mutual_info_score": {
  "data": {
   "shadows": "sklearn.metrics.cluster.adjusted_mutual_info_score"
  },
  "type": "import"
 },
 "sklearn.metrics.cluster.tests.test_supervised.adjusted_rand_score": {
  "data": {
   "shadows": "sklearn.metrics.cluster.adjusted_rand_score"
  },
  "type": "import"
 },
 "sklearn.metrics.cluster.tests.test_supervised.assert_all_finite": {
  "data": {
   "shadows": "sklearn.utils.assert_all_finite"
  },
  "type": "import"
 },
 "sklearn.metrics.cluster.tests.test_supervised.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "sklearn.metrics.cluster.tests.test_supervised.assert_almost_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_almost_equal"
  },
  "type": "import"
 },
 "sklearn.metrics.cluster.tests.test_supervised.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.metrics.cluster.tests.test_supervised.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.metrics.cluster.tests.test_supervised.check_clusterings": {
  "data": {
   "shadows": "sklearn.metrics.cluster._supervised.check_clusterings"
  },
  "type": "import"
 },
 "sklearn.metrics.cluster.tests.test_supervised.completeness_score": {
  "data": {
   "shadows": "sklearn.metrics.cluster.completeness_score"
  },
  "type": "import"
 },
 "sklearn.metrics.cluster.tests.test_supervised.contingency_matrix": {
  "data": {
   "shadows": "sklearn.metrics.cluster.contingency_matrix"
  },
  "type": "import"
 },
 "sklearn.metrics.cluster.tests.test_supervised.entropy": {
  "data": {
   "shadows": "sklearn.metrics.cluster.entropy"
  },
  "type": "import"
 },
 "sklearn.metrics.cluster.tests.test_supervised.expected_mutual_information": {
  "data": {
   "shadows": "sklearn.metrics.cluster.expected_mutual_information"
  },
  "type": "import"
 },
 "sklearn.metrics.cluster.tests.test_supervised.fowlkes_mallows_score": {
  "data": {
   "shadows": "sklearn.metrics.cluster.fowlkes_mallows_score"
  },
  "type": "import"
 },
 "sklearn.metrics.cluster.tests.test_supervised.homogeneity_completeness_v_measure": {
  "data": {
   "shadows": "sklearn.metrics.cluster.homogeneity_completeness_v_measure"
  },
  "type": "import"
 },
 "sklearn.metrics.cluster.tests.test_supervised.homogeneity_score": {
  "data": {
   "shadows": "sklearn.metrics.cluster.homogeneity_score"
  },
  "type": "import"
 },
 "sklearn.metrics.cluster.tests.test_supervised.ignore_warnings": {
  "data": {
   "shadows": "sklearn.utils._testing.ignore_warnings"
  },
  "type": "import"
 },
 "sklearn.metrics.cluster.tests.test_supervised.mutual_info_score": {
  "data": {
   "shadows": "sklearn.metrics.cluster.mutual_info_score"
  },
  "type": "import"
 },
 "sklearn.metrics.cluster.tests.test_supervised.normalized_mutual_info_score": {
  "data": {
   "shadows": "sklearn.metrics.cluster.normalized_mutual_info_score"
  },
  "type": "import"
 },
 "sklearn.metrics.cluster.tests.test_supervised.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.metrics.cluster.tests.test_supervised.pair_confusion_matrix": {
  "data": {
   "shadows": "sklearn.metrics.cluster.pair_confusion_matrix"
  },
  "type": "import"
 },
 "sklearn.metrics.cluster.tests.test_supervised.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.metrics.cluster.tests.test_supervised.rand_score": {
  "data": {
   "shadows": "sklearn.metrics.cluster.rand_score"
  },
  "type": "import"
 },
 "sklearn.metrics.cluster.tests.test_supervised.score_funcs": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "sklearn.metrics.cluster.tests.test_supervised.test_adjusted_mutual_info_score": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "list",
    "numpy.array",
    "sklearn.metrics.cluster.adjusted_mutual_info_score",
    "sklearn.metrics.cluster.contingency_matrix",
    "sklearn.metrics.cluster.expected_mutual_information",
    "sklearn.metrics.cluster.mutual_info_score",
    "sklearn.metrics.cluster.tests.test_supervised.pytest",
    "sklearn.utils._testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.cluster.tests.test_supervised.test_adjustment_for_chance": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "FutureWarning",
    "numpy.abs",
    "numpy.testing.assert_array_almost_equal",
    "sklearn.metrics.cluster.adjusted_rand_score",
    "sklearn.metrics.cluster.tests.test_supervised.uniform_labelings_scores",
    "sklearn.utils._testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.cluster.tests.test_supervised.test_beta_parameter": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "sklearn.metrics.cluster.homogeneity_completeness_v_measure",
    "sklearn.metrics.cluster.v_measure_score",
    "sklearn.utils._testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.cluster.tests.test_supervised.test_check_clustering_error": {
  "data": {
   "lineno": 371,
   "symbols_in_volume": [
    "UserWarning",
    "numpy.linspace",
    "numpy.random.RandomState",
    "sklearn.metrics.cluster._supervised.check_clusterings",
    "sklearn.metrics.cluster.tests.test_supervised.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.cluster.tests.test_supervised.test_complete_but_not_homogeneous_labeling": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "sklearn.metrics.cluster.homogeneity_completeness_v_measure",
    "sklearn.utils._testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.cluster.tests.test_supervised.test_contingency_matrix": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "numpy.histogram2d",
    "numpy.testing.assert_array_almost_equal",
    "sklearn.metrics.cluster.contingency_matrix"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.cluster.tests.test_supervised.test_contingency_matrix_sparse": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "numpy.testing.assert_array_almost_equal",
    "sklearn.metrics.cluster.contingency_matrix",
    "sklearn.metrics.cluster.tests.test_supervised.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.cluster.tests.test_supervised.test_entropy": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "sklearn.metrics.cluster.entropy",
    "sklearn.utils._testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.cluster.tests.test_supervised.test_error_messages_on_wrong_input": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "FutureWarning",
    "ValueError",
    "score_func",
    "sklearn.metrics.cluster.tests.test_supervised.pytest",
    "sklearn.metrics.cluster.tests.test_supervised.score_funcs",
    "sklearn.utils._testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.cluster.tests.test_supervised.test_exactly_zero_info_score": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "FutureWarning",
    "int",
    "numpy.arange",
    "numpy.logspace",
    "numpy.ones",
    "sklearn.metrics.cluster.adjusted_mutual_info_score",
    "sklearn.metrics.cluster.normalized_mutual_info_score",
    "sklearn.metrics.cluster.tests.test_supervised.pytest",
    "sklearn.metrics.cluster.v_measure_score",
    "sklearn.utils._testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.cluster.tests.test_supervised.test_expected_mutual_info_overflow": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.metrics.cluster.expected_mutual_information"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.cluster.tests.test_supervised.test_fowlkes_mallows_score": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": [
    "numpy.sqrt",
    "sklearn.metrics.cluster.fowlkes_mallows_score",
    "sklearn.utils._testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.cluster.tests.test_supervised.test_fowlkes_mallows_score_properties": {
  "data": {
   "lineno": 337,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.sqrt",
    "sklearn.metrics.cluster.fowlkes_mallows_score",
    "sklearn.utils._testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.cluster.tests.test_supervised.test_generalized_average": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "sklearn.metrics.cluster._supervised._generalized_average"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.cluster.tests.test_supervised.test_homogeneous_but_not_complete_labeling": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "sklearn.metrics.cluster.homogeneity_completeness_v_measure",
    "sklearn.utils._testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.cluster.tests.test_supervised.test_int_overflow_mutual_info_fowlkes_mallows_score": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.metrics.cluster.fowlkes_mallows_score",
    "sklearn.metrics.cluster.mutual_info_score",
    "sklearn.utils.assert_all_finite"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.cluster.tests.test_supervised.test_mutual_info_score_positive_constant_label": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": [
    "sklearn.metrics.cluster.mutual_info_score",
    "sklearn.metrics.cluster.tests.test_supervised.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.cluster.tests.test_supervised.test_non_consecutive_labels": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "sklearn.metrics.cluster.adjusted_rand_score",
    "sklearn.metrics.cluster.homogeneity_completeness_v_measure",
    "sklearn.metrics.cluster.rand_score",
    "sklearn.utils._testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.cluster.tests.test_supervised.test_not_complete_and_not_homogeneous_labeling": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "sklearn.metrics.cluster.homogeneity_completeness_v_measure",
    "sklearn.utils._testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.cluster.tests.test_supervised.test_pair_confusion_matrix": {
  "data": {
   "lineno": 406,
   "symbols_in_volume": [
    "int",
    "len",
    "numpy.hstack",
    "numpy.int64",
    "numpy.testing.assert_array_equal",
    "numpy.zeros",
    "range",
    "sklearn.metrics.cluster.pair_confusion_matrix"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.cluster.tests.test_supervised.test_pair_confusion_matrix_fully_dispersed": {
  "data": {
   "lineno": 384,
   "symbols_in_volume": [
    "list",
    "numpy.array",
    "numpy.testing.assert_array_equal",
    "range",
    "sklearn.metrics.cluster.pair_confusion_matrix"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.cluster.tests.test_supervised.test_pair_confusion_matrix_single_cluster": {
  "data": {
   "lineno": 395,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.assert_array_equal",
    "numpy.zeros",
    "sklearn.metrics.cluster.pair_confusion_matrix"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.cluster.tests.test_supervised.test_perfect_matches": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "FutureWarning",
    "score_func",
    "sklearn.metrics.cluster.adjusted_mutual_info_score",
    "sklearn.metrics.cluster.normalized_mutual_info_score",
    "sklearn.metrics.cluster.tests.test_supervised.pytest",
    "sklearn.metrics.cluster.tests.test_supervised.score_funcs",
    "sklearn.utils._testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.cluster.tests.test_supervised.test_rand_score": {
  "data": {
   "lineno": 436,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose",
    "sklearn.metrics.cluster.rand_score"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.cluster.tests.test_supervised.test_rand_score_edge_cases": {
  "data": {
   "lineno": 425,
   "symbols_in_volume": [
    "list",
    "numpy.testing.assert_allclose",
    "numpy.zeros",
    "range",
    "sklearn.metrics.cluster.rand_score",
    "sklearn.metrics.cluster.tests.test_supervised.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.cluster.tests.test_supervised.test_v_measure_and_mutual_information": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "int",
    "numpy.logspace",
    "numpy.random.RandomState",
    "sklearn.metrics.cluster.entropy",
    "sklearn.metrics.cluster.mutual_info_score",
    "sklearn.metrics.cluster.normalized_mutual_info_score",
    "sklearn.metrics.cluster.v_measure_score",
    "sklearn.utils._testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.cluster.tests.test_supervised.uniform_labelings_scores": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "FutureWarning",
    "enumerate",
    "len",
    "numpy.random.RandomState",
    "numpy.zeros",
    "random_labels",
    "range",
    "score_func",
    "sklearn.utils._testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.cluster.tests.test_supervised.v_measure_score": {
  "data": {
   "shadows": "sklearn.metrics.cluster.v_measure_score"
  },
  "type": "import"
 },
 "sklearn.metrics.cluster.tests.test_unsupervised": {
  "data": {},
  "type": "module"
 },
 "sklearn.metrics.cluster.tests.test_unsupervised.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.metrics.cluster.tests.test_unsupervised.assert_raises_on_all_points_same_cluster": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "ValueError",
    "func",
    "numpy.arange",
    "numpy.random.RandomState",
    "sklearn.metrics.cluster.tests.test_unsupervised.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.cluster.tests.test_unsupervised.assert_raises_on_only_one_label": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "ValueError",
    "func",
    "numpy.random.RandomState",
    "numpy.zeros",
    "sklearn.metrics.cluster.tests.test_unsupervised.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.cluster.tests.test_unsupervised.calinski_harabasz_score": {
  "data": {
   "shadows": "sklearn.metrics.cluster.calinski_harabasz_score"
  },
  "type": "import"
 },
 "sklearn.metrics.cluster.tests.test_unsupervised.csr_matrix": {
  "data": {
   "shadows": "scipy.sparse.csr_matrix"
  },
  "type": "import"
 },
 "sklearn.metrics.cluster.tests.test_unsupervised.datasets": {
  "data": {
   "shadows": "sklearn.datasets"
  },
  "type": "import"
 },
 "sklearn.metrics.cluster.tests.test_unsupervised.davies_bouldin_score": {
  "data": {
   "shadows": "sklearn.metrics.cluster.davies_bouldin_score"
  },
  "type": "import"
 },
 "sklearn.metrics.cluster.tests.test_unsupervised.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.metrics.cluster.tests.test_unsupervised.pairwise_distances": {
  "data": {
   "shadows": "sklearn.metrics.pairwise_distances"
  },
  "type": "import"
 },
 "sklearn.metrics.cluster.tests.test_unsupervised.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.metrics.cluster.tests.test_unsupervised.silhouette_samples": {
  "data": {
   "shadows": "sklearn.metrics.cluster.silhouette_samples"
  },
  "type": "import"
 },
 "sklearn.metrics.cluster.tests.test_unsupervised.silhouette_score": {
  "data": {
   "shadows": "sklearn.metrics.cluster.silhouette_score"
  },
  "type": "import"
 },
 "sklearn.metrics.cluster.tests.test_unsupervised.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.metrics.cluster.tests.test_unsupervised.test_calinski_harabasz_score": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "numpy.ones",
    "sklearn.metrics.cluster.calinski_harabasz_score",
    "sklearn.metrics.cluster.tests.test_unsupervised.assert_raises_on_all_points_same_cluster",
    "sklearn.metrics.cluster.tests.test_unsupervised.assert_raises_on_only_one_label",
    "sklearn.metrics.cluster.tests.test_unsupervised.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.cluster.tests.test_unsupervised.test_cluster_size_1": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.isnan",
    "sklearn.metrics.cluster.silhouette_samples",
    "sklearn.metrics.cluster.silhouette_score",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.cluster.tests.test_unsupervised.test_correct_labelsize": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.arange",
    "numpy.unique",
    "numpy.zeros",
    "sklearn.datasets.load_iris",
    "sklearn.metrics.cluster.silhouette_score",
    "sklearn.metrics.cluster.tests.test_unsupervised.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.cluster.tests.test_unsupervised.test_davies_bouldin_score": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "len",
    "numpy.ones",
    "numpy.sqrt",
    "sklearn.metrics.cluster.davies_bouldin_score",
    "sklearn.metrics.cluster.tests.test_unsupervised.assert_raises_on_all_points_same_cluster",
    "sklearn.metrics.cluster.tests.test_unsupervised.assert_raises_on_only_one_label",
    "sklearn.metrics.cluster.tests.test_unsupervised.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.cluster.tests.test_unsupervised.test_non_encoded_labels": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "sklearn.datasets.load_iris",
    "sklearn.metrics.cluster.silhouette_samples",
    "sklearn.metrics.cluster.silhouette_score",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.cluster.tests.test_unsupervised.test_non_numpy_labels": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "list",
    "sklearn.datasets.load_iris",
    "sklearn.metrics.cluster.silhouette_score"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.cluster.tests.test_unsupervised.test_silhouette": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "int",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.dok_matrix",
    "scipy.sparse.lil_matrix",
    "sklearn.datasets.load_iris",
    "sklearn.metrics.cluster.silhouette_score",
    "sklearn.metrics.cluster.tests.test_unsupervised.pytest",
    "sklearn.metrics.pairwise_distances"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.cluster.tests.test_unsupervised.test_silhouette_nonzero_diag": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "numpy.finfo",
    "numpy.float32",
    "numpy.float64",
    "sklearn.metrics.cluster.silhouette_samples",
    "sklearn.metrics.cluster.tests.test_unsupervised.pytest",
    "sklearn.metrics.pairwise_distances"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.cluster.tests.test_unsupervised.test_silhouette_paper_example": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.tril_indices",
    "numpy.zeros",
    "sklearn.metrics.cluster.silhouette_samples",
    "sklearn.metrics.cluster.silhouette_score",
    "sklearn.metrics.cluster.tests.test_unsupervised.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.pairwise": {
  "data": {
   "symbols_in_volume": [
    "frozenset",
    "sklearn.metrics.pairwise.additive_chi2_kernel",
    "sklearn.metrics.pairwise.chi2_kernel",
    "sklearn.metrics.pairwise.cosine_distances",
    "sklearn.metrics.pairwise.cosine_similarity",
    "sklearn.metrics.pairwise.euclidean_distances",
    "sklearn.metrics.pairwise.haversine_distances",
    "sklearn.metrics.pairwise.laplacian_kernel",
    "sklearn.metrics.pairwise.linear_kernel",
    "sklearn.metrics.pairwise.manhattan_distances",
    "sklearn.metrics.pairwise.nan_euclidean_distances",
    "sklearn.metrics.pairwise.paired_cosine_distances",
    "sklearn.metrics.pairwise.paired_euclidean_distances",
    "sklearn.metrics.pairwise.paired_manhattan_distances",
    "sklearn.metrics.pairwise.polynomial_kernel",
    "sklearn.metrics.pairwise.rbf_kernel",
    "sklearn.metrics.pairwise.sigmoid_kernel"
   ]
  },
  "type": "module"
 },
 "sklearn.metrics.pairwise.DistanceMetric": {
  "data": {
   "shadows": "sklearn.neighbors.DistanceMetric"
  },
  "type": "import"
 },
 "sklearn.metrics.pairwise.GPKernel": {
  "data": {
   "shadows": "Kernel"
  },
  "type": "import"
 },
 "sklearn.metrics.pairwise.KERNEL_PARAMS": {
  "data": {
   "lineno": 1848
  },
  "type": "constant"
 },
 "sklearn.metrics.pairwise.PAIRED_DISTANCES": {
  "data": {
   "lineno": 914
  },
  "type": "constant"
 },
 "sklearn.metrics.pairwise.PAIRWISE_BOOLEAN_FUNCTIONS": {
  "data": {
   "lineno": 1794
  },
  "type": "constant"
 },
 "sklearn.metrics.pairwise.PAIRWISE_DISTANCE_FUNCTIONS": {
  "data": {
   "lineno": 1302
  },
  "type": "constant"
 },
 "sklearn.metrics.pairwise.PAIRWISE_KERNEL_FUNCTIONS": {
  "data": {
   "lineno": 1807
  },
  "type": "constant"
 },
 "sklearn.metrics.pairwise.Parallel": {
  "data": {
   "shadows": "joblib.Parallel"
  },
  "type": "import"
 },
 "sklearn.metrics.pairwise._NAN_METRICS": {
  "data": {
   "lineno": 1416
  },
  "type": "constant"
 },
 "sklearn.metrics.pairwise._VALID_METRICS": {
  "data": {
   "lineno": 1408
  },
  "type": "constant"
 },
 "sklearn.metrics.pairwise._argmin_min_reduce": {
  "data": {
   "lineno": 511,
   "symbols_in_volume": [
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.pairwise._check_chunk_size": {
  "data": {
   "lineno": 1419,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "_num_samples",
    "any",
    "hasattr",
    "isinstance",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.pairwise._dist_wrapper": {
  "data": {
   "lineno": 1345,
   "symbols_in_volume": [
    "dist_func"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.pairwise._euclidean_distances_upcast": {
  "data": {
   "lineno": 442,
   "symbols_in_volume": [
    "enumerate",
    "gen_batches",
    "int",
    "max",
    "numpy.empty",
    "numpy.float32",
    "numpy.float64",
    "numpy.newaxis",
    "numpy.prod",
    "numpy.sqrt",
    "row_norms",
    "safe_sparse_dot",
    "scipy.sparse.issparse"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.pairwise._pairwise_callable": {
  "data": {
   "lineno": 1376,
   "symbols_in_volume": [
    "metric",
    "numpy.empty",
    "numpy.zeros",
    "range",
    "sklearn.metrics.pairwise.check_pairwise_arrays",
    "sklearn.metrics.pairwise.itertools"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.pairwise._parallel_pairwise": {
  "data": {
   "lineno": 1350,
   "symbols_in_volume": [
    "_num_samples",
    "delayed",
    "fd",
    "func",
    "gen_even_slices",
    "joblib.Parallel",
    "joblib.effective_n_jobs",
    "numpy.empty",
    "numpy.fill_diagonal",
    "sklearn.metrics.pairwise._dist_wrapper",
    "sklearn.metrics.pairwise._return_float_dtype",
    "sklearn.metrics.pairwise.euclidean_distances"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.pairwise._precompute_metric_params": {
  "data": {
   "lineno": 1440,
   "symbols_in_volume": [
    "FutureWarning",
    "metric",
    "numpy.cov",
    "numpy.float64",
    "numpy.linalg.inv",
    "numpy.var",
    "numpy.vstack",
    "parse_version",
    "sklearn.metrics.pairwise.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.pairwise._return_float_dtype": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "float",
    "isinstance",
    "numpy.asarray",
    "numpy.float32",
    "numpy.ndarray",
    "scipy.sparse.issparse"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.pairwise.additive_chi2_kernel": {
  "data": {
   "lineno": 1194,
   "symbols_in_volume": [
    "ValueError",
    "_chi2_kernel_fast",
    "numpy.zeros",
    "scipy.sparse.issparse",
    "sklearn.metrics.pairwise.check_pairwise_arrays"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.pairwise.check_paired_arrays": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.metrics.pairwise.check_pairwise_arrays"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.pairwise.check_pairwise_arrays": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "ValueError",
    "check_array",
    "sklearn.metrics.pairwise._return_float_dtype"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.pairwise.chi2_kernel": {
  "data": {
   "lineno": 1254,
   "symbols_in_volume": [
    "numpy.exp",
    "sklearn.metrics.pairwise.additive_chi2_kernel"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.pairwise.cosine_distances": {
  "data": {
   "lineno": 807,
   "symbols_in_volume": [
    "numpy.clip",
    "numpy.diag_indices_from",
    "sklearn.metrics.pairwise.cosine_similarity"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.pairwise.cosine_similarity": {
  "data": {
   "lineno": 1145,
   "symbols_in_volume": [
    "normalize",
    "safe_sparse_dot",
    "sklearn.metrics.pairwise.check_pairwise_arrays"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.pairwise.csr_matrix": {
  "data": {
   "shadows": "scipy.sparse.csr_matrix"
  },
  "type": "import"
 },
 "sklearn.metrics.pairwise.distance": {
  "data": {
   "shadows": "scipy.spatial.distance"
  },
  "type": "import"
 },
 "sklearn.metrics.pairwise.distance_metrics": {
  "data": {
   "lineno": 1317,
   "symbols_in_volume": [
    "sklearn.metrics.pairwise.PAIRWISE_DISTANCE_FUNCTIONS"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.pairwise.effective_n_jobs": {
  "data": {
   "shadows": "joblib.effective_n_jobs"
  },
  "type": "import"
 },
 "sklearn.metrics.pairwise.euclidean_distances": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "ValueError",
    "check_array",
    "numpy.atleast_2d",
    "numpy.fill_diagonal",
    "numpy.float32",
    "numpy.maximum",
    "numpy.newaxis",
    "numpy.sqrt",
    "row_norms",
    "safe_sparse_dot",
    "sklearn.metrics.pairwise._euclidean_distances_upcast",
    "sklearn.metrics.pairwise.check_pairwise_arrays"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.pairwise.haversine_distances": {
  "data": {
   "lineno": 677,
   "symbols_in_volume": [
    "sklearn.neighbors.DistanceMetric.get_metric"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.pairwise.issparse": {
  "data": {
   "shadows": "scipy.sparse.issparse"
  },
  "type": "import"
 },
 "sklearn.metrics.pairwise.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "sklearn.metrics.pairwise.kernel_metrics": {
  "data": {
   "lineno": 1821,
   "symbols_in_volume": [
    "sklearn.metrics.pairwise.PAIRWISE_KERNEL_FUNCTIONS"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.pairwise.laplacian_kernel": {
  "data": {
   "lineno": 1111,
   "symbols_in_volume": [
    "numpy.exp",
    "sklearn.metrics.pairwise.check_pairwise_arrays",
    "sklearn.metrics.pairwise.manhattan_distances"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.pairwise.linear_kernel": {
  "data": {
   "lineno": 982,
   "symbols_in_volume": [
    "safe_sparse_dot",
    "sklearn.metrics.pairwise.check_pairwise_arrays"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.pairwise.manhattan_distances": {
  "data": {
   "lineno": 726,
   "symbols_in_volume": [
    "TypeError",
    "_sparse_manhattan",
    "numpy.abs",
    "numpy.newaxis",
    "numpy.zeros",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.issparse",
    "scipy.spatial.distance.cdist",
    "sklearn.metrics.pairwise.check_pairwise_arrays"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.pairwise.nan_euclidean_distances": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": [
    "_get_mask",
    "is_scalar_nan",
    "numpy.clip",
    "numpy.dot",
    "numpy.fill_diagonal",
    "numpy.maximum",
    "numpy.nan",
    "numpy.sqrt",
    "sklearn.metrics.pairwise.check_pairwise_arrays",
    "sklearn.metrics.pairwise.euclidean_distances"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.pairwise.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.metrics.pairwise.paired_cosine_distances": {
  "data": {
   "lineno": 889,
   "symbols_in_volume": [
    "normalize",
    "row_norms",
    "sklearn.metrics.pairwise.check_paired_arrays"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.pairwise.paired_distances": {
  "data": {
   "lineno": 923,
   "symbols_in_volume": [
    "ValueError",
    "callable",
    "func",
    "len",
    "metric",
    "numpy.zeros",
    "range",
    "sklearn.metrics.pairwise.PAIRED_DISTANCES",
    "sklearn.metrics.pairwise.check_paired_arrays"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.pairwise.paired_euclidean_distances": {
  "data": {
   "lineno": 845,
   "symbols_in_volume": [
    "row_norms",
    "sklearn.metrics.pairwise.check_paired_arrays"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.pairwise.paired_manhattan_distances": {
  "data": {
   "lineno": 865,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.array",
    "numpy.squeeze",
    "scipy.sparse.issparse",
    "sklearn.metrics.pairwise.check_paired_arrays"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.pairwise.pairwise_distances": {
  "data": {
   "lineno": 1638,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "bool",
    "callable",
    "check_non_negative",
    "func",
    "functools.partial",
    "joblib.effective_n_jobs",
    "metric",
    "scipy.sparse.issparse",
    "scipy.spatial.distance.cdist",
    "scipy.spatial.distance.pdist",
    "scipy.spatial.distance.squareform",
    "sklearn.metrics.pairwise.PAIRWISE_DISTANCE_FUNCTIONS",
    "sklearn.metrics.pairwise._VALID_METRICS",
    "sklearn.metrics.pairwise._pairwise_callable",
    "sklearn.metrics.pairwise._parallel_pairwise",
    "sklearn.metrics.pairwise._precompute_metric_params",
    "sklearn.metrics.pairwise.check_pairwise_arrays",
    "sklearn.metrics.pairwise.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.pairwise.pairwise_distances_argmin": {
  "data": {
   "lineno": 604,
   "symbols_in_volume": [
    "sklearn.metrics.pairwise.pairwise_distances_argmin_min"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.pairwise.pairwise_distances_argmin_min": {
  "data": {
   "lineno": 517,
   "symbols_in_volume": [
    "numpy.concatenate",
    "sklearn.metrics.pairwise._argmin_min_reduce",
    "sklearn.metrics.pairwise.check_pairwise_arrays",
    "sklearn.metrics.pairwise.pairwise_distances_chunked",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.pairwise.pairwise_distances_chunked": {
  "data": {
   "lineno": 1473,
   "symbols_in_volume": [
    "_num_samples",
    "gen_batches",
    "get_chunk_n_rows",
    "metric",
    "reduce_func",
    "sklearn.metrics.pairwise.PAIRWISE_DISTANCE_FUNCTIONS",
    "sklearn.metrics.pairwise._check_chunk_size",
    "sklearn.metrics.pairwise._precompute_metric_params",
    "sklearn.metrics.pairwise.euclidean_distances",
    "sklearn.metrics.pairwise.pairwise_distances",
    "slice"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.pairwise.pairwise_kernels": {
  "data": {
   "lineno": 1861,
   "symbols_in_volume": [
    "ValueError",
    "callable",
    "func",
    "functools.partial",
    "isinstance",
    "metric",
    "metric.__call__",
    "sklearn.metrics.pairwise.KERNEL_PARAMS",
    "sklearn.metrics.pairwise.PAIRWISE_KERNEL_FUNCTIONS",
    "sklearn.metrics.pairwise._pairwise_callable",
    "sklearn.metrics.pairwise._parallel_pairwise",
    "sklearn.metrics.pairwise.check_pairwise_arrays"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.pairwise.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "sklearn.metrics.pairwise.polynomial_kernel": {
  "data": {
   "lineno": 1008,
   "symbols_in_volume": [
    "safe_sparse_dot",
    "sklearn.metrics.pairwise.check_pairwise_arrays"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.pairwise.rbf_kernel": {
  "data": {
   "lineno": 1078,
   "symbols_in_volume": [
    "numpy.exp",
    "sklearn.metrics.pairwise.check_pairwise_arrays",
    "sklearn.metrics.pairwise.euclidean_distances"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.pairwise.sigmoid_kernel": {
  "data": {
   "lineno": 1044,
   "symbols_in_volume": [
    "numpy.tanh",
    "safe_sparse_dot",
    "sklearn.metrics.pairwise.check_pairwise_arrays"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.pairwise.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.metrics.setup": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.distutils.core.setup",
    "sklearn.metrics.setup.configuration"
   ]
  },
  "type": "module"
 },
 "sklearn.metrics.setup.Configuration": {
  "data": {
   "shadows": "numpy.distutils.misc_util.Configuration"
  },
  "type": "import"
 },
 "sklearn.metrics.setup.configuration": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "numpy.distutils.misc_util.Configuration",
    "sklearn.metrics.setup.os"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.setup.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "sklearn.metrics.setup.setup": {
  "data": {
   "shadows": "numpy.distutils.core.setup"
  },
  "type": "import"
 },
 "sklearn.metrics.tests": {
  "data": {},
  "type": "module"
 },
 "sklearn.metrics.tests.test_classification": {
  "data": {},
  "type": "module"
 },
 "sklearn.metrics.tests.test_classification.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_classification.LabelBinarizer": {
  "data": {
   "shadows": "sklearn.preprocessing.LabelBinarizer"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_classification.MockDataFrame": {
  "data": {
   "shadows": "sklearn.utils._mocking.MockDataFrame"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_classification.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_classification.UndefinedMetricWarning": {
  "data": {
   "shadows": "sklearn.exceptions.UndefinedMetricWarning"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_classification._check_targets": {
  "data": {
   "shadows": "sklearn.metrics._classification._check_targets"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_classification.accuracy_score": {
  "data": {
   "shadows": "sklearn.metrics.accuracy_score"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_classification.assert_allclose": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_allclose"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_classification.assert_almost_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_almost_equal"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_classification.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_classification.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_classification.assert_no_warnings": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_no_warnings"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_classification.assert_warns_div0": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_warns_div0"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_classification.assert_warns_message": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_warns_message"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_classification.average_precision_score": {
  "data": {
   "shadows": "sklearn.metrics.average_precision_score"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_classification.balanced_accuracy_score": {
  "data": {
   "shadows": "sklearn.metrics.balanced_accuracy_score"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_classification.brier_score_loss": {
  "data": {
   "shadows": "sklearn.metrics.brier_score_loss"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_classification.chain": {
  "data": {
   "shadows": "itertools.chain"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_classification.check_random_state": {
  "data": {
   "shadows": "sklearn.utils.validation.check_random_state"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_classification.classification_report": {
  "data": {
   "shadows": "sklearn.metrics.classification_report"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_classification.cohen_kappa_score": {
  "data": {
   "shadows": "sklearn.metrics.cohen_kappa_score"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_classification.confusion_matrix": {
  "data": {
   "shadows": "sklearn.metrics.confusion_matrix"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_classification.csc_matrix": {
  "data": {
   "shadows": "scipy.sparse.csc_matrix"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_classification.csr_matrix": {
  "data": {
   "shadows": "scipy.sparse.csr_matrix"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_classification.datasets": {
  "data": {
   "shadows": "sklearn.datasets"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_classification.f1_score": {
  "data": {
   "shadows": "sklearn.metrics.f1_score"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_classification.fbeta_score": {
  "data": {
   "shadows": "sklearn.metrics.fbeta_score"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_classification.hamming_loss": {
  "data": {
   "shadows": "sklearn.metrics.hamming_loss"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_classification.hinge_loss": {
  "data": {
   "shadows": "sklearn.metrics.hinge_loss"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_classification.ignore_warnings": {
  "data": {
   "shadows": "sklearn.utils._testing.ignore_warnings"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_classification.jaccard_score": {
  "data": {
   "shadows": "sklearn.metrics.jaccard_score"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_classification.label_binarize": {
  "data": {
   "shadows": "sklearn.preprocessing.label_binarize"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_classification.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_classification.log_loss": {
  "data": {
   "shadows": "sklearn.metrics.log_loss"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_classification.make_multilabel_classification": {
  "data": {
   "shadows": "sklearn.datasets.make_multilabel_classification"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_classification.make_prediction": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "int",
    "numpy.arange",
    "numpy.c_",
    "numpy.random.RandomState",
    "sklearn.datasets.load_iris",
    "sklearn.svm.SVC",
    "sklearn.utils.validation.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.matthews_corrcoef": {
  "data": {
   "shadows": "sklearn.metrics.matthews_corrcoef"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_classification.multilabel_confusion_matrix": {
  "data": {
   "shadows": "sklearn.metrics.multilabel_confusion_matrix"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_classification.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_classification.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_classification.permutations": {
  "data": {
   "shadows": "itertools.permutations"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_classification.precision_recall_fscore_support": {
  "data": {
   "shadows": "sklearn.metrics.precision_recall_fscore_support"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_classification.precision_score": {
  "data": {
   "shadows": "sklearn.metrics.precision_score"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_classification.product": {
  "data": {
   "shadows": "itertools.product"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_classification.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_classification.recall_score": {
  "data": {
   "shadows": "sklearn.metrics.recall_score"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_classification.sp_hamming": {
  "data": {
   "shadows": "scipy.spatial.distance.hamming"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_classification.svm": {
  "data": {
   "shadows": "sklearn.svm"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_classification.test__check_targets": {
  "data": {
   "lineno": 1987,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "itertools.product",
    "numpy.array",
    "numpy.squeeze",
    "sklearn.metrics._classification._check_targets",
    "sklearn.metrics.tests.test_classification.pytest",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test__check_targets_multiclass_with_both_y_true_and_y_pred_binary": {
  "data": {
   "lineno": 2083,
   "symbols_in_volume": [
    "sklearn.metrics._classification._check_targets"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_average_binary_jaccard_score": {
  "data": {
   "lineno": 1385,
   "symbols_in_volume": [
    "list",
    "numpy.array",
    "sklearn.exceptions.UndefinedMetricWarning",
    "sklearn.metrics.jaccard_score",
    "sklearn.utils._testing.assert_almost_equal",
    "sklearn.utils._testing.assert_warns_message"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_average_precision_score_duplicate_values": {
  "data": {
   "lineno": 347,
   "symbols_in_volume": [
    "sklearn.metrics.average_precision_score"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_average_precision_score_score_non_binary_class": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.metrics.average_precision_score",
    "sklearn.metrics.tests.test_classification.pytest",
    "sklearn.utils.validation.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_average_precision_score_tied_values": {
  "data": {
   "lineno": 358,
   "symbols_in_volume": [
    "sklearn.metrics.average_precision_score"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_balanced_accuracy_score": {
  "data": {
   "lineno": 2345,
   "symbols_in_volume": [
    "numpy.full_like",
    "numpy.unique",
    "sklearn.metrics.balanced_accuracy_score",
    "sklearn.metrics.recall_score",
    "sklearn.metrics.tests.test_classification.pytest",
    "sklearn.utils._testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_balanced_accuracy_score_unseen": {
  "data": {
   "lineno": 2340,
   "symbols_in_volume": [
    "UserWarning",
    "sklearn.metrics.balanced_accuracy_score",
    "sklearn.utils._testing.assert_warns_message"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_brier_score_loss": {
  "data": {
   "lineno": 2300,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.array",
    "scipy.linalg.norm",
    "sklearn.metrics.brier_score_loss",
    "sklearn.metrics.tests.test_classification.pytest",
    "sklearn.utils._testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_classification_report_dictionary_output": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "float",
    "int",
    "isinstance",
    "len",
    "numpy.arange",
    "sklearn.datasets.load_iris",
    "sklearn.metrics.classification_report",
    "sklearn.metrics.tests.test_classification.make_prediction",
    "sklearn.utils._testing.assert_almost_equal",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_classification_report_labels_target_names_unequal_length": {
  "data": {
   "lineno": 1154,
   "symbols_in_volume": [
    "UserWarning",
    "sklearn.metrics.classification_report",
    "sklearn.utils._testing.assert_warns_message"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_classification_report_multiclass": {
  "data": {
   "lineno": 989,
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "sklearn.datasets.load_iris",
    "sklearn.metrics.classification_report",
    "sklearn.metrics.tests.test_classification.make_prediction"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_classification_report_multiclass_balanced": {
  "data": {
   "lineno": 1012,
   "symbols_in_volume": [
    "sklearn.metrics.classification_report"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_classification_report_multiclass_with_digits": {
  "data": {
   "lineno": 1050,
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "sklearn.datasets.load_iris",
    "sklearn.metrics.classification_report",
    "sklearn.metrics.tests.test_classification.make_prediction"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_classification_report_multiclass_with_label_detection": {
  "data": {
   "lineno": 1030,
   "symbols_in_volume": [
    "sklearn.datasets.load_iris",
    "sklearn.metrics.classification_report",
    "sklearn.metrics.tests.test_classification.make_prediction"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_classification_report_multiclass_with_long_string_label": {
  "data": {
   "lineno": 1131,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.metrics.classification_report",
    "sklearn.metrics.tests.test_classification.make_prediction"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_classification_report_multiclass_with_string_label": {
  "data": {
   "lineno": 1073,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.metrics.classification_report",
    "sklearn.metrics.tests.test_classification.make_prediction"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_classification_report_multiclass_with_unicode_label": {
  "data": {
   "lineno": 1109,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.metrics.classification_report",
    "sklearn.metrics.tests.test_classification.make_prediction"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_classification_report_no_labels_target_names_unequal_length": {
  "data": {
   "lineno": 1167,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.metrics.classification_report",
    "sklearn.metrics.tests.test_classification.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_classification_report_output_dict_empty_input": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "dict",
    "float",
    "isinstance",
    "numpy.nan",
    "sklearn.metrics.classification_report",
    "sklearn.utils._testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_classification_report_zero_division_warning": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "len",
    "sklearn.metrics.classification_report",
    "sklearn.metrics.tests.test_classification.pytest",
    "sklearn.metrics.tests.test_classification.warnings",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_cohen_kappa": {
  "data": {
   "lineno": 593,
   "symbols_in_volume": [
    "numpy.append",
    "numpy.array",
    "sklearn.metrics.cohen_kappa_score",
    "sklearn.utils._testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_confusion_matrix_binary": {
  "data": {
   "lineno": 402,
   "symbols_in_volume": [
    "sklearn.metrics.tests.test_classification.make_prediction",
    "str",
    "test"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_confusion_matrix_binary.test": {
  "data": {
   "lineno": 406,
   "symbols_in_volume": [
    "numpy.sqrt",
    "sklearn.metrics.confusion_matrix",
    "sklearn.metrics.matthews_corrcoef",
    "sklearn.utils._testing.assert_array_almost_equal",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_confusion_matrix_dtype": {
  "data": {
   "lineno": 960,
   "symbols_in_volume": [
    "len",
    "numpy.bool_",
    "numpy.float32",
    "numpy.float64",
    "numpy.full",
    "numpy.int32",
    "numpy.int64",
    "numpy.ones",
    "numpy.uint32",
    "numpy.uint64",
    "object",
    "sklearn.metrics.confusion_matrix"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_confusion_matrix_error": {
  "data": {
   "lineno": 937,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.metrics.confusion_matrix",
    "sklearn.metrics.tests.test_classification.make_prediction",
    "sklearn.metrics.tests.test_classification.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_confusion_matrix_multiclass_subset_labels": {
  "data": {
   "lineno": 915,
   "symbols_in_volume": [
    "numpy.max",
    "sklearn.metrics.confusion_matrix",
    "sklearn.metrics.tests.test_classification.make_prediction",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_confusion_matrix_normalize": {
  "data": {
   "lineno": 553,
   "symbols_in_volume": [
    "itertools.chain",
    "itertools.permutations",
    "list",
    "sklearn.metrics.confusion_matrix",
    "sklearn.metrics.tests.test_classification.pytest",
    "sklearn.utils._testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_confusion_matrix_normalize_single_class": {
  "data": {
   "lineno": 575,
   "symbols_in_volume": [
    "sklearn.metrics.confusion_matrix",
    "sklearn.metrics.tests.test_classification.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_confusion_matrix_normalize_wrong_option": {
  "data": {
   "lineno": 568,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.metrics.confusion_matrix",
    "sklearn.metrics.tests.test_classification.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_confusion_matrix_on_zero_length_input": {
  "data": {
   "lineno": 949,
   "symbols_in_volume": [
    "int",
    "len",
    "numpy.zeros",
    "sklearn.metrics.confusion_matrix",
    "sklearn.metrics.tests.test_classification.pytest",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_fscore_warnings": {
  "data": {
   "lineno": 1935,
   "symbols_in_volume": [
    "functools.partial",
    "len",
    "numpy.array",
    "score",
    "sklearn.metrics.f1_score",
    "sklearn.metrics.fbeta_score",
    "sklearn.metrics.tests.test_classification.pytest",
    "sklearn.metrics.tests.test_classification.warnings",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_hinge_loss_binary": {
  "data": {
   "lineno": 2090,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.metrics.hinge_loss"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_hinge_loss_multiclass": {
  "data": {
   "lineno": 2100,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.clip",
    "numpy.mean",
    "sklearn.metrics.hinge_loss"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_hinge_loss_multiclass_invariance_lists": {
  "data": {
   "lineno": 2190,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.clip",
    "numpy.mean",
    "sklearn.metrics.hinge_loss"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_hinge_loss_multiclass_missing_labels_only_two_unq_in_y_true": {
  "data": {
   "lineno": 2161,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.clip",
    "numpy.mean",
    "sklearn.metrics.hinge_loss",
    "sklearn.utils._testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_hinge_loss_multiclass_missing_labels_with_labels_none": {
  "data": {
   "lineno": 2124,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "sklearn.metrics.hinge_loss",
    "sklearn.metrics.tests.test_classification.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_hinge_loss_multiclass_with_missing_labels": {
  "data": {
   "lineno": 2138,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.clip",
    "numpy.mean",
    "sklearn.metrics.hinge_loss"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_jaccard_score_validation": {
  "data": {
   "lineno": 1246,
   "symbols_in_volume": [
    "UserWarning",
    "ValueError",
    "numpy.array",
    "sklearn.metrics.jaccard_score",
    "sklearn.metrics.tests.test_classification.pytest",
    "sklearn.utils._testing.assert_warns_message"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_jaccard_score_zero_division_set_value": {
  "data": {
   "lineno": 1425,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "sklearn.metrics.jaccard_score",
    "sklearn.metrics.tests.test_classification.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_jaccard_score_zero_division_warning": {
  "data": {
   "lineno": 1410,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.exceptions.UndefinedMetricWarning",
    "sklearn.metrics.jaccard_score",
    "sklearn.metrics.tests.test_classification.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_log_loss": {
  "data": {
   "lineno": 2217,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "numpy.asarray",
    "numpy.clip",
    "numpy.log",
    "numpy.mean",
    "sklearn.metrics.log_loss",
    "sklearn.metrics.tests.test_classification.pytest",
    "sklearn.utils._testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_log_loss_pandas_input": {
  "data": {
   "lineno": 2283,
   "symbols_in_volume": [
    "ImportError",
    "PredInputType",
    "TrueInputType",
    "numpy.array",
    "pandas.DataFrame",
    "pandas.Series",
    "sklearn.metrics.log_loss",
    "sklearn.utils._mocking.MockDataFrame",
    "sklearn.utils._testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_matthews_corrcoef": {
  "data": {
   "lineno": 670,
   "symbols_in_volume": [
    "AssertionError",
    "len",
    "numpy.random.RandomState",
    "numpy.where",
    "sklearn.metrics.matthews_corrcoef",
    "sklearn.metrics.tests.test_classification.pytest",
    "sklearn.preprocessing.label_binarize",
    "sklearn.utils._testing.assert_almost_equal",
    "sklearn.utils._testing.assert_warns_div0"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_matthews_corrcoef_against_jurman": {
  "data": {
   "lineno": 639,
   "symbols_in_volume": [
    "len",
    "numpy.random.RandomState",
    "numpy.sqrt",
    "numpy.sum",
    "range",
    "sklearn.metrics.confusion_matrix",
    "sklearn.metrics.matthews_corrcoef",
    "sklearn.utils._testing.assert_almost_equal",
    "sum"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_matthews_corrcoef_against_numpy_corrcoef": {
  "data": {
   "lineno": 630,
   "symbols_in_volume": [
    "numpy.corrcoef",
    "numpy.random.RandomState",
    "sklearn.metrics.matthews_corrcoef",
    "sklearn.utils._testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_matthews_corrcoef_multiclass": {
  "data": {
   "lineno": 712,
   "symbols_in_volume": [
    "RuntimeWarning",
    "chr",
    "numpy.random.RandomState",
    "numpy.sqrt",
    "ord",
    "sklearn.metrics.matthews_corrcoef",
    "sklearn.utils._testing.assert_almost_equal",
    "sklearn.utils._testing.assert_warns_message"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_matthews_corrcoef_nan": {
  "data": {
   "lineno": 624,
   "symbols_in_volume": [
    "sklearn.metrics.matthews_corrcoef",
    "sklearn.utils._testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_matthews_corrcoef_overflow": {
  "data": {
   "lineno": 768,
   "symbols_in_volume": [
    "mcc_safe",
    "numpy.random.RandomState",
    "numpy.repeat",
    "random_ys",
    "sklearn.metrics.matthews_corrcoef",
    "sklearn.metrics.tests.test_classification.pytest",
    "sklearn.utils._testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_matthews_corrcoef_overflow.mcc_safe": {
  "data": {
   "lineno": 773,
   "symbols_in_volume": [
    "len",
    "numpy.sqrt",
    "sklearn.metrics.confusion_matrix"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_matthews_corrcoef_overflow.random_ys": {
  "data": {
   "lineno": 785
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_multiclass_jaccard_score": {
  "data": {
   "lineno": 1352,
   "symbols_in_volume": [
    "bin_jaccard_score",
    "functools.partial",
    "list",
    "multi_jaccard_score",
    "numpy.array",
    "sklearn.metrics.jaccard_score",
    "sklearn.preprocessing.LabelBinarizer",
    "sklearn.utils._testing.assert_almost_equal",
    "sklearn.utils._testing.ignore_warnings",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_multilabel_accuracy_score_subset_accuracy": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.logical_not",
    "numpy.zeros",
    "sklearn.metrics.accuracy_score"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_multilabel_classification_report": {
  "data": {
   "lineno": 1179,
   "symbols_in_volume": [
    "sklearn.datasets.make_multilabel_classification",
    "sklearn.metrics.classification_report",
    "sklearn.utils._testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_multilabel_confusion_matrix_binary": {
  "data": {
   "lineno": 424,
   "symbols_in_volume": [
    "sklearn.metrics.tests.test_classification.make_prediction",
    "str",
    "test"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_multilabel_confusion_matrix_binary.test": {
  "data": {
   "lineno": 428,
   "symbols_in_volume": [
    "sklearn.metrics.multilabel_confusion_matrix",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_multilabel_confusion_matrix_errors": {
  "data": {
   "lineno": 521,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "sklearn.metrics.multilabel_confusion_matrix",
    "sklearn.metrics.tests.test_classification.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_multilabel_confusion_matrix_multiclass": {
  "data": {
   "lineno": 438,
   "symbols_in_volume": [
    "list",
    "sklearn.metrics.tests.test_classification.make_prediction",
    "str",
    "test"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_multilabel_confusion_matrix_multiclass.test": {
  "data": {
   "lineno": 442,
   "symbols_in_volume": [
    "sklearn.metrics.multilabel_confusion_matrix",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_multilabel_confusion_matrix_multilabel": {
  "data": {
   "lineno": 470,
   "symbols_in_volume": [
    "numpy.array",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "sklearn.metrics.multilabel_confusion_matrix",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_multilabel_hamming_loss": {
  "data": {
   "lineno": 1226,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.zeros",
    "numpy.zeros_like",
    "scipy.spatial.distance.hamming",
    "sklearn.metrics.hamming_loss"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_multilabel_jaccard_score": {
  "data": {
   "lineno": 1281,
   "symbols_in_volume": [
    "ValueError",
    "list",
    "numpy.array",
    "numpy.logical_not",
    "numpy.zeros",
    "sklearn.exceptions.UndefinedMetricWarning",
    "sklearn.metrics.jaccard_score",
    "sklearn.metrics.tests.test_classification.pytest",
    "sklearn.utils._testing.assert_almost_equal",
    "sklearn.utils._testing.assert_array_equal",
    "sklearn.utils._testing.assert_warns_message"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_multilabel_zero_one_loss_subset": {
  "data": {
   "lineno": 1212,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.logical_not",
    "numpy.zeros",
    "sklearn.metrics.zero_one_loss"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_precision_recall_f1_no_labels": {
  "data": {
   "lineno": 1650,
   "symbols_in_volume": [
    "float",
    "numpy.zeros",
    "numpy.zeros_like",
    "sklearn.metrics.fbeta_score",
    "sklearn.metrics.precision_recall_fscore_support",
    "sklearn.metrics.tests.test_classification.pytest",
    "sklearn.utils._testing.assert_almost_equal",
    "sklearn.utils._testing.assert_no_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_precision_recall_f1_no_labels_average_none": {
  "data": {
   "lineno": 1692,
   "symbols_in_volume": [
    "float",
    "numpy.zeros",
    "numpy.zeros_like",
    "sklearn.metrics.fbeta_score",
    "sklearn.metrics.precision_recall_fscore_support",
    "sklearn.metrics.tests.test_classification.pytest",
    "sklearn.utils._testing.assert_array_almost_equal",
    "sklearn.utils._testing.assert_no_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_precision_recall_f1_no_labels_average_none_warn": {
  "data": {
   "lineno": 1729,
   "symbols_in_volume": [
    "numpy.zeros",
    "numpy.zeros_like",
    "sklearn.exceptions.UndefinedMetricWarning",
    "sklearn.metrics.fbeta_score",
    "sklearn.metrics.precision_recall_fscore_support",
    "sklearn.metrics.tests.test_classification.pytest",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_precision_recall_f1_no_labels_check_warnings": {
  "data": {
   "lineno": 1672,
   "symbols_in_volume": [
    "func",
    "numpy.zeros",
    "numpy.zeros_like",
    "sklearn.exceptions.UndefinedMetricWarning",
    "sklearn.metrics.fbeta_score",
    "sklearn.metrics.precision_recall_fscore_support",
    "sklearn.metrics.tests.test_classification.pytest",
    "sklearn.utils._testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_precision_recall_f1_score_binary": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "my_assert",
    "sklearn.metrics.f1_score",
    "sklearn.metrics.fbeta_score",
    "sklearn.metrics.precision_recall_fscore_support",
    "sklearn.metrics.precision_score",
    "sklearn.metrics.recall_score",
    "sklearn.metrics.tests.test_classification.make_prediction",
    "sklearn.utils._testing.assert_almost_equal",
    "sklearn.utils._testing.assert_array_almost_equal",
    "sklearn.utils._testing.assert_array_equal",
    "sklearn.utils._testing.assert_no_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_precision_recall_f1_score_binary_averaged": {
  "data": {
   "lineno": 875,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.average",
    "numpy.bincount",
    "numpy.mean",
    "sklearn.metrics.precision_recall_fscore_support"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_precision_recall_f1_score_multiclass": {
  "data": {
   "lineno": 803,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.metrics.f1_score",
    "sklearn.metrics.fbeta_score",
    "sklearn.metrics.precision_recall_fscore_support",
    "sklearn.metrics.precision_score",
    "sklearn.metrics.recall_score",
    "sklearn.metrics.tests.test_classification.make_prediction",
    "sklearn.metrics.tests.test_classification.pytest",
    "sklearn.utils._testing.assert_array_almost_equal",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_precision_recall_f1_score_multilabel_1": {
  "data": {
   "lineno": 1439,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.average",
    "numpy.mean",
    "sklearn.metrics.fbeta_score",
    "sklearn.metrics.precision_recall_fscore_support",
    "sklearn.utils._testing.assert_almost_equal",
    "sklearn.utils._testing.assert_array_almost_equal",
    "sklearn.utils._testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_precision_recall_f1_score_multilabel_2": {
  "data": {
   "lineno": 1508,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.average",
    "numpy.mean",
    "sklearn.metrics.fbeta_score",
    "sklearn.metrics.precision_recall_fscore_support",
    "sklearn.utils._testing.assert_almost_equal",
    "sklearn.utils._testing.assert_array_almost_equal",
    "sklearn.utils._testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_precision_recall_f1_score_with_an_empty_prediction": {
  "data": {
   "lineno": 1576,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.average",
    "numpy.mean",
    "sklearn.metrics.fbeta_score",
    "sklearn.metrics.precision_recall_fscore_support",
    "sklearn.metrics.tests.test_classification.pytest",
    "sklearn.utils._testing.assert_almost_equal",
    "sklearn.utils._testing.assert_array_almost_equal",
    "sklearn.utils._testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_precision_recall_f_binary_single_class": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "float",
    "sklearn.metrics.f1_score",
    "sklearn.metrics.fbeta_score",
    "sklearn.metrics.precision_score",
    "sklearn.metrics.recall_score",
    "sklearn.metrics.tests.test_classification.pytest",
    "sklearn.utils._testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_precision_recall_f_extra_labels": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "ValueError",
    "enumerate",
    "numpy.arange",
    "numpy.array",
    "numpy.mean",
    "sklearn.metrics.precision_recall_fscore_support",
    "sklearn.metrics.recall_score",
    "sklearn.metrics.tests.test_classification.pytest",
    "sklearn.preprocessing.label_binarize",
    "sklearn.utils._testing.assert_almost_equal",
    "sklearn.utils._testing.assert_array_almost_equal",
    "sklearn.utils._testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_precision_recall_f_ignored_labels": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": [
    "enumerate",
    "functools.partial",
    "numpy.arange",
    "recall_13",
    "recall_all",
    "sklearn.metrics.recall_score",
    "sklearn.preprocessing.label_binarize",
    "sklearn.utils._testing.assert_almost_equal",
    "sklearn.utils._testing.assert_array_almost_equal",
    "sklearn.utils._testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_precision_recall_f_unused_pos_label": {
  "data": {
   "lineno": 391,
   "symbols_in_volume": [
    "UserWarning",
    "sklearn.metrics.precision_recall_fscore_support",
    "sklearn.utils._testing.assert_warns_message"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_precision_recall_fscore_support_errors": {
  "data": {
   "lineno": 371,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.metrics.precision_recall_fscore_support",
    "sklearn.metrics.tests.test_classification.make_prediction",
    "sklearn.metrics.tests.test_classification.pytest",
    "sklearn.utils._testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_precision_refcall_f1_score_multilabel_unordered_labels": {
  "data": {
   "lineno": 860,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.metrics.precision_recall_fscore_support",
    "sklearn.metrics.tests.test_classification.pytest",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_precision_warnings": {
  "data": {
   "lineno": 1905,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "sklearn.metrics.precision_score",
    "sklearn.metrics.tests.test_classification.pytest",
    "sklearn.metrics.tests.test_classification.warnings",
    "sklearn.utils._testing.assert_no_warnings",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_prf_average_binary_data_non_binary": {
  "data": {
   "lineno": 1964,
   "symbols_in_volume": [
    "ValueError",
    "functools.partial",
    "metric",
    "numpy.array",
    "sklearn.metrics.f1_score",
    "sklearn.metrics.fbeta_score",
    "sklearn.metrics.precision_score",
    "sklearn.metrics.recall_score",
    "sklearn.metrics.tests.test_classification.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_prf_no_warnings_if_zero_division_set": {
  "data": {
   "lineno": 1832,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "sklearn.metrics.precision_recall_fscore_support",
    "sklearn.metrics.tests.test_classification.pytest",
    "sklearn.metrics.tests.test_classification.warnings",
    "sklearn.utils._testing.assert_no_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_prf_warnings": {
  "data": {
   "lineno": 1757,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.exceptions.UndefinedMetricWarning",
    "sklearn.metrics.precision_recall_fscore_support",
    "sklearn.metrics.tests.test_classification.warnings",
    "sklearn.utils._testing.assert_warns_message",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_recall_warnings": {
  "data": {
   "lineno": 1876,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "sklearn.metrics.recall_score",
    "sklearn.metrics.tests.test_classification.pytest",
    "sklearn.metrics.tests.test_classification.warnings",
    "sklearn.utils._testing.assert_no_warnings",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_zero_precision_recall": {
  "data": {
   "lineno": 895,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.seterr",
    "sklearn.metrics.f1_score",
    "sklearn.metrics.precision_score",
    "sklearn.metrics.recall_score",
    "sklearn.utils._testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_classification.zero_one_loss": {
  "data": {
   "shadows": "sklearn.metrics.zero_one_loss"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_common": {
  "data": {
   "symbols_in_volume": [
    "dict",
    "functools.partial",
    "numpy.inf",
    "numpy.nan",
    "numpy.newaxis",
    "sklearn.metrics.accuracy_score",
    "sklearn.metrics.average_precision_score",
    "sklearn.metrics.balanced_accuracy_score",
    "sklearn.metrics.brier_score_loss",
    "sklearn.metrics.cohen_kappa_score",
    "sklearn.metrics.confusion_matrix",
    "sklearn.metrics.coverage_error",
    "sklearn.metrics.dcg_score",
    "sklearn.metrics.det_curve",
    "sklearn.metrics.explained_variance_score",
    "sklearn.metrics.f1_score",
    "sklearn.metrics.fbeta_score",
    "sklearn.metrics.hamming_loss",
    "sklearn.metrics.hinge_loss",
    "sklearn.metrics.jaccard_score",
    "sklearn.metrics.label_ranking_average_precision_score",
    "sklearn.metrics.label_ranking_loss",
    "sklearn.metrics.log_loss",
    "sklearn.metrics.matthews_corrcoef",
    "sklearn.metrics.max_error",
    "sklearn.metrics.mean_absolute_error",
    "sklearn.metrics.mean_absolute_percentage_error",
    "sklearn.metrics.mean_gamma_deviance",
    "sklearn.metrics.mean_poisson_deviance",
    "sklearn.metrics.mean_squared_error",
    "sklearn.metrics.mean_tweedie_deviance",
    "sklearn.metrics.median_absolute_error",
    "sklearn.metrics.multilabel_confusion_matrix",
    "sklearn.metrics.ndcg_score",
    "sklearn.metrics.precision_score",
    "sklearn.metrics.r2_score",
    "sklearn.metrics.recall_score",
    "sklearn.metrics.roc_auc_score",
    "sklearn.metrics.roc_curve",
    "sklearn.metrics.tests.test_common.ALL_METRICS",
    "sklearn.metrics.tests.test_common.CLASSIFICATION_METRICS",
    "sklearn.metrics.tests.test_common.CURVE_METRICS",
    "sklearn.metrics.tests.test_common.METRIC_UNDEFINED_BINARY",
    "sklearn.metrics.tests.test_common.METRIC_UNDEFINED_MULTICLASS",
    "sklearn.metrics.tests.test_common.REGRESSION_METRICS",
    "sklearn.metrics.tests.test_common.THRESHOLDED_METRICS",
    "sklearn.metrics.tests.test_common.precision_recall_curve_padded_thresholds",
    "sklearn.metrics.top_k_accuracy_score",
    "sklearn.metrics.zero_one_loss"
   ]
  },
  "type": "module"
 },
 "sklearn.metrics.tests.test_common.ALL_METRICS": {
  "data": {
   "lineno": 252
  },
  "type": "constant"
 },
 "sklearn.metrics.tests.test_common.CLASSIFICATION_METRICS": {
  "data": {
   "lineno": 115
  },
  "type": "constant"
 },
 "sklearn.metrics.tests.test_common.CURVE_METRICS": {
  "data": {
   "lineno": 208
  },
  "type": "constant"
 },
 "sklearn.metrics.tests.test_common.LabelBinarizer": {
  "data": {
   "shadows": "sklearn.preprocessing.LabelBinarizer"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_common.METRICS_REQUIRE_POSITIVE_Y": {
  "data": {
   "lineno": 500
  },
  "type": "constant"
 },
 "sklearn.metrics.tests.test_common.METRICS_WITHOUT_SAMPLE_WEIGHT": {
  "data": {
   "lineno": 493
  },
  "type": "constant"
 },
 "sklearn.metrics.tests.test_common.METRICS_WITH_AVERAGING": {
  "data": {
   "lineno": 318
  },
  "type": "constant"
 },
 "sklearn.metrics.tests.test_common.METRICS_WITH_LABELS": {
  "data": {
   "lineno": 358
  },
  "type": "constant"
 },
 "sklearn.metrics.tests.test_common.METRICS_WITH_NORMALIZE_OPTION": {
  "data": {
   "lineno": 387
  },
  "type": "constant"
 },
 "sklearn.metrics.tests.test_common.METRICS_WITH_POS_LABEL": {
  "data": {
   "lineno": 329
  },
  "type": "constant"
 },
 "sklearn.metrics.tests.test_common.METRIC_UNDEFINED_BINARY": {
  "data": {
   "lineno": 268
  },
  "type": "constant"
 },
 "sklearn.metrics.tests.test_common.METRIC_UNDEFINED_BINARY_MULTICLASS": {
  "data": {
   "lineno": 314
  },
  "type": "constant"
 },
 "sklearn.metrics.tests.test_common.METRIC_UNDEFINED_MULTICLASS": {
  "data": {
   "lineno": 284
  },
  "type": "constant"
 },
 "sklearn.metrics.tests.test_common.MULTILABELS_METRICS": {
  "data": {
   "lineno": 413
  },
  "type": "constant"
 },
 "sklearn.metrics.tests.test_common.MULTIOUTPUT_METRICS": {
  "data": {
   "lineno": 438
  },
  "type": "constant"
 },
 "sklearn.metrics.tests.test_common.NOT_SYMMETRIC_METRICS": {
  "data": {
   "lineno": 468
  },
  "type": "constant"
 },
 "sklearn.metrics.tests.test_common.REGRESSION_METRICS": {
  "data": {
   "lineno": 100
  },
  "type": "constant"
 },
 "sklearn.metrics.tests.test_common.SYMMETRIC_METRICS": {
  "data": {
   "lineno": 445
  },
  "type": "constant"
 },
 "sklearn.metrics.tests.test_common.THRESHOLDED_METRICS": {
  "data": {
   "lineno": 214
  },
  "type": "constant"
 },
 "sklearn.metrics.tests.test_common.THRESHOLDED_METRICS_WITH_AVERAGING": {
  "data": {
   "lineno": 324
  },
  "type": "constant"
 },
 "sklearn.metrics.tests.test_common.THRESHOLDED_MULTILABEL_METRICS": {
  "data": {
   "lineno": 394
  },
  "type": "constant"
 },
 "sklearn.metrics.tests.test_common._average_binary_score": {
  "data": {
   "shadows": "sklearn.metrics._base._average_binary_score"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_common._check_averaging": {
  "data": {
   "lineno": 1080,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "metric",
    "numpy.average",
    "numpy.mean",
    "numpy.sum",
    "range",
    "sklearn.metrics.tests.test_common.pytest",
    "sklearn.utils._testing.assert_allclose",
    "sklearn.utils._testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_common._num_samples": {
  "data": {
   "shadows": "sklearn.utils.validation._num_samples"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_common._require_positive_targets": {
  "data": {
   "lineno": 507,
   "symbols_in_volume": [
    "abs",
    "min"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_common.accuracy_score": {
  "data": {
   "shadows": "sklearn.metrics.accuracy_score"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_common.assert_allclose": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_allclose"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_common.assert_almost_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_almost_equal"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_common.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_common.assert_array_less": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_array_less"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_common.average_precision_score": {
  "data": {
   "shadows": "sklearn.metrics.average_precision_score"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_common.balanced_accuracy_score": {
  "data": {
   "shadows": "sklearn.metrics.balanced_accuracy_score"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_common.brier_score_loss": {
  "data": {
   "shadows": "sklearn.metrics.brier_score_loss"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_common.chain": {
  "data": {
   "shadows": "itertools.chain"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_common.check_averaging": {
  "data": {
   "lineno": 1124,
   "symbols_in_volume": [
    "ValueError",
    "metric",
    "sklearn.metrics.tests.test_common.ALL_METRICS",
    "sklearn.metrics.tests.test_common.METRICS_WITH_AVERAGING",
    "sklearn.metrics.tests.test_common.THRESHOLDED_METRICS_WITH_AVERAGING",
    "sklearn.metrics.tests.test_common._check_averaging",
    "sklearn.utils.multiclass.type_of_target"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_common.check_random_state": {
  "data": {
   "shadows": "sklearn.utils.validation.check_random_state"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_common.check_sample_weight_invariance": {
  "data": {
   "lineno": 1211,
   "symbols_in_volume": [
    "AssertionError",
    "ValueError",
    "functools.partial",
    "len",
    "metric",
    "numpy.copy",
    "numpy.hstack",
    "numpy.ones",
    "numpy.random.RandomState",
    "numpy.repeat",
    "sklearn.metrics.tests.test_common.pytest",
    "sklearn.utils._testing.assert_allclose",
    "sklearn.utils._testing.ignore_warnings",
    "sklearn.utils.validation._num_samples"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_common.check_single_sample": {
  "data": {
   "lineno": 851,
   "symbols_in_volume": [
    "itertools.product",
    "metric",
    "sklearn.metrics.tests.test_common.ALL_METRICS",
    "sklearn.metrics.tests.test_common.METRICS_REQUIRE_POSITIVE_Y",
    "sklearn.utils._testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_common.check_single_sample_multioutput": {
  "data": {
   "lineno": 868,
   "symbols_in_volume": [
    "itertools.product",
    "metric",
    "numpy.array",
    "sklearn.metrics.tests.test_common.ALL_METRICS",
    "sklearn.utils._testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_common.cohen_kappa_score": {
  "data": {
   "shadows": "sklearn.metrics.cohen_kappa_score"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_common.confusion_matrix": {
  "data": {
   "shadows": "sklearn.metrics.confusion_matrix"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_common.coverage_error": {
  "data": {
   "shadows": "sklearn.metrics.coverage_error"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_common.dcg_score": {
  "data": {
   "shadows": "sklearn.metrics.dcg_score"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_common.det_curve": {
  "data": {
   "shadows": "sklearn.metrics.det_curve"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_common.explained_variance_score": {
  "data": {
   "shadows": "sklearn.metrics.explained_variance_score"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_common.f1_score": {
  "data": {
   "shadows": "sklearn.metrics.f1_score"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_common.fbeta_score": {
  "data": {
   "shadows": "sklearn.metrics.fbeta_score"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_common.hamming_loss": {
  "data": {
   "shadows": "sklearn.metrics.hamming_loss"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_common.hinge_loss": {
  "data": {
   "shadows": "sklearn.metrics.hinge_loss"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_common.ignore_warnings": {
  "data": {
   "shadows": "sklearn.utils._testing.ignore_warnings"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_common.invalids_nan_inf": {
  "data": {
   "lineno": 802
  },
  "type": "constant"
 },
 "sklearn.metrics.tests.test_common.jaccard_score": {
  "data": {
   "shadows": "sklearn.metrics.jaccard_score"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_common.label_ranking_average_precision_score": {
  "data": {
   "shadows": "sklearn.metrics.label_ranking_average_precision_score"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_common.label_ranking_loss": {
  "data": {
   "shadows": "sklearn.metrics.label_ranking_loss"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_common.log_loss": {
  "data": {
   "shadows": "sklearn.metrics.log_loss"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_common.make_multilabel_classification": {
  "data": {
   "shadows": "sklearn.datasets.make_multilabel_classification"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_common.matthews_corrcoef": {
  "data": {
   "shadows": "sklearn.metrics.matthews_corrcoef"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_common.max_error": {
  "data": {
   "shadows": "sklearn.metrics.max_error"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_common.mean_absolute_error": {
  "data": {
   "shadows": "sklearn.metrics.mean_absolute_error"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_common.mean_absolute_percentage_error": {
  "data": {
   "shadows": "sklearn.metrics.mean_absolute_percentage_error"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_common.mean_gamma_deviance": {
  "data": {
   "shadows": "sklearn.metrics.mean_gamma_deviance"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_common.mean_poisson_deviance": {
  "data": {
   "shadows": "sklearn.metrics.mean_poisson_deviance"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_common.mean_squared_error": {
  "data": {
   "shadows": "sklearn.metrics.mean_squared_error"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_common.mean_tweedie_deviance": {
  "data": {
   "shadows": "sklearn.metrics.mean_tweedie_deviance"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_common.median_absolute_error": {
  "data": {
   "shadows": "sklearn.metrics.median_absolute_error"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_common.multilabel_confusion_matrix": {
  "data": {
   "shadows": "sklearn.metrics.multilabel_confusion_matrix"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_common.ndcg_score": {
  "data": {
   "shadows": "sklearn.metrics.ndcg_score"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_common.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_common.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_common.permutations": {
  "data": {
   "shadows": "itertools.permutations"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_common.precision_recall_curve": {
  "data": {
   "shadows": "sklearn.metrics.precision_recall_curve"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_common.precision_recall_curve_padded_thresholds": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "numpy.nan",
    "numpy.pad",
    "sklearn.metrics.precision_recall_curve"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_common.precision_score": {
  "data": {
   "shadows": "sklearn.metrics.precision_score"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_common.product": {
  "data": {
   "shadows": "itertools.product"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_common.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_common.r2_score": {
  "data": {
   "shadows": "sklearn.metrics.r2_score"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_common.recall_score": {
  "data": {
   "shadows": "sklearn.metrics.recall_score"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_common.roc_auc_score": {
  "data": {
   "shadows": "sklearn.metrics.roc_auc_score"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_common.roc_curve": {
  "data": {
   "shadows": "sklearn.metrics.roc_curve"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_common.shuffle": {
  "data": {
   "shadows": "sklearn.utils.shuffle"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_common.signature": {
  "data": {
   "shadows": "inspect.signature"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_common.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_common.test_averaging_binary_multilabel_all_zeroes": {
  "data": {
   "lineno": 1186,
   "symbols_in_volume": [
    "numpy.zeros",
    "sklearn.metrics._base._average_binary_score",
    "sklearn.metrics.precision_score",
    "sklearn.metrics.tests.test_common._check_averaging"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_common.test_averaging_multiclass": {
  "data": {
   "lineno": 1140,
   "symbols_in_volume": [
    "sklearn.metrics.tests.test_common.METRICS_WITH_AVERAGING",
    "sklearn.metrics.tests.test_common.check_averaging",
    "sklearn.metrics.tests.test_common.pytest",
    "sklearn.preprocessing.LabelBinarizer",
    "sklearn.utils.validation.check_random_state",
    "sorted"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_common.test_averaging_multilabel": {
  "data": {
   "lineno": 1156,
   "symbols_in_volume": [
    "sklearn.datasets.make_multilabel_classification",
    "sklearn.metrics.tests.test_common.METRICS_WITH_AVERAGING",
    "sklearn.metrics.tests.test_common.THRESHOLDED_METRICS_WITH_AVERAGING",
    "sklearn.metrics.tests.test_common.check_averaging",
    "sklearn.metrics.tests.test_common.pytest",
    "sklearn.utils.validation.check_random_state",
    "sorted"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_common.test_averaging_multilabel_all_ones": {
  "data": {
   "lineno": 1199,
   "symbols_in_volume": [
    "numpy.ones",
    "sklearn.metrics.tests.test_common.METRICS_WITH_AVERAGING",
    "sklearn.metrics.tests.test_common.check_averaging",
    "sklearn.metrics.tests.test_common.pytest",
    "sorted"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_common.test_averaging_multilabel_all_zeroes": {
  "data": {
   "lineno": 1174,
   "symbols_in_volume": [
    "numpy.zeros",
    "sklearn.metrics.tests.test_common.METRICS_WITH_AVERAGING",
    "sklearn.metrics.tests.test_common.check_averaging",
    "sklearn.metrics.tests.test_common.pytest",
    "sorted"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_common.test_binary_sample_weight_invariance": {
  "data": {
   "lineno": 1309,
   "symbols_in_volume": [
    "metric",
    "set",
    "sklearn.metrics.tests.test_common.ALL_METRICS",
    "sklearn.metrics.tests.test_common.METRICS_WITHOUT_SAMPLE_WEIGHT",
    "sklearn.metrics.tests.test_common.METRIC_UNDEFINED_BINARY",
    "sklearn.metrics.tests.test_common.REGRESSION_METRICS",
    "sklearn.metrics.tests.test_common.THRESHOLDED_METRICS",
    "sklearn.metrics.tests.test_common.check_sample_weight_invariance",
    "sklearn.metrics.tests.test_common.pytest",
    "sklearn.utils.validation.check_random_state",
    "sorted"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_common.test_classification_binary_continuous_input": {
  "data": {
   "lineno": 838,
   "symbols_in_volume": [
    "ValueError",
    "metric",
    "sklearn.metrics.tests.test_common.CLASSIFICATION_METRICS",
    "sklearn.metrics.tests.test_common.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_common.test_classification_inf_nan_input": {
  "data": {
   "lineno": 821,
   "symbols_in_volume": [
    "ValueError",
    "metric",
    "numpy.nan",
    "sklearn.metrics.tests.test_common.CLASSIFICATION_METRICS",
    "sklearn.metrics.tests.test_common.invalids_nan_inf",
    "sklearn.metrics.tests.test_common.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_common.test_classification_invariance_string_vs_numbers_labels": {
  "data": {
   "lineno": 715,
   "symbols_in_volume": [
    "functools.partial",
    "metric",
    "metric_str",
    "numpy.array",
    "set",
    "sklearn.metrics.tests.test_common.CLASSIFICATION_METRICS",
    "sklearn.metrics.tests.test_common.METRICS_WITH_LABELS",
    "sklearn.metrics.tests.test_common.METRICS_WITH_POS_LABEL",
    "sklearn.metrics.tests.test_common.METRIC_UNDEFINED_BINARY_MULTICLASS",
    "sklearn.metrics.tests.test_common.pytest",
    "sklearn.utils._testing.assert_array_equal",
    "sklearn.utils._testing.ignore_warnings",
    "sklearn.utils.validation.check_random_state",
    "sorted"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_common.test_format_invariance_with_1d_vectors": {
  "data": {
   "lineno": 629,
   "symbols_in_volume": [
    "ValueError",
    "list",
    "metric",
    "numpy.array",
    "numpy.reshape",
    "set",
    "sklearn.metrics.tests.test_common.ALL_METRICS",
    "sklearn.metrics.tests.test_common.METRICS_REQUIRE_POSITIVE_Y",
    "sklearn.metrics.tests.test_common.METRIC_UNDEFINED_BINARY_MULTICLASS",
    "sklearn.metrics.tests.test_common.MULTILABELS_METRICS",
    "sklearn.metrics.tests.test_common.MULTIOUTPUT_METRICS",
    "sklearn.metrics.tests.test_common.THRESHOLDED_MULTILABEL_METRICS",
    "sklearn.metrics.tests.test_common._require_positive_targets",
    "sklearn.metrics.tests.test_common.pytest",
    "sklearn.utils._testing.assert_allclose",
    "sklearn.utils._testing.assert_array_equal",
    "sklearn.utils._testing.ignore_warnings",
    "sklearn.utils.validation.check_random_state",
    "sorted"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_common.test_metrics_consistent_type_error": {
  "data": {
   "lineno": 1475,
   "symbols_in_volume": [
    "TypeError",
    "numpy.array",
    "numpy.random.RandomState",
    "object",
    "sklearn.metrics.tests.test_common.CLASSIFICATION_METRICS",
    "sklearn.metrics.tests.test_common.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_common.test_metrics_pos_label_error_str": {
  "data": {
   "lineno": 1488,
   "symbols_in_volume": [
    "ValueError",
    "functools.partial",
    "inspect.signature",
    "metric",
    "numpy.array",
    "numpy.random.RandomState",
    "object",
    "sklearn.metrics.average_precision_score",
    "sklearn.metrics.brier_score_loss",
    "sklearn.metrics.f1_score",
    "sklearn.metrics.fbeta_score",
    "sklearn.metrics.jaccard_score",
    "sklearn.metrics.precision_recall_curve",
    "sklearn.metrics.precision_score",
    "sklearn.metrics.recall_score",
    "sklearn.metrics.roc_curve",
    "sklearn.metrics.tests.test_common.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_common.test_multiclass_sample_weight_invariance": {
  "data": {
   "lineno": 1328,
   "symbols_in_volume": [
    "metric",
    "numpy.exp",
    "set",
    "sklearn.metrics.tests.test_common.ALL_METRICS",
    "sklearn.metrics.tests.test_common.METRICS_WITHOUT_SAMPLE_WEIGHT",
    "sklearn.metrics.tests.test_common.METRIC_UNDEFINED_BINARY_MULTICLASS",
    "sklearn.metrics.tests.test_common.REGRESSION_METRICS",
    "sklearn.metrics.tests.test_common.THRESHOLDED_METRICS",
    "sklearn.metrics.tests.test_common.check_sample_weight_invariance",
    "sklearn.metrics.tests.test_common.pytest",
    "sklearn.utils.validation.check_random_state",
    "sorted"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_common.test_multilabel_label_permutations_invariance": {
  "data": {
   "lineno": 1398,
   "symbols_in_volume": [
    "itertools.permutations",
    "metric",
    "range",
    "sklearn.metrics.tests.test_common.ALL_METRICS",
    "sklearn.metrics.tests.test_common.MULTILABELS_METRICS",
    "sklearn.metrics.tests.test_common.pytest",
    "sklearn.utils._testing.assert_almost_equal",
    "sklearn.utils.validation.check_random_state",
    "sorted"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_common.test_multilabel_representation_invariance": {
  "data": {
   "lineno": 920,
   "symbols_in_volume": [
    "functools.partial",
    "isinstance",
    "list",
    "metric",
    "metric.__module__",
    "metric.__name__",
    "numpy.vstack",
    "scipy.sparse.coo_matrix",
    "sklearn.datasets.make_multilabel_classification",
    "sklearn.metrics.tests.test_common.ALL_METRICS",
    "sklearn.metrics.tests.test_common.MULTILABELS_METRICS",
    "sklearn.utils._testing.assert_allclose",
    "sklearn.utils._testing.assert_almost_equal",
    "sklearn.utils._testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_common.test_multilabel_sample_weight_invariance": {
  "data": {
   "lineno": 1350,
   "symbols_in_volume": [
    "metric",
    "numpy.vstack",
    "sklearn.datasets.make_multilabel_classification",
    "sklearn.metrics.tests.test_common.ALL_METRICS",
    "sklearn.metrics.tests.test_common.METRICS_WITHOUT_SAMPLE_WEIGHT",
    "sklearn.metrics.tests.test_common.MULTILABELS_METRICS",
    "sklearn.metrics.tests.test_common.MULTIOUTPUT_METRICS",
    "sklearn.metrics.tests.test_common.THRESHOLDED_METRICS",
    "sklearn.metrics.tests.test_common.THRESHOLDED_MULTILABEL_METRICS",
    "sklearn.metrics.tests.test_common.check_sample_weight_invariance",
    "sklearn.metrics.tests.test_common.pytest",
    "sklearn.utils.validation.check_random_state",
    "sorted"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_common.test_multioutput_number_of_output_differ": {
  "data": {
   "lineno": 892,
   "symbols_in_volume": [
    "ValueError",
    "metric",
    "numpy.array",
    "sklearn.metrics.tests.test_common.ALL_METRICS",
    "sklearn.metrics.tests.test_common.MULTIOUTPUT_METRICS",
    "sklearn.metrics.tests.test_common.pytest",
    "sorted"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_common.test_multioutput_regression_invariance_to_dimension_shuffling": {
  "data": {
   "lineno": 902,
   "symbols_in_volume": [
    "metric",
    "range",
    "sklearn.metrics.tests.test_common.ALL_METRICS",
    "sklearn.metrics.tests.test_common.MULTIOUTPUT_METRICS",
    "sklearn.metrics.tests.test_common.pytest",
    "sklearn.utils._testing.assert_allclose",
    "sklearn.utils.validation.check_random_state",
    "sorted"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_common.test_no_averaging_labels": {
  "data": {
   "lineno": 1374,
   "symbols_in_volume": [
    "metric",
    "numpy.array",
    "numpy.unique",
    "sklearn.metrics.tests.test_common.ALL_METRICS",
    "sklearn.metrics.tests.test_common.METRICS_WITH_AVERAGING",
    "sklearn.metrics.tests.test_common.MULTILABELS_METRICS",
    "sklearn.utils._testing.assert_array_equal",
    "sklearn.utils._testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_common.test_normalize_option_binary_classification": {
  "data": {
   "lineno": 991,
   "symbols_in_volume": [
    "metrics",
    "sklearn.metrics.tests.test_common.ALL_METRICS",
    "sklearn.metrics.tests.test_common.METRICS_WITH_NORMALIZE_OPTION",
    "sklearn.metrics.tests.test_common.THRESHOLDED_METRICS",
    "sklearn.metrics.tests.test_common.pytest",
    "sklearn.utils._testing.assert_allclose",
    "sklearn.utils._testing.assert_array_less",
    "sklearn.utils.validation.check_random_state",
    "sorted"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_common.test_normalize_option_multiclass_classification": {
  "data": {
   "lineno": 1015,
   "symbols_in_volume": [
    "metrics",
    "sklearn.metrics.tests.test_common.ALL_METRICS",
    "sklearn.metrics.tests.test_common.METRICS_WITH_NORMALIZE_OPTION",
    "sklearn.metrics.tests.test_common.THRESHOLDED_METRICS",
    "sklearn.metrics.tests.test_common.pytest",
    "sklearn.utils._testing.assert_allclose",
    "sklearn.utils._testing.assert_array_less",
    "sklearn.utils.validation.check_random_state",
    "sorted"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_common.test_normalize_option_multilabel_classification": {
  "data": {
   "lineno": 1039,
   "symbols_in_volume": [
    "metrics",
    "sklearn.datasets.make_multilabel_classification",
    "sklearn.metrics.tests.test_common.ALL_METRICS",
    "sklearn.metrics.tests.test_common.METRICS_WITH_NORMALIZE_OPTION",
    "sklearn.metrics.tests.test_common.MULTILABELS_METRICS",
    "sklearn.metrics.tests.test_common.THRESHOLDED_METRICS",
    "sklearn.metrics.tests.test_common.pytest",
    "sklearn.utils._testing.assert_allclose",
    "sklearn.utils._testing.assert_array_less",
    "sklearn.utils.validation.check_random_state",
    "sorted"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_common.test_not_symmetric_metric": {
  "data": {
   "lineno": 555,
   "symbols_in_volume": [
    "AssertionError",
    "ValueError",
    "metric",
    "sklearn.metrics.tests.test_common.ALL_METRICS",
    "sklearn.metrics.tests.test_common.METRICS_REQUIRE_POSITIVE_Y",
    "sklearn.metrics.tests.test_common.NOT_SYMMETRIC_METRICS",
    "sklearn.metrics.tests.test_common._require_positive_targets",
    "sklearn.metrics.tests.test_common.pytest",
    "sklearn.utils._testing.assert_array_equal",
    "sklearn.utils.validation.check_random_state",
    "sorted"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_common.test_raise_value_error_multilabel_sequences": {
  "data": {
   "lineno": 975,
   "symbols_in_volume": [
    "ValueError",
    "metric",
    "numpy.array",
    "sklearn.metrics.tests.test_common.ALL_METRICS",
    "sklearn.metrics.tests.test_common.MULTILABELS_METRICS",
    "sklearn.metrics.tests.test_common.pytest",
    "sorted"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_common.test_regression_sample_weight_invariance": {
  "data": {
   "lineno": 1294,
   "symbols_in_volume": [
    "metric",
    "set",
    "sklearn.metrics.tests.test_common.ALL_METRICS",
    "sklearn.metrics.tests.test_common.METRICS_WITHOUT_SAMPLE_WEIGHT",
    "sklearn.metrics.tests.test_common.REGRESSION_METRICS",
    "sklearn.metrics.tests.test_common.check_sample_weight_invariance",
    "sklearn.metrics.tests.test_common.pytest",
    "sklearn.utils.validation.check_random_state",
    "sorted"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_common.test_regression_thresholded_inf_nan_input": {
  "data": {
   "lineno": 811,
   "symbols_in_volume": [
    "ValueError",
    "itertools.chain",
    "metric",
    "sklearn.metrics.tests.test_common.REGRESSION_METRICS",
    "sklearn.metrics.tests.test_common.THRESHOLDED_METRICS",
    "sklearn.metrics.tests.test_common.invalids_nan_inf",
    "sklearn.metrics.tests.test_common.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_common.test_sample_order_invariance": {
  "data": {
   "lineno": 573,
   "symbols_in_volume": [
    "metric",
    "set",
    "sklearn.metrics.tests.test_common.ALL_METRICS",
    "sklearn.metrics.tests.test_common.METRICS_REQUIRE_POSITIVE_Y",
    "sklearn.metrics.tests.test_common.METRIC_UNDEFINED_BINARY_MULTICLASS",
    "sklearn.metrics.tests.test_common._require_positive_targets",
    "sklearn.metrics.tests.test_common.pytest",
    "sklearn.utils._testing.assert_allclose",
    "sklearn.utils._testing.ignore_warnings",
    "sklearn.utils.shuffle",
    "sklearn.utils.validation.check_random_state",
    "sorted"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_common.test_sample_order_invariance_multilabel_and_multioutput": {
  "data": {
   "lineno": 593,
   "symbols_in_volume": [
    "metric",
    "sklearn.metrics.tests.test_common.ALL_METRICS",
    "sklearn.metrics.tests.test_common.MULTILABELS_METRICS",
    "sklearn.metrics.tests.test_common.MULTIOUTPUT_METRICS",
    "sklearn.metrics.tests.test_common.THRESHOLDED_MULTILABEL_METRICS",
    "sklearn.utils._testing.assert_allclose",
    "sklearn.utils._testing.ignore_warnings",
    "sklearn.utils.shuffle",
    "sklearn.utils.validation.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_common.test_single_sample": {
  "data": {
   "lineno": 875,
   "symbols_in_volume": [
    "set",
    "sklearn.metrics.tests.test_common.ALL_METRICS",
    "sklearn.metrics.tests.test_common.METRIC_UNDEFINED_BINARY_MULTICLASS",
    "sklearn.metrics.tests.test_common.THRESHOLDED_METRICS",
    "sklearn.metrics.tests.test_common.check_single_sample",
    "sklearn.metrics.tests.test_common.pytest",
    "sorted"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_common.test_single_sample_multioutput": {
  "data": {
   "lineno": 886,
   "symbols_in_volume": [
    "sklearn.metrics.tests.test_common.MULTILABELS_METRICS",
    "sklearn.metrics.tests.test_common.MULTIOUTPUT_METRICS",
    "sklearn.metrics.tests.test_common.check_single_sample_multioutput",
    "sklearn.metrics.tests.test_common.pytest",
    "sorted"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_common.test_symmetric_metric": {
  "data": {
   "lineno": 528,
   "symbols_in_volume": [
    "metric",
    "sklearn.metrics.tests.test_common.ALL_METRICS",
    "sklearn.metrics.tests.test_common.METRICS_REQUIRE_POSITIVE_Y",
    "sklearn.metrics.tests.test_common.METRIC_UNDEFINED_BINARY",
    "sklearn.metrics.tests.test_common.MULTILABELS_METRICS",
    "sklearn.metrics.tests.test_common.SYMMETRIC_METRICS",
    "sklearn.metrics.tests.test_common._require_positive_targets",
    "sklearn.metrics.tests.test_common.pytest",
    "sklearn.utils._testing.assert_allclose",
    "sklearn.utils.validation.check_random_state",
    "sorted"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_common.test_symmetry_consistency": {
  "data": {
   "lineno": 515,
   "symbols_in_volume": [
    "set",
    "sklearn.metrics.tests.test_common.ALL_METRICS",
    "sklearn.metrics.tests.test_common.METRIC_UNDEFINED_BINARY_MULTICLASS",
    "sklearn.metrics.tests.test_common.NOT_SYMMETRIC_METRICS",
    "sklearn.metrics.tests.test_common.SYMMETRIC_METRICS",
    "sklearn.metrics.tests.test_common.THRESHOLDED_METRICS"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_common.test_thresholded_invariance_string_vs_numbers_labels": {
  "data": {
   "lineno": 765,
   "symbols_in_volume": [
    "ValueError",
    "functools.partial",
    "metric",
    "metric_str",
    "numpy.array",
    "sklearn.metrics.tests.test_common.METRICS_WITH_POS_LABEL",
    "sklearn.metrics.tests.test_common.METRIC_UNDEFINED_BINARY",
    "sklearn.metrics.tests.test_common.THRESHOLDED_METRICS",
    "sklearn.metrics.tests.test_common.pytest",
    "sklearn.utils._testing.assert_array_equal",
    "sklearn.utils._testing.ignore_warnings",
    "sklearn.utils.validation.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_common.test_thresholded_metric_permutation_invariance": {
  "data": {
   "lineno": 1451,
   "symbols_in_volume": [
    "int",
    "itertools.permutations",
    "list",
    "metric",
    "numpy.arange",
    "numpy.exp",
    "numpy.take",
    "numpy.zeros",
    "range",
    "set",
    "sklearn.metrics.tests.test_common.ALL_METRICS",
    "sklearn.metrics.tests.test_common.METRIC_UNDEFINED_BINARY_MULTICLASS",
    "sklearn.metrics.tests.test_common.THRESHOLDED_METRICS",
    "sklearn.metrics.tests.test_common.pytest",
    "sklearn.utils._testing.assert_almost_equal",
    "sklearn.utils.validation.check_random_state",
    "sorted"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_common.test_thresholded_multilabel_multioutput_permutations_invariance": {
  "data": {
   "lineno": 1419,
   "symbols_in_volume": [
    "itertools.permutations",
    "metric",
    "numpy.isfinite",
    "range",
    "sklearn.metrics.mean_absolute_percentage_error",
    "sklearn.metrics.tests.test_common.ALL_METRICS",
    "sklearn.metrics.tests.test_common.MULTIOUTPUT_METRICS",
    "sklearn.metrics.tests.test_common.THRESHOLDED_MULTILABEL_METRICS",
    "sklearn.metrics.tests.test_common.pytest",
    "sklearn.utils._testing.assert_almost_equal",
    "sklearn.utils.validation.check_random_state",
    "sorted"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_common.top_k_accuracy_score": {
  "data": {
   "shadows": "sklearn.metrics.top_k_accuracy_score"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_common.type_of_target": {
  "data": {
   "shadows": "sklearn.utils.multiclass.type_of_target"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_common.zero_one_loss": {
  "data": {
   "shadows": "sklearn.metrics.zero_one_loss"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_pairwise": {
  "data": {
   "symbols_in_volume": [
    "numpy.arange"
   ]
  },
  "type": "module"
 },
 "sklearn.metrics.tests.test_pairwise.DataConversionWarning": {
  "data": {
   "shadows": "sklearn.exceptions.DataConversionWarning"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_pairwise.GeneratorType": {
  "data": {
   "shadows": "types.GeneratorType"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_pairwise.PAIRED_DISTANCES": {
  "data": {
   "shadows": "sklearn.metrics.pairwise.PAIRED_DISTANCES"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_pairwise.PAIRWISE_BOOLEAN_FUNCTIONS": {
  "data": {
   "shadows": "sklearn.metrics.pairwise.PAIRWISE_BOOLEAN_FUNCTIONS"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_pairwise.PAIRWISE_DISTANCE_FUNCTIONS": {
  "data": {
   "shadows": "sklearn.metrics.pairwise.PAIRWISE_DISTANCE_FUNCTIONS"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_pairwise.PAIRWISE_KERNEL_FUNCTIONS": {
  "data": {
   "shadows": "sklearn.metrics.pairwise.PAIRWISE_KERNEL_FUNCTIONS"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_pairwise._euclidean_distances_upcast": {
  "data": {
   "shadows": "sklearn.metrics.pairwise._euclidean_distances_upcast"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_pairwise._reduce_func": {
  "data": {
   "lineno": 468
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise._wminkowski_kwds": {
  "data": {
   "lineno": 236
  },
  "type": "constant"
 },
 "sklearn.metrics.tests.test_pairwise.additive_chi2_kernel": {
  "data": {
   "shadows": "sklearn.metrics.pairwise.additive_chi2_kernel"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_pairwise.assert_allclose": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_allclose"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_pairwise.assert_almost_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_almost_equal"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_pairwise.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_pairwise.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_pairwise.callable_rbf_kernel": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "numpy.atleast_2d",
    "sklearn.metrics.pairwise.rbf_kernel"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise.cdist": {
  "data": {
   "shadows": "scipy.spatial.distance.cdist"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_pairwise.check_paired_arrays": {
  "data": {
   "shadows": "sklearn.metrics.pairwise.check_paired_arrays"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_pairwise.check_pairwise_arrays": {
  "data": {
   "shadows": "sklearn.metrics.pairwise.check_pairwise_arrays"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_pairwise.check_pairwise_distances_chunked": {
  "data": {
   "lineno": 536,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "list",
    "max",
    "numpy.vstack",
    "sklearn.metrics.pairwise.pairwise_distances",
    "sklearn.metrics.pairwise.pairwise_distances_chunked",
    "sklearn.utils._testing.assert_array_almost_equal",
    "types.GeneratorType"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise.chi2_kernel": {
  "data": {
   "shadows": "sklearn.metrics.pairwise.chi2_kernel"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_pairwise.cityblock": {
  "data": {
   "shadows": "scipy.spatial.distance.cityblock"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_pairwise.config_context": {
  "data": {
   "shadows": "sklearn.config_context"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_pairwise.cosine": {
  "data": {
   "shadows": "scipy.spatial.distance.cosine"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_pairwise.cosine_distances": {
  "data": {
   "shadows": "sklearn.metrics.pairwise.cosine_distances"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_pairwise.cosine_similarity": {
  "data": {
   "shadows": "sklearn.metrics.pairwise.cosine_similarity"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_pairwise.csr_matrix": {
  "data": {
   "shadows": "scipy.sparse.csr_matrix"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_pairwise.dok_matrix": {
  "data": {
   "shadows": "scipy.sparse.dok_matrix"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_pairwise.euclidean_distances": {
  "data": {
   "shadows": "sklearn.metrics.pairwise.euclidean_distances"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_pairwise.haversine_distances": {
  "data": {
   "shadows": "sklearn.metrics.pairwise.haversine_distances"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_pairwise.ignore_warnings": {
  "data": {
   "shadows": "sklearn.utils._testing.ignore_warnings"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_pairwise.issparse": {
  "data": {
   "shadows": "scipy.sparse.issparse"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_pairwise.laplacian_kernel": {
  "data": {
   "shadows": "sklearn.metrics.pairwise.laplacian_kernel"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_pairwise.linalg": {
  "data": {
   "shadows": "numpy.linalg"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_pairwise.linear_kernel": {
  "data": {
   "shadows": "sklearn.metrics.pairwise.linear_kernel"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_pairwise.manhattan_distances": {
  "data": {
   "shadows": "sklearn.metrics.pairwise.manhattan_distances"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_pairwise.minkowski": {
  "data": {
   "shadows": "scipy.spatial.distance.minkowski"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_pairwise.nan_euclidean_distances": {
  "data": {
   "shadows": "sklearn.metrics.pairwise.nan_euclidean_distances"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_pairwise.normalize": {
  "data": {
   "shadows": "sklearn.preprocessing.normalize"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_pairwise.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_pairwise.paired_distances": {
  "data": {
   "shadows": "sklearn.metrics.pairwise.paired_distances"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_pairwise.paired_euclidean_distances": {
  "data": {
   "shadows": "sklearn.metrics.pairwise.paired_euclidean_distances"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_pairwise.paired_manhattan_distances": {
  "data": {
   "shadows": "sklearn.metrics.pairwise.paired_manhattan_distances"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_pairwise.pairwise_distances": {
  "data": {
   "shadows": "sklearn.metrics.pairwise.pairwise_distances"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_pairwise.pairwise_distances_argmin": {
  "data": {
   "shadows": "sklearn.metrics.pairwise.pairwise_distances_argmin"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_pairwise.pairwise_distances_argmin_min": {
  "data": {
   "shadows": "sklearn.metrics.pairwise.pairwise_distances_argmin_min"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_pairwise.pairwise_distances_chunked": {
  "data": {
   "shadows": "sklearn.metrics.pairwise.pairwise_distances_chunked"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_pairwise.pairwise_kernels": {
  "data": {
   "shadows": "sklearn.metrics.pairwise.pairwise_kernels"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_pairwise.pdist": {
  "data": {
   "shadows": "scipy.spatial.distance.pdist"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_pairwise.polynomial_kernel": {
  "data": {
   "shadows": "sklearn.metrics.pairwise.polynomial_kernel"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_pairwise.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_pairwise.rbf_kernel": {
  "data": {
   "shadows": "sklearn.metrics.pairwise.rbf_kernel"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_pairwise.sigmoid_kernel": {
  "data": {
   "shadows": "sklearn.metrics.pairwise.sigmoid_kernel"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_pairwise.squareform": {
  "data": {
   "shadows": "scipy.spatial.distance.squareform"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_pairwise.test_check_XB_returned": {
  "data": {
   "lineno": 1142,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.resize",
    "sklearn.metrics.pairwise.check_paired_arrays",
    "sklearn.metrics.pairwise.check_pairwise_arrays",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise.test_check_dense_matrices": {
  "data": {
   "lineno": 1133,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.resize",
    "sklearn.metrics.pairwise.check_pairwise_arrays",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise.test_check_different_dimensions": {
  "data": {
   "lineno": 1158,
   "symbols_in_volume": [
    "ValueError",
    "numpy.arange",
    "numpy.resize",
    "sklearn.metrics.pairwise.check_paired_arrays",
    "sklearn.metrics.pairwise.check_pairwise_arrays",
    "sklearn.metrics.tests.test_pairwise.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise.test_check_invalid_dimensions": {
  "data": {
   "lineno": 1170,
   "symbols_in_volume": [
    "ValueError",
    "numpy.arange",
    "sklearn.metrics.pairwise.check_pairwise_arrays",
    "sklearn.metrics.tests.test_pairwise.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise.test_check_preserve_type": {
  "data": {
   "lineno": 1229,
   "symbols_in_volume": [
    "float",
    "numpy.arange",
    "numpy.float32",
    "numpy.resize",
    "sklearn.metrics.pairwise.check_pairwise_arrays"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise.test_check_sparse_arrays": {
  "data": {
   "lineno": 1184,
   "symbols_in_volume": [
    "abs",
    "numpy.random.RandomState",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.issparse",
    "sklearn.metrics.pairwise.check_pairwise_arrays"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise.test_check_tuple_input": {
  "data": {
   "lineno": 1217,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.metrics.pairwise.check_pairwise_arrays",
    "sklearn.metrics.tests.test_pairwise.tuplify",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise.test_chi_square_kernel": {
  "data": {
   "lineno": 975,
   "symbols_in_volume": [
    "ValueError",
    "enumerate",
    "float",
    "numpy.all",
    "numpy.diag",
    "numpy.exp",
    "numpy.float32",
    "numpy.int32",
    "numpy.isfinite",
    "numpy.random.RandomState",
    "numpy.sum",
    "scipy.sparse.csr_matrix",
    "sklearn.metrics.pairwise.additive_chi2_kernel",
    "sklearn.metrics.pairwise.chi2_kernel",
    "sklearn.metrics.tests.test_pairwise.pytest",
    "sklearn.utils._testing.assert_almost_equal",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise.test_cosine_distances": {
  "data": {
   "lineno": 904,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.all",
    "numpy.diag_indices_from",
    "numpy.random.RandomState",
    "numpy.vstack",
    "sklearn.metrics.pairwise.cosine_distances",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise.test_cosine_similarity": {
  "data": {
   "lineno": 1112,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "scipy.sparse.csr_matrix",
    "sklearn.metrics.pairwise.pairwise_kernels",
    "sklearn.preprocessing.normalize",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise.test_euclidean_distances": {
  "data": {
   "lineno": 663,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.float32",
    "numpy.float64",
    "numpy.random.RandomState",
    "scipy.sparse.csr_matrix",
    "scipy.spatial.distance.cdist",
    "sklearn.metrics.pairwise.euclidean_distances",
    "sklearn.metrics.tests.test_pairwise.pytest",
    "sklearn.utils._testing.assert_allclose",
    "x_array_constr",
    "y_array_constr"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise.test_euclidean_distances_extreme_values": {
  "data": {
   "lineno": 756,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.float32",
    "numpy.float64",
    "scipy.spatial.distance.cdist",
    "sklearn.metrics.pairwise.euclidean_distances",
    "sklearn.metrics.tests.test_pairwise.pytest",
    "sklearn.utils._testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise.test_euclidean_distances_known_result": {
  "data": {
   "lineno": 618,
   "symbols_in_volume": [
    "numpy.array",
    "scipy.sparse.csr_matrix",
    "sklearn.metrics.pairwise.euclidean_distances",
    "sklearn.metrics.tests.test_pairwise.pytest",
    "sklearn.utils._testing.assert_allclose",
    "x_array_constr",
    "y_array_constr"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise.test_euclidean_distances_sym": {
  "data": {
   "lineno": 689,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.float32",
    "numpy.float64",
    "numpy.random.RandomState",
    "scipy.sparse.csr_matrix",
    "scipy.spatial.distance.pdist",
    "scipy.spatial.distance.squareform",
    "sklearn.metrics.pairwise.euclidean_distances",
    "sklearn.metrics.tests.test_pairwise.pytest",
    "sklearn.utils._testing.assert_allclose",
    "x_array_constr"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise.test_euclidean_distances_upcast": {
  "data": {
   "lineno": 710,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.float32",
    "numpy.maximum",
    "numpy.random.RandomState",
    "numpy.sqrt",
    "scipy.sparse.csr_matrix",
    "scipy.spatial.distance.cdist",
    "sklearn.metrics.pairwise._euclidean_distances_upcast",
    "sklearn.metrics.tests.test_pairwise.pytest",
    "sklearn.utils._testing.assert_allclose",
    "x_array_constr",
    "y_array_constr"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise.test_euclidean_distances_upcast_sym": {
  "data": {
   "lineno": 736,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.float32",
    "numpy.maximum",
    "numpy.random.RandomState",
    "numpy.sqrt",
    "scipy.sparse.csr_matrix",
    "scipy.spatial.distance.pdist",
    "scipy.spatial.distance.squareform",
    "sklearn.metrics.pairwise._euclidean_distances_upcast",
    "sklearn.metrics.tests.test_pairwise.pytest",
    "sklearn.utils._testing.assert_allclose",
    "x_array_constr"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise.test_euclidean_distances_with_norms": {
  "data": {
   "lineno": 630,
   "symbols_in_volume": [
    "AssertionError",
    "numpy.array",
    "numpy.float32",
    "numpy.float64",
    "numpy.random.RandomState",
    "numpy.zeros_like",
    "scipy.sparse.csr_matrix",
    "sklearn.metrics.pairwise.euclidean_distances",
    "sklearn.metrics.tests.test_pairwise.pytest",
    "sklearn.utils._testing.assert_allclose",
    "y_array_constr"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise.test_haversine_distances": {
  "data": {
   "lineno": 934,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "numpy.random.RandomState",
    "sklearn.metrics.pairwise.haversine_distances",
    "sklearn.metrics.tests.test_pairwise.pytest",
    "sklearn.utils._testing.assert_array_almost_equal",
    "slow_haversine_distances"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise.test_haversine_distances.slow_haversine_distances": {
  "data": {
   "lineno": 936,
   "symbols_in_volume": [
    "numpy.arcsin",
    "numpy.cos",
    "numpy.sin",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise.test_kernel_sparse": {
  "data": {
   "lineno": 1047,
   "symbols_in_volume": [
    "kernel",
    "numpy.random.RandomState",
    "scipy.sparse.csr_matrix",
    "sklearn.metrics.pairwise.cosine_similarity",
    "sklearn.metrics.pairwise.laplacian_kernel",
    "sklearn.metrics.pairwise.linear_kernel",
    "sklearn.metrics.pairwise.polynomial_kernel",
    "sklearn.metrics.pairwise.rbf_kernel",
    "sklearn.metrics.pairwise.sigmoid_kernel",
    "sklearn.metrics.tests.test_pairwise.pytest",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise.test_kernel_symmetry": {
  "data": {
   "lineno": 1035,
   "symbols_in_volume": [
    "kernel",
    "numpy.random.RandomState",
    "sklearn.metrics.pairwise.cosine_similarity",
    "sklearn.metrics.pairwise.laplacian_kernel",
    "sklearn.metrics.pairwise.linear_kernel",
    "sklearn.metrics.pairwise.polynomial_kernel",
    "sklearn.metrics.pairwise.rbf_kernel",
    "sklearn.metrics.pairwise.sigmoid_kernel",
    "sklearn.metrics.tests.test_pairwise.pytest",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise.test_laplacian_kernel": {
  "data": {
   "lineno": 1076,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.diag",
    "numpy.ones",
    "numpy.random.RandomState",
    "sklearn.metrics.pairwise.laplacian_kernel",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise.test_linear_kernel": {
  "data": {
   "lineno": 1060,
   "symbols_in_volume": [
    "numpy.linalg.norm",
    "numpy.random.RandomState",
    "sklearn.metrics.pairwise.linear_kernel",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise.test_nan_euclidean_distances_2x2": {
  "data": {
   "lineno": 801,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "numpy.sqrt",
    "sklearn.metrics.pairwise.nan_euclidean_distances",
    "sklearn.metrics.tests.test_pairwise.pytest",
    "sklearn.utils._testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise.test_nan_euclidean_distances_complete_nan": {
  "data": {
   "lineno": 832,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "sklearn.metrics.pairwise.nan_euclidean_distances",
    "sklearn.metrics.tests.test_pairwise.pytest",
    "sklearn.utils._testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise.test_nan_euclidean_distances_equal_to_euclidean_distance": {
  "data": {
   "lineno": 775,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.metrics.pairwise.euclidean_distances",
    "sklearn.metrics.pairwise.nan_euclidean_distances",
    "sklearn.metrics.tests.test_pairwise.pytest",
    "sklearn.utils._testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise.test_nan_euclidean_distances_infinite_values": {
  "data": {
   "lineno": 787,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "numpy.inf",
    "sklearn.metrics.pairwise.nan_euclidean_distances",
    "sklearn.metrics.tests.test_pairwise.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise.test_nan_euclidean_distances_not_trival": {
  "data": {
   "lineno": 846,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "numpy.sqrt",
    "sklearn.metrics.pairwise.nan_euclidean_distances",
    "sklearn.metrics.tests.test_pairwise.pytest",
    "sklearn.utils._testing.assert_allclose",
    "sklearn.utils._testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise.test_nan_euclidean_distances_one_feature_match_positive": {
  "data": {
   "lineno": 887,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.array",
    "numpy.nan",
    "sklearn.metrics.pairwise.nan_euclidean_distances",
    "sklearn.metrics.tests.test_pairwise.pytest",
    "sklearn.utils._testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise.test_no_data_conversion_warning": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "len",
    "numpy.random.RandomState",
    "sklearn.metrics.pairwise.pairwise_distances",
    "sklearn.metrics.tests.test_pairwise.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise.test_numeric_pairwise_distances_datatypes": {
  "data": {
   "lineno": 1299,
   "symbols_in_volume": [
    "numpy.cov",
    "numpy.float32",
    "numpy.float64",
    "numpy.linalg.inv",
    "numpy.random.RandomState",
    "numpy.var",
    "numpy.vstack",
    "scipy.spatial.distance.cdist",
    "scipy.spatial.distance.pdist",
    "scipy.spatial.distance.squareform",
    "sklearn.metrics.pairwise.pairwise_distances",
    "sklearn.metrics.tests.test_pairwise.pytest",
    "sklearn.utils._testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise.test_paired_distances": {
  "data": {
   "lineno": 356,
   "symbols_in_volume": [
    "func",
    "numpy.diag",
    "numpy.random.RandomState",
    "scipy.sparse.csr_matrix",
    "sklearn.metrics.pairwise.PAIRED_DISTANCES.items",
    "sklearn.metrics.pairwise.PAIRWISE_DISTANCE_FUNCTIONS",
    "sklearn.metrics.pairwise.paired_distances",
    "sklearn.metrics.tests.test_pairwise.pytest",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise.test_paired_distances_callable": {
  "data": {
   "lineno": 378,
   "symbols_in_volume": [
    "ValueError",
    "numpy.abs",
    "numpy.random.RandomState",
    "sklearn.metrics.pairwise.paired_distances",
    "sklearn.metrics.tests.test_pairwise.pytest",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise.test_paired_euclidean_distances": {
  "data": {
   "lineno": 959,
   "symbols_in_volume": [
    "sklearn.metrics.pairwise.paired_euclidean_distances",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise.test_paired_manhattan_distances": {
  "data": {
   "lineno": 967,
   "symbols_in_volume": [
    "sklearn.metrics.pairwise.paired_manhattan_distances",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise.test_pairwise_boolean_distance": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "bool",
    "len",
    "numpy.isnan",
    "numpy.random.RandomState",
    "numpy.sum",
    "sklearn.exceptions.DataConversionWarning",
    "sklearn.metrics.pairwise.PAIRWISE_BOOLEAN_FUNCTIONS",
    "sklearn.metrics.pairwise.pairwise_distances",
    "sklearn.metrics.tests.test_pairwise.pytest",
    "sklearn.utils._testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise.test_pairwise_callable_nonstrict_metric": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "sklearn.metrics.pairwise.pairwise_distances"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise.test_pairwise_distances": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "numpy.nan",
    "numpy.pi",
    "numpy.random.RandomState",
    "scipy.sparse.csr_matrix",
    "scipy.spatial.distance.cityblock",
    "scipy.spatial.distance.cosine",
    "scipy.spatial.distance.minkowski",
    "sklearn.metrics.pairwise.cosine_distances",
    "sklearn.metrics.pairwise.euclidean_distances",
    "sklearn.metrics.pairwise.haversine_distances",
    "sklearn.metrics.pairwise.manhattan_distances",
    "sklearn.metrics.pairwise.nan_euclidean_distances",
    "sklearn.metrics.pairwise.pairwise_distances",
    "sklearn.metrics.tests.test_pairwise.pytest",
    "sklearn.utils._testing.assert_array_almost_equal",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise.test_pairwise_distances_argmin_min": {
  "data": {
   "lineno": 398,
   "symbols_in_volume": [
    "len",
    "numpy.float32",
    "numpy.ndarray",
    "numpy.random.RandomState",
    "numpy.testing.assert_almost_equal",
    "range",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.dok_matrix",
    "scipy.spatial.distance.minkowski",
    "sklearn.metrics.pairwise.pairwise_distances",
    "sklearn.metrics.pairwise.pairwise_distances_argmin",
    "sklearn.metrics.pairwise.pairwise_distances_argmin_min",
    "sklearn.utils._testing.assert_array_almost_equal",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise.test_pairwise_distances_chunked": {
  "data": {
   "lineno": 575,
   "symbols_in_volume": [
    "StopIteration",
    "ValueError",
    "isinstance",
    "next",
    "numpy.random.RandomState",
    "range",
    "sklearn.metrics.pairwise.pairwise_distances",
    "sklearn.metrics.pairwise.pairwise_distances_chunked",
    "sklearn.metrics.tests.test_pairwise.check_pairwise_distances_chunked",
    "sklearn.metrics.tests.test_pairwise.pytest",
    "sklearn.utils._testing.ignore_warnings",
    "types.GeneratorType"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise.test_pairwise_distances_chunked_diagonal": {
  "data": {
   "lineno": 553,
   "symbols_in_volume": [
    "len",
    "list",
    "numpy.diag",
    "numpy.random.RandomState",
    "numpy.vstack",
    "sklearn.metrics.pairwise.pairwise_distances_chunked",
    "sklearn.metrics.tests.test_pairwise.pytest",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise.test_pairwise_distances_chunked_reduce": {
  "data": {
   "lineno": 472,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "list",
    "numpy.random.RandomState",
    "numpy.vstack",
    "sklearn.metrics.pairwise.pairwise_distances",
    "sklearn.metrics.pairwise.pairwise_distances_chunked",
    "sklearn.metrics.tests.test_pairwise._reduce_func",
    "sklearn.utils._testing.assert_allclose",
    "types.GeneratorType"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise.test_pairwise_distances_chunked_reduce_invalid": {
  "data": {
   "lineno": 513,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "next",
    "numpy.arange",
    "numpy.concatenate",
    "sklearn.metrics.pairwise.pairwise_distances_chunked",
    "sklearn.metrics.tests.test_pairwise.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise.test_pairwise_distances_chunked_reduce_none": {
  "data": {
   "lineno": 486,
   "symbols_in_volume": [
    "all",
    "isinstance",
    "len",
    "list",
    "numpy.random.RandomState",
    "sklearn.metrics.pairwise.pairwise_distances_chunked",
    "types.GeneratorType"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise.test_pairwise_distances_chunked_reduce_valid": {
  "data": {
   "lineno": 499,
   "symbols_in_volume": [
    "list",
    "next",
    "numpy.arange",
    "numpy.array",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.dok_matrix",
    "sklearn.metrics.pairwise.pairwise_distances_chunked",
    "sklearn.metrics.tests.test_pairwise.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise.test_pairwise_distances_data_derived_params": {
  "data": {
   "lineno": 1255,
   "symbols_in_volume": [
    "FutureWarning",
    "dist_function",
    "numpy.cov",
    "numpy.linalg.inv",
    "numpy.random.RandomState",
    "numpy.var",
    "numpy.vstack",
    "scipy.spatial.distance.cdist",
    "scipy.spatial.distance.pdist",
    "scipy.spatial.distance.squareform",
    "sklearn.config_context",
    "sklearn.metrics.pairwise.pairwise_distances",
    "sklearn.metrics.pairwise.pairwise_distances_chunked",
    "sklearn.metrics.tests.test_pairwise.pytest",
    "sklearn.utils._testing.assert_allclose",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise.test_pairwise_kernels": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "ValueError",
    "function",
    "numpy.random.RandomState",
    "scipy.sparse.csr_matrix",
    "sklearn.metrics.pairwise.PAIRWISE_KERNEL_FUNCTIONS",
    "sklearn.metrics.pairwise.pairwise_kernels",
    "sklearn.metrics.tests.test_pairwise.pytest",
    "sklearn.utils._testing.assert_array_almost_equal",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise.test_pairwise_kernels_callable": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.metrics.pairwise.pairwise_kernels",
    "sklearn.metrics.pairwise.rbf_kernel",
    "sklearn.metrics.tests.test_pairwise.callable_rbf_kernel",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise.test_pairwise_kernels_filter_param": {
  "data": {
   "lineno": 343,
   "symbols_in_volume": [
    "TypeError",
    "numpy.random.RandomState",
    "sklearn.metrics.pairwise.pairwise_kernels",
    "sklearn.metrics.pairwise.rbf_kernel",
    "sklearn.metrics.tests.test_pairwise.pytest",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise.test_pairwise_parallel": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "array_constr",
    "func",
    "int",
    "numpy.array",
    "numpy.float64",
    "numpy.random.RandomState",
    "scipy.sparse.csr_matrix",
    "scipy.spatial.distance.wminkowski",
    "sklearn.metrics.pairwise.pairwise_distances",
    "sklearn.metrics.pairwise.pairwise_kernels",
    "sklearn.metrics.tests.test_pairwise._wminkowski_kwds",
    "sklearn.metrics.tests.test_pairwise.callable_rbf_kernel",
    "sklearn.metrics.tests.test_pairwise.pytest",
    "sklearn.utils._testing.assert_allclose",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise.test_pairwise_precomputed": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "ValueError",
    "func",
    "isinstance",
    "numpy.array",
    "numpy.ndarray",
    "numpy.zeros",
    "sklearn.metrics.pairwise.pairwise_distances",
    "sklearn.metrics.pairwise.pairwise_kernels",
    "sklearn.metrics.tests.test_pairwise.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise.test_pairwise_precomputed_non_negative": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "ValueError",
    "numpy.full",
    "sklearn.metrics.pairwise.pairwise_distances",
    "sklearn.metrics.tests.test_pairwise.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise.test_pairwise_similarity_sparse_output": {
  "data": {
   "lineno": 1088,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "pairwise_func",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.issparse",
    "sklearn.metrics.pairwise.cosine_similarity",
    "sklearn.metrics.pairwise.linear_kernel",
    "sklearn.metrics.pairwise.pairwise_kernels",
    "sklearn.metrics.tests.test_pairwise.pytest",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise.test_parallel_pairwise_distances_diagonal": {
  "data": {
   "lineno": 565,
   "symbols_in_volume": [
    "numpy.diag",
    "numpy.random.RandomState",
    "sklearn.metrics.pairwise.pairwise_distances",
    "sklearn.metrics.tests.test_pairwise.pytest",
    "sklearn.utils._testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise.test_rbf_kernel": {
  "data": {
   "lineno": 1068,
   "symbols_in_volume": [
    "numpy.ones",
    "numpy.random.RandomState",
    "sklearn.metrics.pairwise.rbf_kernel",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise.tuplify": {
  "data": {
   "lineno": 1206,
   "symbols_in_volume": [
    "len",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise.wminkowski": {
  "data": {
   "shadows": "scipy.spatial.distance.wminkowski"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_ranking": {
  "data": {},
  "type": "module"
 },
 "sklearn.metrics.tests.test_ranking.LogisticRegression": {
  "data": {
   "shadows": "sklearn.linear_model.LogisticRegression"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_ranking.UndefinedMetricWarning": {
  "data": {
   "shadows": "sklearn.exceptions.UndefinedMetricWarning"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_ranking._auc": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "float",
    "len",
    "numpy.sum",
    "numpy.unique"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking._average_precision": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "len",
    "numpy.argsort",
    "numpy.sum",
    "numpy.unique",
    "range"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking._average_precision_slow": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "len",
    "list",
    "range",
    "reversed",
    "sklearn.metrics.precision_recall_curve"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking._dcg_sample_scores": {
  "data": {
   "shadows": "sklearn.metrics._ranking._dcg_sample_scores"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_ranking._my_lrap": {
  "data": {
   "lineno": 1215,
   "symbols_in_volume": [
    "numpy.bincount",
    "numpy.empty",
    "numpy.unique",
    "range",
    "sklearn.utils.validation.check_array",
    "sklearn.utils.validation.check_consistent_length",
    "sum"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking._ndcg_sample_scores": {
  "data": {
   "shadows": "sklearn.metrics._ranking._ndcg_sample_scores"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_ranking._partial_roc_auc_score": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "_partial_roc",
    "sklearn.metrics.auc"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking._partial_roc_auc_score._partial_roc": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "numpy.append",
    "numpy.argmax",
    "numpy.interp",
    "sklearn.metrics.roc_curve"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking._sparse_random_matrix": {
  "data": {
   "shadows": "sklearn.random_projection._sparse_random_matrix"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_ranking._test_dcg_score_for": {
  "data": {
   "lineno": 1481,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.log2",
    "numpy.sort",
    "sklearn.metrics._ranking._dcg_sample_scores",
    "sklearn.metrics.tests.test_ranking.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking._test_ndcg_score_for": {
  "data": {
   "lineno": 1577,
   "symbols_in_volume": [
    "numpy.ones",
    "numpy.zeros",
    "sklearn.metrics._ranking._dcg_sample_scores",
    "sklearn.metrics._ranking._ndcg_sample_scores",
    "sklearn.metrics.tests.test_ranking.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking._test_precision_recall_curve": {
  "data": {
   "lineno": 739,
   "symbols_in_volume": [
    "numpy.zeros_like",
    "sklearn.metrics.average_precision_score",
    "sklearn.metrics.precision_recall_curve",
    "sklearn.metrics.tests.test_ranking._average_precision",
    "sklearn.metrics.tests.test_ranking._average_precision_slow",
    "sklearn.utils._testing.assert_almost_equal",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.accuracy_score": {
  "data": {
   "shadows": "sklearn.metrics.accuracy_score"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_ranking.assert_allclose": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_allclose"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_ranking.assert_almost_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_almost_equal"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_ranking.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_ranking.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_ranking.assert_warns": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_warns"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_ranking.auc": {
  "data": {
   "shadows": "sklearn.metrics.auc"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_ranking.average_precision_score": {
  "data": {
   "shadows": "sklearn.metrics.average_precision_score"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_ranking.check_alternative_lrap_implementation": {
  "data": {
   "lineno": 1253,
   "symbols_in_volume": [
    "hasattr",
    "sklearn.datasets.make_multilabel_classification",
    "sklearn.metrics.label_ranking_average_precision_score",
    "sklearn.metrics.tests.test_ranking._my_lrap",
    "sklearn.random_projection._sparse_random_matrix",
    "sklearn.utils._testing.assert_almost_equal",
    "sklearn.utils.validation.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.check_array": {
  "data": {
   "shadows": "sklearn.utils.validation.check_array"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_ranking.check_consistent_length": {
  "data": {
   "shadows": "sklearn.utils.validation.check_consistent_length"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_ranking.check_lrap_error_raised": {
  "data": {
   "lineno": 1149,
   "symbols_in_volume": [
    "ValueError",
    "lrap_score",
    "sklearn.metrics.tests.test_ranking.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.check_lrap_only_ties": {
  "data": {
   "lineno": 1175,
   "symbols_in_volume": [
    "lrap_score",
    "numpy.ones",
    "numpy.zeros",
    "range",
    "sklearn.utils._testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.check_lrap_toy": {
  "data": {
   "lineno": 1071,
   "symbols_in_volume": [
    "lrap_score",
    "sklearn.utils._testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.check_lrap_without_tie_and_increasing_score": {
  "data": {
   "lineno": 1191,
   "symbols_in_volume": [
    "lrap_score",
    "numpy.arange",
    "numpy.zeros",
    "range",
    "sklearn.utils._testing.assert_almost_equal",
    "sum"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.check_random_state": {
  "data": {
   "shadows": "sklearn.utils.validation.check_random_state"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_ranking.check_zero_or_all_relevant_labels": {
  "data": {
   "lineno": 1127,
   "symbols_in_volume": [
    "lrap_score",
    "numpy.ones",
    "numpy.zeros",
    "numpy.zeros_like",
    "range",
    "sklearn.utils._testing.assert_almost_equal",
    "sklearn.utils.validation.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.coverage_error": {
  "data": {
   "shadows": "sklearn.metrics.coverage_error"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_ranking.csr_matrix": {
  "data": {
   "shadows": "scipy.sparse.csr_matrix"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_ranking.datasets": {
  "data": {
   "shadows": "sklearn.datasets"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_ranking.dcg_score": {
  "data": {
   "shadows": "sklearn.metrics.dcg_score"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_ranking.det_curve": {
  "data": {
   "shadows": "sklearn.metrics.det_curve"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_ranking.label_ranking_average_precision_score": {
  "data": {
   "shadows": "sklearn.metrics.label_ranking_average_precision_score"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_ranking.label_ranking_loss": {
  "data": {
   "shadows": "sklearn.metrics.label_ranking_loss"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_ranking.make_multilabel_classification": {
  "data": {
   "shadows": "sklearn.datasets.make_multilabel_classification"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_ranking.make_prediction": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "int",
    "numpy.arange",
    "numpy.c_",
    "numpy.random.RandomState",
    "sklearn.datasets.load_iris",
    "sklearn.svm.SVC",
    "sklearn.utils.validation.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.ndcg_score": {
  "data": {
   "shadows": "sklearn.metrics.ndcg_score"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_ranking.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_ranking.precision_recall_curve": {
  "data": {
   "shadows": "sklearn.metrics.precision_recall_curve"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_ranking.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_ranking.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_ranking.roc_auc_score": {
  "data": {
   "shadows": "sklearn.metrics.roc_auc_score"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_ranking.roc_curve": {
  "data": {
   "shadows": "sklearn.metrics.roc_curve"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_ranking.softmax": {
  "data": {
   "shadows": "sklearn.utils.extmath.softmax"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_ranking.svm": {
  "data": {
   "shadows": "sklearn.svm"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_ranking.test_alternative_lrap_implementation": {
  "data": {
   "lineno": 1297,
   "symbols_in_volume": [
    "range",
    "sklearn.metrics.label_ranking_average_precision_score",
    "sklearn.metrics.tests.test_ranking.check_alternative_lrap_implementation",
    "sklearn.metrics.tests.test_ranking.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.test_auc": {
  "data": {
   "lineno": 423,
   "symbols_in_volume": [
    "sklearn.metrics.auc",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.test_auc_errors": {
  "data": {
   "lineno": 442,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "sklearn.metrics.auc",
    "sklearn.metrics.tests.test_ranking.pytest",
    "sklearn.metrics.tests.test_ranking.re"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.test_auc_score_non_binary_class": {
  "data": {
   "lineno": 639,
   "symbols_in_volume": [
    "ValueError",
    "numpy.full",
    "numpy.ones",
    "numpy.zeros",
    "sklearn.metrics.roc_auc_score",
    "sklearn.metrics.tests.test_ranking.pytest",
    "sklearn.metrics.tests.test_ranking.warnings",
    "sklearn.utils.validation.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.test_average_precision_constant_values": {
  "data": {
   "lineno": 877,
   "symbols_in_volume": [
    "int",
    "numpy.ones",
    "numpy.zeros",
    "sklearn.metrics.average_precision_score"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.test_average_precision_score_pos_label_errors": {
  "data": {
   "lineno": 891,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "sklearn.metrics.average_precision_score",
    "sklearn.metrics.tests.test_ranking.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.test_binary_clf_curve_implicit_pos_label": {
  "data": {
   "lineno": 684,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "numpy.testing.assert_allclose",
    "object",
    "sklearn.metrics.precision_recall_curve",
    "sklearn.metrics.roc_curve",
    "sklearn.metrics.tests.test_ranking.pytest",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.test_binary_clf_curve_multiclass_error": {
  "data": {
   "lineno": 671,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.metrics.precision_recall_curve",
    "sklearn.metrics.roc_curve",
    "sklearn.metrics.tests.test_ranking.pytest",
    "sklearn.utils.validation.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.test_coverage_error": {
  "data": {
   "lineno": 1326,
   "symbols_in_volume": [
    "sklearn.metrics.coverage_error",
    "sklearn.utils._testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.test_coverage_tie_handling": {
  "data": {
   "lineno": 1374,
   "symbols_in_volume": [
    "sklearn.metrics.coverage_error",
    "sklearn.utils._testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.test_dcg_score": {
  "data": {
   "lineno": 1473,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.datasets.make_multilabel_classification",
    "sklearn.metrics.tests.test_ranking._test_dcg_score_for"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.test_dcg_ties": {
  "data": {
   "lineno": 1493,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.asarray",
    "numpy.log2",
    "numpy.zeros",
    "sklearn.metrics._ranking._dcg_sample_scores",
    "sklearn.metrics.tests.test_ranking.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.test_det_curve_bad_input": {
  "data": {
   "lineno": 1025,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.metrics.det_curve",
    "sklearn.metrics.tests.test_ranking.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.test_det_curve_constant_scores": {
  "data": {
   "lineno": 994,
   "symbols_in_volume": [
    "numpy.full",
    "sklearn.metrics.det_curve",
    "sklearn.metrics.tests.test_ranking.pytest",
    "sklearn.utils._testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.test_det_curve_perfect_scores": {
  "data": {
   "lineno": 1008,
   "symbols_in_volume": [
    "sklearn.metrics.det_curve",
    "sklearn.metrics.tests.test_ranking.pytest",
    "sklearn.utils._testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.test_det_curve_pos_label": {
  "data": {
   "lineno": 1045,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.metrics.det_curve",
    "sklearn.metrics.tests.test_ranking.pytest",
    "sklearn.utils._testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.test_det_curve_sanity_check": {
  "data": {
   "lineno": 985,
   "symbols_in_volume": [
    "sklearn.metrics.det_curve",
    "sklearn.utils._testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.test_det_curve_tie_handling": {
  "data": {
   "lineno": 966,
   "symbols_in_volume": [
    "sklearn.metrics.det_curve",
    "sklearn.metrics.tests.test_ranking.pytest",
    "sklearn.utils._testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.test_det_curve_toydata": {
  "data": {
   "lineno": 935,
   "symbols_in_volume": [
    "sklearn.metrics.det_curve",
    "sklearn.metrics.tests.test_ranking.pytest",
    "sklearn.utils._testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.test_label_ranking_avp": {
  "data": {
   "lineno": 1280,
   "symbols_in_volume": [
    "check",
    "sklearn.metrics.label_ranking_average_precision_score",
    "sklearn.metrics.tests.test_ranking._my_lrap",
    "sklearn.metrics.tests.test_ranking.check_lrap_only_ties",
    "sklearn.metrics.tests.test_ranking.check_lrap_toy",
    "sklearn.metrics.tests.test_ranking.check_lrap_without_tie_and_increasing_score",
    "sklearn.metrics.tests.test_ranking.check_zero_or_all_relevant_labels",
    "sklearn.metrics.tests.test_ranking.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.test_label_ranking_loss": {
  "data": {
   "lineno": 1390,
   "symbols_in_volume": [
    "numpy.array",
    "scipy.sparse.csr_matrix",
    "sklearn.metrics.label_ranking_loss",
    "sklearn.utils._testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.test_lrap_error_raised": {
  "data": {
   "lineno": 1293,
   "symbols_in_volume": [
    "sklearn.metrics.label_ranking_average_precision_score",
    "sklearn.metrics.tests.test_ranking.check_lrap_error_raised"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.test_lrap_sample_weighting_zero_labels": {
  "data": {
   "lineno": 1307,
   "symbols_in_volume": [
    "bool",
    "numpy.array",
    "numpy.sum",
    "sklearn.metrics.label_ranking_average_precision_score",
    "sklearn.utils._testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.test_multiclass_ovo_roc_auc_toydata": {
  "data": {
   "lineno": 460,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.average",
    "sklearn.metrics.roc_auc_score",
    "sklearn.metrics.tests.test_ranking.pytest",
    "sklearn.utils._testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.test_multiclass_ovo_roc_auc_toydata_binary": {
  "data": {
   "lineno": 512,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.metrics.roc_auc_score",
    "sklearn.metrics.tests.test_ranking.pytest",
    "sklearn.utils._testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.test_multiclass_ovr_roc_auc_toydata": {
  "data": {
   "lineno": 540,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.metrics.roc_auc_score",
    "sklearn.metrics.tests.test_ranking.pytest",
    "sklearn.utils._testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.test_ndcg_ignore_ties_with_k": {
  "data": {
   "lineno": 1513,
   "symbols_in_volume": [
    "numpy.arange",
    "sklearn.metrics.ndcg_score",
    "sklearn.metrics.tests.test_ranking.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.test_ndcg_invariant": {
  "data": {
   "lineno": 1519,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.random.RandomState",
    "sklearn.metrics.ndcg_score",
    "sklearn.metrics.tests.test_ranking.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.test_ndcg_score": {
  "data": {
   "lineno": 1569,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.datasets.make_multilabel_classification",
    "sklearn.metrics.tests.test_ranking._test_ndcg_score_for"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.test_ndcg_toy_examples": {
  "data": {
   "lineno": 1531,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.eye",
    "numpy.log10",
    "numpy.log2",
    "numpy.ones",
    "numpy.random.RandomState",
    "numpy.tile",
    "sklearn.metrics._ranking._dcg_sample_scores",
    "sklearn.metrics._ranking._ndcg_sample_scores",
    "sklearn.metrics.dcg_score",
    "sklearn.metrics.ndcg_score",
    "sklearn.metrics.tests.test_ranking.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.test_partial_roc_auc_score": {
  "data": {
   "lineno": 1592,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "numpy.linspace",
    "sklearn.metrics.roc_auc_score",
    "sklearn.metrics.tests.test_ranking._partial_roc_auc_score",
    "sklearn.metrics.tests.test_ranking.make_prediction",
    "sklearn.metrics.tests.test_ranking.pytest",
    "sklearn.utils._testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.test_precision_recall_curve": {
  "data": {
   "lineno": 719,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.where",
    "sklearn.metrics.precision_recall_curve",
    "sklearn.metrics.tests.test_ranking._test_precision_recall_curve",
    "sklearn.metrics.tests.test_ranking.make_prediction",
    "sklearn.utils._testing.assert_array_almost_equal",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.test_precision_recall_curve_errors": {
  "data": {
   "lineno": 758,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.metrics.precision_recall_curve",
    "sklearn.metrics.tests.test_ranking.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.test_precision_recall_curve_toydata": {
  "data": {
   "lineno": 764,
   "symbols_in_volume": [
    "Exception",
    "numpy.array",
    "numpy.errstate",
    "sklearn.metrics.average_precision_score",
    "sklearn.metrics.precision_recall_curve",
    "sklearn.metrics.tests.test_ranking.pytest",
    "sklearn.utils._testing.assert_almost_equal",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.test_ranking_appropriate_input_shape": {
  "data": {
   "lineno": 1443,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.metrics.label_ranking_loss",
    "sklearn.metrics.tests.test_ranking.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.test_ranking_loss_ties_handling": {
  "data": {
   "lineno": 1459,
   "symbols_in_volume": [
    "sklearn.metrics.label_ranking_loss",
    "sklearn.utils._testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.test_roc_auc_score_multiclass_error": {
  "data": {
   "lineno": 611,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.metrics.roc_auc_score",
    "sklearn.metrics.tests.test_ranking.pytest",
    "sklearn.utils.extmath.softmax",
    "sklearn.utils.validation.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.test_roc_auc_score_multiclass_labels_error": {
  "data": {
   "lineno": 574,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "sklearn.metrics.roc_auc_score",
    "sklearn.metrics.tests.test_ranking.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.test_roc_curve": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "sklearn.metrics.auc",
    "sklearn.metrics.roc_auc_score",
    "sklearn.metrics.roc_curve",
    "sklearn.metrics.tests.test_ranking._auc",
    "sklearn.metrics.tests.test_ranking.make_prediction",
    "sklearn.metrics.tests.test_ranking.pytest",
    "sklearn.utils._testing.assert_almost_equal",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.test_roc_curve_confidence": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "sklearn.metrics.auc",
    "sklearn.metrics.roc_curve",
    "sklearn.metrics.tests.test_ranking.make_prediction",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.test_roc_curve_drop_intermediate": {
  "data": {
   "lineno": 394,
   "symbols_in_volume": [
    "sklearn.metrics.roc_curve",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.test_roc_curve_end_points": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.random.RandomState",
    "sklearn.metrics.roc_curve"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.test_roc_curve_fpr_tpr_increasing": {
  "data": {
   "lineno": 411,
   "symbols_in_volume": [
    "numpy.diff",
    "numpy.repeat",
    "sklearn.metrics.roc_curve"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.test_roc_curve_hard": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "numpy.ones",
    "numpy.zeros",
    "sklearn.metrics.auc",
    "sklearn.metrics.roc_curve",
    "sklearn.metrics.tests.test_ranking.make_prediction",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.test_roc_curve_multi": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.metrics.roc_curve",
    "sklearn.metrics.tests.test_ranking.make_prediction",
    "sklearn.metrics.tests.test_ranking.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.test_roc_curve_one_label": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "len",
    "numpy.full",
    "numpy.nan",
    "sklearn.exceptions.UndefinedMetricWarning",
    "sklearn.metrics.roc_curve",
    "sklearn.utils._testing.assert_array_equal",
    "sklearn.utils._testing.assert_warns"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.test_roc_curve_toydata": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "numpy.nan",
    "sklearn.exceptions.UndefinedMetricWarning",
    "sklearn.metrics.roc_auc_score",
    "sklearn.metrics.roc_curve",
    "sklearn.metrics.tests.test_ranking.pytest",
    "sklearn.utils._testing.assert_almost_equal",
    "sklearn.utils._testing.assert_array_almost_equal",
    "sklearn.utils._testing.assert_warns"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.test_roc_returns_consistency": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "numpy.sum",
    "sklearn.metrics.roc_curve",
    "sklearn.metrics.tests.test_ranking.make_prediction",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.test_score_scale_invariance": {
  "data": {
   "lineno": 910,
   "symbols_in_volume": [
    "sklearn.metrics.average_precision_score",
    "sklearn.metrics.roc_auc_score",
    "sklearn.metrics.tests.test_ranking.make_prediction"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.test_top_k_accuracy_score": {
  "data": {
   "lineno": 1617,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.metrics.tests.test_ranking.pytest",
    "sklearn.metrics.top_k_accuracy_score"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.test_top_k_accuracy_score_binary": {
  "data": {
   "lineno": 1633,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.int64",
    "sklearn.metrics.accuracy_score",
    "sklearn.metrics.tests.test_ranking.pytest",
    "sklearn.metrics.top_k_accuracy_score"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.test_top_k_accuracy_score_error": {
  "data": {
   "lineno": 1705,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "sklearn.metrics.tests.test_ranking.pytest",
    "sklearn.metrics.top_k_accuracy_score"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.test_top_k_accuracy_score_increasing": {
  "data": {
   "lineno": 1653,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.diff",
    "range",
    "sklearn.datasets.make_classification",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.metrics.top_k_accuracy_score",
    "sklearn.model_selection.train_test_split",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.test_top_k_accuracy_score_ties": {
  "data": {
   "lineno": 1672,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.metrics.tests.test_ranking.pytest",
    "sklearn.metrics.top_k_accuracy_score"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.test_top_k_accuracy_score_warning": {
  "data": {
   "lineno": 1689,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.exceptions.UndefinedMetricWarning",
    "sklearn.metrics.tests.test_ranking.pytest",
    "sklearn.metrics.top_k_accuracy_score",
    "sklearn.utils._testing.assert_warns"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.top_k_accuracy_score": {
  "data": {
   "shadows": "sklearn.metrics.top_k_accuracy_score"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_ranking.train_test_split": {
  "data": {
   "shadows": "sklearn.model_selection.train_test_split"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_ranking.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_regression": {
  "data": {},
  "type": "module"
 },
 "sklearn.metrics.tests.test_regression._check_reg_targets": {
  "data": {
   "shadows": "sklearn.metrics._regression._check_reg_targets"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_regression.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_regression.assert_almost_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_almost_equal"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_regression.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_regression.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_regression.explained_variance_score": {
  "data": {
   "shadows": "sklearn.metrics.explained_variance_score"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_regression.max_error": {
  "data": {
   "shadows": "sklearn.metrics.max_error"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_regression.mean_absolute_error": {
  "data": {
   "shadows": "sklearn.metrics.mean_absolute_error"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_regression.mean_absolute_percentage_error": {
  "data": {
   "shadows": "sklearn.metrics.mean_absolute_percentage_error"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_regression.mean_squared_error": {
  "data": {
   "shadows": "sklearn.metrics.mean_squared_error"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_regression.mean_squared_log_error": {
  "data": {
   "shadows": "sklearn.metrics.mean_squared_log_error"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_regression.mean_tweedie_deviance": {
  "data": {
   "shadows": "sklearn.metrics.mean_tweedie_deviance"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_regression.median_absolute_error": {
  "data": {
   "shadows": "sklearn.metrics.median_absolute_error"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_regression.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_regression.product": {
  "data": {
   "shadows": "itertools.product"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_regression.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_regression.r2_score": {
  "data": {
   "shadows": "sklearn.metrics.r2_score"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_regression.test__check_reg_targets": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "ValueError",
    "itertools.product",
    "numpy.reshape",
    "sklearn.metrics._regression._check_reg_targets",
    "sklearn.metrics.tests.test_regression.pytest",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_regression.test__check_reg_targets_exception": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.metrics._regression._check_reg_targets",
    "sklearn.metrics.tests.test_regression.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_regression.test_mean_absolute_percentage_error": {
  "data": {
   "lineno": 328,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.metrics.mean_absolute_percentage_error",
    "sklearn.metrics.tests.test_regression.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_regression.test_mean_squared_error_multioutput_raw_value_squared": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "numpy.sqrt",
    "sklearn.metrics.mean_squared_error",
    "sklearn.metrics.tests.test_regression.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_regression.test_multioutput_regression": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "numpy.around",
    "numpy.array",
    "numpy.isfinite",
    "sklearn.metrics.mean_absolute_error",
    "sklearn.metrics.mean_absolute_percentage_error",
    "sklearn.metrics.mean_squared_error",
    "sklearn.metrics.mean_squared_log_error",
    "sklearn.metrics.median_absolute_error",
    "sklearn.metrics.r2_score",
    "sklearn.utils._testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_regression.test_regression_custom_weights": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.log",
    "sklearn.metrics.explained_variance_score",
    "sklearn.metrics.mean_absolute_error",
    "sklearn.metrics.mean_absolute_percentage_error",
    "sklearn.metrics.mean_squared_error",
    "sklearn.metrics.mean_squared_log_error",
    "sklearn.metrics.r2_score",
    "sklearn.utils._testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_regression.test_regression_metrics": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.isfinite",
    "numpy.log",
    "numpy.sqrt",
    "numpy.sum",
    "sklearn.metrics.explained_variance_score",
    "sklearn.metrics.max_error",
    "sklearn.metrics.mean_absolute_error",
    "sklearn.metrics.mean_absolute_percentage_error",
    "sklearn.metrics.mean_squared_error",
    "sklearn.metrics.mean_squared_log_error",
    "sklearn.metrics.mean_tweedie_deviance",
    "sklearn.metrics.median_absolute_error",
    "sklearn.metrics.r2_score",
    "sklearn.utils._testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_regression.test_regression_metrics_at_limits": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "ValueError",
    "numpy.testing.assert_allclose",
    "sklearn.metrics.explained_variance_score",
    "sklearn.metrics.max_error",
    "sklearn.metrics.mean_absolute_error",
    "sklearn.metrics.mean_absolute_percentage_error",
    "sklearn.metrics.mean_squared_error",
    "sklearn.metrics.mean_squared_log_error",
    "sklearn.metrics.mean_tweedie_deviance",
    "sklearn.metrics.median_absolute_error",
    "sklearn.metrics.r2_score",
    "sklearn.metrics.tests.test_regression.pytest",
    "sklearn.utils._testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_regression.test_regression_multioutput_array": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.log",
    "numpy.mean",
    "sklearn.metrics.explained_variance_score",
    "sklearn.metrics.mean_absolute_error",
    "sklearn.metrics.mean_absolute_percentage_error",
    "sklearn.metrics.mean_squared_error",
    "sklearn.metrics.mean_squared_log_error",
    "sklearn.metrics.r2_score",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_regression.test_regression_single_sample": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "metric",
    "numpy.isnan",
    "sklearn.metrics.r2_score",
    "sklearn.metrics.tests.test_regression.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_regression.test_tweedie_deviance_continuity": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "numpy.testing.assert_allclose",
    "sklearn.metrics.mean_tweedie_deviance"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_score_objects": {
  "data": {},
  "type": "module"
 },
 "sklearn.metrics.tests.test_score_objects.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_score_objects.CLF_SCORERS": {
  "data": {
   "lineno": 66
  },
  "type": "constant"
 },
 "sklearn.metrics.tests.test_score_objects.CLUSTER_SCORERS": {
  "data": {
   "lineno": 77
  },
  "type": "constant"
 },
 "sklearn.metrics.tests.test_score_objects.DecisionTreeClassifier": {
  "data": {
   "shadows": "sklearn.tree.DecisionTreeClassifier"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_score_objects.DecisionTreeRegressor": {
  "data": {
   "shadows": "sklearn.tree.DecisionTreeRegressor"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_score_objects.DummyScorer": {
  "data": {
   "lineno": 173
  },
  "type": "class"
 },
 "sklearn.metrics.tests.test_score_objects.DummyScorer.__call__": {
  "data": {
   "lineno": 175
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_score_objects.ESTIMATORS": {
  "data": {
   "lineno": 119
  },
  "type": "constant"
 },
 "sklearn.metrics.tests.test_score_objects.EstimatorWithFit": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator"
   ]
  },
  "type": "class"
 },
 "sklearn.metrics.tests.test_score_objects.EstimatorWithFit.fit": {
  "data": {
   "lineno": 150
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_score_objects.EstimatorWithFitAndPredict": {
  "data": {
   "lineno": 163
  },
  "type": "class"
 },
 "sklearn.metrics.tests.test_score_objects.EstimatorWithFitAndPredict.fit": {
  "data": {
   "lineno": 165
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_score_objects.EstimatorWithFitAndPredict.predict": {
  "data": {
   "lineno": 169
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_score_objects.EstimatorWithFitAndScore": {
  "data": {
   "lineno": 154
  },
  "type": "class"
 },
 "sklearn.metrics.tests.test_score_objects.EstimatorWithFitAndScore.fit": {
  "data": {
   "lineno": 156
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_score_objects.EstimatorWithFitAndScore.score": {
  "data": {
   "lineno": 159
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_score_objects.EstimatorWithoutFit": {
  "data": {
   "lineno": 143
  },
  "type": "class"
 },
 "sklearn.metrics.tests.test_score_objects.GridSearchCV": {
  "data": {
   "shadows": "sklearn.model_selection.GridSearchCV"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_score_objects.KMeans": {
  "data": {
   "shadows": "sklearn.cluster.KMeans"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_score_objects.KNeighborsClassifier": {
  "data": {
   "shadows": "sklearn.neighbors.KNeighborsClassifier"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_score_objects.LinearSVC": {
  "data": {
   "shadows": "sklearn.svm.LinearSVC"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_score_objects.LogisticRegression": {
  "data": {
   "shadows": "sklearn.linear_model.LogisticRegression"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_score_objects.MULTILABEL_ONLY_SCORERS": {
  "data": {
   "lineno": 87
  },
  "type": "constant"
 },
 "sklearn.metrics.tests.test_score_objects.Mock": {
  "data": {
   "shadows": "unittest.mock.Mock"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_score_objects.OneVsRestClassifier": {
  "data": {
   "shadows": "sklearn.multiclass.OneVsRestClassifier"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_score_objects.Perceptron": {
  "data": {
   "shadows": "sklearn.linear_model.Perceptron"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_score_objects.REGRESSION_SCORERS": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "sklearn.metrics.tests.test_score_objects.REQUIRE_POSITIVE_Y_SCORERS": {
  "data": {
   "lineno": 90
  },
  "type": "constant"
 },
 "sklearn.metrics.tests.test_score_objects.Ridge": {
  "data": {
   "shadows": "sklearn.linear_model.Ridge"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_score_objects.SCORERS": {
  "data": {
   "shadows": "sklearn.metrics.SCORERS"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_score_objects.TEMP_FOLDER": {
  "data": {
   "lineno": 120
  },
  "type": "constant"
 },
 "sklearn.metrics.tests.test_score_objects._MultimetricScorer": {
  "data": {
   "shadows": "sklearn.metrics._scorer._MultimetricScorer"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_score_objects._PredictScorer": {
  "data": {
   "shadows": "sklearn.metrics._scorer._PredictScorer"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_score_objects._check_multimetric_scoring": {
  "data": {
   "shadows": "sklearn.metrics._scorer._check_multimetric_scoring"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_score_objects._make_estimators": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "dict",
    "sklearn.metrics.tests.test_score_objects.CLF_SCORERS",
    "sklearn.metrics.tests.test_score_objects.CLUSTER_SCORERS",
    "sklearn.metrics.tests.test_score_objects.MULTILABEL_ONLY_SCORERS",
    "sklearn.metrics.tests.test_score_objects.REGRESSION_SCORERS",
    "sklearn.metrics.tests.test_score_objects._require_positive_y",
    "sklearn.tree.DecisionTreeClassifier",
    "sklearn.tree.DecisionTreeRegressor"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_score_objects._passthrough_scorer": {
  "data": {
   "shadows": "sklearn.metrics._scorer._passthrough_scorer"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_score_objects._require_positive_y": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "abs"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_score_objects.accuracy_score": {
  "data": {
   "shadows": "sklearn.metrics.accuracy_score"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_score_objects.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_score_objects.assert_almost_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_almost_equal"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_score_objects.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_score_objects.average_precision_score": {
  "data": {
   "shadows": "sklearn.metrics.average_precision_score"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_score_objects.brier_score_loss": {
  "data": {
   "shadows": "sklearn.metrics.brier_score_loss"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_score_objects.check_scoring": {
  "data": {
   "shadows": "sklearn.metrics.check_scoring"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_score_objects.check_scoring_validator_for_single_metric_usecases": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "scorer",
    "scoring_validator",
    "sklearn.metrics._scorer._PredictScorer",
    "sklearn.metrics._scorer._passthrough_scorer",
    "sklearn.metrics.check_scoring",
    "sklearn.metrics.tests.test_score_objects.EstimatorWithFit",
    "sklearn.metrics.tests.test_score_objects.EstimatorWithFitAndPredict",
    "sklearn.metrics.tests.test_score_objects.EstimatorWithFitAndScore",
    "sklearn.metrics.tests.test_score_objects.EstimatorWithoutFit",
    "sklearn.metrics.tests.test_score_objects.pytest",
    "sklearn.utils._testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_score_objects.cluster_module": {
  "data": {
   "shadows": "sklearn.metrics.cluster"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_score_objects.cross_val_score": {
  "data": {
   "shadows": "sklearn.model_selection.cross_val_score"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_score_objects.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_score_objects.f1_score": {
  "data": {
   "shadows": "sklearn.metrics.f1_score"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_score_objects.fbeta_score": {
  "data": {
   "shadows": "sklearn.metrics.fbeta_score"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_score_objects.get_scorer": {
  "data": {
   "shadows": "sklearn.metrics.get_scorer"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_score_objects.ignore_warnings": {
  "data": {
   "shadows": "sklearn.utils._testing.ignore_warnings"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_score_objects.jaccard_score": {
  "data": {
   "shadows": "sklearn.metrics.jaccard_score"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_score_objects.joblib": {
  "data": {
   "shadows": "joblib"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_score_objects.load_breast_cancer": {
  "data": {
   "shadows": "sklearn.datasets.load_breast_cancer"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_score_objects.load_diabetes": {
  "data": {
   "shadows": "sklearn.datasets.load_diabetes"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_score_objects.log_loss": {
  "data": {
   "shadows": "sklearn.metrics.log_loss"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_score_objects.make_blobs": {
  "data": {
   "shadows": "sklearn.datasets.make_blobs"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_score_objects.make_classification": {
  "data": {
   "shadows": "sklearn.datasets.make_classification"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_score_objects.make_multilabel_classification": {
  "data": {
   "shadows": "sklearn.datasets.make_multilabel_classification"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_score_objects.make_pipeline": {
  "data": {
   "shadows": "sklearn.pipeline.make_pipeline"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_score_objects.make_regression": {
  "data": {
   "shadows": "sklearn.datasets.make_regression"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_score_objects.make_scorer": {
  "data": {
   "shadows": "sklearn.metrics.make_scorer"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_score_objects.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_score_objects.numbers": {
  "data": {
   "shadows": "numbers"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_score_objects.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_score_objects.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_score_objects.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_score_objects.precision_score": {
  "data": {
   "shadows": "sklearn.metrics.precision_score"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_score_objects.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_score_objects.r2_score": {
  "data": {
   "shadows": "sklearn.metrics.r2_score"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_score_objects.recall_score": {
  "data": {
   "shadows": "sklearn.metrics.recall_score"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_score_objects.roc_auc_score": {
  "data": {
   "shadows": "sklearn.metrics.roc_auc_score"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_score_objects.setup_module": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "sklearn.datasets.make_classification",
    "sklearn.datasets.make_multilabel_classification",
    "sklearn.metrics.tests.test_score_objects.ESTIMATORS",
    "sklearn.metrics.tests.test_score_objects.TEMP_FOLDER",
    "sklearn.metrics.tests.test_score_objects._make_estimators",
    "sklearn.metrics.tests.test_score_objects.joblib",
    "sklearn.metrics.tests.test_score_objects.os",
    "sklearn.metrics.tests.test_score_objects.tempfile"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_score_objects.shuffle": {
  "data": {
   "shadows": "sklearn.utils.shuffle"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_score_objects.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_score_objects.string_labeled_classification_problem": {
  "data": {
   "lineno": 770,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.flatnonzero",
    "numpy.hstack",
    "object",
    "sklearn.datasets.load_breast_cancer",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.metrics.tests.test_score_objects.pytest",
    "sklearn.model_selection.train_test_split",
    "sklearn.utils.shuffle"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_score_objects.teardown_module": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "sklearn.metrics.tests.test_score_objects.ESTIMATORS",
    "sklearn.metrics.tests.test_score_objects.TEMP_FOLDER",
    "sklearn.metrics.tests.test_score_objects.shutil"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_score_objects.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_score_objects.test_all_scorers_repr": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "repr",
    "sklearn.metrics.SCORERS.items"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_score_objects.test_average_precision_pos_label": {
  "data": {
   "lineno": 825,
   "symbols_in_volume": [
    "NotImplementedError",
    "ValueError",
    "average_precision_scorer",
    "copy.deepcopy",
    "functools.partial",
    "sklearn.metrics.average_precision_score",
    "sklearn.metrics.make_scorer",
    "sklearn.metrics.tests.test_score_objects.pytest",
    "sklearn.metrics.tests.test_score_objects.string_labeled_classification_problem"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_score_objects.test_average_precision_pos_label._predict_proba": {
  "data": {
   "lineno": 870,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_score_objects.test_brier_score_loss_pos_label": {
  "data": {
   "lineno": 886,
   "symbols_in_volume": [
    "brier_scorer",
    "sklearn.metrics.brier_score_loss",
    "sklearn.metrics.make_scorer",
    "sklearn.metrics.tests.test_score_objects.pytest",
    "sklearn.metrics.tests.test_score_objects.string_labeled_classification_problem"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_score_objects.test_check_scoring_and_check_multimetric_scoring": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "all",
    "dict",
    "isinstance",
    "list",
    "scorer",
    "sklearn.metrics._scorer._PredictScorer",
    "sklearn.metrics._scorer._check_multimetric_scoring",
    "sklearn.metrics.accuracy_score",
    "sklearn.metrics.check_scoring",
    "sklearn.metrics.make_scorer",
    "sklearn.metrics.precision_score",
    "sklearn.metrics.tests.test_score_objects.check_scoring_validator_for_single_metric_usecases",
    "sklearn.metrics.tests.test_score_objects.pytest",
    "sklearn.svm.LinearSVC",
    "sklearn.utils._testing.assert_almost_equal",
    "sorted"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_score_objects.test_check_scoring_and_check_multimetric_scoring_errors": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.metrics._scorer._check_multimetric_scoring",
    "sklearn.metrics.accuracy_score",
    "sklearn.metrics.make_scorer",
    "sklearn.metrics.precision_score",
    "sklearn.metrics.tests.test_score_objects.EstimatorWithFitAndPredict",
    "sklearn.metrics.tests.test_score_objects.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_score_objects.test_check_scoring_gridsearchcv": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "isinstance",
    "scorer",
    "sklearn.metrics._scorer._PredictScorer",
    "sklearn.metrics.check_scoring",
    "sklearn.metrics.tests.test_score_objects.DummyScorer",
    "sklearn.metrics.tests.test_score_objects.EstimatorWithFit",
    "sklearn.model_selection.GridSearchCV",
    "sklearn.model_selection.cross_val_score",
    "sklearn.pipeline.make_pipeline",
    "sklearn.svm.LinearSVC",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_score_objects.test_classification_scorer_sample_weight": {
  "data": {
   "lineno": 486,
   "symbols_in_volume": [
    "TypeError",
    "numpy.ones_like",
    "scorer",
    "scorer._kwargs",
    "sklearn.datasets.make_classification",
    "sklearn.datasets.make_multilabel_classification",
    "sklearn.metrics.SCORERS.items",
    "sklearn.metrics.tests.test_score_objects.MULTILABEL_ONLY_SCORERS",
    "sklearn.metrics.tests.test_score_objects.REGRESSION_SCORERS",
    "sklearn.metrics.tests.test_score_objects._make_estimators",
    "sklearn.model_selection.train_test_split",
    "sklearn.utils._testing.assert_almost_equal",
    "sklearn.utils._testing.ignore_warnings",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_score_objects.test_classification_scores": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": [
    "metric",
    "repr",
    "scorer",
    "sklearn.datasets.make_blobs",
    "sklearn.metrics.f1_score",
    "sklearn.metrics.fbeta_score",
    "sklearn.metrics.get_scorer",
    "sklearn.metrics.jaccard_score",
    "sklearn.metrics.make_scorer",
    "sklearn.metrics.precision_score",
    "sklearn.metrics.recall_score",
    "sklearn.metrics.tests.test_score_objects.pickle",
    "sklearn.model_selection.train_test_split",
    "sklearn.svm.LinearSVC",
    "sklearn.utils._testing.assert_almost_equal",
    "unpickled_scorer"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_score_objects.test_make_scorer": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.metrics.make_scorer",
    "sklearn.metrics.tests.test_score_objects.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_score_objects.test_multiclass_roc_no_proba_scorer_errors": {
  "data": {
   "lineno": 756,
   "symbols_in_volume": [
    "AttributeError",
    "scorer",
    "sklearn.datasets.make_classification",
    "sklearn.linear_model.Perceptron",
    "sklearn.metrics.get_scorer",
    "sklearn.metrics.tests.test_score_objects.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_score_objects.test_multiclass_roc_proba_scorer": {
  "data": {
   "lineno": 722,
   "symbols_in_volume": [
    "functools.partial",
    "metric",
    "scorer",
    "sklearn.datasets.make_classification",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.metrics.get_scorer",
    "sklearn.metrics.roc_auc_score",
    "sklearn.metrics.tests.test_score_objects.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_score_objects.test_multiclass_roc_proba_scorer_label": {
  "data": {
   "lineno": 740,
   "symbols_in_volume": [
    "scorer",
    "sklearn.datasets.make_classification",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.metrics.make_scorer",
    "sklearn.metrics.roc_auc_score",
    "sklearn.metrics.tests.test_score_objects.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_score_objects.test_multimetric_scorer_calls_method_once": {
  "data": {
   "lineno": 611,
   "symbols_in_volume": [
    "multi_scorer",
    "numpy.array",
    "numpy.c_",
    "numpy.random.rand",
    "set",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.metrics._scorer._MultimetricScorer",
    "sklearn.metrics._scorer._check_multimetric_scoring",
    "sklearn.metrics.tests.test_score_objects.pytest",
    "unittest.mock.Mock"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_score_objects.test_multimetric_scorer_calls_method_once_classifier_no_decision": {
  "data": {
   "lineno": 651,
   "symbols_in_volume": [
    "MockKNeighborsClassifier",
    "numpy.array",
    "scorer",
    "sklearn.metrics._scorer._MultimetricScorer",
    "sklearn.metrics._scorer._check_multimetric_scoring"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_score_objects.test_multimetric_scorer_calls_method_once_classifier_no_decision.MockKNeighborsClassifier": {
  "data": {
   "lineno": 654,
   "symbols_in_volume": [
    "sklearn.neighbors.KNeighborsClassifier"
   ]
  },
  "type": "class"
 },
 "sklearn.metrics.tests.test_score_objects.test_multimetric_scorer_calls_method_once_classifier_no_decision.MockKNeighborsClassifier.predict_proba": {
  "data": {
   "lineno": 655,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_score_objects.test_multimetric_scorer_calls_method_once_regressor_threshold": {
  "data": {
   "lineno": 674,
   "symbols_in_volume": [
    "MockDecisionTreeRegressor",
    "numpy.array",
    "scorer",
    "sklearn.metrics._scorer._MultimetricScorer",
    "sklearn.metrics._scorer._check_multimetric_scoring"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_score_objects.test_multimetric_scorer_calls_method_once_regressor_threshold.MockDecisionTreeRegressor": {
  "data": {
   "lineno": 677,
   "symbols_in_volume": [
    "sklearn.tree.DecisionTreeRegressor"
   ]
  },
  "type": "class"
 },
 "sklearn.metrics.tests.test_score_objects.test_multimetric_scorer_calls_method_once_regressor_threshold.MockDecisionTreeRegressor.predict": {
  "data": {
   "lineno": 678,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_score_objects.test_multimetric_scorer_sanity_check": {
  "data": {
   "lineno": 697,
   "symbols_in_volume": [
    "multi_scorer",
    "numpy.testing.assert_allclose",
    "sklearn.datasets.make_classification",
    "sklearn.metrics._scorer._MultimetricScorer",
    "sklearn.metrics._scorer._check_multimetric_scoring",
    "sklearn.metrics.get_scorer",
    "sklearn.tree.DecisionTreeClassifier"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_score_objects.test_non_symmetric_metric_pos_label": {
  "data": {
   "lineno": 911,
   "symbols_in_volume": [
    "score_func",
    "scorer",
    "sklearn.metrics.f1_score",
    "sklearn.metrics.jaccard_score",
    "sklearn.metrics.make_scorer",
    "sklearn.metrics.precision_score",
    "sklearn.metrics.recall_score",
    "sklearn.metrics.tests.test_score_objects.pytest",
    "sklearn.metrics.tests.test_score_objects.string_labeled_classification_problem"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_score_objects.test_raises_on_score_list": {
  "data": {
   "lineno": 472,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.datasets.make_blobs",
    "sklearn.metrics.f1_score",
    "sklearn.metrics.make_scorer",
    "sklearn.metrics.tests.test_score_objects.pytest",
    "sklearn.model_selection.GridSearchCV",
    "sklearn.model_selection.cross_val_score",
    "sklearn.tree.DecisionTreeClassifier",
    "sklearn.utils._testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_score_objects.test_regression_scorer_sample_weight": {
  "data": {
   "lineno": 536,
   "symbols_in_volume": [
    "TypeError",
    "numpy.ones_like",
    "scorer",
    "sklearn.datasets.make_regression",
    "sklearn.metrics.SCORERS.items",
    "sklearn.metrics.tests.test_score_objects.REGRESSION_SCORERS",
    "sklearn.metrics.tests.test_score_objects._require_positive_y",
    "sklearn.model_selection.train_test_split",
    "sklearn.tree.DecisionTreeRegressor",
    "sklearn.utils._testing.assert_almost_equal",
    "sklearn.utils._testing.ignore_warnings",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_score_objects.test_regression_scorers": {
  "data": {
   "lineno": 354,
   "symbols_in_volume": [
    "sklearn.datasets.load_diabetes",
    "sklearn.linear_model.Ridge",
    "sklearn.metrics.get_scorer",
    "sklearn.metrics.r2_score",
    "sklearn.model_selection.train_test_split",
    "sklearn.utils._testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_score_objects.test_scorer_memmap_input": {
  "data": {
   "lineno": 576,
   "symbols_in_volume": [
    "isinstance",
    "scorer",
    "sklearn.metrics.SCORERS",
    "sklearn.metrics.tests.test_score_objects.ESTIMATORS",
    "sklearn.metrics.tests.test_score_objects.MULTILABEL_ONLY_SCORERS",
    "sklearn.metrics.tests.test_score_objects.REQUIRE_POSITIVE_Y_SCORERS",
    "sklearn.metrics.tests.test_score_objects._require_positive_y",
    "sklearn.metrics.tests.test_score_objects.numbers",
    "sklearn.metrics.tests.test_score_objects.pytest",
    "sklearn.utils._testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_score_objects.test_scorer_no_op_multiclass_select_proba": {
  "data": {
   "lineno": 959,
   "symbols_in_volume": [
    "numpy.unique",
    "scorer",
    "sklearn.datasets.make_classification",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.metrics.make_scorer",
    "sklearn.metrics.roc_auc_score",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_score_objects.test_scorer_select_proba_error": {
  "data": {
   "lineno": 934,
   "symbols_in_volume": [
    "ValueError",
    "numpy.unique",
    "scorer",
    "scorer._kwargs",
    "sklearn.datasets.make_classification",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.metrics.average_precision_score",
    "sklearn.metrics.brier_score_loss",
    "sklearn.metrics.f1_score",
    "sklearn.metrics.make_scorer",
    "sklearn.metrics.tests.test_score_objects.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_score_objects.test_scoring_is_not_metric": {
  "data": {
   "lineno": 598,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.cluster.KMeans",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.linear_model.Ridge",
    "sklearn.metrics.check_scoring",
    "sklearn.metrics.cluster.adjusted_rand_score",
    "sklearn.metrics.cluster.rand_score",
    "sklearn.metrics.f1_score",
    "sklearn.metrics.r2_score",
    "sklearn.metrics.roc_auc_score",
    "sklearn.metrics.tests.test_score_objects.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_score_objects.test_supervised_cluster_scorers": {
  "data": {
   "lineno": 460,
   "symbols_in_volume": [
    "getattr",
    "sklearn.cluster.KMeans",
    "sklearn.datasets.make_blobs",
    "sklearn.metrics.cluster",
    "sklearn.metrics.get_scorer",
    "sklearn.metrics.tests.test_score_objects.CLUSTER_SCORERS",
    "sklearn.model_selection.train_test_split",
    "sklearn.utils._testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_score_objects.test_thresholded_scorers": {
  "data": {
   "lineno": 366,
   "symbols_in_volume": [
    "ValueError",
    "numpy.zeros_like",
    "sklearn.datasets.make_blobs",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.metrics.get_scorer",
    "sklearn.metrics.log_loss",
    "sklearn.metrics.roc_auc_score",
    "sklearn.metrics.tests.test_score_objects.pytest",
    "sklearn.model_selection.train_test_split",
    "sklearn.tree.DecisionTreeClassifier",
    "sklearn.tree.DecisionTreeRegressor",
    "sklearn.utils._testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_score_objects.test_thresholded_scorers_multilabel_indicator_data": {
  "data": {
   "lineno": 417,
   "symbols_in_volume": [
    "numpy.vstack",
    "sklearn.datasets.make_multilabel_classification",
    "sklearn.metrics.get_scorer",
    "sklearn.metrics.roc_auc_score",
    "sklearn.model_selection.train_test_split",
    "sklearn.multiclass.OneVsRestClassifier",
    "sklearn.svm.LinearSVC",
    "sklearn.tree.DecisionTreeClassifier",
    "sklearn.utils._testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_score_objects.train_test_split": {
  "data": {
   "shadows": "sklearn.model_selection.train_test_split"
  },
  "type": "import"
 },
 "sklearn.mixture": {
  "data": {},
  "type": "module"
 },
 "sklearn.mixture.__all__": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "sklearn.mixture._base": {
  "data": {},
  "type": "module"
 },
 "sklearn.mixture._base.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "sklearn.mixture._base.BaseMixture": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "abc.ABCMeta"
   ]
  },
  "type": "class"
 },
 "sklearn.mixture._base.BaseMixture.__init__": {
  "data": {
   "lineno": 72
  },
  "type": "function"
 },
 "sklearn.mixture._base.BaseMixture._check_initial_parameters": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture._base.BaseMixture._check_parameters": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture._base.BaseMixture._e_step": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "numpy.mean"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture._base.BaseMixture._estimate_log_prob": {
  "data": {
   "lineno": 468,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture._base.BaseMixture._estimate_log_prob_resp": {
  "data": {
   "lineno": 484,
   "symbols_in_volume": [
    "numpy.errstate",
    "numpy.newaxis",
    "scipy.special.logsumexp"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture._base.BaseMixture._estimate_log_weights": {
  "data": {
   "lineno": 458,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture._base.BaseMixture._estimate_weighted_log_prob": {
  "data": {
   "lineno": 445
  },
  "type": "function"
 },
 "sklearn.mixture._base.BaseMixture._get_parameters": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture._base.BaseMixture._initialize": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture._base.BaseMixture._initialize_parameters": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "ValueError",
    "numpy.arange",
    "numpy.newaxis",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture._base.BaseMixture._m_step": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture._base.BaseMixture._print_verbose_msg_init_beg": {
  "data": {
   "lineno": 510,
   "symbols_in_volume": [
    "print",
    "time.time"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture._base.BaseMixture._print_verbose_msg_init_end": {
  "data": {
   "lineno": 530,
   "symbols_in_volume": [
    "print",
    "time.time"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture._base.BaseMixture._print_verbose_msg_iter_end": {
  "data": {
   "lineno": 519,
   "symbols_in_volume": [
    "print",
    "time.time"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture._base.BaseMixture._set_parameters": {
  "data": {
   "lineno": 319,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture._base.BaseMixture.fit": {
  "data": {
   "lineno": 171
  },
  "type": "function"
 },
 "sklearn.mixture._base.BaseMixture.fit_predict": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "abs",
    "check_random_state",
    "hasattr",
    "numpy.infty",
    "range",
    "sklearn.mixture._base._check_X",
    "sklearn.mixture._base.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture._base.BaseMixture.predict": {
  "data": {
   "lineno": 358,
   "symbols_in_volume": [
    "check_is_fitted",
    "sklearn.mixture._base._check_X"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture._base.BaseMixture.predict_proba": {
  "data": {
   "lineno": 376,
   "symbols_in_volume": [
    "check_is_fitted",
    "numpy.exp",
    "sklearn.mixture._base._check_X"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture._base.BaseMixture.sample": {
  "data": {
   "lineno": 396,
   "symbols_in_volume": [
    "ValueError",
    "check_is_fitted",
    "check_random_state",
    "enumerate",
    "int",
    "numpy.concatenate",
    "numpy.full",
    "numpy.sqrt",
    "numpy.vstack",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture._base.BaseMixture.score": {
  "data": {
   "lineno": 342
  },
  "type": "function"
 },
 "sklearn.mixture._base.BaseMixture.score_samples": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": [
    "check_is_fitted",
    "scipy.special.logsumexp",
    "sklearn.mixture._base._check_X"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture._base._check_X": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "ValueError",
    "check_array",
    "numpy.float32",
    "numpy.float64"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture._base._check_shape": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture._base.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "sklearn.mixture._base.logsumexp": {
  "data": {
   "shadows": "scipy.special.logsumexp"
  },
  "type": "import"
 },
 "sklearn.mixture._base.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.mixture._base.time": {
  "data": {
   "shadows": "time.time"
  },
  "type": "import"
 },
 "sklearn.mixture._base.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.mixture._bayesian_mixture": {
  "data": {},
  "type": "module"
 },
 "sklearn.mixture._bayesian_mixture.BayesianGaussianMixture": {
  "data": {
   "lineno": 65
  },
  "type": "class"
 },
 "sklearn.mixture._bayesian_mixture.BayesianGaussianMixture.__init__": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture._bayesian_mixture.BayesianGaussianMixture._check_means_parameters": {
  "data": {
   "lineno": 384,
   "symbols_in_volume": [
    "ValueError",
    "_check_shape",
    "check_array",
    "numpy.float32",
    "numpy.float64"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture._bayesian_mixture.BayesianGaussianMixture._check_parameters": {
  "data": {
   "lineno": 346,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture._bayesian_mixture.BayesianGaussianMixture._check_precision_parameters": {
  "data": {
   "lineno": 410,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture._bayesian_mixture.BayesianGaussianMixture._check_weights_parameters": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture._bayesian_mixture.BayesianGaussianMixture._checkcovariance_prior_parameter": {
  "data": {
   "lineno": 428,
   "symbols_in_volume": [
    "ValueError",
    "_check_precision_matrix",
    "_check_precision_positivity",
    "_check_shape",
    "check_array",
    "numpy.atleast_2d",
    "numpy.cov",
    "numpy.float32",
    "numpy.float64",
    "numpy.var"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture._bayesian_mixture.BayesianGaussianMixture._compute_lower_bound": {
  "data": {
   "lineno": 711,
   "symbols_in_volume": [
    "_compute_log_det_cholesky",
    "numpy.exp",
    "numpy.float64",
    "numpy.log",
    "numpy.sum",
    "scipy.special.betaln",
    "sklearn.mixture._bayesian_mixture._log_dirichlet_norm",
    "sklearn.mixture._bayesian_mixture._log_wishart_norm"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture._bayesian_mixture.BayesianGaussianMixture._estimate_log_prob": {
  "data": {
   "lineno": 696,
   "symbols_in_volume": [
    "_estimate_log_gaussian_prob",
    "numpy.arange",
    "numpy.log",
    "numpy.newaxis",
    "numpy.sum",
    "scipy.special.digamma"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture._bayesian_mixture.BayesianGaussianMixture._estimate_log_weights": {
  "data": {
   "lineno": 683,
   "symbols_in_volume": [
    "numpy.cumsum",
    "numpy.hstack",
    "numpy.sum",
    "scipy.special.digamma"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture._bayesian_mixture.BayesianGaussianMixture._estimate_means": {
  "data": {
   "lineno": 503,
   "symbols_in_volume": [
    "numpy.newaxis"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture._bayesian_mixture.BayesianGaussianMixture._estimate_precisions": {
  "data": {
   "lineno": 517,
   "symbols_in_volume": [
    "_compute_precision_cholesky"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture._bayesian_mixture.BayesianGaussianMixture._estimate_weights": {
  "data": {
   "lineno": 485,
   "symbols_in_volume": [
    "numpy.cumsum",
    "numpy.hstack"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture._bayesian_mixture.BayesianGaussianMixture._estimate_wishart_diag": {
  "data": {
   "lineno": 606,
   "symbols_in_volume": [
    "numpy.newaxis",
    "numpy.square"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture._bayesian_mixture.BayesianGaussianMixture._estimate_wishart_full": {
  "data": {
   "lineno": 542,
   "symbols_in_volume": [
    "numpy.empty",
    "numpy.newaxis",
    "numpy.outer",
    "range"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture._bayesian_mixture.BayesianGaussianMixture._estimate_wishart_spherical": {
  "data": {
   "lineno": 635,
   "symbols_in_volume": [
    "numpy.mean",
    "numpy.square"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture._bayesian_mixture.BayesianGaussianMixture._estimate_wishart_tied": {
  "data": {
   "lineno": 576,
   "symbols_in_volume": [
    "numpy.dot"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture._bayesian_mixture.BayesianGaussianMixture._get_parameters": {
  "data": {
   "lineno": 760
  },
  "type": "function"
 },
 "sklearn.mixture._bayesian_mixture.BayesianGaussianMixture._initialize": {
  "data": {
   "lineno": 469,
   "symbols_in_volume": [
    "_estimate_gaussian_parameters"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture._bayesian_mixture.BayesianGaussianMixture._m_step": {
  "data": {
   "lineno": 664,
   "symbols_in_volume": [
    "_estimate_gaussian_parameters",
    "numpy.exp"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture._bayesian_mixture.BayesianGaussianMixture._set_parameters": {
  "data": {
   "lineno": 766,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.cumprod",
    "numpy.dot",
    "numpy.hstack",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture._bayesian_mixture._log_dirichlet_norm": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "numpy.sum",
    "scipy.special.gammaln"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture._bayesian_mixture._log_wishart_norm": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.newaxis",
    "numpy.sum",
    "scipy.special.gammaln",
    "sklearn.mixture._bayesian_mixture.math"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture._bayesian_mixture.betaln": {
  "data": {
   "shadows": "scipy.special.betaln"
  },
  "type": "import"
 },
 "sklearn.mixture._bayesian_mixture.digamma": {
  "data": {
   "shadows": "scipy.special.digamma"
  },
  "type": "import"
 },
 "sklearn.mixture._bayesian_mixture.gammaln": {
  "data": {
   "shadows": "scipy.special.gammaln"
  },
  "type": "import"
 },
 "sklearn.mixture._bayesian_mixture.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "sklearn.mixture._bayesian_mixture.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.mixture._gaussian_mixture": {
  "data": {},
  "type": "module"
 },
 "sklearn.mixture._gaussian_mixture.GaussianMixture": {
  "data": {
   "lineno": 434
  },
  "type": "class"
 },
 "sklearn.mixture._gaussian_mixture.GaussianMixture.__init__": {
  "data": {
   "lineno": 602,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture._gaussian_mixture.GaussianMixture._check_parameters": {
  "data": {
   "lineno": 619,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.mixture._gaussian_mixture._check_means",
    "sklearn.mixture._gaussian_mixture._check_precisions",
    "sklearn.mixture._gaussian_mixture._check_weights"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture._gaussian_mixture.GaussianMixture._compute_lower_bound": {
  "data": {
   "lineno": 701
  },
  "type": "function"
 },
 "sklearn.mixture._gaussian_mixture.GaussianMixture._estimate_log_prob": {
  "data": {
   "lineno": 694,
   "symbols_in_volume": [
    "sklearn.mixture._gaussian_mixture._estimate_log_gaussian_prob"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture._gaussian_mixture.GaussianMixture._estimate_log_weights": {
  "data": {
   "lineno": 698,
   "symbols_in_volume": [
    "numpy.log"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture._gaussian_mixture.GaussianMixture._get_parameters": {
  "data": {
   "lineno": 704
  },
  "type": "function"
 },
 "sklearn.mixture._gaussian_mixture.GaussianMixture._initialize": {
  "data": {
   "lineno": 642,
   "symbols_in_volume": [
    "numpy.array",
    "scipy.linalg.cholesky",
    "sklearn.mixture._gaussian_mixture._compute_precision_cholesky",
    "sklearn.mixture._gaussian_mixture._estimate_gaussian_parameters"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture._gaussian_mixture.GaussianMixture._m_step": {
  "data": {
   "lineno": 675,
   "symbols_in_volume": [
    "numpy.exp",
    "sklearn.mixture._gaussian_mixture._compute_precision_cholesky",
    "sklearn.mixture._gaussian_mixture._estimate_gaussian_parameters"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture._gaussian_mixture.GaussianMixture._n_parameters": {
  "data": {
   "lineno": 726,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture._gaussian_mixture.GaussianMixture._set_parameters": {
  "data": {
   "lineno": 708,
   "symbols_in_volume": [
    "enumerate",
    "numpy.dot",
    "numpy.empty"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture._gaussian_mixture.GaussianMixture.aic": {
  "data": {
   "lineno": 755
  },
  "type": "function"
 },
 "sklearn.mixture._gaussian_mixture.GaussianMixture.bic": {
  "data": {
   "lineno": 740,
   "symbols_in_volume": [
    "numpy.log"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture._gaussian_mixture._check_means": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "_check_shape",
    "check_array",
    "numpy.float32",
    "numpy.float64"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture._gaussian_mixture._check_precision_matrix": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "ValueError",
    "numpy.all",
    "numpy.allclose",
    "scipy.linalg.eigvalsh"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture._gaussian_mixture._check_precision_positivity": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "ValueError",
    "numpy.any",
    "numpy.less_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture._gaussian_mixture._check_precisions": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "_check_shape",
    "check_array",
    "numpy.float32",
    "numpy.float64",
    "sklearn.mixture._gaussian_mixture._check_precision_matrix",
    "sklearn.mixture._gaussian_mixture._check_precision_positivity",
    "sklearn.mixture._gaussian_mixture._check_precisions_full"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture._gaussian_mixture._check_precisions_full": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "sklearn.mixture._gaussian_mixture._check_precision_matrix"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture._gaussian_mixture._check_weights": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "ValueError",
    "_check_shape",
    "any",
    "check_array",
    "numpy.abs",
    "numpy.allclose",
    "numpy.float32",
    "numpy.float64",
    "numpy.greater",
    "numpy.less",
    "numpy.max",
    "numpy.min",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture._gaussian_mixture._compute_log_det_cholesky": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": [
    "numpy.diag",
    "numpy.log",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture._gaussian_mixture._compute_precision_cholesky": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "ValueError",
    "enumerate",
    "numpy.any",
    "numpy.empty",
    "numpy.eye",
    "numpy.less_equal",
    "numpy.sqrt",
    "scipy.linalg.LinAlgError",
    "scipy.linalg.cholesky",
    "scipy.linalg.solve_triangular"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture._gaussian_mixture._estimate_gaussian_covariances_diag": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.newaxis"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture._gaussian_mixture._estimate_gaussian_covariances_full": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.empty",
    "range"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture._gaussian_mixture._estimate_gaussian_covariances_spherical": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "sklearn.mixture._gaussian_mixture._estimate_gaussian_covariances_diag"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture._gaussian_mixture._estimate_gaussian_covariances_tied": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "len",
    "numpy.dot"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture._gaussian_mixture._estimate_gaussian_parameters": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.finfo",
    "numpy.newaxis",
    "sklearn.mixture._gaussian_mixture._estimate_gaussian_covariances_diag",
    "sklearn.mixture._gaussian_mixture._estimate_gaussian_covariances_full",
    "sklearn.mixture._gaussian_mixture._estimate_gaussian_covariances_spherical",
    "sklearn.mixture._gaussian_mixture._estimate_gaussian_covariances_tied"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture._gaussian_mixture._estimate_log_gaussian_prob": {
  "data": {
   "lineno": 380,
   "symbols_in_volume": [
    "enumerate",
    "numpy.dot",
    "numpy.empty",
    "numpy.log",
    "numpy.outer",
    "numpy.pi",
    "numpy.square",
    "numpy.sum",
    "row_norms",
    "sklearn.mixture._gaussian_mixture._compute_log_det_cholesky",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture._gaussian_mixture.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "sklearn.mixture._gaussian_mixture.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.mixture.tests": {
  "data": {},
  "type": "module"
 },
 "sklearn.mixture.tests.test_bayesian_mixture": {
  "data": {},
  "type": "module"
 },
 "sklearn.mixture.tests.test_bayesian_mixture.BayesianGaussianMixture": {
  "data": {
   "shadows": "sklearn.mixture.BayesianGaussianMixture"
  },
  "type": "import"
 },
 "sklearn.mixture.tests.test_bayesian_mixture.COVARIANCE_TYPE": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "sklearn.mixture.tests.test_bayesian_mixture.ConvergenceWarning": {
  "data": {
   "shadows": "sklearn.exceptions.ConvergenceWarning"
  },
  "type": "import"
 },
 "sklearn.mixture.tests.test_bayesian_mixture.NotFittedError": {
  "data": {
   "shadows": "sklearn.exceptions.NotFittedError"
  },
  "type": "import"
 },
 "sklearn.mixture.tests.test_bayesian_mixture.PRIOR_TYPE": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "sklearn.mixture.tests.test_bayesian_mixture.RandomData": {
  "data": {
   "shadows": "sklearn.mixture.tests.test_gaussian_mixture.RandomData"
  },
  "type": "import"
 },
 "sklearn.mixture.tests.test_bayesian_mixture._log_dirichlet_norm": {
  "data": {
   "shadows": "sklearn.mixture._bayesian_mixture._log_dirichlet_norm"
  },
  "type": "import"
 },
 "sklearn.mixture.tests.test_bayesian_mixture._log_wishart_norm": {
  "data": {
   "shadows": "sklearn.mixture._bayesian_mixture._log_wishart_norm"
  },
  "type": "import"
 },
 "sklearn.mixture.tests.test_bayesian_mixture.adjusted_rand_score": {
  "data": {
   "shadows": "sklearn.metrics.cluster.adjusted_rand_score"
  },
  "type": "import"
 },
 "sklearn.mixture.tests.test_bayesian_mixture.assert_almost_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_almost_equal"
  },
  "type": "import"
 },
 "sklearn.mixture.tests.test_bayesian_mixture.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.mixture.tests.test_bayesian_mixture.assert_raise_message": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_raise_message"
  },
  "type": "import"
 },
 "sklearn.mixture.tests.test_bayesian_mixture.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "sklearn.mixture.tests.test_bayesian_mixture.gammaln": {
  "data": {
   "shadows": "scipy.special.gammaln"
  },
  "type": "import"
 },
 "sklearn.mixture.tests.test_bayesian_mixture.ignore_warnings": {
  "data": {
   "shadows": "sklearn.utils._testing.ignore_warnings"
  },
  "type": "import"
 },
 "sklearn.mixture.tests.test_bayesian_mixture.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.mixture.tests.test_bayesian_mixture.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.mixture.tests.test_bayesian_mixture.test_bayesian_mixture_check_is_fitted": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "ValueError",
    "numpy.random.RandomState",
    "sklearn.mixture.BayesianGaussianMixture",
    "sklearn.utils._testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.tests.test_bayesian_mixture.test_bayesian_mixture_covariance_type": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "ValueError",
    "numpy.random.RandomState",
    "sklearn.mixture.BayesianGaussianMixture",
    "sklearn.utils._testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.tests.test_bayesian_mixture.test_bayesian_mixture_fit_predict": {
  "data": {
   "lineno": 429,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.mixture.BayesianGaussianMixture",
    "sklearn.mixture.tests.test_bayesian_mixture.COVARIANCE_TYPE",
    "sklearn.mixture.tests.test_bayesian_mixture.copy",
    "sklearn.mixture.tests.test_bayesian_mixture.pytest",
    "sklearn.mixture.tests.test_gaussian_mixture.RandomData",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.tests.test_bayesian_mixture.test_bayesian_mixture_fit_predict_n_init": {
  "data": {
   "lineno": 454,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.mixture.BayesianGaussianMixture",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.tests.test_bayesian_mixture.test_bayesian_mixture_mean_prior_initialisation": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "ValueError",
    "numpy.random.RandomState",
    "sklearn.mixture.BayesianGaussianMixture",
    "sklearn.utils._testing.assert_almost_equal",
    "sklearn.utils._testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.tests.test_bayesian_mixture.test_bayesian_mixture_precisions_prior_initialisation": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "ValueError",
    "numpy.atleast_2d",
    "numpy.cov",
    "numpy.diag",
    "numpy.random.RandomState",
    "numpy.var",
    "sklearn.mixture.BayesianGaussianMixture",
    "sklearn.utils._testing.assert_almost_equal",
    "sklearn.utils._testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.tests.test_bayesian_mixture.test_bayesian_mixture_predict_predict_proba": {
  "data": {
   "lineno": 463,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.exceptions.NotFittedError",
    "sklearn.metrics.cluster.adjusted_rand_score",
    "sklearn.mixture.BayesianGaussianMixture",
    "sklearn.mixture.tests.test_bayesian_mixture.COVARIANCE_TYPE",
    "sklearn.mixture.tests.test_bayesian_mixture.PRIOR_TYPE",
    "sklearn.mixture.tests.test_gaussian_mixture.RandomData",
    "sklearn.utils._testing.assert_array_equal",
    "sklearn.utils._testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.tests.test_bayesian_mixture.test_bayesian_mixture_weight_concentration_prior_type": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "ValueError",
    "numpy.random.RandomState",
    "sklearn.mixture.BayesianGaussianMixture",
    "sklearn.utils._testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.tests.test_bayesian_mixture.test_bayesian_mixture_weights": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "numpy.cumprod",
    "numpy.hstack",
    "numpy.random.RandomState",
    "numpy.sum",
    "sklearn.mixture.BayesianGaussianMixture",
    "sklearn.utils._testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.tests.test_bayesian_mixture.test_bayesian_mixture_weights_prior_initialisation": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "ValueError",
    "numpy.random.RandomState",
    "sklearn.mixture.BayesianGaussianMixture",
    "sklearn.utils._testing.assert_almost_equal",
    "sklearn.utils._testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.tests.test_bayesian_mixture.test_check_covariance_precision": {
  "data": {
   "lineno": 371,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.eye",
    "numpy.ones",
    "numpy.random.RandomState",
    "sklearn.exceptions.ConvergenceWarning",
    "sklearn.mixture.BayesianGaussianMixture",
    "sklearn.mixture.tests.test_bayesian_mixture.COVARIANCE_TYPE",
    "sklearn.mixture.tests.test_gaussian_mixture.RandomData",
    "sklearn.utils._testing.assert_almost_equal",
    "sklearn.utils._testing.ignore_warnings",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.tests.test_bayesian_mixture.test_compare_covar_type": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.diag",
    "numpy.mean",
    "numpy.newaxis",
    "numpy.random.RandomState",
    "sklearn.mixture.BayesianGaussianMixture",
    "sklearn.mixture.tests.test_bayesian_mixture.PRIOR_TYPE",
    "sklearn.mixture.tests.test_gaussian_mixture.RandomData",
    "sklearn.utils._testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.tests.test_bayesian_mixture.test_invariant_translation": {
  "data": {
   "lineno": 404,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.exceptions.ConvergenceWarning",
    "sklearn.mixture.BayesianGaussianMixture",
    "sklearn.mixture.tests.test_bayesian_mixture.COVARIANCE_TYPE",
    "sklearn.mixture.tests.test_bayesian_mixture.PRIOR_TYPE",
    "sklearn.mixture.tests.test_gaussian_mixture.RandomData",
    "sklearn.utils._testing.assert_almost_equal",
    "sklearn.utils._testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.tests.test_bayesian_mixture.test_log_dirichlet_norm": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "numpy.sum",
    "scipy.special.gammaln",
    "sklearn.mixture._bayesian_mixture._log_dirichlet_norm",
    "sklearn.utils._testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.tests.test_bayesian_mixture.test_log_wishart_norm": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "enumerate",
    "numpy.abs",
    "numpy.arange",
    "numpy.empty",
    "numpy.log",
    "numpy.newaxis",
    "numpy.random.RandomState",
    "numpy.sum",
    "range",
    "scipy.special.gammaln",
    "sklearn.mixture._bayesian_mixture._log_wishart_norm",
    "sklearn.utils._testing.assert_almost_equal",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.tests.test_bayesian_mixture.test_monotonic_likelihood": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "numpy.infty",
    "numpy.random.RandomState",
    "range",
    "sklearn.exceptions.ConvergenceWarning",
    "sklearn.mixture.BayesianGaussianMixture",
    "sklearn.mixture.tests.test_bayesian_mixture.COVARIANCE_TYPE",
    "sklearn.mixture.tests.test_bayesian_mixture.PRIOR_TYPE",
    "sklearn.mixture.tests.test_gaussian_mixture.RandomData",
    "sklearn.utils._testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.tests.test_gaussian_mixture": {
  "data": {},
  "type": "module"
 },
 "sklearn.mixture.tests.test_gaussian_mixture.COVARIANCE_TYPE": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "sklearn.mixture.tests.test_gaussian_mixture.ConvergenceWarning": {
  "data": {
   "shadows": "sklearn.exceptions.ConvergenceWarning"
  },
  "type": "import"
 },
 "sklearn.mixture.tests.test_gaussian_mixture.EmpiricalCovariance": {
  "data": {
   "shadows": "sklearn.covariance.EmpiricalCovariance"
  },
  "type": "import"
 },
 "sklearn.mixture.tests.test_gaussian_mixture.GaussianMixture": {
  "data": {
   "shadows": "sklearn.mixture.GaussianMixture"
  },
  "type": "import"
 },
 "sklearn.mixture.tests.test_gaussian_mixture.NotFittedError": {
  "data": {
   "shadows": "sklearn.exceptions.NotFittedError"
  },
  "type": "import"
 },
 "sklearn.mixture.tests.test_gaussian_mixture.RandomData": {
  "data": {
   "lineno": 69
  },
  "type": "class"
 },
 "sklearn.mixture.tests.test_gaussian_mixture.RandomData.__init__": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "dict",
    "enumerate",
    "int",
    "numpy.array",
    "numpy.full",
    "numpy.hstack",
    "numpy.round",
    "range",
    "scipy.linalg.inv",
    "sklearn.datasets.make_spd_matrix",
    "sklearn.mixture.tests.test_gaussian_mixture.COVARIANCE_TYPE",
    "sklearn.mixture.tests.test_gaussian_mixture.generate_data",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.tests.test_gaussian_mixture.StringIO": {
  "data": {
   "shadows": "io.StringIO"
  },
  "type": "import"
 },
 "sklearn.mixture.tests.test_gaussian_mixture._check_X": {
  "data": {
   "shadows": "sklearn.mixture._base._check_X"
  },
  "type": "import"
 },
 "sklearn.mixture.tests.test_gaussian_mixture._compute_log_det_cholesky": {
  "data": {
   "shadows": "sklearn.mixture._gaussian_mixture._compute_log_det_cholesky"
  },
  "type": "import"
 },
 "sklearn.mixture.tests.test_gaussian_mixture._compute_precision_cholesky": {
  "data": {
   "shadows": "sklearn.mixture._gaussian_mixture._compute_precision_cholesky"
  },
  "type": "import"
 },
 "sklearn.mixture.tests.test_gaussian_mixture._estimate_gaussian_covariances_diag": {
  "data": {
   "shadows": "sklearn.mixture._gaussian_mixture._estimate_gaussian_covariances_diag"
  },
  "type": "import"
 },
 "sklearn.mixture.tests.test_gaussian_mixture._estimate_gaussian_covariances_full": {
  "data": {
   "shadows": "sklearn.mixture._gaussian_mixture._estimate_gaussian_covariances_full"
  },
  "type": "import"
 },
 "sklearn.mixture.tests.test_gaussian_mixture._estimate_gaussian_covariances_spherical": {
  "data": {
   "shadows": "sklearn.mixture._gaussian_mixture._estimate_gaussian_covariances_spherical"
  },
  "type": "import"
 },
 "sklearn.mixture.tests.test_gaussian_mixture._estimate_gaussian_covariances_tied": {
  "data": {
   "shadows": "sklearn.mixture._gaussian_mixture._estimate_gaussian_covariances_tied"
  },
  "type": "import"
 },
 "sklearn.mixture.tests.test_gaussian_mixture._estimate_log_gaussian_prob": {
  "data": {
   "shadows": "sklearn.mixture._gaussian_mixture._estimate_log_gaussian_prob"
  },
  "type": "import"
 },
 "sklearn.mixture.tests.test_gaussian_mixture._naive_lmvnpdf_diag": {
  "data": {
   "lineno": 464,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "numpy.empty",
    "numpy.sqrt",
    "scipy.stats.norm.logpdf",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.tests.test_gaussian_mixture.adjusted_rand_score": {
  "data": {
   "shadows": "sklearn.metrics.cluster.adjusted_rand_score"
  },
  "type": "import"
 },
 "sklearn.mixture.tests.test_gaussian_mixture.assert_allclose": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_allclose"
  },
  "type": "import"
 },
 "sklearn.mixture.tests.test_gaussian_mixture.assert_almost_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_almost_equal"
  },
  "type": "import"
 },
 "sklearn.mixture.tests.test_gaussian_mixture.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.mixture.tests.test_gaussian_mixture.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.mixture.tests.test_gaussian_mixture.assert_raise_message": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_raise_message"
  },
  "type": "import"
 },
 "sklearn.mixture.tests.test_gaussian_mixture.assert_warns_message": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_warns_message"
  },
  "type": "import"
 },
 "sklearn.mixture.tests.test_gaussian_mixture.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "sklearn.mixture.tests.test_gaussian_mixture.fast_logdet": {
  "data": {
   "shadows": "sklearn.utils.extmath.fast_logdet"
  },
  "type": "import"
 },
 "sklearn.mixture.tests.test_gaussian_mixture.generate_data": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "enumerate",
    "int",
    "numpy.diag",
    "numpy.eye",
    "numpy.random.RandomState",
    "numpy.round",
    "numpy.vstack",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.tests.test_gaussian_mixture.ignore_warnings": {
  "data": {
   "shadows": "sklearn.utils._testing.ignore_warnings"
  },
  "type": "import"
 },
 "sklearn.mixture.tests.test_gaussian_mixture.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "sklearn.mixture.tests.test_gaussian_mixture.make_spd_matrix": {
  "data": {
   "shadows": "sklearn.datasets.make_spd_matrix"
  },
  "type": "import"
 },
 "sklearn.mixture.tests.test_gaussian_mixture.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.mixture.tests.test_gaussian_mixture.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.mixture.tests.test_gaussian_mixture.stats": {
  "data": {
   "shadows": "scipy.stats"
  },
  "type": "import"
 },
 "sklearn.mixture.tests.test_gaussian_mixture.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "sklearn.mixture.tests.test_gaussian_mixture.test_bic_1d_1component": {
  "data": {
   "lineno": 723,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.mixture.GaussianMixture",
    "sklearn.utils._testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.tests.test_gaussian_mixture.test_check_X": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "ValueError",
    "numpy.random.RandomState",
    "sklearn.mixture._base._check_X",
    "sklearn.utils._testing.assert_array_equal",
    "sklearn.utils._testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.tests.test_gaussian_mixture.test_check_means": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "ValueError",
    "numpy.random.RandomState",
    "sklearn.mixture.GaussianMixture",
    "sklearn.mixture.tests.test_gaussian_mixture.RandomData",
    "sklearn.utils._testing.assert_array_equal",
    "sklearn.utils._testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.tests.test_gaussian_mixture.test_check_precisions": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "ValueError",
    "numpy.eye",
    "numpy.full",
    "numpy.ones",
    "numpy.random.RandomState",
    "sklearn.mixture.GaussianMixture",
    "sklearn.mixture.tests.test_gaussian_mixture.COVARIANCE_TYPE",
    "sklearn.mixture.tests.test_gaussian_mixture.RandomData",
    "sklearn.utils._testing.assert_array_equal",
    "sklearn.utils._testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.tests.test_gaussian_mixture.test_check_weights": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "ValueError",
    "numpy.max",
    "numpy.min",
    "numpy.random.RandomState",
    "numpy.sum",
    "sklearn.mixture.GaussianMixture",
    "sklearn.mixture.tests.test_gaussian_mixture.RandomData",
    "sklearn.utils._testing.assert_array_equal",
    "sklearn.utils._testing.assert_raise_message",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.tests.test_gaussian_mixture.test_compute_log_det_cholesky": {
  "data": {
   "lineno": 442,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.log",
    "numpy.prod",
    "numpy.random.RandomState",
    "scipy.linalg.det",
    "sklearn.mixture._gaussian_mixture._compute_log_det_cholesky",
    "sklearn.mixture._gaussian_mixture._compute_precision_cholesky",
    "sklearn.mixture.tests.test_gaussian_mixture.COVARIANCE_TYPE",
    "sklearn.mixture.tests.test_gaussian_mixture.RandomData",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.tests.test_gaussian_mixture.test_convergence_detected_with_warm_start": {
  "data": {
   "lineno": 828,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "range",
    "sklearn.exceptions.ConvergenceWarning",
    "sklearn.mixture.GaussianMixture",
    "sklearn.mixture.tests.test_gaussian_mixture.RandomData",
    "sklearn.utils._testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.tests.test_gaussian_mixture.test_gaussian_mixture_aic_bic": {
  "data": {
   "lineno": 739,
   "symbols_in_volume": [
    "numpy.cov",
    "numpy.log",
    "numpy.pi",
    "numpy.random.RandomState",
    "numpy.sqrt",
    "sklearn.mixture.GaussianMixture",
    "sklearn.mixture.tests.test_gaussian_mixture.COVARIANCE_TYPE",
    "sklearn.utils.extmath.fast_logdet"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.tests.test_gaussian_mixture.test_gaussian_mixture_attributes": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "ValueError",
    "numpy.random.RandomState",
    "sklearn.mixture.GaussianMixture",
    "sklearn.utils._testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.tests.test_gaussian_mixture.test_gaussian_mixture_estimate_log_prob_resp": {
  "data": {
   "lineno": 521,
   "symbols_in_volume": [
    "numpy.ones",
    "numpy.random.RandomState",
    "sklearn.mixture.GaussianMixture",
    "sklearn.mixture.tests.test_gaussian_mixture.COVARIANCE_TYPE",
    "sklearn.mixture.tests.test_gaussian_mixture.RandomData",
    "sklearn.utils._testing.assert_array_almost_equal",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.tests.test_gaussian_mixture.test_gaussian_mixture_fit": {
  "data": {
   "lineno": 608,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.diag",
    "numpy.eye",
    "numpy.random.RandomState",
    "numpy.sort",
    "numpy.trace",
    "sklearn.covariance.EmpiricalCovariance",
    "sklearn.mixture.GaussianMixture",
    "sklearn.mixture.tests.test_gaussian_mixture.COVARIANCE_TYPE",
    "sklearn.mixture.tests.test_gaussian_mixture.RandomData",
    "sklearn.utils._testing.assert_allclose",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.tests.test_gaussian_mixture.test_gaussian_mixture_fit_best_params": {
  "data": {
   "lineno": 656,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.random.RandomState",
    "range",
    "sklearn.mixture.GaussianMixture",
    "sklearn.mixture.tests.test_gaussian_mixture.COVARIANCE_TYPE",
    "sklearn.mixture.tests.test_gaussian_mixture.RandomData",
    "sklearn.utils._testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.tests.test_gaussian_mixture.test_gaussian_mixture_fit_convergence_warning": {
  "data": {
   "lineno": 677,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.exceptions.ConvergenceWarning",
    "sklearn.mixture.GaussianMixture",
    "sklearn.mixture.tests.test_gaussian_mixture.COVARIANCE_TYPE",
    "sklearn.mixture.tests.test_gaussian_mixture.RandomData",
    "sklearn.utils._testing.assert_warns_message"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.tests.test_gaussian_mixture.test_gaussian_mixture_fit_predict": {
  "data": {
   "lineno": 571,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.metrics.cluster.adjusted_rand_score",
    "sklearn.mixture.GaussianMixture",
    "sklearn.mixture.tests.test_gaussian_mixture.COVARIANCE_TYPE",
    "sklearn.mixture.tests.test_gaussian_mixture.RandomData",
    "sklearn.mixture.tests.test_gaussian_mixture.copy",
    "sklearn.mixture.tests.test_gaussian_mixture.pytest",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.tests.test_gaussian_mixture.test_gaussian_mixture_fit_predict_n_init": {
  "data": {
   "lineno": 599,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.mixture.GaussianMixture",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.tests.test_gaussian_mixture.test_gaussian_mixture_log_probabilities": {
  "data": {
   "lineno": 472,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.diag",
    "numpy.random.RandomState",
    "numpy.sqrt",
    "sklearn.mixture._gaussian_mixture._estimate_log_gaussian_prob",
    "sklearn.mixture.tests.test_gaussian_mixture.RandomData",
    "sklearn.mixture.tests.test_gaussian_mixture._naive_lmvnpdf_diag",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.tests.test_gaussian_mixture.test_gaussian_mixture_n_parameters": {
  "data": {
   "lineno": 710,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.mixture.GaussianMixture",
    "sklearn.mixture.tests.test_gaussian_mixture.COVARIANCE_TYPE"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.tests.test_gaussian_mixture.test_gaussian_mixture_predict_predict_proba": {
  "data": {
   "lineno": 546,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.exceptions.NotFittedError",
    "sklearn.metrics.cluster.adjusted_rand_score",
    "sklearn.mixture.GaussianMixture",
    "sklearn.mixture.tests.test_gaussian_mixture.COVARIANCE_TYPE",
    "sklearn.mixture.tests.test_gaussian_mixture.RandomData",
    "sklearn.utils._testing.assert_array_equal",
    "sklearn.utils._testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.tests.test_gaussian_mixture.test_gaussian_mixture_verbose": {
  "data": {
   "lineno": 760,
   "symbols_in_volume": [
    "io.StringIO",
    "numpy.random.RandomState",
    "sklearn.mixture.GaussianMixture",
    "sklearn.mixture.tests.test_gaussian_mixture.COVARIANCE_TYPE",
    "sklearn.mixture.tests.test_gaussian_mixture.RandomData",
    "sklearn.mixture.tests.test_gaussian_mixture.sys"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.tests.test_gaussian_mixture.test_gaussian_suffstat_sk_spherical": {
  "data": {
   "lineno": 419,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.dot",
    "numpy.ones",
    "numpy.random.RandomState",
    "sklearn.mixture._gaussian_mixture._compute_precision_cholesky",
    "sklearn.mixture._gaussian_mixture._estimate_gaussian_covariances_spherical",
    "sklearn.utils._testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.tests.test_gaussian_mixture.test_init": {
  "data": {
   "lineno": 1025,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "range",
    "sklearn.exceptions.ConvergenceWarning",
    "sklearn.mixture.GaussianMixture",
    "sklearn.mixture.tests.test_gaussian_mixture.RandomData",
    "sklearn.utils._testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.tests.test_gaussian_mixture.test_monotonic_likelihood": {
  "data": {
   "lineno": 897,
   "symbols_in_volume": [
    "numpy.infty",
    "numpy.random.RandomState",
    "range",
    "sklearn.exceptions.ConvergenceWarning",
    "sklearn.mixture.GaussianMixture",
    "sklearn.mixture.tests.test_gaussian_mixture.COVARIANCE_TYPE",
    "sklearn.mixture.tests.test_gaussian_mixture.RandomData",
    "sklearn.mixture.tests.test_gaussian_mixture.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.tests.test_gaussian_mixture.test_multiple_init": {
  "data": {
   "lineno": 695,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.mixture.GaussianMixture",
    "sklearn.mixture.tests.test_gaussian_mixture.COVARIANCE_TYPE"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.tests.test_gaussian_mixture.test_property": {
  "data": {
   "lineno": 952,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "scipy.linalg.inv",
    "sklearn.mixture.GaussianMixture",
    "sklearn.mixture.tests.test_gaussian_mixture.COVARIANCE_TYPE",
    "sklearn.mixture.tests.test_gaussian_mixture.RandomData",
    "sklearn.utils._testing.assert_array_almost_equal",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.tests.test_gaussian_mixture.test_regularisation": {
  "data": {
   "lineno": 926,
   "symbols_in_volume": [
    "RuntimeWarning",
    "ValueError",
    "numpy.ones",
    "numpy.random.RandomState",
    "numpy.vstack",
    "numpy.zeros",
    "sklearn.mixture.GaussianMixture",
    "sklearn.mixture.tests.test_gaussian_mixture.COVARIANCE_TYPE",
    "sklearn.mixture.tests.test_gaussian_mixture.warnings",
    "sklearn.utils._testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.tests.test_gaussian_mixture.test_sample": {
  "data": {
   "lineno": 974,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "numpy.cov",
    "numpy.diag",
    "numpy.mean",
    "numpy.random.RandomState",
    "numpy.var",
    "range",
    "sklearn.exceptions.NotFittedError",
    "sklearn.mixture.GaussianMixture",
    "sklearn.mixture.tests.test_gaussian_mixture.COVARIANCE_TYPE",
    "sklearn.mixture.tests.test_gaussian_mixture.RandomData",
    "sklearn.utils._testing.assert_array_almost_equal",
    "sklearn.utils._testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.tests.test_gaussian_mixture.test_score": {
  "data": {
   "lineno": 847,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.exceptions.ConvergenceWarning",
    "sklearn.exceptions.NotFittedError",
    "sklearn.mixture.GaussianMixture",
    "sklearn.mixture.tests.test_gaussian_mixture.RandomData",
    "sklearn.mixture.tests.test_gaussian_mixture.warnings",
    "sklearn.utils._testing.assert_almost_equal",
    "sklearn.utils._testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.tests.test_gaussian_mixture.test_score_samples": {
  "data": {
   "lineno": 878,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.exceptions.NotFittedError",
    "sklearn.mixture.GaussianMixture",
    "sklearn.mixture.tests.test_gaussian_mixture.RandomData",
    "sklearn.utils._testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.tests.test_gaussian_mixture.test_suffstat_sk_diag": {
  "data": {
   "lineno": 394,
   "symbols_in_volume": [
    "numpy.diag",
    "numpy.dot",
    "numpy.newaxis",
    "numpy.random.RandomState",
    "sklearn.covariance.EmpiricalCovariance",
    "sklearn.mixture._gaussian_mixture._compute_precision_cholesky",
    "sklearn.mixture._gaussian_mixture._estimate_gaussian_covariances_diag",
    "sklearn.mixture._gaussian_mixture._estimate_gaussian_covariances_full",
    "sklearn.utils._testing.assert_almost_equal",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.tests.test_gaussian_mixture.test_suffstat_sk_full": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.dot",
    "numpy.ones",
    "numpy.random.RandomState",
    "numpy.sqrt",
    "numpy.zeros",
    "scipy.linalg.inv",
    "sklearn.covariance.EmpiricalCovariance",
    "sklearn.mixture._gaussian_mixture._compute_precision_cholesky",
    "sklearn.mixture._gaussian_mixture._estimate_gaussian_covariances_full",
    "sklearn.utils._testing.assert_almost_equal",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.tests.test_gaussian_mixture.test_suffstat_sk_tied": {
  "data": {
   "lineno": 365,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.newaxis",
    "numpy.random.RandomState",
    "numpy.sum",
    "scipy.linalg.inv",
    "sklearn.covariance.EmpiricalCovariance",
    "sklearn.mixture._gaussian_mixture._compute_precision_cholesky",
    "sklearn.mixture._gaussian_mixture._estimate_gaussian_covariances_full",
    "sklearn.mixture._gaussian_mixture._estimate_gaussian_covariances_tied",
    "sklearn.utils._testing.assert_almost_equal",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.tests.test_gaussian_mixture.test_warm_start": {
  "data": {
   "lineno": 781,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "range",
    "sklearn.mixture.GaussianMixture",
    "sklearn.mixture.tests.test_gaussian_mixture.pytest",
    "sklearn.utils._testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.tests.test_gaussian_mixture.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.mixture.tests.test_mixture": {
  "data": {},
  "type": "module"
 },
 "sklearn.mixture.tests.test_mixture.BayesianGaussianMixture": {
  "data": {
   "shadows": "sklearn.mixture.BayesianGaussianMixture"
  },
  "type": "import"
 },
 "sklearn.mixture.tests.test_mixture.GaussianMixture": {
  "data": {
   "shadows": "sklearn.mixture.GaussianMixture"
  },
  "type": "import"
 },
 "sklearn.mixture.tests.test_mixture.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.mixture.tests.test_mixture.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.mixture.tests.test_mixture.test_gaussian_mixture_n_iter": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.mixture.BayesianGaussianMixture",
    "sklearn.mixture.GaussianMixture",
    "sklearn.mixture.tests.test_mixture.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection": {
  "data": {
   "symbols_in_volume": [
    "sklearn.model_selection.typing"
   ]
  },
  "type": "module"
 },
 "sklearn.model_selection.__all__": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "sklearn.model_selection._search": {
  "data": {},
  "type": "module"
 },
 "sklearn.model_selection._search.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "sklearn.model_selection._search.BaseSearchCV": {
  "data": {
   "lineno": 410,
   "symbols_in_volume": [
    "abc.ABCMeta"
   ]
  },
  "type": "class"
 },
 "sklearn.model_selection._search.BaseSearchCV.__init__": {
  "data": {
   "lineno": 414,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection._search.BaseSearchCV._check_is_fitted": {
  "data": {
   "lineno": 513,
   "symbols_in_volume": [
    "NotFittedError",
    "check_is_fitted",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection._search.BaseSearchCV._check_refit_for_multimetric": {
  "data": {
   "lineno": 706,
   "symbols_in_volume": [
    "ValueError",
    "callable",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection._search.BaseSearchCV._estimator_type": {
  "data": {
   "lineno": 431,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection._search.BaseSearchCV._format_results": {
  "data": {
   "lineno": 894,
   "symbols_in_volume": [
    "_aggregate_score_dicts",
    "_normalize_score_results",
    "_store",
    "collections.defaultdict",
    "dict",
    "enumerate",
    "functools.partial",
    "len",
    "numpy.empty",
    "numpy.ma.MaskedArray",
    "object"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection._search.BaseSearchCV._format_results._store": {
  "data": {
   "lineno": 901,
   "symbols_in_volume": [
    "UserWarning",
    "numpy.any",
    "numpy.array",
    "numpy.asarray",
    "numpy.average",
    "numpy.float64",
    "numpy.int32",
    "numpy.isfinite",
    "numpy.newaxis",
    "numpy.sqrt",
    "range",
    "scipy.stats.rankdata",
    "sklearn.model_selection._search.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection._search.BaseSearchCV._more_tags": {
  "data": {
   "lineno": 435,
   "symbols_in_volume": [
    "_safe_tags"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection._search.BaseSearchCV._pairwise": {
  "data": {
   "lineno": 445,
   "symbols_in_volume": [
    "deprecated",
    "getattr",
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection._search.BaseSearchCV._run_search": {
  "data": {
   "lineno": 646,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection._search.BaseSearchCV.classes_": {
  "data": {
   "lineno": 641,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection._search.BaseSearchCV.decision_function": {
  "data": {
   "lineno": 576,
   "symbols_in_volume": [
    "if_delegate_has_method"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection._search.BaseSearchCV.fit": {
  "data": {
   "lineno": 723,
   "symbols_in_volume": [
    "IndexError",
    "TypeError",
    "_check_fit_params",
    "_check_multimetric_scoring",
    "callable",
    "check_cv",
    "check_scoring",
    "clone",
    "collections.defaultdict",
    "dict",
    "indexable",
    "is_classifier",
    "isinstance",
    "joblib.Parallel",
    "len",
    "list",
    "sklearn.model_selection._search.numbers",
    "sklearn.model_selection._search.time",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection._search.BaseSearchCV.fit.evaluate_candidates": {
  "data": {
   "lineno": 784,
   "symbols_in_volume": [
    "ValueError",
    "_fit_and_score",
    "_insert_error_scores",
    "callable",
    "clone",
    "delayed",
    "enumerate",
    "itertools.product",
    "len",
    "list",
    "parallel",
    "print"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection._search.BaseSearchCV.inverse_transform": {
  "data": {
   "lineno": 610,
   "symbols_in_volume": [
    "if_delegate_has_method"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection._search.BaseSearchCV.n_features_in_": {
  "data": {
   "lineno": 627,
   "symbols_in_volume": [
    "AttributeError",
    "NotFittedError",
    "check_is_fitted",
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection._search.BaseSearchCV.predict": {
  "data": {
   "lineno": 525,
   "symbols_in_volume": [
    "if_delegate_has_method"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection._search.BaseSearchCV.predict_log_proba": {
  "data": {
   "lineno": 559,
   "symbols_in_volume": [
    "if_delegate_has_method"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection._search.BaseSearchCV.predict_proba": {
  "data": {
   "lineno": 542,
   "symbols_in_volume": [
    "if_delegate_has_method"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection._search.BaseSearchCV.score": {
  "data": {
   "lineno": 452,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "isinstance",
    "scorer"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection._search.BaseSearchCV.score_samples": {
  "data": {
   "lineno": 491,
   "symbols_in_volume": [
    "if_delegate_has_method"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection._search.BaseSearchCV.transform": {
  "data": {
   "lineno": 593,
   "symbols_in_volume": [
    "if_delegate_has_method"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection._search.GridSearchCV": {
  "data": {
   "lineno": 971,
   "symbols_in_volume": [
    "sklearn.model_selection._search.BaseSearchCV"
   ]
  },
  "type": "class"
 },
 "sklearn.model_selection._search.GridSearchCV.__init__": {
  "data": {
   "lineno": 1273,
   "symbols_in_volume": [
    "numpy.nan",
    "sklearn.model_selection._search._check_param_grid",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection._search.GridSearchCV._run_search": {
  "data": {
   "lineno": 1286,
   "symbols_in_volume": [
    "evaluate_candidates",
    "sklearn.model_selection._search.ParameterGrid"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection._search.Iterable": {
  "data": {
   "shadows": "collections.abc.Iterable"
  },
  "type": "import"
 },
 "sklearn.model_selection._search.Mapping": {
  "data": {
   "shadows": "collections.abc.Mapping"
  },
  "type": "import"
 },
 "sklearn.model_selection._search.MaskedArray": {
  "data": {
   "shadows": "numpy.ma.MaskedArray"
  },
  "type": "import"
 },
 "sklearn.model_selection._search.Parallel": {
  "data": {
   "shadows": "joblib.Parallel"
  },
  "type": "import"
 },
 "sklearn.model_selection._search.ParameterGrid": {
  "data": {
   "lineno": 51
  },
  "type": "class"
 },
 "sklearn.model_selection._search.ParameterGrid.__getitem__": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "IndexError",
    "divmod",
    "len",
    "numpy.product",
    "sorted",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection._search.ParameterGrid.__init__": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "TypeError",
    "collections.abc.Iterable",
    "collections.abc.Mapping",
    "dict",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection._search.ParameterGrid.__iter__": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "dict",
    "itertools.product",
    "sorted",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection._search.ParameterGrid.__len__": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "functools.partial",
    "functools.reduce",
    "itertools.product",
    "len",
    "sklearn.model_selection._search.operator",
    "sum"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection._search.ParameterSampler": {
  "data": {
   "lineno": 187
  },
  "type": "class"
 },
 "sklearn.model_selection._search.ParameterSampler.__init__": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "TypeError",
    "collections.abc.Iterable",
    "collections.abc.Mapping",
    "dict",
    "hasattr",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection._search.ParameterSampler.__iter__": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "UserWarning",
    "check_random_state",
    "dict",
    "hasattr",
    "len",
    "range",
    "sample_without_replacement",
    "sklearn.model_selection._search.ParameterGrid",
    "sklearn.model_selection._search.warnings",
    "sorted"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection._search.ParameterSampler.__len__": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": [
    "len",
    "min",
    "sklearn.model_selection._search.ParameterGrid"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection._search.ParameterSampler._is_all_lists": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "all",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection._search.RandomizedSearchCV": {
  "data": {
   "lineno": 1291,
   "symbols_in_volume": [
    "sklearn.model_selection._search.BaseSearchCV"
   ]
  },
  "type": "class"
 },
 "sklearn.model_selection._search.RandomizedSearchCV.__init__": {
  "data": {
   "lineno": 1602,
   "symbols_in_volume": [
    "numpy.nan",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection._search.RandomizedSearchCV._run_search": {
  "data": {
   "lineno": 1617,
   "symbols_in_volume": [
    "evaluate_candidates",
    "sklearn.model_selection._search.ParameterSampler"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection._search.Sequence": {
  "data": {
   "shadows": "collections.abc.Sequence"
  },
  "type": "import"
 },
 "sklearn.model_selection._search.__all__": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "sklearn.model_selection._search._check_param_grid": {
  "data": {
   "lineno": 389,
   "symbols_in_volume": [
    "ValueError",
    "collections.abc.Sequence",
    "hasattr",
    "isinstance",
    "len",
    "numpy.ndarray",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection._search.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "sklearn.model_selection._search.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "sklearn.model_selection._search.fit_grid_point": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": [
    "_fit_and_score",
    "check_scoring",
    "deprecated",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection._search.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.model_selection._search.numbers": {
  "data": {
   "shadows": "numbers"
  },
  "type": "import"
 },
 "sklearn.model_selection._search.operator": {
  "data": {
   "shadows": "operator"
  },
  "type": "import"
 },
 "sklearn.model_selection._search.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "sklearn.model_selection._search.product": {
  "data": {
   "shadows": "itertools.product"
  },
  "type": "import"
 },
 "sklearn.model_selection._search.rankdata": {
  "data": {
   "shadows": "scipy.stats.rankdata"
  },
  "type": "import"
 },
 "sklearn.model_selection._search.reduce": {
  "data": {
   "shadows": "functools.reduce"
  },
  "type": "import"
 },
 "sklearn.model_selection._search.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "sklearn.model_selection._search.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.model_selection._search_successive_halving": {
  "data": {},
  "type": "module"
 },
 "sklearn.model_selection._search_successive_halving.BaseSuccessiveHalving": {
  "data": {
   "lineno": 63
  },
  "type": "class"
 },
 "sklearn.model_selection._search_successive_halving.BaseSuccessiveHalving.__init__": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "numpy.nan",
    "sklearn.model_selection._search_successive_halving._refit_callable",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection._search_successive_halving.BaseSuccessiveHalving._check_input_parameters": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "ValueError",
    "_num_samples",
    "_yields_constant_splits",
    "callable",
    "is_classifier",
    "isinstance",
    "numbers.Integral",
    "numpy.unique",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection._search_successive_halving.BaseSuccessiveHalving._generate_candidate_params": {
  "data": {
   "lineno": 330,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection._search_successive_halving.BaseSuccessiveHalving._run_search": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "ValueError",
    "any",
    "evaluate_candidates",
    "int",
    "len",
    "math.ceil",
    "math.floor",
    "math.log",
    "max",
    "min",
    "print",
    "range",
    "sklearn.model_selection._search_successive_halving._SubsampleMetaSplitter",
    "sklearn.model_selection._search_successive_halving._top_k"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection._search_successive_halving.BaseSuccessiveHalving.fit": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "_num_samples",
    "check_cv",
    "is_classifier",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection._search_successive_halving.HalvingGridSearchCV": {
  "data": {
   "lineno": 335,
   "symbols_in_volume": [
    "sklearn.model_selection._search_successive_halving.BaseSuccessiveHalving"
   ]
  },
  "type": "class"
 },
 "sklearn.model_selection._search_successive_halving.HalvingGridSearchCV.__init__": {
  "data": {
   "lineno": 593,
   "symbols_in_volume": [
    "_check_param_grid",
    "numpy.nan",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection._search_successive_halving.HalvingGridSearchCV._generate_candidate_params": {
  "data": {
   "lineno": 609,
   "symbols_in_volume": [
    "ParameterGrid"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection._search_successive_halving.HalvingRandomSearchCV": {
  "data": {
   "lineno": 613,
   "symbols_in_volume": [
    "sklearn.model_selection._search_successive_halving.BaseSuccessiveHalving"
   ]
  },
  "type": "class"
 },
 "sklearn.model_selection._search_successive_halving.HalvingRandomSearchCV.__init__": {
  "data": {
   "lineno": 885,
   "symbols_in_volume": [
    "numpy.nan",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection._search_successive_halving.HalvingRandomSearchCV._generate_candidate_params": {
  "data": {
   "lineno": 901,
   "symbols_in_volume": [
    "ParameterSampler"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection._search_successive_halving.Integral": {
  "data": {
   "shadows": "numbers.Integral"
  },
  "type": "import"
 },
 "sklearn.model_selection._search_successive_halving._SubsampleMetaSplitter": {
  "data": {
   "lineno": 18
  },
  "type": "class"
 },
 "sklearn.model_selection._search_successive_halving._SubsampleMetaSplitter.__init__": {
  "data": {
   "lineno": 20
  },
  "type": "function"
 },
 "sklearn.model_selection._search_successive_halving._SubsampleMetaSplitter.split": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "int",
    "resample"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection._search_successive_halving.__all__": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "sklearn.model_selection._search_successive_halving._refit_callable": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "numpy.argmax",
    "numpy.flatnonzero",
    "numpy.max"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection._search_successive_halving._top_k": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "numpy.argsort",
    "numpy.array",
    "numpy.asarray",
    "numpy.flatnonzero"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection._search_successive_halving.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "sklearn.model_selection._search_successive_halving.ceil": {
  "data": {
   "shadows": "math.ceil"
  },
  "type": "import"
 },
 "sklearn.model_selection._search_successive_halving.floor": {
  "data": {
   "shadows": "math.floor"
  },
  "type": "import"
 },
 "sklearn.model_selection._search_successive_halving.log": {
  "data": {
   "shadows": "math.log"
  },
  "type": "import"
 },
 "sklearn.model_selection._search_successive_halving.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests": {
  "data": {},
  "type": "module"
 },
 "sklearn.model_selection.tests.common": {
  "data": {},
  "type": "module"
 },
 "sklearn.model_selection.tests.common.KFold": {
  "data": {
   "shadows": "sklearn.model_selection.KFold"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.common.OneTimeSplitter": {
  "data": {
   "lineno": 10
  },
  "type": "class"
 },
 "sklearn.model_selection.tests.common.OneTimeSplitter.__init__": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "iter",
    "numpy.ones",
    "sklearn.model_selection.KFold"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.common.OneTimeSplitter.get_n_splits": {
  "data": {
   "lineno": 22
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.common.OneTimeSplitter.split": {
  "data": {
   "lineno": 17
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.common.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_split": {
  "data": {
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "numpy.eye",
    "numpy.ones",
    "scipy.sparse.coo_matrix",
    "sklearn.datasets.load_digits"
   ]
  },
  "type": "module"
 },
 "sklearn.model_selection.tests.test_split.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_split.GridSearchCV": {
  "data": {
   "shadows": "sklearn.model_selection.GridSearchCV"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_split.GroupKFold": {
  "data": {
   "shadows": "sklearn.model_selection.GroupKFold"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_split.GroupShuffleSplit": {
  "data": {
   "shadows": "sklearn.model_selection.GroupShuffleSplit"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_split.KFold": {
  "data": {
   "shadows": "sklearn.model_selection.KFold"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_split.LeaveOneGroupOut": {
  "data": {
   "shadows": "sklearn.model_selection.LeaveOneGroupOut"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_split.LeaveOneOut": {
  "data": {
   "shadows": "sklearn.model_selection.LeaveOneOut"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_split.LeavePGroupsOut": {
  "data": {
   "shadows": "sklearn.model_selection.LeavePGroupsOut"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_split.LeavePOut": {
  "data": {
   "shadows": "sklearn.model_selection.LeavePOut"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_split.MockDataFrame": {
  "data": {
   "shadows": "sklearn.utils._mocking.MockDataFrame"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_split.P_sparse": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "sklearn.model_selection.tests.test_split.PredefinedSplit": {
  "data": {
   "shadows": "sklearn.model_selection.PredefinedSplit"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_split.RepeatedKFold": {
  "data": {
   "shadows": "sklearn.model_selection.RepeatedKFold"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_split.RepeatedStratifiedKFold": {
  "data": {
   "shadows": "sklearn.model_selection.RepeatedStratifiedKFold"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_split.Ridge": {
  "data": {
   "shadows": "sklearn.linear_model.Ridge"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_split.SVC": {
  "data": {
   "shadows": "sklearn.svm.SVC"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_split.ShuffleSplit": {
  "data": {
   "shadows": "sklearn.model_selection.ShuffleSplit"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_split.StratifiedKFold": {
  "data": {
   "shadows": "sklearn.model_selection.StratifiedKFold"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_split.StratifiedShuffleSplit": {
  "data": {
   "shadows": "sklearn.model_selection.StratifiedShuffleSplit"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_split.TimeSeriesSplit": {
  "data": {
   "shadows": "sklearn.model_selection.TimeSeriesSplit"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_split.X": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "sklearn.model_selection.tests.test_split._build_repr": {
  "data": {
   "shadows": "sklearn.model_selection._split._build_repr"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_split._check_time_series_max_train_size": {
  "data": {
   "lineno": 1421,
   "symbols_in_volume": [
    "len",
    "max",
    "sklearn.utils._testing.assert_array_equal",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split._num_samples": {
  "data": {
   "shadows": "sklearn.utils.validation._num_samples"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_split._validate_shuffle_split": {
  "data": {
   "shadows": "sklearn.model_selection._split._validate_shuffle_split"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_split._yields_constant_splits": {
  "data": {
   "shadows": "sklearn.model_selection._split._yields_constant_splits"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_split.assert_allclose": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_allclose"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_split.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_split.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_split.assert_raise_message": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_raise_message"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_split.assert_raises": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_split.assert_raises_regexp": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_raises_regexp"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_split.assert_warns_message": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_warns_message"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_split.check_cv": {
  "data": {
   "shadows": "sklearn.model_selection.check_cv"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_split.check_cv_coverage": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "range",
    "set",
    "sklearn.model_selection.tests.test_split.X",
    "sklearn.model_selection.tests.test_split.check_valid_split",
    "sklearn.model_selection.tests.test_split.y",
    "sklearn.utils.validation._num_samples"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.check_valid_split": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "range",
    "set"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.comb": {
  "data": {
   "shadows": "scipy.special.comb"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_split.combinations": {
  "data": {
   "shadows": "itertools.combinations"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_split.combinations_with_replacement": {
  "data": {
   "shadows": "itertools.combinations_with_replacement"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_split.coo_matrix": {
  "data": {
   "shadows": "scipy.sparse.coo_matrix"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_split.cross_val_score": {
  "data": {
   "shadows": "sklearn.model_selection.cross_val_score"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_split.csc_matrix": {
  "data": {
   "shadows": "scipy.sparse.csc_matrix"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_split.csr_matrix": {
  "data": {
   "shadows": "scipy.sparse.csr_matrix"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_split.digits": {
  "data": {
   "lineno": 63
  },
  "type": "constant"
 },
 "sklearn.model_selection.tests.test_split.ignore_warnings": {
  "data": {
   "shadows": "sklearn.utils._testing.ignore_warnings"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_split.load_digits": {
  "data": {
   "shadows": "sklearn.datasets.load_digits"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_split.make_classification": {
  "data": {
   "shadows": "sklearn.datasets.make_classification"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_split.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_split.permutations": {
  "data": {
   "shadows": "itertools.permutations"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_split.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_split.stats": {
  "data": {
   "shadows": "scipy.stats"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_split.test_2d_y": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "ValueError",
    "list",
    "numpy.random.RandomState",
    "sklearn.model_selection.GroupKFold",
    "sklearn.model_selection.GroupShuffleSplit",
    "sklearn.model_selection.KFold",
    "sklearn.model_selection.LeaveOneGroupOut",
    "sklearn.model_selection.LeaveOneOut",
    "sklearn.model_selection.LeavePGroupsOut",
    "sklearn.model_selection.LeavePOut",
    "sklearn.model_selection.PredefinedSplit",
    "sklearn.model_selection.RepeatedKFold",
    "sklearn.model_selection.RepeatedStratifiedKFold",
    "sklearn.model_selection.ShuffleSplit",
    "sklearn.model_selection.StratifiedKFold",
    "sklearn.model_selection.StratifiedShuffleSplit",
    "sklearn.model_selection.TimeSeriesSplit",
    "sklearn.model_selection.tests.test_split.X",
    "sklearn.model_selection.tests.test_split.y",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.test_build_repr": {
  "data": {
   "lineno": 1556,
   "symbols_in_volume": [
    "MockSplitter",
    "repr"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.test_build_repr.MockSplitter": {
  "data": {
   "lineno": 1557
  },
  "type": "class"
 },
 "sklearn.model_selection.tests.test_split.test_build_repr.MockSplitter.__init__": {
  "data": {
   "lineno": 1558
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.test_build_repr.MockSplitter.__repr__": {
  "data": {
   "lineno": 1563,
   "symbols_in_volume": [
    "sklearn.model_selection._split._build_repr"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.test_check_cv": {
  "data": {
   "lineno": 1226,
   "symbols_in_volume": [
    "ValueError",
    "list",
    "next",
    "numpy.all",
    "numpy.array",
    "numpy.ones",
    "numpy.testing.assert_equal",
    "sklearn.model_selection.KFold",
    "sklearn.model_selection.StratifiedKFold",
    "sklearn.model_selection.check_cv",
    "sklearn.model_selection.tests.test_split.X",
    "sklearn.utils._testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.test_cross_validator_with_default_params": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "ValueError",
    "enumerate",
    "list",
    "numpy.array",
    "numpy.asarray",
    "numpy.testing.assert_equal",
    "repr",
    "scipy.special.comb",
    "sklearn.model_selection.KFold",
    "sklearn.model_selection.LeaveOneGroupOut",
    "sklearn.model_selection.LeaveOneOut",
    "sklearn.model_selection.LeavePGroupsOut",
    "sklearn.model_selection.LeavePOut",
    "sklearn.model_selection.PredefinedSplit",
    "sklearn.model_selection.ShuffleSplit",
    "sklearn.model_selection.StratifiedKFold",
    "sklearn.model_selection.tests.test_split.X",
    "sklearn.model_selection.tests.test_split.y",
    "sklearn.utils._testing.assert_raise_message",
    "sklearn.utils._testing.ignore_warnings",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.test_cv_iterable_wrapper": {
  "data": {
   "lineno": 1265,
   "symbols_in_volume": [
    "AssertionError",
    "list",
    "numpy.testing.assert_equal",
    "sklearn.model_selection.KFold",
    "sklearn.model_selection.check_cv",
    "sklearn.model_selection.tests.test_split.X",
    "sklearn.model_selection.tests.test_split.y"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.test_get_n_splits_for_repeated_kfold": {
  "data": {
   "lineno": 961,
   "symbols_in_volume": [
    "sklearn.model_selection.RepeatedKFold"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.test_get_n_splits_for_repeated_stratified_kfold": {
  "data": {
   "lineno": 969,
   "symbols_in_volume": [
    "sklearn.model_selection.RepeatedStratifiedKFold"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.test_group_kfold": {
  "data": {
   "lineno": 1292,
   "symbols_in_volume": [
    "FutureWarning",
    "ValueError",
    "abs",
    "enumerate",
    "len",
    "list",
    "next",
    "numpy.array",
    "numpy.asarray",
    "numpy.intersect1d",
    "numpy.ones",
    "numpy.random.RandomState",
    "numpy.unique",
    "numpy.zeros",
    "object",
    "sklearn.model_selection.GroupKFold",
    "sklearn.model_selection.tests.test_split.X",
    "sklearn.model_selection.tests.test_split.warnings",
    "sklearn.model_selection.tests.test_split.y",
    "sklearn.utils._testing.assert_array_equal",
    "sklearn.utils._testing.assert_raises_regexp",
    "sum",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.test_group_shuffle_split": {
  "data": {
   "lineno": 766,
   "symbols_in_volume": [
    "abs",
    "len",
    "numpy.any",
    "numpy.asarray",
    "numpy.in1d",
    "numpy.intersect1d",
    "numpy.ones",
    "numpy.unique",
    "repr",
    "round",
    "sklearn.model_selection.GroupShuffleSplit",
    "sklearn.model_selection.tests.test_split.X",
    "sklearn.model_selection.tests.test_split.test_groups",
    "sklearn.model_selection.tests.test_split.y",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.test_group_shuffle_split_default_test_size": {
  "data": {
   "lineno": 545,
   "symbols_in_volume": [
    "len",
    "next",
    "numpy.ones",
    "range",
    "sklearn.model_selection.GroupShuffleSplit",
    "sklearn.model_selection.tests.test_split.X",
    "sklearn.model_selection.tests.test_split.pytest",
    "sklearn.model_selection.tests.test_split.y"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.test_groups": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "sklearn.model_selection.tests.test_split.test_kfold_balance": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": [
    "len",
    "numpy.max",
    "numpy.min",
    "numpy.ones",
    "numpy.sum",
    "range",
    "sklearn.model_selection.KFold"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.test_kfold_can_detect_dependent_samples_on_digits": {
  "data": {
   "lineno": 468,
   "symbols_in_volume": [
    "sklearn.model_selection.KFold",
    "sklearn.model_selection.StratifiedKFold",
    "sklearn.model_selection.cross_val_score",
    "sklearn.model_selection.tests.test_split.X",
    "sklearn.model_selection.tests.test_split.digits",
    "sklearn.model_selection.tests.test_split.y",
    "sklearn.svm.SVC"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.test_kfold_indices": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "numpy.ones",
    "sklearn.model_selection.KFold",
    "sklearn.model_selection.tests.test_split.check_cv_coverage"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.test_kfold_no_shuffle": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "next",
    "sklearn.model_selection.KFold",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.test_kfold_valueerrors": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "Warning",
    "next",
    "numpy.array",
    "sklearn.model_selection.KFold",
    "sklearn.model_selection.StratifiedKFold",
    "sklearn.model_selection.tests.test_split.check_cv_coverage",
    "sklearn.model_selection.tests.test_split.warnings",
    "sklearn.model_selection.tests.test_split.y",
    "sklearn.utils._testing.assert_raise_message",
    "sklearn.utils._testing.assert_raises",
    "sklearn.utils._testing.assert_warns_message"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.test_leave_group_out_changing_groups": {
  "data": {
   "lineno": 861,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "numpy.ones",
    "sklearn.model_selection.LeaveOneGroupOut",
    "sklearn.model_selection.LeavePGroupsOut",
    "sklearn.model_selection.tests.test_split.X",
    "sklearn.utils._testing.assert_array_equal",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.test_leave_one_out_empty_trainset": {
  "data": {
   "lineno": 1597,
   "symbols_in_volume": [
    "ValueError",
    "next",
    "sklearn.model_selection.LeaveOneOut",
    "sklearn.model_selection.tests.test_split.X",
    "sklearn.model_selection.tests.test_split.pytest",
    "sklearn.model_selection.tests.test_split.y"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.test_leave_one_p_group_out": {
  "data": {
   "lineno": 803,
   "symbols_in_volume": [
    "ValueError",
    "enumerate",
    "len",
    "numpy.arange",
    "numpy.asarray",
    "numpy.inf",
    "numpy.intersect1d",
    "numpy.nan",
    "numpy.ones",
    "numpy.unique",
    "repr",
    "sklearn.model_selection.LeaveOneGroupOut",
    "sklearn.model_selection.LeavePGroupsOut",
    "sklearn.model_selection.tests.test_split.X",
    "sklearn.model_selection.tests.test_split.test_groups",
    "sklearn.model_selection.tests.test_split.y",
    "sklearn.utils._testing.assert_array_equal",
    "sklearn.utils._testing.assert_raise_message",
    "sklearn.utils._testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.test_leave_one_p_group_out_error_on_fewer_number_of_groups": {
  "data": {
   "lineno": 886,
   "symbols_in_volume": [
    "ValueError",
    "next",
    "numpy.arange",
    "numpy.ones",
    "sklearn.model_selection.LeaveOneGroupOut",
    "sklearn.model_selection.LeavePGroupsOut",
    "sklearn.model_selection.tests.test_split.X",
    "sklearn.model_selection.tests.test_split.y",
    "sklearn.utils._testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.test_leave_p_out_empty_trainset": {
  "data": {
   "lineno": 1607,
   "symbols_in_volume": [
    "ValueError",
    "next",
    "sklearn.model_selection.LeavePOut",
    "sklearn.model_selection.tests.test_split.X",
    "sklearn.model_selection.tests.test_split.pytest",
    "sklearn.model_selection.tests.test_split.y"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.test_nested_cv": {
  "data": {
   "lineno": 1538,
   "symbols_in_volume": [
    "itertools.combinations_with_replacement",
    "numpy.random.RandomState",
    "sklearn.datasets.make_classification",
    "sklearn.linear_model.Ridge",
    "sklearn.model_selection.GridSearchCV",
    "sklearn.model_selection.GroupKFold",
    "sklearn.model_selection.LeaveOneGroupOut",
    "sklearn.model_selection.LeaveOneOut",
    "sklearn.model_selection.StratifiedKFold",
    "sklearn.model_selection.StratifiedShuffleSplit",
    "sklearn.model_selection.cross_val_score",
    "sklearn.model_selection.tests.test_split.X",
    "sklearn.model_selection.tests.test_split.y"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.test_predefinedsplit_with_kfold_split": {
  "data": {
   "lineno": 749,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "numpy.full",
    "numpy.unique",
    "sklearn.model_selection.KFold",
    "sklearn.model_selection.PredefinedSplit",
    "sklearn.model_selection.tests.test_split.X",
    "sklearn.utils._testing.assert_array_equal",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.test_random_state_shuffle_false": {
  "data": {
   "lineno": 1617,
   "symbols_in_volume": [
    "Klass",
    "ValueError",
    "sklearn.model_selection.KFold",
    "sklearn.model_selection.StratifiedKFold",
    "sklearn.model_selection.tests.test_split.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.test_repeated_cv_repr": {
  "data": {
   "lineno": 919,
   "symbols_in_volume": [
    "RepeatedCV",
    "repr",
    "sklearn.model_selection.RepeatedKFold",
    "sklearn.model_selection.RepeatedStratifiedKFold",
    "sklearn.model_selection.tests.test_split.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.test_repeated_cv_value_errors": {
  "data": {
   "lineno": 911,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.model_selection.RepeatedKFold",
    "sklearn.model_selection.RepeatedStratifiedKFold",
    "sklearn.utils._testing.assert_raises",
    "sklearn.utils._testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.test_repeated_kfold_determinstic_split": {
  "data": {
   "lineno": 930,
   "symbols_in_volume": [
    "StopIteration",
    "next",
    "range",
    "sklearn.model_selection.RepeatedKFold",
    "sklearn.model_selection.tests.test_split.X",
    "sklearn.utils._testing.assert_array_equal",
    "sklearn.utils._testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.test_repeated_stratified_kfold_determinstic_split": {
  "data": {
   "lineno": 977,
   "symbols_in_volume": [
    "StopIteration",
    "next",
    "range",
    "sklearn.model_selection.RepeatedStratifiedKFold",
    "sklearn.model_selection.tests.test_split.X",
    "sklearn.model_selection.tests.test_split.y",
    "sklearn.utils._testing.assert_array_equal",
    "sklearn.utils._testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.test_shuffle_kfold": {
  "data": {
   "lineno": 387,
   "symbols_in_volume": [
    "itertools.combinations",
    "len",
    "numpy.intersect1d",
    "numpy.ones",
    "numpy.zeros",
    "sklearn.model_selection.KFold",
    "sklearn.model_selection.tests.test_split.X",
    "sum",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.test_shuffle_kfold_stratifiedkfold_reproducibility": {
  "data": {
   "lineno": 409,
   "symbols_in_volume": [
    "AssertionError",
    "list",
    "numpy.ones",
    "numpy.random.RandomState",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "sklearn.model_selection.KFold",
    "sklearn.model_selection.StratifiedKFold",
    "sklearn.model_selection.tests.test_split.X",
    "sklearn.model_selection.tests.test_split.pytest",
    "sklearn.model_selection.tests.test_split.y",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.test_shuffle_split": {
  "data": {
   "lineno": 512,
   "symbols_in_volume": [
    "int",
    "numpy.int32",
    "sklearn.model_selection.ShuffleSplit",
    "sklearn.model_selection.tests.test_split.X",
    "sklearn.utils._testing.assert_array_equal",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.test_shuffle_split_default_test_size": {
  "data": {
   "lineno": 526,
   "symbols_in_volume": [
    "len",
    "next",
    "numpy.ones",
    "sklearn.model_selection.ShuffleSplit",
    "sklearn.model_selection.StratifiedShuffleSplit",
    "sklearn.model_selection.tests.test_split.X",
    "sklearn.model_selection.tests.test_split.pytest",
    "sklearn.model_selection.tests.test_split.y",
    "split_class"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.test_shuffle_split_empty_trainset": {
  "data": {
   "lineno": 1569,
   "symbols_in_volume": [
    "CVSplitter",
    "ValueError",
    "next",
    "sklearn.model_selection.GroupShuffleSplit",
    "sklearn.model_selection.ShuffleSplit",
    "sklearn.model_selection.StratifiedShuffleSplit",
    "sklearn.model_selection.tests.test_split.X",
    "sklearn.model_selection.tests.test_split.pytest",
    "sklearn.model_selection.tests.test_split.y"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.test_shuffle_stratifiedkfold": {
  "data": {
   "lineno": 444,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.ones",
    "set",
    "sklearn.model_selection.StratifiedKFold",
    "sklearn.model_selection.tests.test_split.X",
    "sklearn.model_selection.tests.test_split.check_cv_coverage",
    "sklearn.model_selection.tests.test_split.y",
    "sorted",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.test_shufflesplit_errors": {
  "data": {
   "lineno": 1183,
   "symbols_in_volume": [
    "ValueError",
    "next",
    "sklearn.model_selection.ShuffleSplit",
    "sklearn.model_selection.tests.test_split.X",
    "sklearn.model_selection.tests.test_split.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.test_shufflesplit_reproducible": {
  "data": {
   "lineno": 1196,
   "symbols_in_volume": [
    "list",
    "sklearn.model_selection.ShuffleSplit",
    "sklearn.model_selection.tests.test_split.X",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.test_stratified_kfold_label_invariance": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": [
    "get_splits",
    "int",
    "itertools.permutations",
    "len",
    "numpy.array",
    "numpy.ones",
    "numpy.take",
    "sklearn.model_selection.tests.test_split.X",
    "sklearn.model_selection.tests.test_split.pytest",
    "sklearn.model_selection.tests.test_split.y"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.test_stratified_kfold_label_invariance.get_splits": {
  "data": {
   "lineno": 346,
   "symbols_in_volume": [
    "list",
    "sklearn.model_selection.StratifiedKFold",
    "sklearn.model_selection.tests.test_split.X",
    "sklearn.model_selection.tests.test_split.y"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.test_stratified_kfold_no_shuffle": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "list",
    "next",
    "numpy.ones",
    "numpy.ones_like",
    "numpy.testing.assert_equal",
    "sklearn.model_selection.KFold",
    "sklearn.model_selection.StratifiedKFold",
    "sklearn.model_selection.tests.test_split.X",
    "sklearn.model_selection.tests.test_split.y",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.test_stratified_kfold_ratios": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": [
    "int",
    "len",
    "numpy.array",
    "numpy.bincount",
    "numpy.ones",
    "numpy.ptp",
    "sklearn.model_selection.StratifiedKFold",
    "sklearn.model_selection.tests.test_split.X",
    "sklearn.model_selection.tests.test_split.pytest",
    "sklearn.model_selection.tests.test_split.y",
    "sklearn.utils._testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.test_stratified_shuffle_split_even": {
  "data": {
   "lineno": 635,
   "symbols_in_volume": [
    "assert_counts_are_ok",
    "float",
    "id",
    "len",
    "numpy.array",
    "numpy.ones",
    "numpy.unique",
    "set",
    "sklearn.model_selection.StratifiedShuffleSplit",
    "sklearn.model_selection._split._validate_shuffle_split"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.test_stratified_shuffle_split_even.assert_counts_are_ok": {
  "data": {
   "lineno": 641,
   "symbols_in_volume": [
    "scipy.stats.binom"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.test_stratified_shuffle_split_init": {
  "data": {
   "lineno": 564,
   "symbols_in_volume": [
    "ValueError",
    "next",
    "numpy.arange",
    "numpy.asarray",
    "sklearn.model_selection.StratifiedShuffleSplit",
    "sklearn.model_selection.tests.test_split.X",
    "sklearn.model_selection.tests.test_split.y",
    "sklearn.utils._testing.assert_raises",
    "sklearn.utils._testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.test_stratified_shuffle_split_iter": {
  "data": {
   "lineno": 600,
   "symbols_in_volume": [
    "float",
    "len",
    "numpy.array",
    "numpy.asanyarray",
    "numpy.bincount",
    "numpy.ceil",
    "numpy.concatenate",
    "numpy.lib.arraysetops.intersect1d",
    "numpy.ones",
    "numpy.unique",
    "range",
    "sklearn.model_selection.StratifiedShuffleSplit",
    "sklearn.model_selection.tests.test_split.y",
    "sklearn.utils._testing.assert_array_almost_equal",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.test_stratified_shuffle_split_multilabel": {
  "data": {
   "lineno": 703,
   "symbols_in_volume": [
    "len",
    "next",
    "numpy.arange",
    "numpy.array",
    "numpy.intersect1d",
    "numpy.mean",
    "numpy.ones_like",
    "numpy.union1d",
    "sklearn.model_selection.StratifiedShuffleSplit",
    "sklearn.model_selection.tests.test_split.X",
    "sklearn.model_selection.tests.test_split.y",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.test_stratified_shuffle_split_multilabel_many_labels": {
  "data": {
   "lineno": 726,
   "symbols_in_volume": [
    "next",
    "numpy.array",
    "numpy.mean",
    "numpy.ones_like",
    "sklearn.model_selection.StratifiedShuffleSplit",
    "sklearn.model_selection.tests.test_split.X",
    "sklearn.model_selection.tests.test_split.y"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.test_stratified_shuffle_split_overlap_train_test_bug": {
  "data": {
   "lineno": 685,
   "symbols_in_volume": [
    "len",
    "next",
    "numpy.arange",
    "numpy.intersect1d",
    "numpy.ones_like",
    "numpy.union1d",
    "sklearn.model_selection.StratifiedShuffleSplit",
    "sklearn.model_selection.tests.test_split.X",
    "sklearn.model_selection.tests.test_split.y",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.test_stratified_shuffle_split_respects_test_size": {
  "data": {
   "lineno": 589,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "numpy.ones",
    "sklearn.model_selection.StratifiedShuffleSplit",
    "sklearn.model_selection.tests.test_split.y"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.test_stratifiedkfold_balance": {
  "data": {
   "lineno": 370,
   "symbols_in_volume": [
    "len",
    "numpy.max",
    "numpy.min",
    "numpy.ones",
    "numpy.sum",
    "range",
    "sklearn.model_selection.StratifiedKFold",
    "sklearn.model_selection.tests.test_split.X",
    "sklearn.model_selection.tests.test_split.y"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.test_stratifiedshufflesplit_list_input": {
  "data": {
   "lineno": 1204,
   "symbols_in_volume": [
    "list",
    "numpy.hstack",
    "numpy.ones",
    "numpy.testing.assert_equal",
    "numpy.zeros",
    "sklearn.model_selection.StratifiedShuffleSplit",
    "sklearn.model_selection.tests.test_split.X"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.test_time_series_cv": {
  "data": {
   "lineno": 1383,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "list",
    "next",
    "sklearn.model_selection.TimeSeriesSplit",
    "sklearn.model_selection.tests.test_split.X",
    "sklearn.utils._testing.assert_array_equal",
    "sklearn.utils._testing.assert_raises_regexp"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.test_time_series_gap": {
  "data": {
   "lineno": 1480,
   "symbols_in_volume": [
    "ValueError",
    "next",
    "numpy.zeros",
    "sklearn.model_selection.TimeSeriesSplit",
    "sklearn.model_selection.tests.test_split.X",
    "sklearn.model_selection.tests.test_split.pytest",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.test_time_series_max_train_size": {
  "data": {
   "lineno": 1429,
   "symbols_in_volume": [
    "numpy.zeros",
    "sklearn.model_selection.TimeSeriesSplit",
    "sklearn.model_selection.tests.test_split.X",
    "sklearn.model_selection.tests.test_split._check_time_series_max_train_size"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.test_time_series_test_size": {
  "data": {
   "lineno": 1444,
   "symbols_in_volume": [
    "ValueError",
    "next",
    "numpy.zeros",
    "sklearn.model_selection.TimeSeriesSplit",
    "sklearn.model_selection.tests.test_split.X",
    "sklearn.model_selection.tests.test_split.pytest",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.test_train_test_split": {
  "data": {
   "lineno": 1076,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "list",
    "numpy.arange",
    "numpy.array",
    "numpy.sum",
    "scipy.sparse.coo_matrix",
    "sklearn.model_selection.tests.test_split.X",
    "sklearn.model_selection.tests.test_split.y",
    "sklearn.model_selection.train_test_split",
    "sklearn.utils._testing.assert_array_equal",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.test_train_test_split_allow_nans": {
  "data": {
   "lineno": 1218,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.float64",
    "numpy.nan",
    "numpy.repeat",
    "sklearn.model_selection.tests.test_split.X",
    "sklearn.model_selection.tests.test_split.y",
    "sklearn.model_selection.train_test_split"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.test_train_test_split_default_test_size": {
  "data": {
   "lineno": 1063,
   "symbols_in_volume": [
    "len",
    "sklearn.model_selection.tests.test_split.X",
    "sklearn.model_selection.tests.test_split.pytest",
    "sklearn.model_selection.train_test_split"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.test_train_test_split_empty_trainset": {
  "data": {
   "lineno": 1581,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.model_selection.tests.test_split.X",
    "sklearn.model_selection.tests.test_split.pytest",
    "sklearn.model_selection.train_test_split"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.test_train_test_split_errors": {
  "data": {
   "lineno": 1009,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "numpy.float32",
    "range",
    "sklearn.model_selection.tests.test_split.pytest",
    "sklearn.model_selection.train_test_split"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.test_train_test_split_invalid_sizes1": {
  "data": {
   "lineno": 1035,
   "symbols_in_volume": [
    "ValueError",
    "range",
    "sklearn.model_selection.tests.test_split.pytest",
    "sklearn.model_selection.train_test_split"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.test_train_test_split_invalid_sizes2": {
  "data": {
   "lineno": 1050,
   "symbols_in_volume": [
    "ValueError",
    "range",
    "sklearn.model_selection.tests.test_split.pytest",
    "sklearn.model_selection.train_test_split"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.test_train_test_split_list_input": {
  "data": {
   "lineno": 1162,
   "symbols_in_volume": [
    "numpy.hstack",
    "numpy.ones",
    "numpy.testing.assert_equal",
    "numpy.zeros",
    "sklearn.model_selection.tests.test_split.X",
    "sklearn.model_selection.train_test_split"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.test_train_test_split_mock_pandas": {
  "data": {
   "lineno": 1153,
   "symbols_in_volume": [
    "isinstance",
    "sklearn.model_selection.tests.test_split.X",
    "sklearn.model_selection.train_test_split",
    "sklearn.utils._mocking.MockDataFrame"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.test_train_test_split_pandas": {
  "data": {
   "lineno": 1124,
   "symbols_in_volume": [
    "ImportError",
    "InputFeatureType",
    "isinstance",
    "pandas.DataFrame",
    "sklearn.model_selection.tests.test_split.X",
    "sklearn.model_selection.train_test_split",
    "sklearn.utils._mocking.MockDataFrame",
    "sklearn.utils._testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.test_train_test_split_sparse": {
  "data": {
   "lineno": 1141,
   "symbols_in_volume": [
    "InputFeatureType",
    "isinstance",
    "numpy.arange",
    "scipy.sparse.coo_matrix",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "sklearn.model_selection.tests.test_split.X",
    "sklearn.model_selection.train_test_split"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.test_yields_constant_splits": {
  "data": {
   "lineno": 1625,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.model_selection.GroupKFold",
    "sklearn.model_selection.GroupShuffleSplit",
    "sklearn.model_selection.KFold",
    "sklearn.model_selection.LeaveOneGroupOut",
    "sklearn.model_selection.LeaveOneOut",
    "sklearn.model_selection.LeavePGroupsOut",
    "sklearn.model_selection.LeavePOut",
    "sklearn.model_selection.RepeatedKFold",
    "sklearn.model_selection.RepeatedStratifiedKFold",
    "sklearn.model_selection.ShuffleSplit",
    "sklearn.model_selection.StratifiedKFold",
    "sklearn.model_selection.StratifiedShuffleSplit",
    "sklearn.model_selection.TimeSeriesSplit",
    "sklearn.model_selection._split._yields_constant_splits",
    "sklearn.model_selection.tests.test_split.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.train_test_split": {
  "data": {
   "shadows": "sklearn.model_selection.train_test_split"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_split.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_split.y": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "sklearn.model_selection.tests.test_successive_halving": {
  "data": {},
  "type": "module"
 },
 "sklearn.model_selection.tests.test_successive_halving.DummyClassifier": {
  "data": {
   "shadows": "sklearn.dummy.DummyClassifier"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_successive_halving.FastClassifier": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "sklearn.dummy.DummyClassifier"
   ]
  },
  "type": "class"
 },
 "sklearn.model_selection.tests.test_successive_halving.FastClassifier.__init__": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_successive_halving.FastClassifier.get_params": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "chr",
    "ord",
    "range",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_successive_halving.HalvingGridSearchCV": {
  "data": {
   "shadows": "sklearn.model_selection.HalvingGridSearchCV"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_successive_halving.HalvingRandomSearchCV": {
  "data": {
   "shadows": "sklearn.model_selection.HalvingRandomSearchCV"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_successive_halving.KFold": {
  "data": {
   "shadows": "sklearn.model_selection.KFold"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_successive_halving.ShuffleSplit": {
  "data": {
   "shadows": "sklearn.model_selection.ShuffleSplit"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_successive_halving._SubsampleMetaSplitter": {
  "data": {
   "shadows": "sklearn.model_selection._search_successive_halving._SubsampleMetaSplitter"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_successive_halving._refit_callable": {
  "data": {
   "shadows": "sklearn.model_selection._search_successive_halving._refit_callable"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_successive_halving._top_k": {
  "data": {
   "shadows": "sklearn.model_selection._search_successive_halving._top_k"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_successive_halving.ceil": {
  "data": {
   "shadows": "math.ceil"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_successive_halving.enable_halving_search_cv": {
  "data": {
   "shadows": "sklearn.experimental.enable_halving_search_cv"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_successive_halving.make_classification": {
  "data": {
   "shadows": "sklearn.datasets.make_classification"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_successive_halving.norm": {
  "data": {
   "shadows": "scipy.stats.norm"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_successive_halving.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_successive_halving.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_successive_halving.randint": {
  "data": {
   "shadows": "scipy.stats.randint"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_successive_halving.test_aggressive_elimination": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "Est",
    "list",
    "math.ceil",
    "range",
    "sklearn.datasets.make_classification",
    "sklearn.model_selection.HalvingGridSearchCV",
    "sklearn.model_selection.HalvingRandomSearchCV",
    "sklearn.model_selection.tests.test_successive_halving.FastClassifier",
    "sklearn.model_selection.tests.test_successive_halving.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_successive_halving.test_base_estimator_inputs": {
  "data": {
   "lineno": 506,
   "symbols_in_volume": [
    "Est",
    "FastClassifierBookKeeping",
    "len",
    "list",
    "numpy.unique",
    "range",
    "sklearn.datasets.make_classification",
    "sklearn.model_selection.HalvingGridSearchCV",
    "sklearn.model_selection.HalvingRandomSearchCV",
    "sklearn.model_selection.tests.test_successive_halving.pytest",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_successive_halving.test_base_estimator_inputs.FastClassifierBookKeeping": {
  "data": {
   "lineno": 516,
   "symbols_in_volume": [
    "sklearn.model_selection.tests.test_successive_halving.FastClassifier"
   ]
  },
  "type": "class"
 },
 "sklearn.model_selection.tests.test_successive_halving.test_base_estimator_inputs.FastClassifierBookKeeping.fit": {
  "data": {
   "lineno": 518,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_successive_halving.test_base_estimator_inputs.FastClassifierBookKeeping.predict": {
  "data": {
   "lineno": 522,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_successive_halving.test_base_estimator_inputs.FastClassifierBookKeeping.set_params": {
  "data": {
   "lineno": 526,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_successive_halving.test_cv_results": {
  "data": {
   "lineno": 416,
   "symbols_in_volume": [
    "Est",
    "len",
    "list",
    "numpy.random.RandomState",
    "range",
    "sklearn.datasets.make_classification",
    "sklearn.model_selection.HalvingGridSearchCV",
    "sklearn.model_selection.HalvingRandomSearchCV",
    "sklearn.model_selection.tests.test_successive_halving.FastClassifier",
    "sklearn.model_selection.tests.test_successive_halving.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_successive_halving.test_cv_results.scorer": {
  "data": {
   "lineno": 432
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_successive_halving.test_input_errors": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "Est",
    "ValueError",
    "sklearn.datasets.make_classification",
    "sklearn.model_selection.HalvingGridSearchCV",
    "sklearn.model_selection.HalvingRandomSearchCV",
    "sklearn.model_selection.KFold",
    "sklearn.model_selection.ShuffleSplit",
    "sklearn.model_selection.tests.test_successive_halving.FastClassifier",
    "sklearn.model_selection.tests.test_successive_halving.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_successive_halving.test_input_errors_randomized": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.datasets.make_classification",
    "sklearn.model_selection.HalvingRandomSearchCV",
    "sklearn.model_selection.tests.test_successive_halving.FastClassifier",
    "sklearn.model_selection.tests.test_successive_halving.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_successive_halving.test_min_max_resources": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "Est",
    "len",
    "sklearn.datasets.make_classification",
    "sklearn.model_selection.HalvingGridSearchCV",
    "sklearn.model_selection.HalvingRandomSearchCV",
    "sklearn.model_selection.tests.test_successive_halving.FastClassifier",
    "sklearn.model_selection.tests.test_successive_halving.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_successive_halving.test_n_iterations": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "Est",
    "list",
    "range",
    "sklearn.datasets.make_classification",
    "sklearn.model_selection.HalvingGridSearchCV",
    "sklearn.model_selection.HalvingRandomSearchCV",
    "sklearn.model_selection.tests.test_successive_halving.FastClassifier",
    "sklearn.model_selection.tests.test_successive_halving.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_successive_halving.test_random_search": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "scipy.stats.norm",
    "sklearn.datasets.make_classification",
    "sklearn.model_selection.HalvingRandomSearchCV",
    "sklearn.model_selection.tests.test_successive_halving.FastClassifier",
    "sklearn.model_selection.tests.test_successive_halving.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_successive_halving.test_random_search_discrete_distributions": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "scipy.stats.randint",
    "sklearn.datasets.make_classification",
    "sklearn.model_selection.HalvingRandomSearchCV",
    "sklearn.model_selection.tests.test_successive_halving.FastClassifier",
    "sklearn.model_selection.tests.test_successive_halving.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_successive_halving.test_refit_callable": {
  "data": {
   "lineno": 406,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.model_selection._search_successive_halving._refit_callable"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_successive_halving.test_resource_parameter": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "Est",
    "ValueError",
    "list",
    "range",
    "set",
    "sklearn.datasets.make_classification",
    "sklearn.model_selection.HalvingGridSearchCV",
    "sklearn.model_selection.HalvingRandomSearchCV",
    "sklearn.model_selection.tests.test_successive_halving.FastClassifier",
    "sklearn.model_selection.tests.test_successive_halving.pytest",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_successive_halving.test_subsample_splitter_determinism": {
  "data": {
   "lineno": 351,
   "symbols_in_volume": [
    "list",
    "numpy.all",
    "sklearn.datasets.make_classification",
    "sklearn.model_selection.KFold",
    "sklearn.model_selection._search_successive_halving._SubsampleMetaSplitter",
    "sklearn.model_selection.tests.test_successive_halving.pytest",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_successive_halving.test_subsample_splitter_shapes": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": [
    "int",
    "sklearn.datasets.make_classification",
    "sklearn.model_selection.KFold",
    "sklearn.model_selection._search_successive_halving._SubsampleMetaSplitter",
    "sklearn.model_selection.tests.test_successive_halving.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_successive_halving.test_top_k": {
  "data": {
   "lineno": 382,
   "symbols_in_volume": [
    "numpy.all",
    "sklearn.model_selection._search_successive_halving._top_k",
    "sklearn.model_selection.tests.test_successive_halving.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation": {
  "data": {
   "symbols_in_volume": [
    "NameError",
    "numpy.array",
    "numpy.eye",
    "numpy.ones",
    "scipy.sparse.coo_matrix",
    "sklearn.model_selection.tests.test_validation.X"
   ]
  },
  "type": "module"
 },
 "sklearn.model_selection.tests.test_validation.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_validation.CheckingClassifier": {
  "data": {
   "shadows": "sklearn.utils._mocking.CheckingClassifier"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_validation.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_validation.FailingClassifier": {
  "data": {
   "shadows": "sklearn.model_selection.tests.test_search.FailingClassifier"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_validation.FitFailedWarning": {
  "data": {
   "shadows": "sklearn.exceptions.FitFailedWarning"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_validation.GridSearchCV": {
  "data": {
   "shadows": "sklearn.model_selection.GridSearchCV"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_validation.GroupKFold": {
  "data": {
   "shadows": "sklearn.model_selection.GroupKFold"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_validation.GroupShuffleSplit": {
  "data": {
   "shadows": "sklearn.model_selection.GroupShuffleSplit"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_validation.KFold": {
  "data": {
   "shadows": "sklearn.model_selection.KFold"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_validation.KMeans": {
  "data": {
   "shadows": "sklearn.cluster.KMeans"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_validation.KNeighborsClassifier": {
  "data": {
   "shadows": "sklearn.neighbors.KNeighborsClassifier"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_validation.LabelEncoder": {
  "data": {
   "shadows": "sklearn.preprocessing.LabelEncoder"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_validation.LeaveOneGroupOut": {
  "data": {
   "shadows": "sklearn.model_selection.LeaveOneGroupOut"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_validation.LeaveOneOut": {
  "data": {
   "shadows": "sklearn.model_selection.LeaveOneOut"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_validation.LeavePGroupsOut": {
  "data": {
   "shadows": "sklearn.model_selection.LeavePGroupsOut"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_validation.LinearSVC": {
  "data": {
   "shadows": "sklearn.svm.LinearSVC"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_validation.LogisticRegression": {
  "data": {
   "shadows": "sklearn.linear_model.LogisticRegression"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_validation.MockClassifier": {
  "data": {
   "lineno": 180
  },
  "type": "class"
 },
 "sklearn.model_selection.tests.test_validation.MockClassifier.__init__": {
  "data": {
   "lineno": 183
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.MockClassifier.fit": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "ValueError",
    "callback",
    "len",
    "numpy.unique"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.MockClassifier.get_params": {
  "data": {
   "lineno": 242
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.MockClassifier.predict": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.MockClassifier.predict_proba": {
  "data": {
   "lineno": 236
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.MockClassifier.score": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "numpy.abs"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.MockDataFrame": {
  "data": {
   "shadows": "sklearn.utils._mocking.MockDataFrame"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_validation.MockEstimatorWithParameter": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator"
   ]
  },
  "type": "class"
 },
 "sklearn.model_selection.tests.test_validation.MockEstimatorWithParameter.__init__": {
  "data": {
   "lineno": 148
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.MockEstimatorWithParameter._is_training_data": {
  "data": {
   "lineno": 163
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.MockEstimatorWithParameter.fit": {
  "data": {
   "lineno": 152
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.MockEstimatorWithParameter.predict": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.MockEstimatorWithParameter.score": {
  "data": {
   "lineno": 160
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.MockEstimatorWithSingleFitCallAllowed": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "sklearn.model_selection.tests.test_validation.MockEstimatorWithParameter"
   ]
  },
  "type": "class"
 },
 "sklearn.model_selection.tests.test_validation.MockEstimatorWithSingleFitCallAllowed.fit": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "hasattr",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.MockEstimatorWithSingleFitCallAllowed.predict": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.MockImprovingEstimator": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator"
   ]
  },
  "type": "class"
 },
 "sklearn.model_selection.tests.test_validation.MockImprovingEstimator.__init__": {
  "data": {
   "lineno": 93
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.MockImprovingEstimator._is_training_data": {
  "data": {
   "lineno": 113
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.MockImprovingEstimator.fit": {
  "data": {
   "lineno": 98
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.MockImprovingEstimator.predict": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.MockImprovingEstimator.score": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "float"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.MockIncrementalImprovingEstimator": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "sklearn.model_selection.tests.test_validation.MockImprovingEstimator"
   ]
  },
  "type": "class"
 },
 "sklearn.model_selection.tests.test_validation.MockIncrementalImprovingEstimator.__init__": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.MockIncrementalImprovingEstimator._is_training_data": {
  "data": {
   "lineno": 124
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.MockIncrementalImprovingEstimator.partial_fit": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "AssertionError",
    "list",
    "set",
    "sklearn.utils.validation._num_samples"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.OneTimeSplitter": {
  "data": {
   "shadows": "sklearn.model_selection.tests.common.OneTimeSplitter"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_validation.OneVsRestClassifier": {
  "data": {
   "shadows": "sklearn.multiclass.OneVsRestClassifier"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_validation.P_sparse": {
  "data": {
   "lineno": 254
  },
  "type": "constant"
 },
 "sklearn.model_selection.tests.test_validation.PassiveAggressiveClassifier": {
  "data": {
   "shadows": "sklearn.linear_model.PassiveAggressiveClassifier"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_validation.Pipeline": {
  "data": {
   "shadows": "sklearn.pipeline.Pipeline"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_validation.RFWithDecisionFunction": {
  "data": {
   "lineno": 1578,
   "symbols_in_volume": [
    "sklearn.ensemble.RandomForestClassifier"
   ]
  },
  "type": "class"
 },
 "sklearn.model_selection.tests.test_validation.RFWithDecisionFunction.decision_function": {
  "data": {
   "lineno": 1582,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "sklearn.model_selection.tests.test_validation.X"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.RandomForestClassifier": {
  "data": {
   "shadows": "sklearn.ensemble.RandomForestClassifier"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_validation.Ridge": {
  "data": {
   "shadows": "sklearn.linear_model.Ridge"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_validation.RidgeClassifier": {
  "data": {
   "shadows": "sklearn.linear_model.RidgeClassifier"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_validation.SGDClassifier": {
  "data": {
   "shadows": "sklearn.linear_model.SGDClassifier"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_validation.SVC": {
  "data": {
   "shadows": "sklearn.svm.SVC"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_validation.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_validation.ShuffleSplit": {
  "data": {
   "shadows": "sklearn.model_selection.ShuffleSplit"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_validation.SimpleImputer": {
  "data": {
   "shadows": "sklearn.impute.SimpleImputer"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_validation.StratifiedKFold": {
  "data": {
   "shadows": "sklearn.model_selection.StratifiedKFold"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_validation.StringIO": {
  "data": {
   "shadows": "io.StringIO"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_validation.WindowsError": {
  "data": {
   "lineno": 88
  },
  "type": "constant"
 },
 "sklearn.model_selection.tests.test_validation.X": {
  "data": {
   "lineno": 248
  },
  "type": "constant"
 },
 "sklearn.model_selection.tests.test_validation.X_sparse": {
  "data": {
   "lineno": 249
  },
  "type": "constant"
 },
 "sklearn.model_selection.tests.test_validation._check_is_permutation": {
  "data": {
   "shadows": "sklearn.model_selection._validation._check_is_permutation"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_validation._failing_scorer": {
  "data": {
   "lineno": 1817,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation._fit_and_score": {
  "data": {
   "shadows": "sklearn.model_selection._validation._fit_and_score"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_validation._num_samples": {
  "data": {
   "shadows": "sklearn.utils.validation._num_samples"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_validation._score": {
  "data": {
   "shadows": "sklearn.model_selection._validation._score"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_validation.accuracy_score": {
  "data": {
   "shadows": "sklearn.metrics.accuracy_score"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_validation.assert_allclose": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_allclose"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_validation.assert_almost_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_almost_equal"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_validation.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_validation.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_validation.assert_raise_message": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_raise_message"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_validation.assert_raises": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_validation.assert_raises_regex": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_raises_regex"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_validation.assert_warns": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_warns"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_validation.assert_warns_message": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_warns_message"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_validation.check_cross_val_predict_binary": {
  "data": {
   "lineno": 1426,
   "symbols_in_volume": [
    "getattr",
    "len",
    "numpy.zeros",
    "sklearn.base.clone",
    "sklearn.model_selection.KFold",
    "sklearn.model_selection.cross_val_predict",
    "sklearn.model_selection.tests.test_validation.X",
    "sklearn.model_selection.tests.test_validation.y",
    "sklearn.utils._testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.check_cross_val_predict_multiclass": {
  "data": {
   "lineno": 1446,
   "symbols_in_volume": [
    "getattr",
    "len",
    "numpy.finfo",
    "numpy.float64",
    "numpy.full",
    "numpy.ix_",
    "numpy.unique",
    "set",
    "sklearn.base.clone",
    "sklearn.model_selection.KFold",
    "sklearn.model_selection.cross_val_predict",
    "sklearn.model_selection.tests.test_validation.X",
    "sklearn.model_selection.tests.test_validation.y",
    "sklearn.utils._testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.check_cross_val_predict_multilabel": {
  "data": {
   "lineno": 1471,
   "symbols_in_volume": [
    "getattr",
    "len",
    "numpy.concatenate",
    "numpy.finfo",
    "numpy.float64",
    "numpy.full",
    "numpy.ix_",
    "numpy.newaxis",
    "numpy.unique",
    "range",
    "set",
    "sklearn.base.clone",
    "sklearn.model_selection.KFold",
    "sklearn.model_selection.cross_val_predict",
    "sklearn.model_selection.tests.test_validation.X",
    "sklearn.model_selection.tests.test_validation.y",
    "sklearn.utils._testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.check_cross_val_predict_with_method_binary": {
  "data": {
   "lineno": 1518,
   "symbols_in_volume": [
    "sklearn.datasets.make_classification",
    "sklearn.model_selection.tests.test_validation.X",
    "sklearn.model_selection.tests.test_validation.check_cross_val_predict_binary",
    "sklearn.model_selection.tests.test_validation.y"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.check_cross_val_predict_with_method_multiclass": {
  "data": {
   "lineno": 1526,
   "symbols_in_volume": [
    "sklearn.datasets.load_iris",
    "sklearn.model_selection.tests.test_validation.X",
    "sklearn.model_selection.tests.test_validation.check_cross_val_predict_multiclass",
    "sklearn.model_selection.tests.test_validation.y",
    "sklearn.utils.shuffle"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.check_cross_validate_multi_metric": {
  "data": {
   "lineno": 471,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "numpy.all",
    "numpy.ndarray",
    "set",
    "sklearn.metrics.make_scorer",
    "sklearn.metrics.r2_score",
    "sklearn.model_selection.cross_validate",
    "sklearn.model_selection.tests.test_validation.X",
    "sklearn.model_selection.tests.test_validation.y",
    "sklearn.utils._testing.assert_array_almost_equal",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.check_cross_validate_multi_metric.custom_scorer": {
  "data": {
   "lineno": 476,
   "symbols_in_volume": [
    "sklearn.metrics.mean_squared_error",
    "sklearn.metrics.r2_score",
    "sklearn.model_selection.tests.test_validation.X",
    "sklearn.model_selection.tests.test_validation.y"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.check_cross_validate_single_metric": {
  "data": {
   "lineno": 427,
   "symbols_in_volume": [
    "dict",
    "enumerate",
    "isinstance",
    "len",
    "sklearn.model_selection.cross_validate",
    "sklearn.model_selection.tests.test_validation.X",
    "sklearn.model_selection.tests.test_validation.y",
    "sklearn.utils._testing.assert_almost_equal",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.check_scoring": {
  "data": {
   "shadows": "sklearn.metrics.check_scoring"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_validation.clone": {
  "data": {
   "shadows": "sklearn.base.clone"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_validation.confusion_matrix": {
  "data": {
   "shadows": "sklearn.metrics.confusion_matrix"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_validation.coo_matrix": {
  "data": {
   "shadows": "scipy.sparse.coo_matrix"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_validation.cross_val_predict": {
  "data": {
   "shadows": "sklearn.model_selection.cross_val_predict"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_validation.cross_val_score": {
  "data": {
   "shadows": "sklearn.model_selection.cross_val_score"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_validation.cross_validate": {
  "data": {
   "shadows": "sklearn.model_selection.cross_validate"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_validation.csr_matrix": {
  "data": {
   "shadows": "scipy.sparse.csr_matrix"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_validation.explained_variance_score": {
  "data": {
   "shadows": "sklearn.metrics.explained_variance_score"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_validation.get_expected_predictions": {
  "data": {
   "lineno": 1638,
   "symbols_in_volume": [
    "func",
    "getattr",
    "len",
    "numpy.finfo",
    "numpy.full",
    "numpy.zeros",
    "sklearn.model_selection.tests.test_validation.X",
    "sklearn.model_selection.tests.test_validation.y"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.learning_curve": {
  "data": {
   "shadows": "sklearn.model_selection.learning_curve"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_validation.load_diabetes": {
  "data": {
   "shadows": "sklearn.datasets.load_diabetes"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_validation.load_digits": {
  "data": {
   "shadows": "sklearn.datasets.load_digits"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_validation.load_iris": {
  "data": {
   "shadows": "sklearn.datasets.load_iris"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_validation.make_classification": {
  "data": {
   "shadows": "sklearn.datasets.make_classification"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_validation.make_multilabel_classification": {
  "data": {
   "shadows": "sklearn.datasets.make_multilabel_classification"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_validation.make_regression": {
  "data": {
   "shadows": "sklearn.datasets.make_regression"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_validation.make_scorer": {
  "data": {
   "shadows": "sklearn.metrics.make_scorer"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_validation.mean_squared_error": {
  "data": {
   "shadows": "sklearn.metrics.mean_squared_error"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_validation.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_validation.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_validation.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_validation.permutation_test_score": {
  "data": {
   "shadows": "sklearn.model_selection.permutation_test_score"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_validation.precision_recall_fscore_support": {
  "data": {
   "shadows": "sklearn.metrics.precision_recall_fscore_support"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_validation.precision_score": {
  "data": {
   "shadows": "sklearn.metrics.precision_score"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_validation.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_validation.r2_score": {
  "data": {
   "shadows": "sklearn.metrics.r2_score"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_validation.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_validation.shuffle": {
  "data": {
   "shadows": "sklearn.utils.shuffle"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_validation.sleep": {
  "data": {
   "shadows": "time.sleep"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_validation.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_validation.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_validation.test_callable_multimetric_confusion_matrix_cross_validate": {
  "data": {
   "lineno": 1948,
   "symbols_in_volume": [
    "sklearn.datasets.make_classification",
    "sklearn.model_selection.cross_validate",
    "sklearn.model_selection.tests.test_validation.X",
    "sklearn.model_selection.tests.test_validation.y",
    "sklearn.svm.LinearSVC"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_callable_multimetric_confusion_matrix_cross_validate.custom_scorer": {
  "data": {
   "lineno": 1949,
   "symbols_in_volume": [
    "sklearn.metrics.confusion_matrix",
    "sklearn.model_selection.tests.test_validation.X",
    "sklearn.model_selection.tests.test_validation.y"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_check_is_permutation": {
  "data": {
   "lineno": 1397,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.delete",
    "numpy.hstack",
    "numpy.random.RandomState",
    "sklearn.model_selection._validation._check_is_permutation"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_cross_val_predict": {
  "data": {
   "lineno": 820,
   "symbols_in_volume": [
    "BadCV",
    "RuntimeWarning",
    "ValueError",
    "len",
    "numpy.median",
    "numpy.zeros_like",
    "scipy.sparse.coo_matrix",
    "sklearn.cluster.KMeans",
    "sklearn.datasets.load_diabetes",
    "sklearn.datasets.load_iris",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.linear_model.Ridge",
    "sklearn.model_selection.KFold",
    "sklearn.model_selection.LeaveOneOut",
    "sklearn.model_selection.cross_val_predict",
    "sklearn.model_selection.tests.test_validation.X",
    "sklearn.model_selection.tests.test_validation.y",
    "sklearn.utils._testing.assert_array_almost_equal",
    "sklearn.utils._testing.assert_raises",
    "sklearn.utils._testing.assert_warns_message"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_cross_val_predict.BadCV": {
  "data": {
   "lineno": 851
  },
  "type": "class"
 },
 "sklearn.model_selection.tests.test_validation.test_cross_val_predict.BadCV.split": {
  "data": {
   "lineno": 852,
   "symbols_in_volume": [
    "numpy.array",
    "range"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_cross_val_predict_class_subset": {
  "data": {
   "lineno": 1658,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "numpy.repeat",
    "range",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.model_selection.KFold",
    "sklearn.model_selection.cross_val_predict",
    "sklearn.model_selection.tests.test_validation.X",
    "sklearn.model_selection.tests.test_validation.get_expected_predictions",
    "sklearn.model_selection.tests.test_validation.y",
    "sklearn.preprocessing.LabelEncoder",
    "sklearn.utils._testing.assert_array_almost_equal",
    "sklearn.utils.shuffle"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_cross_val_predict_decision_function_shape": {
  "data": {
   "lineno": 869,
   "symbols_in_volume": [
    "ValueError",
    "numpy.argsort",
    "sklearn.datasets.load_digits",
    "sklearn.datasets.load_iris",
    "sklearn.datasets.make_classification",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.linear_model.RidgeClassifier",
    "sklearn.model_selection.KFold",
    "sklearn.model_selection.cross_val_predict",
    "sklearn.model_selection.tests.test_validation.X",
    "sklearn.model_selection.tests.test_validation.y",
    "sklearn.svm.SVC",
    "sklearn.utils._testing.assert_raise_message",
    "sklearn.utils._testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_cross_val_predict_input_types": {
  "data": {
   "lineno": 944,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "numpy.column_stack",
    "numpy.newaxis",
    "scipy.sparse.coo_matrix",
    "sklearn.datasets.load_iris",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.linear_model.Ridge",
    "sklearn.model_selection.cross_val_predict",
    "sklearn.model_selection.tests.test_validation.X",
    "sklearn.model_selection.tests.test_validation.X_sparse",
    "sklearn.model_selection.tests.test_validation.y",
    "sklearn.utils._mocking.CheckingClassifier",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_cross_val_predict_method_checking": {
  "data": {
   "lineno": 1541,
   "symbols_in_volume": [
    "sklearn.datasets.load_iris",
    "sklearn.linear_model.SGDClassifier",
    "sklearn.model_selection.tests.test_validation.X",
    "sklearn.model_selection.tests.test_validation.check_cross_val_predict_multiclass",
    "sklearn.model_selection.tests.test_validation.y",
    "sklearn.utils.shuffle"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_cross_val_predict_pandas": {
  "data": {
   "lineno": 991,
   "symbols_in_volume": [
    "ImportError",
    "InputFeatureType",
    "TargetType",
    "isinstance",
    "pandas.DataFrame",
    "pandas.Series",
    "sklearn.model_selection.cross_val_predict",
    "sklearn.model_selection.tests.test_validation.X",
    "sklearn.model_selection.tests.test_validation.pytest",
    "sklearn.model_selection.tests.test_validation.y2",
    "sklearn.utils._mocking.CheckingClassifier",
    "sklearn.utils._mocking.MockDataFrame"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_cross_val_predict_predict_log_proba_shape": {
  "data": {
   "lineno": 930,
   "symbols_in_volume": [
    "sklearn.datasets.load_iris",
    "sklearn.datasets.make_classification",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.model_selection.cross_val_predict",
    "sklearn.model_selection.tests.test_validation.X",
    "sklearn.model_selection.tests.test_validation.y"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_cross_val_predict_predict_proba_shape": {
  "data": {
   "lineno": 916,
   "symbols_in_volume": [
    "sklearn.datasets.load_iris",
    "sklearn.datasets.make_classification",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.model_selection.cross_val_predict",
    "sklearn.model_selection.tests.test_validation.X",
    "sklearn.model_selection.tests.test_validation.y"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_cross_val_predict_sparse_prediction": {
  "data": {
   "lineno": 1411,
   "symbols_in_volume": [
    "scipy.sparse.csr_matrix",
    "sklearn.datasets.make_multilabel_classification",
    "sklearn.model_selection.cross_val_predict",
    "sklearn.model_selection.tests.test_validation.X",
    "sklearn.model_selection.tests.test_validation.X_sparse",
    "sklearn.model_selection.tests.test_validation.y",
    "sklearn.multiclass.OneVsRestClassifier",
    "sklearn.svm.SVC",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_cross_val_predict_unbalanced": {
  "data": {
   "lineno": 1010,
   "symbols_in_volume": [
    "list",
    "numpy.all",
    "numpy.ones",
    "sklearn.datasets.make_classification",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.model_selection.StratifiedKFold",
    "sklearn.model_selection.cross_val_predict",
    "sklearn.model_selection.tests.test_validation.X",
    "sklearn.model_selection.tests.test_validation.y",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_cross_val_predict_with_method": {
  "data": {
   "lineno": 1534,
   "symbols_in_volume": [
    "sklearn.linear_model.LogisticRegression",
    "sklearn.model_selection.tests.test_validation.check_cross_val_predict_with_method_binary",
    "sklearn.model_selection.tests.test_validation.check_cross_val_predict_with_method_multiclass"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_cross_val_predict_with_method_multilabel_ovr": {
  "data": {
   "lineno": 1563,
   "symbols_in_volume": [
    "sklearn.datasets.make_multilabel_classification",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.model_selection.tests.test_validation.X",
    "sklearn.model_selection.tests.test_validation.check_cross_val_predict_binary",
    "sklearn.model_selection.tests.test_validation.y",
    "sklearn.multiclass.OneVsRestClassifier"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_cross_val_predict_with_method_multilabel_rf": {
  "data": {
   "lineno": 1590,
   "symbols_in_volume": [
    "sklearn.datasets.make_multilabel_classification",
    "sklearn.model_selection.tests.test_validation.RFWithDecisionFunction",
    "sklearn.model_selection.tests.test_validation.X",
    "sklearn.model_selection.tests.test_validation.check_cross_val_predict_multilabel",
    "sklearn.model_selection.tests.test_validation.warnings",
    "sklearn.model_selection.tests.test_validation.y"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_cross_val_predict_with_method_multilabel_rf_rare_class": {
  "data": {
   "lineno": 1621,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.random.RandomState",
    "sklearn.model_selection.tests.test_validation.RFWithDecisionFunction",
    "sklearn.model_selection.tests.test_validation.X",
    "sklearn.model_selection.tests.test_validation.check_cross_val_predict_multilabel",
    "sklearn.model_selection.tests.test_validation.warnings",
    "sklearn.model_selection.tests.test_validation.y"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_cross_val_predict_with_method_rare_class": {
  "data": {
   "lineno": 1607,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.random.RandomState",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.model_selection.tests.test_validation.X",
    "sklearn.model_selection.tests.test_validation.check_cross_val_predict_multiclass",
    "sklearn.model_selection.tests.test_validation.warnings",
    "sklearn.model_selection.tests.test_validation.y"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_cross_val_predict_y_none": {
  "data": {
   "lineno": 1028,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.model_selection.cross_val_predict",
    "sklearn.model_selection.tests.test_validation.MockClassifier",
    "sklearn.model_selection.tests.test_validation.X",
    "sklearn.utils._testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_cross_val_score": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "list",
    "numpy.column_stack",
    "numpy.newaxis",
    "range",
    "sklearn.model_selection.cross_val_score",
    "sklearn.model_selection.tests.test_validation.MockClassifier",
    "sklearn.model_selection.tests.test_validation.X",
    "sklearn.model_selection.tests.test_validation.X_sparse",
    "sklearn.model_selection.tests.test_validation.y2",
    "sklearn.utils._mocking.CheckingClassifier",
    "sklearn.utils._testing.assert_array_equal",
    "sklearn.utils._testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_cross_val_score_allow_nans": {
  "data": {
   "lineno": 791,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.float64",
    "numpy.nan",
    "numpy.repeat",
    "sklearn.impute.SimpleImputer",
    "sklearn.model_selection.cross_val_score",
    "sklearn.model_selection.tests.test_validation.MockClassifier",
    "sklearn.model_selection.tests.test_validation.X",
    "sklearn.model_selection.tests.test_validation.y",
    "sklearn.pipeline.Pipeline"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_cross_val_score_errors": {
  "data": {
   "lineno": 658,
   "symbols_in_volume": [
    "BrokenEstimator",
    "TypeError",
    "sklearn.model_selection.cross_val_score",
    "sklearn.model_selection.tests.test_validation.X",
    "sklearn.utils._testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_cross_val_score_errors.BrokenEstimator": {
  "data": {
   "lineno": 659
  },
  "type": "class"
 },
 "sklearn.model_selection.tests.test_validation.test_cross_val_score_failing_scorer": {
  "data": {
   "lineno": 1821,
   "symbols_in_volume": [
    "UserWarning",
    "ValueError",
    "functools.partial",
    "numpy.nan",
    "sklearn.datasets.load_iris",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.model_selection.cross_val_score",
    "sklearn.model_selection.tests.test_validation.X",
    "sklearn.model_selection.tests.test_validation._failing_scorer",
    "sklearn.model_selection.tests.test_validation.pytest",
    "sklearn.model_selection.tests.test_validation.y",
    "sklearn.utils._testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_cross_val_score_fit_params": {
  "data": {
   "lineno": 610,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "numpy.eye",
    "numpy.full",
    "numpy.ones",
    "numpy.unique",
    "object",
    "scipy.sparse.coo_matrix",
    "sklearn.model_selection.cross_val_score",
    "sklearn.model_selection.tests.test_validation.MockClassifier",
    "sklearn.model_selection.tests.test_validation.P_sparse",
    "sklearn.model_selection.tests.test_validation.X",
    "sklearn.model_selection.tests.test_validation.y"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_cross_val_score_fit_params.assert_fit_params": {
  "data": {
   "lineno": 623
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_cross_val_score_mask": {
  "data": {
   "lineno": 565,
   "symbols_in_volume": [
    "bool",
    "len",
    "numpy.zeros",
    "sklearn.datasets.load_iris",
    "sklearn.model_selection.KFold",
    "sklearn.model_selection.cross_val_score",
    "sklearn.model_selection.tests.test_validation.X",
    "sklearn.model_selection.tests.test_validation.y",
    "sklearn.svm.SVC",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_cross_val_score_multilabel": {
  "data": {
   "lineno": 803,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.metrics.make_scorer",
    "sklearn.metrics.precision_score",
    "sklearn.model_selection.cross_val_score",
    "sklearn.model_selection.tests.test_validation.X",
    "sklearn.model_selection.tests.test_validation.y",
    "sklearn.neighbors.KNeighborsClassifier",
    "sklearn.utils._testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_cross_val_score_pandas": {
  "data": {
   "lineno": 546,
   "symbols_in_volume": [
    "ImportError",
    "InputFeatureType",
    "TargetType",
    "isinstance",
    "pandas.DataFrame",
    "pandas.Series",
    "sklearn.model_selection.cross_val_score",
    "sklearn.model_selection.tests.test_validation.X",
    "sklearn.model_selection.tests.test_validation.pytest",
    "sklearn.model_selection.tests.test_validation.y2",
    "sklearn.utils._mocking.CheckingClassifier",
    "sklearn.utils._mocking.MockDataFrame"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_cross_val_score_precomputed": {
  "data": {
   "lineno": 584,
   "symbols_in_volume": [
    "ValueError",
    "numpy.dot",
    "sklearn.datasets.load_iris",
    "sklearn.model_selection.cross_val_score",
    "sklearn.model_selection.tests.test_validation.X",
    "sklearn.model_selection.tests.test_validation.y",
    "sklearn.svm.SVC",
    "sklearn.utils._testing.assert_array_almost_equal",
    "sklearn.utils._testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_cross_val_score_predict_groups": {
  "data": {
   "lineno": 527,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.datasets.make_classification",
    "sklearn.model_selection.GroupKFold",
    "sklearn.model_selection.GroupShuffleSplit",
    "sklearn.model_selection.LeaveOneGroupOut",
    "sklearn.model_selection.LeavePGroupsOut",
    "sklearn.model_selection.cross_val_predict",
    "sklearn.model_selection.cross_val_score",
    "sklearn.model_selection.tests.test_validation.X",
    "sklearn.model_selection.tests.test_validation.y",
    "sklearn.svm.SVC",
    "sklearn.utils._testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_cross_val_score_score_func": {
  "data": {
   "lineno": 642,
   "symbols_in_volume": [
    "len",
    "sklearn.metrics.make_scorer",
    "sklearn.model_selection.cross_val_score",
    "sklearn.model_selection.tests.test_validation.MockClassifier",
    "sklearn.model_selection.tests.test_validation.X",
    "sklearn.model_selection.tests.test_validation.warnings",
    "sklearn.model_selection.tests.test_validation.y",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_cross_val_score_score_func.score_func": {
  "data": {
   "lineno": 646
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_cross_val_score_sparse_fit_params": {
  "data": {
   "lineno": 1041,
   "symbols_in_volume": [
    "numpy.eye",
    "numpy.ones",
    "scipy.sparse.coo_matrix",
    "sklearn.datasets.load_iris",
    "sklearn.model_selection.cross_val_score",
    "sklearn.model_selection.tests.test_validation.MockClassifier",
    "sklearn.model_selection.tests.test_validation.X",
    "sklearn.model_selection.tests.test_validation.y",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_cross_val_score_with_score_func_classification": {
  "data": {
   "lineno": 665,
   "symbols_in_volume": [
    "sklearn.datasets.load_iris",
    "sklearn.model_selection.cross_val_score",
    "sklearn.svm.SVC",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_cross_val_score_with_score_func_regression": {
  "data": {
   "lineno": 686,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.datasets.make_regression",
    "sklearn.linear_model.Ridge",
    "sklearn.metrics.explained_variance_score",
    "sklearn.metrics.make_scorer",
    "sklearn.model_selection.cross_val_score",
    "sklearn.model_selection.tests.test_validation.X",
    "sklearn.model_selection.tests.test_validation.y",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_cross_validate": {
  "data": {
   "lineno": 385,
   "symbols_in_volume": [
    "mse_scorer",
    "numpy.array",
    "r2_scorer",
    "sklearn.base.clone",
    "sklearn.datasets.make_classification",
    "sklearn.datasets.make_regression",
    "sklearn.linear_model.Ridge",
    "sklearn.metrics.check_scoring",
    "sklearn.model_selection.KFold",
    "sklearn.model_selection.tests.test_validation.X",
    "sklearn.model_selection.tests.test_validation.check_cross_validate_multi_metric",
    "sklearn.model_selection.tests.test_validation.check_cross_validate_single_metric",
    "sklearn.model_selection.tests.test_validation.y",
    "sklearn.svm.SVC"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_cross_validate_failing_scorer": {
  "data": {
   "lineno": 1851,
   "symbols_in_volume": [
    "UserWarning",
    "ValueError",
    "functools.partial",
    "numpy.nan",
    "sklearn.datasets.load_iris",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.model_selection.cross_validate",
    "sklearn.model_selection.tests.test_validation.X",
    "sklearn.model_selection.tests.test_validation._failing_scorer",
    "sklearn.model_selection.tests.test_validation.pytest",
    "sklearn.model_selection.tests.test_validation.y",
    "sklearn.utils._testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_cross_validate_invalid_scoring_param": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": [
    "UserWarning",
    "ValueError",
    "dict",
    "numpy.nan",
    "sklearn.datasets.make_classification",
    "sklearn.metrics.accuracy_score",
    "sklearn.metrics.make_scorer",
    "sklearn.metrics.precision_recall_fscore_support",
    "sklearn.metrics.precision_score",
    "sklearn.model_selection.cross_validate",
    "sklearn.model_selection.tests.test_validation.MockClassifier",
    "sklearn.model_selection.tests.test_validation.X",
    "sklearn.model_selection.tests.test_validation.pytest",
    "sklearn.model_selection.tests.test_validation.y",
    "sklearn.svm.SVC",
    "sklearn.utils._testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_cross_validate_many_jobs": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "sklearn.datasets.load_iris",
    "sklearn.model_selection.GridSearchCV",
    "sklearn.model_selection.cross_validate",
    "sklearn.model_selection.tests.test_validation.X",
    "sklearn.model_selection.tests.test_validation.y",
    "sklearn.svm.SVC"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_cross_validate_nested_estimator": {
  "data": {
   "lineno": 368,
   "symbols_in_volume": [
    "all",
    "isinstance",
    "list",
    "sklearn.datasets.load_iris",
    "sklearn.impute.SimpleImputer",
    "sklearn.model_selection.cross_validate",
    "sklearn.model_selection.tests.test_validation.MockClassifier",
    "sklearn.model_selection.tests.test_validation.X",
    "sklearn.model_selection.tests.test_validation.y",
    "sklearn.pipeline.Pipeline"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_fit_and_score_failing": {
  "data": {
   "lineno": 1745,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "numpy.arange",
    "numpy.ones",
    "sklearn.exceptions.FitFailedWarning",
    "sklearn.model_selection._validation._fit_and_score",
    "sklearn.model_selection.cross_val_score",
    "sklearn.model_selection.cross_validate",
    "sklearn.model_selection.learning_curve",
    "sklearn.model_selection.tests.test_search.FailingClassifier",
    "sklearn.model_selection.tests.test_search.FailingClassifier.FAILING_PARAMETER",
    "sklearn.model_selection.tests.test_validation.X",
    "sklearn.model_selection.tests.test_validation.y",
    "sklearn.model_selection.validation_curve",
    "sklearn.utils._testing.assert_raise_message",
    "sklearn.utils._testing.assert_warns",
    "sklearn.utils._testing.assert_warns_message"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_fit_and_score_failing.test_warn_trace": {
  "data": {
   "lineno": 1766
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_fit_and_score_verbosity": {
  "data": {
   "lineno": 1904,
   "symbols_in_volume": [
    "len",
    "next",
    "sklearn.datasets.make_classification",
    "sklearn.model_selection.ShuffleSplit",
    "sklearn.model_selection._validation._fit_and_score",
    "sklearn.model_selection.tests.test_validation.X",
    "sklearn.model_selection.tests.test_validation.pytest",
    "sklearn.model_selection.tests.test_validation.re",
    "sklearn.model_selection.tests.test_validation.three_params_scorer",
    "sklearn.model_selection.tests.test_validation.y",
    "sklearn.svm.SVC"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_fit_and_score_working": {
  "data": {
   "lineno": 1803,
   "symbols_in_volume": [
    "dict",
    "next",
    "sklearn.datasets.make_classification",
    "sklearn.model_selection.ShuffleSplit",
    "sklearn.model_selection._validation._fit_and_score",
    "sklearn.model_selection.tests.test_validation.X",
    "sklearn.model_selection.tests.test_validation.y",
    "sklearn.svm.SVC"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_gridsearchcv_cross_val_predict_with_method": {
  "data": {
   "lineno": 1552,
   "symbols_in_volume": [
    "sklearn.datasets.load_iris",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.model_selection.GridSearchCV",
    "sklearn.model_selection.tests.test_validation.X",
    "sklearn.model_selection.tests.test_validation.check_cross_val_predict_multiclass",
    "sklearn.model_selection.tests.test_validation.y",
    "sklearn.utils.shuffle"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_learning_curve": {
  "data": {
   "lineno": 1050,
   "symbols_in_volume": [
    "RuntimeError",
    "len",
    "numpy.linspace",
    "sklearn.datasets.make_classification",
    "sklearn.model_selection.KFold",
    "sklearn.model_selection.learning_curve",
    "sklearn.model_selection.tests.common.OneTimeSplitter",
    "sklearn.model_selection.tests.test_validation.MockImprovingEstimator",
    "sklearn.model_selection.tests.test_validation.X",
    "sklearn.model_selection.tests.test_validation.warnings",
    "sklearn.model_selection.tests.test_validation.y",
    "sklearn.utils._testing.assert_array_almost_equal",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_learning_curve_batch_and_incremental_learning_are_equal": {
  "data": {
   "lineno": 1167,
   "symbols_in_volume": [
    "numpy.linspace",
    "sklearn.datasets.make_classification",
    "sklearn.linear_model.PassiveAggressiveClassifier",
    "sklearn.model_selection.learning_curve",
    "sklearn.model_selection.tests.test_validation.X",
    "sklearn.model_selection.tests.test_validation.y",
    "sklearn.utils._testing.assert_array_almost_equal",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_learning_curve_fit_params": {
  "data": {
   "lineno": 1269,
   "symbols_in_volume": [
    "AssertionError",
    "numpy.arange",
    "numpy.array",
    "numpy.ones",
    "sklearn.model_selection.learning_curve",
    "sklearn.model_selection.tests.test_validation.X",
    "sklearn.model_selection.tests.test_validation.pytest",
    "sklearn.model_selection.tests.test_validation.y",
    "sklearn.utils._mocking.CheckingClassifier"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_learning_curve_incremental_learning": {
  "data": {
   "lineno": 1136,
   "symbols_in_volume": [
    "numpy.linspace",
    "sklearn.datasets.make_classification",
    "sklearn.model_selection.learning_curve",
    "sklearn.model_selection.tests.test_validation.MockIncrementalImprovingEstimator",
    "sklearn.model_selection.tests.test_validation.X",
    "sklearn.model_selection.tests.test_validation.y",
    "sklearn.utils._testing.assert_array_almost_equal",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_learning_curve_incremental_learning_fit_params": {
  "data": {
   "lineno": 1286,
   "symbols_in_volume": [
    "AssertionError",
    "numpy.linspace",
    "numpy.ones",
    "sklearn.datasets.make_classification",
    "sklearn.model_selection.learning_curve",
    "sklearn.model_selection.tests.test_validation.MockIncrementalImprovingEstimator",
    "sklearn.model_selection.tests.test_validation.X",
    "sklearn.model_selection.tests.test_validation.pytest",
    "sklearn.model_selection.tests.test_validation.y"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_learning_curve_incremental_learning_not_possible": {
  "data": {
   "lineno": 1126,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.datasets.make_classification",
    "sklearn.model_selection.learning_curve",
    "sklearn.model_selection.tests.test_validation.MockImprovingEstimator",
    "sklearn.model_selection.tests.test_validation.X",
    "sklearn.model_selection.tests.test_validation.y",
    "sklearn.utils._testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_learning_curve_incremental_learning_unsupervised": {
  "data": {
   "lineno": 1152,
   "symbols_in_volume": [
    "numpy.linspace",
    "sklearn.datasets.make_classification",
    "sklearn.model_selection.learning_curve",
    "sklearn.model_selection.tests.test_validation.MockIncrementalImprovingEstimator",
    "sklearn.model_selection.tests.test_validation.X",
    "sklearn.utils._testing.assert_array_almost_equal",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_learning_curve_n_sample_range_out_of_bounds": {
  "data": {
   "lineno": 1191,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.datasets.make_classification",
    "sklearn.model_selection.learning_curve",
    "sklearn.model_selection.tests.test_validation.MockImprovingEstimator",
    "sklearn.model_selection.tests.test_validation.X",
    "sklearn.model_selection.tests.test_validation.y",
    "sklearn.utils._testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_learning_curve_remove_duplicate_sample_sizes": {
  "data": {
   "lineno": 1208,
   "symbols_in_volume": [
    "RuntimeWarning",
    "numpy.linspace",
    "sklearn.datasets.make_classification",
    "sklearn.model_selection.learning_curve",
    "sklearn.model_selection.tests.test_validation.MockImprovingEstimator",
    "sklearn.model_selection.tests.test_validation.X",
    "sklearn.model_selection.tests.test_validation.y",
    "sklearn.utils._testing.assert_array_equal",
    "sklearn.utils._testing.assert_warns"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_learning_curve_unsupervised": {
  "data": {
   "lineno": 1093,
   "symbols_in_volume": [
    "numpy.linspace",
    "sklearn.datasets.make_classification",
    "sklearn.model_selection.learning_curve",
    "sklearn.model_selection.tests.test_validation.MockImprovingEstimator",
    "sklearn.model_selection.tests.test_validation.X",
    "sklearn.utils._testing.assert_array_almost_equal",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_learning_curve_verbose": {
  "data": {
   "lineno": 1107,
   "symbols_in_volume": [
    "io.StringIO",
    "sklearn.datasets.make_classification",
    "sklearn.model_selection.learning_curve",
    "sklearn.model_selection.tests.test_validation.MockImprovingEstimator",
    "sklearn.model_selection.tests.test_validation.X",
    "sklearn.model_selection.tests.test_validation.sys",
    "sklearn.model_selection.tests.test_validation.y"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_learning_curve_with_boolean_indices": {
  "data": {
   "lineno": 1219,
   "symbols_in_volume": [
    "numpy.linspace",
    "sklearn.datasets.make_classification",
    "sklearn.model_selection.KFold",
    "sklearn.model_selection.learning_curve",
    "sklearn.model_selection.tests.test_validation.MockImprovingEstimator",
    "sklearn.model_selection.tests.test_validation.X",
    "sklearn.model_selection.tests.test_validation.y",
    "sklearn.utils._testing.assert_array_almost_equal",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_learning_curve_with_shuffle": {
  "data": {
   "lineno": 1234,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "numpy.linspace",
    "sklearn.linear_model.PassiveAggressiveClassifier",
    "sklearn.model_selection.GroupKFold",
    "sklearn.model_selection.learning_curve",
    "sklearn.model_selection.tests.test_validation.X",
    "sklearn.model_selection.tests.test_validation.y",
    "sklearn.utils._testing.assert_array_almost_equal",
    "sklearn.utils._testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_permutation_score": {
  "data": {
   "lineno": 712,
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "numpy.mod",
    "numpy.ones",
    "scipy.sparse.coo_matrix",
    "sklearn.datasets.load_iris",
    "sklearn.metrics.make_scorer",
    "sklearn.model_selection.StratifiedKFold",
    "sklearn.model_selection.permutation_test_score",
    "sklearn.model_selection.tests.test_validation.X",
    "sklearn.model_selection.tests.test_validation.X_sparse",
    "sklearn.model_selection.tests.test_validation.y",
    "sklearn.svm.SVC",
    "sklearn.utils._testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_permutation_score.custom_score": {
  "data": {
   "lineno": 742
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_permutation_test_score_allow_nans": {
  "data": {
   "lineno": 762,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.float64",
    "numpy.nan",
    "numpy.repeat",
    "sklearn.impute.SimpleImputer",
    "sklearn.model_selection.permutation_test_score",
    "sklearn.model_selection.tests.test_validation.MockClassifier",
    "sklearn.model_selection.tests.test_validation.X",
    "sklearn.model_selection.tests.test_validation.y",
    "sklearn.pipeline.Pipeline"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_permutation_test_score_fit_params": {
  "data": {
   "lineno": 774,
   "symbols_in_volume": [
    "AssertionError",
    "numpy.arange",
    "numpy.array",
    "numpy.ones",
    "sklearn.model_selection.permutation_test_score",
    "sklearn.model_selection.tests.test_validation.X",
    "sklearn.model_selection.tests.test_validation.pytest",
    "sklearn.model_selection.tests.test_validation.y",
    "sklearn.utils._mocking.CheckingClassifier"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_permutation_test_score_pandas": {
  "data": {
   "lineno": 1725,
   "symbols_in_volume": [
    "ImportError",
    "InputFeatureType",
    "TargetType",
    "isinstance",
    "pandas.DataFrame",
    "pandas.Series",
    "sklearn.datasets.load_iris",
    "sklearn.model_selection.permutation_test_score",
    "sklearn.model_selection.tests.test_validation.X",
    "sklearn.model_selection.tests.test_validation.pytest",
    "sklearn.model_selection.tests.test_validation.y",
    "sklearn.utils._mocking.CheckingClassifier",
    "sklearn.utils._mocking.MockDataFrame"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_score": {
  "data": {
   "lineno": 1938,
   "symbols_in_volume": [
    "ValueError",
    "numpy.nan",
    "sklearn.model_selection._validation._score",
    "sklearn.utils._testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_score.two_params_scorer": {
  "data": {
   "lineno": 1941
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_score_memmap": {
  "data": {
   "lineno": 1699,
   "symbols_in_volume": [
    "ValueError",
    "numpy.float64",
    "numpy.memmap",
    "range",
    "sklearn.datasets.load_iris",
    "sklearn.model_selection.cross_val_score",
    "sklearn.model_selection.tests.test_validation.MockClassifier",
    "sklearn.model_selection.tests.test_validation.WindowsError",
    "sklearn.model_selection.tests.test_validation.X",
    "sklearn.model_selection.tests.test_validation.os",
    "sklearn.model_selection.tests.test_validation.tempfile",
    "sklearn.model_selection.tests.test_validation.y",
    "sklearn.utils._testing.assert_raises",
    "time.sleep"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_validation_curve": {
  "data": {
   "lineno": 1311,
   "symbols_in_volume": [
    "RuntimeError",
    "len",
    "numpy.linspace",
    "sklearn.datasets.make_classification",
    "sklearn.model_selection.tests.test_validation.MockEstimatorWithParameter",
    "sklearn.model_selection.tests.test_validation.X",
    "sklearn.model_selection.tests.test_validation.warnings",
    "sklearn.model_selection.tests.test_validation.y",
    "sklearn.model_selection.validation_curve",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_validation_curve_clone_estimator": {
  "data": {
   "lineno": 1328,
   "symbols_in_volume": [
    "numpy.linspace",
    "sklearn.datasets.make_classification",
    "sklearn.model_selection.tests.test_validation.MockEstimatorWithSingleFitCallAllowed",
    "sklearn.model_selection.tests.test_validation.X",
    "sklearn.model_selection.tests.test_validation.y",
    "sklearn.model_selection.validation_curve"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_validation_curve_cv_splits_consistency": {
  "data": {
   "lineno": 1340,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.hstack",
    "numpy.vsplit",
    "sklearn.datasets.make_classification",
    "sklearn.model_selection.KFold",
    "sklearn.model_selection.tests.common.OneTimeSplitter",
    "sklearn.model_selection.tests.test_validation.X",
    "sklearn.model_selection.tests.test_validation.y",
    "sklearn.model_selection.validation_curve",
    "sklearn.svm.SVC",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_validation_curve_fit_params": {
  "data": {
   "lineno": 1377,
   "symbols_in_volume": [
    "AssertionError",
    "numpy.arange",
    "numpy.array",
    "numpy.ones",
    "sklearn.model_selection.tests.test_validation.X",
    "sklearn.model_selection.tests.test_validation.pytest",
    "sklearn.model_selection.tests.test_validation.y",
    "sklearn.model_selection.validation_curve",
    "sklearn.utils._mocking.CheckingClassifier"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_validation_pairwise": {
  "data": {
   "lineno": 1966,
   "symbols_in_volume": [
    "FutureWarning",
    "IncorrectTagSVM",
    "numpy.dot",
    "sklearn.datasets.load_iris",
    "sklearn.model_selection.cross_validate",
    "sklearn.model_selection.tests.test_validation.X",
    "sklearn.model_selection.tests.test_validation.pytest",
    "sklearn.model_selection.tests.test_validation.y",
    "sklearn.svm.SVC"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_validation_pairwise.IncorrectTagSVM": {
  "data": {
   "lineno": 1979,
   "symbols_in_volume": [
    "sklearn.svm.SVC"
   ]
  },
  "type": "class"
 },
 "sklearn.model_selection.tests.test_validation.test_validation_pairwise.IncorrectTagSVM._more_tags": {
  "data": {
   "lineno": 1980
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.three_params_scorer": {
  "data": {
   "lineno": 1900
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.validation_curve": {
  "data": {
   "shadows": "sklearn.model_selection.validation_curve"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_validation.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_validation.y": {
  "data": {
   "lineno": 250
  },
  "type": "constant"
 },
 "sklearn.model_selection.tests.test_validation.y2": {
  "data": {
   "lineno": 253
  },
  "type": "constant"
 },
 "sklearn.model_selection.typing": {
  "data": {
   "shadows": "typing"
  },
  "type": "import"
 },
 "sklearn.multiclass": {
  "data": {},
  "type": "module"
 },
 "sklearn.multiclass.OneVsOneClassifier": {
  "data": {
   "lineno": 548
  },
  "type": "class"
 },
 "sklearn.multiclass.OneVsOneClassifier.__init__": {
  "data": {
   "lineno": 612
  },
  "type": "function"
 },
 "sklearn.multiclass.OneVsOneClassifier._more_tags": {
  "data": {
   "lineno": 781,
   "symbols_in_volume": [
    "_safe_tags"
   ]
  },
  "type": "function"
 },
 "sklearn.multiclass.OneVsOneClassifier._pairwise": {
  "data": {
   "lineno": 774,
   "symbols_in_volume": [
    "deprecated",
    "getattr",
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.multiclass.OneVsOneClassifier.decision_function": {
  "data": {
   "lineno": 729,
   "symbols_in_volume": [
    "_ovr_decision_function",
    "check_is_fitted",
    "len",
    "numpy.vstack",
    "sklearn.multiclass._predict_binary",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.multiclass.OneVsOneClassifier.fit": {
  "data": {
   "lineno": 617,
   "symbols_in_volume": [
    "ValueError",
    "_is_pairwise",
    "check_classification_targets",
    "delayed",
    "joblib.Parallel",
    "len",
    "list",
    "numpy.unique",
    "range",
    "sklearn.multiclass._fit_ovo_binary",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.multiclass.OneVsOneClassifier.n_classes_": {
  "data": {
   "lineno": 768,
   "symbols_in_volume": [
    "len",
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.multiclass.OneVsOneClassifier.partial_fit": {
  "data": {
   "lineno": 654,
   "symbols_in_volume": [
    "ValueError",
    "_check_partial_fit_first_call",
    "check_X_y",
    "check_classification_targets",
    "clone",
    "delayed",
    "if_delegate_has_method",
    "joblib.Parallel",
    "len",
    "numpy.setdiff1d",
    "numpy.unique",
    "range",
    "sklearn.multiclass._partial_fit_ovo_binary",
    "sklearn.multiclass.itertools",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.multiclass.OneVsOneClassifier.predict": {
  "data": {
   "lineno": 707,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "sklearn.multiclass.OneVsRestClassifier": {
  "data": {
   "lineno": 138
  },
  "type": "class"
 },
 "sklearn.multiclass.OneVsRestClassifier.__init__": {
  "data": {
   "lineno": 248
  },
  "type": "function"
 },
 "sklearn.multiclass.OneVsRestClassifier._first_estimator": {
  "data": {
   "lineno": 505,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.multiclass.OneVsRestClassifier._more_tags": {
  "data": {
   "lineno": 501,
   "symbols_in_volume": [
    "_safe_tags"
   ]
  },
  "type": "function"
 },
 "sklearn.multiclass.OneVsRestClassifier._pairwise": {
  "data": {
   "lineno": 494,
   "symbols_in_volume": [
    "deprecated",
    "getattr",
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.multiclass.OneVsRestClassifier.coef_": {
  "data": {
   "lineno": 461,
   "symbols_in_volume": [
    "AttributeError",
    "check_is_fitted",
    "deprecated",
    "hasattr",
    "numpy.vstack",
    "property",
    "scipy.sparse.issparse",
    "scipy.sparse.vstack"
   ]
  },
  "type": "function"
 },
 "sklearn.multiclass.OneVsRestClassifier.decision_function": {
  "data": {
   "lineno": 425,
   "symbols_in_volume": [
    "check_is_fitted",
    "if_delegate_has_method",
    "len",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "sklearn.multiclass.OneVsRestClassifier.fit": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "LabelBinarizer",
    "delayed",
    "enumerate",
    "joblib.Parallel",
    "sklearn.multiclass._fit_binary"
   ]
  },
  "type": "function"
 },
 "sklearn.multiclass.OneVsRestClassifier.intercept_": {
  "data": {
   "lineno": 479,
   "symbols_in_volume": [
    "AttributeError",
    "check_is_fitted",
    "deprecated",
    "hasattr",
    "numpy.array",
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.multiclass.OneVsRestClassifier.multilabel_": {
  "data": {
   "lineno": 450,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.multiclass.OneVsRestClassifier.n_classes_": {
  "data": {
   "lineno": 455,
   "symbols_in_volume": [
    "len",
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.multiclass.OneVsRestClassifier.n_features_in_": {
  "data": {
   "lineno": 509,
   "symbols_in_volume": [
    "AttributeError",
    "check_is_fitted",
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.multiclass.OneVsRestClassifier.partial_fit": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "LabelBinarizer",
    "ValueError",
    "_check_partial_fit_first_call",
    "clone",
    "delayed",
    "hasattr",
    "if_delegate_has_method",
    "joblib.Parallel",
    "len",
    "numpy.setdiff1d",
    "numpy.unique",
    "range",
    "sklearn.multiclass._partial_fit_binary",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.multiclass.OneVsRestClassifier.predict": {
  "data": {
   "lineno": 345,
   "symbols_in_volume": [
    "_num_samples",
    "check_is_fitted",
    "enumerate",
    "float",
    "hasattr",
    "int",
    "is_classifier",
    "len",
    "numpy.empty",
    "numpy.inf",
    "numpy.maximum",
    "numpy.ones",
    "numpy.where",
    "numpy.zeros",
    "scipy.sparse.csc_matrix",
    "sklearn.multiclass._predict_binary",
    "sklearn.multiclass.array"
   ]
  },
  "type": "function"
 },
 "sklearn.multiclass.OneVsRestClassifier.predict_proba": {
  "data": {
   "lineno": 386,
   "symbols_in_volume": [
    "check_is_fitted",
    "if_delegate_has_method",
    "len",
    "numpy.array",
    "numpy.concatenate",
    "numpy.newaxis",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "sklearn.multiclass.OutputCodeClassifier": {
  "data": {
   "lineno": 788
  },
  "type": "class"
 },
 "sklearn.multiclass.OutputCodeClassifier.__init__": {
  "data": {
   "lineno": 870
  },
  "type": "function"
 },
 "sklearn.multiclass.OutputCodeClassifier.fit": {
  "data": {
   "lineno": 878,
   "symbols_in_volume": [
    "ValueError",
    "check_classification_targets",
    "check_random_state",
    "delayed",
    "enumerate",
    "hasattr",
    "int",
    "joblib.Parallel",
    "numpy.array",
    "numpy.unique",
    "range",
    "sklearn.multiclass._check_estimator",
    "sklearn.multiclass._fit_binary"
   ]
  },
  "type": "function"
 },
 "sklearn.multiclass.OutputCodeClassifier.predict": {
  "data": {
   "lineno": 927,
   "symbols_in_volume": [
    "check_array",
    "check_is_fitted",
    "euclidean_distances",
    "numpy.array",
    "sklearn.multiclass._predict_binary"
   ]
  },
  "type": "function"
 },
 "sklearn.multiclass.Parallel": {
  "data": {
   "shadows": "joblib.Parallel"
  },
  "type": "import"
 },
 "sklearn.multiclass._ConstantPredictor": {
  "data": {
   "lineno": 115
  },
  "type": "class"
 },
 "sklearn.multiclass._ConstantPredictor.decision_function": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "check_is_fitted",
    "numpy.repeat"
   ]
  },
  "type": "function"
 },
 "sklearn.multiclass._ConstantPredictor.fit": {
  "data": {
   "lineno": 117
  },
  "type": "function"
 },
 "sklearn.multiclass._ConstantPredictor.predict": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "check_is_fitted",
    "numpy.repeat"
   ]
  },
  "type": "function"
 },
 "sklearn.multiclass._ConstantPredictor.predict_proba": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "check_is_fitted",
    "numpy.hstack",
    "numpy.repeat"
   ]
  },
  "type": "function"
 },
 "sklearn.multiclass.__all__": {
  "data": {
   "lineno": 64
  },
  "type": "constant"
 },
 "sklearn.multiclass._check_estimator": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "ValueError",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "sklearn.multiclass._fit_binary": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "clone",
    "len",
    "numpy.unique",
    "sklearn.multiclass._ConstantPredictor",
    "sklearn.multiclass.warnings",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.multiclass._fit_ovo_binary": {
  "data": {
   "lineno": 523,
   "symbols_in_volume": [
    "_safe_split",
    "int",
    "numpy.arange",
    "numpy.empty",
    "numpy.logical_or",
    "sklearn.multiclass._fit_binary"
   ]
  },
  "type": "function"
 },
 "sklearn.multiclass._partial_fit_binary": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "sklearn.multiclass._partial_fit_ovo_binary": {
  "data": {
   "lineno": 536,
   "symbols_in_volume": [
    "len",
    "numpy.logical_or",
    "numpy.zeros_like",
    "sklearn.multiclass._partial_fit_binary"
   ]
  },
  "type": "function"
 },
 "sklearn.multiclass._predict_binary": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "AttributeError",
    "NotImplementedError",
    "is_regressor",
    "numpy.ravel"
   ]
  },
  "type": "function"
 },
 "sklearn.multiclass.array": {
  "data": {
   "shadows": "array"
  },
  "type": "import"
 },
 "sklearn.multiclass.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "sklearn.multiclass.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.multiclass.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.multiclass.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.multioutput": {
  "data": {},
  "type": "module"
 },
 "sklearn.multioutput.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "sklearn.multioutput.ClassifierChain": {
  "data": {
   "lineno": 558,
   "symbols_in_volume": [
    "sklearn.multioutput._BaseChain"
   ]
  },
  "type": "class"
 },
 "sklearn.multioutput.ClassifierChain._more_tags": {
  "data": {
   "lineno": 737
  },
  "type": "function"
 },
 "sklearn.multioutput.ClassifierChain.decision_function": {
  "data": {
   "lineno": 706,
   "symbols_in_volume": [
    "enumerate",
    "if_delegate_has_method",
    "len",
    "numpy.arange",
    "numpy.empty_like",
    "numpy.hstack",
    "numpy.zeros",
    "scipy.sparse.hstack",
    "scipy.sparse.issparse"
   ]
  },
  "type": "function"
 },
 "sklearn.multioutput.ClassifierChain.fit": {
  "data": {
   "lineno": 657,
   "symbols_in_volume": [
    "enumerate",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.multioutput.ClassifierChain.predict_proba": {
  "data": {
   "lineno": 677,
   "symbols_in_volume": [
    "check_array",
    "enumerate",
    "if_delegate_has_method",
    "len",
    "numpy.arange",
    "numpy.empty_like",
    "numpy.hstack",
    "numpy.zeros",
    "scipy.sparse.hstack",
    "scipy.sparse.issparse"
   ]
  },
  "type": "function"
 },
 "sklearn.multioutput.MultiOutputClassifier": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "sklearn.multioutput._MultiOutputEstimator"
   ]
  },
  "type": "class"
 },
 "sklearn.multioutput.MultiOutputClassifier.__init__": {
  "data": {
   "lineno": 342,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.multioutput.MultiOutputClassifier._more_tags": {
  "data": {
   "lineno": 437
  },
  "type": "function"
 },
 "sklearn.multioutput.MultiOutputClassifier._predict_proba": {
  "data": {
   "lineno": 404
  },
  "type": "function"
 },
 "sklearn.multioutput.MultiOutputClassifier.fit": {
  "data": {
   "lineno": 346,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.multioutput.MultiOutputClassifier.predict_proba": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": [
    "AttributeError",
    "all",
    "check_is_fitted",
    "hasattr",
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.multioutput.MultiOutputClassifier.score": {
  "data": {
   "lineno": 409,
   "symbols_in_volume": [
    "ValueError",
    "check_is_fitted",
    "len",
    "numpy.all",
    "numpy.mean"
   ]
  },
  "type": "function"
 },
 "sklearn.multioutput.MultiOutputRegressor": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "sklearn.multioutput._MultiOutputEstimator"
   ]
  },
  "type": "class"
 },
 "sklearn.multioutput.MultiOutputRegressor.__init__": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.multioutput.MultiOutputRegressor.partial_fit": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "if_delegate_has_method",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.multioutput.Parallel": {
  "data": {
   "shadows": "joblib.Parallel"
  },
  "type": "import"
 },
 "sklearn.multioutput.RegressorChain": {
  "data": {
   "lineno": 742,
   "symbols_in_volume": [
    "sklearn.multioutput._BaseChain"
   ]
  },
  "type": "class"
 },
 "sklearn.multioutput.RegressorChain._more_tags": {
  "data": {
   "lineno": 845
  },
  "type": "function"
 },
 "sklearn.multioutput.RegressorChain.fit": {
  "data": {
   "lineno": 822,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.multioutput._BaseChain": {
  "data": {
   "lineno": 442,
   "symbols_in_volume": [
    "abc.ABCMeta"
   ]
  },
  "type": "class"
 },
 "sklearn.multioutput._BaseChain.__init__": {
  "data": {
   "lineno": 443
  },
  "type": "function"
 },
 "sklearn.multioutput._BaseChain.fit": {
  "data": {
   "lineno": 451,
   "symbols_in_volume": [
    "ValueError",
    "abc.abstractmethod",
    "check_array",
    "check_random_state",
    "clone",
    "cross_val_predict",
    "enumerate",
    "isinstance",
    "len",
    "list",
    "numpy.array",
    "numpy.expand_dims",
    "numpy.hstack",
    "numpy.zeros",
    "range",
    "scipy.sparse.hstack",
    "scipy.sparse.issparse",
    "scipy.sparse.lil_matrix",
    "sorted",
    "str",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sklearn.multioutput._BaseChain.predict": {
  "data": {
   "lineno": 523,
   "symbols_in_volume": [
    "check_array",
    "check_is_fitted",
    "enumerate",
    "len",
    "numpy.arange",
    "numpy.empty_like",
    "numpy.hstack",
    "numpy.zeros",
    "scipy.sparse.hstack",
    "scipy.sparse.issparse"
   ]
  },
  "type": "function"
 },
 "sklearn.multioutput._MultiOutputEstimator": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "abc.ABCMeta"
   ]
  },
  "type": "class"
 },
 "sklearn.multioutput._MultiOutputEstimator.__init__": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "sklearn.multioutput._MultiOutputEstimator._more_tags": {
  "data": {
   "lineno": 213
  },
  "type": "function"
 },
 "sklearn.multioutput._MultiOutputEstimator.fit": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "ValueError",
    "_check_fit_params",
    "check_classification_targets",
    "delayed",
    "has_fit_parameter",
    "hasattr",
    "is_classifier",
    "joblib.Parallel",
    "range",
    "sklearn.multioutput._fit_estimator"
   ]
  },
  "type": "function"
 },
 "sklearn.multioutput._MultiOutputEstimator.partial_fit": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "ValueError",
    "check_X_y",
    "delayed",
    "has_fit_parameter",
    "hasattr",
    "if_delegate_has_method",
    "joblib.Parallel",
    "range",
    "sklearn.multioutput._partial_fit_estimator"
   ]
  },
  "type": "function"
 },
 "sklearn.multioutput._MultiOutputEstimator.predict": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "ValueError",
    "check_array",
    "check_is_fitted",
    "delayed",
    "hasattr",
    "joblib.Parallel",
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "sklearn.multioutput.__all__": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "sklearn.multioutput._fit_estimator": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "clone"
   ]
  },
  "type": "function"
 },
 "sklearn.multioutput._partial_fit_estimator": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "clone"
   ]
  },
  "type": "function"
 },
 "sklearn.multioutput.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "sklearn.multioutput.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.multioutput.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.naive_bayes": {
  "data": {},
  "type": "module"
 },
 "sklearn.naive_bayes.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "sklearn.naive_bayes.BernoulliNB": {
  "data": {
   "lineno": 919,
   "symbols_in_volume": [
    "sklearn.naive_bayes._BaseDiscreteNB"
   ]
  },
  "type": "class"
 },
 "sklearn.naive_bayes.BernoulliNB.__init__": {
  "data": {
   "lineno": 1004
  },
  "type": "function"
 },
 "sklearn.naive_bayes.BernoulliNB._check_X": {
  "data": {
   "lineno": 1012,
   "symbols_in_volume": [
    "binarize",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.naive_bayes.BernoulliNB._check_X_y": {
  "data": {
   "lineno": 1018,
   "symbols_in_volume": [
    "binarize",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.naive_bayes.BernoulliNB._count": {
  "data": {
   "lineno": 1024,
   "symbols_in_volume": [
    "safe_sparse_dot"
   ]
  },
  "type": "function"
 },
 "sklearn.naive_bayes.BernoulliNB._joint_log_likelihood": {
  "data": {
   "lineno": 1037,
   "symbols_in_volume": [
    "ValueError",
    "numpy.exp",
    "numpy.log",
    "safe_sparse_dot"
   ]
  },
  "type": "function"
 },
 "sklearn.naive_bayes.BernoulliNB._update_feature_log_prob": {
  "data": {
   "lineno": 1029,
   "symbols_in_volume": [
    "numpy.log"
   ]
  },
  "type": "function"
 },
 "sklearn.naive_bayes.CategoricalNB": {
  "data": {
   "lineno": 1054,
   "symbols_in_volume": [
    "sklearn.naive_bayes._BaseDiscreteNB"
   ]
  },
  "type": "class"
 },
 "sklearn.naive_bayes.CategoricalNB.__init__": {
  "data": {
   "lineno": 1134
  },
  "type": "function"
 },
 "sklearn.naive_bayes.CategoricalNB._check_X": {
  "data": {
   "lineno": 1215,
   "symbols_in_volume": [
    "check_array",
    "check_non_negative"
   ]
  },
  "type": "function"
 },
 "sklearn.naive_bayes.CategoricalNB._check_X_y": {
  "data": {
   "lineno": 1221,
   "symbols_in_volume": [
    "check_non_negative"
   ]
  },
  "type": "function"
 },
 "sklearn.naive_bayes.CategoricalNB._count": {
  "data": {
   "lineno": 1256,
   "symbols_in_volume": [
    "_update_cat_count",
    "_update_cat_count_dims",
    "range"
   ]
  },
  "type": "function"
 },
 "sklearn.naive_bayes.CategoricalNB._count._update_cat_count": {
  "data": {
   "lineno": 1264,
   "symbols_in_volume": [
    "bool",
    "numpy.bincount",
    "numpy.int64",
    "numpy.nonzero",
    "range"
   ]
  },
  "type": "function"
 },
 "sklearn.naive_bayes.CategoricalNB._count._update_cat_count_dims": {
  "data": {
   "lineno": 1257,
   "symbols_in_volume": [
    "numpy.pad"
   ]
  },
  "type": "function"
 },
 "sklearn.naive_bayes.CategoricalNB._init_counters": {
  "data": {
   "lineno": 1227,
   "symbols_in_volume": [
    "numpy.float64",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "sklearn.naive_bayes.CategoricalNB._joint_log_likelihood": {
  "data": {
   "lineno": 1296,
   "symbols_in_volume": [
    "ValueError",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "sklearn.naive_bayes.CategoricalNB._more_tags": {
  "data": {
   "lineno": 1212
  },
  "type": "function"
 },
 "sklearn.naive_bayes.CategoricalNB._update_feature_log_prob": {
  "data": {
   "lineno": 1286,
   "symbols_in_volume": [
    "numpy.log",
    "range"
   ]
  },
  "type": "function"
 },
 "sklearn.naive_bayes.CategoricalNB._validate_n_categories": {
  "data": {
   "lineno": 1232,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "numpy.int64",
    "numpy.issubdtype",
    "numpy.maximum",
    "numpy.signedinteger",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "sklearn.naive_bayes.CategoricalNB.fit": {
  "data": {
   "lineno": 1142,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.naive_bayes.CategoricalNB.partial_fit": {
  "data": {
   "lineno": 1168,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.naive_bayes.ComplementNB": {
  "data": {
   "lineno": 789,
   "symbols_in_volume": [
    "sklearn.naive_bayes._BaseDiscreteNB"
   ]
  },
  "type": "class"
 },
 "sklearn.naive_bayes.ComplementNB.__init__": {
  "data": {
   "lineno": 881
  },
  "type": "function"
 },
 "sklearn.naive_bayes.ComplementNB._count": {
  "data": {
   "lineno": 892,
   "symbols_in_volume": [
    "check_non_negative",
    "safe_sparse_dot"
   ]
  },
  "type": "function"
 },
 "sklearn.naive_bayes.ComplementNB._joint_log_likelihood": {
  "data": {
   "lineno": 911,
   "symbols_in_volume": [
    "len",
    "safe_sparse_dot"
   ]
  },
  "type": "function"
 },
 "sklearn.naive_bayes.ComplementNB._more_tags": {
  "data": {
   "lineno": 889
  },
  "type": "function"
 },
 "sklearn.naive_bayes.ComplementNB._update_feature_log_prob": {
  "data": {
   "lineno": 899,
   "symbols_in_volume": [
    "numpy.log"
   ]
  },
  "type": "function"
 },
 "sklearn.naive_bayes.GaussianNB": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "sklearn.naive_bayes._BaseNB"
   ]
  },
  "type": "class"
 },
 "sklearn.naive_bayes.GaussianNB.__init__": {
  "data": {
   "lineno": 180
  },
  "type": "function"
 },
 "sklearn.naive_bayes.GaussianNB._check_X": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "check_array"
   ]
  },
  "type": "function"
 },
 "sklearn.naive_bayes.GaussianNB._joint_log_likelihood": {
  "data": {
   "lineno": 448,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.log",
    "numpy.pi",
    "numpy.size",
    "numpy.sum",
    "range"
   ]
  },
  "type": "function"
 },
 "sklearn.naive_bayes.GaussianNB._partial_fit": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": [
    "ValueError",
    "_check_partial_fit_first_call",
    "_check_sample_weight",
    "check_X_y",
    "len",
    "numpy.all",
    "numpy.asarray",
    "numpy.float64",
    "numpy.in1d",
    "numpy.isclose",
    "numpy.unique",
    "numpy.var",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "sklearn.naive_bayes.GaussianNB._update_mean_variance": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "float",
    "numpy.average",
    "numpy.mean",
    "numpy.var",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "sklearn.naive_bayes.GaussianNB.fit": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "column_or_1d",
    "numpy.unique"
   ]
  },
  "type": "function"
 },
 "sklearn.naive_bayes.GaussianNB.partial_fit": {
  "data": {
   "lineno": 289
  },
  "type": "function"
 },
 "sklearn.naive_bayes.MultinomialNB": {
  "data": {
   "lineno": 669,
   "symbols_in_volume": [
    "sklearn.naive_bayes._BaseDiscreteNB"
   ]
  },
  "type": "class"
 },
 "sklearn.naive_bayes.MultinomialNB.__init__": {
  "data": {
   "lineno": 760
  },
  "type": "function"
 },
 "sklearn.naive_bayes.MultinomialNB._count": {
  "data": {
   "lineno": 769,
   "symbols_in_volume": [
    "check_non_negative",
    "safe_sparse_dot"
   ]
  },
  "type": "function"
 },
 "sklearn.naive_bayes.MultinomialNB._joint_log_likelihood": {
  "data": {
   "lineno": 783,
   "symbols_in_volume": [
    "safe_sparse_dot"
   ]
  },
  "type": "function"
 },
 "sklearn.naive_bayes.MultinomialNB._more_tags": {
  "data": {
   "lineno": 766
  },
  "type": "function"
 },
 "sklearn.naive_bayes.MultinomialNB._update_feature_log_prob": {
  "data": {
   "lineno": 775,
   "symbols_in_volume": [
    "numpy.log"
   ]
  },
  "type": "function"
 },
 "sklearn.naive_bayes._ALPHA_MIN": {
  "data": {
   "lineno": 461
  },
  "type": "constant"
 },
 "sklearn.naive_bayes._BaseDiscreteNB": {
  "data": {
   "lineno": 464,
   "symbols_in_volume": [
    "sklearn.naive_bayes._BaseNB"
   ]
  },
  "type": "class"
 },
 "sklearn.naive_bayes._BaseDiscreteNB._check_X": {
  "data": {
   "lineno": 473,
   "symbols_in_volume": [
    "check_array"
   ]
  },
  "type": "function"
 },
 "sklearn.naive_bayes._BaseDiscreteNB._check_X_y": {
  "data": {
   "lineno": 476
  },
  "type": "function"
 },
 "sklearn.naive_bayes._BaseDiscreteNB._check_alpha": {
  "data": {
   "lineno": 499,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "numpy.maximum",
    "numpy.min",
    "numpy.ndarray",
    "sklearn.naive_bayes._ALPHA_MIN",
    "sklearn.naive_bayes.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.naive_bayes._BaseDiscreteNB._init_counters": {
  "data": {
   "lineno": 644,
   "symbols_in_volume": [
    "numpy.float64",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "sklearn.naive_bayes._BaseDiscreteNB._more_tags": {
  "data": {
   "lineno": 665
  },
  "type": "function"
 },
 "sklearn.naive_bayes._BaseDiscreteNB._update_class_log_prior": {
  "data": {
   "lineno": 479,
   "symbols_in_volume": [
    "RuntimeWarning",
    "ValueError",
    "len",
    "numpy.full",
    "numpy.log",
    "sklearn.naive_bayes.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.naive_bayes._BaseDiscreteNB.coef_": {
  "data": {
   "lineno": 650,
   "symbols_in_volume": [
    "deprecated",
    "len",
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.naive_bayes._BaseDiscreteNB.fit": {
  "data": {
   "lineno": 593,
   "symbols_in_volume": [
    "LabelBinarizer",
    "_check_sample_weight",
    "numpy.atleast_2d",
    "numpy.concatenate",
    "numpy.float64"
   ]
  },
  "type": "function"
 },
 "sklearn.naive_bayes._BaseDiscreteNB.intercept_": {
  "data": {
   "lineno": 658,
   "symbols_in_volume": [
    "deprecated",
    "len",
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.naive_bayes._BaseDiscreteNB.partial_fit": {
  "data": {
   "lineno": 513,
   "symbols_in_volume": [
    "ValueError",
    "_check_partial_fit_first_call",
    "_check_sample_weight",
    "label_binarize",
    "len",
    "numpy.atleast_2d",
    "numpy.concatenate",
    "numpy.float64"
   ]
  },
  "type": "function"
 },
 "sklearn.naive_bayes._BaseNB": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "abc.ABCMeta"
   ]
  },
  "type": "class"
 },
 "sklearn.naive_bayes._BaseNB._check_X": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "sklearn.naive_bayes._BaseNB._joint_log_likelihood": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "sklearn.naive_bayes._BaseNB.predict": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "check_is_fitted",
    "numpy.argmax"
   ]
  },
  "type": "function"
 },
 "sklearn.naive_bayes._BaseNB.predict_log_proba": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "check_is_fitted",
    "numpy.atleast_2d",
    "scipy.special.logsumexp"
   ]
  },
  "type": "function"
 },
 "sklearn.naive_bayes._BaseNB.predict_proba": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "numpy.exp"
   ]
  },
  "type": "function"
 },
 "sklearn.naive_bayes.__all__": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "sklearn.naive_bayes.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "sklearn.naive_bayes.logsumexp": {
  "data": {
   "shadows": "scipy.special.logsumexp"
  },
  "type": "import"
 },
 "sklearn.naive_bayes.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.naive_bayes.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.neighbors": {
  "data": {},
  "type": "module"
 },
 "sklearn.neighbors.__all__": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "sklearn.neighbors._base": {
  "data": {
   "symbols_in_volume": [
    "dict",
    "list"
   ]
  },
  "type": "module"
 },
 "sklearn.neighbors._base.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "sklearn.neighbors._base.KNeighborsMixin": {
  "data": {
   "lineno": 550
  },
  "type": "class"
 },
 "sklearn.neighbors._base.KNeighborsMixin._kneighbors_reduce_func": {
  "data": {
   "lineno": 553,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.argpartition",
    "numpy.argsort",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors._base.KNeighborsMixin.kneighbors": {
  "data": {
   "lineno": 596,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "check_array",
    "check_is_fitted",
    "delayed",
    "functools.partial",
    "gen_even_slices",
    "isinstance",
    "joblib.Parallel",
    "joblib.effective_n_jobs",
    "list",
    "numpy.all",
    "numpy.arange",
    "numpy.reshape",
    "numpy.vstack",
    "pairwise_distances_chunked",
    "parse_version",
    "scipy.sparse.issparse",
    "sklearn.neighbors._base._check_precomputed",
    "sklearn.neighbors._base._kneighbors_from_graph",
    "sklearn.neighbors._base._tree_query_parallel_helper",
    "sklearn.neighbors._base.joblib",
    "sklearn.neighbors._base.numbers",
    "type",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors._base.KNeighborsMixin.kneighbors_graph": {
  "data": {
   "lineno": 767,
   "symbols_in_volume": [
    "ValueError",
    "check_is_fitted",
    "numpy.arange",
    "numpy.ones",
    "numpy.ravel",
    "scipy.sparse.csr_matrix"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors._base.NeighborsBase": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": [
    "abc.ABCMeta"
   ]
  },
  "type": "class"
 },
 "sklearn.neighbors._base.NeighborsBase.__init__": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors._base.NeighborsBase._check_algorithm_metric": {
  "data": {
   "lineno": 317,
   "symbols_in_volume": [
    "SyntaxWarning",
    "ValueError",
    "callable",
    "sklearn.neighbors._base.VALID_METRICS",
    "sklearn.neighbors._base.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors._base.NeighborsBase._fit": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": [
    "BallTree",
    "KDTree",
    "TypeError",
    "ValueError",
    "callable",
    "check_classification_targets",
    "int",
    "is_classifier",
    "isinstance",
    "numpy.empty",
    "numpy.inf",
    "numpy.unique",
    "range",
    "scipy.sparse.issparse",
    "sklearn.neighbors._base.NeighborsBase",
    "sklearn.neighbors._base.VALID_METRICS",
    "sklearn.neighbors._base.VALID_METRICS_SPARSE",
    "sklearn.neighbors._base._check_precomputed",
    "sklearn.neighbors._base.numbers",
    "sklearn.neighbors._base.warnings",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors._base.NeighborsBase._more_tags": {
  "data": {
   "lineno": 527
  },
  "type": "function"
 },
 "sklearn.neighbors._base.NeighborsBase._pairwise": {
  "data": {
   "lineno": 533,
   "symbols_in_volume": [
    "deprecated",
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors._base.Parallel": {
  "data": {
   "shadows": "joblib.Parallel"
  },
  "type": "import"
 },
 "sklearn.neighbors._base.RadiusNeighborsMixin": {
  "data": {
   "lineno": 858
  },
  "type": "class"
 },
 "sklearn.neighbors._base.RadiusNeighborsMixin._radius_neighbors_reduce_func": {
  "data": {
   "lineno": 861,
   "symbols_in_volume": [
    "enumerate",
    "numpy.sqrt",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors._base.RadiusNeighborsMixin.radius_neighbors": {
  "data": {
   "lineno": 903,
   "symbols_in_volume": [
    "ValueError",
    "_to_object_array",
    "check_array",
    "check_is_fitted",
    "delayed",
    "delayed_query",
    "enumerate",
    "functools.partial",
    "gen_even_slices",
    "joblib.Parallel",
    "joblib.effective_n_jobs",
    "len",
    "numpy.argsort",
    "numpy.hstack",
    "pairwise_distances_chunked",
    "parse_version",
    "range",
    "scipy.sparse.issparse",
    "sklearn.neighbors._base._check_precomputed",
    "sklearn.neighbors._base._radius_neighbors_from_graph",
    "sklearn.neighbors._base._tree_query_radius_parallel_helper",
    "sklearn.neighbors._base.joblib",
    "sum",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors._base.RadiusNeighborsMixin.radius_neighbors_graph": {
  "data": {
   "lineno": 1085,
   "symbols_in_volume": [
    "ValueError",
    "check_is_fitted",
    "int",
    "len",
    "list",
    "numpy.array",
    "numpy.concatenate",
    "numpy.cumsum",
    "numpy.ones",
    "numpy.zeros",
    "scipy.sparse.csr_matrix"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors._base.VALID_METRICS": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "sklearn.neighbors._base.VALID_METRICS_SPARSE": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "sklearn.neighbors._base._check_precomputed": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "TypeError",
    "check_array",
    "check_non_negative",
    "numpy.arange",
    "numpy.argsort",
    "numpy.diff",
    "scipy.sparse.issparse",
    "sklearn.neighbors._base._is_sorted_by_data",
    "sklearn.neighbors._base.warnings",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors._base._check_weights": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "ValueError",
    "callable"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors._base._get_weights": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "ValueError",
    "callable",
    "enumerate",
    "hasattr",
    "numpy.any",
    "numpy.dtype",
    "numpy.errstate",
    "numpy.isinf",
    "object",
    "weights"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors._base._is_sorted_by_data": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "numpy.unique"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors._base._kneighbors_from_graph": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "ValueError",
    "extract",
    "numpy.diff"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors._base._kneighbors_from_graph.extract": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.tile"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors._base._radius_neighbors_from_graph": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "_to_object_array",
    "bool",
    "numpy.compress",
    "numpy.concatenate",
    "numpy.cumsum",
    "numpy.intp",
    "numpy.split"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors._base._tree_query_parallel_helper": {
  "data": {
   "lineno": 541
  },
  "type": "function"
 },
 "sklearn.neighbors._base._tree_query_radius_parallel_helper": {
  "data": {
   "lineno": 849
  },
  "type": "function"
 },
 "sklearn.neighbors._base.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "sklearn.neighbors._base.csr_matrix": {
  "data": {
   "shadows": "scipy.sparse.csr_matrix"
  },
  "type": "import"
 },
 "sklearn.neighbors._base.effective_n_jobs": {
  "data": {
   "shadows": "joblib.effective_n_jobs"
  },
  "type": "import"
 },
 "sklearn.neighbors._base.issparse": {
  "data": {
   "shadows": "scipy.sparse.issparse"
  },
  "type": "import"
 },
 "sklearn.neighbors._base.joblib": {
  "data": {
   "shadows": "joblib"
  },
  "type": "import"
 },
 "sklearn.neighbors._base.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.neighbors._base.numbers": {
  "data": {
   "shadows": "numbers"
  },
  "type": "import"
 },
 "sklearn.neighbors._base.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "sklearn.neighbors._base.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.neighbors._classification": {
  "data": {},
  "type": "module"
 },
 "sklearn.neighbors._classification.KNeighborsClassifier": {
  "data": {
   "lineno": 24
  },
  "type": "class"
 },
 "sklearn.neighbors._classification.KNeighborsClassifier.__init__": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "_check_weights",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors._classification.KNeighborsClassifier.fit": {
  "data": {
   "lineno": 161
  },
  "type": "function"
 },
 "sklearn.neighbors._classification.KNeighborsClassifier.predict": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "_get_weights",
    "_num_samples",
    "check_array",
    "enumerate",
    "len",
    "numpy.asarray",
    "numpy.empty",
    "numpy.intp",
    "scipy.stats.mode",
    "weighted_mode"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors._classification.KNeighborsClassifier.predict_proba": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "_get_weights",
    "_num_samples",
    "check_array",
    "enumerate",
    "numpy.arange",
    "numpy.newaxis",
    "numpy.ones_like",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors._classification.RadiusNeighborsClassifier": {
  "data": {
   "lineno": 278
  },
  "type": "class"
 },
 "sklearn.neighbors._classification.RadiusNeighborsClassifier.__init__": {
  "data": {
   "lineno": 409,
   "symbols_in_volume": [
    "_check_weights",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors._classification.RadiusNeighborsClassifier.fit": {
  "data": {
   "lineno": 423,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "_is_arraylike",
    "enumerate",
    "isinstance",
    "len",
    "numpy.append",
    "numpy.bincount",
    "str",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors._classification.RadiusNeighborsClassifier.predict": {
  "data": {
   "lineno": 489,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "numpy.empty",
    "numpy.flatnonzero"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors._classification.RadiusNeighborsClassifier.predict_proba": {
  "data": {
   "lineno": 531,
   "symbols_in_volume": [
    "ValueError",
    "_get_weights",
    "_num_samples",
    "bool",
    "check_array",
    "enumerate",
    "len",
    "numpy.bincount",
    "numpy.flatnonzero",
    "numpy.newaxis",
    "numpy.zeros",
    "object",
    "sklearn.neighbors._classification.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors._classification.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.neighbors._classification.stats": {
  "data": {
   "shadows": "scipy.stats"
  },
  "type": "import"
 },
 "sklearn.neighbors._classification.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.neighbors._graph": {
  "data": {},
  "type": "module"
 },
 "sklearn.neighbors._graph.KNeighborsTransformer": {
  "data": {
   "lineno": 197
  },
  "type": "class"
 },
 "sklearn.neighbors._graph.KNeighborsTransformer.__init__": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "sklearn.neighbors._graph.KNeighborsTransformer",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors._graph.KNeighborsTransformer._more_tags": {
  "data": {
   "lineno": 373
  },
  "type": "function"
 },
 "sklearn.neighbors._graph.KNeighborsTransformer.fit": {
  "data": {
   "lineno": 313
  },
  "type": "function"
 },
 "sklearn.neighbors._graph.KNeighborsTransformer.fit_transform": {
  "data": {
   "lineno": 350
  },
  "type": "function"
 },
 "sklearn.neighbors._graph.KNeighborsTransformer.transform": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": [
    "check_is_fitted"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors._graph.RadiusNeighborsTransformer": {
  "data": {
   "lineno": 382
  },
  "type": "class"
 },
 "sklearn.neighbors._graph.RadiusNeighborsTransformer.__init__": {
  "data": {
   "lineno": 486,
   "symbols_in_volume": [
    "sklearn.neighbors._graph.RadiusNeighborsTransformer",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors._graph.RadiusNeighborsTransformer._more_tags": {
  "data": {
   "lineno": 555
  },
  "type": "function"
 },
 "sklearn.neighbors._graph.RadiusNeighborsTransformer.fit": {
  "data": {
   "lineno": 496
  },
  "type": "function"
 },
 "sklearn.neighbors._graph.RadiusNeighborsTransformer.fit_transform": {
  "data": {
   "lineno": 532
  },
  "type": "function"
 },
 "sklearn.neighbors._graph.RadiusNeighborsTransformer.transform": {
  "data": {
   "lineno": 512,
   "symbols_in_volume": [
    "check_is_fitted"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors._graph._check_params": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "ValueError",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors._graph._query_include_self": {
  "data": {
   "lineno": 27
  },
  "type": "function"
 },
 "sklearn.neighbors._graph.kneighbors_graph": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "NearestNeighbors",
    "isinstance",
    "sklearn.neighbors._graph._check_params",
    "sklearn.neighbors._graph._query_include_self"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors._graph.radius_neighbors_graph": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "NearestNeighbors",
    "isinstance",
    "sklearn.neighbors._graph._check_params",
    "sklearn.neighbors._graph._query_include_self"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors._kde": {
  "data": {},
  "type": "module"
 },
 "sklearn.neighbors._kde.KernelDensity": {
  "data": {
   "lineno": 27
  },
  "type": "class"
 },
 "sklearn.neighbors._kde.KernelDensity.__init__": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.neighbors._kde.VALID_KERNELS"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors._kde.KernelDensity._choose_algorithm": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.neighbors._kde.TREE_DICT"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors._kde.KernelDensity._more_tags": {
  "data": {
   "lineno": 285
  },
  "type": "function"
 },
 "sklearn.neighbors._kde.KernelDensity.fit": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "ValueError",
    "_check_sample_weight",
    "sklearn.neighbors._kde.TREE_DICT"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors._kde.KernelDensity.sample": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "NotImplementedError",
    "check_is_fitted",
    "check_random_state",
    "numpy.asarray",
    "numpy.atleast_2d",
    "numpy.cumsum",
    "numpy.int64",
    "numpy.newaxis",
    "numpy.searchsorted",
    "numpy.sqrt",
    "row_norms",
    "scipy.special.gammainc"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors._kde.KernelDensity.score": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors._kde.KernelDensity.score_samples": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "check_array",
    "check_is_fitted",
    "numpy.log"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors._kde.TREE_DICT": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "sklearn.neighbors._kde.VALID_KERNELS": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "sklearn.neighbors._kde.gammainc": {
  "data": {
   "shadows": "scipy.special.gammainc"
  },
  "type": "import"
 },
 "sklearn.neighbors._kde.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.neighbors._lof": {
  "data": {},
  "type": "module"
 },
 "sklearn.neighbors._lof.LocalOutlierFactor": {
  "data": {
   "lineno": 19
  },
  "type": "class"
 },
 "sklearn.neighbors._lof.LocalOutlierFactor.__init__": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors._lof.LocalOutlierFactor._decision_function": {
  "data": {
   "lineno": 395
  },
  "type": "function"
 },
 "sklearn.neighbors._lof.LocalOutlierFactor._fit_predict": {
  "data": {
   "lineno": 225
  },
  "type": "function"
 },
 "sklearn.neighbors._lof.LocalOutlierFactor._local_reachability_density": {
  "data": {
   "lineno": 500,
   "symbols_in_volume": [
    "numpy.maximum",
    "numpy.mean"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors._lof.LocalOutlierFactor._predict": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": [
    "check_array",
    "check_is_fitted",
    "int",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors._lof.LocalOutlierFactor._score_samples": {
  "data": {
   "lineno": 460,
   "symbols_in_volume": [
    "check_array",
    "check_is_fitted",
    "numpy.mean",
    "numpy.newaxis"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors._lof.LocalOutlierFactor.decision_function": {
  "data": {
   "lineno": 358,
   "symbols_in_volume": [
    "AttributeError",
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors._lof.LocalOutlierFactor.fit": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "ValueError",
    "max",
    "min",
    "numpy.mean",
    "numpy.newaxis",
    "numpy.percentile",
    "sklearn.neighbors._lof.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors._lof.LocalOutlierFactor.fit_predict": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "AttributeError",
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors._lof.LocalOutlierFactor.predict": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "AttributeError",
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors._lof.LocalOutlierFactor.score_samples": {
  "data": {
   "lineno": 423,
   "symbols_in_volume": [
    "AttributeError",
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors._lof.__all__": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "sklearn.neighbors._lof.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.neighbors._lof.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.neighbors._nca": {
  "data": {},
  "type": "module"
 },
 "sklearn.neighbors._nca.NeighborhoodComponentsAnalysis": {
  "data": {
   "lineno": 30
  },
  "type": "class"
 },
 "sklearn.neighbors._nca.NeighborhoodComponentsAnalysis.__init__": {
  "data": {
   "lineno": 165
  },
  "type": "function"
 },
 "sklearn.neighbors._nca.NeighborhoodComponentsAnalysis._callback": {
  "data": {
   "lineno": 445
  },
  "type": "function"
 },
 "sklearn.neighbors._nca.NeighborhoodComponentsAnalysis._initialize": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": [
    "LinearDiscriminantAnalysis",
    "PCA",
    "hasattr",
    "isinstance",
    "len",
    "min",
    "numpy.eye",
    "numpy.ndarray",
    "numpy.unique",
    "print",
    "sklearn.neighbors._nca.sys",
    "sklearn.neighbors._nca.time"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors._nca.NeighborhoodComponentsAnalysis._loss_grad_lbfgs": {
  "data": {
   "lineno": 458,
   "symbols_in_volume": [
    "len",
    "numpy.dot",
    "numpy.fill_diagonal",
    "numpy.inf",
    "numpy.sum",
    "pairwise_distances",
    "print",
    "sklearn.neighbors._nca.sys",
    "sklearn.neighbors._nca.time",
    "softmax"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors._nca.NeighborhoodComponentsAnalysis._more_tags": {
  "data": {
   "lineno": 526
  },
  "type": "function"
 },
 "sklearn.neighbors._nca.NeighborhoodComponentsAnalysis._validate_params": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "LabelEncoder",
    "ValueError",
    "bool",
    "callable",
    "check_array",
    "check_classification_targets",
    "check_scalar",
    "hasattr",
    "isinstance",
    "numpy.ndarray",
    "sklearn.neighbors._nca.numbers"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors._nca.NeighborhoodComponentsAnalysis.fit": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "check_random_state",
    "dict",
    "numpy.newaxis",
    "print",
    "scipy.optimize.minimize",
    "sklearn.neighbors._nca.time",
    "warnings.warn"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors._nca.NeighborhoodComponentsAnalysis.transform": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "check_array",
    "check_is_fitted",
    "numpy.dot"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors._nca.minimize": {
  "data": {
   "shadows": "scipy.optimize.minimize"
  },
  "type": "import"
 },
 "sklearn.neighbors._nca.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.neighbors._nca.numbers": {
  "data": {
   "shadows": "numbers"
  },
  "type": "import"
 },
 "sklearn.neighbors._nca.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "sklearn.neighbors._nca.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "sklearn.neighbors._nca.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "sklearn.neighbors._nca.warn": {
  "data": {
   "shadows": "warnings.warn"
  },
  "type": "import"
 },
 "sklearn.neighbors._nearest_centroid": {
  "data": {},
  "type": "module"
 },
 "sklearn.neighbors._nearest_centroid.NearestCentroid": {
  "data": {
   "lineno": 24
  },
  "type": "class"
 },
 "sklearn.neighbors._nearest_centroid.NearestCentroid.__init__": {
  "data": {
   "lineno": 89
  },
  "type": "function"
 },
 "sklearn.neighbors._nearest_centroid.NearestCentroid.fit": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "LabelEncoder",
    "ValueError",
    "check_classification_targets",
    "csc_median_axis_0",
    "len",
    "numpy.abs",
    "numpy.all",
    "numpy.clip",
    "numpy.empty",
    "numpy.float64",
    "numpy.mean",
    "numpy.median",
    "numpy.newaxis",
    "numpy.ptp",
    "numpy.sign",
    "numpy.sqrt",
    "numpy.sum",
    "numpy.where",
    "numpy.zeros",
    "range",
    "scipy.sparse.issparse",
    "sklearn.neighbors._nearest_centroid.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors._nearest_centroid.NearestCentroid.predict": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "check_array",
    "check_is_fitted",
    "pairwise_distances"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors._nearest_centroid.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.neighbors._nearest_centroid.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.neighbors._nearest_centroid.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.neighbors._regression": {
  "data": {},
  "type": "module"
 },
 "sklearn.neighbors._regression.KNeighborsRegressor": {
  "data": {
   "lineno": 25
  },
  "type": "class"
 },
 "sklearn.neighbors._regression.KNeighborsRegressor.__init__": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "_check_weights",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors._regression.KNeighborsRegressor._more_tags": {
  "data": {
   "lineno": 159
  },
  "type": "function"
 },
 "sklearn.neighbors._regression.KNeighborsRegressor._pairwise": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "deprecated",
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors._regression.KNeighborsRegressor.fit": {
  "data": {
   "lineno": 172
  },
  "type": "function"
 },
 "sklearn.neighbors._regression.KNeighborsRegressor.predict": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "_get_weights",
    "check_array",
    "numpy.empty",
    "numpy.float64",
    "numpy.mean",
    "numpy.sum",
    "range"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors._regression.RadiusNeighborsRegressor": {
  "data": {
   "lineno": 232
  },
  "type": "class"
 },
 "sklearn.neighbors._regression.RadiusNeighborsRegressor.__init__": {
  "data": {
   "lineno": 347,
   "symbols_in_volume": [
    "_check_weights",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors._regression.RadiusNeighborsRegressor.fit": {
  "data": {
   "lineno": 360
  },
  "type": "function"
 },
 "sklearn.neighbors._regression.RadiusNeighborsRegressor.predict": {
  "data": {
   "lineno": 380,
   "symbols_in_volume": [
    "_get_weights",
    "check_array",
    "enumerate",
    "len",
    "numpy.any",
    "numpy.array",
    "numpy.average",
    "numpy.full_like",
    "numpy.isnan",
    "numpy.mean",
    "numpy.nan",
    "sklearn.neighbors._regression.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors._regression.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.neighbors._regression.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.neighbors._unsupervised": {
  "data": {},
  "type": "module"
 },
 "sklearn.neighbors._unsupervised.NearestNeighbors": {
  "data": {
   "lineno": 8
  },
  "type": "class"
 },
 "sklearn.neighbors._unsupervised.NearestNeighbors.__init__": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors._unsupervised.NearestNeighbors.fit": {
  "data": {
   "lineno": 125
  },
  "type": "function"
 },
 "sklearn.neighbors.setup": {
  "data": {},
  "type": "module"
 },
 "sklearn.neighbors.setup.Configuration": {
  "data": {
   "shadows": "numpy.distutils.misc_util.Configuration"
  },
  "type": "import"
 },
 "sklearn.neighbors.setup.configuration": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "numpy.distutils.misc_util.Configuration",
    "sklearn.neighbors.setup.numpy",
    "sklearn.neighbors.setup.os"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.setup.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.neighbors.setup.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests": {
  "data": {},
  "type": "module"
 },
 "sklearn.neighbors.tests.test_ball_tree": {
  "data": {
   "symbols_in_volume": [
    "dict",
    "numpy.dot",
    "numpy.random.RandomState",
    "sklearn.neighbors.tests.test_ball_tree.DIMENSION",
    "sklearn.neighbors.tests.test_ball_tree.V_mahalanobis",
    "sklearn.neighbors.tests.test_ball_tree.rng"
   ]
  },
  "type": "module"
 },
 "sklearn.neighbors.tests.test_ball_tree.BOOLEAN_METRICS": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "sklearn.neighbors.tests.test_ball_tree.BallTree": {
  "data": {
   "shadows": "sklearn.neighbors._ball_tree.BallTree"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_ball_tree.DIMENSION": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "sklearn.neighbors.tests.test_ball_tree.DISCRETE_METRICS": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "sklearn.neighbors.tests.test_ball_tree.DistanceMetric": {
  "data": {
   "shadows": "sklearn.neighbors.DistanceMetric"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_ball_tree.METRICS": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "sklearn.neighbors.tests.test_ball_tree.V_mahalanobis": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "sklearn.neighbors.tests.test_ball_tree._convert_container": {
  "data": {
   "shadows": "sklearn.utils._testing._convert_container"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_ball_tree.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_ball_tree.brute_force_neighbors": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.argsort",
    "sklearn.neighbors.DistanceMetric.get_metric",
    "sklearn.utils.validation.check_array"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_ball_tree.check_array": {
  "data": {
   "shadows": "sklearn.utils.validation.check_array"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_ball_tree.check_random_state": {
  "data": {
   "shadows": "sklearn.utils.check_random_state"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_ball_tree.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_ball_tree.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_ball_tree.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_ball_tree.rng": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "sklearn.neighbors.tests.test_ball_tree.test_array_object_type": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "object",
    "sklearn.neighbors._ball_tree.BallTree",
    "sklearn.neighbors.tests.test_ball_tree.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query_metrics": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "numpy.testing.assert_array_almost_equal",
    "sklearn.neighbors._ball_tree.BallTree",
    "sklearn.neighbors.tests.test_ball_tree.BOOLEAN_METRICS",
    "sklearn.neighbors.tests.test_ball_tree.DISCRETE_METRICS",
    "sklearn.neighbors.tests.test_ball_tree.brute_force_neighbors",
    "sklearn.neighbors.tests.test_ball_tree.itertools",
    "sklearn.neighbors.tests.test_ball_tree.pytest",
    "sklearn.neighbors.tests.test_ball_tree.rng",
    "sklearn.utils._testing._convert_container",
    "sklearn.utils.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_ball_tree.test_query_haversine": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "numpy.pi",
    "numpy.testing.assert_array_almost_equal",
    "sklearn.neighbors._ball_tree.BallTree",
    "sklearn.neighbors.tests.test_ball_tree.brute_force_neighbors",
    "sklearn.neighbors.tests.test_ball_tree.rng",
    "sklearn.utils.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_dist_metrics": {
  "data": {
   "symbols_in_volume": [
    "dict",
    "numpy.dot",
    "sklearn.neighbors.tests.test_dist_metrics.V",
    "sklearn.neighbors.tests.test_dist_metrics.VI",
    "sklearn.neighbors.tests.test_dist_metrics.X1",
    "sklearn.neighbors.tests.test_dist_metrics.X2",
    "sklearn.neighbors.tests.test_dist_metrics.d",
    "sklearn.neighbors.tests.test_dist_metrics.n1",
    "sklearn.neighbors.tests.test_dist_metrics.n2",
    "sklearn.neighbors.tests.test_dist_metrics.rng",
    "sklearn.utils.check_random_state"
   ]
  },
  "type": "module"
 },
 "sklearn.neighbors.tests.test_dist_metrics.BOOL_METRICS": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "sklearn.neighbors.tests.test_dist_metrics.BallTree": {
  "data": {
   "shadows": "sklearn.neighbors.BallTree"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_dist_metrics.DistanceMetric": {
  "data": {
   "shadows": "sklearn.neighbors.DistanceMetric"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_dist_metrics.METRICS_DEFAULT_PARAMS": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "sklearn.neighbors.tests.test_dist_metrics.V": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "sklearn.neighbors.tests.test_dist_metrics.VI": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "sklearn.neighbors.tests.test_dist_metrics.X1": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "sklearn.neighbors.tests.test_dist_metrics.X1_bool": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "sklearn.neighbors.tests.test_dist_metrics.X2": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "sklearn.neighbors.tests.test_dist_metrics.X2_bool": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "sklearn.neighbors.tests.test_dist_metrics.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_dist_metrics.assert_raises_regex": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_raises_regex"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_dist_metrics.cdist": {
  "data": {
   "shadows": "scipy.spatial.distance.cdist"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_dist_metrics.check_cdist": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "numpy.testing.assert_array_almost_equal",
    "sklearn.neighbors.DistanceMetric.get_metric",
    "sklearn.neighbors.tests.test_dist_metrics.X1",
    "sklearn.neighbors.tests.test_dist_metrics.X2"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_dist_metrics.check_cdist_bool": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "numpy.testing.assert_array_almost_equal",
    "sklearn.neighbors.DistanceMetric.get_metric",
    "sklearn.neighbors.tests.test_dist_metrics.X1_bool",
    "sklearn.neighbors.tests.test_dist_metrics.X2_bool"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_dist_metrics.check_pdist": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "numpy.testing.assert_array_almost_equal",
    "sklearn.neighbors.DistanceMetric.get_metric",
    "sklearn.neighbors.tests.test_dist_metrics.X1"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_dist_metrics.check_pdist_bool": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "numpy.isnan",
    "numpy.testing.assert_array_almost_equal",
    "sklearn.neighbors.DistanceMetric.get_metric",
    "sklearn.neighbors.tests.test_dist_metrics.X1_bool",
    "sklearn.utils.fixes.parse_version",
    "sklearn.utils.fixes.sp_version"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_dist_metrics.check_pickle": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "numpy.testing.assert_array_almost_equal",
    "sklearn.neighbors.DistanceMetric.get_metric",
    "sklearn.neighbors.tests.test_dist_metrics.X1",
    "sklearn.neighbors.tests.test_dist_metrics.pickle"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_dist_metrics.check_random_state": {
  "data": {
   "shadows": "sklearn.utils.check_random_state"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_dist_metrics.d": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "sklearn.neighbors.tests.test_dist_metrics.dist_func": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_dist_metrics.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_dist_metrics.n1": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "sklearn.neighbors.tests.test_dist_metrics.n2": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "sklearn.neighbors.tests.test_dist_metrics.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_dist_metrics.parse_version": {
  "data": {
   "shadows": "sklearn.utils.fixes.parse_version"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_dist_metrics.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_dist_metrics.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_dist_metrics.rng": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "sklearn.neighbors.tests.test_dist_metrics.sp_version": {
  "data": {
   "shadows": "sklearn.utils.fixes.sp_version"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_dist_metrics.test_bad_pyfunc_metric": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "TypeError",
    "numpy.ones",
    "sklearn.neighbors.BallTree",
    "sklearn.utils._testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_dist_metrics.test_bad_pyfunc_metric.wrong_distance": {
  "data": {
   "lineno": 182
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_dist_metrics.test_cdist": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "dict",
    "scipy.spatial.distance.cdist",
    "sklearn.neighbors.tests.test_dist_metrics.METRICS_DEFAULT_PARAMS",
    "sklearn.neighbors.tests.test_dist_metrics.X1",
    "sklearn.neighbors.tests.test_dist_metrics.X2",
    "sklearn.neighbors.tests.test_dist_metrics.check_cdist",
    "sklearn.neighbors.tests.test_dist_metrics.itertools",
    "sklearn.neighbors.tests.test_dist_metrics.pytest",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_dist_metrics.test_cdist_bool_metric": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "scipy.spatial.distance.cdist",
    "sklearn.neighbors.tests.test_dist_metrics.BOOL_METRICS",
    "sklearn.neighbors.tests.test_dist_metrics.X1_bool",
    "sklearn.neighbors.tests.test_dist_metrics.X2_bool",
    "sklearn.neighbors.tests.test_dist_metrics.check_cdist_bool",
    "sklearn.neighbors.tests.test_dist_metrics.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_dist_metrics.test_haversine_metric": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "enumerate",
    "haversine_slow",
    "numpy.random.random",
    "numpy.sin",
    "numpy.testing.assert_array_almost_equal",
    "numpy.zeros_like",
    "sklearn.neighbors.DistanceMetric.get_metric"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_dist_metrics.test_haversine_metric.haversine_slow": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "numpy.arcsin",
    "numpy.cos",
    "numpy.sin",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_dist_metrics.test_input_data_size": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "numpy.testing.assert_array_almost_equal",
    "sklearn.neighbors.DistanceMetric.get_metric",
    "sklearn.neighbors.tests.test_dist_metrics.rng",
    "sklearn.utils.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_dist_metrics.test_input_data_size.custom_metric": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_dist_metrics.test_pdist": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "dict",
    "scipy.spatial.distance.cdist",
    "sklearn.neighbors.tests.test_dist_metrics.METRICS_DEFAULT_PARAMS",
    "sklearn.neighbors.tests.test_dist_metrics.X1",
    "sklearn.neighbors.tests.test_dist_metrics.check_pdist",
    "sklearn.neighbors.tests.test_dist_metrics.itertools",
    "sklearn.neighbors.tests.test_dist_metrics.pytest",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_dist_metrics.test_pdist_bool_metrics": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "scipy.spatial.distance.cdist",
    "sklearn.neighbors.tests.test_dist_metrics.BOOL_METRICS",
    "sklearn.neighbors.tests.test_dist_metrics.X1_bool",
    "sklearn.neighbors.tests.test_dist_metrics.check_pdist_bool",
    "sklearn.neighbors.tests.test_dist_metrics.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_dist_metrics.test_pickle": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "dict",
    "sklearn.neighbors.tests.test_dist_metrics.METRICS_DEFAULT_PARAMS",
    "sklearn.neighbors.tests.test_dist_metrics.check_pickle",
    "sklearn.neighbors.tests.test_dist_metrics.itertools",
    "sklearn.neighbors.tests.test_dist_metrics.pytest",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_dist_metrics.test_pickle_bool_metrics": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "numpy.testing.assert_array_almost_equal",
    "sklearn.neighbors.DistanceMetric.get_metric",
    "sklearn.neighbors.tests.test_dist_metrics.BOOL_METRICS",
    "sklearn.neighbors.tests.test_dist_metrics.X1_bool",
    "sklearn.neighbors.tests.test_dist_metrics.pickle",
    "sklearn.neighbors.tests.test_dist_metrics.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_dist_metrics.test_pyfunc_metric": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "numpy.random.random",
    "numpy.testing.assert_array_almost_equal",
    "sklearn.neighbors.DistanceMetric.get_metric",
    "sklearn.neighbors.tests.test_dist_metrics.dist_func",
    "sklearn.neighbors.tests.test_dist_metrics.pickle"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_graph": {
  "data": {},
  "type": "module"
 },
 "sklearn.neighbors.tests.test_graph.KNeighborsTransformer": {
  "data": {
   "shadows": "sklearn.neighbors.KNeighborsTransformer"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_graph.RadiusNeighborsTransformer": {
  "data": {
   "shadows": "sklearn.neighbors.RadiusNeighborsTransformer"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_graph._has_explicit_diagonal": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_graph._is_sorted_by_data": {
  "data": {
   "shadows": "sklearn.neighbors._base._is_sorted_by_data"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_graph.euclidean_distances": {
  "data": {
   "shadows": "sklearn.metrics.euclidean_distances"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_graph.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_graph.test_explicit_diagonal": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.random.RandomState",
    "sklearn.neighbors.KNeighborsTransformer",
    "sklearn.neighbors.tests.test_graph._has_explicit_diagonal"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_graph.test_transformer_result": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "numpy.percentile",
    "numpy.random.RandomState",
    "sklearn.metrics.euclidean_distances",
    "sklearn.neighbors.KNeighborsTransformer",
    "sklearn.neighbors.RadiusNeighborsTransformer",
    "sklearn.neighbors._base._is_sorted_by_data"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_kd_tree": {
  "data": {
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "module"
 },
 "sklearn.neighbors.tests.test_kd_tree.DIMENSION": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "sklearn.neighbors.tests.test_kd_tree.KDTree": {
  "data": {
   "shadows": "sklearn.neighbors._kd_tree.KDTree"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_kd_tree.METRICS": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "sklearn.neighbors.tests.test_kd_tree.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_kd_tree.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_kd_tree.test_array_object_type": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "object",
    "sklearn.neighbors._kd_tree.KDTree",
    "sklearn.neighbors.tests.test_kd_tree.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_kde": {
  "data": {},
  "type": "module"
 },
 "sklearn.neighbors.tests.test_kde.GridSearchCV": {
  "data": {
   "shadows": "sklearn.model_selection.GridSearchCV"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_kde.KDTree": {
  "data": {
   "shadows": "sklearn.neighbors.KDTree"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_kde.KernelDensity": {
  "data": {
   "shadows": "sklearn.neighbors.KernelDensity"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_kde.NearestNeighbors": {
  "data": {
   "shadows": "sklearn.neighbors.NearestNeighbors"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_kde.NotFittedError": {
  "data": {
   "shadows": "sklearn.exceptions.NotFittedError"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_kde.StandardScaler": {
  "data": {
   "shadows": "sklearn.preprocessing.StandardScaler"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_kde.assert_allclose": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_allclose"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_kde.assert_raises": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_kde.check_results": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "max",
    "numpy.exp",
    "numpy.prod",
    "sklearn.neighbors.KernelDensity",
    "sklearn.utils._testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_kde.compute_kernel_slow": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "ValueError",
    "numpy.cos",
    "numpy.exp",
    "numpy.pi",
    "numpy.sqrt",
    "sklearn.neighbors._ball_tree.kernel_norm"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_kde.joblib": {
  "data": {
   "shadows": "joblib"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_kde.kernel_norm": {
  "data": {
   "shadows": "sklearn.neighbors._ball_tree.kernel_norm"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_kde.make_blobs": {
  "data": {
   "shadows": "sklearn.datasets.make_blobs"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_kde.make_pipeline": {
  "data": {
   "shadows": "sklearn.pipeline.make_pipeline"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_kde.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_kde.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_kde.test_check_is_fitted": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "getattr",
    "numpy.random.RandomState",
    "sklearn.exceptions.NotFittedError",
    "sklearn.neighbors.KernelDensity",
    "sklearn.neighbors.tests.test_kde.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_kde.test_kde_algorithm_metric_choice": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "ValueError",
    "numpy.random.RandomState",
    "sklearn.neighbors.KDTree.valid_metrics",
    "sklearn.neighbors.KernelDensity",
    "sklearn.neighbors.tests.test_kde.pytest",
    "sklearn.utils._testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_kde.test_kde_badargs": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "ValueError",
    "numpy.random.random",
    "sklearn.neighbors.KernelDensity",
    "sklearn.utils._testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_kde.test_kde_pipeline_gridsearch": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "dict",
    "sklearn.datasets.make_blobs",
    "sklearn.model_selection.GridSearchCV",
    "sklearn.neighbors.KernelDensity",
    "sklearn.pipeline.make_pipeline",
    "sklearn.preprocessing.StandardScaler"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_kde.test_kde_sample_weights": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.full",
    "numpy.int8",
    "numpy.max",
    "numpy.random.RandomState",
    "numpy.repeat",
    "sklearn.neighbors.KDTree.valid_metrics",
    "sklearn.neighbors.KernelDensity",
    "sklearn.utils._testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_kde.test_kde_score": {
  "data": {
   "lineno": 123
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_kde.test_kernel_density": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.neighbors.tests.test_kde.check_results",
    "sklearn.neighbors.tests.test_kde.compute_kernel_slow",
    "sklearn.neighbors.tests.test_kde.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_kde.test_kernel_density_sampling": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "NotImplementedError",
    "numpy.all",
    "numpy.random.RandomState",
    "sklearn.neighbors.KernelDensity",
    "sklearn.neighbors.NearestNeighbors",
    "sklearn.utils._testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_kde.test_pickling": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "numpy.reshape",
    "sklearn.neighbors.KernelDensity",
    "sklearn.neighbors.tests.test_kde.joblib",
    "sklearn.neighbors.tests.test_kde.pytest",
    "sklearn.utils._testing.assert_allclose",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_kde.test_sample_weight_invalid": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "ValueError",
    "numpy.reshape",
    "sklearn.neighbors.KernelDensity",
    "sklearn.neighbors.tests.test_kde.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_lof": {
  "data": {
   "symbols_in_volume": [
    "sklearn.datasets.load_iris",
    "sklearn.neighbors.tests.test_lof.iris",
    "sklearn.neighbors.tests.test_lof.perm",
    "sklearn.neighbors.tests.test_lof.rng",
    "sklearn.utils.check_random_state"
   ]
  },
  "type": "module"
 },
 "sklearn.neighbors.tests.test_lof.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_lof.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_lof.assert_raises": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_lof.assert_raises_regex": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_raises_regex"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_lof.assert_warns_message": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_warns_message"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_lof.check_estimator": {
  "data": {
   "shadows": "sklearn.utils.estimator_checks.check_estimator"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_lof.check_outlier_corruption": {
  "data": {
   "shadows": "sklearn.utils.estimator_checks.check_outlier_corruption"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_lof.check_random_state": {
  "data": {
   "shadows": "sklearn.utils.check_random_state"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_lof.iris": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "sklearn.neighbors.tests.test_lof.load_iris": {
  "data": {
   "shadows": "sklearn.datasets.load_iris"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_lof.metrics": {
  "data": {
   "shadows": "sklearn.metrics"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_lof.neighbors": {
  "data": {
   "shadows": "sklearn.neighbors"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_lof.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_lof.perm": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "sklearn.neighbors.tests.test_lof.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_lof.rng": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "sklearn.neighbors.tests.test_lof.roc_auc_score": {
  "data": {
   "shadows": "sklearn.metrics.roc_auc_score"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_lof.sqrt": {
  "data": {
   "shadows": "math.sqrt"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_lof.test_contamination": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.neighbors.LocalOutlierFactor",
    "sklearn.utils._testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_lof.test_hasattr_prediction": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "hasattr",
    "sklearn.neighbors.LocalOutlierFactor"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_lof.test_lof": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "numpy.max",
    "numpy.min",
    "numpy.testing.assert_array_equal",
    "sklearn.neighbors.LocalOutlierFactor"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_lof.test_lof_performance": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.r_",
    "sklearn.metrics.roc_auc_score",
    "sklearn.neighbors.LocalOutlierFactor",
    "sklearn.neighbors.tests.test_lof.rng",
    "sklearn.utils.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_lof.test_lof_precomputed": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.metrics.pairwise_distances",
    "sklearn.neighbors.LocalOutlierFactor",
    "sklearn.neighbors.tests.test_lof.rng",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_lof.test_lof_values": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "math.sqrt",
    "sklearn.neighbors.LocalOutlierFactor",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_lof.test_n_neighbors_attribute": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "UserWarning",
    "sklearn.neighbors.LocalOutlierFactor",
    "sklearn.neighbors.tests.test_lof.iris",
    "sklearn.utils._testing.assert_warns_message"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_lof.test_novelty_errors": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "AttributeError",
    "getattr",
    "sklearn.neighbors.LocalOutlierFactor",
    "sklearn.neighbors.tests.test_lof.iris",
    "sklearn.utils._testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_lof.test_novelty_training_scores": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "sklearn.neighbors.LocalOutlierFactor",
    "sklearn.neighbors.tests.test_lof.iris",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_lof.test_novelty_true_common_tests": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "sklearn.neighbors.LocalOutlierFactor",
    "sklearn.utils.estimator_checks.check_estimator"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_lof.test_predicted_outlier_number": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "float",
    "numpy.sum",
    "sklearn.neighbors.LocalOutlierFactor",
    "sklearn.neighbors.tests.test_lof.iris",
    "sklearn.neighbors.tests.test_lof.pytest",
    "sklearn.utils.estimator_checks.check_outlier_corruption"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_lof.test_score_samples": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "numpy.testing.assert_array_equal",
    "sklearn.neighbors.LocalOutlierFactor"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_nca": {
  "data": {
   "symbols_in_volume": [
    "float",
    "numpy.finfo",
    "sklearn.datasets.load_iris",
    "sklearn.neighbors.tests.test_nca.iris",
    "sklearn.neighbors.tests.test_nca.perm",
    "sklearn.neighbors.tests.test_nca.rng",
    "sklearn.utils.check_random_state"
   ]
  },
  "type": "module"
 },
 "sklearn.neighbors.tests.test_nca.ConvergenceWarning": {
  "data": {
   "shadows": "sklearn.exceptions.ConvergenceWarning"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_nca.EPS": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "sklearn.neighbors.tests.test_nca.NeighborhoodComponentsAnalysis": {
  "data": {
   "shadows": "sklearn.neighbors.NeighborhoodComponentsAnalysis"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_nca.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_nca.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_nca.assert_raise_message": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_raise_message"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_nca.assert_raises": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_nca.assert_warns_message": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_warns_message"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_nca.check_grad": {
  "data": {
   "shadows": "scipy.optimize.check_grad"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_nca.check_random_state": {
  "data": {
   "shadows": "sklearn.utils.check_random_state"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_nca.clone": {
  "data": {
   "shadows": "sklearn.clone"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_nca.iris": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "sklearn.neighbors.tests.test_nca.iris_data": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "sklearn.neighbors.tests.test_nca.iris_target": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "sklearn.neighbors.tests.test_nca.load_iris": {
  "data": {
   "shadows": "sklearn.datasets.load_iris"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_nca.make_blobs": {
  "data": {
   "shadows": "sklearn.datasets.make_blobs"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_nca.make_classification": {
  "data": {
   "shadows": "sklearn.datasets.make_classification"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_nca.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_nca.pairwise_distances": {
  "data": {
   "shadows": "sklearn.metrics.pairwise_distances"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_nca.perm": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "sklearn.neighbors.tests.test_nca.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_nca.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_nca.rng": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "sklearn.neighbors.tests.test_nca.test_auto_init": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "min",
    "numpy.random.RandomState",
    "numpy.testing.assert_array_almost_equal",
    "numpy.tile",
    "range",
    "sklearn.clone",
    "sklearn.neighbors.NeighborhoodComponentsAnalysis",
    "sklearn.neighbors.tests.test_nca.pytest",
    "sklearn.neighbors.tests.test_nca.rng"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_nca.test_callback": {
  "data": {
   "lineno": 464,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.neighbors.NeighborhoodComponentsAnalysis",
    "sklearn.neighbors.tests.test_nca.iris_data",
    "sklearn.neighbors.tests.test_nca.iris_target",
    "sklearn.utils._testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_nca.test_callback.my_cb": {
  "data": {
   "lineno": 473,
   "symbols_in_volume": [
    "print",
    "sklearn.neighbors.tests.test_nca.iris_data"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_nca.test_convergence_warning": {
  "data": {
   "lineno": 515,
   "symbols_in_volume": [
    "sklearn.exceptions.ConvergenceWarning",
    "sklearn.neighbors.NeighborhoodComponentsAnalysis",
    "sklearn.neighbors.tests.test_nca.iris_data",
    "sklearn.neighbors.tests.test_nca.iris_target",
    "sklearn.utils._testing.assert_warns_message"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_nca.test_expected_transformation_shape": {
  "data": {
   "lineno": 488,
   "symbols_in_volume": [
    "TransformationStorer",
    "sklearn.neighbors.NeighborhoodComponentsAnalysis",
    "sklearn.neighbors.tests.test_nca.iris_data",
    "sklearn.neighbors.tests.test_nca.iris_target"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_nca.test_expected_transformation_shape.TransformationStorer": {
  "data": {
   "lineno": 493
  },
  "type": "class"
 },
 "sklearn.neighbors.tests.test_nca.test_expected_transformation_shape.TransformationStorer.__init__": {
  "data": {
   "lineno": 495,
   "symbols_in_volume": [
    "numpy.inf",
    "numpy.newaxis",
    "sklearn.neighbors.NeighborhoodComponentsAnalysis"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_nca.test_expected_transformation_shape.TransformationStorer.callback": {
  "data": {
   "lineno": 503
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_nca.test_finite_differences": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "grad",
    "numpy.linalg.norm",
    "numpy.newaxis",
    "numpy.random.RandomState",
    "numpy.testing.assert_almost_equal",
    "scipy.optimize.check_grad",
    "sklearn.datasets.make_classification",
    "sklearn.neighbors.NeighborhoodComponentsAnalysis",
    "sklearn.neighbors.tests.test_nca.rng"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_nca.test_finite_differences.fun": {
  "data": {
   "lineno": 111
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_nca.test_finite_differences.grad": {
  "data": {
   "lineno": 114
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_nca.test_init_transformation": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "ValueError",
    "numpy.random.RandomState",
    "sklearn.datasets.make_blobs",
    "sklearn.neighbors.NeighborhoodComponentsAnalysis",
    "sklearn.neighbors.tests.test_nca.rng",
    "sklearn.utils._testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_nca.test_n_components": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "ValueError",
    "numpy.arange",
    "numpy.random.RandomState",
    "sklearn.neighbors.NeighborhoodComponentsAnalysis",
    "sklearn.neighbors.tests.test_nca.rng",
    "sklearn.utils._testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_nca.test_no_verbose": {
  "data": {
   "lineno": 408,
   "symbols_in_volume": [
    "sklearn.neighbors.NeighborhoodComponentsAnalysis",
    "sklearn.neighbors.tests.test_nca.iris_data",
    "sklearn.neighbors.tests.test_nca.iris_target"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_nca.test_one_class": {
  "data": {
   "lineno": 453,
   "symbols_in_volume": [
    "numpy.testing.assert_array_equal",
    "sklearn.neighbors.NeighborhoodComponentsAnalysis",
    "sklearn.neighbors.tests.test_nca.iris_data",
    "sklearn.neighbors.tests.test_nca.iris_target"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_nca.test_parameters_valid_types": {
  "data": {
   "lineno": 523,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.int32",
    "sklearn.neighbors.NeighborhoodComponentsAnalysis",
    "sklearn.neighbors.tests.test_nca.iris_data",
    "sklearn.neighbors.tests.test_nca.iris_target",
    "sklearn.neighbors.tests.test_nca.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_nca.test_params_validation": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "NCA",
    "TypeError",
    "ValueError",
    "numpy.arange",
    "numpy.random.RandomState",
    "sklearn.neighbors.NeighborhoodComponentsAnalysis",
    "sklearn.neighbors.tests.test_nca.rng",
    "sklearn.utils._testing.assert_raise_message",
    "sklearn.utils._testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_nca.test_simple_example": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.assert_array_equal",
    "sklearn.metrics.pairwise_distances",
    "sklearn.neighbors.NeighborhoodComponentsAnalysis"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_nca.test_singleton_class": {
  "data": {
   "lineno": 417,
   "symbols_in_volume": [
    "numpy.testing.assert_array_equal",
    "numpy.where",
    "sklearn.neighbors.NeighborhoodComponentsAnalysis",
    "sklearn.neighbors.tests.test_nca.iris_data",
    "sklearn.neighbors.tests.test_nca.iris_target"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_nca.test_toy_example_collapse_points": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "LossStorer",
    "abs",
    "numpy.newaxis",
    "numpy.random.RandomState",
    "numpy.testing.assert_array_almost_equal",
    "numpy.vstack",
    "print",
    "sklearn.neighbors.NeighborhoodComponentsAnalysis",
    "sklearn.neighbors.tests.test_nca.rng"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_nca.test_toy_example_collapse_points.LossStorer": {
  "data": {
   "lineno": 69
  },
  "type": "class"
 },
 "sklearn.neighbors.tests.test_nca.test_toy_example_collapse_points.LossStorer.__init__": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "numpy.inf",
    "numpy.newaxis",
    "sklearn.neighbors.NeighborhoodComponentsAnalysis"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_nca.test_toy_example_collapse_points.LossStorer.callback": {
  "data": {
   "lineno": 79
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_nca.test_transformation_dimensions": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "ValueError",
    "numpy.arange",
    "numpy.array",
    "sklearn.neighbors.NeighborhoodComponentsAnalysis",
    "sklearn.utils._testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_nca.test_verbose": {
  "data": {
   "lineno": 367,
   "symbols_in_volume": [
    "len",
    "numpy.random.RandomState",
    "sklearn.datasets.make_blobs",
    "sklearn.neighbors.NeighborhoodComponentsAnalysis",
    "sklearn.neighbors.tests.test_nca.pytest",
    "sklearn.neighbors.tests.test_nca.re",
    "sklearn.neighbors.tests.test_nca.rng"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_nca.test_warm_start_effectiveness": {
  "data": {
   "lineno": 337,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.sum",
    "sklearn.neighbors.NeighborhoodComponentsAnalysis",
    "sklearn.neighbors.tests.test_nca.iris_data",
    "sklearn.neighbors.tests.test_nca.iris_target"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_nca.test_warm_start_validation": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.datasets.make_classification",
    "sklearn.neighbors.NeighborhoodComponentsAnalysis",
    "sklearn.utils._testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_nearest_centroid": {
  "data": {
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "scipy.sparse.csr_matrix",
    "sklearn.datasets.load_iris",
    "sklearn.neighbors.tests.test_nearest_centroid.T",
    "sklearn.neighbors.tests.test_nearest_centroid.X",
    "sklearn.neighbors.tests.test_nearest_centroid.iris",
    "sklearn.neighbors.tests.test_nearest_centroid.perm",
    "sklearn.neighbors.tests.test_nearest_centroid.rng"
   ]
  },
  "type": "module"
 },
 "sklearn.neighbors.tests.test_nearest_centroid.NearestCentroid": {
  "data": {
   "shadows": "sklearn.neighbors.NearestCentroid"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_nearest_centroid.T": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "sklearn.neighbors.tests.test_nearest_centroid.T_csr": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "sklearn.neighbors.tests.test_nearest_centroid.X": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "sklearn.neighbors.tests.test_nearest_centroid.X_csr": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "sklearn.neighbors.tests.test_nearest_centroid.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_nearest_centroid.assert_raises": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_nearest_centroid.datasets": {
  "data": {
   "shadows": "sklearn.datasets"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_nearest_centroid.iris": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "sklearn.neighbors.tests.test_nearest_centroid.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_nearest_centroid.perm": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "sklearn.neighbors.tests.test_nearest_centroid.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_nearest_centroid.rng": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "sklearn.neighbors.tests.test_nearest_centroid.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_nearest_centroid.test_classification_toy": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "numpy.testing.assert_array_equal",
    "sklearn.neighbors.NearestCentroid",
    "sklearn.neighbors.tests.test_nearest_centroid.T",
    "sklearn.neighbors.tests.test_nearest_centroid.T_csr",
    "sklearn.neighbors.tests.test_nearest_centroid.X",
    "sklearn.neighbors.tests.test_nearest_centroid.X_csr",
    "sklearn.neighbors.tests.test_nearest_centroid.true_result",
    "sklearn.neighbors.tests.test_nearest_centroid.y"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_nearest_centroid.test_features_zero_var": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "ValueError",
    "numpy.empty",
    "numpy.zeros",
    "sklearn.neighbors.NearestCentroid",
    "sklearn.neighbors.tests.test_nearest_centroid.X",
    "sklearn.neighbors.tests.test_nearest_centroid.y",
    "sklearn.utils._testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_nearest_centroid.test_iris": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "numpy.mean",
    "sklearn.neighbors.NearestCentroid",
    "sklearn.neighbors.tests.test_nearest_centroid.iris",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_nearest_centroid.test_iris_shrinkage": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "numpy.mean",
    "sklearn.neighbors.NearestCentroid",
    "sklearn.neighbors.tests.test_nearest_centroid.iris",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_nearest_centroid.test_manhattan_metric": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "numpy.testing.assert_array_equal",
    "sklearn.neighbors.NearestCentroid",
    "sklearn.neighbors.tests.test_nearest_centroid.X",
    "sklearn.neighbors.tests.test_nearest_centroid.X_csr",
    "sklearn.neighbors.tests.test_nearest_centroid.y"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_nearest_centroid.test_pickle": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "numpy.testing.assert_array_equal",
    "sklearn.neighbors.NearestCentroid",
    "sklearn.neighbors.tests.test_nearest_centroid.iris",
    "sklearn.neighbors.tests.test_nearest_centroid.pickle",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_nearest_centroid.test_precomputed": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.neighbors.NearestCentroid",
    "sklearn.neighbors.tests.test_nearest_centroid.X",
    "sklearn.neighbors.tests.test_nearest_centroid.y",
    "sklearn.utils._testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_nearest_centroid.test_predict_translated_data": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "numpy.testing.assert_array_equal",
    "sklearn.neighbors.NearestCentroid",
    "sklearn.neighbors.tests.test_nearest_centroid.X",
    "sklearn.neighbors.tests.test_nearest_centroid.rng",
    "sklearn.neighbors.tests.test_nearest_centroid.y"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_nearest_centroid.test_shrinkage_correct": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.assert_array_almost_equal",
    "sklearn.neighbors.NearestCentroid",
    "sklearn.neighbors.tests.test_nearest_centroid.X",
    "sklearn.neighbors.tests.test_nearest_centroid.y"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_nearest_centroid.test_shrinkage_threshold_decoded_y": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.testing.assert_array_equal",
    "sklearn.neighbors.NearestCentroid",
    "sklearn.neighbors.tests.test_nearest_centroid.X",
    "sklearn.neighbors.tests.test_nearest_centroid.y"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_nearest_centroid.true_result": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "sklearn.neighbors.tests.test_nearest_centroid.y": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "sklearn.neighbors.tests.test_neighbors": {
  "data": {
   "symbols_in_volume": [
    "list",
    "numpy.asarray",
    "numpy.inf",
    "numpy.random.RandomState",
    "scipy.sparse.bsr_matrix",
    "scipy.sparse.coo_matrix",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.dok_matrix",
    "scipy.sparse.lil_matrix",
    "sklearn.datasets.load_digits",
    "sklearn.datasets.load_iris",
    "sklearn.neighbors.kneighbors_graph",
    "sklearn.neighbors.radius_neighbors_graph",
    "sklearn.neighbors.tests.test_neighbors.SPARSE_TYPES",
    "sklearn.neighbors.tests.test_neighbors.digits",
    "sklearn.neighbors.tests.test_neighbors.iris",
    "sklearn.neighbors.tests.test_neighbors.joblib",
    "sklearn.neighbors.tests.test_neighbors.perm",
    "sklearn.neighbors.tests.test_neighbors.rng",
    "sklearn.utils._testing.ignore_warnings"
   ]
  },
  "type": "module"
 },
 "sklearn.neighbors.tests.test_neighbors.ALGORITHMS": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "sklearn.neighbors.tests.test_neighbors.DataConversionWarning": {
  "data": {
   "shadows": "sklearn.exceptions.DataConversionWarning"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_neighbors.EfficiencyWarning": {
  "data": {
   "shadows": "sklearn.exceptions.EfficiencyWarning"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_neighbors.JOBLIB_BACKENDS": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "sklearn.neighbors.tests.test_neighbors.NotFittedError": {
  "data": {
   "shadows": "sklearn.exceptions.NotFittedError"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_neighbors.P": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "sklearn.neighbors.tests.test_neighbors.SPARSE_OR_DENSE": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "sklearn.neighbors.tests.test_neighbors.SPARSE_TYPES": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "sklearn.neighbors.tests.test_neighbors.VALID_METRICS": {
  "data": {
   "shadows": "sklearn.neighbors.VALID_METRICS"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_neighbors.VALID_METRICS_SPARSE": {
  "data": {
   "shadows": "sklearn.neighbors.VALID_METRICS_SPARSE"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_neighbors._check_precomputed": {
  "data": {
   "shadows": "sklearn.neighbors._base._check_precomputed"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_neighbors._is_sorted_by_data": {
  "data": {
   "shadows": "sklearn.neighbors._base._is_sorted_by_data"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_neighbors._weight_func": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "numpy.errstate"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_neighbors.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_neighbors.assert_raise_message": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_raise_message"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_neighbors.assert_raises": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_neighbors.assert_raises_regex": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_raises_regex"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_neighbors.assert_warns": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_warns"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_neighbors.assert_warns_message": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_warns_message"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_neighbors.bsr_matrix": {
  "data": {
   "shadows": "scipy.sparse.bsr_matrix"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_neighbors.check_object_arrays": {
  "data": {
   "lineno": 1402,
   "symbols_in_volume": [
    "enumerate",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.check_precomputed": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "Est",
    "ValueError",
    "getattr",
    "make_train_test",
    "numpy.arange",
    "numpy.random.RandomState",
    "sklearn.exceptions.EfficiencyWarning",
    "sklearn.neighbors.NearestNeighbors",
    "sklearn.neighbors.tests.test_neighbors.rng",
    "sklearn.utils._testing.assert_array_almost_equal",
    "sklearn.utils._testing.assert_raises",
    "sklearn.utils._testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.check_random_state": {
  "data": {
   "shadows": "sklearn.utils.validation.check_random_state"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_neighbors.clone": {
  "data": {
   "shadows": "sklearn.base.clone"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_neighbors.coo_matrix": {
  "data": {
   "shadows": "scipy.sparse.coo_matrix"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_neighbors.cross_val_score": {
  "data": {
   "shadows": "sklearn.model_selection.cross_val_score"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_neighbors.csc_matrix": {
  "data": {
   "shadows": "scipy.sparse.csc_matrix"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_neighbors.csr_matrix": {
  "data": {
   "shadows": "scipy.sparse.csr_matrix"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_neighbors.datasets": {
  "data": {
   "shadows": "sklearn.datasets"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_neighbors.digits": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "sklearn.neighbors.tests.test_neighbors.dok_matrix": {
  "data": {
   "shadows": "scipy.sparse.dok_matrix"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_neighbors.ignore_warnings": {
  "data": {
   "shadows": "sklearn.utils._testing.ignore_warnings"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_neighbors.iris": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "sklearn.neighbors.tests.test_neighbors.issparse": {
  "data": {
   "shadows": "scipy.sparse.issparse"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_neighbors.joblib": {
  "data": {
   "shadows": "joblib"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_neighbors.lil_matrix": {
  "data": {
   "shadows": "scipy.sparse.lil_matrix"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_neighbors.make_pipeline": {
  "data": {
   "shadows": "sklearn.pipeline.make_pipeline"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_neighbors.metrics": {
  "data": {
   "shadows": "sklearn.metrics"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_neighbors.neighbors": {
  "data": {
   "shadows": "sklearn.neighbors"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_neighbors.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_neighbors.pairwise_distances": {
  "data": {
   "shadows": "sklearn.metrics.pairwise.pairwise_distances"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_neighbors.perm": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "sklearn.neighbors.tests.test_neighbors.product": {
  "data": {
   "shadows": "itertools.product"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_neighbors.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_neighbors.rng": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "sklearn.neighbors.tests.test_neighbors.test_KNeighborsClassifier_multioutput": {
  "data": {
   "lineno": 773,
   "symbols_in_volume": [
    "itertools.product",
    "len",
    "numpy.vstack",
    "range",
    "sklearn.model_selection.train_test_split",
    "sklearn.neighbors.KNeighborsClassifier",
    "sklearn.neighbors.tests.test_neighbors.ALGORITHMS",
    "sklearn.neighbors.tests.test_neighbors._weight_func",
    "sklearn.neighbors.tests.test_neighbors.rng",
    "sklearn.utils._testing.assert_array_almost_equal",
    "sklearn.utils.validation.check_random_state",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.test_KNeighborsRegressor_multioutput_uniform_weight": {
  "data": {
   "lineno": 845,
   "symbols_in_volume": [
    "itertools.product",
    "numpy.array",
    "numpy.mean",
    "sklearn.model_selection.train_test_split",
    "sklearn.neighbors.KNeighborsRegressor",
    "sklearn.neighbors.tests.test_neighbors.ALGORITHMS",
    "sklearn.neighbors.tests.test_neighbors.rng",
    "sklearn.utils._testing.assert_array_almost_equal",
    "sklearn.utils.validation.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.test_RadiusNeighborsClassifier_multioutput": {
  "data": {
   "lineno": 714,
   "symbols_in_volume": [
    "itertools.product",
    "numpy.vstack",
    "range",
    "sklearn.model_selection.train_test_split",
    "sklearn.neighbors.RadiusNeighborsClassifier",
    "sklearn.neighbors.tests.test_neighbors.ALGORITHMS",
    "sklearn.neighbors.tests.test_neighbors._weight_func",
    "sklearn.neighbors.tests.test_neighbors.rng",
    "sklearn.utils._testing.assert_array_almost_equal",
    "sklearn.utils.validation.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.test_RadiusNeighborsRegressor_multioutput": {
  "data": {
   "lineno": 970,
   "symbols_in_volume": [
    "itertools.product",
    "numpy.abs",
    "numpy.all",
    "numpy.random.RandomState",
    "numpy.sqrt",
    "numpy.vstack",
    "sklearn.neighbors.RadiusNeighborsRegressor",
    "sklearn.neighbors.tests.test_neighbors.ALGORITHMS",
    "sklearn.neighbors.tests.test_neighbors._weight_func",
    "sklearn.neighbors.tests.test_neighbors.rng"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.test_RadiusNeighborsRegressor_multioutput_with_uniform_weight": {
  "data": {
   "lineno": 940,
   "symbols_in_volume": [
    "itertools.product",
    "numpy.array",
    "numpy.mean",
    "sklearn.model_selection.train_test_split",
    "sklearn.neighbors.RadiusNeighborsRegressor",
    "sklearn.neighbors.tests.test_neighbors.ALGORITHMS",
    "sklearn.neighbors.tests.test_neighbors.rng",
    "sklearn.utils._testing.assert_array_almost_equal",
    "sklearn.utils.validation.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.test_auto_algorithm": {
  "data": {
   "lineno": 1717,
   "symbols_in_volume": [
    "numpy.random.randint",
    "numpy.random.randn",
    "sklearn.neighbors.NearestNeighbors",
    "sklearn.neighbors.tests.test_neighbors.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.test_callable_metric": {
  "data": {
   "lineno": 1280,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.neighbors.NearestNeighbors",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.test_callable_metric.custom_metric": {
  "data": {
   "lineno": 1282,
   "symbols_in_volume": [
    "numpy.sqrt",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.test_check_precomputed": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.random.RandomState",
    "scipy.sparse.csr_matrix",
    "sklearn.exceptions.EfficiencyWarning",
    "sklearn.neighbors._base._check_precomputed",
    "sklearn.neighbors._base._is_sorted_by_data",
    "sklearn.utils._testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.test_dtype_convert": {
  "data": {
   "lineno": 1603,
   "symbols_in_volume": [
    "numpy.eye",
    "sklearn.neighbors.KNeighborsClassifier",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.test_include_self_neighbors_graph": {
  "data": {
   "lineno": 1516,
   "symbols_in_volume": [
    "sklearn.neighbors.kneighbors_graph",
    "sklearn.neighbors.radius_neighbors_graph",
    "sklearn.neighbors.tests.test_neighbors.rng",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.test_is_sorted_by_data": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "numpy.arange",
    "scipy.sparse.csr_matrix",
    "sklearn.neighbors._base._is_sorted_by_data"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.test_k_and_radius_neighbors_X_None": {
  "data": {
   "lineno": 1436,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.neighbors.NearestNeighbors",
    "sklearn.neighbors.tests.test_neighbors.ALGORITHMS",
    "sklearn.neighbors.tests.test_neighbors.check_object_arrays",
    "sklearn.neighbors.tests.test_neighbors.rng",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.test_k_and_radius_neighbors_duplicates": {
  "data": {
   "lineno": 1468,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.ones",
    "numpy.zeros",
    "sklearn.neighbors.NearestNeighbors",
    "sklearn.neighbors.tests.test_neighbors.ALGORITHMS",
    "sklearn.neighbors.tests.test_neighbors.check_object_arrays",
    "sklearn.neighbors.tests.test_neighbors.rng",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.test_k_and_radius_neighbors_train_is_not_query": {
  "data": {
   "lineno": 1407,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.neighbors.NearestNeighbors",
    "sklearn.neighbors.tests.test_neighbors.ALGORITHMS",
    "sklearn.neighbors.tests.test_neighbors.check_object_arrays",
    "sklearn.neighbors.tests.test_neighbors.rng",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.test_kneighbors_classifier": {
  "data": {
   "lineno": 363,
   "symbols_in_volume": [
    "int",
    "numpy.random.RandomState",
    "sklearn.neighbors.KNeighborsClassifier",
    "sklearn.neighbors.tests.test_neighbors.ALGORITHMS",
    "sklearn.neighbors.tests.test_neighbors._weight_func",
    "sklearn.neighbors.tests.test_neighbors.rng",
    "sklearn.utils._testing.assert_array_equal",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.test_kneighbors_classifier_float_labels": {
  "data": {
   "lineno": 391,
   "symbols_in_volume": [
    "float",
    "int",
    "numpy.random.RandomState",
    "sklearn.neighbors.KNeighborsClassifier",
    "sklearn.neighbors.tests.test_neighbors.rng",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.test_kneighbors_classifier_predict_proba": {
  "data": {
   "lineno": 406,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.neighbors.KNeighborsClassifier",
    "sklearn.utils._testing.assert_array_almost_equal",
    "sklearn.utils._testing.assert_array_equal",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.test_kneighbors_classifier_sparse": {
  "data": {
   "lineno": 750,
   "symbols_in_volume": [
    "int",
    "numpy.asarray",
    "numpy.random.RandomState",
    "sklearn.neighbors.KNeighborsClassifier",
    "sklearn.neighbors.tests.test_neighbors.SPARSE_TYPES",
    "sklearn.neighbors.tests.test_neighbors.rng",
    "sklearn.utils._testing.assert_array_equal",
    "sparsemat",
    "sparsev"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.test_kneighbors_graph": {
  "data": {
   "lineno": 1067,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.eye",
    "sklearn.neighbors.kneighbors_graph",
    "sklearn.utils._testing.assert_array_almost_equal",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.test_kneighbors_graph_sparse": {
  "data": {
   "lineno": 1107,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "scipy.sparse.csr_matrix",
    "sklearn.neighbors.kneighbors_graph",
    "sklearn.neighbors.tests.test_neighbors.rng",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.test_kneighbors_regressor": {
  "data": {
   "lineno": 819,
   "symbols_in_volume": [
    "abs",
    "numpy.all",
    "numpy.random.RandomState",
    "numpy.sqrt",
    "sklearn.neighbors.KNeighborsRegressor",
    "sklearn.neighbors.tests.test_neighbors.ALGORITHMS",
    "sklearn.neighbors.tests.test_neighbors._weight_func",
    "sklearn.neighbors.tests.test_neighbors.rng"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.test_kneighbors_regressor_multioutput": {
  "data": {
   "lineno": 872,
   "symbols_in_volume": [
    "itertools.product",
    "numpy.abs",
    "numpy.all",
    "numpy.random.RandomState",
    "numpy.sqrt",
    "numpy.vstack",
    "sklearn.neighbors.KNeighborsRegressor",
    "sklearn.neighbors.tests.test_neighbors.ALGORITHMS",
    "sklearn.neighbors.tests.test_neighbors._weight_func",
    "sklearn.neighbors.tests.test_neighbors.rng"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.test_kneighbors_regressor_sparse": {
  "data": {
   "lineno": 997,
   "symbols_in_volume": [
    "int",
    "numpy.mean",
    "numpy.random.RandomState",
    "sklearn.exceptions.EfficiencyWarning",
    "sklearn.metrics.pairwise.pairwise_distances",
    "sklearn.neighbors.KNeighborsRegressor",
    "sklearn.neighbors.tests.test_neighbors.SPARSE_OR_DENSE",
    "sklearn.neighbors.tests.test_neighbors.SPARSE_TYPES",
    "sklearn.neighbors.tests.test_neighbors.rng",
    "sklearn.utils._testing.ignore_warnings",
    "sparsemat",
    "sparsev"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.test_knn_forcing_backend": {
  "data": {
   "lineno": 1584,
   "symbols_in_volume": [
    "sklearn.datasets.make_classification",
    "sklearn.model_selection.train_test_split",
    "sklearn.neighbors.KNeighborsClassifier",
    "sklearn.neighbors.tests.test_neighbors.ALGORITHMS",
    "sklearn.neighbors.tests.test_neighbors.JOBLIB_BACKENDS",
    "sklearn.neighbors.tests.test_neighbors.joblib",
    "sklearn.neighbors.tests.test_neighbors.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.test_metric_params_interface": {
  "data": {
   "lineno": 1350,
   "symbols_in_volume": [
    "SyntaxWarning",
    "sklearn.neighbors.KNeighborsClassifier",
    "sklearn.utils._testing.assert_warns"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.test_n_neighbors_datatype": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "sklearn.neighbors.NearestNeighbors",
    "sklearn.utils._testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.test_neighbors_badargs": {
  "data": {
   "lineno": 1163,
   "symbols_in_volume": [
    "ValueError",
    "cls",
    "issubclass",
    "numpy.ones",
    "scipy.sparse.csr_matrix",
    "sklearn.neighbors.KNeighborsClassifier",
    "sklearn.neighbors.KNeighborsRegressor",
    "sklearn.neighbors.NearestNeighbors",
    "sklearn.neighbors.RadiusNeighborsClassifier",
    "sklearn.neighbors.RadiusNeighborsRegressor",
    "sklearn.neighbors.tests.test_neighbors.rng",
    "sklearn.utils._testing.assert_raise_message",
    "sklearn.utils._testing.assert_raises",
    "sklearn.utils._testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.test_neighbors_digits": {
  "data": {
   "lineno": 1047,
   "symbols_in_volume": [
    "float",
    "int",
    "numpy.arange",
    "sklearn.neighbors.KNeighborsClassifier",
    "sklearn.neighbors.tests.test_neighbors.digits"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.test_neighbors_iris": {
  "data": {
   "lineno": 1026,
   "symbols_in_volume": [
    "numpy.mean",
    "sklearn.neighbors.KNeighborsClassifier",
    "sklearn.neighbors.KNeighborsRegressor",
    "sklearn.neighbors.tests.test_neighbors.ALGORITHMS",
    "sklearn.neighbors.tests.test_neighbors.iris",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.test_neighbors_metrics": {
  "data": {
   "lineno": 1223,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "numpy.dot",
    "numpy.inf",
    "sklearn.metrics",
    "sklearn.neighbors.KDTree.valid_metrics",
    "sklearn.neighbors.NearestNeighbors",
    "sklearn.neighbors.tests.test_neighbors.rng",
    "sklearn.utils._testing.assert_array_almost_equal",
    "sklearn.utils._testing.assert_raises",
    "slice"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.test_neighbors_regressors_zero_distance": {
  "data": {
   "lineno": 606,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.neighbors.KNeighborsRegressor",
    "sklearn.neighbors.RadiusNeighborsRegressor",
    "sklearn.neighbors.tests.test_neighbors.ALGORITHMS",
    "sklearn.utils._testing.assert_array_almost_equal",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.test_non_euclidean_kneighbors": {
  "data": {
   "lineno": 1366,
   "symbols_in_volume": [
    "ValueError",
    "numpy.random.RandomState",
    "numpy.sort",
    "sklearn.metrics.pairwise.pairwise_distances",
    "sklearn.neighbors.NearestNeighbors",
    "sklearn.neighbors.kneighbors_graph",
    "sklearn.neighbors.radius_neighbors_graph",
    "sklearn.neighbors.tests.test_neighbors.rng",
    "sklearn.utils._testing.assert_array_equal",
    "sklearn.utils._testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.test_not_fitted_error_gets_raised": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "sklearn.exceptions.NotFittedError",
    "sklearn.neighbors.NearestNeighbors",
    "sklearn.utils._testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.test_pairwise_boolean_distance": {
  "data": {
   "lineno": 1643,
   "symbols_in_volume": [
    "NN",
    "numpy.random.RandomState",
    "sklearn.exceptions.DataConversionWarning",
    "sklearn.neighbors.NearestNeighbors",
    "sklearn.neighbors.tests.test_neighbors.rng",
    "sklearn.utils._testing.assert_array_equal",
    "sklearn.utils._testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.test_pairwise_deprecated": {
  "data": {
   "lineno": 1737,
   "symbols_in_volume": [
    "FutureWarning",
    "NearestNeighbors",
    "sklearn.neighbors.KNeighborsClassifier",
    "sklearn.neighbors.KNeighborsRegressor",
    "sklearn.neighbors.NearestNeighbors",
    "sklearn.neighbors.tests.test_neighbors.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.test_pipeline_with_nearest_neighbors_transformer": {
  "data": {
   "lineno": 1675,
   "symbols_in_volume": [
    "int",
    "numpy.random.RandomState",
    "sklearn.base.clone",
    "sklearn.neighbors.KNeighborsRegressor",
    "sklearn.neighbors.KNeighborsTransformer",
    "sklearn.neighbors.RadiusNeighborsRegressor",
    "sklearn.neighbors.RadiusNeighborsTransformer",
    "sklearn.neighbors.tests.test_neighbors.rng",
    "sklearn.pipeline.make_pipeline",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.test_precomputed_cross_validation": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": [
    "Est",
    "numpy.random.RandomState",
    "sklearn.metrics.pairwise.pairwise_distances",
    "sklearn.model_selection.cross_val_score",
    "sklearn.neighbors.KNeighborsClassifier",
    "sklearn.neighbors.KNeighborsRegressor",
    "sklearn.neighbors.RadiusNeighborsClassifier",
    "sklearn.neighbors.RadiusNeighborsRegressor",
    "sklearn.neighbors.tests.test_neighbors.rng",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.test_precomputed_dense": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "make_train_test",
    "sklearn.neighbors.KNeighborsClassifier",
    "sklearn.neighbors.KNeighborsRegressor",
    "sklearn.neighbors.RadiusNeighborsClassifier",
    "sklearn.neighbors.RadiusNeighborsRegressor",
    "sklearn.neighbors.tests.test_neighbors.check_precomputed"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.test_precomputed_dense.make_train_test": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "sklearn.metrics.pairwise_distances"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.test_precomputed_sparse_invalid": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "scipy.sparse.csr_matrix",
    "sklearn.exceptions.EfficiencyWarning",
    "sklearn.neighbors.NearestNeighbors",
    "sklearn.utils._testing.assert_raises_regex",
    "sklearn.utils._testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.test_precomputed_sparse_knn": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "make_train_test",
    "sklearn.neighbors.KNeighborsClassifier",
    "sklearn.neighbors.KNeighborsRegressor",
    "sklearn.neighbors.tests.test_neighbors.check_precomputed",
    "sklearn.neighbors.tests.test_neighbors.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.test_precomputed_sparse_knn.make_train_test": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "sklearn.neighbors.NearestNeighbors"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.test_precomputed_sparse_radius": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "make_train_test",
    "sklearn.neighbors.RadiusNeighborsClassifier",
    "sklearn.neighbors.RadiusNeighborsRegressor",
    "sklearn.neighbors.tests.test_neighbors.check_precomputed",
    "sklearn.neighbors.tests.test_neighbors.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.test_precomputed_sparse_radius.make_train_test": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "sklearn.neighbors.NearestNeighbors"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.test_predict_sparse_ball_kd_tree": {
  "data": {
   "lineno": 1355,
   "symbols_in_volume": [
    "ValueError",
    "numpy.random.RandomState",
    "scipy.sparse.csr_matrix",
    "sklearn.neighbors.KNeighborsClassifier",
    "sklearn.neighbors.KNeighborsRegressor",
    "sklearn.neighbors.tests.test_neighbors.rng",
    "sklearn.utils._testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.test_radius_neighbors_boundary_handling": {
  "data": {
   "lineno": 638,
   "symbols_in_volume": [
    "numpy.array",
    "object",
    "sklearn.neighbors.NearestNeighbors",
    "sklearn.neighbors.tests.test_neighbors.ALGORITHMS",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.test_radius_neighbors_classifier": {
  "data": {
   "lineno": 438,
   "symbols_in_volume": [
    "int",
    "numpy.random.RandomState",
    "sklearn.neighbors.RadiusNeighborsClassifier",
    "sklearn.neighbors.tests.test_neighbors.ALGORITHMS",
    "sklearn.neighbors.tests.test_neighbors._weight_func",
    "sklearn.neighbors.tests.test_neighbors.rng",
    "sklearn.utils._testing.assert_array_equal",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.test_radius_neighbors_classifier_outlier_labeling": {
  "data": {
   "lineno": 491,
   "symbols_in_volume": [
    "RNC",
    "TypeError",
    "UserWarning",
    "ValueError",
    "numpy.array",
    "sklearn.neighbors.RadiusNeighborsClassifier",
    "sklearn.neighbors.tests.test_neighbors.ALGORITHMS",
    "sklearn.neighbors.tests.test_neighbors._weight_func",
    "sklearn.utils._testing.assert_array_equal",
    "sklearn.utils._testing.assert_raises",
    "sklearn.utils._testing.assert_warns"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.test_radius_neighbors_classifier_outlier_labeling.check_array_exception": {
  "data": {
   "lineno": 525,
   "symbols_in_volume": [
    "RNC"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.test_radius_neighbors_classifier_outlier_labeling.check_dtype_exception": {
  "data": {
   "lineno": 531,
   "symbols_in_volume": [
    "RNC"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.test_radius_neighbors_classifier_outlier_labeling.check_exception": {
  "data": {
   "lineno": 579,
   "symbols_in_volume": [
    "RNC"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.test_radius_neighbors_classifier_outlier_labeling.check_warning": {
  "data": {
   "lineno": 551,
   "symbols_in_volume": [
    "RNC"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.test_radius_neighbors_classifier_when_no_neighbors": {
  "data": {
   "lineno": 465,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "rnc",
    "sklearn.neighbors.RadiusNeighborsClassifier",
    "sklearn.neighbors.tests.test_neighbors.ALGORITHMS",
    "sklearn.neighbors.tests.test_neighbors._weight_func",
    "sklearn.utils._testing.assert_array_equal",
    "sklearn.utils._testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.test_radius_neighbors_classifier_zero_distance": {
  "data": {
   "lineno": 585,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.neighbors.RadiusNeighborsClassifier",
    "sklearn.neighbors.tests.test_neighbors.ALGORITHMS",
    "sklearn.neighbors.tests.test_neighbors._weight_func",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.test_radius_neighbors_graph": {
  "data": {
   "lineno": 1125,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.neighbors.radius_neighbors_graph",
    "sklearn.utils._testing.assert_array_almost_equal",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.test_radius_neighbors_graph_sparse": {
  "data": {
   "lineno": 1145,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "scipy.sparse.csr_matrix",
    "sklearn.neighbors.radius_neighbors_graph",
    "sklearn.neighbors.tests.test_neighbors.rng",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.test_radius_neighbors_predict_proba": {
  "data": {
   "lineno": 1657,
   "symbols_in_volume": [
    "int",
    "numpy.where",
    "range",
    "sklearn.datasets.make_classification",
    "sklearn.model_selection.train_test_split",
    "sklearn.neighbors.RadiusNeighborsClassifier",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.test_radius_neighbors_regressor": {
  "data": {
   "lineno": 899,
   "symbols_in_volume": [
    "UserWarning",
    "abs",
    "numpy.all",
    "numpy.full",
    "numpy.isnan",
    "numpy.random.RandomState",
    "numpy.sqrt",
    "sklearn.neighbors.RadiusNeighborsRegressor",
    "sklearn.neighbors.tests.test_neighbors.ALGORITHMS",
    "sklearn.neighbors.tests.test_neighbors._weight_func",
    "sklearn.neighbors.tests.test_neighbors.rng",
    "sklearn.utils._testing.assert_warns_message"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.test_radius_neighbors_returns_array_of_objects": {
  "data": {
   "lineno": 657,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.empty",
    "numpy.ones",
    "object",
    "scipy.sparse.csr_matrix",
    "sklearn.neighbors.NearestNeighbors",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.test_radius_neighbors_sort_results": {
  "data": {
   "lineno": 681,
   "symbols_in_volume": [
    "ValueError",
    "numpy.inf",
    "numpy.random.RandomState",
    "numpy.sort",
    "range",
    "sklearn.neighbors.NearestNeighbors",
    "sklearn.neighbors._base._is_sorted_by_data",
    "sklearn.neighbors.radius_neighbors_graph",
    "sklearn.neighbors.tests.test_neighbors.pytest",
    "sklearn.neighbors.tests.test_neighbors.rng",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.test_same_knn_parallel": {
  "data": {
   "lineno": 1531,
   "symbols_in_volume": [
    "sklearn.datasets.make_classification",
    "sklearn.model_selection.train_test_split",
    "sklearn.neighbors.KNeighborsClassifier",
    "sklearn.neighbors.tests.test_neighbors.ALGORITHMS",
    "sklearn.neighbors.tests.test_neighbors.pytest",
    "sklearn.utils._testing.assert_array_almost_equal",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.test_same_radius_neighbors_parallel": {
  "data": {
   "lineno": 1557,
   "symbols_in_volume": [
    "len",
    "range",
    "sklearn.datasets.make_classification",
    "sklearn.model_selection.train_test_split",
    "sklearn.neighbors.RadiusNeighborsClassifier",
    "sklearn.neighbors.tests.test_neighbors.ALGORITHMS",
    "sklearn.neighbors.tests.test_neighbors.pytest",
    "sklearn.utils._testing.assert_array_almost_equal",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.test_sparse_metric_callable": {
  "data": {
   "lineno": 1613,
   "symbols_in_volume": [
    "numpy.array",
    "scipy.sparse.csr_matrix",
    "sklearn.neighbors.NearestNeighbors",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.test_sparse_metric_callable.sparse_metric": {
  "data": {
   "lineno": 1614,
   "symbols_in_volume": [
    "scipy.sparse.issparse"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.test_unsupervised_inputs": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "NearestNeighbors",
    "sklearn.neighbors.BallTree",
    "sklearn.neighbors.KDTree",
    "sklearn.neighbors.KNeighborsClassifier",
    "sklearn.neighbors.KNeighborsRegressor",
    "sklearn.neighbors.NearestNeighbors",
    "sklearn.neighbors.tests.test_neighbors.pytest",
    "sklearn.neighbors.tests.test_neighbors.rng",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.test_unsupervised_kneighbors": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "len",
    "range",
    "sklearn.neighbors.NearestNeighbors",
    "sklearn.neighbors.tests.test_neighbors.ALGORITHMS",
    "sklearn.neighbors.tests.test_neighbors.P",
    "sklearn.neighbors.tests.test_neighbors.rng",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.test_unsupervised_radius_neighbors": {
  "data": {
   "lineno": 322,
   "symbols_in_volume": [
    "len",
    "list",
    "numpy.concatenate",
    "numpy.random.RandomState",
    "range",
    "sklearn.neighbors.NearestNeighbors",
    "sklearn.neighbors.tests.test_neighbors.ALGORITHMS",
    "sklearn.neighbors.tests.test_neighbors.P",
    "sklearn.neighbors.tests.test_neighbors.rng",
    "sklearn.utils._testing.assert_array_almost_equal",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.test_valid_brute_metric_for_auto_algorithm": {
  "data": {
   "lineno": 1300,
   "symbols_in_volume": [
    "dict",
    "numpy.dot",
    "scipy.sparse.csr_matrix",
    "sklearn.metrics.pairwise_distances",
    "sklearn.neighbors.NearestNeighbors",
    "sklearn.neighbors.VALID_METRICS",
    "sklearn.neighbors.VALID_METRICS_SPARSE",
    "sklearn.neighbors.tests.test_neighbors.rng"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.train_test_split": {
  "data": {
   "shadows": "sklearn.model_selection.train_test_split"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_neighbors_pipeline": {
  "data": {},
  "type": "module"
 },
 "sklearn.neighbors.tests.test_neighbors_pipeline.DBSCAN": {
  "data": {
   "shadows": "sklearn.cluster.DBSCAN"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_neighbors_pipeline.Isomap": {
  "data": {
   "shadows": "sklearn.manifold.Isomap"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_neighbors_pipeline.KNeighborsRegressor": {
  "data": {
   "shadows": "sklearn.neighbors.KNeighborsRegressor"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_neighbors_pipeline.KNeighborsTransformer": {
  "data": {
   "shadows": "sklearn.neighbors.KNeighborsTransformer"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_neighbors_pipeline.LocalOutlierFactor": {
  "data": {
   "shadows": "sklearn.neighbors.LocalOutlierFactor"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_neighbors_pipeline.RadiusNeighborsRegressor": {
  "data": {
   "shadows": "sklearn.neighbors.RadiusNeighborsRegressor"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_neighbors_pipeline.RadiusNeighborsTransformer": {
  "data": {
   "shadows": "sklearn.neighbors.RadiusNeighborsTransformer"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_neighbors_pipeline.SpectralClustering": {
  "data": {
   "shadows": "sklearn.cluster.SpectralClustering"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_neighbors_pipeline.SpectralEmbedding": {
  "data": {
   "shadows": "sklearn.manifold.SpectralEmbedding"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_neighbors_pipeline.TSNE": {
  "data": {
   "shadows": "sklearn.manifold.TSNE"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_neighbors_pipeline.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_neighbors_pipeline.clone": {
  "data": {
   "shadows": "sklearn.base.clone"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_neighbors_pipeline.generate_clustered_data": {
  "data": {
   "shadows": "sklearn.cluster.tests.common.generate_clustered_data"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_neighbors_pipeline.make_blobs": {
  "data": {
   "shadows": "sklearn.datasets.make_blobs"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_neighbors_pipeline.make_pipeline": {
  "data": {
   "shadows": "sklearn.pipeline.make_pipeline"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_neighbors_pipeline.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_neighbors_pipeline.test_dbscan": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "sklearn.cluster.DBSCAN",
    "sklearn.cluster.tests.common.generate_clustered_data",
    "sklearn.neighbors.RadiusNeighborsTransformer",
    "sklearn.pipeline.make_pipeline",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors_pipeline.test_isomap": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "sklearn.datasets.make_blobs",
    "sklearn.manifold.Isomap",
    "sklearn.neighbors.KNeighborsTransformer",
    "sklearn.pipeline.make_pipeline",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors_pipeline.test_kneighbors_regressor": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "int",
    "numpy.random.RandomState",
    "sklearn.base.clone",
    "sklearn.neighbors.KNeighborsRegressor",
    "sklearn.neighbors.KNeighborsTransformer",
    "sklearn.neighbors.RadiusNeighborsRegressor",
    "sklearn.neighbors.RadiusNeighborsTransformer",
    "sklearn.pipeline.make_pipeline",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors_pipeline.test_lof_novelty_false": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.neighbors.KNeighborsTransformer",
    "sklearn.neighbors.LocalOutlierFactor",
    "sklearn.pipeline.make_pipeline",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors_pipeline.test_lof_novelty_true": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.neighbors.KNeighborsTransformer",
    "sklearn.neighbors.LocalOutlierFactor",
    "sklearn.pipeline.make_pipeline",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors_pipeline.test_spectral_clustering": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "sklearn.cluster.SpectralClustering",
    "sklearn.datasets.make_blobs",
    "sklearn.neighbors.KNeighborsTransformer",
    "sklearn.pipeline.make_pipeline",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors_pipeline.test_spectral_embedding": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.datasets.make_blobs",
    "sklearn.manifold.SpectralEmbedding",
    "sklearn.neighbors.KNeighborsTransformer",
    "sklearn.pipeline.make_pipeline",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors_pipeline.test_tsne": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "int",
    "numpy.random.RandomState",
    "sklearn.manifold.TSNE",
    "sklearn.neighbors.KNeighborsTransformer",
    "sklearn.pipeline.make_pipeline",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors_tree": {
  "data": {
   "symbols_in_volume": [
    "dict",
    "list",
    "numpy.dot",
    "numpy.random.RandomState",
    "sklearn.neighbors.tests.test_neighbors_tree.DIMENSION",
    "sklearn.neighbors.tests.test_neighbors_tree.METRICS",
    "sklearn.neighbors.tests.test_neighbors_tree.V_mahalanobis",
    "sklearn.neighbors.tests.test_neighbors_tree.rng"
   ]
  },
  "type": "module"
 },
 "sklearn.neighbors.tests.test_neighbors_tree.BALL_TREE_METRICS": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "sklearn.neighbors.tests.test_neighbors_tree.BallTree": {
  "data": {
   "shadows": "sklearn.neighbors._ball_tree.BallTree"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_neighbors_tree.DIMENSION": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "sklearn.neighbors.tests.test_neighbors_tree.DTYPE": {
  "data": {
   "shadows": "sklearn.neighbors._ball_tree.DTYPE"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_neighbors_tree.DistanceMetric": {
  "data": {
   "shadows": "sklearn.neighbors.DistanceMetric"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_neighbors_tree.ITYPE": {
  "data": {
   "shadows": "sklearn.neighbors._ball_tree.ITYPE"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_neighbors_tree.KDTree": {
  "data": {
   "shadows": "sklearn.neighbors._kd_tree.KDTree"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_neighbors_tree.KD_TREE_METRICS": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "sklearn.neighbors.tests.test_neighbors_tree.METRICS": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "sklearn.neighbors.tests.test_neighbors_tree.NeighborsHeapBT": {
  "data": {
   "shadows": "sklearn.neighbors._ball_tree.NeighborsHeap"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_neighbors_tree.NeighborsHeapKDT": {
  "data": {
   "shadows": "sklearn.neighbors._kd_tree.NeighborsHeap"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_neighbors_tree.V_mahalanobis": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "sklearn.neighbors.tests.test_neighbors_tree.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_neighbors_tree.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_neighbors_tree.brute_force_neighbors": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.argsort",
    "sklearn.neighbors.DistanceMetric.get_metric"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors_tree.check_random_state": {
  "data": {
   "shadows": "sklearn.utils.check_random_state"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_neighbors_tree.compute_kernel_slow": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "ValueError",
    "numpy.cos",
    "numpy.exp",
    "numpy.pi",
    "numpy.sqrt",
    "sklearn.neighbors._ball_tree.kernel_norm"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors_tree.dist_func": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors_tree.gaussian_kde": {
  "data": {
   "shadows": "scipy.stats.gaussian_kde"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_neighbors_tree.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_neighbors_tree.kernel_norm": {
  "data": {
   "shadows": "sklearn.neighbors._ball_tree.kernel_norm"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_neighbors_tree.nodeheap_sort_bt": {
  "data": {
   "shadows": "sklearn.neighbors._ball_tree.nodeheap_sort"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_neighbors_tree.nodeheap_sort_kdt": {
  "data": {
   "shadows": "sklearn.neighbors._kd_tree.nodeheap_sort"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_neighbors_tree.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_neighbors_tree.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_neighbors_tree.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_neighbors_tree.rng": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "sklearn.neighbors.tests.test_neighbors_tree.simultaneous_sort_bt": {
  "data": {
   "shadows": "sklearn.neighbors._ball_tree.simultaneous_sort"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_neighbors_tree.simultaneous_sort_kdt": {
  "data": {
   "shadows": "sklearn.neighbors._kd_tree.simultaneous_sort"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_neighbors_tree.test_gaussian_kde": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "Cls",
    "numpy.linspace",
    "numpy.std",
    "numpy.testing.assert_array_almost_equal",
    "scipy.stats.gaussian_kde",
    "sklearn.neighbors._ball_tree.BallTree",
    "sklearn.neighbors._kd_tree.KDTree",
    "sklearn.neighbors.tests.test_neighbors_tree.pytest",
    "sklearn.neighbors.tests.test_neighbors_tree.rng",
    "sklearn.utils.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors_tree.test_kernel_density": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "Cls",
    "max",
    "numpy.testing.assert_allclose",
    "sklearn.neighbors._ball_tree.BallTree",
    "sklearn.neighbors._kd_tree.KDTree",
    "sklearn.neighbors.tests.test_neighbors_tree.compute_kernel_slow",
    "sklearn.neighbors.tests.test_neighbors_tree.pytest",
    "sklearn.neighbors.tests.test_neighbors_tree.rng",
    "sklearn.utils.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors_tree.test_neighbor_tree_query_radius": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "Cls",
    "float",
    "numpy.linspace",
    "numpy.sqrt",
    "numpy.testing.assert_array_almost_equal",
    "numpy.where",
    "numpy.zeros",
    "sklearn.neighbors._ball_tree.BallTree",
    "sklearn.neighbors._kd_tree.KDTree",
    "sklearn.neighbors.tests.test_neighbors_tree.pytest",
    "sklearn.neighbors.tests.test_neighbors_tree.rng",
    "sklearn.utils.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors_tree.test_neighbor_tree_query_radius_distance": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "Cls",
    "float",
    "numpy.linspace",
    "numpy.sqrt",
    "numpy.testing.assert_array_almost_equal",
    "numpy.zeros",
    "sklearn.neighbors._ball_tree.BallTree",
    "sklearn.neighbors._kd_tree.KDTree",
    "sklearn.neighbors.tests.test_neighbors_tree.pytest",
    "sklearn.neighbors.tests.test_neighbors_tree.rng",
    "sklearn.utils.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors_tree.test_neighbor_tree_two_point": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "Cls",
    "numpy.linspace",
    "numpy.testing.assert_array_almost_equal",
    "sklearn.neighbors.DistanceMetric.get_metric",
    "sklearn.neighbors._ball_tree.BallTree",
    "sklearn.neighbors._kd_tree.KDTree",
    "sklearn.neighbors.tests.test_neighbors_tree.pytest",
    "sklearn.neighbors.tests.test_neighbors_tree.rng",
    "sklearn.utils.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors_tree.test_neighbors_heap": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.argsort",
    "numpy.testing.assert_array_almost_equal",
    "range",
    "sklearn.neighbors._ball_tree.DTYPE",
    "sklearn.neighbors._ball_tree.ITYPE",
    "sklearn.neighbors._ball_tree.NeighborsHeap",
    "sklearn.neighbors._kd_tree.NeighborsHeap",
    "sklearn.neighbors.tests.test_neighbors_tree.pytest",
    "sklearn.neighbors.tests.test_neighbors_tree.rng",
    "sklearn.utils.check_random_state",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors_tree.test_nn_tree_query": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "Cls",
    "numpy.testing.assert_array_almost_equal",
    "sklearn.neighbors._ball_tree.BallTree",
    "sklearn.neighbors._kd_tree.KDTree",
    "sklearn.neighbors.tests.test_neighbors_tree.BALL_TREE_METRICS",
    "sklearn.neighbors.tests.test_neighbors_tree.DIMENSION",
    "sklearn.neighbors.tests.test_neighbors_tree.KD_TREE_METRICS",
    "sklearn.neighbors.tests.test_neighbors_tree.METRICS",
    "sklearn.neighbors.tests.test_neighbors_tree.brute_force_neighbors",
    "sklearn.neighbors.tests.test_neighbors_tree.itertools",
    "sklearn.neighbors.tests.test_neighbors_tree.pytest",
    "sklearn.neighbors.tests.test_neighbors_tree.rng",
    "sklearn.utils.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors_tree.test_node_heap": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "numpy.argsort",
    "numpy.testing.assert_array_almost_equal",
    "sklearn.neighbors._ball_tree.DTYPE",
    "sklearn.neighbors._ball_tree.nodeheap_sort",
    "sklearn.neighbors._kd_tree.nodeheap_sort",
    "sklearn.neighbors.tests.test_neighbors_tree.pytest",
    "sklearn.neighbors.tests.test_neighbors_tree.rng",
    "sklearn.utils.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors_tree.test_pickle": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "Cls",
    "hasattr",
    "isinstance",
    "numpy.testing.assert_array_almost_equal",
    "sklearn.neighbors._ball_tree.BallTree",
    "sklearn.neighbors._kd_tree.KDTree",
    "sklearn.neighbors.tests.test_neighbors_tree.dist_func",
    "sklearn.neighbors.tests.test_neighbors_tree.pickle",
    "sklearn.neighbors.tests.test_neighbors_tree.pytest",
    "sklearn.neighbors.tests.test_neighbors_tree.rng",
    "sklearn.utils.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors_tree.test_simultaneous_sort": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.argsort",
    "numpy.testing.assert_array_almost_equal",
    "numpy.zeros",
    "sklearn.neighbors._ball_tree.DTYPE",
    "sklearn.neighbors._ball_tree.ITYPE",
    "sklearn.neighbors._ball_tree.simultaneous_sort",
    "sklearn.neighbors._kd_tree.simultaneous_sort",
    "sklearn.neighbors.tests.test_neighbors_tree.pytest",
    "sklearn.neighbors.tests.test_neighbors_tree.rng",
    "sklearn.utils.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_quad_tree": {
  "data": {},
  "type": "module"
 },
 "sklearn.neighbors.tests.test_quad_tree._QuadTree": {
  "data": {
   "shadows": "sklearn.neighbors._quad_tree._QuadTree"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_quad_tree.check_random_state": {
  "data": {
   "shadows": "sklearn.utils.check_random_state"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_quad_tree.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_quad_tree.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_quad_tree.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_quad_tree.test_qt_insert_duplicate": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "enumerate",
    "numpy.r_",
    "sklearn.neighbors._quad_tree._QuadTree",
    "sklearn.neighbors.tests.test_quad_tree.pytest",
    "sklearn.utils.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_quad_tree.test_quad_tree_pickle": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "sklearn.neighbors._quad_tree._QuadTree",
    "sklearn.neighbors.tests.test_quad_tree.pickle",
    "sklearn.neighbors.tests.test_quad_tree.pytest",
    "sklearn.utils.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_quad_tree.test_quadtree_boundary_computation": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.float32",
    "sklearn.neighbors._quad_tree._QuadTree"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_quad_tree.test_quadtree_similar_point": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.float32",
    "sklearn.neighbors._quad_tree._QuadTree"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_quad_tree.test_summarize": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.float32",
    "numpy.isclose",
    "range",
    "sklearn.neighbors._quad_tree._QuadTree"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network": {
  "data": {},
  "type": "module"
 },
 "sklearn.neural_network.__all__": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "sklearn.neural_network._base": {
  "data": {
   "symbols_in_volume": [
    "sklearn.neural_network._base.binary_log_loss",
    "sklearn.neural_network._base.inplace_identity",
    "sklearn.neural_network._base.inplace_identity_derivative",
    "sklearn.neural_network._base.inplace_logistic",
    "sklearn.neural_network._base.inplace_logistic_derivative",
    "sklearn.neural_network._base.inplace_relu",
    "sklearn.neural_network._base.inplace_relu_derivative",
    "sklearn.neural_network._base.inplace_softmax",
    "sklearn.neural_network._base.inplace_tanh",
    "sklearn.neural_network._base.inplace_tanh_derivative",
    "sklearn.neural_network._base.log_loss",
    "sklearn.neural_network._base.squared_loss"
   ]
  },
  "type": "module"
 },
 "sklearn.neural_network._base.ACTIVATIONS": {
  "data": {
   "lineno": 71
  },
  "type": "constant"
 },
 "sklearn.neural_network._base.DERIVATIVES": {
  "data": {
   "lineno": 148
  },
  "type": "constant"
 },
 "sklearn.neural_network._base.LOSS_FUNCTIONS": {
  "data": {
   "lineno": 227
  },
  "type": "constant"
 },
 "sklearn.neural_network._base.binary_log_loss": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "numpy.clip",
    "numpy.finfo",
    "scipy.special.xlogy"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network._base.inplace_identity": {
  "data": {
   "lineno": 13
  },
  "type": "function"
 },
 "sklearn.neural_network._base.inplace_identity_derivative": {
  "data": {
   "lineno": 78
  },
  "type": "function"
 },
 "sklearn.neural_network._base.inplace_logistic": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "scipy.special.expit"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network._base.inplace_logistic_derivative": {
  "data": {
   "lineno": 93
  },
  "type": "function"
 },
 "sklearn.neural_network._base.inplace_relu": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "numpy.maximum"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network._base.inplace_relu_derivative": {
  "data": {
   "lineno": 130
  },
  "type": "function"
 },
 "sklearn.neural_network._base.inplace_softmax": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "numpy.exp",
    "numpy.newaxis"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network._base.inplace_tanh": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "numpy.tanh"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network._base.inplace_tanh_derivative": {
  "data": {
   "lineno": 112
  },
  "type": "function"
 },
 "sklearn.neural_network._base.log_loss": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "numpy.append",
    "numpy.clip",
    "numpy.finfo",
    "scipy.special.xlogy"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network._base.logistic_sigmoid": {
  "data": {
   "shadows": "scipy.special.expit"
  },
  "type": "import"
 },
 "sklearn.neural_network._base.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.neural_network._base.squared_loss": {
  "data": {
   "lineno": 154
  },
  "type": "function"
 },
 "sklearn.neural_network._base.xlogy": {
  "data": {
   "shadows": "scipy.special.xlogy"
  },
  "type": "import"
 },
 "sklearn.neural_network._multilayer_perceptron": {
  "data": {},
  "type": "module"
 },
 "sklearn.neural_network._multilayer_perceptron.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "sklearn.neural_network._multilayer_perceptron.BaseMultilayerPerceptron": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "abc.ABCMeta"
   ]
  },
  "type": "class"
 },
 "sklearn.neural_network._multilayer_perceptron.BaseMultilayerPerceptron.__init__": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network._multilayer_perceptron.BaseMultilayerPerceptron._backprop": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "inplace_derivative",
    "numpy.dot",
    "range",
    "safe_sparse_dot"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network._multilayer_perceptron.BaseMultilayerPerceptron._compute_loss_grad": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "numpy.mean",
    "safe_sparse_dot"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network._multilayer_perceptron.BaseMultilayerPerceptron._fit": {
  "data": {
   "lineno": 349,
   "symbols_in_volume": [
    "ValueError",
    "check_random_state",
    "hasattr",
    "len",
    "list",
    "numpy.any",
    "numpy.array",
    "numpy.empty",
    "sklearn.neural_network._multilayer_perceptron._STOCHASTIC_SOLVERS",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network._multilayer_perceptron.BaseMultilayerPerceptron._fit_lbfgs": {
  "data": {
   "lineno": 460,
   "symbols_in_volume": [
    "_check_optimize_result",
    "range",
    "sklearn.neural_network._multilayer_perceptron._pack"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network._multilayer_perceptron.BaseMultilayerPerceptron._fit_stochastic": {
  "data": {
   "lineno": 504,
   "symbols_in_volume": [
    "AdamOptimizer",
    "KeyboardInterrupt",
    "SGDOptimizer",
    "_safe_indexing",
    "gen_batches",
    "hasattr",
    "int",
    "is_classifier",
    "min",
    "numpy.arange",
    "numpy.clip",
    "print",
    "range",
    "shuffle",
    "sklearn.neural_network._multilayer_perceptron.warnings",
    "train_test_split"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network._multilayer_perceptron.BaseMultilayerPerceptron._forward_pass": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "hidden_activation",
    "output_activation",
    "range",
    "safe_sparse_dot"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network._multilayer_perceptron.BaseMultilayerPerceptron._forward_pass_fast": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "hidden_activation",
    "output_activation",
    "range",
    "safe_sparse_dot"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network._multilayer_perceptron.BaseMultilayerPerceptron._init_coef": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": [
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network._multilayer_perceptron.BaseMultilayerPerceptron._initialize": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": [
    "is_classifier",
    "len",
    "numpy.inf",
    "range",
    "sklearn.neural_network._multilayer_perceptron._STOCHASTIC_SOLVERS"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network._multilayer_perceptron.BaseMultilayerPerceptron._loss_grad_lbfgs": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "sklearn.neural_network._multilayer_perceptron._pack"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network._multilayer_perceptron.BaseMultilayerPerceptron._partial_fit": {
  "data": {
   "lineno": 697
  },
  "type": "function"
 },
 "sklearn.neural_network._multilayer_perceptron.BaseMultilayerPerceptron._unpack": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "numpy.reshape",
    "range"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network._multilayer_perceptron.BaseMultilayerPerceptron._update_no_improvement_count": {
  "data": {
   "lineno": 626,
   "symbols_in_volume": [
    "print"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network._multilayer_perceptron.BaseMultilayerPerceptron._validate_hyperparameters": {
  "data": {
   "lineno": 408,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "isinstance",
    "list",
    "sklearn.neural_network._multilayer_perceptron._STOCHASTIC_SOLVERS",
    "sorted"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network._multilayer_perceptron.BaseMultilayerPerceptron.fit": {
  "data": {
   "lineno": 657
  },
  "type": "function"
 },
 "sklearn.neural_network._multilayer_perceptron.BaseMultilayerPerceptron.partial_fit": {
  "data": {
   "lineno": 675,
   "symbols_in_volume": [
    "AttributeError",
    "property",
    "sklearn.neural_network._multilayer_perceptron._STOCHASTIC_SOLVERS"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network._multilayer_perceptron.MLPClassifier": {
  "data": {
   "lineno": 701,
   "symbols_in_volume": [
    "sklearn.neural_network._multilayer_perceptron.BaseMultilayerPerceptron"
   ]
  },
  "type": "class"
 },
 "sklearn.neural_network._multilayer_perceptron.MLPClassifier.__init__": {
  "data": {
   "lineno": 943,
   "symbols_in_volume": [
    "shuffle",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network._multilayer_perceptron.MLPClassifier._partial_fit": {
  "data": {
   "lineno": 1071,
   "symbols_in_volume": [
    "LabelBinarizer",
    "_check_partial_fit_first_call",
    "super",
    "type_of_target"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network._multilayer_perceptron.MLPClassifier._validate_input": {
  "data": {
   "lineno": 967,
   "symbols_in_volume": [
    "LabelBinarizer",
    "ValueError",
    "bool",
    "column_or_1d",
    "hasattr",
    "len",
    "numpy.float32",
    "numpy.float64",
    "numpy.setdiff1d",
    "set",
    "unique_labels"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network._multilayer_perceptron.MLPClassifier.partial_fit": {
  "data": {
   "lineno": 1041,
   "symbols_in_volume": [
    "AttributeError",
    "property",
    "sklearn.neural_network._multilayer_perceptron._STOCHASTIC_SOLVERS"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network._multilayer_perceptron.MLPClassifier.predict": {
  "data": {
   "lineno": 1020,
   "symbols_in_volume": [
    "check_is_fitted"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network._multilayer_perceptron.MLPClassifier.predict_log_proba": {
  "data": {
   "lineno": 1083,
   "symbols_in_volume": [
    "numpy.log"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network._multilayer_perceptron.MLPClassifier.predict_proba": {
  "data": {
   "lineno": 1101,
   "symbols_in_volume": [
    "check_is_fitted",
    "numpy.vstack"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network._multilayer_perceptron.MLPRegressor": {
  "data": {
   "lineno": 1127,
   "symbols_in_volume": [
    "sklearn.neural_network._multilayer_perceptron.BaseMultilayerPerceptron"
   ]
  },
  "type": "class"
 },
 "sklearn.neural_network._multilayer_perceptron.MLPRegressor.__init__": {
  "data": {
   "lineno": 1370,
   "symbols_in_volume": [
    "shuffle",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network._multilayer_perceptron.MLPRegressor._validate_input": {
  "data": {
   "lineno": 1414,
   "symbols_in_volume": [
    "column_or_1d",
    "numpy.float32",
    "numpy.float64"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network._multilayer_perceptron.MLPRegressor.predict": {
  "data": {
   "lineno": 1395,
   "symbols_in_volume": [
    "check_is_fitted"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network._multilayer_perceptron._STOCHASTIC_SOLVERS": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "sklearn.neural_network._multilayer_perceptron._pack": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "numpy.hstack"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network._multilayer_perceptron.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "sklearn.neural_network._multilayer_perceptron.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.neural_network._multilayer_perceptron.scipy.optimize": {
  "data": {
   "shadows": "scipy.optimize"
  },
  "type": "import"
 },
 "sklearn.neural_network._multilayer_perceptron.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.neural_network._rbm": {
  "data": {},
  "type": "module"
 },
 "sklearn.neural_network._rbm.BernoulliRBM": {
  "data": {
   "lineno": 26
  },
  "type": "class"
 },
 "sklearn.neural_network._rbm.BernoulliRBM.__init__": {
  "data": {
   "lineno": 109
  },
  "type": "function"
 },
 "sklearn.neural_network._rbm.BernoulliRBM._fit": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "float",
    "numpy.asarray",
    "numpy.dot",
    "numpy.floor",
    "safe_sparse_dot"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network._rbm.BernoulliRBM._free_energy": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "numpy.logaddexp",
    "safe_sparse_dot"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network._rbm.BernoulliRBM._mean_hiddens": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "safe_sparse_dot",
    "scipy.special.expit"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network._rbm.BernoulliRBM._more_tags": {
  "data": {
   "lineno": 384
  },
  "type": "function"
 },
 "sklearn.neural_network._rbm.BernoulliRBM._sample_hiddens": {
  "data": {
   "lineno": 155
  },
  "type": "function"
 },
 "sklearn.neural_network._rbm.BernoulliRBM._sample_visibles": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "numpy.dot",
    "scipy.special.expit"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network._rbm.BernoulliRBM.fit": {
  "data": {
   "lineno": 337,
   "symbols_in_volume": [
    "check_random_state",
    "float",
    "gen_even_slices",
    "int",
    "list",
    "numpy.asarray",
    "numpy.ceil",
    "numpy.float32",
    "numpy.float64",
    "numpy.zeros",
    "print",
    "range",
    "sklearn.neural_network._rbm.time",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network._rbm.BernoulliRBM.gibbs": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "check_is_fitted",
    "check_random_state",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network._rbm.BernoulliRBM.partial_fit": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "check_random_state",
    "hasattr",
    "numpy.asarray",
    "numpy.float64",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network._rbm.BernoulliRBM.score_samples": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": [
    "check_array",
    "check_is_fitted",
    "check_random_state",
    "log_logistic",
    "numpy.arange",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.issparse"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network._rbm.BernoulliRBM.transform": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "check_is_fitted",
    "numpy.float32",
    "numpy.float64"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network._rbm.expit": {
  "data": {
   "shadows": "scipy.special.expit"
  },
  "type": "import"
 },
 "sklearn.neural_network._rbm.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.neural_network._rbm.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.neural_network._rbm.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "sklearn.neural_network._stochastic_optimizers": {
  "data": {},
  "type": "module"
 },
 "sklearn.neural_network._stochastic_optimizers.AdamOptimizer": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "sklearn.neural_network._stochastic_optimizers.BaseOptimizer"
   ]
  },
  "type": "class"
 },
 "sklearn.neural_network._stochastic_optimizers.AdamOptimizer.__init__": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "numpy.zeros_like",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network._stochastic_optimizers.AdamOptimizer._get_updates": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "numpy.sqrt",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network._stochastic_optimizers.BaseOptimizer": {
  "data": {
   "lineno": 10
  },
  "type": "class"
 },
 "sklearn.neural_network._stochastic_optimizers.BaseOptimizer.__init__": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "float"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network._stochastic_optimizers.BaseOptimizer.iteration_ends": {
  "data": {
   "lineno": 47
  },
  "type": "function"
 },
 "sklearn.neural_network._stochastic_optimizers.BaseOptimizer.trigger_stopping": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "print"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network._stochastic_optimizers.BaseOptimizer.update_params": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network._stochastic_optimizers.SGDOptimizer": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "sklearn.neural_network._stochastic_optimizers.BaseOptimizer"
   ]
  },
  "type": "class"
 },
 "sklearn.neural_network._stochastic_optimizers.SGDOptimizer.__init__": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "numpy.zeros_like",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network._stochastic_optimizers.SGDOptimizer._get_updates": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network._stochastic_optimizers.SGDOptimizer.iteration_ends": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "float"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network._stochastic_optimizers.SGDOptimizer.trigger_stopping": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "print"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network._stochastic_optimizers.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.neural_network.tests": {
  "data": {},
  "type": "module"
 },
 "sklearn.neural_network.tests.test_base": {
  "data": {},
  "type": "module"
 },
 "sklearn.neural_network.tests.test_base.binary_log_loss": {
  "data": {
   "shadows": "sklearn.neural_network._base.binary_log_loss"
  },
  "type": "import"
 },
 "sklearn.neural_network.tests.test_base.log_loss": {
  "data": {
   "shadows": "sklearn.neural_network._base.log_loss"
  },
  "type": "import"
 },
 "sklearn.neural_network.tests.test_base.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.neural_network.tests.test_base.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.neural_network.tests.test_base.test_binary_log_loss_1_prob_finite": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.isfinite",
    "sklearn.neural_network._base.binary_log_loss"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network.tests.test_base.test_log_loss_1_prob_finite": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.isfinite",
    "sklearn.neural_network._base.log_loss",
    "sklearn.neural_network.tests.test_base.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network.tests.test_mlp": {
  "data": {
   "symbols_in_volume": [
    "sklearn.datasets.load_digits",
    "sklearn.datasets.load_iris",
    "sklearn.datasets.make_regression",
    "sklearn.neural_network.tests.test_mlp.X_digits_binary",
    "sklearn.neural_network.tests.test_mlp.X_digits_multi",
    "sklearn.neural_network.tests.test_mlp.iris",
    "sklearn.neural_network.tests.test_mlp.y_digits_binary",
    "sklearn.neural_network.tests.test_mlp.y_digits_multi",
    "sklearn.neural_network.tests.test_mlp.y_reg",
    "sklearn.preprocessing.MinMaxScaler",
    "sklearn.preprocessing.scale"
   ]
  },
  "type": "module"
 },
 "sklearn.neural_network.tests.test_mlp.ACTIVATION_TYPES": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "sklearn.neural_network.tests.test_mlp.ConvergenceWarning": {
  "data": {
   "shadows": "sklearn.exceptions.ConvergenceWarning"
  },
  "type": "import"
 },
 "sklearn.neural_network.tests.test_mlp.LabelBinarizer": {
  "data": {
   "shadows": "sklearn.preprocessing.LabelBinarizer"
  },
  "type": "import"
 },
 "sklearn.neural_network.tests.test_mlp.MLPClassifier": {
  "data": {
   "shadows": "sklearn.neural_network.MLPClassifier"
  },
  "type": "import"
 },
 "sklearn.neural_network.tests.test_mlp.MLPRegressor": {
  "data": {
   "shadows": "sklearn.neural_network.MLPRegressor"
  },
  "type": "import"
 },
 "sklearn.neural_network.tests.test_mlp.MinMaxScaler": {
  "data": {
   "shadows": "sklearn.preprocessing.MinMaxScaler"
  },
  "type": "import"
 },
 "sklearn.neural_network.tests.test_mlp.StringIO": {
  "data": {
   "shadows": "io.StringIO"
  },
  "type": "import"
 },
 "sklearn.neural_network.tests.test_mlp.X_digits_binary": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "sklearn.neural_network.tests.test_mlp.X_digits_multi": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "sklearn.neural_network.tests.test_mlp.X_iris": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "sklearn.neural_network.tests.test_mlp.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "sklearn.neural_network.tests.test_mlp.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "sklearn.neural_network.tests.test_mlp.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.neural_network.tests.test_mlp.classification_datasets": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "sklearn.neural_network.tests.test_mlp.csr_matrix": {
  "data": {
   "shadows": "scipy.sparse.csr_matrix"
  },
  "type": "import"
 },
 "sklearn.neural_network.tests.test_mlp.ignore_warnings": {
  "data": {
   "shadows": "sklearn.utils._testing.ignore_warnings"
  },
  "type": "import"
 },
 "sklearn.neural_network.tests.test_mlp.iris": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "sklearn.neural_network.tests.test_mlp.load_digits": {
  "data": {
   "shadows": "sklearn.datasets.load_digits"
  },
  "type": "import"
 },
 "sklearn.neural_network.tests.test_mlp.load_iris": {
  "data": {
   "shadows": "sklearn.datasets.load_iris"
  },
  "type": "import"
 },
 "sklearn.neural_network.tests.test_mlp.make_multilabel_classification": {
  "data": {
   "shadows": "sklearn.datasets.make_multilabel_classification"
  },
  "type": "import"
 },
 "sklearn.neural_network.tests.test_mlp.make_regression": {
  "data": {
   "shadows": "sklearn.datasets.make_regression"
  },
  "type": "import"
 },
 "sklearn.neural_network.tests.test_mlp.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.neural_network.tests.test_mlp.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.neural_network.tests.test_mlp.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "sklearn.neural_network.tests.test_mlp.regression_datasets": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "sklearn.neural_network.tests.test_mlp.roc_auc_score": {
  "data": {
   "shadows": "sklearn.metrics.roc_auc_score"
  },
  "type": "import"
 },
 "sklearn.neural_network.tests.test_mlp.scale": {
  "data": {
   "shadows": "sklearn.preprocessing.scale"
  },
  "type": "import"
 },
 "sklearn.neural_network.tests.test_mlp.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "sklearn.neural_network.tests.test_mlp.test_adaptive_learning_rate": {
  "data": {
   "lineno": 629,
   "symbols_in_volume": [
    "clf",
    "clf._optimizer.learning_rate",
    "clf.fit",
    "clf.max_iter",
    "clf.n_iter_",
    "sklearn.neural_network.MLPClassifier"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network.tests.test_mlp.test_alpha": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "absolute_sum",
    "len",
    "numpy.abs",
    "numpy.arange",
    "numpy.array",
    "numpy.sum",
    "range",
    "sklearn.exceptions.ConvergenceWarning",
    "sklearn.neural_network.MLPClassifier",
    "sklearn.neural_network.tests.test_mlp.X_digits_binary",
    "sklearn.neural_network.tests.test_mlp.y_digits_binary",
    "sklearn.utils._testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network.tests.test_mlp.test_early_stopping": {
  "data": {
   "lineno": 613,
   "symbols_in_volume": [
    "clf",
    "clf.best_validation_score_",
    "clf.fit",
    "clf.max_iter",
    "clf.n_iter_",
    "clf.validation_scores_",
    "max",
    "sklearn.neural_network.MLPClassifier",
    "sklearn.neural_network.tests.test_mlp.X_digits_binary",
    "sklearn.neural_network.tests.test_mlp.y_digits_binary"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network.tests.test_mlp.test_early_stopping_stratified": {
  "data": {
   "lineno": 727,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.neural_network.MLPClassifier",
    "sklearn.neural_network.tests.test_mlp.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network.tests.test_mlp.test_fit": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.inf",
    "numpy.testing.assert_almost_equal",
    "numpy.zeros_like",
    "sklearn.neural_network.MLPClassifier"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network.tests.test_mlp.test_gradient": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "loss_grad_fun",
    "numpy.arange",
    "numpy.empty",
    "numpy.eye",
    "numpy.hstack",
    "numpy.mod",
    "numpy.random.RandomState",
    "numpy.size",
    "numpy.testing.assert_almost_equal",
    "numpy.zeros",
    "range",
    "sklearn.neural_network.MLPClassifier",
    "sklearn.neural_network.tests.test_mlp.ACTIVATION_TYPES",
    "sklearn.preprocessing.LabelBinarizer"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network.tests.test_mlp.test_gradient.loss_grad_fun": {
  "data": {
   "lineno": 217
  },
  "type": "function"
 },
 "sklearn.neural_network.tests.test_mlp.test_lbfgs_classification": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "sklearn.neural_network.MLPClassifier",
    "sklearn.neural_network.tests.test_mlp.ACTIVATION_TYPES",
    "sklearn.neural_network.tests.test_mlp.classification_datasets",
    "sklearn.neural_network.tests.test_mlp.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network.tests.test_mlp.test_lbfgs_classification_maxfun": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "sklearn.exceptions.ConvergenceWarning",
    "sklearn.neural_network.MLPClassifier",
    "sklearn.neural_network.tests.test_mlp.ACTIVATION_TYPES",
    "sklearn.neural_network.tests.test_mlp.classification_datasets",
    "sklearn.neural_network.tests.test_mlp.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network.tests.test_mlp.test_lbfgs_regression": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "sklearn.neural_network.MLPRegressor",
    "sklearn.neural_network.tests.test_mlp.ACTIVATION_TYPES",
    "sklearn.neural_network.tests.test_mlp.pytest",
    "sklearn.neural_network.tests.test_mlp.regression_datasets"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network.tests.test_mlp.test_lbfgs_regression_maxfun": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.exceptions.ConvergenceWarning",
    "sklearn.neural_network.MLPRegressor",
    "sklearn.neural_network.tests.test_mlp.ACTIVATION_TYPES",
    "sklearn.neural_network.tests.test_mlp.pytest",
    "sklearn.neural_network.tests.test_mlp.regression_datasets"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network.tests.test_mlp.test_learning_rate_warmstart": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "pow",
    "sklearn.exceptions.ConvergenceWarning",
    "sklearn.neural_network.MLPClassifier",
    "sklearn.utils._testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network.tests.test_mlp.test_mlp_classifier_dtypes_casting": {
  "data": {
   "lineno": 739,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal",
    "sklearn.neural_network.MLPClassifier"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network.tests.test_mlp.test_mlp_param_dtypes": {
  "data": {
   "lineno": 775,
   "symbols_in_volume": [
    "Estimator",
    "all",
    "numpy.float32",
    "numpy.float64",
    "sklearn.neural_network.MLPClassifier",
    "sklearn.neural_network.MLPRegressor",
    "sklearn.neural_network.tests.test_mlp.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network.tests.test_mlp.test_mlp_regressor_dtypes_casting": {
  "data": {
   "lineno": 759,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.testing.assert_allclose",
    "sklearn.neural_network.MLPRegressor"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network.tests.test_mlp.test_multilabel_classification": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": [
    "range",
    "sklearn.datasets.make_multilabel_classification",
    "sklearn.neural_network.MLPClassifier"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network.tests.test_mlp.test_multioutput_regression": {
  "data": {
   "lineno": 351,
   "symbols_in_volume": [
    "sklearn.datasets.make_regression",
    "sklearn.neural_network.MLPRegressor"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network.tests.test_mlp.test_n_iter_no_change": {
  "data": {
   "lineno": 683,
   "symbols_in_volume": [
    "clf",
    "clf._no_improvement_count",
    "clf.fit",
    "clf.n_iter_",
    "sklearn.neural_network.MLPClassifier",
    "sklearn.neural_network.tests.test_mlp.X_digits_binary",
    "sklearn.neural_network.tests.test_mlp.y_digits_binary"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network.tests.test_mlp.test_n_iter_no_change_inf": {
  "data": {
   "lineno": 702,
   "symbols_in_volume": [
    "clf",
    "clf._no_improvement_count",
    "clf.fit",
    "clf.n_iter_",
    "numpy.inf",
    "sklearn.exceptions.ConvergenceWarning",
    "sklearn.neural_network.MLPClassifier",
    "sklearn.neural_network.tests.test_mlp.X_digits_binary",
    "sklearn.neural_network.tests.test_mlp.y_digits_binary",
    "sklearn.utils._testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network.tests.test_mlp.test_params_errors": {
  "data": {
   "lineno": 440,
   "symbols_in_volume": [
    "ValueError",
    "clf",
    "sklearn.neural_network.MLPClassifier",
    "sklearn.neural_network.tests.test_mlp.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network.tests.test_mlp.test_partial_fit_classes_error": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.neural_network.MLPClassifier",
    "sklearn.neural_network.tests.test_mlp.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network.tests.test_mlp.test_partial_fit_classification": {
  "data": {
   "lineno": 370,
   "symbols_in_volume": [
    "numpy.testing.assert_array_equal",
    "numpy.unique",
    "range",
    "sklearn.exceptions.ConvergenceWarning",
    "sklearn.neural_network.MLPClassifier",
    "sklearn.neural_network.tests.test_mlp.classification_datasets",
    "sklearn.utils._testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network.tests.test_mlp.test_partial_fit_errors": {
  "data": {
   "lineno": 427,
   "symbols_in_volume": [
    "ValueError",
    "hasattr",
    "sklearn.neural_network.MLPClassifier",
    "sklearn.neural_network.tests.test_mlp.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network.tests.test_mlp.test_partial_fit_regression": {
  "data": {
   "lineno": 401,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose",
    "range",
    "sklearn.neural_network.MLPRegressor",
    "sklearn.neural_network.tests.test_mlp.warnings",
    "sklearn.neural_network.tests.test_mlp.y_reg"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network.tests.test_mlp.test_partial_fit_unseen_classes": {
  "data": {
   "lineno": 390,
   "symbols_in_volume": [
    "sklearn.neural_network.MLPClassifier"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network.tests.test_mlp.test_predict_proba_binary": {
  "data": {
   "lineno": 473,
   "symbols_in_volume": [
    "clf",
    "clf.fit",
    "clf.predict_log_proba",
    "clf.predict_proba",
    "numpy.log",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal",
    "sklearn.exceptions.ConvergenceWarning",
    "sklearn.metrics.roc_auc_score",
    "sklearn.neural_network.MLPClassifier",
    "sklearn.neural_network.tests.test_mlp.X_digits_binary",
    "sklearn.neural_network.tests.test_mlp.y_digits_binary",
    "sklearn.utils._testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network.tests.test_mlp.test_predict_proba_multiclass": {
  "data": {
   "lineno": 497,
   "symbols_in_volume": [
    "clf",
    "clf.fit",
    "clf.predict_log_proba",
    "clf.predict_proba",
    "numpy.log",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal",
    "numpy.unique",
    "sklearn.exceptions.ConvergenceWarning",
    "sklearn.neural_network.MLPClassifier",
    "sklearn.neural_network.tests.test_mlp.X_digits_multi",
    "sklearn.neural_network.tests.test_mlp.y_digits_multi",
    "sklearn.utils._testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network.tests.test_mlp.test_predict_proba_multilabel": {
  "data": {
   "lineno": 518,
   "symbols_in_volume": [
    "clf",
    "clf.fit",
    "clf.predict_log_proba",
    "clf.predict_proba",
    "numpy.log",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal",
    "sklearn.datasets.make_multilabel_classification",
    "sklearn.neural_network.MLPClassifier"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network.tests.test_mlp.test_shuffle": {
  "data": {
   "lineno": 542,
   "symbols_in_volume": [
    "numpy.array_equal",
    "sklearn.datasets.make_regression",
    "sklearn.neural_network.MLPRegressor"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network.tests.test_mlp.test_sparse_matrices": {
  "data": {
   "lineno": 569,
   "symbols_in_volume": [
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_array_equal",
    "scipy.sparse.csr_matrix",
    "sklearn.neural_network.MLPClassifier",
    "sklearn.neural_network.tests.test_mlp.X_digits_binary",
    "sklearn.neural_network.tests.test_mlp.y_digits_binary"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network.tests.test_mlp.test_tolerance": {
  "data": {
   "lineno": 586,
   "symbols_in_volume": [
    "clf",
    "clf.fit",
    "clf.max_iter",
    "clf.n_iter_",
    "sklearn.neural_network.MLPClassifier"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network.tests.test_mlp.test_verbose_sgd": {
  "data": {
   "lineno": 596,
   "symbols_in_volume": [
    "clf",
    "clf.fit",
    "clf.partial_fit",
    "io.StringIO",
    "sklearn.exceptions.ConvergenceWarning",
    "sklearn.neural_network.MLPClassifier",
    "sklearn.neural_network.tests.test_mlp.sys",
    "sklearn.utils._testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network.tests.test_mlp.test_warm_start": {
  "data": {
   "lineno": 639,
   "symbols_in_volume": [
    "RuntimeWarning",
    "ValueError",
    "clf",
    "clf.fit",
    "numpy.array",
    "numpy.unique",
    "sklearn.neural_network.MLPClassifier",
    "sklearn.neural_network.tests.test_mlp.X_iris",
    "sklearn.neural_network.tests.test_mlp.pytest",
    "sklearn.neural_network.tests.test_mlp.re",
    "sklearn.neural_network.tests.test_mlp.y_iris",
    "sklearn.utils._testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network.tests.test_mlp.test_warm_start_full_iteration": {
  "data": {
   "lineno": 666,
   "symbols_in_volume": [
    "MLPEstimator",
    "clf",
    "clf.fit",
    "clf.n_iter_",
    "sklearn.neural_network.MLPClassifier",
    "sklearn.neural_network.MLPRegressor",
    "sklearn.neural_network.tests.test_mlp.X_iris",
    "sklearn.neural_network.tests.test_mlp.pytest",
    "sklearn.neural_network.tests.test_mlp.y_iris"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network.tests.test_mlp.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.neural_network.tests.test_mlp.y_digits_binary": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "sklearn.neural_network.tests.test_mlp.y_digits_multi": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "sklearn.neural_network.tests.test_mlp.y_iris": {
  "data": {
   "lineno": 57
  },
  "type": "constant"
 },
 "sklearn.neural_network.tests.test_mlp.y_reg": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "sklearn.neural_network.tests.test_rbm": {
  "data": {
   "symbols_in_volume": [
    "sklearn.datasets.load_digits"
   ]
  },
  "type": "module"
 },
 "sklearn.neural_network.tests.test_rbm.BernoulliRBM": {
  "data": {
   "shadows": "sklearn.neural_network.BernoulliRBM"
  },
  "type": "import"
 },
 "sklearn.neural_network.tests.test_rbm.StringIO": {
  "data": {
   "shadows": "io.StringIO"
  },
  "type": "import"
 },
 "sklearn.neural_network.tests.test_rbm.assert_all_finite": {
  "data": {
   "shadows": "sklearn.utils.validation.assert_all_finite"
  },
  "type": "import"
 },
 "sklearn.neural_network.tests.test_rbm.assert_allclose": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_allclose"
  },
  "type": "import"
 },
 "sklearn.neural_network.tests.test_rbm.assert_almost_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_almost_equal"
  },
  "type": "import"
 },
 "sklearn.neural_network.tests.test_rbm.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.neural_network.tests.test_rbm.csc_matrix": {
  "data": {
   "shadows": "scipy.sparse.csc_matrix"
  },
  "type": "import"
 },
 "sklearn.neural_network.tests.test_rbm.csr_matrix": {
  "data": {
   "shadows": "scipy.sparse.csr_matrix"
  },
  "type": "import"
 },
 "sklearn.neural_network.tests.test_rbm.lil_matrix": {
  "data": {
   "shadows": "scipy.sparse.lil_matrix"
  },
  "type": "import"
 },
 "sklearn.neural_network.tests.test_rbm.load_digits": {
  "data": {
   "shadows": "sklearn.datasets.load_digits"
  },
  "type": "import"
 },
 "sklearn.neural_network.tests.test_rbm.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.neural_network.tests.test_rbm.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.neural_network.tests.test_rbm.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "sklearn.neural_network.tests.test_rbm.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "sklearn.neural_network.tests.test_rbm.test_convergence_dtype_consistency": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.float64",
    "sklearn.neural_network.BernoulliRBM",
    "sklearn.utils._testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network.tests.test_rbm.test_fit": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "sklearn.neural_network.BernoulliRBM",
    "sklearn.utils._testing.assert_almost_equal",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network.tests.test_rbm.test_fit_gibbs": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.random.RandomState",
    "sklearn.neural_network.BernoulliRBM",
    "sklearn.utils._testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network.tests.test_rbm.test_fit_gibbs_sparse": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.random.RandomState",
    "scipy.sparse.csc_matrix",
    "sklearn.neural_network.BernoulliRBM",
    "sklearn.neural_network.tests.test_rbm.test_fit_gibbs",
    "sklearn.utils._testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network.tests.test_rbm.test_gibbs_smoke": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "numpy.all",
    "sklearn.neural_network.BernoulliRBM",
    "sklearn.utils.validation.assert_all_finite"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network.tests.test_rbm.test_partial_fit": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "float",
    "int",
    "numpy.array_split",
    "numpy.ceil",
    "range",
    "sklearn.neural_network.BernoulliRBM",
    "sklearn.utils._testing.assert_almost_equal",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network.tests.test_rbm.test_rbm_verbose": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "io.StringIO",
    "sklearn.neural_network.BernoulliRBM",
    "sklearn.neural_network.tests.test_rbm.sys"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network.tests.test_rbm.test_sample_hiddens": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "numpy.mean",
    "numpy.random.RandomState",
    "range",
    "sklearn.neural_network.BernoulliRBM",
    "sklearn.utils._testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network.tests.test_rbm.test_score_samples": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.errstate",
    "numpy.ones",
    "numpy.random.RandomState",
    "numpy.vstack",
    "numpy.zeros",
    "scipy.sparse.lil_matrix",
    "sklearn.neural_network.BernoulliRBM",
    "sklearn.utils._testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network.tests.test_rbm.test_small_sparse": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "scipy.sparse.csr_matrix",
    "sklearn.neural_network.BernoulliRBM"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network.tests.test_rbm.test_small_sparse_partial_fit": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "sklearn.neural_network.BernoulliRBM",
    "sklearn.utils._testing.assert_almost_equal",
    "sparse"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network.tests.test_rbm.test_sparse_and_verbose": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "io.StringIO",
    "scipy.sparse.csc_matrix",
    "sklearn.neural_network.BernoulliRBM",
    "sklearn.neural_network.tests.test_rbm.re",
    "sklearn.neural_network.tests.test_rbm.sys"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network.tests.test_rbm.test_transform": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "sklearn.neural_network.BernoulliRBM",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network.tests.test_rbm.test_transformer_dtypes_casting": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "int",
    "numpy.float32",
    "numpy.float64",
    "sklearn.neural_network.BernoulliRBM",
    "sklearn.neural_network.tests.test_rbm.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network.tests.test_stochastic_optimizers": {
  "data": {},
  "type": "module"
 },
 "sklearn.neural_network.tests.test_stochastic_optimizers.AdamOptimizer": {
  "data": {
   "shadows": "sklearn.neural_network._stochastic_optimizers.AdamOptimizer"
  },
  "type": "import"
 },
 "sklearn.neural_network.tests.test_stochastic_optimizers.BaseOptimizer": {
  "data": {
   "shadows": "sklearn.neural_network._stochastic_optimizers.BaseOptimizer"
  },
  "type": "import"
 },
 "sklearn.neural_network.tests.test_stochastic_optimizers.SGDOptimizer": {
  "data": {
   "shadows": "sklearn.neural_network._stochastic_optimizers.SGDOptimizer"
  },
  "type": "import"
 },
 "sklearn.neural_network.tests.test_stochastic_optimizers.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.neural_network.tests.test_stochastic_optimizers.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.neural_network.tests.test_stochastic_optimizers.shapes": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "sklearn.neural_network.tests.test_stochastic_optimizers.test_adam_optimizer": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.random.random",
    "numpy.sqrt",
    "numpy.zeros",
    "sklearn.neural_network._stochastic_optimizers.AdamOptimizer",
    "sklearn.neural_network.tests.test_stochastic_optimizers.shapes",
    "sklearn.utils._testing.assert_array_equal",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network.tests.test_stochastic_optimizers.test_base_optimizer": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "numpy.zeros",
    "range",
    "sklearn.neural_network._stochastic_optimizers.BaseOptimizer",
    "sklearn.neural_network.tests.test_stochastic_optimizers.shapes"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network.tests.test_stochastic_optimizers.test_sgd_optimizer_momentum": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.random.random",
    "numpy.zeros",
    "sklearn.neural_network._stochastic_optimizers.SGDOptimizer",
    "sklearn.neural_network.tests.test_stochastic_optimizers.shapes",
    "sklearn.utils._testing.assert_array_equal",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network.tests.test_stochastic_optimizers.test_sgd_optimizer_nesterovs_momentum": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.random.random",
    "numpy.zeros",
    "sklearn.neural_network._stochastic_optimizers.SGDOptimizer",
    "sklearn.neural_network.tests.test_stochastic_optimizers.shapes",
    "sklearn.utils._testing.assert_array_equal",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network.tests.test_stochastic_optimizers.test_sgd_optimizer_no_momentum": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "numpy.random.random",
    "numpy.zeros",
    "range",
    "sklearn.neural_network._stochastic_optimizers.SGDOptimizer",
    "sklearn.neural_network.tests.test_stochastic_optimizers.shapes",
    "sklearn.utils._testing.assert_array_equal",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network.tests.test_stochastic_optimizers.test_sgd_optimizer_trigger_stopping": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "numpy.zeros",
    "sklearn.neural_network._stochastic_optimizers.SGDOptimizer",
    "sklearn.neural_network.tests.test_stochastic_optimizers.shapes"
   ]
  },
  "type": "function"
 },
 "sklearn.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "sklearn.pipeline": {
  "data": {},
  "type": "module"
 },
 "sklearn.pipeline.FeatureUnion": {
  "data": {
   "lineno": 777
  },
  "type": "class"
 },
 "sklearn.pipeline.FeatureUnion.__init__": {
  "data": {
   "lineno": 839
  },
  "type": "function"
 },
 "sklearn.pipeline.FeatureUnion._hstack": {
  "data": {
   "lineno": 1033,
   "symbols_in_volume": [
    "any",
    "numpy.hstack",
    "scipy.sparse.hstack",
    "scipy.sparse.issparse"
   ]
  },
  "type": "function"
 },
 "sklearn.pipeline.FeatureUnion._iter": {
  "data": {
   "lineno": 910,
   "symbols_in_volume": [
    "get_weight"
   ]
  },
  "type": "function"
 },
 "sklearn.pipeline.FeatureUnion._log_message": {
  "data": {
   "lineno": 990
  },
  "type": "function"
 },
 "sklearn.pipeline.FeatureUnion._parallel_func": {
  "data": {
   "lineno": 995,
   "symbols_in_volume": [
    "delayed",
    "enumerate",
    "joblib.Parallel",
    "len",
    "list"
   ]
  },
  "type": "function"
 },
 "sklearn.pipeline.FeatureUnion._sk_visual_block_": {
  "data": {
   "lineno": 1051,
   "symbols_in_volume": [
    "_VisualBlock",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.pipeline.FeatureUnion._update_transformer_list": {
  "data": {
   "lineno": 1040,
   "symbols_in_volume": [
    "iter",
    "next"
   ]
  },
  "type": "function"
 },
 "sklearn.pipeline.FeatureUnion._validate_transformer_weights": {
  "data": {
   "lineno": 898,
   "symbols_in_volume": [
    "ValueError",
    "set"
   ]
  },
  "type": "function"
 },
 "sklearn.pipeline.FeatureUnion._validate_transformers": {
  "data": {
   "lineno": 882,
   "symbols_in_volume": [
    "TypeError",
    "hasattr",
    "type",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.pipeline.FeatureUnion.fit": {
  "data": {
   "lineno": 938,
   "symbols_in_volume": [
    "sklearn.pipeline._fit_one"
   ]
  },
  "type": "function"
 },
 "sklearn.pipeline.FeatureUnion.fit_transform": {
  "data": {
   "lineno": 962,
   "symbols_in_volume": [
    "numpy.zeros",
    "sklearn.pipeline._fit_transform_one",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.pipeline.FeatureUnion.get_feature_names": {
  "data": {
   "lineno": 920,
   "symbols_in_volume": [
    "AttributeError",
    "hasattr",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.pipeline.FeatureUnion.get_params": {
  "data": {
   "lineno": 848
  },
  "type": "function"
 },
 "sklearn.pipeline.FeatureUnion.n_features_in_": {
  "data": {
   "lineno": 1046,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.pipeline.FeatureUnion.set_params": {
  "data": {
   "lineno": 868
  },
  "type": "function"
 },
 "sklearn.pipeline.FeatureUnion.transform": {
  "data": {
   "lineno": 1009,
   "symbols_in_volume": [
    "delayed",
    "joblib.Parallel",
    "numpy.zeros",
    "sklearn.pipeline._transform_one"
   ]
  },
  "type": "function"
 },
 "sklearn.pipeline.Parallel": {
  "data": {
   "shadows": "joblib.Parallel"
  },
  "type": "import"
 },
 "sklearn.pipeline.Pipeline": {
  "data": {
   "lineno": 37
  },
  "type": "class"
 },
 "sklearn.pipeline.Pipeline.__getitem__": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "isinstance",
    "slice"
   ]
  },
  "type": "function"
 },
 "sklearn.pipeline.Pipeline.__init__": {
  "data": {
   "lineno": 113
  },
  "type": "function"
 },
 "sklearn.pipeline.Pipeline.__len__": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "sklearn.pipeline.Pipeline._check_fit_params": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "sklearn.pipeline.Pipeline._estimator_type": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.pipeline.Pipeline._final_estimator": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.pipeline.Pipeline._fit": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "_print_elapsed_time",
    "check_memory",
    "clone",
    "fit_transform_one_cached",
    "hasattr",
    "list"
   ]
  },
  "type": "function"
 },
 "sklearn.pipeline.Pipeline._inverse_transform": {
  "data": {
   "lineno": 587,
   "symbols_in_volume": [
    "list",
    "reversed"
   ]
  },
  "type": "function"
 },
 "sklearn.pipeline.Pipeline._iter": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "enumerate",
    "itertools.islice",
    "len"
   ]
  },
  "type": "function"
 },
 "sklearn.pipeline.Pipeline._log_message": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "sklearn.pipeline.Pipeline._more_tags": {
  "data": {
   "lineno": 628,
   "symbols_in_volume": [
    "_safe_tags"
   ]
  },
  "type": "function"
 },
 "sklearn.pipeline.Pipeline._pairwise": {
  "data": {
   "lineno": 634,
   "symbols_in_volume": [
    "deprecated",
    "getattr",
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.pipeline.Pipeline._sk_visual_block_": {
  "data": {
   "lineno": 646,
   "symbols_in_volume": [
    "_VisualBlock",
    "_get_name",
    "str",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.pipeline.Pipeline._sk_visual_block_._get_name": {
  "data": {
   "lineno": 649
  },
  "type": "function"
 },
 "sklearn.pipeline.Pipeline._transform": {
  "data": {
   "lineno": 557
  },
  "type": "function"
 },
 "sklearn.pipeline.Pipeline._validate_steps": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "TypeError",
    "hasattr",
    "type",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.pipeline.Pipeline.classes_": {
  "data": {
   "lineno": 624,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.pipeline.Pipeline.decision_function": {
  "data": {
   "lineno": 477,
   "symbols_in_volume": [
    "if_delegate_has_method"
   ]
  },
  "type": "function"
 },
 "sklearn.pipeline.Pipeline.fit": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": [
    "_print_elapsed_time",
    "len"
   ]
  },
  "type": "function"
 },
 "sklearn.pipeline.Pipeline.fit_predict": {
  "data": {
   "lineno": 421,
   "symbols_in_volume": [
    "_print_elapsed_time",
    "if_delegate_has_method",
    "len"
   ]
  },
  "type": "function"
 },
 "sklearn.pipeline.Pipeline.fit_transform": {
  "data": {
   "lineno": 350,
   "symbols_in_volume": [
    "_print_elapsed_time",
    "hasattr",
    "len"
   ]
  },
  "type": "function"
 },
 "sklearn.pipeline.Pipeline.get_params": {
  "data": {
   "lineno": 120
  },
  "type": "function"
 },
 "sklearn.pipeline.Pipeline.inverse_transform": {
  "data": {
   "lineno": 563,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.pipeline.Pipeline.n_features_in_": {
  "data": {
   "lineno": 641,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.pipeline.Pipeline.named_steps": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "Bunch",
    "dict",
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.pipeline.Pipeline.predict": {
  "data": {
   "lineno": 392,
   "symbols_in_volume": [
    "if_delegate_has_method"
   ]
  },
  "type": "function"
 },
 "sklearn.pipeline.Pipeline.predict_log_proba": {
  "data": {
   "lineno": 515,
   "symbols_in_volume": [
    "if_delegate_has_method"
   ]
  },
  "type": "function"
 },
 "sklearn.pipeline.Pipeline.predict_proba": {
  "data": {
   "lineno": 458,
   "symbols_in_volume": [
    "if_delegate_has_method"
   ]
  },
  "type": "function"
 },
 "sklearn.pipeline.Pipeline.score": {
  "data": {
   "lineno": 594,
   "symbols_in_volume": [
    "if_delegate_has_method"
   ]
  },
  "type": "function"
 },
 "sklearn.pipeline.Pipeline.score_samples": {
  "data": {
   "lineno": 496,
   "symbols_in_volume": [
    "if_delegate_has_method"
   ]
  },
  "type": "function"
 },
 "sklearn.pipeline.Pipeline.set_params": {
  "data": {
   "lineno": 139
  },
  "type": "function"
 },
 "sklearn.pipeline.Pipeline.transform": {
  "data": {
   "lineno": 534,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.pipeline.__all__": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "sklearn.pipeline._fit_one": {
  "data": {
   "lineno": 763,
   "symbols_in_volume": [
    "_print_elapsed_time"
   ]
  },
  "type": "function"
 },
 "sklearn.pipeline._fit_transform_one": {
  "data": {
   "lineno": 740,
   "symbols_in_volume": [
    "_print_elapsed_time",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "sklearn.pipeline._name_estimators": {
  "data": {
   "lineno": 662,
   "symbols_in_volume": [
    "collections.defaultdict",
    "int",
    "isinstance",
    "len",
    "list",
    "range",
    "reversed",
    "str",
    "type",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.pipeline._transform_one": {
  "data": {
   "lineno": 732
  },
  "type": "function"
 },
 "sklearn.pipeline.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "sklearn.pipeline.islice": {
  "data": {
   "shadows": "itertools.islice"
  },
  "type": "import"
 },
 "sklearn.pipeline.make_pipeline": {
  "data": {
   "lineno": 687,
   "symbols_in_volume": [
    "sklearn.pipeline.Pipeline",
    "sklearn.pipeline._name_estimators"
   ]
  },
  "type": "function"
 },
 "sklearn.pipeline.make_union": {
  "data": {
   "lineno": 1056,
   "symbols_in_volume": [
    "sklearn.pipeline.FeatureUnion",
    "sklearn.pipeline._name_estimators"
   ]
  },
  "type": "function"
 },
 "sklearn.pipeline.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.pipeline.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.preprocessing": {
  "data": {},
  "type": "module"
 },
 "sklearn.preprocessing.__all__": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "sklearn.preprocessing._data": {
  "data": {},
  "type": "module"
 },
 "sklearn.preprocessing._data.BOUNDS_THRESHOLD": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "sklearn.preprocessing._data.Binarizer": {
  "data": {
   "lineno": 2101
  },
  "type": "class"
 },
 "sklearn.preprocessing._data.Binarizer.__init__": {
  "data": {
   "lineno": 2155
  },
  "type": "function"
 },
 "sklearn.preprocessing._data.Binarizer._more_tags": {
  "data": {
   "lineno": 2207
  },
  "type": "function"
 },
 "sklearn.preprocessing._data.Binarizer.fit": {
  "data": {
   "lineno": 2160
  },
  "type": "function"
 },
 "sklearn.preprocessing._data.Binarizer.transform": {
  "data": {
   "lineno": 2182,
   "symbols_in_volume": [
    "sklearn.preprocessing._data.binarize"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing._data.KernelCenterer": {
  "data": {
   "lineno": 2211
  },
  "type": "class"
 },
 "sklearn.preprocessing._data.KernelCenterer.__init__": {
  "data": {
   "lineno": 2251
  },
  "type": "function"
 },
 "sklearn.preprocessing._data.KernelCenterer._more_tags": {
  "data": {
   "lineno": 2312
  },
  "type": "function"
 },
 "sklearn.preprocessing._data.KernelCenterer._pairwise": {
  "data": {
   "lineno": 2317,
   "symbols_in_volume": [
    "deprecated",
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing._data.KernelCenterer.fit": {
  "data": {
   "lineno": 2255,
   "symbols_in_volume": [
    "ValueError",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing._data.KernelCenterer.transform": {
  "data": {
   "lineno": 2284,
   "symbols_in_volume": [
    "check_is_fitted",
    "numpy.newaxis",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing._data.MaxAbsScaler": {
  "data": {
   "lineno": 944
  },
  "type": "class"
 },
 "sklearn.preprocessing._data.MaxAbsScaler.__init__": {
  "data": {
   "lineno": 1005
  },
  "type": "function"
 },
 "sklearn.preprocessing._data.MaxAbsScaler._more_tags": {
  "data": {
   "lineno": 1136
  },
  "type": "function"
 },
 "sklearn.preprocessing._data.MaxAbsScaler._reset": {
  "data": {
   "lineno": 1009,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing._data.MaxAbsScaler.fit": {
  "data": {
   "lineno": 1022
  },
  "type": "function"
 },
 "sklearn.preprocessing._data.MaxAbsScaler.inverse_transform": {
  "data": {
   "lineno": 1112,
   "symbols_in_volume": [
    "check_array",
    "check_is_fitted",
    "inplace_column_scale",
    "scipy.sparse.issparse"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing._data.MaxAbsScaler.partial_fit": {
  "data": {
   "lineno": 1043,
   "symbols_in_volume": [
    "hasattr",
    "min_max_axis",
    "numpy.abs",
    "numpy.maximum",
    "numpy.nanmax",
    "scipy.sparse.issparse",
    "sklearn.preprocessing._data._handle_zeros_in_scale"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing._data.MaxAbsScaler.transform": {
  "data": {
   "lineno": 1087,
   "symbols_in_volume": [
    "check_is_fitted",
    "inplace_column_scale",
    "scipy.sparse.issparse"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing._data.MinMaxScaler": {
  "data": {
   "lineno": 220
  },
  "type": "class"
 },
 "sklearn.preprocessing._data.MinMaxScaler.__init__": {
  "data": {
   "lineno": 321
  },
  "type": "function"
 },
 "sklearn.preprocessing._data.MinMaxScaler._more_tags": {
  "data": {
   "lineno": 465
  },
  "type": "function"
 },
 "sklearn.preprocessing._data.MinMaxScaler._reset": {
  "data": {
   "lineno": 327,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing._data.MinMaxScaler.fit": {
  "data": {
   "lineno": 343
  },
  "type": "function"
 },
 "sklearn.preprocessing._data.MinMaxScaler.inverse_transform": {
  "data": {
   "lineno": 443,
   "symbols_in_volume": [
    "check_array",
    "check_is_fitted"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing._data.MinMaxScaler.partial_fit": {
  "data": {
   "lineno": 365,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "hasattr",
    "numpy.maximum",
    "numpy.minimum",
    "numpy.nanmax",
    "numpy.nanmin",
    "scipy.sparse.issparse",
    "sklearn.preprocessing._data._handle_zeros_in_scale",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing._data.MinMaxScaler.transform": {
  "data": {
   "lineno": 419,
   "symbols_in_volume": [
    "check_is_fitted",
    "numpy.clip"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing._data.Normalizer": {
  "data": {
   "lineno": 1940
  },
  "type": "class"
 },
 "sklearn.preprocessing._data.Normalizer.__init__": {
  "data": {
   "lineno": 1999
  },
  "type": "function"
 },
 "sklearn.preprocessing._data.Normalizer._more_tags": {
  "data": {
   "lineno": 2047
  },
  "type": "function"
 },
 "sklearn.preprocessing._data.Normalizer.fit": {
  "data": {
   "lineno": 2004
  },
  "type": "function"
 },
 "sklearn.preprocessing._data.Normalizer.transform": {
  "data": {
   "lineno": 2026,
   "symbols_in_volume": [
    "sklearn.preprocessing._data.normalize"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing._data.PolynomialFeatures": {
  "data": {
   "lineno": 1558
  },
  "type": "class"
 },
 "sklearn.preprocessing._data.PolynomialFeatures.__init__": {
  "data": {
   "lineno": 1629
  },
  "type": "function"
 },
 "sklearn.preprocessing._data.PolynomialFeatures._combinations": {
  "data": {
   "lineno": 1637,
   "symbols_in_volume": [
    "comb",
    "int",
    "itertools.chain.from_iterable",
    "itertools.combinations",
    "itertools.combinations_with_replacement",
    "range",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing._data.PolynomialFeatures.fit": {
  "data": {
   "lineno": 1683,
   "symbols_in_volume": [
    "itertools.combinations",
    "sum"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing._data.PolynomialFeatures.get_feature_names": {
  "data": {
   "lineno": 1654,
   "symbols_in_volume": [
    "len",
    "numpy.where",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing._data.PolynomialFeatures.powers_": {
  "data": {
   "lineno": 1644,
   "symbols_in_volume": [
    "check_is_fitted",
    "itertools.combinations",
    "numpy.bincount",
    "numpy.vstack",
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing._data.PolynomialFeatures.transform": {
  "data": {
   "lineno": 1710,
   "symbols_in_volume": [
    "ValueError",
    "_csr_polynomial_expansion",
    "check_is_fitted",
    "comb",
    "itertools.combinations",
    "list",
    "numpy.empty",
    "numpy.multiply",
    "numpy.ones",
    "range",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.hstack",
    "scipy.sparse.isspmatrix",
    "scipy.sparse.isspmatrix_csc",
    "scipy.sparse.isspmatrix_csr"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing._data.PowerTransformer": {
  "data": {
   "lineno": 2935
  },
  "type": "class"
 },
 "sklearn.preprocessing._data.PowerTransformer.__init__": {
  "data": {
   "lineno": 3018
  },
  "type": "function"
 },
 "sklearn.preprocessing._data.PowerTransformer._box_cox_inverse_tranform": {
  "data": {
   "lineno": 3154,
   "symbols_in_volume": [
    "numpy.exp"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing._data.PowerTransformer._box_cox_optimize": {
  "data": {
   "lineno": 3209,
   "symbols_in_volume": [
    "numpy.isnan",
    "scipy.stats.boxcox"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing._data.PowerTransformer._check_input": {
  "data": {
   "lineno": 3245,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.nanmin",
    "numpy.warnings.catch_warnings",
    "numpy.warnings.filterwarnings"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing._data.PowerTransformer._fit": {
  "data": {
   "lineno": 3049,
   "symbols_in_volume": [
    "enumerate",
    "numpy.array",
    "numpy.errstate",
    "optim_function",
    "scipy.special.boxcox",
    "sklearn.preprocessing._data.StandardScaler",
    "transform_function"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing._data.PowerTransformer._more_tags": {
  "data": {
   "lineno": 3292
  },
  "type": "function"
 },
 "sklearn.preprocessing._data.PowerTransformer._yeo_johnson_inverse_transform": {
  "data": {
   "lineno": 3165,
   "symbols_in_volume": [
    "abs",
    "numpy.exp",
    "numpy.power",
    "numpy.spacing",
    "numpy.zeros_like"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing._data.PowerTransformer._yeo_johnson_optimize": {
  "data": {
   "lineno": 3221,
   "symbols_in_volume": [
    "numpy.isnan",
    "scipy.optimize.brent"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing._data.PowerTransformer._yeo_johnson_optimize._neg_log_likelihood": {
  "data": {
   "lineno": 3228,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.log",
    "numpy.log1p",
    "numpy.sign"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing._data.PowerTransformer._yeo_johnson_transform": {
  "data": {
   "lineno": 3187,
   "symbols_in_volume": [
    "abs",
    "numpy.log1p",
    "numpy.power",
    "numpy.spacing",
    "numpy.zeros_like"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing._data.PowerTransformer.fit": {
  "data": {
   "lineno": 3024
  },
  "type": "function"
 },
 "sklearn.preprocessing._data.PowerTransformer.fit_transform": {
  "data": {
   "lineno": 3046
  },
  "type": "function"
 },
 "sklearn.preprocessing._data.PowerTransformer.inverse_transform": {
  "data": {
   "lineno": 3108,
   "symbols_in_volume": [
    "check_is_fitted",
    "enumerate",
    "inv_fun",
    "numpy.errstate"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing._data.PowerTransformer.transform": {
  "data": {
   "lineno": 3079,
   "symbols_in_volume": [
    "check_is_fitted",
    "enumerate",
    "numpy.errstate",
    "scipy.special.boxcox",
    "transform_function"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing._data.QuantileTransformer": {
  "data": {
   "lineno": 2381
  },
  "type": "class"
 },
 "sklearn.preprocessing._data.QuantileTransformer.__init__": {
  "data": {
   "lineno": 2480,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing._data.QuantileTransformer._check_inputs": {
  "data": {
   "lineno": 2696,
   "symbols_in_volume": [
    "ValueError",
    "numpy.any",
    "numpy.errstate",
    "scipy.sparse.issparse"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing._data.QuantileTransformer._dense_fit": {
  "data": {
   "lineno": 2491,
   "symbols_in_volume": [
    "numpy.maximum.accumulate",
    "numpy.nanpercentile",
    "numpy.transpose",
    "sklearn.preprocessing._data.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing._data.QuantileTransformer._more_tags": {
  "data": {
   "lineno": 2795
  },
  "type": "function"
 },
 "sklearn.preprocessing._data.QuantileTransformer._sparse_fit": {
  "data": {
   "lineno": 2521,
   "symbols_in_volume": [
    "len",
    "numpy.maximum.accumulate",
    "numpy.nanpercentile",
    "numpy.transpose",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing._data.QuantileTransformer._transform": {
  "data": {
   "lineno": 2719,
   "symbols_in_volume": [
    "range",
    "scipy.sparse.issparse",
    "slice"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing._data.QuantileTransformer._transform_col": {
  "data": {
   "lineno": 2627,
   "symbols_in_volume": [
    "numpy.clip",
    "numpy.errstate",
    "numpy.interp",
    "numpy.isnan",
    "numpy.spacing",
    "scipy.stats.norm.cdf",
    "scipy.stats.norm.ppf",
    "sklearn.preprocessing._data.BOUNDS_THRESHOLD"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing._data.QuantileTransformer.fit": {
  "data": {
   "lineno": 2570,
   "symbols_in_volume": [
    "ValueError",
    "check_random_state",
    "max",
    "min",
    "numpy.linspace",
    "scipy.sparse.issparse",
    "sklearn.preprocessing._data.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing._data.QuantileTransformer.inverse_transform": {
  "data": {
   "lineno": 2773,
   "symbols_in_volume": [
    "check_is_fitted"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing._data.QuantileTransformer.transform": {
  "data": {
   "lineno": 2752,
   "symbols_in_volume": [
    "check_is_fitted"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing._data.RobustScaler": {
  "data": {
   "lineno": 1218
  },
  "type": "class"
 },
 "sklearn.preprocessing._data.RobustScaler.__init__": {
  "data": {
   "lineno": 1316
  },
  "type": "function"
 },
 "sklearn.preprocessing._data.RobustScaler._more_tags": {
  "data": {
   "lineno": 1446
  },
  "type": "function"
 },
 "sklearn.preprocessing._data.RobustScaler.fit": {
  "data": {
   "lineno": 1325,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.nanmedian",
    "numpy.nanpercentile",
    "numpy.transpose",
    "numpy.zeros",
    "range",
    "scipy.sparse.issparse",
    "scipy.stats.norm.ppf",
    "sklearn.preprocessing._data._handle_zeros_in_scale",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing._data.RobustScaler.inverse_transform": {
  "data": {
   "lineno": 1418,
   "symbols_in_volume": [
    "check_array",
    "check_is_fitted",
    "inplace_column_scale",
    "scipy.sparse.issparse"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing._data.RobustScaler.transform": {
  "data": {
   "lineno": 1389,
   "symbols_in_volume": [
    "check_is_fitted",
    "inplace_column_scale",
    "scipy.sparse.issparse"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing._data.StandardScaler": {
  "data": {
   "lineno": 564
  },
  "type": "class"
 },
 "sklearn.preprocessing._data.StandardScaler.__init__": {
  "data": {
   "lineno": 681
  },
  "type": "function"
 },
 "sklearn.preprocessing._data.StandardScaler._more_tags": {
  "data": {
   "lineno": 939,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.float64"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing._data.StandardScaler._reset": {
  "data": {
   "lineno": 687,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing._data.StandardScaler.fit": {
  "data": {
   "lineno": 701
  },
  "type": "function"
 },
 "sklearn.preprocessing._data.StandardScaler.inverse_transform": {
  "data": {
   "lineno": 899,
   "symbols_in_volume": [
    "ValueError",
    "check_is_fitted",
    "inplace_column_scale",
    "numpy.asarray",
    "scipy.sparse.issparse",
    "scipy.sparse.isspmatrix_csr"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing._data.StandardScaler.partial_fit": {
  "data": {
   "lineno": 729,
   "symbols_in_volume": [
    "ValueError",
    "_check_sample_weight",
    "_incremental_mean_and_var",
    "_incremental_weighted_mean_and_var",
    "hasattr",
    "incr_mean_variance_axis",
    "mean_variance_axis",
    "numpy.float64",
    "numpy.int64",
    "numpy.isnan",
    "numpy.ptp",
    "numpy.repeat",
    "numpy.size",
    "numpy.sqrt",
    "numpy.sum",
    "numpy.zeros",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.issparse",
    "sklearn.preprocessing._data._handle_zeros_in_scale",
    "sparse_constructor"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing._data.StandardScaler.transform": {
  "data": {
   "lineno": 862,
   "symbols_in_volume": [
    "ValueError",
    "check_is_fitted",
    "inplace_column_scale",
    "scipy.sparse.issparse"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing._data.__all__": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "sklearn.preprocessing._data._handle_zeros_in_scale": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "isinstance",
    "numpy.isscalar",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing._data.add_dummy_feature": {
  "data": {
   "lineno": 2324,
   "symbols_in_volume": [
    "check_array",
    "klass",
    "numpy.arange",
    "numpy.array",
    "numpy.concatenate",
    "numpy.full",
    "numpy.hstack",
    "numpy.zeros",
    "scipy.sparse.coo_matrix",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.issparse",
    "scipy.sparse.isspmatrix_coo",
    "scipy.sparse.isspmatrix_csc"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing._data.binarize": {
  "data": {
   "lineno": 2051,
   "symbols_in_volume": [
    "ValueError",
    "check_array",
    "numpy.logical_not",
    "scipy.sparse.issparse"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing._data.boxcox": {
  "data": {
   "shadows": "scipy.special.boxcox"
  },
  "type": "import"
 },
 "sklearn.preprocessing._data.chain": {
  "data": {
   "shadows": "itertools.chain"
  },
  "type": "import"
 },
 "sklearn.preprocessing._data.combinations": {
  "data": {
   "shadows": "itertools.combinations"
  },
  "type": "import"
 },
 "sklearn.preprocessing._data.combinations_w_r": {
  "data": {
   "shadows": "itertools.combinations_with_replacement"
  },
  "type": "import"
 },
 "sklearn.preprocessing._data.maxabs_scale": {
  "data": {
   "lineno": 1140,
   "symbols_in_volume": [
    "check_array",
    "sklearn.preprocessing._data.MaxAbsScaler"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing._data.minmax_scale": {
  "data": {
   "lineno": 469,
   "symbols_in_volume": [
    "check_array",
    "sklearn.preprocessing._data.MinMaxScaler"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing._data.normalize": {
  "data": {
   "lineno": 1840,
   "symbols_in_volume": [
    "NotImplementedError",
    "ValueError",
    "abs",
    "check_array",
    "inplace_csr_row_normalize_l1",
    "inplace_csr_row_normalize_l2",
    "min_max_axis",
    "numpy.abs",
    "numpy.diff",
    "numpy.max",
    "numpy.maximum",
    "numpy.newaxis",
    "row_norms",
    "scipy.sparse.issparse",
    "sklearn.preprocessing._data._handle_zeros_in_scale"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing._data.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.preprocessing._data.optimize": {
  "data": {
   "shadows": "scipy.optimize"
  },
  "type": "import"
 },
 "sklearn.preprocessing._data.power_transform": {
  "data": {
   "lineno": 3296,
   "symbols_in_volume": [
    "sklearn.preprocessing._data.PowerTransformer"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing._data.quantile_transform": {
  "data": {
   "lineno": 2799,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "sklearn.preprocessing._data.QuantileTransformer"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing._data.robust_scale": {
  "data": {
   "lineno": 1450,
   "symbols_in_volume": [
    "check_array",
    "sklearn.preprocessing._data.RobustScaler"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing._data.scale": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "ValueError",
    "check_array",
    "inplace_column_scale",
    "mean_variance_axis",
    "numpy.allclose",
    "numpy.asarray",
    "numpy.nanmean",
    "numpy.nanstd",
    "numpy.rollaxis",
    "numpy.sqrt",
    "scipy.sparse.issparse",
    "sklearn.preprocessing._data._handle_zeros_in_scale",
    "sklearn.preprocessing._data.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing._data.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.preprocessing._data.stats": {
  "data": {
   "shadows": "scipy.stats"
  },
  "type": "import"
 },
 "sklearn.preprocessing._data.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.preprocessing._discretization": {
  "data": {},
  "type": "module"
 },
 "sklearn.preprocessing._discretization.KBinsDiscretizer": {
  "data": {
   "lineno": 21
  },
  "type": "class"
 },
 "sklearn.preprocessing._discretization.KBinsDiscretizer.__init__": {
  "data": {
   "lineno": 128
  },
  "type": "function"
 },
 "sklearn.preprocessing._discretization.KBinsDiscretizer._validate_n_bins": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "ValueError",
    "check_array",
    "int",
    "isinstance",
    "numpy.full",
    "numpy.where",
    "sklearn.preprocessing._discretization.KBinsDiscretizer",
    "sklearn.preprocessing._discretization.numbers",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing._discretization.KBinsDiscretizer.fit": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "KMeans",
    "OneHotEncoder",
    "ValueError",
    "len",
    "numpy.arange",
    "numpy.array",
    "numpy.asarray",
    "numpy.ediff1d",
    "numpy.float32",
    "numpy.float64",
    "numpy.inf",
    "numpy.linspace",
    "numpy.percentile",
    "numpy.r_",
    "numpy.zeros",
    "object",
    "range",
    "sklearn.preprocessing._discretization.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing._discretization.KBinsDiscretizer.inverse_transform": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": [
    "ValueError",
    "check_array",
    "check_is_fitted",
    "numpy.float32",
    "numpy.float64",
    "numpy.int_",
    "range"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing._discretization.KBinsDiscretizer.transform": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "check_is_fitted",
    "numpy.abs",
    "numpy.clip",
    "numpy.digitize",
    "numpy.float32",
    "numpy.float64",
    "range"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing._discretization.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.preprocessing._discretization.numbers": {
  "data": {
   "shadows": "numbers"
  },
  "type": "import"
 },
 "sklearn.preprocessing._discretization.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.preprocessing._encoders": {
  "data": {},
  "type": "module"
 },
 "sklearn.preprocessing._encoders.OneHotEncoder": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "sklearn.preprocessing._encoders._BaseEncoder"
   ]
  },
  "type": "class"
 },
 "sklearn.preprocessing._encoders.OneHotEncoder.__init__": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": [
    "numpy.float64",
    "scipy.sparse"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing._encoders.OneHotEncoder._compute_drop_idx": {
  "data": {
   "lineno": 338,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "any",
    "enumerate",
    "is_scalar_nan",
    "isinstance",
    "len",
    "numpy.array",
    "numpy.asarray",
    "numpy.where",
    "numpy.zeros",
    "object",
    "str",
    "type",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing._encoders.OneHotEncoder._validate_keywords": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing._encoders.OneHotEncoder.fit": {
  "data": {
   "lineno": 399
  },
  "type": "function"
 },
 "sklearn.preprocessing._encoders.OneHotEncoder.fit_transform": {
  "data": {
   "lineno": 422,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing._encoders.OneHotEncoder.get_feature_names": {
  "data": {
   "lineno": 602,
   "symbols_in_volume": [
    "ValueError",
    "check_is_fitted",
    "len",
    "numpy.array",
    "object",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing._encoders.OneHotEncoder.inverse_transform": {
  "data": {
   "lineno": 507,
   "symbols_in_volume": [
    "ValueError",
    "check_array",
    "check_is_fitted",
    "len",
    "numpy.asarray",
    "numpy.delete",
    "numpy.empty",
    "numpy.find_common_type",
    "numpy.flatnonzero",
    "object",
    "range",
    "sum",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing._encoders.OneHotEncoder.transform": {
  "data": {
   "lineno": 445,
   "symbols_in_volume": [
    "check_is_fitted",
    "enumerate",
    "int",
    "len",
    "numpy.cumsum",
    "numpy.empty",
    "numpy.ones",
    "numpy.sum",
    "scipy.sparse.csr_matrix"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing._encoders.OrdinalEncoder": {
  "data": {
   "lineno": 638,
   "symbols_in_volume": [
    "sklearn.preprocessing._encoders._BaseEncoder"
   ]
  },
  "type": "class"
 },
 "sklearn.preprocessing._encoders.OrdinalEncoder.__init__": {
  "data": {
   "lineno": 718,
   "symbols_in_volume": [
    "numpy.float64"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing._encoders.OrdinalEncoder.fit": {
  "data": {
   "lineno": 726,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "is_scalar_nan",
    "isinstance",
    "len",
    "numpy.dtype",
    "sklearn.preprocessing._encoders.numbers"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing._encoders.OrdinalEncoder.inverse_transform": {
  "data": {
   "lineno": 795,
   "symbols_in_volume": [
    "ValueError",
    "check_array",
    "check_is_fitted",
    "len",
    "numpy.empty",
    "numpy.find_common_type",
    "numpy.where",
    "object",
    "range"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing._encoders.OrdinalEncoder.transform": {
  "data": {
   "lineno": 773
  },
  "type": "function"
 },
 "sklearn.preprocessing._encoders._BaseEncoder": {
  "data": {
   "lineno": 23
  },
  "type": "class"
 },
 "sklearn.preprocessing._encoders._BaseEncoder._check_X": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "check_array",
    "getattr",
    "hasattr",
    "numpy.issubdtype",
    "numpy.str_",
    "object",
    "range"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing._encoders._BaseEncoder._fit": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "ValueError",
    "_check_unknown",
    "_unique",
    "len",
    "numpy.any",
    "numpy.array",
    "numpy.isnan",
    "numpy.sort",
    "range"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing._encoders._BaseEncoder._get_feature": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing._encoders._BaseEncoder._more_tags": {
  "data": {
   "lineno": 158
  },
  "type": "function"
 },
 "sklearn.preprocessing._encoders._BaseEncoder._transform": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "ValueError",
    "_check_unknown",
    "_encode",
    "bool",
    "int",
    "len",
    "numpy.all",
    "numpy.ones",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing._encoders.__all__": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "sklearn.preprocessing._encoders.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.preprocessing._encoders.numbers": {
  "data": {
   "shadows": "numbers"
  },
  "type": "import"
 },
 "sklearn.preprocessing._encoders.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.preprocessing._function_transformer": {
  "data": {},
  "type": "module"
 },
 "sklearn.preprocessing._function_transformer.FunctionTransformer": {
  "data": {
   "lineno": 14
  },
  "type": "class"
 },
 "sklearn.preprocessing._function_transformer.FunctionTransformer.__init__": {
  "data": {
   "lineno": 87
  },
  "type": "function"
 },
 "sklearn.preprocessing._function_transformer.FunctionTransformer._check_input": {
  "data": {
   "lineno": 99
  },
  "type": "function"
 },
 "sklearn.preprocessing._function_transformer.FunctionTransformer._check_inverse_transform": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "UserWarning",
    "_allclose_dense_sparse",
    "max",
    "sklearn.preprocessing._function_transformer.warnings",
    "slice"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing._function_transformer.FunctionTransformer._more_tags": {
  "data": {
   "lineno": 173
  },
  "type": "function"
 },
 "sklearn.preprocessing._function_transformer.FunctionTransformer._transform": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "func",
    "sklearn.preprocessing._function_transformer._identity"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing._function_transformer.FunctionTransformer.fit": {
  "data": {
   "lineno": 114
  },
  "type": "function"
 },
 "sklearn.preprocessing._function_transformer.FunctionTransformer.inverse_transform": {
  "data": {
   "lineno": 149
  },
  "type": "function"
 },
 "sklearn.preprocessing._function_transformer.FunctionTransformer.transform": {
  "data": {
   "lineno": 134
  },
  "type": "function"
 },
 "sklearn.preprocessing._function_transformer._identity": {
  "data": {
   "lineno": 8
  },
  "type": "function"
 },
 "sklearn.preprocessing._function_transformer.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.preprocessing._label": {
  "data": {},
  "type": "module"
 },
 "sklearn.preprocessing._label.LabelBinarizer": {
  "data": {
   "lineno": 169
  },
  "type": "class"
 },
 "sklearn.preprocessing._label.LabelBinarizer.__init__": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing._label.LabelBinarizer._more_tags": {
  "data": {
   "lineno": 405
  },
  "type": "function"
 },
 "sklearn.preprocessing._label.LabelBinarizer.fit": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": [
    "ValueError",
    "_num_samples",
    "scipy.sparse.issparse",
    "type_of_target",
    "unique_labels"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing._label.LabelBinarizer.fit_transform": {
  "data": {
   "lineno": 300
  },
  "type": "function"
 },
 "sklearn.preprocessing._label.LabelBinarizer.inverse_transform": {
  "data": {
   "lineno": 355,
   "symbols_in_volume": [
    "check_is_fitted",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.issparse",
    "sklearn.preprocessing._label._inverse_binarize_multiclass",
    "sklearn.preprocessing._label._inverse_binarize_thresholding"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing._label.LabelBinarizer.transform": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": [
    "ValueError",
    "check_is_fitted",
    "sklearn.preprocessing._label.label_binarize",
    "type_of_target"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing._label.LabelEncoder": {
  "data": {
   "lineno": 38
  },
  "type": "class"
 },
 "sklearn.preprocessing._label.LabelEncoder._more_tags": {
  "data": {
   "lineno": 165
  },
  "type": "function"
 },
 "sklearn.preprocessing._label.LabelEncoder.fit": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "_unique",
    "column_or_1d"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing._label.LabelEncoder.fit_transform": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "_unique",
    "column_or_1d"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing._label.LabelEncoder.inverse_transform": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "ValueError",
    "_num_samples",
    "check_is_fitted",
    "column_or_1d",
    "len",
    "numpy.arange",
    "numpy.array",
    "numpy.asarray",
    "numpy.setdiff1d",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing._label.LabelEncoder.transform": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "_encode",
    "_num_samples",
    "check_is_fitted",
    "column_or_1d",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing._label.MultiLabelBinarizer": {
  "data": {
   "lineno": 660
  },
  "type": "class"
 },
 "sklearn.preprocessing._label.MultiLabelBinarizer.__init__": {
  "data": {
   "lineno": 723
  },
  "type": "function"
 },
 "sklearn.preprocessing._label.MultiLabelBinarizer._build_cache": {
  "data": {
   "lineno": 826,
   "symbols_in_volume": [
    "dict",
    "len",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing._label.MultiLabelBinarizer._more_tags": {
  "data": {
   "lineno": 901
  },
  "type": "function"
 },
 "sklearn.preprocessing._label.MultiLabelBinarizer._transform": {
  "data": {
   "lineno": 833,
   "symbols_in_volume": [
    "KeyError",
    "int",
    "len",
    "numpy.ones",
    "scipy.sparse.csr_matrix",
    "set",
    "sklearn.preprocessing._label.array",
    "sklearn.preprocessing._label.warnings",
    "sorted",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing._label.MultiLabelBinarizer.fit": {
  "data": {
   "lineno": 728,
   "symbols_in_volume": [
    "ValueError",
    "all",
    "int",
    "isinstance",
    "len",
    "numpy.empty",
    "object",
    "set",
    "sklearn.preprocessing._label.itertools",
    "sorted"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing._label.MultiLabelBinarizer.fit_transform": {
  "data": {
   "lineno": 756,
   "symbols_in_volume": [
    "all",
    "collections.defaultdict",
    "int",
    "isinstance",
    "len",
    "numpy.array",
    "numpy.empty",
    "numpy.unique",
    "object",
    "sorted"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing._label.MultiLabelBinarizer.inverse_transform": {
  "data": {
   "lineno": 867,
   "symbols_in_volume": [
    "ValueError",
    "check_is_fitted",
    "len",
    "numpy.setdiff1d",
    "scipy.sparse.issparse",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing._label.MultiLabelBinarizer.transform": {
  "data": {
   "lineno": 800,
   "symbols_in_volume": [
    "check_is_fitted"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing._label.__all__": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "sklearn.preprocessing._label._inverse_binarize_multiclass": {
  "data": {
   "lineno": 572,
   "symbols_in_volume": [
    "len",
    "min_max_axis",
    "numpy.append",
    "numpy.arange",
    "numpy.asarray",
    "numpy.diff",
    "numpy.flatnonzero",
    "numpy.repeat",
    "numpy.searchsorted",
    "numpy.setdiff1d",
    "numpy.where",
    "scipy.sparse.issparse"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing._label._inverse_binarize_thresholding": {
  "data": {
   "lineno": 616,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "len",
    "numpy.array",
    "numpy.asarray",
    "numpy.repeat",
    "scipy.sparse.issparse"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing._label.array": {
  "data": {
   "shadows": "array"
  },
  "type": "import"
 },
 "sklearn.preprocessing._label.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "sklearn.preprocessing._label.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "sklearn.preprocessing._label.label_binarize": {
  "data": {
   "lineno": 409,
   "symbols_in_volume": [
    "ValueError",
    "_num_samples",
    "check_array",
    "column_or_1d",
    "hasattr",
    "int",
    "isinstance",
    "len",
    "list",
    "numpy.any",
    "numpy.asarray",
    "numpy.cumsum",
    "numpy.empty_like",
    "numpy.hstack",
    "numpy.in1d",
    "numpy.searchsorted",
    "numpy.sort",
    "numpy.zeros",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.issparse",
    "type_of_target",
    "unique_labels"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing._label.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.preprocessing._label.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.preprocessing._label.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.preprocessing.setup": {
  "data": {},
  "type": "module"
 },
 "sklearn.preprocessing.setup.Configuration": {
  "data": {
   "shadows": "numpy.distutils.misc_util.Configuration"
  },
  "type": "import"
 },
 "sklearn.preprocessing.setup.configuration": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "numpy.distutils.misc_util.Configuration",
    "sklearn.preprocessing.setup.numpy",
    "sklearn.preprocessing.setup.os"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.setup.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.preprocessing.setup.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests": {
  "data": {},
  "type": "module"
 },
 "sklearn.preprocessing.tests.test_common": {
  "data": {
   "symbols_in_volume": [
    "sklearn.datasets.load_iris"
   ]
  },
  "type": "module"
 },
 "sklearn.preprocessing.tests.test_common.MaxAbsScaler": {
  "data": {
   "shadows": "sklearn.preprocessing.MaxAbsScaler"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_common.MinMaxScaler": {
  "data": {
   "shadows": "sklearn.preprocessing.MinMaxScaler"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_common.PowerTransformer": {
  "data": {
   "shadows": "sklearn.preprocessing.PowerTransformer"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_common.QuantileTransformer": {
  "data": {
   "shadows": "sklearn.preprocessing.QuantileTransformer"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_common.RobustScaler": {
  "data": {
   "shadows": "sklearn.preprocessing.RobustScaler"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_common.StandardScaler": {
  "data": {
   "shadows": "sklearn.preprocessing.StandardScaler"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_common._get_valid_samples_by_column": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "numpy.isnan"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_common.assert_allclose": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_allclose"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_common.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_common.clone": {
  "data": {
   "shadows": "sklearn.base.clone"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_common.iris": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "sklearn.preprocessing.tests.test_common.load_iris": {
  "data": {
   "shadows": "sklearn.datasets.load_iris"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_common.maxabs_scale": {
  "data": {
   "shadows": "sklearn.preprocessing.maxabs_scale"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_common.minmax_scale": {
  "data": {
   "shadows": "sklearn.preprocessing.minmax_scale"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_common.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_common.power_transform": {
  "data": {
   "shadows": "sklearn.preprocessing.power_transform"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_common.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_common.quantile_transform": {
  "data": {
   "shadows": "sklearn.preprocessing.quantile_transform"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_common.robust_scale": {
  "data": {
   "shadows": "sklearn.preprocessing.robust_scale"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_common.scale": {
  "data": {
   "shadows": "sklearn.preprocessing.scale"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_common.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_common.test_missing_value_handling": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "PendingDeprecationWarning",
    "func",
    "len",
    "numpy.all",
    "numpy.any",
    "numpy.isnan",
    "numpy.nan",
    "numpy.nanmin",
    "numpy.random.RandomState",
    "range",
    "scipy.sparse.bsr_matrix",
    "scipy.sparse.coo_matrix",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.dia_matrix",
    "scipy.sparse.dok_matrix",
    "scipy.sparse.lil_matrix",
    "sklearn.base.clone",
    "sklearn.model_selection.train_test_split",
    "sklearn.preprocessing.MaxAbsScaler",
    "sklearn.preprocessing.MinMaxScaler",
    "sklearn.preprocessing.PowerTransformer",
    "sklearn.preprocessing.QuantileTransformer",
    "sklearn.preprocessing.RobustScaler",
    "sklearn.preprocessing.StandardScaler",
    "sklearn.preprocessing.maxabs_scale",
    "sklearn.preprocessing.minmax_scale",
    "sklearn.preprocessing.power_transform",
    "sklearn.preprocessing.quantile_transform",
    "sklearn.preprocessing.robust_scale",
    "sklearn.preprocessing.scale",
    "sklearn.preprocessing.tests.test_common._get_valid_samples_by_column",
    "sklearn.preprocessing.tests.test_common.iris",
    "sklearn.preprocessing.tests.test_common.pytest",
    "sklearn.preprocessing.tests.test_common.warnings",
    "sklearn.utils._testing.assert_allclose",
    "sklearn.utils._testing.assert_array_equal",
    "sparse_constructor"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_common.test_missing_value_pandas_na_support": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "sklearn.preprocessing.MaxAbsScaler",
    "sklearn.preprocessing.MinMaxScaler",
    "sklearn.preprocessing.PowerTransformer",
    "sklearn.preprocessing.QuantileTransformer",
    "sklearn.preprocessing.RobustScaler",
    "sklearn.preprocessing.StandardScaler",
    "sklearn.preprocessing.maxabs_scale",
    "sklearn.preprocessing.minmax_scale",
    "sklearn.preprocessing.power_transform",
    "sklearn.preprocessing.quantile_transform",
    "sklearn.preprocessing.robust_scale",
    "sklearn.preprocessing.scale",
    "sklearn.preprocessing.tests.test_common.pytest",
    "sklearn.utils._testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_common.train_test_split": {
  "data": {
   "shadows": "sklearn.model_selection.train_test_split"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_common.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_data": {
  "data": {
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.datasets.load_iris",
    "sklearn.preprocessing.tests.test_data.X_1col",
    "sklearn.preprocessing.tests.test_data.X_1row",
    "sklearn.preprocessing.tests.test_data.X_2d",
    "sklearn.preprocessing.tests.test_data.n_features",
    "sklearn.preprocessing.tests.test_data.n_samples",
    "sklearn.preprocessing.tests.test_data.offsets",
    "sklearn.preprocessing.tests.test_data.rng",
    "sklearn.preprocessing.tests.test_data.scales"
   ]
  },
  "type": "module"
 },
 "sklearn.preprocessing.tests.test_data.BOUNDS_THRESHOLD": {
  "data": {
   "shadows": "sklearn.preprocessing._data.BOUNDS_THRESHOLD"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_data.Binarizer": {
  "data": {
   "shadows": "sklearn.preprocessing._data.Binarizer"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_data.KernelCenterer": {
  "data": {
   "shadows": "sklearn.preprocessing._data.KernelCenterer"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_data.MaxAbsScaler": {
  "data": {
   "shadows": "sklearn.preprocessing._data.MaxAbsScaler"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_data.MinMaxScaler": {
  "data": {
   "shadows": "sklearn.preprocessing._data.MinMaxScaler"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_data.Normalizer": {
  "data": {
   "shadows": "sklearn.preprocessing._data.Normalizer"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_data.NotFittedError": {
  "data": {
   "shadows": "sklearn.exceptions.NotFittedError"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_data.Pipeline": {
  "data": {
   "shadows": "sklearn.pipeline.Pipeline"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_data.PolynomialFeatures": {
  "data": {
   "shadows": "sklearn.preprocessing._data.PolynomialFeatures"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_data.PowerTransformer": {
  "data": {
   "shadows": "sklearn.preprocessing._data.PowerTransformer"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_data.QuantileTransformer": {
  "data": {
   "shadows": "sklearn.preprocessing._data.QuantileTransformer"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_data.RobustScaler": {
  "data": {
   "shadows": "sklearn.preprocessing._data.RobustScaler"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_data.SVR": {
  "data": {
   "shadows": "sklearn.svm.SVR"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_data.StandardScaler": {
  "data": {
   "shadows": "sklearn.preprocessing._data.StandardScaler"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_data.X_1col": {
  "data": {
   "lineno": 71
  },
  "type": "constant"
 },
 "sklearn.preprocessing.tests.test_data.X_1row": {
  "data": {
   "lineno": 70
  },
  "type": "constant"
 },
 "sklearn.preprocessing.tests.test_data.X_2d": {
  "data": {
   "lineno": 69
  },
  "type": "constant"
 },
 "sklearn.preprocessing.tests.test_data.X_list_1col": {
  "data": {
   "lineno": 73
  },
  "type": "constant"
 },
 "sklearn.preprocessing.tests.test_data.X_list_1row": {
  "data": {
   "lineno": 72
  },
  "type": "constant"
 },
 "sklearn.preprocessing.tests.test_data._check_dim_1axis": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data._check_identity_scalers_attributes": {
  "data": {
   "lineno": 971
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data._convert_container": {
  "data": {
   "shadows": "sklearn.utils._testing._convert_container"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_data._handle_zeros_in_scale": {
  "data": {
   "shadows": "sklearn.preprocessing._data._handle_zeros_in_scale"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_data.add_dummy_feature": {
  "data": {
   "shadows": "sklearn.preprocessing._data.add_dummy_feature"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_data.assert_allclose": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_allclose"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_data.assert_allclose_dense_sparse": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_allclose_dense_sparse"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_data.assert_almost_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_almost_equal"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_data.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_data.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_data.assert_array_less": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_array_less"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_data.assert_correct_incr": {
  "data": {
   "lineno": 86
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.assert_no_warnings": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_no_warnings"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_data.assert_warns_message": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_warns_message"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_data.clone": {
  "data": {
   "shadows": "sklearn.base.clone"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_data.cross_val_predict": {
  "data": {
   "shadows": "sklearn.model_selection.cross_val_predict"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_data.datasets": {
  "data": {
   "shadows": "sklearn.datasets"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_data.gen_batches": {
  "data": {
   "shadows": "sklearn.utils.gen_batches"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_data.iris": {
  "data": {
   "lineno": 61
  },
  "type": "constant"
 },
 "sklearn.preprocessing.tests.test_data.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_data.la": {
  "data": {
   "shadows": "numpy.linalg"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_data.maxabs_scale": {
  "data": {
   "shadows": "sklearn.preprocessing._data.maxabs_scale"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_data.mean_variance_axis": {
  "data": {
   "shadows": "sklearn.utils.sparsefuncs.mean_variance_axis"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_data.minmax_scale": {
  "data": {
   "shadows": "sklearn.preprocessing._data.minmax_scale"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_data.n_features": {
  "data": {
   "lineno": 65
  },
  "type": "constant"
 },
 "sklearn.preprocessing.tests.test_data.n_samples": {
  "data": {
   "lineno": 66
  },
  "type": "constant"
 },
 "sklearn.preprocessing.tests.test_data.normalize": {
  "data": {
   "shadows": "sklearn.preprocessing._data.normalize"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_data.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_data.offsets": {
  "data": {
   "lineno": 67
  },
  "type": "constant"
 },
 "sklearn.preprocessing.tests.test_data.power_transform": {
  "data": {
   "shadows": "sklearn.preprocessing._data.power_transform"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_data.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_data.quantile_transform": {
  "data": {
   "shadows": "sklearn.preprocessing._data.quantile_transform"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_data.rng": {
  "data": {
   "lineno": 64
  },
  "type": "constant"
 },
 "sklearn.preprocessing.tests.test_data.robust_scale": {
  "data": {
   "shadows": "sklearn.preprocessing._data.robust_scale"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_data.scale": {
  "data": {
   "shadows": "sklearn.preprocessing._data.scale"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_data.scales": {
  "data": {
   "lineno": 68
  },
  "type": "constant"
 },
 "sklearn.preprocessing.tests.test_data.shuffle": {
  "data": {
   "shadows": "sklearn.utils.shuffle"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_data.skip_if_32bit": {
  "data": {
   "shadows": "sklearn.utils._testing.skip_if_32bit"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_data.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_data.sparse_random": {
  "data": {
   "shadows": "scipy.sparse.random"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_data.stats": {
  "data": {
   "shadows": "scipy.stats"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_data.test_add_dummy_feature": {
  "data": {
   "lineno": 2278,
   "symbols_in_volume": [
    "sklearn.preprocessing._data.add_dummy_feature",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_add_dummy_feature_coo": {
  "data": {
   "lineno": 2284,
   "symbols_in_volume": [
    "scipy.sparse.coo_matrix",
    "scipy.sparse.isspmatrix_coo",
    "sklearn.preprocessing._data.add_dummy_feature",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_add_dummy_feature_csc": {
  "data": {
   "lineno": 2291,
   "symbols_in_volume": [
    "scipy.sparse.csc_matrix",
    "scipy.sparse.isspmatrix_csc",
    "sklearn.preprocessing._data.add_dummy_feature",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_add_dummy_feature_csr": {
  "data": {
   "lineno": 2298,
   "symbols_in_volume": [
    "scipy.sparse.csr_matrix",
    "scipy.sparse.isspmatrix_csr",
    "sklearn.preprocessing._data.add_dummy_feature",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_binarizer": {
  "data": {
   "lineno": 2155,
   "symbols_in_volume": [
    "ValueError",
    "init",
    "list",
    "numpy.array",
    "numpy.float64",
    "numpy.sum",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.issparse",
    "sklearn.preprocessing._data.Binarizer",
    "sklearn.preprocessing.tests.test_data.pytest",
    "sklearn.preprocessing.tests.test_data.toarray"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_center_kernel": {
  "data": {
   "lineno": 2211,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.random.RandomState",
    "sklearn.preprocessing._data.KernelCenterer",
    "sklearn.preprocessing._data.StandardScaler",
    "sklearn.preprocessing.tests.test_data.rng",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_cv_pipeline_precomputed": {
  "data": {
   "lineno": 2236,
   "symbols_in_volume": [
    "FutureWarning",
    "numpy.array",
    "numpy.ones",
    "sklearn.model_selection.cross_val_predict",
    "sklearn.pipeline.Pipeline",
    "sklearn.preprocessing._data.KernelCenterer",
    "sklearn.preprocessing.tests.test_data.pytest",
    "sklearn.svm.SVR",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_fit_cold_start": {
  "data": {
   "lineno": 2305,
   "symbols_in_volume": [
    "sklearn.preprocessing._data.MaxAbsScaler",
    "sklearn.preprocessing._data.MinMaxScaler",
    "sklearn.preprocessing._data.StandardScaler",
    "sklearn.preprocessing.tests.test_data.X_2d",
    "sklearn.preprocessing.tests.test_data.iris"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_fit_transform": {
  "data": {
   "lineno": 2269,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.preprocessing._data.Binarizer",
    "sklearn.preprocessing._data.Normalizer",
    "sklearn.preprocessing._data.StandardScaler",
    "sklearn.preprocessing.tests.test_data.rng",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_handle_zeros_in_scale": {
  "data": {
   "lineno": 537,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.preprocessing._data._handle_zeros_in_scale",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_maxabs_scaler_1d": {
  "data": {
   "lineno": 1846,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "numpy.abs",
    "numpy.array",
    "numpy.ones",
    "sklearn.preprocessing._data.MaxAbsScaler",
    "sklearn.preprocessing._data.maxabs_scale",
    "sklearn.preprocessing.tests.test_data.X_1col",
    "sklearn.preprocessing.tests.test_data.X_1row",
    "sklearn.preprocessing.tests.test_data.X_list_1row",
    "sklearn.preprocessing.tests.test_data._check_dim_1axis",
    "sklearn.preprocessing.tests.test_data.n_features",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_maxabs_scaler_large_negative_value": {
  "data": {
   "lineno": 1818,
   "symbols_in_volume": [
    "sklearn.preprocessing._data.MaxAbsScaler",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_maxabs_scaler_partial_fit": {
  "data": {
   "lineno": 1880,
   "symbols_in_volume": [
    "enumerate",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "sklearn.preprocessing._data.MaxAbsScaler",
    "sklearn.preprocessing.tests.test_data.X_2d",
    "sklearn.preprocessing.tests.test_data.assert_correct_incr",
    "sklearn.utils._testing.assert_array_almost_equal",
    "sklearn.utils.gen_batches",
    "slice"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_maxabs_scaler_transform_one_row_csr": {
  "data": {
   "lineno": 1834,
   "symbols_in_volume": [
    "scipy.sparse.csr_matrix",
    "sklearn.preprocessing._data.MaxAbsScaler",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_maxabs_scaler_zero_variance_features": {
  "data": {
   "lineno": 1769,
   "symbols_in_volume": [
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "sklearn.preprocessing._data.MaxAbsScaler",
    "sklearn.preprocessing._data.maxabs_scale",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_min_max_scaler_1d": {
  "data": {
   "lineno": 830,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "numpy.array",
    "numpy.ones",
    "numpy.zeros",
    "sklearn.preprocessing._data.MinMaxScaler",
    "sklearn.preprocessing._data.minmax_scale",
    "sklearn.preprocessing.tests.test_data.X_1col",
    "sklearn.preprocessing.tests.test_data.X_1row",
    "sklearn.preprocessing.tests.test_data.X_list_1row",
    "sklearn.preprocessing.tests.test_data._check_dim_1axis",
    "sklearn.preprocessing.tests.test_data.n_features",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_min_max_scaler_iris": {
  "data": {
   "lineno": 750,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.preprocessing._data.MinMaxScaler",
    "sklearn.preprocessing.tests.test_data.iris",
    "sklearn.preprocessing.tests.test_data.pytest",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_min_max_scaler_zero_variance_features": {
  "data": {
   "lineno": 782,
   "symbols_in_volume": [
    "sklearn.preprocessing._data.MinMaxScaler",
    "sklearn.preprocessing._data.minmax_scale",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_minmax_scale_axis1": {
  "data": {
   "lineno": 823,
   "symbols_in_volume": [
    "numpy.max",
    "numpy.min",
    "sklearn.preprocessing._data.minmax_scale",
    "sklearn.preprocessing.tests.test_data.iris",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_minmax_scaler_clip": {
  "data": {
   "lineno": 2640,
   "symbols_in_volume": [
    "numpy.max",
    "numpy.min",
    "numpy.r_",
    "sklearn.preprocessing._data.MinMaxScaler",
    "sklearn.preprocessing.tests.test_data.iris",
    "sklearn.preprocessing.tests.test_data.pytest",
    "sklearn.utils._testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_minmax_scaler_partial_fit": {
  "data": {
   "lineno": 546,
   "symbols_in_volume": [
    "enumerate",
    "sklearn.preprocessing._data.MinMaxScaler",
    "sklearn.preprocessing.tests.test_data.X_2d",
    "sklearn.preprocessing.tests.test_data.assert_correct_incr",
    "sklearn.preprocessing.tests.test_data.n_samples",
    "sklearn.utils._testing.assert_array_almost_equal",
    "sklearn.utils.gen_batches",
    "slice"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_normalize": {
  "data": {
   "lineno": 2105,
   "symbols_in_volume": [
    "NotImplementedError",
    "ValueError",
    "numpy.abs",
    "numpy.array",
    "numpy.float32",
    "numpy.float64",
    "numpy.ones",
    "numpy.random.RandomState",
    "scipy.sparse.csr_matrix",
    "sklearn.preprocessing._data.normalize",
    "sklearn.preprocessing.tests.test_data.pytest",
    "sklearn.preprocessing.tests.test_data.toarray",
    "sklearn.utils._testing.assert_array_almost_equal",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_normalizer_l1": {
  "data": {
   "lineno": 1938,
   "symbols_in_volume": [
    "init",
    "isinstance",
    "numpy.abs",
    "numpy.linalg.norm",
    "numpy.random.RandomState",
    "range",
    "scipy.sparse.coo_matrix",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.lil_matrix",
    "sklearn.preprocessing._data.Normalizer",
    "sklearn.preprocessing.tests.test_data.rng",
    "sklearn.preprocessing.tests.test_data.toarray",
    "sklearn.utils._testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_normalizer_l2": {
  "data": {
   "lineno": 1987,
   "symbols_in_volume": [
    "init",
    "isinstance",
    "numpy.linalg.norm",
    "numpy.random.RandomState",
    "range",
    "scipy.sparse.coo_matrix",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.lil_matrix",
    "sklearn.preprocessing._data.Normalizer",
    "sklearn.preprocessing.tests.test_data.rng",
    "sklearn.preprocessing.tests.test_data.toarray",
    "sklearn.utils._testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_normalizer_max": {
  "data": {
   "lineno": 2035,
   "symbols_in_volume": [
    "abs",
    "init",
    "isinstance",
    "numpy.linalg.norm",
    "numpy.random.RandomState",
    "range",
    "scipy.sparse.coo_matrix",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.lil_matrix",
    "sklearn.preprocessing._data.Normalizer",
    "sklearn.preprocessing.tests.test_data.rng",
    "sklearn.preprocessing.tests.test_data.toarray",
    "sklearn.utils._testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_normalizer_max_sign": {
  "data": {
   "lineno": 2084,
   "symbols_in_volume": [
    "abs",
    "numpy.abs",
    "numpy.random.RandomState",
    "numpy.sign",
    "scipy.sparse.csr_matrix",
    "sklearn.preprocessing._data.Normalizer",
    "sklearn.preprocessing.tests.test_data.rng",
    "sklearn.preprocessing.tests.test_data.toarray",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_optimization_power_transformer": {
  "data": {
   "lineno": 2493,
   "symbols_in_volume": [
    "numpy.linalg.norm",
    "numpy.random.RandomState",
    "sklearn.preprocessing._data.PowerTransformer",
    "sklearn.preprocessing.tests.test_data.n_samples",
    "sklearn.preprocessing.tests.test_data.pytest",
    "sklearn.preprocessing.tests.test_data.rng",
    "sklearn.utils._testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_pairwise_deprecated": {
  "data": {
   "lineno": 2262,
   "symbols_in_volume": [
    "FutureWarning",
    "sklearn.preprocessing._data.KernelCenterer",
    "sklearn.preprocessing.tests.test_data.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_partial_fit_sparse_input": {
  "data": {
   "lineno": 687,
   "symbols_in_volume": [
    "numpy.array",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "sklearn.preprocessing._data.StandardScaler",
    "sklearn.preprocessing.tests.test_data.pytest",
    "sklearn.preprocessing.tests.test_data.rng",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_polynomial_feature_array_order": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "is_c_contiguous",
    "numpy.arange",
    "numpy.isfortran",
    "sklearn.preprocessing._data.PolynomialFeatures"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_polynomial_feature_array_order.is_c_contiguous": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "numpy.isfortran"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_polynomial_feature_names": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "numpy.arange",
    "sklearn.preprocessing._data.PolynomialFeatures",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_polynomial_features": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.hstack",
    "numpy.newaxis",
    "numpy.ones_like",
    "sklearn.preprocessing._data.PolynomialFeatures",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_polynomial_features_csc_X": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "int",
    "isinstance",
    "numpy.float32",
    "numpy.float64",
    "numpy.random.RandomState",
    "scipy.sparse.csc_matrix",
    "sklearn.preprocessing._data.PolynomialFeatures",
    "sklearn.preprocessing.tests.test_data.pytest",
    "sklearn.preprocessing.tests.test_data.rng",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_polynomial_features_csr_X": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "int",
    "isinstance",
    "numpy.float32",
    "numpy.float64",
    "numpy.random.RandomState",
    "scipy.sparse.csr_matrix",
    "sklearn.preprocessing._data.PolynomialFeatures",
    "sklearn.preprocessing.tests.test_data.pytest",
    "sklearn.preprocessing.tests.test_data.rng",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_polynomial_features_csr_X_degree_4": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "isinstance",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.random",
    "sklearn.preprocessing._data.PolynomialFeatures",
    "sklearn.preprocessing.tests.test_data.pytest",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_polynomial_features_csr_X_dim_edges": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "isinstance",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.random",
    "sklearn.preprocessing._data.PolynomialFeatures",
    "sklearn.preprocessing.tests.test_data.pytest",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_polynomial_features_csr_X_floats": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "isinstance",
    "numpy.float32",
    "numpy.float64",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.random",
    "sklearn.preprocessing._data.PolynomialFeatures",
    "sklearn.preprocessing.tests.test_data.pytest",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_polynomial_features_csr_X_zero_row": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "isinstance",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.random",
    "sklearn.preprocessing._data.PolynomialFeatures",
    "sklearn.preprocessing.tests.test_data.pytest",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_power_transformer_1d": {
  "data": {
   "lineno": 2353,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "numpy.abs",
    "numpy.ndarray",
    "scipy.stats.boxcox",
    "sklearn.preprocessing._data.PowerTransformer",
    "sklearn.preprocessing._data.power_transform",
    "sklearn.preprocessing._data.scale",
    "sklearn.preprocessing.tests.test_data.X_1col",
    "sklearn.utils._testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_power_transformer_2d": {
  "data": {
   "lineno": 2380,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "numpy.abs",
    "numpy.ndarray",
    "range",
    "scipy.stats.boxcox",
    "sklearn.preprocessing._data.PowerTransformer",
    "sklearn.preprocessing._data.power_transform",
    "sklearn.preprocessing._data.scale",
    "sklearn.preprocessing.tests.test_data.X_2d",
    "sklearn.utils._testing.assert_almost_equal",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_power_transformer_boxcox_strictly_positive_exception": {
  "data": {
   "lineno": 2410,
   "symbols_in_volume": [
    "ValueError",
    "numpy.abs",
    "numpy.zeros",
    "sklearn.preprocessing._data.PowerTransformer",
    "sklearn.preprocessing._data.power_transform",
    "sklearn.preprocessing.tests.test_data.X_2d",
    "sklearn.preprocessing.tests.test_data.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_power_transformer_copy_False": {
  "data": {
   "lineno": 2596,
   "symbols_in_volume": [
    "numpy.abs",
    "sklearn.preprocessing._data.PowerTransformer",
    "sklearn.preprocessing.tests.test_data.X_1col",
    "sklearn.preprocessing.tests.test_data.pytest",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_power_transformer_copy_True": {
  "data": {
   "lineno": 2568,
   "symbols_in_volume": [
    "numpy.abs",
    "sklearn.preprocessing._data.PowerTransformer",
    "sklearn.preprocessing.tests.test_data.X_1col",
    "sklearn.preprocessing.tests.test_data.pytest",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_power_transformer_fit_transform": {
  "data": {
   "lineno": 2556,
   "symbols_in_volume": [
    "numpy.abs",
    "sklearn.preprocessing._data.PowerTransformer",
    "sklearn.preprocessing.tests.test_data.X_1col",
    "sklearn.preprocessing.tests.test_data.pytest",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_power_transformer_inverse": {
  "data": {
   "lineno": 2341,
   "symbols_in_volume": [
    "numpy.abs",
    "sklearn.preprocessing._data.PowerTransformer",
    "sklearn.preprocessing.tests.test_data.X_1col",
    "sklearn.preprocessing.tests.test_data.X_2d",
    "sklearn.preprocessing.tests.test_data.pytest",
    "sklearn.utils._testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_power_transformer_lambda_one": {
  "data": {
   "lineno": 2483,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.array",
    "sklearn.preprocessing._data.PowerTransformer",
    "sklearn.preprocessing.tests.test_data.X_2d",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_power_transformer_lambda_zero": {
  "data": {
   "lineno": 2473,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.array",
    "sklearn.preprocessing._data.PowerTransformer",
    "sklearn.preprocessing.tests.test_data.X_2d",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_power_transformer_method_exception": {
  "data": {
   "lineno": 2463,
   "symbols_in_volume": [
    "ValueError",
    "numpy.abs",
    "sklearn.preprocessing._data.PowerTransformer",
    "sklearn.preprocessing.tests.test_data.X_2d",
    "sklearn.preprocessing.tests.test_data.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_power_transformer_nans": {
  "data": {
   "lineno": 2533,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.concatenate",
    "numpy.full_like",
    "numpy.isnan",
    "numpy.nan",
    "sklearn.preprocessing._data.PowerTransformer",
    "sklearn.preprocessing.tests.test_data.X_1col",
    "sklearn.preprocessing.tests.test_data.pytest",
    "sklearn.utils._testing.assert_almost_equal",
    "sklearn.utils._testing.assert_array_equal",
    "sklearn.utils.shuffle"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_power_transformer_notfitted": {
  "data": {
   "lineno": 2331,
   "symbols_in_volume": [
    "numpy.abs",
    "sklearn.exceptions.NotFittedError",
    "sklearn.preprocessing._data.PowerTransformer",
    "sklearn.preprocessing.tests.test_data.X_1col",
    "sklearn.preprocessing.tests.test_data.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_power_transformer_shape_exception": {
  "data": {
   "lineno": 2445,
   "symbols_in_volume": [
    "ValueError",
    "numpy.abs",
    "sklearn.preprocessing._data.PowerTransformer",
    "sklearn.preprocessing.tests.test_data.X_2d",
    "sklearn.preprocessing.tests.test_data.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_power_transformer_yeojohnson_any_input": {
  "data": {
   "lineno": 2438,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.zeros",
    "sklearn.preprocessing._data.power_transform",
    "sklearn.preprocessing.tests.test_data.X_2d",
    "sklearn.preprocessing.tests.test_data.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_quantile_transform_and_inverse": {
  "data": {
   "lineno": 1605,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.preprocessing._data.BOUNDS_THRESHOLD",
    "sklearn.preprocessing._data.QuantileTransformer",
    "sklearn.preprocessing.tests.test_data.iris",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_quantile_transform_axis1": {
  "data": {
   "lineno": 1550,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.preprocessing._data.quantile_transform",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_quantile_transform_bounds": {
  "data": {
   "lineno": 1560,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.max",
    "numpy.min",
    "numpy.random.random",
    "scipy.sparse.csc_matrix",
    "sklearn.preprocessing._data.QuantileTransformer",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_quantile_transform_check_error": {
  "data": {
   "lineno": 1300,
   "symbols_in_volume": [
    "UserWarning",
    "ValueError",
    "len",
    "numpy.transpose",
    "scipy.sparse.csc_matrix",
    "sklearn.preprocessing._data.QuantileTransformer",
    "sklearn.preprocessing.tests.test_data.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_quantile_transform_dense_toy": {
  "data": {
   "lineno": 1440,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.linspace",
    "numpy.sort",
    "numpy.tile",
    "sklearn.preprocessing._data.QuantileTransformer",
    "sklearn.utils._testing.assert_almost_equal",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_quantile_transform_iris": {
  "data": {
   "lineno": 1279,
   "symbols_in_volume": [
    "scipy.sparse.csc_matrix",
    "sklearn.preprocessing._data.QuantileTransformer",
    "sklearn.preprocessing.tests.test_data.iris",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_quantile_transform_nan": {
  "data": {
   "lineno": 1615,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.isnan",
    "numpy.nan",
    "sklearn.preprocessing._data.QuantileTransformer"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_quantile_transform_sparse_ignore_zeros": {
  "data": {
   "lineno": 1372,
   "symbols_in_volume": [
    "UserWarning",
    "numpy.array",
    "scipy.sparse.csc_matrix",
    "sklearn.preprocessing._data.QuantileTransformer",
    "sklearn.utils._testing.assert_almost_equal",
    "sklearn.utils._testing.assert_warns_message"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_quantile_transform_sparse_toy": {
  "data": {
   "lineno": 1515,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.max",
    "numpy.min",
    "scipy.sparse.csc_matrix",
    "sklearn.preprocessing._data.QuantileTransformer",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_quantile_transform_subsampling": {
  "data": {
   "lineno": 1470,
   "symbols_in_volume": [
    "len",
    "numpy.abs",
    "numpy.linspace",
    "numpy.max",
    "numpy.random.sample",
    "numpy.ravel",
    "numpy.sort",
    "numpy.unique",
    "range",
    "scipy.sparse.rand",
    "sklearn.preprocessing._data.QuantileTransformer",
    "sklearn.preprocessing.tests.test_data.n_samples"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_quantile_transform_valid_axis": {
  "data": {
   "lineno": 2321,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "sklearn.preprocessing._data.quantile_transform",
    "sklearn.preprocessing.tests.test_data.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_quantile_transformer_sorted_quantiles": {
  "data": {
   "lineno": 1629,
   "symbols_in_volume": [
    "all",
    "len",
    "numpy.array",
    "numpy.diff",
    "sklearn.preprocessing._data.QuantileTransformer",
    "sklearn.preprocessing.tests.test_data.pytest",
    "sklearn.utils._testing._convert_container"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_raises_value_error_if_sample_weights_greater_than_1d": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.preprocessing._data.StandardScaler",
    "sklearn.preprocessing.tests.test_data.n_features",
    "sklearn.preprocessing.tests.test_data.n_samples",
    "sklearn.preprocessing.tests.test_data.pytest",
    "sklearn.preprocessing.tests.test_data.rng",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_robust_scale_1d_array": {
  "data": {
   "lineno": 1707,
   "symbols_in_volume": [
    "numpy.median",
    "numpy.percentile",
    "sklearn.preprocessing._data.robust_scale",
    "sklearn.preprocessing.tests.test_data.iris",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_robust_scale_axis1": {
  "data": {
   "lineno": 1698,
   "symbols_in_volume": [
    "numpy.median",
    "numpy.percentile",
    "sklearn.preprocessing._data.robust_scale",
    "sklearn.preprocessing.tests.test_data.iris",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_robust_scaler_2d_arrays": {
  "data": {
   "lineno": 1205,
   "symbols_in_volume": [
    "numpy.median",
    "numpy.random.RandomState",
    "sklearn.preprocessing._data.RobustScaler",
    "sklearn.preprocessing.tests.test_data.rng",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_robust_scaler_attributes": {
  "data": {
   "lineno": 1167,
   "symbols_in_volume": [
    "isinstance",
    "numpy.ndarray",
    "numpy.random.randn",
    "scipy.sparse.issparse",
    "scipy.sparse.rand",
    "sklearn.preprocessing._data.RobustScaler",
    "sklearn.preprocessing.tests.test_data.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_robust_scaler_col_zero_sparse": {
  "data": {
   "lineno": 1190,
   "symbols_in_volume": [
    "numpy.random.randn",
    "scipy.sparse.csr_matrix",
    "sklearn.preprocessing._data.RobustScaler",
    "sklearn.preprocessing.tests.test_data.pytest",
    "sklearn.utils._testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_robust_scaler_equivalence_dense_sparse": {
  "data": {
   "lineno": 1218,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.float64",
    "numpy.zeros",
    "scipy.sparse.rand",
    "sklearn.preprocessing._data.RobustScaler",
    "sklearn.preprocessing.tests.test_data.pytest",
    "sklearn.utils._testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_robust_scaler_error_sparse": {
  "data": {
   "lineno": 1159,
   "symbols_in_volume": [
    "ValueError",
    "scipy.sparse.rand",
    "sklearn.preprocessing._data.RobustScaler",
    "sklearn.preprocessing.tests.test_data.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_robust_scaler_invalid_range": {
  "data": {
   "lineno": 1649,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.preprocessing._data.RobustScaler",
    "sklearn.preprocessing.tests.test_data.iris",
    "sklearn.preprocessing.tests.test_data.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_robust_scaler_iris": {
  "data": {
   "lineno": 1255,
   "symbols_in_volume": [
    "numpy.median",
    "numpy.percentile",
    "sklearn.preprocessing._data.RobustScaler",
    "sklearn.preprocessing.tests.test_data.iris",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_robust_scaler_iris_quantiles": {
  "data": {
   "lineno": 1267,
   "symbols_in_volume": [
    "numpy.median",
    "numpy.percentile",
    "sklearn.preprocessing._data.RobustScaler",
    "sklearn.preprocessing.tests.test_data.iris",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_robust_scaler_transform_one_row_csr": {
  "data": {
   "lineno": 1241,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.random.RandomState",
    "scipy.sparse.csr_matrix",
    "sklearn.preprocessing._data.RobustScaler",
    "sklearn.preprocessing.tests.test_data.rng",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_robust_scaler_unit_variance": {
  "data": {
   "lineno": 1749,
   "symbols_in_volume": [
    "numpy.ones",
    "numpy.random.RandomState",
    "numpy.vstack",
    "sklearn.preprocessing._data.RobustScaler",
    "sklearn.preprocessing.tests.test_data.pytest",
    "sklearn.preprocessing.tests.test_data.rng"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_robust_scaler_zero_variance_features": {
  "data": {
   "lineno": 1716,
   "symbols_in_volume": [
    "sklearn.preprocessing._data.RobustScaler",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_scale_1d": {
  "data": {
   "lineno": 414,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.preprocessing._data.scale",
    "sklearn.utils._testing.assert_array_almost_equal",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_scale_function_without_centering": {
  "data": {
   "lineno": 1663,
   "symbols_in_volume": [
    "ValueError",
    "numpy.any",
    "numpy.isnan",
    "numpy.random.RandomState",
    "scipy.sparse.csr_matrix",
    "sklearn.preprocessing._data.scale",
    "sklearn.preprocessing.tests.test_data.pytest",
    "sklearn.preprocessing.tests.test_data.rng",
    "sklearn.utils._testing.assert_array_almost_equal",
    "sklearn.utils.sparsefuncs.mean_variance_axis"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_scale_input_finiteness_validation": {
  "data": {
   "lineno": 1151,
   "symbols_in_volume": [
    "ValueError",
    "numpy.inf",
    "sklearn.preprocessing._data.scale",
    "sklearn.preprocessing.tests.test_data.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_scale_sparse_with_mean_raise_exception": {
  "data": {
   "lineno": 1118,
   "symbols_in_volume": [
    "ValueError",
    "numpy.random.RandomState",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "sklearn.preprocessing._data.StandardScaler",
    "sklearn.preprocessing._data.scale",
    "sklearn.preprocessing.tests.test_data.pytest",
    "sklearn.preprocessing.tests.test_data.rng"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_scaler_2d_arrays": {
  "data": {
   "lineno": 460,
   "symbols_in_volume": [
    "numpy.any",
    "numpy.isnan",
    "numpy.random.RandomState",
    "sklearn.preprocessing._data.StandardScaler",
    "sklearn.preprocessing._data.scale",
    "sklearn.preprocessing.tests.test_data.n_features",
    "sklearn.preprocessing.tests.test_data.n_samples",
    "sklearn.preprocessing.tests.test_data.rng",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_scaler_float16_overflow": {
  "data": {
   "lineno": 512,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.errstate",
    "numpy.float16",
    "numpy.float64",
    "numpy.isfinite",
    "numpy.random.RandomState",
    "sklearn.preprocessing._data.StandardScaler",
    "sklearn.preprocessing.tests.test_data.rng",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_scaler_int": {
  "data": {
   "lineno": 1028,
   "symbols_in_volume": [
    "float",
    "numpy.any",
    "numpy.isnan",
    "numpy.random.RandomState",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "sklearn.preprocessing._data.StandardScaler",
    "sklearn.preprocessing.tests.test_data.rng",
    "sklearn.preprocessing.tests.test_data.warnings",
    "sklearn.utils._testing.assert_array_almost_equal",
    "sklearn.utils._testing.assert_array_equal",
    "sklearn.utils.sparsefuncs.mean_variance_axis"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_scaler_n_samples_seen_with_nan": {
  "data": {
   "lineno": 949,
   "symbols_in_volume": [
    "array_constructor",
    "numpy.array",
    "numpy.asarray",
    "numpy.float64",
    "numpy.nan",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.issparse",
    "sklearn.preprocessing._data.StandardScaler",
    "sklearn.preprocessing.tests.test_data.pytest",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_scaler_return_identity": {
  "data": {
   "lineno": 978,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.float64",
    "scipy.sparse.csr_matrix",
    "sklearn.base.clone",
    "sklearn.preprocessing._data.StandardScaler",
    "sklearn.preprocessing.tests.test_data._check_identity_scalers_attributes",
    "sklearn.preprocessing.tests.test_data.itertools",
    "sklearn.utils._testing.assert_allclose",
    "sklearn.utils._testing.assert_allclose_dense_sparse"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_scaler_without_centering": {
  "data": {
   "lineno": 870,
   "symbols_in_volume": [
    "ValueError",
    "numpy.any",
    "numpy.isnan",
    "numpy.random.RandomState",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "sklearn.preprocessing._data.StandardScaler",
    "sklearn.preprocessing.tests.test_data.pytest",
    "sklearn.preprocessing.tests.test_data.rng",
    "sklearn.utils._testing.assert_array_almost_equal",
    "sklearn.utils._testing.assert_array_equal",
    "sklearn.utils.sparsefuncs.mean_variance_axis"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_scaler_without_copy": {
  "data": {
   "lineno": 1097,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "sklearn.preprocessing._data.StandardScaler",
    "sklearn.preprocessing.tests.test_data.rng",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_standard_scaler_1d": {
  "data": {
   "lineno": 348,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "numpy.array",
    "numpy.ones",
    "numpy.zeros_like",
    "sklearn.preprocessing._data.StandardScaler",
    "sklearn.preprocessing.tests.test_data.X_1col",
    "sklearn.preprocessing.tests.test_data.X_1row",
    "sklearn.preprocessing.tests.test_data.X_list_1row",
    "sklearn.preprocessing.tests.test_data._check_dim_1axis",
    "sklearn.preprocessing.tests.test_data.n_features",
    "sklearn.utils._testing.assert_almost_equal",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_standard_scaler_dtype": {
  "data": {
   "lineno": 388,
   "symbols_in_volume": [
    "numpy.float16",
    "numpy.float32",
    "numpy.float64",
    "numpy.ones",
    "numpy.random.RandomState",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "sklearn.preprocessing._data.StandardScaler",
    "sklearn.preprocessing.tests.test_data.n_features",
    "sklearn.preprocessing.tests.test_data.n_samples",
    "sklearn.preprocessing.tests.test_data.pytest",
    "sklearn.preprocessing.tests.test_data.rng",
    "sparse_constructor"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_standard_scaler_numerical_stability": {
  "data": {
   "lineno": 426,
   "symbols_in_volume": [
    "UserWarning",
    "numpy.float64",
    "numpy.full",
    "numpy.log",
    "numpy.zeros",
    "sklearn.preprocessing._data.scale",
    "sklearn.utils._testing.assert_array_almost_equal",
    "sklearn.utils._testing.assert_no_warnings",
    "sklearn.utils._testing.assert_warns_message",
    "sklearn.utils._testing.skip_if_32bit"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_standard_scaler_partial_fit": {
  "data": {
   "lineno": 596,
   "symbols_in_volume": [
    "enumerate",
    "numpy.float64",
    "numpy.ones",
    "numpy.std",
    "numpy.var",
    "numpy.zeros",
    "sklearn.preprocessing._data.StandardScaler",
    "sklearn.preprocessing.tests.test_data.X_2d",
    "sklearn.preprocessing.tests.test_data.assert_correct_incr",
    "sklearn.preprocessing.tests.test_data.n_features",
    "sklearn.preprocessing.tests.test_data.n_samples",
    "sklearn.utils._testing.assert_array_almost_equal",
    "sklearn.utils.gen_batches",
    "slice"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_standard_scaler_partial_fit_numerical_stability": {
  "data": {
   "lineno": 641,
   "symbols_in_volume": [
    "numpy.float64",
    "numpy.random.RandomState",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "sklearn.preprocessing._data.StandardScaler",
    "sklearn.preprocessing._data.scale",
    "sklearn.preprocessing.tests.test_data.n_features",
    "sklearn.preprocessing.tests.test_data.n_samples",
    "sklearn.preprocessing.tests.test_data.offsets",
    "sklearn.preprocessing.tests.test_data.rng",
    "sklearn.preprocessing.tests.test_data.scales",
    "sklearn.utils._testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_standard_scaler_sample_weight": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "numpy.ones",
    "sklearn.preprocessing._data.StandardScaler",
    "sklearn.preprocessing.tests.test_data.pytest",
    "sklearn.utils._testing._convert_container",
    "sklearn.utils._testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_standard_scaler_sparse_partial_fit_finite_variance": {
  "data": {
   "lineno": 2626,
   "symbols_in_volume": [
    "numpy.full",
    "numpy.isfinite",
    "numpy.nan",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.random",
    "sklearn.preprocessing._data.StandardScaler",
    "sklearn.preprocessing.tests.test_data.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_standard_scaler_trasform_with_partial_fit": {
  "data": {
   "lineno": 708,
   "symbols_in_volume": [
    "enumerate",
    "float",
    "numpy.finfo",
    "numpy.sum",
    "numpy.zeros",
    "sklearn.preprocessing._data.StandardScaler",
    "sklearn.preprocessing.tests.test_data.X_2d",
    "sklearn.preprocessing.tests.test_data.pytest",
    "sklearn.preprocessing.tests.test_data.rng",
    "sklearn.utils._testing.assert_array_almost_equal",
    "sklearn.utils._testing.assert_array_less",
    "sklearn.utils.gen_batches"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_yeo_johnson_darwin_example": {
  "data": {
   "lineno": 2523,
   "symbols_in_volume": [
    "numpy.allclose",
    "numpy.array",
    "sklearn.preprocessing._data.PowerTransformer"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.toarray": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_discretization": {
  "data": {},
  "type": "module"
 },
 "sklearn.preprocessing.tests.test_discretization.KBinsDiscretizer": {
  "data": {
   "shadows": "sklearn.preprocessing.KBinsDiscretizer"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_discretization.OneHotEncoder": {
  "data": {
   "shadows": "sklearn.preprocessing.OneHotEncoder"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_discretization.X": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "sklearn.preprocessing.tests.test_discretization.assert_allclose_dense_sparse": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_allclose_dense_sparse"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_discretization.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_discretization.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_discretization.assert_warns_message": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_warns_message"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_discretization.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_discretization.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_discretization.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_discretization.test_32_equal_64": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.float16",
    "numpy.float32",
    "numpy.float64",
    "sklearn.preprocessing.KBinsDiscretizer",
    "sklearn.preprocessing.tests.test_discretization.X",
    "sklearn.preprocessing.tests.test_discretization.pytest",
    "sklearn.utils._testing.assert_allclose_dense_sparse"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_discretization.test_consistent_dtype": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "numpy.float16",
    "numpy.float32",
    "numpy.float64",
    "sklearn.preprocessing.KBinsDiscretizer",
    "sklearn.preprocessing.tests.test_discretization.X",
    "sklearn.preprocessing.tests.test_discretization.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_discretization.test_encode_options": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "numpy.arange",
    "scipy.sparse.issparse",
    "sklearn.preprocessing.KBinsDiscretizer",
    "sklearn.preprocessing.OneHotEncoder",
    "sklearn.preprocessing.tests.test_discretization.X",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_discretization.test_fit_transform": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "sklearn.preprocessing.KBinsDiscretizer",
    "sklearn.preprocessing.tests.test_discretization.X",
    "sklearn.preprocessing.tests.test_discretization.pytest",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_discretization.test_fit_transform_n_bins_array": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.preprocessing.KBinsDiscretizer",
    "sklearn.preprocessing.tests.test_discretization.X",
    "sklearn.preprocessing.tests.test_discretization.pytest",
    "sklearn.utils._testing.assert_array_equal",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_discretization.test_invalid_encode_option": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.preprocessing.KBinsDiscretizer",
    "sklearn.preprocessing.tests.test_discretization.X",
    "sklearn.preprocessing.tests.test_discretization.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_discretization.test_invalid_n_bins": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.preprocessing.KBinsDiscretizer",
    "sklearn.preprocessing.tests.test_discretization.X",
    "sklearn.preprocessing.tests.test_discretization.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_discretization.test_invalid_n_bins_array": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "ValueError",
    "numpy.full",
    "sklearn.preprocessing.KBinsDiscretizer",
    "sklearn.preprocessing.tests.test_discretization.X",
    "sklearn.preprocessing.tests.test_discretization.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_discretization.test_invalid_strategy_option": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.preprocessing.KBinsDiscretizer",
    "sklearn.preprocessing.tests.test_discretization.X",
    "sklearn.preprocessing.tests.test_discretization.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_discretization.test_inverse_transform": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "sklearn.preprocessing.KBinsDiscretizer",
    "sklearn.preprocessing.tests.test_discretization.X",
    "sklearn.preprocessing.tests.test_discretization.pytest",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_discretization.test_nonuniform_strategies": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.preprocessing.KBinsDiscretizer",
    "sklearn.preprocessing.tests.test_discretization.X",
    "sklearn.preprocessing.tests.test_discretization.pytest",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_discretization.test_numeric_stability": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "numpy.array",
    "range",
    "sklearn.preprocessing.KBinsDiscretizer",
    "sklearn.preprocessing.tests.test_discretization.X",
    "sklearn.preprocessing.tests.test_discretization.pytest",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_discretization.test_overwrite": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.preprocessing.KBinsDiscretizer",
    "sklearn.preprocessing.tests.test_discretization.X",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_discretization.test_percentile_numeric_stability": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "UserWarning",
    "numpy.array",
    "sklearn.preprocessing.KBinsDiscretizer",
    "sklearn.preprocessing.tests.test_discretization.X",
    "sklearn.utils._testing.assert_array_almost_equal",
    "sklearn.utils._testing.assert_warns_message"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_discretization.test_redundant_bins": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "UserWarning",
    "sklearn.preprocessing.KBinsDiscretizer",
    "sklearn.preprocessing.tests.test_discretization.X",
    "sklearn.preprocessing.tests.test_discretization.pytest",
    "sklearn.utils._testing.assert_array_almost_equal",
    "sklearn.utils._testing.assert_warns_message"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_discretization.test_same_min_max": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "UserWarning",
    "numpy.array",
    "numpy.zeros",
    "sklearn.preprocessing.KBinsDiscretizer",
    "sklearn.preprocessing.tests.test_discretization.X",
    "sklearn.preprocessing.tests.test_discretization.pytest",
    "sklearn.preprocessing.tests.test_discretization.warnings",
    "sklearn.utils._testing.assert_array_equal",
    "sklearn.utils._testing.assert_warns_message"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_discretization.test_transform_1d_behavior": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "ValueError",
    "numpy.arange",
    "sklearn.preprocessing.KBinsDiscretizer",
    "sklearn.preprocessing.tests.test_discretization.X",
    "sklearn.preprocessing.tests.test_discretization.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_discretization.test_transform_outside_fit_range": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.preprocessing.KBinsDiscretizer",
    "sklearn.preprocessing.tests.test_discretization.X",
    "sklearn.preprocessing.tests.test_discretization.pytest",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_discretization.test_valid_n_bins": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "int",
    "numpy.array",
    "numpy.dtype",
    "sklearn.preprocessing.KBinsDiscretizer",
    "sklearn.preprocessing.tests.test_discretization.X"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_discretization.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_encoders": {
  "data": {},
  "type": "module"
 },
 "sklearn.preprocessing.tests.test_encoders.NotFittedError": {
  "data": {
   "shadows": "sklearn.exceptions.NotFittedError"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_encoders.OneHotEncoder": {
  "data": {
   "shadows": "sklearn.preprocessing.OneHotEncoder"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_encoders.OrdinalEncoder": {
  "data": {
   "shadows": "sklearn.preprocessing.OrdinalEncoder"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_encoders._convert_container": {
  "data": {
   "shadows": "sklearn.utils._testing._convert_container"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_encoders.assert_allclose": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_allclose"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_encoders.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_encoders.check_categorical_onehot": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "scipy.sparse.isspmatrix_csr",
    "sklearn.preprocessing.OneHotEncoder",
    "sklearn.utils._testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_encoders.is_scalar_nan": {
  "data": {
   "shadows": "sklearn.utils.is_scalar_nan"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_encoders.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_encoders.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_encoders.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_encoders.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_encoders.test_X_is_not_1D": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": [
    "ValueError",
    "getattr",
    "numpy.array",
    "sklearn.preprocessing.OneHotEncoder",
    "sklearn.preprocessing.tests.test_encoders.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_encoders.test_X_is_not_1D_pandas": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": [
    "ValueError",
    "getattr",
    "sklearn.preprocessing.OneHotEncoder",
    "sklearn.preprocessing.tests.test_encoders.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_encoders.test_categories": {
  "data": {
   "lineno": 804,
   "symbols_in_volume": [
    "int",
    "isinstance",
    "numpy.ndarray",
    "object",
    "sklearn.preprocessing.OneHotEncoder",
    "sklearn.preprocessing.tests.test_encoders.pytest",
    "sklearn.utils._testing.assert_array_equal",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_encoders.test_encoder_dtypes": {
  "data": {
   "lineno": 691,
   "symbols_in_volume": [
    "all",
    "numpy.array",
    "numpy.integer",
    "numpy.issubdtype",
    "range",
    "sklearn.preprocessing.OneHotEncoder",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_encoders.test_encoder_dtypes_pandas": {
  "data": {
   "lineno": 716,
   "symbols_in_volume": [
    "all",
    "numpy.array",
    "range",
    "sklearn.preprocessing.OneHotEncoder",
    "sklearn.preprocessing.tests.test_encoders.pytest",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_encoders.test_encoders_has_categorical_tags": {
  "data": {
   "lineno": 828,
   "symbols_in_volume": [
    "Encoder",
    "sklearn.preprocessing.OneHotEncoder",
    "sklearn.preprocessing.OrdinalEncoder",
    "sklearn.preprocessing.tests.test_encoders.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_encoders.test_encoders_unicode_categories": {
  "data": {
   "lineno": 833,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.preprocessing.OneHotEncoder",
    "sklearn.preprocessing.OrdinalEncoder",
    "sklearn.preprocessing.tests.test_encoders.pytest",
    "sklearn.utils._testing._convert_container",
    "sklearn.utils._testing.assert_allclose",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_encoders.test_invalid_drop_length": {
  "data": {
   "lineno": 796,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.preprocessing.OneHotEncoder",
    "sklearn.preprocessing.tests.test_encoders.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_encoders.test_ohe_missing_value_support_pandas": {
  "data": {
   "lineno": 870,
   "symbols_in_volume": [
    "float",
    "numpy.array",
    "numpy.nan",
    "sklearn.preprocessing.tests.test_encoders.check_categorical_onehot",
    "sklearn.preprocessing.tests.test_encoders.pytest",
    "sklearn.utils._testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_encoders.test_ohe_missing_value_support_pandas_categorical": {
  "data": {
   "lineno": 888,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "numpy.isnan",
    "numpy.nan",
    "sklearn.preprocessing.OneHotEncoder",
    "sklearn.preprocessing.tests.test_encoders.pytest",
    "sklearn.utils._testing.assert_allclose",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_encoders.test_ohe_missing_values_get_feature_names": {
  "data": {
   "lineno": 860,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "object",
    "sklearn.preprocessing.OneHotEncoder",
    "sklearn.preprocessing.tests.test_encoders.pytest",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_encoders.test_one_hot_encoder": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "float",
    "numpy.array",
    "numpy.nan",
    "object",
    "sklearn.preprocessing.OneHotEncoder",
    "sklearn.preprocessing.tests.test_encoders.check_categorical_onehot",
    "sklearn.preprocessing.tests.test_encoders.pytest",
    "sklearn.utils._testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_encoders.test_one_hot_encoder_categories": {
  "data": {
   "lineno": 350,
   "symbols_in_volume": [
    "float",
    "isinstance",
    "list",
    "numpy.array",
    "numpy.float_",
    "numpy.integer",
    "numpy.issubdtype",
    "numpy.nan",
    "numpy.object_",
    "numpy.str_",
    "object",
    "sklearn.preprocessing.OneHotEncoder",
    "sklearn.preprocessing.tests.test_encoders.pytest",
    "sklearn.utils.is_scalar_nan",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_encoders.test_one_hot_encoder_diff_n_features": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "sklearn.preprocessing.OneHotEncoder",
    "sklearn.preprocessing.tests.test_encoders.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_encoders.test_one_hot_encoder_drop_equals_if_binary": {
  "data": {
   "lineno": 491,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.preprocessing.OneHotEncoder",
    "sklearn.utils._testing.assert_allclose",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_encoders.test_one_hot_encoder_drop_manual": {
  "data": {
   "lineno": 742,
   "symbols_in_volume": [
    "float",
    "numpy.array",
    "numpy.nan",
    "object",
    "sklearn.preprocessing.OneHotEncoder",
    "sklearn.preprocessing.tests.test_encoders.pytest",
    "sklearn.utils._testing.assert_array_equal",
    "sklearn.utils.is_scalar_nan",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_encoders.test_one_hot_encoder_drop_reset": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": [
    "numpy.array",
    "object",
    "sklearn.preprocessing.OneHotEncoder",
    "sklearn.preprocessing.tests.test_encoders.pytest",
    "sklearn.utils._testing.assert_allclose",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_encoders.test_one_hot_encoder_dtype": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.float32",
    "numpy.float64",
    "numpy.int32",
    "sklearn.preprocessing.OneHotEncoder",
    "sklearn.preprocessing.tests.test_encoders.pytest",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_encoders.test_one_hot_encoder_dtype_pandas": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.float32",
    "numpy.float64",
    "numpy.int32",
    "sklearn.preprocessing.OneHotEncoder",
    "sklearn.preprocessing.tests.test_encoders.pytest",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_encoders.test_one_hot_encoder_feature_names": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "numpy.ndarray",
    "sklearn.preprocessing.OneHotEncoder",
    "sklearn.preprocessing.tests.test_encoders.pytest",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_encoders.test_one_hot_encoder_feature_names_drop": {
  "data": {
   "lineno": 475,
   "symbols_in_volume": [
    "isinstance",
    "numpy.ndarray",
    "sklearn.preprocessing.OneHotEncoder",
    "sklearn.preprocessing.tests.test_encoders.pytest",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_encoders.test_one_hot_encoder_feature_names_unicode": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "numpy.array",
    "object",
    "sklearn.preprocessing.OneHotEncoder",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_encoders.test_one_hot_encoder_handle_unknown": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "sklearn.preprocessing.OneHotEncoder",
    "sklearn.preprocessing.tests.test_encoders.pytest",
    "sklearn.utils._testing.assert_allclose",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_encoders.test_one_hot_encoder_handle_unknown_strings": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.preprocessing.OneHotEncoder",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_encoders.test_one_hot_encoder_invalid_params": {
  "data": {
   "lineno": 777,
   "symbols_in_volume": [
    "ValueError",
    "numpy.asarray",
    "object",
    "sklearn.preprocessing.OneHotEncoder",
    "sklearn.preprocessing.tests.test_encoders.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_encoders.test_one_hot_encoder_inverse": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "object",
    "sklearn.preprocessing.OneHotEncoder",
    "sklearn.preprocessing.tests.test_encoders.pytest",
    "sklearn.preprocessing.tests.test_encoders.re",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_encoders.test_one_hot_encoder_inverse_if_binary": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "numpy.array",
    "object",
    "sklearn.preprocessing.OneHotEncoder",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_encoders.test_one_hot_encoder_inverse_transform_raise_error_with_unknown": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.preprocessing.OneHotEncoder",
    "sklearn.preprocessing.tests.test_encoders.pytest",
    "sklearn.utils._testing._convert_container"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_encoders.test_one_hot_encoder_not_fitted": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.exceptions.NotFittedError",
    "sklearn.preprocessing.OneHotEncoder",
    "sklearn.preprocessing.tests.test_encoders.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_encoders.test_one_hot_encoder_pandas": {
  "data": {
   "lineno": 466,
   "symbols_in_volume": [
    "sklearn.preprocessing.tests.test_encoders.check_categorical_onehot",
    "sklearn.preprocessing.tests.test_encoders.pytest",
    "sklearn.utils._testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_encoders.test_one_hot_encoder_set_params": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.preprocessing.OneHotEncoder"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_encoders.test_one_hot_encoder_sparse_dense": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "numpy.array",
    "scipy.sparse.issparse",
    "sklearn.preprocessing.OneHotEncoder",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_encoders.test_one_hot_encoder_specified_categories": {
  "data": {
   "lineno": 381,
   "symbols_in_volume": [
    "ValueError",
    "list",
    "numpy.array",
    "numpy.int64",
    "numpy.nan",
    "numpy.object_",
    "object",
    "sklearn.preprocessing.OneHotEncoder",
    "sklearn.preprocessing.tests.test_encoders.pytest",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_encoders.test_one_hot_encoder_specified_categories_mixed_columns": {
  "data": {
   "lineno": 452,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.issubdtype",
    "numpy.object_",
    "object",
    "sklearn.preprocessing.OneHotEncoder",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_encoders.test_one_hot_encoder_unsorted_categories": {
  "data": {
   "lineno": 427,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "numpy.issubdtype",
    "numpy.nan",
    "numpy.object_",
    "object",
    "sklearn.preprocessing.OneHotEncoder",
    "sklearn.preprocessing.tests.test_encoders.pytest",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_encoders.test_one_hot_encoder_warning": {
  "data": {
   "lineno": 736,
   "symbols_in_volume": [
    "numpy.testing.assert_no_warnings",
    "sklearn.preprocessing.OneHotEncoder"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_encoders.test_ordinal_encoder": {
  "data": {
   "lineno": 521,
   "symbols_in_volume": [
    "numpy.array",
    "object",
    "sklearn.preprocessing.OrdinalEncoder",
    "sklearn.preprocessing.tests.test_encoders.pytest",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_encoders.test_ordinal_encoder_handle_unknowns_nan": {
  "data": {
   "lineno": 656,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "sklearn.preprocessing.OrdinalEncoder",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_encoders.test_ordinal_encoder_handle_unknowns_nan_non_float_dtype": {
  "data": {
   "lineno": 668,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "numpy.array",
    "numpy.nan",
    "sklearn.preprocessing.OrdinalEncoder",
    "sklearn.preprocessing.tests.test_encoders.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_encoders.test_ordinal_encoder_handle_unknowns_numeric": {
  "data": {
   "lineno": 610,
   "symbols_in_volume": [
    "float",
    "int",
    "numpy.array",
    "object",
    "sklearn.preprocessing.OrdinalEncoder",
    "sklearn.preprocessing.tests.test_encoders.pytest",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_encoders.test_ordinal_encoder_handle_unknowns_raise": {
  "data": {
   "lineno": 627,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "numpy.array",
    "object",
    "sklearn.preprocessing.OrdinalEncoder",
    "sklearn.preprocessing.tests.test_encoders.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_encoders.test_ordinal_encoder_handle_unknowns_string": {
  "data": {
   "lineno": 595,
   "symbols_in_volume": [
    "numpy.array",
    "object",
    "sklearn.preprocessing.OrdinalEncoder",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_encoders.test_ordinal_encoder_inverse": {
  "data": {
   "lineno": 563,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "object",
    "sklearn.preprocessing.OrdinalEncoder",
    "sklearn.preprocessing.tests.test_encoders.pytest",
    "sklearn.preprocessing.tests.test_encoders.re",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_encoders.test_ordinal_encoder_raise_categories_shape": {
  "data": {
   "lineno": 680,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "object",
    "sklearn.preprocessing.OrdinalEncoder",
    "sklearn.preprocessing.tests.test_encoders.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_encoders.test_ordinal_encoder_raise_missing": {
  "data": {
   "lineno": 577,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "numpy.nan",
    "object",
    "sklearn.preprocessing.OrdinalEncoder",
    "sklearn.preprocessing.tests.test_encoders.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_encoders.test_ordinal_encoder_specified_categories": {
  "data": {
   "lineno": 535,
   "symbols_in_volume": [
    "ValueError",
    "list",
    "numpy.array",
    "numpy.int64",
    "numpy.object_",
    "object",
    "sklearn.preprocessing.OrdinalEncoder",
    "sklearn.preprocessing.tests.test_encoders.pytest",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_function_transformer": {
  "data": {},
  "type": "module"
 },
 "sklearn.preprocessing.tests.test_function_transformer.FunctionTransformer": {
  "data": {
   "shadows": "sklearn.preprocessing.FunctionTransformer"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_function_transformer._make_func": {
  "data": {
   "lineno": 11
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_function_transformer._make_func._func": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "func"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_function_transformer.assert_allclose_dense_sparse": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_allclose_dense_sparse"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_function_transformer.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_function_transformer.assert_no_warnings": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_no_warnings"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_function_transformer.assert_warns_message": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_warns_message"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_function_transformer.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_function_transformer.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_function_transformer.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_function_transformer.test_check_inverse": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "UserWarning",
    "numpy.around",
    "numpy.array",
    "numpy.expm1",
    "numpy.float64",
    "numpy.log1p",
    "numpy.sqrt",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.issparse",
    "sklearn.preprocessing.FunctionTransformer",
    "sklearn.utils._testing.assert_allclose_dense_sparse",
    "sklearn.utils._testing.assert_no_warnings",
    "sklearn.utils._testing.assert_warns_message"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_function_transformer.test_delegate_to_func": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "numpy.arange",
    "sklearn.preprocessing.FunctionTransformer",
    "sklearn.preprocessing.tests.test_function_transformer._make_func",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_function_transformer.test_function_transformer_frame": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "hasattr",
    "numpy.random.randn",
    "sklearn.preprocessing.FunctionTransformer",
    "sklearn.preprocessing.tests.test_function_transformer.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_function_transformer.test_inverse_transform": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "dict",
    "numpy.around",
    "numpy.array",
    "numpy.sqrt",
    "sklearn.preprocessing.FunctionTransformer",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_function_transformer.test_kw_arg": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "dict",
    "numpy.around",
    "numpy.linspace",
    "sklearn.preprocessing.FunctionTransformer",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_function_transformer.test_kw_arg_reset": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "dict",
    "numpy.around",
    "numpy.linspace",
    "sklearn.preprocessing.FunctionTransformer",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_function_transformer.test_kw_arg_update": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "dict",
    "numpy.around",
    "numpy.linspace",
    "sklearn.preprocessing.FunctionTransformer",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_function_transformer.test_np_log": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.log1p",
    "sklearn.preprocessing.FunctionTransformer",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_label": {
  "data": {
   "symbols_in_volume": [
    "sklearn.datasets.load_iris"
   ]
  },
  "type": "module"
 },
 "sklearn.preprocessing.tests.test_label.LabelBinarizer": {
  "data": {
   "shadows": "sklearn.preprocessing._label.LabelBinarizer"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_label.LabelEncoder": {
  "data": {
   "shadows": "sklearn.preprocessing._label.LabelEncoder"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_label.MultiLabelBinarizer": {
  "data": {
   "shadows": "sklearn.preprocessing._label.MultiLabelBinarizer"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_label._inverse_binarize_multiclass": {
  "data": {
   "shadows": "sklearn.preprocessing._label._inverse_binarize_multiclass"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_label._inverse_binarize_thresholding": {
  "data": {
   "shadows": "sklearn.preprocessing._label._inverse_binarize_thresholding"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_label._to_object_array": {
  "data": {
   "shadows": "sklearn.utils._to_object_array"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_label.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_label.assert_warns_message": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_warns_message"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_label.check_binarized_results": {
  "data": {
   "lineno": 512,
   "symbols_in_volume": [
    "ValueError",
    "scipy.sparse.issparse",
    "sklearn.preprocessing._label.LabelBinarizer",
    "sklearn.preprocessing._label._inverse_binarize_multiclass",
    "sklearn.preprocessing._label._inverse_binarize_thresholding",
    "sklearn.preprocessing._label.label_binarize",
    "sklearn.preprocessing.tests.test_label.pytest",
    "sklearn.preprocessing.tests.test_label.toarray",
    "sklearn.utils._testing.assert_array_equal",
    "sklearn.utils.multiclass.type_of_target"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_label.coo_matrix": {
  "data": {
   "shadows": "scipy.sparse.coo_matrix"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_label.csc_matrix": {
  "data": {
   "shadows": "scipy.sparse.csc_matrix"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_label.csr_matrix": {
  "data": {
   "shadows": "scipy.sparse.csr_matrix"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_label.datasets": {
  "data": {
   "shadows": "sklearn.datasets"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_label.dok_matrix": {
  "data": {
   "shadows": "scipy.sparse.dok_matrix"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_label.ignore_warnings": {
  "data": {
   "shadows": "sklearn.utils._testing.ignore_warnings"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_label.iris": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "sklearn.preprocessing.tests.test_label.issparse": {
  "data": {
   "shadows": "scipy.sparse.issparse"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_label.label_binarize": {
  "data": {
   "shadows": "sklearn.preprocessing._label.label_binarize"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_label.lil_matrix": {
  "data": {
   "shadows": "scipy.sparse.lil_matrix"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_label.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_label.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_label.test_invalid_input_label_binarize": {
  "data": {
   "lineno": 606,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.preprocessing._label.label_binarize",
    "sklearn.preprocessing.tests.test_label.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_label.test_inverse_binarize_multiclass": {
  "data": {
   "lineno": 615,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "scipy.sparse.csr_matrix",
    "sklearn.preprocessing._label._inverse_binarize_multiclass",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_label.test_label_binarize_binary": {
  "data": {
   "lineno": 554,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.preprocessing.tests.test_label.check_binarized_results"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_label.test_label_binarize_multiclass": {
  "data": {
   "lineno": 573,
   "symbols_in_volume": [
    "ValueError",
    "numpy.eye",
    "sklearn.preprocessing._label.label_binarize",
    "sklearn.preprocessing.tests.test_label.check_binarized_results",
    "sklearn.preprocessing.tests.test_label.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_label.test_label_binarize_multilabel": {
  "data": {
   "lineno": 587,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "scipy.sparse.coo_matrix",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.dok_matrix",
    "scipy.sparse.lil_matrix",
    "sklearn.preprocessing._label.label_binarize",
    "sklearn.preprocessing.tests.test_label.check_binarized_results",
    "sklearn.preprocessing.tests.test_label.pytest",
    "sparse_matrix"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_label.test_label_binarize_with_class_order": {
  "data": {
   "lineno": 494,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.preprocessing._label.label_binarize",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_label.test_label_binarizer": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "numpy.array",
    "scipy.sparse.issparse",
    "sklearn.preprocessing._label.LabelBinarizer",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_label.test_label_binarizer_errors": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "scipy.sparse.csr_matrix",
    "sklearn.preprocessing._label.LabelBinarizer",
    "sklearn.preprocessing._label._inverse_binarize_thresholding",
    "sklearn.preprocessing._label.label_binarize",
    "sklearn.preprocessing.tests.test_label.pytest",
    "sklearn.utils._testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_label.test_label_binarizer_set_label_encoding": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.preprocessing._label.LabelBinarizer",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_label.test_label_binarizer_unseen_labels": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.preprocessing._label.LabelBinarizer",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_label.test_label_encoder": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "object",
    "sklearn.preprocessing._label.LabelEncoder",
    "sklearn.preprocessing.tests.test_label.pytest",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_label.test_label_encoder_empty_array": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "numpy.array",
    "object",
    "sklearn.preprocessing._label.LabelEncoder",
    "sklearn.preprocessing.tests.test_label.pytest",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_label.test_label_encoder_errors": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.preprocessing._label.LabelEncoder",
    "sklearn.preprocessing.tests.test_label.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_label.test_label_encoder_negative_ints": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.preprocessing._label.LabelEncoder",
    "sklearn.preprocessing.tests.test_label.pytest",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_label.test_label_encoder_str_bad_shape": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "sklearn.preprocessing._label.LabelEncoder",
    "sklearn.preprocessing.tests.test_label.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_label.test_multilabel_binarizer": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": [
    "inp",
    "iter",
    "numpy.array",
    "sklearn.preprocessing._label.MultiLabelBinarizer",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_label.test_multilabel_binarizer_empty_sample": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.preprocessing._label.MultiLabelBinarizer",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_label.test_multilabel_binarizer_given_classes": {
  "data": {
   "lineno": 366,
   "symbols_in_volume": [
    "ValueError",
    "inp",
    "iter",
    "numpy.array",
    "numpy.hstack",
    "sklearn.preprocessing._label.MultiLabelBinarizer",
    "sklearn.preprocessing.tests.test_label.pytest",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_label.test_multilabel_binarizer_inverse_validation": {
  "data": {
   "lineno": 475,
   "symbols_in_volume": [
    "ValueError",
    "inp",
    "numpy.array",
    "sklearn.preprocessing._label.MultiLabelBinarizer",
    "sklearn.preprocessing.tests.test_label.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_label.test_multilabel_binarizer_multiple_calls": {
  "data": {
   "lineno": 400,
   "symbols_in_volume": [
    "inp",
    "numpy.array",
    "sklearn.preprocessing._label.MultiLabelBinarizer",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_label.test_multilabel_binarizer_non_integer_labels": {
  "data": {
   "lineno": 435,
   "symbols_in_volume": [
    "TypeError",
    "inp",
    "numpy.array",
    "object",
    "sklearn.preprocessing._label.MultiLabelBinarizer",
    "sklearn.preprocessing.tests.test_label.pytest",
    "sklearn.utils._testing.assert_array_equal",
    "sklearn.utils._to_object_array"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_label.test_multilabel_binarizer_non_unique": {
  "data": {
   "lineno": 468,
   "symbols_in_volume": [
    "inp",
    "numpy.array",
    "sklearn.preprocessing._label.MultiLabelBinarizer",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_label.test_multilabel_binarizer_same_length_sequence": {
  "data": {
   "lineno": 418,
   "symbols_in_volume": [
    "inp",
    "numpy.array",
    "sklearn.preprocessing._label.MultiLabelBinarizer",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_label.test_multilabel_binarizer_unknown_class": {
  "data": {
   "lineno": 350,
   "symbols_in_volume": [
    "UserWarning",
    "numpy.array",
    "sklearn.preprocessing._label.MultiLabelBinarizer",
    "sklearn.utils._testing.assert_array_equal",
    "sklearn.utils._testing.assert_warns_message"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_label.test_sparse_output_multilabel_binarizer": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "ValueError",
    "inp",
    "iter",
    "numpy.array",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.issparse",
    "sklearn.preprocessing._label.MultiLabelBinarizer",
    "sklearn.preprocessing.tests.test_label.pytest",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_label.toarray": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_label.type_of_target": {
  "data": {
   "shadows": "sklearn.utils.multiclass.type_of_target"
  },
  "type": "import"
 },
 "sklearn.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "sklearn.random_projection": {
  "data": {},
  "type": "module"
 },
 "sklearn.random_projection.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "sklearn.random_projection.BaseRandomProjection": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "abc.ABCMeta"
   ]
  },
  "type": "class"
 },
 "sklearn.random_projection.BaseRandomProjection.__init__": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "sklearn.random_projection.BaseRandomProjection._make_random_matrix": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "sklearn.random_projection.BaseRandomProjection.fit": {
  "data": {
   "lineno": 328,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.random_projection.johnson_lindenstrauss_min_dim",
    "sklearn.random_projection.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.random_projection.BaseRandomProjection.transform": {
  "data": {
   "lineno": 392,
   "symbols_in_volume": [
    "ValueError",
    "check_array",
    "check_is_fitted",
    "safe_sparse_dot"
   ]
  },
  "type": "function"
 },
 "sklearn.random_projection.GaussianRandomProjection": {
  "data": {
   "lineno": 420,
   "symbols_in_volume": [
    "sklearn.random_projection.BaseRandomProjection"
   ]
  },
  "type": "class"
 },
 "sklearn.random_projection.GaussianRandomProjection.__init__": {
  "data": {
   "lineno": 481,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.random_projection.GaussianRandomProjection._make_random_matrix": {
  "data": {
   "lineno": 489,
   "symbols_in_volume": [
    "check_random_state",
    "sklearn.random_projection._gaussian_random_matrix"
   ]
  },
  "type": "function"
 },
 "sklearn.random_projection.SparseRandomProjection": {
  "data": {
   "lineno": 513,
   "symbols_in_volume": [
    "sklearn.random_projection.BaseRandomProjection"
   ]
  },
  "type": "class"
 },
 "sklearn.random_projection.SparseRandomProjection.__init__": {
  "data": {
   "lineno": 622,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.random_projection.SparseRandomProjection._make_random_matrix": {
  "data": {
   "lineno": 633,
   "symbols_in_volume": [
    "check_random_state",
    "sklearn.random_projection._check_density",
    "sklearn.random_projection._sparse_random_matrix"
   ]
  },
  "type": "function"
 },
 "sklearn.random_projection.__all__": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "sklearn.random_projection._check_density": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "ValueError",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "sklearn.random_projection._check_input_size": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "sklearn.random_projection._gaussian_random_matrix": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "check_random_state",
    "numpy.sqrt",
    "sklearn.random_projection._check_input_size"
   ]
  },
  "type": "function"
 },
 "sklearn.random_projection._sparse_random_matrix": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "check_random_state",
    "numpy.concatenate",
    "numpy.size",
    "numpy.sqrt",
    "range",
    "sample_without_replacement",
    "scipy.sparse.csr_matrix",
    "sklearn.random_projection._check_density",
    "sklearn.random_projection._check_input_size"
   ]
  },
  "type": "function"
 },
 "sklearn.random_projection.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "sklearn.random_projection.johnson_lindenstrauss_min_dim": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "numpy.any",
    "numpy.asarray",
    "numpy.log"
   ]
  },
  "type": "function"
 },
 "sklearn.random_projection.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.random_projection.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.random_projection.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.semi_supervised": {
  "data": {},
  "type": "module"
 },
 "sklearn.semi_supervised.__all__": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "sklearn.semi_supervised._label_propagation": {
  "data": {},
  "type": "module"
 },
 "sklearn.semi_supervised._label_propagation.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "sklearn.semi_supervised._label_propagation.BaseLabelPropagation": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "abc.ABCMeta"
   ]
  },
  "type": "class"
 },
 "sklearn.semi_supervised._label_propagation.BaseLabelPropagation.__init__": {
  "data": {
   "lineno": 109
  },
  "type": "function"
 },
 "sklearn.semi_supervised._label_propagation.BaseLabelPropagation._build_graph": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "NotImplementedError",
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "sklearn.semi_supervised._label_propagation.BaseLabelPropagation._get_kernel": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "NearestNeighbors",
    "ValueError",
    "callable",
    "rbf_kernel"
   ]
  },
  "type": "function"
 },
 "sklearn.semi_supervised._label_propagation.BaseLabelPropagation.fit": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "ValueError",
    "check_classification_targets",
    "len",
    "numpy.abs",
    "numpy.argmax",
    "numpy.asarray",
    "numpy.copy",
    "numpy.multiply",
    "numpy.newaxis",
    "numpy.sum",
    "numpy.unique",
    "numpy.where",
    "numpy.zeros",
    "range",
    "safe_sparse_dot",
    "scipy.sparse.isspmatrix",
    "sklearn.semi_supervised._label_propagation.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.semi_supervised._label_propagation.BaseLabelPropagation.predict": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "numpy.argmax"
   ]
  },
  "type": "function"
 },
 "sklearn.semi_supervised._label_propagation.BaseLabelPropagation.predict_proba": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "check_array",
    "check_is_fitted",
    "numpy.array",
    "numpy.atleast_2d",
    "numpy.sum",
    "safe_sparse_dot"
   ]
  },
  "type": "function"
 },
 "sklearn.semi_supervised._label_propagation.LabelPropagation": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": [
    "sklearn.semi_supervised._label_propagation.BaseLabelPropagation"
   ]
  },
  "type": "class"
 },
 "sklearn.semi_supervised._label_propagation.LabelPropagation.__init__": {
  "data": {
   "lineno": 383,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.semi_supervised._label_propagation.LabelPropagation._build_graph": {
  "data": {
   "lineno": 390,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.diag",
    "numpy.newaxis",
    "scipy.sparse.isspmatrix"
   ]
  },
  "type": "function"
 },
 "sklearn.semi_supervised._label_propagation.LabelPropagation.fit": {
  "data": {
   "lineno": 406,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.semi_supervised._label_propagation.LabelSpreading": {
  "data": {
   "lineno": 410,
   "symbols_in_volume": [
    "sklearn.semi_supervised._label_propagation.BaseLabelPropagation"
   ]
  },
  "type": "class"
 },
 "sklearn.semi_supervised._label_propagation.LabelSpreading.__init__": {
  "data": {
   "lineno": 497,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.semi_supervised._label_propagation.LabelSpreading._build_graph": {
  "data": {
   "lineno": 506,
   "symbols_in_volume": [
    "scipy.sparse.csgraph.laplacian",
    "scipy.sparse.isspmatrix"
   ]
  },
  "type": "function"
 },
 "sklearn.semi_supervised._label_propagation.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "sklearn.semi_supervised._label_propagation.csgraph": {
  "data": {
   "shadows": "scipy.sparse.csgraph"
  },
  "type": "import"
 },
 "sklearn.semi_supervised._label_propagation.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.semi_supervised._label_propagation.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.semi_supervised._label_propagation.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.semi_supervised._self_training": {
  "data": {},
  "type": "module"
 },
 "sklearn.semi_supervised._self_training.SelfTrainingClassifier": {
  "data": {
   "lineno": 24
  },
  "type": "class"
 },
 "sklearn.semi_supervised._self_training.SelfTrainingClassifier.__init__": {
  "data": {
   "lineno": 126
  },
  "type": "function"
 },
 "sklearn.semi_supervised._self_training.SelfTrainingClassifier.decision_function": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": [
    "check_is_fitted",
    "if_delegate_has_method"
   ]
  },
  "type": "function"
 },
 "sklearn.semi_supervised._self_training.SelfTrainingClassifier.fit": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "UserWarning",
    "ValueError",
    "bool",
    "clone",
    "min",
    "numpy.all",
    "numpy.argmax",
    "numpy.argpartition",
    "numpy.copy",
    "numpy.full_like",
    "numpy.max",
    "numpy.nonzero",
    "numpy.ones_like",
    "numpy.sum",
    "print",
    "safe_mask",
    "sklearn.semi_supervised._self_training._validate_estimator",
    "sklearn.semi_supervised._self_training.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.semi_supervised._self_training.SelfTrainingClassifier.predict": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "check_is_fitted",
    "if_delegate_has_method"
   ]
  },
  "type": "function"
 },
 "sklearn.semi_supervised._self_training.SelfTrainingClassifier.predict_log_proba": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": [
    "check_is_fitted",
    "if_delegate_has_method"
   ]
  },
  "type": "function"
 },
 "sklearn.semi_supervised._self_training.SelfTrainingClassifier.predict_proba": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": [
    "check_is_fitted"
   ]
  },
  "type": "function"
 },
 "sklearn.semi_supervised._self_training.SelfTrainingClassifier.score": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": [
    "check_is_fitted",
    "if_delegate_has_method"
   ]
  },
  "type": "function"
 },
 "sklearn.semi_supervised._self_training.__all__": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "sklearn.semi_supervised._self_training._validate_estimator": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "ValueError",
    "hasattr",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.semi_supervised._self_training.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.semi_supervised._self_training.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.semi_supervised.tests": {
  "data": {},
  "type": "module"
 },
 "sklearn.semi_supervised.tests.test_label_propagation": {
  "data": {
   "symbols_in_volume": [
    "sklearn.metrics.pairwise.rbf_kernel",
    "sklearn.semi_supervised._label_propagation.LabelPropagation",
    "sklearn.semi_supervised._label_propagation.LabelSpreading"
   ]
  },
  "type": "module"
 },
 "sklearn.semi_supervised.tests.test_label_propagation.ConvergenceWarning": {
  "data": {
   "shadows": "sklearn.exceptions.ConvergenceWarning"
  },
  "type": "import"
 },
 "sklearn.semi_supervised.tests.test_label_propagation.ESTIMATORS": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "sklearn.semi_supervised.tests.test_label_propagation.NearestNeighbors": {
  "data": {
   "shadows": "sklearn.neighbors.NearestNeighbors"
  },
  "type": "import"
 },
 "sklearn.semi_supervised.tests.test_label_propagation.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.semi_supervised.tests.test_label_propagation.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.semi_supervised.tests.test_label_propagation.assert_no_warnings": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_no_warnings"
  },
  "type": "import"
 },
 "sklearn.semi_supervised.tests.test_label_propagation.assert_warns": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_warns"
  },
  "type": "import"
 },
 "sklearn.semi_supervised.tests.test_label_propagation.issparse": {
  "data": {
   "shadows": "scipy.sparse.issparse"
  },
  "type": "import"
 },
 "sklearn.semi_supervised.tests.test_label_propagation.label_propagation": {
  "data": {
   "shadows": "sklearn.semi_supervised._label_propagation"
  },
  "type": "import"
 },
 "sklearn.semi_supervised.tests.test_label_propagation.make_classification": {
  "data": {
   "shadows": "sklearn.datasets.make_classification"
  },
  "type": "import"
 },
 "sklearn.semi_supervised.tests.test_label_propagation.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.semi_supervised.tests.test_label_propagation.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.semi_supervised.tests.test_label_propagation.rbf_kernel": {
  "data": {
   "shadows": "sklearn.metrics.pairwise.rbf_kernel"
  },
  "type": "import"
 },
 "sklearn.semi_supervised.tests.test_label_propagation.test_convergence_speed": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.assert_array_equal",
    "sklearn.semi_supervised._label_propagation.LabelSpreading"
   ]
  },
  "type": "function"
 },
 "sklearn.semi_supervised.tests.test_label_propagation.test_convergence_warning": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.exceptions.ConvergenceWarning",
    "sklearn.semi_supervised._label_propagation.LabelPropagation",
    "sklearn.semi_supervised._label_propagation.LabelSpreading",
    "sklearn.utils._testing.assert_no_warnings",
    "sklearn.utils._testing.assert_warns"
   ]
  },
  "type": "function"
 },
 "sklearn.semi_supervised.tests.test_label_propagation.test_distribution": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "estimator",
    "numpy.array",
    "numpy.asarray",
    "numpy.testing.assert_array_almost_equal",
    "sklearn.semi_supervised.tests.test_label_propagation.ESTIMATORS"
   ]
  },
  "type": "function"
 },
 "sklearn.semi_supervised.tests.test_label_propagation.test_fit_transduction": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "estimator",
    "sklearn.semi_supervised.tests.test_label_propagation.ESTIMATORS"
   ]
  },
  "type": "function"
 },
 "sklearn.semi_supervised.tests.test_label_propagation.test_label_propagation_closed_form": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "numpy.dot",
    "numpy.eye",
    "numpy.linalg.inv",
    "numpy.meshgrid",
    "numpy.newaxis",
    "numpy.testing.assert_array_almost_equal",
    "numpy.zeros",
    "sklearn.datasets.make_classification",
    "sklearn.semi_supervised._label_propagation.LabelPropagation",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sklearn.semi_supervised.tests.test_label_propagation.test_label_propagation_non_zero_normalizer": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.semi_supervised._label_propagation.LabelSpreading",
    "sklearn.utils._testing.assert_no_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.semi_supervised.tests.test_label_propagation.test_label_spreading_closed_form": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "numpy.dot",
    "numpy.eye",
    "numpy.linalg.inv",
    "numpy.newaxis",
    "numpy.testing.assert_array_almost_equal",
    "numpy.zeros",
    "sklearn.datasets.make_classification",
    "sklearn.semi_supervised._label_propagation.LabelSpreading"
   ]
  },
  "type": "function"
 },
 "sklearn.semi_supervised.tests.test_label_propagation.test_predict": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "estimator",
    "numpy.array",
    "numpy.testing.assert_array_equal",
    "sklearn.semi_supervised.tests.test_label_propagation.ESTIMATORS"
   ]
  },
  "type": "function"
 },
 "sklearn.semi_supervised.tests.test_label_propagation.test_predict_proba": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "estimator",
    "numpy.array",
    "numpy.testing.assert_array_almost_equal",
    "sklearn.semi_supervised.tests.test_label_propagation.ESTIMATORS"
   ]
  },
  "type": "function"
 },
 "sklearn.semi_supervised.tests.test_label_propagation.test_predict_sparse_callable_kernel": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "sklearn.datasets.make_classification",
    "sklearn.model_selection.train_test_split",
    "sklearn.semi_supervised._label_propagation.LabelPropagation",
    "sklearn.semi_supervised._label_propagation.LabelSpreading"
   ]
  },
  "type": "function"
 },
 "sklearn.semi_supervised.tests.test_label_propagation.test_predict_sparse_callable_kernel.topk_rbf": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "numpy.exp",
    "scipy.sparse.issparse",
    "sklearn.neighbors.NearestNeighbors"
   ]
  },
  "type": "function"
 },
 "sklearn.semi_supervised.tests.test_label_propagation.test_valid_alpha": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.datasets.make_classification",
    "sklearn.semi_supervised._label_propagation.LabelSpreading",
    "sklearn.semi_supervised.tests.test_label_propagation.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.semi_supervised.tests.test_label_propagation.train_test_split": {
  "data": {
   "shadows": "sklearn.model_selection.train_test_split"
  },
  "type": "import"
 },
 "sklearn.semi_supervised.tests.test_self_training": {
  "data": {
   "symbols_in_volume": [
    "numpy.vectorize",
    "object",
    "sklearn.datasets.load_iris",
    "sklearn.model_selection.train_test_split",
    "sklearn.semi_supervised.tests.test_self_training.iris",
    "sklearn.semi_supervised.tests.test_self_training.mapping",
    "sklearn.semi_supervised.tests.test_self_training.n_labeled_samples",
    "sklearn.semi_supervised.tests.test_self_training.y_train_missing_labels",
    "sklearn.semi_supervised.tests.test_self_training.y_train_missing_strings"
   ]
  },
  "type": "module"
 },
 "sklearn.semi_supervised.tests.test_self_training.KNeighborsClassifier": {
  "data": {
   "shadows": "sklearn.neighbors.KNeighborsClassifier"
  },
  "type": "import"
 },
 "sklearn.semi_supervised.tests.test_self_training.NotFittedError": {
  "data": {
   "shadows": "sklearn.exceptions.NotFittedError"
  },
  "type": "import"
 },
 "sklearn.semi_supervised.tests.test_self_training.SVC": {
  "data": {
   "shadows": "sklearn.svm.SVC"
  },
  "type": "import"
 },
 "sklearn.semi_supervised.tests.test_self_training.SelfTrainingClassifier": {
  "data": {
   "shadows": "sklearn.semi_supervised.SelfTrainingClassifier"
  },
  "type": "import"
 },
 "sklearn.semi_supervised.tests.test_self_training.accuracy_score": {
  "data": {
   "shadows": "sklearn.metrics.accuracy_score"
  },
  "type": "import"
 },
 "sklearn.semi_supervised.tests.test_self_training.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.semi_supervised.tests.test_self_training.ceil": {
  "data": {
   "shadows": "math.ceil"
  },
  "type": "import"
 },
 "sklearn.semi_supervised.tests.test_self_training.iris": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "sklearn.semi_supervised.tests.test_self_training.load_iris": {
  "data": {
   "shadows": "sklearn.datasets.load_iris"
  },
  "type": "import"
 },
 "sklearn.semi_supervised.tests.test_self_training.make_blobs": {
  "data": {
   "shadows": "sklearn.datasets.make_blobs"
  },
  "type": "import"
 },
 "sklearn.semi_supervised.tests.test_self_training.mapping": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "sklearn.semi_supervised.tests.test_self_training.n_labeled_samples": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "sklearn.semi_supervised.tests.test_self_training.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.semi_supervised.tests.test_self_training.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.semi_supervised.tests.test_self_training.test_classification": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "numpy.max",
    "numpy.testing.assert_array_equal",
    "numpy.vectorize",
    "sklearn.neighbors.KNeighborsClassifier",
    "sklearn.semi_supervised.SelfTrainingClassifier",
    "sklearn.semi_supervised.tests.test_self_training.mapping",
    "sklearn.semi_supervised.tests.test_self_training.pytest",
    "sklearn.semi_supervised.tests.test_self_training.y_train_missing_labels",
    "sklearn.semi_supervised.tests.test_self_training.y_train_missing_strings",
    "sklearn.svm.SVC"
   ]
  },
  "type": "function"
 },
 "sklearn.semi_supervised.tests.test_self_training.test_early_stopping": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "sklearn.semi_supervised.SelfTrainingClassifier",
    "sklearn.svm.SVC"
   ]
  },
  "type": "function"
 },
 "sklearn.semi_supervised.tests.test_self_training.test_invalid_params": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.semi_supervised.SelfTrainingClassifier",
    "sklearn.semi_supervised.tests.test_self_training.pytest",
    "sklearn.svm.SVC"
   ]
  },
  "type": "function"
 },
 "sklearn.semi_supervised.tests.test_self_training.test_invalid_params_selection_crit": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.neighbors.KNeighborsClassifier",
    "sklearn.semi_supervised.SelfTrainingClassifier",
    "sklearn.semi_supervised.tests.test_self_training.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.semi_supervised.tests.test_self_training.test_k_best": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "math.ceil",
    "numpy.copy",
    "numpy.sum",
    "range",
    "sklearn.neighbors.KNeighborsClassifier",
    "sklearn.semi_supervised.SelfTrainingClassifier"
   ]
  },
  "type": "function"
 },
 "sklearn.semi_supervised.tests.test_self_training.test_k_best_selects_best": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "numpy.argsort",
    "numpy.max",
    "numpy.where",
    "sklearn.semi_supervised.SelfTrainingClassifier",
    "sklearn.semi_supervised.tests.test_self_training.y_train_missing_labels",
    "sklearn.svm.SVC"
   ]
  },
  "type": "function"
 },
 "sklearn.semi_supervised.tests.test_self_training.test_labeled_iter": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "len",
    "numpy.max",
    "range",
    "sklearn.neighbors.KNeighborsClassifier",
    "sklearn.semi_supervised.SelfTrainingClassifier",
    "sklearn.semi_supervised.tests.test_self_training.n_labeled_samples",
    "sklearn.semi_supervised.tests.test_self_training.pytest",
    "sklearn.semi_supervised.tests.test_self_training.y_train_missing_labels"
   ]
  },
  "type": "function"
 },
 "sklearn.semi_supervised.tests.test_self_training.test_missing_predict_proba": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.semi_supervised.SelfTrainingClassifier",
    "sklearn.semi_supervised.tests.test_self_training.pytest",
    "sklearn.semi_supervised.tests.test_self_training.y_train_missing_labels",
    "sklearn.svm.SVC"
   ]
  },
  "type": "function"
 },
 "sklearn.semi_supervised.tests.test_self_training.test_no_unlabeled": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "UserWarning",
    "numpy.all",
    "numpy.testing.assert_array_equal",
    "sklearn.neighbors.KNeighborsClassifier",
    "sklearn.semi_supervised.SelfTrainingClassifier",
    "sklearn.semi_supervised.tests.test_self_training.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.semi_supervised.tests.test_self_training.test_none_classifier": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.semi_supervised.SelfTrainingClassifier",
    "sklearn.semi_supervised.tests.test_self_training.pytest",
    "sklearn.semi_supervised.tests.test_self_training.y_train_missing_labels"
   ]
  },
  "type": "function"
 },
 "sklearn.semi_supervised.tests.test_self_training.test_none_iter": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "sklearn.neighbors.KNeighborsClassifier",
    "sklearn.semi_supervised.SelfTrainingClassifier",
    "sklearn.semi_supervised.tests.test_self_training.y_train_missing_labels"
   ]
  },
  "type": "function"
 },
 "sklearn.semi_supervised.tests.test_self_training.test_prefitted_throws_error": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "sklearn.exceptions.NotFittedError",
    "sklearn.neighbors.KNeighborsClassifier",
    "sklearn.semi_supervised.SelfTrainingClassifier",
    "sklearn.semi_supervised.tests.test_self_training.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.semi_supervised.tests.test_self_training.test_sanity_classification": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "numpy.array_equal",
    "sklearn.metrics.accuracy_score",
    "sklearn.semi_supervised.SelfTrainingClassifier",
    "sklearn.semi_supervised.tests.test_self_training.n_labeled_samples",
    "sklearn.semi_supervised.tests.test_self_training.y_train_missing_labels",
    "sklearn.svm.SVC"
   ]
  },
  "type": "function"
 },
 "sklearn.semi_supervised.tests.test_self_training.test_strings_dtype": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "ValueError",
    "numpy.take",
    "sklearn.datasets.make_blobs",
    "sklearn.neighbors.KNeighborsClassifier",
    "sklearn.semi_supervised.SelfTrainingClassifier",
    "sklearn.semi_supervised.tests.test_self_training.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.semi_supervised.tests.test_self_training.test_verbose": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "sklearn.neighbors.KNeighborsClassifier",
    "sklearn.semi_supervised.SelfTrainingClassifier",
    "sklearn.semi_supervised.tests.test_self_training.pytest",
    "sklearn.semi_supervised.tests.test_self_training.y_train_missing_labels"
   ]
  },
  "type": "function"
 },
 "sklearn.semi_supervised.tests.test_self_training.test_verbose_k_best": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "math.ceil",
    "numpy.copy",
    "range",
    "sklearn.neighbors.KNeighborsClassifier",
    "sklearn.semi_supervised.SelfTrainingClassifier"
   ]
  },
  "type": "function"
 },
 "sklearn.semi_supervised.tests.test_self_training.test_warns_k_best": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "UserWarning",
    "sklearn.neighbors.KNeighborsClassifier",
    "sklearn.semi_supervised.SelfTrainingClassifier",
    "sklearn.semi_supervised.tests.test_self_training.pytest",
    "sklearn.semi_supervised.tests.test_self_training.y_train_missing_labels"
   ]
  },
  "type": "function"
 },
 "sklearn.semi_supervised.tests.test_self_training.test_zero_iterations": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "numpy.testing.assert_array_equal",
    "sklearn.neighbors.KNeighborsClassifier",
    "sklearn.semi_supervised.SelfTrainingClassifier",
    "sklearn.semi_supervised.tests.test_self_training.n_labeled_samples",
    "sklearn.semi_supervised.tests.test_self_training.pytest",
    "sklearn.semi_supervised.tests.test_self_training.y_train_missing_labels",
    "sklearn.semi_supervised.tests.test_self_training.y_train_missing_strings",
    "sklearn.svm.SVC"
   ]
  },
  "type": "function"
 },
 "sklearn.semi_supervised.tests.test_self_training.train_test_split": {
  "data": {
   "shadows": "sklearn.model_selection.train_test_split"
  },
  "type": "import"
 },
 "sklearn.semi_supervised.tests.test_self_training.y_train_missing_labels": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "sklearn.semi_supervised.tests.test_self_training.y_train_missing_strings": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "sklearn.setup": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.distutils.core.setup",
    "sklearn.setup.configuration"
   ]
  },
  "type": "module"
 },
 "sklearn.setup.Configuration": {
  "data": {
   "shadows": "numpy.distutils.misc_util.Configuration"
  },
  "type": "import"
 },
 "sklearn.setup.configuration": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "numpy.distutils.misc_util.Configuration",
    "sklearn._build_utils.cythonize_extensions",
    "sklearn.setup.numpy",
    "sklearn.setup.os",
    "sklearn.setup.sys"
   ]
  },
  "type": "function"
 },
 "sklearn.setup.cythonize_extensions": {
  "data": {
   "shadows": "sklearn._build_utils.cythonize_extensions"
  },
  "type": "import"
 },
 "sklearn.setup.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.setup.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "sklearn.setup.setup": {
  "data": {
   "shadows": "numpy.distutils.core.setup"
  },
  "type": "import"
 },
 "sklearn.setup.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "sklearn.setup_module": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "int",
    "numpy.iinfo",
    "numpy.int32",
    "numpy.random.seed",
    "numpy.random.uniform",
    "print",
    "sklearn.os",
    "sklearn.random"
   ]
  },
  "type": "function"
 },
 "sklearn.svm": {
  "data": {},
  "type": "module"
 },
 "sklearn.svm.__all__": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "sklearn.svm._base": {
  "data": {},
  "type": "module"
 },
 "sklearn.svm._base.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "sklearn.svm._base.BaseLibSVM": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "abc.ABCMeta"
   ]
  },
  "type": "class"
 },
 "sklearn.svm._base.BaseLibSVM.__init__": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "ValueError",
    "abc.abstractmethod",
    "sklearn.svm._base.LIBSVM_IMPL"
   ]
  },
  "type": "function"
 },
 "sklearn.svm._base.BaseLibSVM._compute_kernel": {
  "data": {
   "lineno": 391,
   "symbols_in_volume": [
    "callable",
    "numpy.asarray",
    "numpy.float64",
    "scipy.sparse.issparse"
   ]
  },
  "type": "function"
 },
 "sklearn.svm._base.BaseLibSVM._decision_function": {
  "data": {
   "lineno": 402,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "sklearn.svm._base.BaseLibSVM._dense_decision_function": {
  "data": {
   "lineno": 432,
   "symbols_in_volume": [
    "callable",
    "check_array",
    "numpy.float64",
    "sklearn.svm._base.LIBSVM_IMPL"
   ]
  },
  "type": "function"
 },
 "sklearn.svm._base.BaseLibSVM._dense_fit": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "ValueError",
    "callable"
   ]
  },
  "type": "function"
 },
 "sklearn.svm._base.BaseLibSVM._dense_predict": {
  "data": {
   "lineno": 346,
   "symbols_in_volume": [
    "ValueError",
    "callable",
    "check_array",
    "sklearn.svm._base.LIBSVM_IMPL"
   ]
  },
  "type": "function"
 },
 "sklearn.svm._base.BaseLibSVM._get_coef": {
  "data": {
   "lineno": 516,
   "symbols_in_volume": [
    "safe_sparse_dot"
   ]
  },
  "type": "function"
 },
 "sklearn.svm._base.BaseLibSVM._more_tags": {
  "data": {
   "lineno": 106
  },
  "type": "function"
 },
 "sklearn.svm._base.BaseLibSVM._pairwise": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "deprecated",
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.svm._base.BaseLibSVM._sparse_decision_function": {
  "data": {
   "lineno": 448,
   "symbols_in_volume": [
    "hasattr",
    "numpy.asarray",
    "numpy.float64",
    "sklearn.svm._base.LIBSVM_IMPL"
   ]
  },
  "type": "function"
 },
 "sklearn.svm._base.BaseLibSVM._sparse_fit": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "hasattr",
    "int",
    "len",
    "numpy.arange",
    "numpy.asarray",
    "numpy.float64",
    "numpy.tile",
    "scipy.sparse.csr_matrix"
   ]
  },
  "type": "function"
 },
 "sklearn.svm._base.BaseLibSVM._sparse_predict": {
  "data": {
   "lineno": 368,
   "symbols_in_volume": [
    "callable",
    "sklearn.svm._base.LIBSVM_IMPL"
   ]
  },
  "type": "function"
 },
 "sklearn.svm._base.BaseLibSVM._validate_for_predict": {
  "data": {
   "lineno": 470,
   "symbols_in_volume": [
    "ValueError",
    "callable",
    "check_array",
    "check_is_fitted",
    "numpy.float64",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.issparse",
    "scipy.sparse.isspmatrix",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.svm._base.BaseLibSVM._validate_targets": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "column_or_1d",
    "numpy.empty",
    "numpy.float64"
   ]
  },
  "type": "function"
 },
 "sklearn.svm._base.BaseLibSVM._warn_from_fit_status": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "sklearn.svm._base.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.svm._base.BaseLibSVM.coef_": {
  "data": {
   "lineno": 498,
   "symbols_in_volume": [
    "AttributeError",
    "property",
    "scipy.sparse.issparse"
   ]
  },
  "type": "function"
 },
 "sklearn.svm._base.BaseLibSVM.fit": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "_num_samples",
    "callable",
    "check_consistent_length",
    "check_random_state",
    "fit",
    "hasattr",
    "isinstance",
    "len",
    "numpy.asarray",
    "numpy.float64",
    "numpy.iinfo",
    "print",
    "scipy.sparse.isspmatrix",
    "sklearn.svm._base.LIBSVM_IMPL",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.svm._base.BaseLibSVM.n_support_": {
  "data": {
   "lineno": 519,
   "symbols_in_volume": [
    "AttributeError",
    "check_is_fitted",
    "numpy.array",
    "property",
    "sklearn.svm._base.LIBSVM_IMPL"
   ]
  },
  "type": "function"
 },
 "sklearn.svm._base.BaseLibSVM.predict": {
  "data": {
   "lineno": 327,
   "symbols_in_volume": [
    "predict"
   ]
  },
  "type": "function"
 },
 "sklearn.svm._base.BaseSVC": {
  "data": {
   "lineno": 535,
   "symbols_in_volume": [
    "abc.ABCMeta",
    "sklearn.svm._base.BaseLibSVM"
   ]
  },
  "type": "class"
 },
 "sklearn.svm._base.BaseSVC.__init__": {
  "data": {
   "lineno": 537,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.svm._base.BaseSVC._check_proba": {
  "data": {
   "lineno": 631,
   "symbols_in_volume": [
    "AttributeError"
   ]
  },
  "type": "function"
 },
 "sklearn.svm._base.BaseSVC._dense_predict_proba": {
  "data": {
   "lineno": 712,
   "symbols_in_volume": [
    "callable",
    "sklearn.svm._base.LIBSVM_IMPL"
   ]
  },
  "type": "function"
 },
 "sklearn.svm._base.BaseSVC._get_coef": {
  "data": {
   "lineno": 751,
   "symbols_in_volume": [
    "numpy.vstack",
    "safe_sparse_dot",
    "scipy.sparse.issparse",
    "scipy.sparse.vstack",
    "sklearn.svm._base._one_vs_one_coef"
   ]
  },
  "type": "function"
 },
 "sklearn.svm._base.BaseSVC._predict_log_proba": {
  "data": {
   "lineno": 709,
   "symbols_in_volume": [
    "numpy.log"
   ]
  },
  "type": "function"
 },
 "sklearn.svm._base.BaseSVC._predict_proba": {
  "data": {
   "lineno": 669,
   "symbols_in_volume": [
    "NotFittedError",
    "pred_proba"
   ]
  },
  "type": "function"
 },
 "sklearn.svm._base.BaseSVC._sparse_predict_proba": {
  "data": {
   "lineno": 729,
   "symbols_in_volume": [
    "callable",
    "numpy.asarray",
    "numpy.float64",
    "sklearn.svm._base.LIBSVM_IMPL"
   ]
  },
  "type": "function"
 },
 "sklearn.svm._base.BaseSVC._validate_targets": {
  "data": {
   "lineno": 551,
   "symbols_in_volume": [
    "ValueError",
    "check_classification_targets",
    "column_or_1d",
    "compute_class_weight",
    "len",
    "numpy.asarray",
    "numpy.float64",
    "numpy.unique"
   ]
  },
  "type": "function"
 },
 "sklearn.svm._base.BaseSVC.decision_function": {
  "data": {
   "lineno": 566,
   "symbols_in_volume": [
    "_ovr_decision_function",
    "len"
   ]
  },
  "type": "function"
 },
 "sklearn.svm._base.BaseSVC.predict": {
  "data": {
   "lineno": 597,
   "symbols_in_volume": [
    "ValueError",
    "check_is_fitted",
    "len",
    "numpy.argmax",
    "numpy.asarray",
    "numpy.intp",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.svm._base.BaseSVC.predict_log_proba": {
  "data": {
   "lineno": 678,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.svm._base.BaseSVC.predict_proba": {
  "data": {
   "lineno": 639,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.svm._base.BaseSVC.probA_": {
  "data": {
   "lineno": 766,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.svm._base.BaseSVC.probB_": {
  "data": {
   "lineno": 770,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.svm._base.LIBSVM_IMPL": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "sklearn.svm._base._fit_liblinear": {
  "data": {
   "lineno": 835,
   "symbols_in_volume": [
    "LabelEncoder",
    "ValueError",
    "_check_large_sparse",
    "_check_sample_weight",
    "check_random_state",
    "compute_class_weight",
    "len",
    "max",
    "numpy.asarray",
    "numpy.empty",
    "numpy.float64",
    "numpy.iinfo",
    "numpy.require",
    "print",
    "scipy.sparse.issparse",
    "scipy.sparse.isspmatrix",
    "sklearn.svm._base._get_liblinear_solver_type",
    "sklearn.svm._base.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.svm._base._get_liblinear_solver_type": {
  "data": {
   "lineno": 775,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "sklearn.svm._base._one_vs_one_coef": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "numpy.cumsum",
    "numpy.hstack",
    "range",
    "safe_sparse_dot"
   ]
  },
  "type": "function"
 },
 "sklearn.svm._base.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "sklearn.svm._base.liblinear": {
  "data": {
   "shadows": "_liblinear"
  },
  "type": "import"
 },
 "sklearn.svm._base.libsvm": {
  "data": {
   "shadows": "_libsvm"
  },
  "type": "import"
 },
 "sklearn.svm._base.libsvm_sparse": {
  "data": {
   "shadows": "_libsvm_sparse"
  },
  "type": "import"
 },
 "sklearn.svm._base.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.svm._base.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.svm._base.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.svm._bounds": {
  "data": {},
  "type": "module"
 },
 "sklearn.svm._bounds.l1_min_c": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "LabelBinarizer",
    "ValueError",
    "abs",
    "check_array",
    "check_consistent_length",
    "max",
    "numpy.abs",
    "numpy.array",
    "numpy.dot",
    "numpy.full",
    "numpy.max",
    "numpy.size",
    "safe_sparse_dot"
   ]
  },
  "type": "function"
 },
 "sklearn.svm._bounds.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.svm._classes": {
  "data": {},
  "type": "module"
 },
 "sklearn.svm._classes.LinearSVC": {
  "data": {
   "lineno": 13
  },
  "type": "class"
 },
 "sklearn.svm._classes.LinearSVC.__init__": {
  "data": {
   "lineno": 182
  },
  "type": "function"
 },
 "sklearn.svm._classes.LinearSVC._more_tags": {
  "data": {
   "lineno": 248
  },
  "type": "function"
 },
 "sklearn.svm._classes.LinearSVC.fit": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "ValueError",
    "_fit_liblinear",
    "check_classification_targets",
    "len",
    "numpy.array",
    "numpy.float64",
    "numpy.unique"
   ]
  },
  "type": "function"
 },
 "sklearn.svm._classes.LinearSVR": {
  "data": {
   "lineno": 257
  },
  "type": "class"
 },
 "sklearn.svm._classes.LinearSVR.__init__": {
  "data": {
   "lineno": 377
  },
  "type": "function"
 },
 "sklearn.svm._classes.LinearSVR._more_tags": {
  "data": {
   "lineno": 434
  },
  "type": "function"
 },
 "sklearn.svm._classes.LinearSVR.fit": {
  "data": {
   "lineno": 393,
   "symbols_in_volume": [
    "ValueError",
    "_fit_liblinear",
    "numpy.float64"
   ]
  },
  "type": "function"
 },
 "sklearn.svm._classes.NuSVC": {
  "data": {
   "lineno": 675
  },
  "type": "class"
 },
 "sklearn.svm._classes.NuSVC.__init__": {
  "data": {
   "lineno": 870,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.svm._classes.NuSVC._more_tags": {
  "data": {
   "lineno": 886
  },
  "type": "function"
 },
 "sklearn.svm._classes.NuSVR": {
  "data": {
   "lineno": 1073
  },
  "type": "class"
 },
 "sklearn.svm._classes.NuSVR.__init__": {
  "data": {
   "lineno": 1206,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.svm._classes.NuSVR._more_tags": {
  "data": {
   "lineno": 1217
  },
  "type": "function"
 },
 "sklearn.svm._classes.OneClassSVM": {
  "data": {
   "lineno": 1226
  },
  "type": "class"
 },
 "sklearn.svm._classes.OneClassSVM.__init__": {
  "data": {
   "lineno": 1341,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.svm._classes.OneClassSVM._more_tags": {
  "data": {
   "lineno": 1450
  },
  "type": "function"
 },
 "sklearn.svm._classes.OneClassSVM.decision_function": {
  "data": {
   "lineno": 1381
  },
  "type": "function"
 },
 "sklearn.svm._classes.OneClassSVM.fit": {
  "data": {
   "lineno": 1351,
   "symbols_in_volume": [
    "_num_samples",
    "numpy.ones",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.svm._classes.OneClassSVM.predict": {
  "data": {
   "lineno": 1414,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.intp",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.svm._classes.OneClassSVM.probA_": {
  "data": {
   "lineno": 1435,
   "symbols_in_volume": [
    "deprecated",
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.svm._classes.OneClassSVM.probB_": {
  "data": {
   "lineno": 1443,
   "symbols_in_volume": [
    "deprecated",
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.svm._classes.OneClassSVM.score_samples": {
  "data": {
   "lineno": 1399
  },
  "type": "function"
 },
 "sklearn.svm._classes.SVC": {
  "data": {
   "lineno": 443
  },
  "type": "class"
 },
 "sklearn.svm._classes.SVC.__init__": {
  "data": {
   "lineno": 649,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.svm._classes.SVC._more_tags": {
  "data": {
   "lineno": 666
  },
  "type": "function"
 },
 "sklearn.svm._classes.SVR": {
  "data": {
   "lineno": 898
  },
  "type": "class"
 },
 "sklearn.svm._classes.SVR.__init__": {
  "data": {
   "lineno": 1037,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.svm._classes.SVR._more_tags": {
  "data": {
   "lineno": 1064
  },
  "type": "function"
 },
 "sklearn.svm._classes.SVR.probA_": {
  "data": {
   "lineno": 1049,
   "symbols_in_volume": [
    "deprecated",
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.svm._classes.SVR.probB_": {
  "data": {
   "lineno": 1057,
   "symbols_in_volume": [
    "deprecated",
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.svm._classes.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.svm.setup": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.distutils.core.setup",
    "sklearn.svm.setup.configuration"
   ]
  },
  "type": "module"
 },
 "sklearn.svm.setup.Configuration": {
  "data": {
   "shadows": "numpy.distutils.misc_util.Configuration"
  },
  "type": "import"
 },
 "sklearn.svm.setup.configuration": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "numpy.distutils.misc_util.Configuration",
    "os.path.join",
    "sklearn.svm.setup.numpy",
    "sklearn.svm.setup.os"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.setup.join": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "sklearn.svm.setup.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.svm.setup.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "sklearn.svm.setup.setup": {
  "data": {
   "shadows": "numpy.distutils.core.setup"
  },
  "type": "import"
 },
 "sklearn.svm.tests": {
  "data": {},
  "type": "module"
 },
 "sklearn.svm.tests.test_bounds": {
  "data": {
   "symbols_in_volume": [
    "scipy.sparse.csr_matrix",
    "sklearn.svm.tests.test_bounds.dense_X"
   ]
  },
  "type": "module"
 },
 "sklearn.svm.tests.test_bounds.LinearSVC": {
  "data": {
   "shadows": "sklearn.svm.LinearSVC"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_bounds.LogisticRegression": {
  "data": {
   "shadows": "sklearn.linear_model.LogisticRegression"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_bounds.Y1": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "sklearn.svm.tests.test_bounds.Y2": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "sklearn.svm.tests.test_bounds._MAX_UNSIGNED_INT": {
  "data": {
   "lineno": 81
  },
  "type": "constant"
 },
 "sklearn.svm.tests.test_bounds.assert_raise_message": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_raise_message"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_bounds.bounded_rand_int_wrap": {
  "data": {
   "shadows": "sklearn.svm._newrand.bounded_rand_int_wrap"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_bounds.check_l1_min_c": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "numpy.asarray",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.svm.LinearSVC",
    "sklearn.svm._bounds.l1_min_c"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_bounds.dense_X": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "sklearn.svm.tests.test_bounds.l1_min_c": {
  "data": {
   "shadows": "sklearn.svm._bounds.l1_min_c"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_bounds.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_bounds.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_bounds.set_seed_wrap": {
  "data": {
   "shadows": "sklearn.svm._newrand.set_seed_wrap"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_bounds.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_bounds.sparse_X": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "sklearn.svm.tests.test_bounds.stats": {
  "data": {
   "shadows": "scipy.stats"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_bounds.test_ill_posed_min_c": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.svm._bounds.l1_min_c",
    "sklearn.svm.tests.test_bounds.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_bounds.test_l1_min_c": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "sklearn.svm.tests.test_bounds.Y1",
    "sklearn.svm.tests.test_bounds.Y2",
    "sklearn.svm.tests.test_bounds.check_l1_min_c",
    "sklearn.svm.tests.test_bounds.dense_X",
    "sklearn.svm.tests.test_bounds.pytest",
    "sklearn.svm.tests.test_bounds.sparse_X"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_bounds.test_l1_min_c_l2_loss": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.svm._bounds.l1_min_c",
    "sklearn.svm.tests.test_bounds.Y1",
    "sklearn.svm.tests.test_bounds.dense_X",
    "sklearn.utils._testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_bounds.test_newrand_bounded_rand_int": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "numpy.percentile",
    "range",
    "scipy.stats.kstest",
    "scipy.stats.uniform",
    "sklearn.svm._newrand.bounded_rand_int_wrap",
    "sklearn.svm.tests.test_bounds._MAX_UNSIGNED_INT",
    "sklearn.svm.tests.test_bounds.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_bounds.test_newrand_bounded_rand_int_limits": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "OverflowError",
    "sklearn.svm._newrand.bounded_rand_int_wrap",
    "sklearn.svm.tests.test_bounds._MAX_UNSIGNED_INT",
    "sklearn.svm.tests.test_bounds.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_bounds.test_newrand_set_seed": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "sklearn.svm._newrand.bounded_rand_int_wrap",
    "sklearn.svm._newrand.set_seed_wrap",
    "sklearn.svm.tests.test_bounds._MAX_UNSIGNED_INT",
    "sklearn.svm.tests.test_bounds.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_bounds.test_newrand_set_seed_overflow": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "OverflowError",
    "sklearn.svm._newrand.set_seed_wrap",
    "sklearn.svm.tests.test_bounds._MAX_UNSIGNED_INT",
    "sklearn.svm.tests.test_bounds.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_bounds.test_unsupported_loss": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.svm._bounds.l1_min_c",
    "sklearn.svm.tests.test_bounds.Y1",
    "sklearn.svm.tests.test_bounds.dense_X",
    "sklearn.svm.tests.test_bounds.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_sparse": {
  "data": {
   "symbols_in_volume": [
    "numpy.array",
    "numpy.random.RandomState",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.dok_matrix",
    "scipy.sparse.lil_matrix",
    "sklearn.datasets.load_iris",
    "sklearn.svm.tests.test_sparse.X",
    "sklearn.svm.tests.test_sparse.X2",
    "sklearn.svm.tests.test_sparse.iris",
    "sklearn.svm.tests.test_sparse.perm",
    "sklearn.svm.tests.test_sparse.rng"
   ]
  },
  "type": "module"
 },
 "sklearn.svm.tests.test_sparse.ConvergenceWarning": {
  "data": {
   "shadows": "sklearn.exceptions.ConvergenceWarning"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_sparse.T": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "sklearn.svm.tests.test_sparse.T2": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "sklearn.svm.tests.test_sparse.X": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "sklearn.svm.tests.test_sparse.X2": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "sklearn.svm.tests.test_sparse.X2_sp": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "sklearn.svm.tests.test_sparse.X_sp": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "sklearn.svm.tests.test_sparse.Y": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "sklearn.svm.tests.test_sparse.Y2": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "sklearn.svm.tests.test_sparse.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_sparse.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_sparse.assert_raise_message": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_raise_message"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_sparse.assert_warns": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_warns"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_sparse.base": {
  "data": {
   "shadows": "sklearn.base"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_sparse.check_svm_model_equal": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "numpy.testing.assert_array_almost_equal",
    "scipy.sparse.issparse",
    "scipy.sparse.isspmatrix",
    "sklearn.svm.OneClassSVM",
    "sklearn.utils._testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_sparse.datasets": {
  "data": {
   "shadows": "sklearn.datasets"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_sparse.ignore_warnings": {
  "data": {
   "shadows": "sklearn.utils._testing.ignore_warnings"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_sparse.iris": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "sklearn.svm.tests.test_sparse.linear_model": {
  "data": {
   "shadows": "sklearn.linear_model"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_sparse.load_digits": {
  "data": {
   "shadows": "sklearn.datasets.load_digits"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_sparse.make_blobs": {
  "data": {
   "shadows": "sklearn.datasets.make_blobs"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_sparse.make_classification": {
  "data": {
   "shadows": "sklearn.datasets.make_classification"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_sparse.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_sparse.perm": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "sklearn.svm.tests.test_sparse.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_sparse.rng": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "sklearn.svm.tests.test_sparse.safe_sparse_dot": {
  "data": {
   "shadows": "sklearn.utils.extmath.safe_sparse_dot"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_sparse.skip_if_32bit": {
  "data": {
   "shadows": "sklearn.utils._testing.skip_if_32bit"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_sparse.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_sparse.svm": {
  "data": {
   "shadows": "sklearn.svm"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_sparse.test_consistent_proba": {
  "data": {
   "lineno": 355,
   "symbols_in_volume": [
    "numpy.testing.assert_array_almost_equal",
    "sklearn.exceptions.ConvergenceWarning",
    "sklearn.svm.SVC",
    "sklearn.svm.tests.test_sparse.X",
    "sklearn.svm.tests.test_sparse.Y",
    "sklearn.utils._testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_sparse.test_error": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "ValueError",
    "numpy.testing.assert_array_equal",
    "sklearn.svm.NuSVC",
    "sklearn.svm.SVC",
    "sklearn.svm.tests.test_sparse.T",
    "sklearn.svm.tests.test_sparse.X",
    "sklearn.svm.tests.test_sparse.X_sp",
    "sklearn.svm.tests.test_sparse.Y",
    "sklearn.svm.tests.test_sparse.Y2",
    "sklearn.svm.tests.test_sparse.pytest",
    "sklearn.svm.tests.test_sparse.true_result"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_sparse.test_linearsvc": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "numpy.testing.assert_array_almost_equal",
    "sklearn.svm.LinearSVC",
    "sklearn.svm.tests.test_sparse.X",
    "sklearn.svm.tests.test_sparse.X2",
    "sklearn.svm.tests.test_sparse.X2_sp",
    "sklearn.svm.tests.test_sparse.X_sp",
    "sklearn.svm.tests.test_sparse.Y",
    "sklearn.svm.tests.test_sparse.Y2"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_sparse.test_linearsvc_iris": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "numpy.argmax",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_array_equal",
    "sklearn.svm.LinearSVC",
    "sklearn.svm.tests.test_sparse.iris"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_sparse.test_sample_weights": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "numpy.testing.assert_array_equal",
    "sklearn.svm.SVC",
    "sklearn.svm.tests.test_sparse.X",
    "sklearn.svm.tests.test_sparse.X_sp",
    "sklearn.svm.tests.test_sparse.Y"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_sparse.test_sparse_decision_function": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "int",
    "numpy.array",
    "numpy.dot",
    "numpy.testing.assert_array_almost_equal",
    "sklearn.svm.SVC",
    "sklearn.svm.tests.test_sparse.X",
    "sklearn.svm.tests.test_sparse.Y",
    "sklearn.svm.tests.test_sparse.iris",
    "sklearn.utils.extmath.safe_sparse_dot"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_sparse.test_sparse_liblinear_intercept_handling": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": [
    "sklearn.svm.LinearSVC",
    "sklearn.svm.tests.test_svm.test_dense_liblinear_intercept_handling"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_sparse.test_sparse_oneclasssvm": {
  "data": {
   "lineno": 284,
   "symbols_in_volume": [
    "range",
    "scipy.sparse.csr_matrix",
    "sklearn.datasets",
    "sklearn.datasets.make_blobs",
    "sklearn.svm.OneClassSVM",
    "sklearn.svm.tests.test_sparse.T",
    "sklearn.svm.tests.test_sparse.T2",
    "sklearn.svm.tests.test_sparse.X2_sp",
    "sklearn.svm.tests.test_sparse.X_sp",
    "sklearn.svm.tests.test_sparse.check_svm_model_equal",
    "sklearn.svm.tests.test_sparse.iris",
    "sklearn.svm.tests.test_sparse.pytest",
    "sklearn.utils._testing.skip_if_32bit"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_sparse.test_sparse_realdata": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.assert_array_equal",
    "scipy.sparse.coo_matrix",
    "scipy.sparse.csr_matrix",
    "sklearn.svm.SVC",
    "sklearn.svm.tests.test_sparse.X"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_sparse.test_sparse_svc_clone_with_callable_kernel": {
  "data": {
   "lineno": 330,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.testing.assert_array_equal",
    "sklearn.base.clone",
    "sklearn.svm.SVC",
    "sklearn.svm.tests.test_sparse.X",
    "sklearn.svm.tests.test_sparse.X_sp",
    "sklearn.svm.tests.test_sparse.Y"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_sparse.test_svc": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "scipy.sparse.csr_matrix",
    "sklearn.datasets",
    "sklearn.datasets.make_blobs",
    "sklearn.svm.SVC",
    "sklearn.svm.tests.test_sparse.T",
    "sklearn.svm.tests.test_sparse.T2",
    "sklearn.svm.tests.test_sparse.X2_sp",
    "sklearn.svm.tests.test_sparse.X_sp",
    "sklearn.svm.tests.test_sparse.Y",
    "sklearn.svm.tests.test_sparse.Y2",
    "sklearn.svm.tests.test_sparse.check_svm_model_equal",
    "sklearn.svm.tests.test_sparse.iris",
    "sklearn.utils._testing.skip_if_32bit"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_sparse.test_svc_iris": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "numpy.testing.assert_array_almost_equal",
    "sklearn.svm.SVC",
    "sklearn.svm.tests.test_sparse.iris"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_sparse.test_svc_with_custom_kernel": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "numpy.testing.assert_array_equal",
    "sklearn.svm.SVC",
    "sklearn.svm.tests.test_sparse.X_sp",
    "sklearn.svm.tests.test_sparse.Y"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_sparse.test_svc_with_custom_kernel.kfunc": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "sklearn.utils.extmath.safe_sparse_dot"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_sparse.test_svm": {
  "data": {
   "shadows": "sklearn.svm.tests.test_svm"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_sparse.test_timeout": {
  "data": {
   "lineno": 348,
   "symbols_in_volume": [
    "sklearn.exceptions.ConvergenceWarning",
    "sklearn.svm.SVC",
    "sklearn.svm.tests.test_sparse.X_sp",
    "sklearn.svm.tests.test_sparse.Y",
    "sklearn.utils._testing.assert_warns"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_sparse.test_unsorted_indices": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "numpy.testing.assert_array_almost_equal",
    "scipy.sparse.csr_matrix",
    "scramble_indices",
    "sklearn.datasets.load_digits",
    "sklearn.svm.SVC",
    "sklearn.svm.tests.test_sparse.X"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_sparse.test_unsorted_indices.scramble_indices": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "len",
    "range",
    "scipy.sparse.csr_matrix",
    "sklearn.svm.tests.test_sparse.X",
    "slice"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_sparse.test_weight": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "numpy.sum",
    "scipy.sparse.csr_matrix",
    "sklearn.datasets.make_classification",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.svm.LinearSVC",
    "sklearn.svm.SVC"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_sparse.true_result": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "sklearn.svm.tests.test_sparse.true_result2": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "sklearn.svm.tests.test_svm": {
  "data": {
   "symbols_in_volume": [
    "sklearn.datasets.load_iris",
    "sklearn.svm.tests.test_svm.iris",
    "sklearn.svm.tests.test_svm.perm",
    "sklearn.svm.tests.test_svm.rng",
    "sklearn.utils.check_random_state"
   ]
  },
  "type": "module"
 },
 "sklearn.svm.tests.test_svm.ConvergenceWarning": {
  "data": {
   "shadows": "sklearn.exceptions.ConvergenceWarning"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_svm.LinearSVC": {
  "data": {
   "shadows": "sklearn.svm.LinearSVC"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_svm.LinearSVR": {
  "data": {
   "shadows": "sklearn.svm.LinearSVR"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_svm.LogisticRegression": {
  "data": {
   "shadows": "sklearn.linear_model.LogisticRegression"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_svm.NotFittedError": {
  "data": {
   "shadows": "sklearn.exceptions.NotFittedError"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_svm.OneVsRestClassifier": {
  "data": {
   "shadows": "sklearn.multiclass.OneVsRestClassifier"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_svm.T": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "sklearn.svm.tests.test_svm.UndefinedMetricWarning": {
  "data": {
   "shadows": "sklearn.exceptions.UndefinedMetricWarning"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_svm.X": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "sklearn.svm.tests.test_svm.Y": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "sklearn.svm.tests.test_svm._libsvm": {
  "data": {
   "shadows": "sklearn.svm._libsvm"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_svm._num_samples": {
  "data": {
   "shadows": "sklearn.utils.validation._num_samples"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_svm.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_svm.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_svm.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_svm.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_svm.assert_no_warnings": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_no_warnings"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_svm.assert_raise_message": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_raise_message"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_svm.assert_warns": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_warns"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_svm.base": {
  "data": {
   "shadows": "sklearn.base"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_svm.check_random_state": {
  "data": {
   "shadows": "sklearn.utils.check_random_state"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_svm.compute_class_weight": {
  "data": {
   "shadows": "sklearn.utils.compute_class_weight"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_svm.datasets": {
  "data": {
   "shadows": "sklearn.datasets"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_svm.f1_score": {
  "data": {
   "shadows": "sklearn.metrics.f1_score"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_svm.ignore_warnings": {
  "data": {
   "shadows": "sklearn.utils._testing.ignore_warnings"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_svm.iris": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "sklearn.svm.tests.test_svm.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_svm.linear_model": {
  "data": {
   "shadows": "sklearn.linear_model"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_svm.make_blobs": {
  "data": {
   "shadows": "sklearn.datasets.make_blobs"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_svm.make_classification": {
  "data": {
   "shadows": "sklearn.datasets.make_classification"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_svm.metrics": {
  "data": {
   "shadows": "sklearn.metrics"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_svm.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_svm.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_svm.perm": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "sklearn.svm.tests.test_svm.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_svm.rbf_kernel": {
  "data": {
   "shadows": "sklearn.metrics.pairwise.rbf_kernel"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_svm.rng": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "sklearn.svm.tests.test_svm.shuffle": {
  "data": {
   "shadows": "sklearn.utils.shuffle"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_svm.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_svm.svm": {
  "data": {
   "shadows": "sklearn.svm"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_svm.test_auto_weight": {
  "data": {
   "lineno": 587,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.argmax",
    "numpy.delete",
    "numpy.unique",
    "numpy.where",
    "sklearn.exceptions.UndefinedMetricWarning",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.metrics.f1_score",
    "sklearn.svm.LinearSVC",
    "sklearn.svm.SVC",
    "sklearn.svm.tests.test_svm.X",
    "sklearn.svm.tests.test_svm.iris",
    "sklearn.utils._testing.ignore_warnings",
    "sklearn.utils.compute_class_weight"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_bad_input": {
  "data": {
   "lineno": 617,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "numpy.ascontiguousarray",
    "numpy.asfortranarray",
    "numpy.dot",
    "numpy.testing.assert_array_equal",
    "numpy.tile",
    "scipy.sparse.lil_matrix",
    "sklearn.svm.LinearSVC",
    "sklearn.svm.NuSVC",
    "sklearn.svm.SVC",
    "sklearn.svm.tests.test_svm.T",
    "sklearn.svm.tests.test_svm.X",
    "sklearn.svm.tests.test_svm.Y",
    "sklearn.svm.tests.test_svm.pytest",
    "sklearn.svm.tests.test_svm.true_result"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_consistent_proba": {
  "data": {
   "lineno": 998,
   "symbols_in_volume": [
    "numpy.testing.assert_array_almost_equal",
    "sklearn.svm.SVC",
    "sklearn.svm.tests.test_svm.X",
    "sklearn.svm.tests.test_svm.Y",
    "sklearn.utils._testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_crammer_singer_binary": {
  "data": {
   "lineno": 834,
   "symbols_in_volume": [
    "sklearn.datasets.make_classification",
    "sklearn.svm.LinearSVC",
    "sklearn.svm.tests.test_svm.X"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_custom_kernel_not_array_input": {
  "data": {
   "lineno": 1253,
   "symbols_in_volume": [
    "Estimator",
    "hasattr",
    "numpy.array",
    "numpy.dot",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal",
    "sklearn.svm.SVC",
    "sklearn.svm.SVR",
    "sklearn.svm.tests.test_svm.X",
    "sklearn.svm.tests.test_svm.pytest",
    "string_kernel"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_custom_kernel_not_array_input.string_kernel": {
  "data": {
   "lineno": 1260,
   "symbols_in_volume": [
    "isinstance",
    "numpy.zeros",
    "range",
    "sklearn.utils.validation._num_samples",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_decision_function": {
  "data": {
   "lineno": 333,
   "symbols_in_volume": [
    "int",
    "numpy.array",
    "numpy.dot",
    "numpy.testing.assert_array_almost_equal",
    "sklearn.metrics.pairwise.rbf_kernel",
    "sklearn.svm.SVC",
    "sklearn.svm.tests.test_svm.X",
    "sklearn.svm.tests.test_svm.Y",
    "sklearn.svm.tests.test_svm.iris"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_decision_function_shape": {
  "data": {
   "lineno": 365,
   "symbols_in_volume": [
    "SVM",
    "ValueError",
    "len",
    "numpy.argmax",
    "numpy.testing.assert_array_equal",
    "sklearn.datasets.make_blobs",
    "sklearn.model_selection.train_test_split",
    "sklearn.svm.NuSVC",
    "sklearn.svm.SVC",
    "sklearn.svm.tests.test_svm.X",
    "sklearn.svm.tests.test_svm.iris",
    "sklearn.svm.tests.test_svm.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_decision_function_shape_two_class": {
  "data": {
   "lineno": 1074,
   "symbols_in_volume": [
    "estimator",
    "len",
    "sklearn.datasets.make_blobs",
    "sklearn.multiclass.OneVsRestClassifier",
    "sklearn.svm.NuSVC",
    "sklearn.svm.SVC",
    "sklearn.svm.tests.test_svm.X"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_dense_liblinear_intercept_handling": {
  "data": {
   "lineno": 858,
   "symbols_in_volume": [
    "classifier",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_array_almost_equal",
    "sklearn.svm.LinearSVC",
    "sklearn.svm.tests.test_svm.X"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_gamma_auto": {
  "data": {
   "lineno": 1160,
   "symbols_in_volume": [
    "sklearn.svm.SVC",
    "sklearn.svm.tests.test_svm.X",
    "sklearn.utils._testing.assert_no_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_gamma_scale": {
  "data": {
   "lineno": 1167,
   "symbols_in_volume": [
    "numpy.sqrt",
    "numpy.testing.assert_almost_equal",
    "sklearn.svm.SVC",
    "sklearn.svm.tests.test_svm.X",
    "sklearn.utils._testing.assert_no_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_hasattr_predict_proba": {
  "data": {
   "lineno": 1052,
   "symbols_in_volume": [
    "hasattr",
    "sklearn.exceptions.NotFittedError",
    "sklearn.svm.SVC",
    "sklearn.svm.tests.test_svm.iris",
    "sklearn.utils._testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_immutable_coef_property": {
  "data": {
   "lineno": 915,
   "symbols_in_volume": [
    "AttributeError",
    "RuntimeError",
    "ValueError",
    "numpy.arange",
    "sklearn.svm.NuSVC",
    "sklearn.svm.NuSVR",
    "sklearn.svm.OneClassSVM",
    "sklearn.svm.SVC",
    "sklearn.svm.SVR",
    "sklearn.svm.tests.test_svm.iris",
    "sklearn.svm.tests.test_svm.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_liblinear_set_coef": {
  "data": {
   "lineno": 891,
   "symbols_in_volume": [
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_array_equal",
    "sklearn.svm.LinearSVC",
    "sklearn.svm.tests.test_svm.X",
    "sklearn.svm.tests.test_svm.iris"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_libsvm_iris": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "hasattr",
    "numpy.float64",
    "numpy.mean",
    "numpy.sort",
    "numpy.testing.assert_array_equal",
    "sklearn.svm.SVC",
    "sklearn.svm._libsvm.cross_validation",
    "sklearn.svm._libsvm.fit",
    "sklearn.svm._libsvm.predict",
    "sklearn.svm.tests.test_svm.iris"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_libsvm_parameters": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "numpy.testing.assert_array_equal",
    "sklearn.svm.SVC",
    "sklearn.svm.tests.test_svm.X",
    "sklearn.svm.tests.test_svm.Y"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_linear_svc_intercept_scaling": {
  "data": {
   "lineno": 1033,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.svm.LinearSVC",
    "sklearn.svm.tests.test_svm.X",
    "sklearn.svm.tests.test_svm.Y",
    "sklearn.utils._testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_linear_svm_convergence_warnings": {
  "data": {
   "lineno": 1007,
   "symbols_in_volume": [
    "sklearn.exceptions.ConvergenceWarning",
    "sklearn.svm.LinearSVC",
    "sklearn.svm.LinearSVR",
    "sklearn.svm.tests.test_svm.X",
    "sklearn.svm.tests.test_svm.Y",
    "sklearn.svm.tests.test_svm.iris",
    "sklearn.utils._testing.assert_warns"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_linear_svx_uppercase_loss_penality_raises_error": {
  "data": {
   "lineno": 738,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.svm.LinearSVC",
    "sklearn.svm.tests.test_svm.X",
    "sklearn.utils._testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_linearsvc": {
  "data": {
   "lineno": 753,
   "symbols_in_volume": [
    "int",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_array_equal",
    "sklearn.svm.LinearSVC",
    "sklearn.svm.tests.test_svm.T",
    "sklearn.svm.tests.test_svm.X",
    "sklearn.svm.tests.test_svm.Y",
    "sklearn.svm.tests.test_svm.true_result"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_linearsvc_crammer_singer": {
  "data": {
   "lineno": 783,
   "symbols_in_volume": [
    "numpy.argmax",
    "numpy.dot",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_array_equal",
    "sklearn.svm.LinearSVC",
    "sklearn.svm.tests.test_svm.iris"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_linearsvc_fit_sampleweight": {
  "data": {
   "lineno": 803,
   "symbols_in_volume": [
    "len",
    "numpy.ones",
    "numpy.repeat",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal",
    "sklearn.svm.LinearSVC",
    "sklearn.svm.tests.test_svm.T",
    "sklearn.svm.tests.test_svm.X",
    "sklearn.svm.tests.test_svm.Y",
    "sklearn.utils.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_linearsvc_iris": {
  "data": {
   "lineno": 845,
   "symbols_in_volume": [
    "numpy.argmax",
    "numpy.mean",
    "numpy.testing.assert_array_equal",
    "set",
    "sklearn.svm.LinearSVC",
    "sklearn.svm.tests.test_svm.iris"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_linearsvc_parameters": {
  "data": {
   "lineno": 711,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.datasets.make_classification",
    "sklearn.svm.LinearSVC",
    "sklearn.svm.tests.test_svm.X",
    "sklearn.svm.tests.test_svm.itertools",
    "sklearn.svm.tests.test_svm.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_linearsvc_verbose": {
  "data": {
   "lineno": 931,
   "symbols_in_volume": [
    "sklearn.svm.LinearSVC",
    "sklearn.svm.tests.test_svm.X",
    "sklearn.svm.tests.test_svm.Y",
    "sklearn.svm.tests.test_svm.os"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_linearsvm_liblinear_sample_weight": {
  "data": {
   "lineno": 1180,
   "symbols_in_volume": [
    "SVM",
    "getattr",
    "hasattr",
    "len",
    "numpy.array",
    "numpy.dtype",
    "numpy.hstack",
    "numpy.ones",
    "numpy.testing.assert_allclose",
    "numpy.vstack",
    "sklearn.base.clone",
    "sklearn.svm.LinearSVC",
    "sklearn.svm.LinearSVR",
    "sklearn.svm.tests.test_svm.X",
    "sklearn.svm.tests.test_svm.pytest",
    "sklearn.utils.shuffle"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_linearsvr": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "numpy.linalg.norm",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_almost_equal",
    "sklearn.datasets.load_diabetes",
    "sklearn.svm.LinearSVR",
    "sklearn.svm.SVR"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_linearsvr_fit_sampleweight": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "len",
    "numpy.linalg.norm",
    "numpy.ones",
    "numpy.repeat",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_almost_equal",
    "sklearn.datasets.load_diabetes",
    "sklearn.svm.LinearSVR",
    "sklearn.utils.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_lsvc_intercept_scaling_zero": {
  "data": {
   "lineno": 1044,
   "symbols_in_volume": [
    "sklearn.svm.LinearSVC",
    "sklearn.svm.tests.test_svm.X",
    "sklearn.svm.tests.test_svm.Y"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_n_support_oneclass_svr": {
  "data": {
   "lineno": 1219,
   "symbols_in_volume": [
    "hasattr",
    "numpy.arange",
    "numpy.array",
    "sklearn.svm.OneClassSVM",
    "sklearn.svm.SVR",
    "sklearn.svm.tests.test_svm.X"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_negative_sample_weights_mask_all_samples": {
  "data": {
   "lineno": 502,
   "symbols_in_volume": [
    "Estimator",
    "ValueError",
    "len",
    "sklearn.svm.NuSVC",
    "sklearn.svm.NuSVR",
    "sklearn.svm.OneClassSVM",
    "sklearn.svm.SVC",
    "sklearn.svm.SVR",
    "sklearn.svm.tests.test_svm.X",
    "sklearn.svm.tests.test_svm.Y",
    "sklearn.svm.tests.test_svm.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_negative_weight_equal_coeffs": {
  "data": {
   "lineno": 569,
   "symbols_in_volume": [
    "Estimator",
    "numpy.abs",
    "sklearn.svm.NuSVC",
    "sklearn.svm.NuSVR",
    "sklearn.svm.SVC",
    "sklearn.svm.tests.test_svm.X",
    "sklearn.svm.tests.test_svm.Y",
    "sklearn.svm.tests.test_svm.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_negative_weights_svc_leave_just_one_label": {
  "data": {
   "lineno": 528,
   "symbols_in_volume": [
    "Classifier",
    "ValueError",
    "sklearn.svm.NuSVC",
    "sklearn.svm.SVC",
    "sklearn.svm.tests.test_svm.X",
    "sklearn.svm.tests.test_svm.Y",
    "sklearn.svm.tests.test_svm.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_negative_weights_svc_leave_two_labels": {
  "data": {
   "lineno": 549,
   "symbols_in_volume": [
    "Classifier",
    "numpy.testing.assert_allclose",
    "sklearn.svm.NuSVC",
    "sklearn.svm.SVC",
    "sklearn.svm.tests.test_svm.X",
    "sklearn.svm.tests.test_svm.Y",
    "sklearn.svm.tests.test_svm.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_oneclass": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "AttributeError",
    "numpy.dtype",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_array_equal",
    "sklearn.svm.OneClassSVM",
    "sklearn.svm.tests.test_svm.T",
    "sklearn.svm.tests.test_svm.X",
    "sklearn.svm.tests.test_svm.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_oneclass_decision_function": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "numpy.mean",
    "numpy.r_",
    "numpy.testing.assert_array_equal",
    "sklearn.svm.OneClassSVM",
    "sklearn.svm.tests.test_svm.X",
    "sklearn.utils.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_oneclass_score_samples": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "numpy.testing.assert_array_equal",
    "sklearn.svm.OneClassSVM"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_ovr_decision_function": {
  "data": {
   "lineno": 1083,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.argmax",
    "numpy.array",
    "numpy.min",
    "numpy.testing.assert_array_equal",
    "numpy.vstack",
    "range",
    "sklearn.svm.SVC"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_precomputed": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.array",
    "numpy.dot",
    "numpy.mean",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_array_equal",
    "numpy.zeros_like",
    "range",
    "sklearn.svm.SVC",
    "sklearn.svm.tests.test_svm.T",
    "sklearn.svm.tests.test_svm.X",
    "sklearn.svm.tests.test_svm.Y",
    "sklearn.svm.tests.test_svm.iris",
    "sklearn.svm.tests.test_svm.pytest",
    "sklearn.svm.tests.test_svm.true_result"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_probability": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": [
    "numpy.argmax",
    "numpy.exp",
    "numpy.mean",
    "numpy.ones",
    "numpy.sum",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_array_almost_equal",
    "sklearn.svm.NuSVC",
    "sklearn.svm.SVC",
    "sklearn.svm.tests.test_svm.iris"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_sparse_fit_support_vectors_empty": {
  "data": {
   "lineno": 698,
   "symbols_in_volume": [
    "numpy.array",
    "scipy.sparse.csr_matrix",
    "sklearn.svm.SVR"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_sparse_precomputed": {
  "data": {
   "lineno": 691,
   "symbols_in_volume": [
    "TypeError",
    "scipy.sparse.csr_matrix",
    "sklearn.svm.SVC",
    "sklearn.svm.tests.test_svm.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_svc_bad_kernel": {
  "data": {
   "lineno": 973,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.svm.SVC",
    "sklearn.svm.tests.test_svm.X",
    "sklearn.svm.tests.test_svm.Y",
    "sklearn.svm.tests.test_svm.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_svc_clone_with_callable_kernel": {
  "data": {
   "lineno": 945,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_array_equal",
    "sklearn.base.clone",
    "sklearn.svm.SVC",
    "sklearn.svm.tests.test_svm.iris"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_svc_invalid_break_ties_param": {
  "data": {
   "lineno": 1125,
   "symbols_in_volume": [
    "SVCClass",
    "ValueError",
    "sklearn.datasets.make_blobs",
    "sklearn.svm",
    "sklearn.svm.NuSVC",
    "sklearn.svm.SVC",
    "sklearn.svm.predict",
    "sklearn.svm.tests.test_svm.X",
    "sklearn.svm.tests.test_svm.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_svc_ovr_tie_breaking": {
  "data": {
   "lineno": 1136,
   "symbols_in_volume": [
    "SVCClass",
    "numpy.all",
    "numpy.argmax",
    "numpy.c_",
    "numpy.linspace",
    "numpy.meshgrid",
    "sklearn.datasets.make_blobs",
    "sklearn.svm",
    "sklearn.svm.NuSVC",
    "sklearn.svm.SVC",
    "sklearn.svm.decision_function",
    "sklearn.svm.predict",
    "sklearn.svm.tests.test_svm.X",
    "sklearn.svm.tests.test_svm.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_svm_classifier_sided_sample_weight": {
  "data": {
   "lineno": 437,
   "symbols_in_volume": [
    "sklearn.svm.NuSVC",
    "sklearn.svm.SVC",
    "sklearn.svm.tests.test_svm.X",
    "sklearn.svm.tests.test_svm.Y",
    "sklearn.svm.tests.test_svm.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_svm_equivalence_sample_weight_C": {
  "data": {
   "lineno": 492,
   "symbols_in_volume": [
    "len",
    "numpy.repeat",
    "numpy.testing.assert_allclose",
    "sklearn.svm.SVC",
    "sklearn.svm.tests.test_svm.X",
    "sklearn.svm.tests.test_svm.Y"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_svm_gamma_error": {
  "data": {
   "lineno": 664,
   "symbols_in_volume": [
    "Estimator",
    "ValueError",
    "sklearn.datasets.load_diabetes",
    "sklearn.datasets.load_iris",
    "sklearn.svm.NuSVC",
    "sklearn.svm.NuSVR",
    "sklearn.svm.OneClassSVM",
    "sklearn.svm.SVC",
    "sklearn.svm.SVR",
    "sklearn.svm.tests.test_svm.X",
    "sklearn.svm.tests.test_svm.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_svm_probA_proB_deprecated": {
  "data": {
   "lineno": 1239,
   "symbols_in_volume": [
    "FutureWarning",
    "SVMClass",
    "getattr",
    "sklearn.svm.OneClassSVM",
    "sklearn.svm.SVR",
    "sklearn.svm.tests.test_svm.X",
    "sklearn.svm.tests.test_svm.Y",
    "sklearn.svm.tests.test_svm.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_svm_regressor_sided_sample_weight": {
  "data": {
   "lineno": 463,
   "symbols_in_volume": [
    "sklearn.svm.NuSVR",
    "sklearn.svm.SVR",
    "sklearn.svm.tests.test_svm.X",
    "sklearn.svm.tests.test_svm.Y",
    "sklearn.svm.tests.test_svm.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_svr": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "len",
    "numpy.ones",
    "sklearn.datasets.load_diabetes",
    "sklearn.svm.LinearSVR",
    "sklearn.svm.NuSVR",
    "sklearn.svm.SVR"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_svr_coef_sign": {
  "data": {
   "lineno": 1019,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.random.RandomState",
    "numpy.testing.assert_array_almost_equal",
    "sklearn.svm.LinearSVR",
    "sklearn.svm.NuSVR",
    "sklearn.svm.SVR",
    "sklearn.svm.tests.test_svm.X"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_svr_errors": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "sklearn.svm.SVR",
    "sklearn.svm.tests.test_svm.X",
    "sklearn.svm.tests.test_svm.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_svr_predict": {
  "data": {
   "lineno": 396,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.testing.assert_array_almost_equal",
    "sklearn.metrics.pairwise.rbf_kernel",
    "sklearn.svm.SVR",
    "sklearn.svm.tests.test_svm.X",
    "sklearn.svm.tests.test_svm.iris"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_timeout": {
  "data": {
   "lineno": 979,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.dot",
    "sklearn.exceptions.ConvergenceWarning",
    "sklearn.svm.SVC",
    "sklearn.svm.tests.test_svm.X",
    "sklearn.svm.tests.test_svm.Y",
    "sklearn.utils._testing.assert_warns"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_tweak_params": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.assert_array_equal",
    "sklearn.svm.SVC",
    "sklearn.svm.tests.test_svm.X",
    "sklearn.svm.tests.test_svm.Y"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_unfitted": {
  "data": {
   "lineno": 985,
   "symbols_in_volume": [
    "Exception",
    "sklearn.svm.NuSVR",
    "sklearn.svm.SVC",
    "sklearn.svm.tests.test_svm.X",
    "sklearn.svm.tests.test_svm.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_unicode_kernel": {
  "data": {
   "lineno": 680,
   "symbols_in_volume": [
    "numpy.float64",
    "sklearn.svm.SVC",
    "sklearn.svm._libsvm.cross_validation",
    "sklearn.svm.tests.test_svm.T",
    "sklearn.svm.tests.test_svm.X",
    "sklearn.svm.tests.test_svm.Y",
    "sklearn.svm.tests.test_svm.iris"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_weight": {
  "data": {
   "lineno": 418,
   "symbols_in_volume": [
    "numpy.testing.assert_array_almost_equal",
    "sklearn.datasets.make_classification",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.metrics.f1_score",
    "sklearn.svm.LinearSVC",
    "sklearn.svm.SVC",
    "sklearn.svm.tests.test_svm.X",
    "sklearn.svm.tests.test_svm.Y"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.train_test_split": {
  "data": {
   "shadows": "sklearn.model_selection.train_test_split"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_svm.true_result": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "sklearn.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "sklearn.tests": {
  "data": {},
  "type": "module"
 },
 "sklearn.tests.test_base": {
  "data": {},
  "type": "module"
 },
 "sklearn.tests.test_base.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "sklearn.tests.test_base.Buggy": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator"
   ]
  },
  "type": "class"
 },
 "sklearn.tests.test_base.Buggy.__init__": {
  "data": {
   "lineno": 88
  },
  "type": "function"
 },
 "sklearn.tests.test_base.DecisionTreeClassifier": {
  "data": {
   "shadows": "sklearn.tree.DecisionTreeClassifier"
  },
  "type": "import"
 },
 "sklearn.tests.test_base.DecisionTreeRegressor": {
  "data": {
   "shadows": "sklearn.tree.DecisionTreeRegressor"
  },
  "type": "import"
 },
 "sklearn.tests.test_base.DiamondOverwriteTag": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "sklearn.tests.test_base.NaNTag",
    "sklearn.tests.test_base.NoNaNTag"
   ]
  },
  "type": "class"
 },
 "sklearn.tests.test_base.DiamondOverwriteTag._more_tags": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_base.DontPickleAttributeMixin": {
  "data": {
   "lineno": 415
  },
  "type": "class"
 },
 "sklearn.tests.test_base.DontPickleAttributeMixin.__getstate__": {
  "data": {
   "lineno": 416
  },
  "type": "function"
 },
 "sklearn.tests.test_base.DontPickleAttributeMixin.__setstate__": {
  "data": {
   "lineno": 421
  },
  "type": "function"
 },
 "sklearn.tests.test_base.GridSearchCV": {
  "data": {
   "shadows": "sklearn.model_selection.GridSearchCV"
  },
  "type": "import"
 },
 "sklearn.tests.test_base.InheritDiamondOverwriteTag": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "sklearn.tests.test_base.DiamondOverwriteTag"
   ]
  },
  "type": "class"
 },
 "sklearn.tests.test_base.K": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator"
   ]
  },
  "type": "class"
 },
 "sklearn.tests.test_base.K.__init__": {
  "data": {
   "lineno": 41
  },
  "type": "function"
 },
 "sklearn.tests.test_base.KernelPCA": {
  "data": {
   "shadows": "sklearn.decomposition.KernelPCA"
  },
  "type": "import"
 },
 "sklearn.tests.test_base.MockDataFrame": {
  "data": {
   "shadows": "sklearn.utils._mocking.MockDataFrame"
  },
  "type": "import"
 },
 "sklearn.tests.test_base.ModifyInitParams": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator"
   ]
  },
  "type": "class"
 },
 "sklearn.tests.test_base.ModifyInitParams.__init__": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_base.MultiInheritanceEstimator": {
  "data": {
   "lineno": 426,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator",
    "sklearn.tests.test_base.DontPickleAttributeMixin"
   ]
  },
  "type": "class"
 },
 "sklearn.tests.test_base.MultiInheritanceEstimator.__init__": {
  "data": {
   "lineno": 427
  },
  "type": "function"
 },
 "sklearn.tests.test_base.MyEstimator": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator"
   ]
  },
  "type": "class"
 },
 "sklearn.tests.test_base.MyEstimator.__init__": {
  "data": {
   "lineno": 35
  },
  "type": "function"
 },
 "sklearn.tests.test_base.NaNTag": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator"
   ]
  },
  "type": "class"
 },
 "sklearn.tests.test_base.NaNTag._more_tags": {
  "data": {
   "lineno": 53
  },
  "type": "function"
 },
 "sklearn.tests.test_base.NoEstimator": {
  "data": {
   "lineno": 92
  },
  "type": "class"
 },
 "sklearn.tests.test_base.NoEstimator.__init__": {
  "data": {
   "lineno": 93
  },
  "type": "function"
 },
 "sklearn.tests.test_base.NoEstimator.fit": {
  "data": {
   "lineno": 96
  },
  "type": "function"
 },
 "sklearn.tests.test_base.NoEstimator.predict": {
  "data": {
   "lineno": 99
  },
  "type": "function"
 },
 "sklearn.tests.test_base.NoNaNTag": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator"
   ]
  },
  "type": "class"
 },
 "sklearn.tests.test_base.NoNaNTag._more_tags": {
  "data": {
   "lineno": 58
  },
  "type": "function"
 },
 "sklearn.tests.test_base.OverrideTag": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "sklearn.tests.test_base.NaNTag"
   ]
  },
  "type": "class"
 },
 "sklearn.tests.test_base.OverrideTag._more_tags": {
  "data": {
   "lineno": 63
  },
  "type": "function"
 },
 "sklearn.tests.test_base.Pipeline": {
  "data": {
   "shadows": "sklearn.pipeline.Pipeline"
  },
  "type": "import"
 },
 "sklearn.tests.test_base.SVC": {
  "data": {
   "shadows": "sklearn.svm.SVC"
  },
  "type": "import"
 },
 "sklearn.tests.test_base.SelectFpr": {
  "data": {
   "shadows": "sklearn.feature_selection.SelectFpr"
  },
  "type": "import"
 },
 "sklearn.tests.test_base.SingleInheritanceEstimator": {
  "data": {
   "lineno": 463,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator"
   ]
  },
  "type": "class"
 },
 "sklearn.tests.test_base.SingleInheritanceEstimator.__getstate__": {
  "data": {
   "lineno": 468
  },
  "type": "function"
 },
 "sklearn.tests.test_base.SingleInheritanceEstimator.__init__": {
  "data": {
   "lineno": 464
  },
  "type": "function"
 },
 "sklearn.tests.test_base.T": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator"
   ]
  },
  "type": "class"
 },
 "sklearn.tests.test_base.T.__init__": {
  "data": {
   "lineno": 47
  },
  "type": "function"
 },
 "sklearn.tests.test_base.TransformerMixin": {
  "data": {
   "shadows": "sklearn.base.TransformerMixin"
  },
  "type": "import"
 },
 "sklearn.tests.test_base.TreeBadVersion": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": [
    "sklearn.tree.DecisionTreeClassifier"
   ]
  },
  "type": "class"
 },
 "sklearn.tests.test_base.TreeBadVersion.__getstate__": {
  "data": {
   "lineno": 361,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_base.TreeNoVersion": {
  "data": {
   "lineno": 383,
   "symbols_in_volume": [
    "sklearn.tree.DecisionTreeClassifier"
   ]
  },
  "type": "class"
 },
 "sklearn.tests.test_base.TreeNoVersion.__getstate__": {
  "data": {
   "lineno": 384
  },
  "type": "function"
 },
 "sklearn.tests.test_base.VargEstimator": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator"
   ]
  },
  "type": "class"
 },
 "sklearn.tests.test_base.VargEstimator.__init__": {
  "data": {
   "lineno": 105
  },
  "type": "function"
 },
 "sklearn.tests.test_base._is_pairwise": {
  "data": {
   "shadows": "sklearn.base._is_pairwise"
  },
  "type": "import"
 },
 "sklearn.tests.test_base.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.tests.test_base.assert_no_warnings": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_no_warnings"
  },
  "type": "import"
 },
 "sklearn.tests.test_base.assert_raises": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.tests.test_base.assert_warns_message": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_warns_message"
  },
  "type": "import"
 },
 "sklearn.tests.test_base.clone": {
  "data": {
   "shadows": "sklearn.base.clone"
  },
  "type": "import"
 },
 "sklearn.tests.test_base.config_context": {
  "data": {
   "shadows": "sklearn.config_context"
  },
  "type": "import"
 },
 "sklearn.tests.test_base.datasets": {
  "data": {
   "shadows": "sklearn.datasets"
  },
  "type": "import"
 },
 "sklearn.tests.test_base.f_classif": {
  "data": {
   "shadows": "sklearn.feature_selection.f_classif"
  },
  "type": "import"
 },
 "sklearn.tests.test_base.ignore_warnings": {
  "data": {
   "shadows": "sklearn.utils._testing.ignore_warnings"
  },
  "type": "import"
 },
 "sklearn.tests.test_base.is_classifier": {
  "data": {
   "shadows": "sklearn.base.is_classifier"
  },
  "type": "import"
 },
 "sklearn.tests.test_base.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.tests.test_base.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "sklearn.tests.test_base.pickle_error_message": {
  "data": {
   "lineno": 365
  },
  "type": "constant"
 },
 "sklearn.tests.test_base.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.tests.test_base.sklearn": {
  "data": {
   "shadows": "sklearn"
  },
  "type": "import"
 },
 "sklearn.tests.test_base.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.tests.test_base.test_clone": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "numpy.zeros",
    "sklearn.base.clone",
    "sklearn.feature_selection.SelectFpr",
    "sklearn.feature_selection.f_classif"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_base.test_clone_2": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "hasattr",
    "sklearn.base.clone",
    "sklearn.feature_selection.SelectFpr",
    "sklearn.feature_selection.f_classif"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_base.test_clone_buggy": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "RuntimeError",
    "TypeError",
    "sklearn.base.clone",
    "sklearn.tests.test_base.Buggy",
    "sklearn.tests.test_base.ModifyInitParams",
    "sklearn.tests.test_base.NoEstimator",
    "sklearn.tests.test_base.VargEstimator",
    "sklearn.utils._testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_base.test_clone_class_rather_than_instance": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "TypeError",
    "sklearn.base.clone",
    "sklearn.tests.test_base.MyEstimator",
    "sklearn.tests.test_base.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_base.test_clone_empty_array": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "numpy.array",
    "scipy.sparse.csr_matrix",
    "sklearn.base.clone",
    "sklearn.tests.test_base.MyEstimator",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_base.test_clone_estimator_types": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "sklearn.base.clone",
    "sklearn.tests.test_base.MyEstimator"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_base.test_clone_nan": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "numpy.nan",
    "sklearn.base.clone",
    "sklearn.tests.test_base.MyEstimator"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_base.test_clone_pandas_dataframe": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": [
    "DummyEstimator",
    "numpy.arange",
    "sklearn.base.clone",
    "sklearn.utils._mocking.MockDataFrame"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_base.test_clone_pandas_dataframe.DummyEstimator": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator",
    "sklearn.base.TransformerMixin"
   ]
  },
  "type": "class"
 },
 "sklearn.tests.test_base.test_clone_pandas_dataframe.DummyEstimator.__init__": {
  "data": {
   "lineno": 326
  },
  "type": "function"
 },
 "sklearn.tests.test_base.test_clone_pandas_dataframe.DummyEstimator.fit": {
  "data": {
   "lineno": 330
  },
  "type": "function"
 },
 "sklearn.tests.test_base.test_clone_pandas_dataframe.DummyEstimator.transform": {
  "data": {
   "lineno": 333
  },
  "type": "function"
 },
 "sklearn.tests.test_base.test_clone_sparse_matrices": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "cls",
    "dir",
    "getattr",
    "numpy.eye",
    "scipy.sparse",
    "sklearn.base.clone",
    "sklearn.tests.test_base.MyEstimator",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_base.test_get_params": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.tests.test_base.K",
    "sklearn.tests.test_base.T",
    "sklearn.utils._testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_base.test_is_classifier": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "sklearn.base.is_classifier",
    "sklearn.model_selection.GridSearchCV",
    "sklearn.pipeline.Pipeline",
    "sklearn.svm.SVC"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_base.test_is_pairwise": {
  "data": {
   "lineno": 544,
   "symbols_in_volume": [
    "FutureWarning",
    "IncorrectTagPCA",
    "TruePairwise",
    "sklearn.base.BaseEstimator",
    "sklearn.base._is_pairwise",
    "sklearn.decomposition.KernelPCA",
    "sklearn.tests.test_base.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_base.test_is_pairwise.IncorrectTagPCA": {
  "data": {
   "lineno": 552,
   "symbols_in_volume": [
    "sklearn.decomposition.KernelPCA"
   ]
  },
  "type": "class"
 },
 "sklearn.tests.test_base.test_is_pairwise.TruePairwise": {
  "data": {
   "lineno": 562,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator"
   ]
  },
  "type": "class"
 },
 "sklearn.tests.test_base.test_pickle_version_no_warning_is_issued_with_non_sklearn_estimator": {
  "data": {
   "lineno": 403,
   "symbols_in_volume": [
    "sklearn.datasets.load_iris",
    "sklearn.tests.test_base.TreeNoVersion",
    "sklearn.tests.test_base.pickle",
    "sklearn.utils._testing.assert_no_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_base.test_pickle_version_warning_is_issued_upon_different_version": {
  "data": {
   "lineno": 373,
   "symbols_in_volume": [
    "UserWarning",
    "sklearn.datasets.load_iris",
    "sklearn.tests.test_base.TreeBadVersion",
    "sklearn.tests.test_base.pickle",
    "sklearn.tests.test_base.pickle_error_message",
    "sklearn.tests.test_base.sklearn",
    "sklearn.utils._testing.assert_warns_message"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_base.test_pickle_version_warning_is_issued_when_no_version_info_in_pickle": {
  "data": {
   "lineno": 388,
   "symbols_in_volume": [
    "UserWarning",
    "sklearn.datasets.load_iris",
    "sklearn.tests.test_base.TreeNoVersion",
    "sklearn.tests.test_base.pickle",
    "sklearn.tests.test_base.pickle_error_message",
    "sklearn.tests.test_base.sklearn",
    "sklearn.utils._testing.assert_warns_message"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_base.test_pickle_version_warning_is_not_raised_with_matching_version": {
  "data": {
   "lineno": 347,
   "symbols_in_volume": [
    "sklearn.datasets.load_iris",
    "sklearn.tests.test_base.pickle",
    "sklearn.tree.DecisionTreeClassifier",
    "sklearn.utils._testing.assert_no_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_base.test_pickling_when_getstate_is_overwritten_by_mixin": {
  "data": {
   "lineno": 432,
   "symbols_in_volume": [
    "sklearn.tests.test_base.MultiInheritanceEstimator",
    "sklearn.tests.test_base.pickle"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_base.test_pickling_when_getstate_is_overwritten_by_mixin_outside_of_sklearn": {
  "data": {
   "lineno": 443,
   "symbols_in_volume": [
    "sklearn.tests.test_base.MultiInheritanceEstimator",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_base.test_pickling_works_when_getstate_is_overwritten_in_the_child_class": {
  "data": {
   "lineno": 474,
   "symbols_in_volume": [
    "UserWarning",
    "sklearn.tests.test_base.SingleInheritanceEstimator",
    "sklearn.tests.test_base.pickle",
    "sklearn.utils._testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_base.test_raises_on_get_params_non_attribute": {
  "data": {
   "lineno": 503,
   "symbols_in_volume": [
    "AttributeError",
    "sklearn.tests.test_base.MyEstimator",
    "sklearn.tests.test_base.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_base.test_raises_on_get_params_non_attribute.MyEstimator": {
  "data": {
   "lineno": 504,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator"
   ]
  },
  "type": "class"
 },
 "sklearn.tests.test_base.test_raises_on_get_params_non_attribute.MyEstimator.__init__": {
  "data": {
   "lineno": 505
  },
  "type": "function"
 },
 "sklearn.tests.test_base.test_raises_on_get_params_non_attribute.MyEstimator.fit": {
  "data": {
   "lineno": 508
  },
  "type": "function"
 },
 "sklearn.tests.test_base.test_repr": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "len",
    "repr",
    "sklearn.tests.test_base.K",
    "sklearn.tests.test_base.MyEstimator",
    "sklearn.tests.test_base.T"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_base.test_repr_html_wraps": {
  "data": {
   "lineno": 531,
   "symbols_in_volume": [
    "AttributeError",
    "sklearn.config_context",
    "sklearn.tests.test_base.pytest",
    "sklearn.tree.DecisionTreeClassifier"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_base.test_repr_mimebundle_": {
  "data": {
   "lineno": 518,
   "symbols_in_volume": [
    "sklearn.config_context",
    "sklearn.tree.DecisionTreeClassifier"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_base.test_score_sample_weight": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "len",
    "numpy.random.RandomState",
    "sklearn.datasets.load_boston",
    "sklearn.datasets.load_iris",
    "sklearn.tree.DecisionTreeClassifier",
    "sklearn.tree.DecisionTreeRegressor",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_base.test_set_params": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.pipeline.Pipeline",
    "sklearn.svm.SVC",
    "sklearn.utils._testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_base.test_set_params_passes_all_parameters": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "TestDecisionTree",
    "sklearn.model_selection.GridSearchCV",
    "sklearn.pipeline.Pipeline"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_base.test_set_params_passes_all_parameters.TestDecisionTree": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "sklearn.tree.DecisionTreeClassifier"
   ]
  },
  "type": "class"
 },
 "sklearn.tests.test_base.test_set_params_passes_all_parameters.TestDecisionTree.set_params": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_base.test_set_params_updates_valid_params": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": [
    "sklearn.model_selection.GridSearchCV",
    "sklearn.svm.SVC",
    "sklearn.tree.DecisionTreeClassifier"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_base.test_str": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "sklearn.tests.test_base.MyEstimator",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_base.test_tag_inheritance": {
  "data": {
   "lineno": 485,
   "symbols_in_volume": [
    "sklearn.tests.test_base.DiamondOverwriteTag",
    "sklearn.tests.test_base.InheritDiamondOverwriteTag",
    "sklearn.tests.test_base.NaNTag",
    "sklearn.tests.test_base.NoNaNTag",
    "sklearn.tests.test_base.OverrideTag"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_build": {
  "data": {},
  "type": "module"
 },
 "sklearn.tests.test_build.__version__": {
  "data": {
   "shadows": "sklearn.__version__"
  },
  "type": "import"
 },
 "sklearn.tests.test_build._openmp_parallelism_enabled": {
  "data": {
   "shadows": "sklearn.utils._openmp_helpers._openmp_parallelism_enabled"
  },
  "type": "import"
 },
 "sklearn.tests.test_build.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "sklearn.tests.test_build.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.tests.test_build.test_openmp_parallelism_enabled": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "sklearn.__version__.endswith",
    "sklearn.tests.test_build.os",
    "sklearn.tests.test_build.pytest",
    "sklearn.tests.test_build.textwrap",
    "sklearn.utils._openmp_helpers._openmp_parallelism_enabled"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_build.textwrap": {
  "data": {
   "shadows": "textwrap"
  },
  "type": "import"
 },
 "sklearn.tests.test_calibration": {
  "data": {},
  "type": "module"
 },
 "sklearn.tests.test_calibration.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "sklearn.tests.test_calibration.CalibratedClassifierCV": {
  "data": {
   "shadows": "sklearn.calibration.CalibratedClassifierCV"
  },
  "type": "import"
 },
 "sklearn.tests.test_calibration.DictVectorizer": {
  "data": {
   "shadows": "sklearn.feature_extraction.DictVectorizer"
  },
  "type": "import"
 },
 "sklearn.tests.test_calibration.IsotonicRegression": {
  "data": {
   "shadows": "sklearn.isotonic.IsotonicRegression"
  },
  "type": "import"
 },
 "sklearn.tests.test_calibration.KFold": {
  "data": {
   "shadows": "sklearn.model_selection.KFold"
  },
  "type": "import"
 },
 "sklearn.tests.test_calibration.LabelEncoder": {
  "data": {
   "shadows": "sklearn.preprocessing.LabelEncoder"
  },
  "type": "import"
 },
 "sklearn.tests.test_calibration.LeaveOneOut": {
  "data": {
   "shadows": "sklearn.model_selection.LeaveOneOut"
  },
  "type": "import"
 },
 "sklearn.tests.test_calibration.LinearSVC": {
  "data": {
   "shadows": "sklearn.svm.LinearSVC"
  },
  "type": "import"
 },
 "sklearn.tests.test_calibration.MultinomialNB": {
  "data": {
   "shadows": "sklearn.naive_bayes.MultinomialNB"
  },
  "type": "import"
 },
 "sklearn.tests.test_calibration.NotFittedError": {
  "data": {
   "shadows": "sklearn.exceptions.NotFittedError"
  },
  "type": "import"
 },
 "sklearn.tests.test_calibration.Pipeline": {
  "data": {
   "shadows": "sklearn.pipeline.Pipeline"
  },
  "type": "import"
 },
 "sklearn.tests.test_calibration.RandomForestClassifier": {
  "data": {
   "shadows": "sklearn.ensemble.RandomForestClassifier"
  },
  "type": "import"
 },
 "sklearn.tests.test_calibration.RandomForestRegressor": {
  "data": {
   "shadows": "sklearn.ensemble.RandomForestRegressor"
  },
  "type": "import"
 },
 "sklearn.tests.test_calibration.SimpleImputer": {
  "data": {
   "shadows": "sklearn.impute.SimpleImputer"
  },
  "type": "import"
 },
 "sklearn.tests.test_calibration._SigmoidCalibration": {
  "data": {
   "shadows": "sklearn.calibration._SigmoidCalibration"
  },
  "type": "import"
 },
 "sklearn.tests.test_calibration._sigmoid_calibration": {
  "data": {
   "shadows": "sklearn.calibration._sigmoid_calibration"
  },
  "type": "import"
 },
 "sklearn.tests.test_calibration.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "sklearn.tests.test_calibration.assert_almost_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_almost_equal"
  },
  "type": "import"
 },
 "sklearn.tests.test_calibration.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.tests.test_calibration.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.tests.test_calibration.assert_raises": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.tests.test_calibration.brier_score_loss": {
  "data": {
   "shadows": "sklearn.metrics.brier_score_loss"
  },
  "type": "import"
 },
 "sklearn.tests.test_calibration.calibration_curve": {
  "data": {
   "shadows": "sklearn.calibration.calibration_curve"
  },
  "type": "import"
 },
 "sklearn.tests.test_calibration.cross_val_predict": {
  "data": {
   "shadows": "sklearn.model_selection.cross_val_predict"
  },
  "type": "import"
 },
 "sklearn.tests.test_calibration.data": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "sklearn.datasets.make_classification",
    "sklearn.tests.test_calibration.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_calibration.ignore_warnings": {
  "data": {
   "shadows": "sklearn.utils._testing.ignore_warnings"
  },
  "type": "import"
 },
 "sklearn.tests.test_calibration.make_blobs": {
  "data": {
   "shadows": "sklearn.datasets.make_blobs"
  },
  "type": "import"
 },
 "sklearn.tests.test_calibration.make_classification": {
  "data": {
   "shadows": "sklearn.datasets.make_classification"
  },
  "type": "import"
 },
 "sklearn.tests.test_calibration.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.tests.test_calibration.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.tests.test_calibration.softmax": {
  "data": {
   "shadows": "sklearn.utils.extmath.softmax"
  },
  "type": "import"
 },
 "sklearn.tests.test_calibration.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.tests.test_calibration.test_calibrated_classifier_cv_deprecation": {
  "data": {
   "lineno": 548,
   "symbols_in_volume": [
    "FutureWarning",
    "sklearn.calibration.CalibratedClassifierCV",
    "sklearn.tests.test_calibration.data",
    "sklearn.tests.test_calibration.pytest",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_calibration.test_calibration": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "ValueError",
    "numpy.random.RandomState",
    "scipy.sparse.csr_matrix",
    "sklearn.calibration.CalibratedClassifierCV",
    "sklearn.metrics.brier_score_loss",
    "sklearn.naive_bayes.MultinomialNB",
    "sklearn.tests.test_calibration.data",
    "sklearn.tests.test_calibration.pytest",
    "sklearn.utils._testing.assert_array_almost_equal",
    "sklearn.utils._testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_calibration.test_calibration_accepts_ndarray": {
  "data": {
   "lineno": 466,
   "symbols_in_volume": [
    "FutureWarning",
    "MockTensorClassifier",
    "numpy.random.RandomState",
    "sklearn.calibration.CalibratedClassifierCV",
    "sklearn.tests.test_calibration.pytest",
    "sklearn.utils._testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_calibration.test_calibration_accepts_ndarray.MockTensorClassifier": {
  "data": {
   "lineno": 473,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator"
   ]
  },
  "type": "class"
 },
 "sklearn.tests.test_calibration.test_calibration_accepts_ndarray.MockTensorClassifier.decision_function": {
  "data": {
   "lineno": 480
  },
  "type": "function"
 },
 "sklearn.tests.test_calibration.test_calibration_accepts_ndarray.MockTensorClassifier.fit": {
  "data": {
   "lineno": 476,
   "symbols_in_volume": [
    "numpy.unique"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_calibration.test_calibration_attributes": {
  "data": {
   "lineno": 525,
   "symbols_in_volume": [
    "sklearn.calibration.CalibratedClassifierCV",
    "sklearn.datasets.make_classification",
    "sklearn.preprocessing.LabelEncoder",
    "sklearn.svm.LinearSVC",
    "sklearn.tests.test_calibration.pytest",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_calibration.test_calibration_bad_method": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.calibration.CalibratedClassifierCV",
    "sklearn.svm.LinearSVC",
    "sklearn.tests.test_calibration.data",
    "sklearn.tests.test_calibration.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_calibration.test_calibration_curve": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.array",
    "sklearn.calibration.calibration_curve",
    "sklearn.utils._testing.assert_almost_equal",
    "sklearn.utils._testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_calibration.test_calibration_cv_splitter": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "sklearn.calibration.CalibratedClassifierCV",
    "sklearn.model_selection.KFold",
    "sklearn.tests.test_calibration.data",
    "sklearn.tests.test_calibration.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_calibration.test_calibration_default_estimator": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "isinstance",
    "sklearn.calibration.CalibratedClassifierCV",
    "sklearn.svm.LinearSVC",
    "sklearn.tests.test_calibration.data"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_calibration.test_calibration_ensemble_false": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose",
    "sklearn.calibration.CalibratedClassifierCV",
    "sklearn.calibration._SigmoidCalibration",
    "sklearn.isotonic.IsotonicRegression",
    "sklearn.model_selection.cross_val_predict",
    "sklearn.svm.LinearSVC",
    "sklearn.tests.test_calibration.data",
    "sklearn.tests.test_calibration.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_calibration.test_calibration_less_classes": {
  "data": {
   "lineno": 438,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "numpy.all",
    "numpy.allclose",
    "numpy.arange",
    "numpy.random.randn",
    "numpy.zeros",
    "sklearn.calibration.CalibratedClassifierCV",
    "sklearn.model_selection.LeaveOneOut",
    "sklearn.svm.LinearSVC",
    "sklearn.tests.test_calibration.pytest",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_calibration.test_calibration_multiclass": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "len",
    "multiclass_brier",
    "numpy.ones",
    "numpy.sum",
    "numpy.testing.assert_allclose",
    "numpy.unique",
    "range",
    "sklearn.calibration.CalibratedClassifierCV",
    "sklearn.datasets.make_blobs",
    "sklearn.ensemble.RandomForestClassifier",
    "sklearn.svm.LinearSVC",
    "sklearn.tests.test_calibration.pytest",
    "sklearn.utils.extmath.softmax"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_calibration.test_calibration_multiclass.multiclass_brier": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "numpy.eye",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_calibration.test_calibration_nan_imputer": {
  "data": {
   "lineno": 404,
   "symbols_in_volume": [
    "numpy.nan",
    "sklearn.calibration.CalibratedClassifierCV",
    "sklearn.datasets.make_classification",
    "sklearn.ensemble.RandomForestClassifier",
    "sklearn.impute.SimpleImputer",
    "sklearn.pipeline.Pipeline",
    "sklearn.tests.test_calibration.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_calibration.test_calibration_pipeline": {
  "data": {
   "lineno": 510,
   "symbols_in_volume": [
    "AttributeError",
    "sklearn.calibration.CalibratedClassifierCV",
    "sklearn.tests.test_calibration.pytest",
    "sklearn.tests.test_calibration.text_data",
    "sklearn.tests.test_calibration.text_data_pipeline",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_calibration.test_calibration_prefit": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "numpy.argmax",
    "numpy.array",
    "numpy.random.RandomState",
    "scipy.sparse.csr_matrix",
    "sklearn.calibration.CalibratedClassifierCV",
    "sklearn.datasets.make_classification",
    "sklearn.exceptions.NotFittedError",
    "sklearn.metrics.brier_score_loss",
    "sklearn.naive_bayes.MultinomialNB",
    "sklearn.tests.test_calibration.pytest",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_calibration.test_calibration_prob_sum": {
  "data": {
   "lineno": 421,
   "symbols_in_volume": [
    "numpy.ones",
    "sklearn.calibration.CalibratedClassifierCV",
    "sklearn.datasets.make_classification",
    "sklearn.model_selection.LeaveOneOut",
    "sklearn.svm.LinearSVC",
    "sklearn.tests.test_calibration.pytest",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_calibration.test_calibration_regressor": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "RuntimeError",
    "sklearn.calibration.CalibratedClassifierCV",
    "sklearn.ensemble.RandomForestRegressor",
    "sklearn.tests.test_calibration.data",
    "sklearn.tests.test_calibration.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_calibration.test_parallel_execution": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose",
    "sklearn.calibration.CalibratedClassifierCV",
    "sklearn.model_selection.train_test_split",
    "sklearn.svm.LinearSVC",
    "sklearn.tests.test_calibration.data",
    "sklearn.tests.test_calibration.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_calibration.test_sample_weight": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "len",
    "numpy.linalg.norm",
    "numpy.random.RandomState",
    "sklearn.calibration.CalibratedClassifierCV",
    "sklearn.svm.LinearSVC",
    "sklearn.tests.test_calibration.data",
    "sklearn.tests.test_calibration.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_calibration.test_sigmoid_calibration": {
  "data": {
   "lineno": 351,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "numpy.exp",
    "numpy.vstack",
    "sklearn.calibration._SigmoidCalibration",
    "sklearn.calibration._sigmoid_calibration",
    "sklearn.utils._testing.assert_array_almost_equal",
    "sklearn.utils._testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_calibration.text_data": {
  "data": {
   "lineno": 489,
   "symbols_in_volume": [
    "sklearn.tests.test_calibration.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_calibration.text_data_pipeline": {
  "data": {
   "lineno": 500,
   "symbols_in_volume": [
    "sklearn.ensemble.RandomForestClassifier",
    "sklearn.feature_extraction.DictVectorizer",
    "sklearn.pipeline.Pipeline",
    "sklearn.tests.test_calibration.pytest",
    "sklearn.tests.test_calibration.text_data"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_calibration.train_test_split": {
  "data": {
   "shadows": "sklearn.model_selection.train_test_split"
  },
  "type": "import"
 },
 "sklearn.tests.test_check_build": {
  "data": {},
  "type": "module"
 },
 "sklearn.tests.test_check_build.assert_raises": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.tests.test_check_build.raise_build_error": {
  "data": {
   "shadows": "sklearn.__check_build.raise_build_error"
  },
  "type": "import"
 },
 "sklearn.tests.test_check_build.test_raise_build_error": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "ImportError",
    "sklearn.__check_build.raise_build_error",
    "sklearn.utils._testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_common": {
  "data": {
   "symbols_in_volume": [
    "sklearn.tests.test_common.N_FEATURES_IN_AFTER_FIT_MODULES_TO_IGNORE",
    "sklearn.tests.test_common._tested_estimators"
   ]
  },
  "type": "module"
 },
 "sklearn.tests.test_common.BiclusterMixin": {
  "data": {
   "shadows": "sklearn.base.BiclusterMixin"
  },
  "type": "import"
 },
 "sklearn.tests.test_common.ConvergenceWarning": {
  "data": {
   "shadows": "sklearn.exceptions.ConvergenceWarning"
  },
  "type": "import"
 },
 "sklearn.tests.test_common.FitFailedWarning": {
  "data": {
   "shadows": "sklearn.exceptions.FitFailedWarning"
  },
  "type": "import"
 },
 "sklearn.tests.test_common.GridSearchCV": {
  "data": {
   "shadows": "sklearn.model_selection.GridSearchCV"
  },
  "type": "import"
 },
 "sklearn.tests.test_common.IS_PYPY": {
  "data": {
   "shadows": "sklearn.utils.IS_PYPY"
  },
  "type": "import"
 },
 "sklearn.tests.test_common.LinearClassifierMixin": {
  "data": {
   "shadows": "sklearn.linear_model._base.LinearClassifierMixin"
  },
  "type": "import"
 },
 "sklearn.tests.test_common.LogisticRegression": {
  "data": {
   "shadows": "sklearn.linear_model.LogisticRegression"
  },
  "type": "import"
 },
 "sklearn.tests.test_common.N_FEATURES_IN_AFTER_FIT_ESTIMATORS": {
  "data": {
   "lineno": 291
  },
  "type": "constant"
 },
 "sklearn.tests.test_common.N_FEATURES_IN_AFTER_FIT_MODULES_TO_IGNORE": {
  "data": {
   "lineno": 266
  },
  "type": "constant"
 },
 "sklearn.tests.test_common.PCA": {
  "data": {
   "shadows": "sklearn.decomposition.PCA"
  },
  "type": "import"
 },
 "sklearn.tests.test_common.RandomizedSearchCV": {
  "data": {
   "shadows": "sklearn.model_selection.RandomizedSearchCV"
  },
  "type": "import"
 },
 "sklearn.tests.test_common.Ridge": {
  "data": {
   "shadows": "sklearn.linear_model.Ridge"
  },
  "type": "import"
 },
 "sklearn.tests.test_common.SkipTest": {
  "data": {
   "shadows": "sklearn.utils._testing.SkipTest"
  },
  "type": "import"
 },
 "sklearn.tests.test_common._construct_instance": {
  "data": {
   "shadows": "sklearn.utils.estimator_checks._construct_instance"
  },
  "type": "import"
 },
 "sklearn.tests.test_common._generate_search_cv_instances": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "Estimator",
    "SearchCV",
    "sklearn.decomposition.PCA",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.linear_model.Ridge",
    "sklearn.model_selection.GridSearchCV",
    "sklearn.model_selection.RandomizedSearchCV",
    "sklearn.pipeline.make_pipeline",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_common._get_check_estimator_ids": {
  "data": {
   "shadows": "sklearn.utils.estimator_checks._get_check_estimator_ids"
  },
  "type": "import"
 },
 "sklearn.tests.test_common._sample_func": {
  "data": {
   "lineno": 56
  },
  "type": "function"
 },
 "sklearn.tests.test_common._set_checking_parameters": {
  "data": {
   "shadows": "sklearn.utils.estimator_checks._set_checking_parameters"
  },
  "type": "import"
 },
 "sklearn.tests.test_common._tested_estimators": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "issubclass",
    "sklearn.base.BiclusterMixin",
    "sklearn.utils._testing.SkipTest",
    "sklearn.utils.all_estimators",
    "sklearn.utils.estimator_checks._construct_instance"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_common._tested_linear_classifiers": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "clazz",
    "getattr",
    "issubclass",
    "len",
    "sklearn.linear_model._base.LinearClassifierMixin",
    "sklearn.tests.test_common.warnings",
    "sklearn.utils.all_estimators"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_common.all_estimators": {
  "data": {
   "shadows": "sklearn.utils.all_estimators"
  },
  "type": "import"
 },
 "sklearn.tests.test_common.check_class_weight_balanced_linear_classifier": {
  "data": {
   "shadows": "sklearn.utils.estimator_checks.check_class_weight_balanced_linear_classifier"
  },
  "type": "import"
 },
 "sklearn.tests.test_common.check_estimator": {
  "data": {
   "shadows": "sklearn.utils.estimator_checks.check_estimator"
  },
  "type": "import"
 },
 "sklearn.tests.test_common.check_n_features_in_after_fitting": {
  "data": {
   "shadows": "sklearn.utils.estimator_checks.check_n_features_in_after_fitting"
  },
  "type": "import"
 },
 "sklearn.tests.test_common.ignore_warnings": {
  "data": {
   "shadows": "sklearn.utils._testing.ignore_warnings"
  },
  "type": "import"
 },
 "sklearn.tests.test_common.isgenerator": {
  "data": {
   "shadows": "inspect.isgenerator"
  },
  "type": "import"
 },
 "sklearn.tests.test_common.make_pipeline": {
  "data": {
   "shadows": "sklearn.pipeline.make_pipeline"
  },
  "type": "import"
 },
 "sklearn.tests.test_common.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "sklearn.tests.test_common.parametrize_with_checks": {
  "data": {
   "shadows": "sklearn.utils.estimator_checks.parametrize_with_checks"
  },
  "type": "import"
 },
 "sklearn.tests.test_common.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "sklearn.tests.test_common.pkgutil": {
  "data": {
   "shadows": "pkgutil"
  },
  "type": "import"
 },
 "sklearn.tests.test_common.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.tests.test_common.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "sklearn.tests.test_common.sklearn": {
  "data": {
   "shadows": "sklearn"
  },
  "type": "import"
 },
 "sklearn.tests.test_common.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "sklearn.tests.test_common.test_all_estimator_no_base_class": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "sklearn.utils.all_estimators"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_common.test_all_tests_are_importable": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "sklearn.tests.test_common.pkgutil",
    "sklearn.tests.test_common.re",
    "sklearn.tests.test_common.sklearn"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_common.test_check_estimator_generate_only": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "inspect.isgenerator",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.utils.estimator_checks.check_estimator"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_common.test_check_n_features_in_after_fitting": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "sklearn.tests.test_common.N_FEATURES_IN_AFTER_FIT_ESTIMATORS",
    "sklearn.tests.test_common.pytest",
    "sklearn.utils.estimator_checks._get_check_estimator_ids",
    "sklearn.utils.estimator_checks._set_checking_parameters",
    "sklearn.utils.estimator_checks.check_n_features_in_after_fitting"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_common.test_class_support_removed": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "TypeError",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.tests.test_common.pytest",
    "sklearn.utils.estimator_checks.check_estimator",
    "sklearn.utils.estimator_checks.parametrize_with_checks"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_common.test_class_weight_balanced_linear_classifiers": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "sklearn.tests.test_common._tested_linear_classifiers",
    "sklearn.tests.test_common.pytest",
    "sklearn.utils.estimator_checks.check_class_weight_balanced_linear_classifier"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_common.test_configure": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "DeprecationWarning",
    "FutureWarning",
    "UserWarning",
    "dict",
    "exec",
    "open",
    "sklearn.tests.test_common.os",
    "sklearn.tests.test_common.pytest",
    "sklearn.tests.test_common.sklearn",
    "sklearn.tests.test_common.sys",
    "sklearn.tests.test_common.warnings",
    "sklearn.utils._testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_common.test_estimators": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "FutureWarning",
    "UserWarning",
    "check",
    "list",
    "sklearn.exceptions.ConvergenceWarning",
    "sklearn.tests.test_common._tested_estimators",
    "sklearn.utils._testing.ignore_warnings",
    "sklearn.utils.estimator_checks._set_checking_parameters",
    "sklearn.utils.estimator_checks.parametrize_with_checks"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_common.test_get_check_estimator_ids": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "functools.partial",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.tests.test_common._sample_func",
    "sklearn.tests.test_common.pytest",
    "sklearn.utils.estimator_checks._get_check_estimator_ids"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_common.test_import_all_consistency": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "__import__",
    "getattr",
    "hasattr",
    "sklearn.tests.test_common.pkgutil",
    "sklearn.tests.test_common.sklearn",
    "sklearn.utils.IS_PYPY",
    "sklearn.utils._testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_common.test_root_import_all_completeness": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "sklearn.tests.test_common.pkgutil",
    "sklearn.tests.test_common.sklearn"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_common.test_search_cv": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "FutureWarning",
    "UserWarning",
    "check",
    "list",
    "sklearn.exceptions.ConvergenceWarning",
    "sklearn.exceptions.FitFailedWarning",
    "sklearn.tests.test_common._generate_search_cv_instances",
    "sklearn.utils._testing.ignore_warnings",
    "sklearn.utils.estimator_checks.parametrize_with_checks"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_common.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.tests.test_config": {
  "data": {},
  "type": "module"
 },
 "sklearn.tests.test_config.assert_raises": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.tests.test_config.config_context": {
  "data": {
   "shadows": "sklearn.config_context"
  },
  "type": "import"
 },
 "sklearn.tests.test_config.get_config": {
  "data": {
   "shadows": "sklearn.get_config"
  },
  "type": "import"
 },
 "sklearn.tests.test_config.set_config": {
  "data": {
   "shadows": "sklearn.set_config"
  },
  "type": "import"
 },
 "sklearn.tests.test_config.test_config_context": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "TypeError",
    "sklearn.config_context",
    "sklearn.get_config",
    "sklearn.set_config",
    "sklearn.utils._testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_config.test_config_context_exception": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.config_context",
    "sklearn.get_config"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_config.test_set_config": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "TypeError",
    "sklearn.get_config",
    "sklearn.set_config",
    "sklearn.utils._testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_discriminant_analysis": {
  "data": {
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "numpy.c_",
    "numpy.zeros"
   ]
  },
  "type": "module"
 },
 "sklearn.tests.test_discriminant_analysis.KMeans": {
  "data": {
   "shadows": "sklearn.cluster.KMeans"
  },
  "type": "import"
 },
 "sklearn.tests.test_discriminant_analysis.LedoitWolf": {
  "data": {
   "shadows": "sklearn.covariance.LedoitWolf"
  },
  "type": "import"
 },
 "sklearn.tests.test_discriminant_analysis.LinearDiscriminantAnalysis": {
  "data": {
   "shadows": "sklearn.discriminant_analysis.LinearDiscriminantAnalysis"
  },
  "type": "import"
 },
 "sklearn.tests.test_discriminant_analysis.QuadraticDiscriminantAnalysis": {
  "data": {
   "shadows": "sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis"
  },
  "type": "import"
 },
 "sklearn.tests.test_discriminant_analysis.ShrunkCovariance": {
  "data": {
   "shadows": "sklearn.covariance.ShrunkCovariance"
  },
  "type": "import"
 },
 "sklearn.tests.test_discriminant_analysis.StandardScaler": {
  "data": {
   "shadows": "sklearn.preprocessing.StandardScaler"
  },
  "type": "import"
 },
 "sklearn.tests.test_discriminant_analysis.X": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "sklearn.tests.test_discriminant_analysis.X1": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "sklearn.tests.test_discriminant_analysis.X2": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "sklearn.tests.test_discriminant_analysis.X5": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "sklearn.tests.test_discriminant_analysis.X6": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "sklearn.tests.test_discriminant_analysis.X7": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "sklearn.tests.test_discriminant_analysis._cov": {
  "data": {
   "shadows": "sklearn.discriminant_analysis._cov"
  },
  "type": "import"
 },
 "sklearn.tests.test_discriminant_analysis.assert_allclose": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_allclose"
  },
  "type": "import"
 },
 "sklearn.tests.test_discriminant_analysis.assert_almost_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_almost_equal"
  },
  "type": "import"
 },
 "sklearn.tests.test_discriminant_analysis.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.tests.test_discriminant_analysis.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.tests.test_discriminant_analysis.assert_no_warnings": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_no_warnings"
  },
  "type": "import"
 },
 "sklearn.tests.test_discriminant_analysis.assert_raise_message": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_raise_message"
  },
  "type": "import"
 },
 "sklearn.tests.test_discriminant_analysis.assert_raises": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.tests.test_discriminant_analysis.assert_warns": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_warns"
  },
  "type": "import"
 },
 "sklearn.tests.test_discriminant_analysis.check_random_state": {
  "data": {
   "shadows": "sklearn.utils.check_random_state"
  },
  "type": "import"
 },
 "sklearn.tests.test_discriminant_analysis.ignore_warnings": {
  "data": {
   "shadows": "sklearn.utils._testing.ignore_warnings"
  },
  "type": "import"
 },
 "sklearn.tests.test_discriminant_analysis.ledoit_wolf": {
  "data": {
   "shadows": "sklearn.covariance.ledoit_wolf"
  },
  "type": "import"
 },
 "sklearn.tests.test_discriminant_analysis.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "sklearn.tests.test_discriminant_analysis.make_blobs": {
  "data": {
   "shadows": "sklearn.datasets.make_blobs"
  },
  "type": "import"
 },
 "sklearn.tests.test_discriminant_analysis.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.tests.test_discriminant_analysis.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.tests.test_discriminant_analysis.solver_shrinkage": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "sklearn.tests.test_discriminant_analysis.test_covariance": {
  "data": {
   "lineno": 548,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.dot",
    "sklearn.datasets.make_blobs",
    "sklearn.discriminant_analysis._cov",
    "sklearn.tests.test_discriminant_analysis.y",
    "sklearn.utils._testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_discriminant_analysis.test_lda_coefs": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "sklearn.datasets.make_blobs",
    "sklearn.discriminant_analysis.LinearDiscriminantAnalysis",
    "sklearn.tests.test_discriminant_analysis.X",
    "sklearn.tests.test_discriminant_analysis.y",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_discriminant_analysis.test_lda_dimension_warning": {
  "data": {
   "lineno": 413,
   "symbols_in_volume": [
    "ValueError",
    "max",
    "min",
    "numpy.tile",
    "range",
    "sklearn.discriminant_analysis.LinearDiscriminantAnalysis",
    "sklearn.tests.test_discriminant_analysis.X",
    "sklearn.tests.test_discriminant_analysis.pytest",
    "sklearn.tests.test_discriminant_analysis.y",
    "sklearn.utils._testing.assert_no_warnings",
    "sklearn.utils.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_discriminant_analysis.test_lda_dtype_match": {
  "data": {
   "lineno": 441,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.float64",
    "numpy.int32",
    "numpy.int64",
    "sklearn.discriminant_analysis.LinearDiscriminantAnalysis",
    "sklearn.tests.test_discriminant_analysis.X",
    "sklearn.tests.test_discriminant_analysis.pytest",
    "sklearn.tests.test_discriminant_analysis.solver_shrinkage",
    "sklearn.tests.test_discriminant_analysis.y"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_discriminant_analysis.test_lda_explained_variance_ratio": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.discriminant_analysis.LinearDiscriminantAnalysis",
    "sklearn.tests.test_discriminant_analysis.X",
    "sklearn.tests.test_discriminant_analysis.y",
    "sklearn.utils._testing.assert_almost_equal",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_discriminant_analysis.test_lda_ledoitwolf": {
  "data": {
   "lineno": 381,
   "symbols_in_volume": [
    "StandardizedLedoitWolf",
    "numpy.random.RandomState",
    "sklearn.discriminant_analysis.LinearDiscriminantAnalysis",
    "sklearn.tests.test_discriminant_analysis.X",
    "sklearn.tests.test_discriminant_analysis.y",
    "sklearn.utils._testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_discriminant_analysis.test_lda_ledoitwolf.StandardizedLedoitWolf": {
  "data": {
   "lineno": 385
  },
  "type": "class"
 },
 "sklearn.tests.test_discriminant_analysis.test_lda_ledoitwolf.StandardizedLedoitWolf.fit": {
  "data": {
   "lineno": 386,
   "symbols_in_volume": [
    "numpy.newaxis",
    "sklearn.covariance.ledoit_wolf",
    "sklearn.preprocessing.StandardScaler",
    "sklearn.tests.test_discriminant_analysis.X"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_discriminant_analysis.test_lda_numeric_consistency_float32_float64": {
  "data": {
   "lineno": 454,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.float64",
    "sklearn.discriminant_analysis.LinearDiscriminantAnalysis",
    "sklearn.tests.test_discriminant_analysis.X",
    "sklearn.tests.test_discriminant_analysis.solver_shrinkage",
    "sklearn.tests.test_discriminant_analysis.y",
    "sklearn.utils._testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_discriminant_analysis.test_lda_orthogonality": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.arange",
    "numpy.array",
    "numpy.cov",
    "numpy.dot",
    "numpy.eye",
    "numpy.newaxis.reshape",
    "numpy.repeat",
    "numpy.sqrt",
    "numpy.sum",
    "sklearn.discriminant_analysis.LinearDiscriminantAnalysis",
    "sklearn.tests.test_discriminant_analysis.X",
    "sklearn.tests.test_discriminant_analysis.y",
    "sklearn.utils._testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_discriminant_analysis.test_lda_predict": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "NotImplementedError",
    "TypeError",
    "ValueError",
    "numpy.any",
    "numpy.array",
    "numpy.exp",
    "sklearn.cluster.KMeans",
    "sklearn.covariance.LedoitWolf",
    "sklearn.covariance.ShrunkCovariance",
    "sklearn.discriminant_analysis.LinearDiscriminantAnalysis",
    "sklearn.tests.test_discriminant_analysis.X",
    "sklearn.tests.test_discriminant_analysis.X1",
    "sklearn.tests.test_discriminant_analysis.pytest",
    "sklearn.tests.test_discriminant_analysis.solver_shrinkage",
    "sklearn.tests.test_discriminant_analysis.y",
    "sklearn.tests.test_discriminant_analysis.y3",
    "sklearn.utils._testing.assert_allclose",
    "sklearn.utils._testing.assert_array_equal",
    "sklearn.utils._testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_discriminant_analysis.test_lda_predict_proba": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "discriminant_func",
    "float",
    "generate_dataset",
    "len",
    "numpy.array",
    "numpy.dot",
    "numpy.hstack",
    "numpy.newaxis",
    "numpy.sum",
    "range",
    "scipy.linalg.inv",
    "sklearn.discriminant_analysis.LinearDiscriminantAnalysis",
    "sklearn.tests.test_discriminant_analysis.X",
    "sklearn.tests.test_discriminant_analysis.pytest",
    "sklearn.tests.test_discriminant_analysis.y",
    "sklearn.utils._testing.assert_allclose",
    "sum"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_discriminant_analysis.test_lda_predict_proba.discriminant_func": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.exp"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_discriminant_analysis.test_lda_predict_proba.generate_dataset": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "len",
    "numpy.hstack",
    "numpy.vstack",
    "range",
    "sklearn.tests.test_discriminant_analysis.X",
    "sklearn.tests.test_discriminant_analysis.y",
    "sklearn.utils.check_random_state",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_discriminant_analysis.test_lda_priors": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "UserWarning",
    "ValueError",
    "numpy.array",
    "sklearn.discriminant_analysis.LinearDiscriminantAnalysis",
    "sklearn.tests.test_discriminant_analysis.X",
    "sklearn.tests.test_discriminant_analysis.y",
    "sklearn.utils._testing.assert_array_almost_equal",
    "sklearn.utils._testing.assert_raise_message",
    "sklearn.utils._testing.assert_warns"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_discriminant_analysis.test_lda_scaling": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "numpy.vstack",
    "sklearn.discriminant_analysis.LinearDiscriminantAnalysis",
    "sklearn.tests.test_discriminant_analysis.y"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_discriminant_analysis.test_lda_shrinkage": {
  "data": {
   "lineno": 362,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "range",
    "sklearn.covariance.ShrunkCovariance",
    "sklearn.discriminant_analysis.LinearDiscriminantAnalysis",
    "sklearn.tests.test_discriminant_analysis.X",
    "sklearn.tests.test_discriminant_analysis.pytest",
    "sklearn.tests.test_discriminant_analysis.y",
    "sklearn.utils._testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_discriminant_analysis.test_lda_store_covariance": {
  "data": {
   "lineno": 330,
   "symbols_in_volume": [
    "hasattr",
    "numpy.array",
    "sklearn.discriminant_analysis.LinearDiscriminantAnalysis",
    "sklearn.tests.test_discriminant_analysis.X6",
    "sklearn.tests.test_discriminant_analysis.y6",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_discriminant_analysis.test_lda_transform": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "NotImplementedError",
    "sklearn.discriminant_analysis.LinearDiscriminantAnalysis",
    "sklearn.tests.test_discriminant_analysis.X",
    "sklearn.tests.test_discriminant_analysis.y",
    "sklearn.utils._testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_discriminant_analysis.test_qda": {
  "data": {
   "lineno": 466,
   "symbols_in_volume": [
    "ValueError",
    "numpy.any",
    "numpy.exp",
    "sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis",
    "sklearn.tests.test_discriminant_analysis.X6",
    "sklearn.tests.test_discriminant_analysis.X7",
    "sklearn.tests.test_discriminant_analysis.y4",
    "sklearn.tests.test_discriminant_analysis.y6",
    "sklearn.tests.test_discriminant_analysis.y7",
    "sklearn.utils._testing.assert_array_almost_equal",
    "sklearn.utils._testing.assert_array_equal",
    "sklearn.utils._testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_discriminant_analysis.test_qda_priors": {
  "data": {
   "lineno": 492,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.sum",
    "sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis",
    "sklearn.tests.test_discriminant_analysis.X6",
    "sklearn.tests.test_discriminant_analysis.y6"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_discriminant_analysis.test_qda_regularization": {
  "data": {
   "lineno": 525,
   "symbols_in_volume": [
    "numpy.any",
    "sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis",
    "sklearn.tests.test_discriminant_analysis.X2",
    "sklearn.tests.test_discriminant_analysis.X5",
    "sklearn.tests.test_discriminant_analysis.y5",
    "sklearn.tests.test_discriminant_analysis.y6",
    "sklearn.utils._testing.assert_array_equal",
    "sklearn.utils._testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_discriminant_analysis.test_qda_store_covariance": {
  "data": {
   "lineno": 505,
   "symbols_in_volume": [
    "hasattr",
    "numpy.array",
    "sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis",
    "sklearn.tests.test_discriminant_analysis.X6",
    "sklearn.tests.test_discriminant_analysis.y6",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_discriminant_analysis.test_raises_value_error_on_same_number_of_classes_and_samples": {
  "data": {
   "lineno": 562,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "sklearn.discriminant_analysis.LinearDiscriminantAnalysis",
    "sklearn.tests.test_discriminant_analysis.X",
    "sklearn.tests.test_discriminant_analysis.pytest",
    "sklearn.tests.test_discriminant_analysis.y"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_discriminant_analysis.y": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "sklearn.tests.test_discriminant_analysis.y3": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "sklearn.tests.test_discriminant_analysis.y4": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "sklearn.tests.test_discriminant_analysis.y5": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "sklearn.tests.test_discriminant_analysis.y6": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "sklearn.tests.test_discriminant_analysis.y7": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "sklearn.tests.test_docstring_parameters": {
  "data": {
   "symbols_in_volume": [
    "FutureWarning",
    "pkgutil.walk_packages",
    "set",
    "sklearn.tests.test_docstring_parameters.sklearn",
    "sklearn.tests.test_docstring_parameters.warnings"
   ]
  },
  "type": "module"
 },
 "sklearn.tests.test_docstring_parameters.IS_PYPY": {
  "data": {
   "shadows": "sklearn.utils.IS_PYPY"
  },
  "type": "import"
 },
 "sklearn.tests.test_docstring_parameters.LogisticRegression": {
  "data": {
   "shadows": "sklearn.linear_model.LogisticRegression"
  },
  "type": "import"
 },
 "sklearn.tests.test_docstring_parameters.PUBLIC_MODULES": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "sklearn.tests.test_docstring_parameters.Pep562": {
  "data": {
   "shadows": "sklearn.externals._pep562.Pep562"
  },
  "type": "import"
 },
 "sklearn.tests.test_docstring_parameters._DOCSTRING_IGNORES": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "sklearn.tests.test_docstring_parameters._METHODS_IGNORE_NONE_Y": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "sklearn.tests.test_docstring_parameters._construct_instance": {
  "data": {
   "shadows": "sklearn.utils.estimator_checks._construct_instance"
  },
  "type": "import"
 },
 "sklearn.tests.test_docstring_parameters._construct_searchcv_instance": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "SearchCV",
    "sklearn.linear_model.LogisticRegression"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_docstring_parameters._enforce_estimator_tags_x": {
  "data": {
   "shadows": "sklearn.utils.estimator_checks._enforce_estimator_tags_x"
  },
  "type": "import"
 },
 "sklearn.tests.test_docstring_parameters._enforce_estimator_tags_y": {
  "data": {
   "shadows": "sklearn.utils.estimator_checks._enforce_estimator_tags_y"
  },
  "type": "import"
 },
 "sklearn.tests.test_docstring_parameters._get_func_name": {
  "data": {
   "shadows": "sklearn.utils._testing._get_func_name"
  },
  "type": "import"
 },
 "sklearn.tests.test_docstring_parameters._is_deprecated": {
  "data": {
   "shadows": "sklearn.utils.deprecation._is_deprecated"
  },
  "type": "import"
 },
 "sklearn.tests.test_docstring_parameters.all_estimators": {
  "data": {
   "shadows": "sklearn.utils.all_estimators"
  },
  "type": "import"
 },
 "sklearn.tests.test_docstring_parameters.check_docstring_parameters": {
  "data": {
   "shadows": "sklearn.utils._testing.check_docstring_parameters"
  },
  "type": "import"
 },
 "sklearn.tests.test_docstring_parameters.docscrape": {
  "data": {
   "shadows": "numpydoc.docscrape"
  },
  "type": "import"
 },
 "sklearn.tests.test_docstring_parameters.ignore_warnings": {
  "data": {
   "shadows": "sklearn.utils._testing.ignore_warnings"
  },
  "type": "import"
 },
 "sklearn.tests.test_docstring_parameters.importlib": {
  "data": {
   "shadows": "importlib"
  },
  "type": "import"
 },
 "sklearn.tests.test_docstring_parameters.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "sklearn.tests.test_docstring_parameters.make_classification": {
  "data": {
   "shadows": "sklearn.datasets.make_classification"
  },
  "type": "import"
 },
 "sklearn.tests.test_docstring_parameters.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.tests.test_docstring_parameters.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.tests.test_docstring_parameters.signature": {
  "data": {
   "shadows": "inspect.signature"
  },
  "type": "import"
 },
 "sklearn.tests.test_docstring_parameters.sklearn": {
  "data": {
   "shadows": "sklearn"
  },
  "type": "import"
 },
 "sklearn.tests.test_docstring_parameters.test_docstring_parameters": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "AssertionError",
    "RuntimeError",
    "any",
    "getattr",
    "inspect.signature",
    "len",
    "numpydoc.docscrape.ClassDoc",
    "sklearn.tests.test_docstring_parameters.PUBLIC_MODULES",
    "sklearn.tests.test_docstring_parameters._DOCSTRING_IGNORES",
    "sklearn.tests.test_docstring_parameters._METHODS_IGNORE_NONE_Y",
    "sklearn.tests.test_docstring_parameters.importlib",
    "sklearn.tests.test_docstring_parameters.inspect",
    "sklearn.tests.test_docstring_parameters.pytest",
    "sklearn.tests.test_docstring_parameters.warnings",
    "sklearn.utils.IS_PYPY",
    "sklearn.utils._testing._get_func_name",
    "sklearn.utils._testing.check_docstring_parameters",
    "sklearn.utils.deprecation._is_deprecated"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_docstring_parameters.test_fit_docstring_attributes": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "FutureWarning",
    "hasattr",
    "numpy.c_",
    "numpydoc.docscrape.ClassDoc",
    "set",
    "sklearn.datasets.make_classification",
    "sklearn.tests.test_docstring_parameters._construct_searchcv_instance",
    "sklearn.tests.test_docstring_parameters.pytest",
    "sklearn.utils._testing.ignore_warnings",
    "sklearn.utils.all_estimators",
    "sklearn.utils.estimator_checks._construct_instance",
    "sklearn.utils.estimator_checks._enforce_estimator_tags_x",
    "sklearn.utils.estimator_checks._enforce_estimator_tags_y"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_docstring_parameters.test_tabs": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "FutureWarning",
    "IOError",
    "isinstance",
    "pkgutil.walk_packages",
    "sklearn.externals._pep562.Pep562",
    "sklearn.tests.test_docstring_parameters.importlib",
    "sklearn.tests.test_docstring_parameters.inspect",
    "sklearn.tests.test_docstring_parameters.sklearn",
    "sklearn.utils.IS_PYPY",
    "sklearn.utils._testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_docstring_parameters.walk_packages": {
  "data": {
   "shadows": "pkgutil.walk_packages"
  },
  "type": "import"
 },
 "sklearn.tests.test_docstring_parameters.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.tests.test_dummy": {
  "data": {},
  "type": "module"
 },
 "sklearn.tests.test_dummy.DummyClassifier": {
  "data": {
   "shadows": "sklearn.dummy.DummyClassifier"
  },
  "type": "import"
 },
 "sklearn.tests.test_dummy.DummyRegressor": {
  "data": {
   "shadows": "sklearn.dummy.DummyRegressor"
  },
  "type": "import"
 },
 "sklearn.tests.test_dummy.NotFittedError": {
  "data": {
   "shadows": "sklearn.exceptions.NotFittedError"
  },
  "type": "import"
 },
 "sklearn.tests.test_dummy._check_behavior_2d": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.base.clone"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_dummy._check_behavior_2d_for_constant": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.base.clone"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_dummy._check_equality_regressor": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "numpy.tile",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_dummy._check_predict_proba": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "len",
    "numpy.atleast_1d",
    "numpy.log",
    "numpy.ones",
    "numpy.reshape",
    "numpy.unique",
    "range",
    "sklearn.utils._testing.assert_array_almost_equal",
    "sklearn.utils._testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_dummy._weighted_percentile": {
  "data": {
   "shadows": "sklearn.utils.stats._weighted_percentile"
  },
  "type": "import"
 },
 "sklearn.tests.test_dummy.assert_almost_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_almost_equal"
  },
  "type": "import"
 },
 "sklearn.tests.test_dummy.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.tests.test_dummy.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.tests.test_dummy.assert_raises": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.tests.test_dummy.assert_warns_message": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_warns_message"
  },
  "type": "import"
 },
 "sklearn.tests.test_dummy.clone": {
  "data": {
   "shadows": "sklearn.base.clone"
  },
  "type": "import"
 },
 "sklearn.tests.test_dummy.ignore_warnings": {
  "data": {
   "shadows": "sklearn.utils._testing.ignore_warnings"
  },
  "type": "import"
 },
 "sklearn.tests.test_dummy.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.tests.test_dummy.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.tests.test_dummy.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.tests.test_dummy.test_classification_sample_weight": {
  "data": {
   "lineno": 565,
   "symbols_in_volume": [
    "sklearn.dummy.DummyClassifier",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_dummy.test_classifier_exceptions": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.dummy.DummyClassifier",
    "sklearn.exceptions.NotFittedError",
    "sklearn.utils._testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_dummy.test_classifier_prediction_independent_of_X": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "sklearn.dummy.DummyClassifier",
    "sklearn.tests.test_dummy.pytest",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_dummy.test_classifier_score_with_None": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.dummy.DummyClassifier",
    "sklearn.tests.test_dummy.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_dummy.test_constant_size_multioutput_regressor": {
  "data": {
   "lineno": 493,
   "symbols_in_volume": [
    "ValueError",
    "numpy.random.RandomState",
    "sklearn.dummy.DummyRegressor",
    "sklearn.utils._testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_dummy.test_constant_strategy": {
  "data": {
   "lineno": 502,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "numpy.ones",
    "sklearn.dummy.DummyClassifier",
    "sklearn.tests.test_dummy._check_predict_proba",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_dummy.test_constant_strategy_exceptions": {
  "data": {
   "lineno": 537,
   "symbols_in_volume": [
    "ValueError",
    "numpy.transpose",
    "sklearn.dummy.DummyClassifier",
    "sklearn.tests.test_dummy.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_dummy.test_constant_strategy_multioutput": {
  "data": {
   "lineno": 519,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "numpy.hstack",
    "numpy.ones",
    "numpy.zeros",
    "sklearn.dummy.DummyClassifier",
    "sklearn.tests.test_dummy._check_predict_proba",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_dummy.test_constant_strategy_multioutput_regressor": {
  "data": {
   "lineno": 443,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.dummy.DummyRegressor",
    "sklearn.tests.test_dummy._check_behavior_2d_for_constant",
    "sklearn.tests.test_dummy._check_equality_regressor"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_dummy.test_constant_strategy_regressor": {
  "data": {
   "lineno": 427,
   "symbols_in_volume": [
    "len",
    "numpy.random.RandomState",
    "sklearn.dummy.DummyRegressor",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_dummy.test_constant_strategy_sparse_target": {
  "data": {
   "lineno": 574,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "numpy.hstack",
    "numpy.ones",
    "numpy.zeros",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.issparse",
    "sklearn.dummy.DummyClassifier",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_dummy.test_constants_not_specified_regressor": {
  "data": {
   "lineno": 485,
   "symbols_in_volume": [
    "TypeError",
    "sklearn.dummy.DummyRegressor",
    "sklearn.utils._testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_dummy.test_dtype_of_classifier_probas": {
  "data": {
   "lineno": 747,
   "symbols_in_volume": [
    "numpy.float64",
    "numpy.zeros",
    "sklearn.dummy.DummyClassifier",
    "sklearn.tests.test_dummy.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_dummy.test_dummy_classifier_on_3D_array": {
  "data": {
   "lineno": 685,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.dummy.DummyClassifier",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_dummy.test_dummy_regressor_on_3D_array": {
  "data": {
   "lineno": 675,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.dummy.DummyRegressor",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_dummy.test_dummy_regressor_return_std": {
  "data": {
   "lineno": 698,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "sklearn.dummy.DummyRegressor",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_dummy.test_dummy_regressor_sample_weight": {
  "data": {
   "lineno": 657,
   "symbols_in_volume": [
    "numpy.average",
    "numpy.random.RandomState",
    "sklearn.dummy.DummyRegressor",
    "sklearn.utils.stats._weighted_percentile"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_dummy.test_mean_strategy_multioutput_regressor": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "numpy.mean",
    "numpy.random.RandomState",
    "sklearn.dummy.DummyRegressor",
    "sklearn.tests.test_dummy._check_behavior_2d",
    "sklearn.tests.test_dummy._check_equality_regressor"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_dummy.test_mean_strategy_regressor": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "len",
    "numpy.mean",
    "numpy.random.RandomState",
    "sklearn.dummy.DummyRegressor",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_dummy.test_median_strategy_multioutput_regressor": {
  "data": {
   "lineno": 317,
   "symbols_in_volume": [
    "numpy.median",
    "numpy.random.RandomState",
    "sklearn.dummy.DummyRegressor",
    "sklearn.tests.test_dummy._check_behavior_2d",
    "sklearn.tests.test_dummy._check_equality_regressor"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_dummy.test_median_strategy_regressor": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "len",
    "numpy.median",
    "numpy.random.RandomState",
    "sklearn.dummy.DummyRegressor",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_dummy.test_most_frequent_and_prior_strategy": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "len",
    "numpy.ones",
    "sklearn.dummy.DummyClassifier",
    "sklearn.tests.test_dummy._check_predict_proba",
    "sklearn.utils._testing.assert_array_almost_equal",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_dummy.test_most_frequent_and_prior_strategy_multioutput": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "numpy.hstack",
    "numpy.ones",
    "numpy.zeros",
    "sklearn.dummy.DummyClassifier",
    "sklearn.tests.test_dummy._check_behavior_2d",
    "sklearn.tests.test_dummy._check_predict_proba",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_dummy.test_most_frequent_and_prior_strategy_sparse_target": {
  "data": {
   "lineno": 638,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "numpy.hstack",
    "numpy.ones",
    "numpy.zeros",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.issparse",
    "sklearn.dummy.DummyClassifier",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_dummy.test_most_frequent_and_prior_strategy_with_2d_column_y": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "sklearn.dummy.DummyClassifier",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_dummy.test_n_features_in_": {
  "data": {
   "lineno": 759,
   "symbols_in_volume": [
    "Dummy",
    "hasattr",
    "sklearn.dummy.DummyClassifier",
    "sklearn.dummy.DummyRegressor",
    "sklearn.tests.test_dummy.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_dummy.test_quantile_invalid": {
  "data": {
   "lineno": 398,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "sklearn.dummy.DummyRegressor",
    "sklearn.utils._testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_dummy.test_quantile_strategy_empty_train": {
  "data": {
   "lineno": 422,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.dummy.DummyRegressor",
    "sklearn.utils._testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_dummy.test_quantile_strategy_multioutput_regressor": {
  "data": {
   "lineno": 364,
   "symbols_in_volume": [
    "numpy.median",
    "numpy.percentile",
    "numpy.random.RandomState",
    "sklearn.dummy.DummyRegressor",
    "sklearn.tests.test_dummy._check_behavior_2d",
    "sklearn.tests.test_dummy._check_equality_regressor"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_dummy.test_quantile_strategy_regressor": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": [
    "len",
    "numpy.max",
    "numpy.median",
    "numpy.min",
    "numpy.percentile",
    "numpy.random.RandomState",
    "sklearn.dummy.DummyRegressor",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_dummy.test_regressor_exceptions": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "sklearn.dummy.DummyRegressor",
    "sklearn.exceptions.NotFittedError",
    "sklearn.utils._testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_dummy.test_regressor_prediction_independent_of_X": {
  "data": {
   "lineno": 726,
   "symbols_in_volume": [
    "sklearn.dummy.DummyRegressor",
    "sklearn.tests.test_dummy.pytest",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_dummy.test_regressor_score_with_None": {
  "data": {
   "lineno": 711,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.dummy.DummyRegressor",
    "sklearn.tests.test_dummy.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_dummy.test_stratified_strategy": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "float",
    "len",
    "numpy.bincount",
    "sklearn.dummy.DummyClassifier",
    "sklearn.tests.test_dummy._check_predict_proba",
    "sklearn.utils._testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_dummy.test_stratified_strategy_multioutput": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "float",
    "len",
    "numpy.array",
    "numpy.bincount",
    "range",
    "sklearn.dummy.DummyClassifier",
    "sklearn.tests.test_dummy._check_behavior_2d",
    "sklearn.tests.test_dummy._check_predict_proba",
    "sklearn.utils._testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_dummy.test_stratified_strategy_sparse_target": {
  "data": {
   "lineno": 615,
   "symbols_in_volume": [
    "float",
    "len",
    "numpy.array",
    "numpy.bincount",
    "range",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.issparse",
    "sklearn.dummy.DummyClassifier",
    "sklearn.utils._testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_dummy.test_string_labels": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "sklearn.dummy.DummyClassifier",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_dummy.test_uniform_strategy": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "float",
    "len",
    "numpy.bincount",
    "sklearn.dummy.DummyClassifier",
    "sklearn.tests.test_dummy._check_predict_proba",
    "sklearn.utils._testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_dummy.test_uniform_strategy_multioutput": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "float",
    "len",
    "numpy.array",
    "numpy.bincount",
    "range",
    "sklearn.dummy.DummyClassifier",
    "sklearn.tests.test_dummy._check_behavior_2d",
    "sklearn.tests.test_dummy._check_predict_proba",
    "sklearn.utils._testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_dummy.test_uniform_strategy_sparse_target_warning": {
  "data": {
   "lineno": 592,
   "symbols_in_volume": [
    "UserWarning",
    "float",
    "len",
    "numpy.array",
    "numpy.bincount",
    "range",
    "scipy.sparse.csc_matrix",
    "sklearn.dummy.DummyClassifier",
    "sklearn.utils._testing.assert_almost_equal",
    "sklearn.utils._testing.assert_warns_message"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_dummy.test_unknown_strategey_regressor": {
  "data": {
   "lineno": 477,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.dummy.DummyRegressor",
    "sklearn.utils._testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_dummy.test_y_mean_attribute_regressor": {
  "data": {
   "lineno": 467,
   "symbols_in_volume": [
    "numpy.mean",
    "sklearn.dummy.DummyRegressor"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_init": {
  "data": {
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "module"
 },
 "sklearn.tests.test_init.__author__": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "sklearn.tests.test_init.__license__": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "sklearn.tests.test_init._top_import_error": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "sklearn.tests.test_init.test_import_skl": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "sklearn.tests.test_init._top_import_error"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_isotonic": {
  "data": {},
  "type": "module"
 },
 "sklearn.tests.test_isotonic.IsotonicRegression": {
  "data": {
   "shadows": "sklearn.isotonic.IsotonicRegression"
  },
  "type": "import"
 },
 "sklearn.tests.test_isotonic._make_unique": {
  "data": {
   "shadows": "sklearn.isotonic._make_unique"
  },
  "type": "import"
 },
 "sklearn.tests.test_isotonic.assert_allclose": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_allclose"
  },
  "type": "import"
 },
 "sklearn.tests.test_isotonic.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.tests.test_isotonic.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.tests.test_isotonic.assert_no_warnings": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_no_warnings"
  },
  "type": "import"
 },
 "sklearn.tests.test_isotonic.assert_raises": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.tests.test_isotonic.assert_warns_message": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_warns_message"
  },
  "type": "import"
 },
 "sklearn.tests.test_isotonic.check_array": {
  "data": {
   "shadows": "sklearn.utils.validation.check_array"
  },
  "type": "import"
 },
 "sklearn.tests.test_isotonic.check_increasing": {
  "data": {
   "shadows": "sklearn.isotonic.check_increasing"
  },
  "type": "import"
 },
 "sklearn.tests.test_isotonic.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "sklearn.tests.test_isotonic.expit": {
  "data": {
   "shadows": "scipy.special.expit"
  },
  "type": "import"
 },
 "sklearn.tests.test_isotonic.isotonic_regression": {
  "data": {
   "shadows": "sklearn.isotonic.isotonic_regression"
  },
  "type": "import"
 },
 "sklearn.tests.test_isotonic.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.tests.test_isotonic.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "sklearn.tests.test_isotonic.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.tests.test_isotonic.shuffle": {
  "data": {
   "shadows": "sklearn.utils.shuffle"
  },
  "type": "import"
 },
 "sklearn.tests.test_isotonic.test_assert_raises_exceptions": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "ValueError",
    "numpy.random.RandomState",
    "sklearn.isotonic.IsotonicRegression",
    "sklearn.utils._testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_isotonic.test_check_ci_warn": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "UserWarning",
    "sklearn.isotonic.check_increasing",
    "sklearn.utils._testing.assert_warns_message"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_isotonic.test_check_increasing_down": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "sklearn.isotonic.check_increasing",
    "sklearn.utils._testing.assert_no_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_isotonic.test_check_increasing_down_extreme": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "sklearn.isotonic.check_increasing",
    "sklearn.utils._testing.assert_no_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_isotonic.test_check_increasing_small_number_of_samples": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "sklearn.isotonic.check_increasing",
    "sklearn.utils._testing.assert_no_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_isotonic.test_check_increasing_up": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "sklearn.isotonic.check_increasing",
    "sklearn.utils._testing.assert_no_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_isotonic.test_check_increasing_up_extreme": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "sklearn.isotonic.check_increasing",
    "sklearn.utils._testing.assert_no_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_isotonic.test_fast_predict": {
  "data": {
   "lineno": 428,
   "symbols_in_volume": [
    "numpy.less",
    "numpy.random.RandomState",
    "scipy.special.expit",
    "sklearn.isotonic.IsotonicRegression",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_isotonic.test_input_shape_validation": {
  "data": {
   "lineno": 578,
   "symbols_in_volume": [
    "numpy.arange",
    "sklearn.isotonic.IsotonicRegression",
    "sklearn.utils._testing.assert_allclose",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_isotonic.test_isotonic_2darray_more_than_1_feature": {
  "data": {
   "lineno": 600,
   "symbols_in_volume": [
    "ValueError",
    "numpy.arange",
    "numpy.c_",
    "sklearn.isotonic.IsotonicRegression",
    "sklearn.tests.test_isotonic.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_isotonic.test_isotonic_copy_before_fit": {
  "data": {
   "lineno": 464,
   "symbols_in_volume": [
    "sklearn.isotonic.IsotonicRegression",
    "sklearn.tests.test_isotonic.copy"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_isotonic.test_isotonic_dtype": {
  "data": {
   "lineno": 470,
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "numpy.array",
    "numpy.float32",
    "numpy.float64",
    "numpy.int32",
    "numpy.int64",
    "sklearn.isotonic.IsotonicRegression",
    "sklearn.isotonic.isotonic_regression",
    "sklearn.utils.validation.check_array"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_isotonic.test_isotonic_duplicate_min_entry": {
  "data": {
   "lineno": 373,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.isfinite",
    "sklearn.isotonic.IsotonicRegression"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_isotonic.test_isotonic_make_unique_tolerance": {
  "data": {
   "lineno": 528,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.float64",
    "sklearn.isotonic.IsotonicRegression",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_isotonic.test_isotonic_min_max_boundaries": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.round",
    "sklearn.isotonic.IsotonicRegression",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_isotonic.test_isotonic_mismatched_dtype": {
  "data": {
   "lineno": 491,
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "numpy.array",
    "numpy.float32",
    "numpy.float64",
    "numpy.int32",
    "numpy.int64",
    "sklearn.isotonic.IsotonicRegression",
    "sklearn.tests.test_isotonic.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_isotonic.test_isotonic_non_regression_inf_slope": {
  "data": {
   "lineno": 541,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.array",
    "numpy.isfinite",
    "sklearn.isotonic.IsotonicRegression"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_isotonic.test_isotonic_regression": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "numpy.array",
    "numpy.mean",
    "numpy.ones",
    "numpy.random.permutation",
    "sklearn.isotonic.IsotonicRegression",
    "sklearn.isotonic.isotonic_regression",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_isotonic.test_isotonic_regression_auto_decreasing": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "all",
    "len",
    "numpy.arange",
    "numpy.array",
    "sklearn.isotonic.IsotonicRegression",
    "sklearn.tests.test_isotonic.warnings",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_isotonic.test_isotonic_regression_auto_increasing": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "all",
    "len",
    "numpy.arange",
    "numpy.array",
    "sklearn.isotonic.IsotonicRegression",
    "sklearn.tests.test_isotonic.warnings",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_isotonic.test_isotonic_regression_oob_bad": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.arange",
    "numpy.array",
    "sklearn.isotonic.IsotonicRegression",
    "sklearn.utils._testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_isotonic.test_isotonic_regression_oob_bad_after": {
  "data": {
   "lineno": 346,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.arange",
    "numpy.array",
    "sklearn.isotonic.IsotonicRegression",
    "sklearn.utils._testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_isotonic.test_isotonic_regression_oob_clip": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "len",
    "max",
    "min",
    "numpy.arange",
    "numpy.array",
    "sklearn.isotonic.IsotonicRegression"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_isotonic.test_isotonic_regression_oob_nan": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": [
    "len",
    "max",
    "min",
    "numpy.arange",
    "numpy.array",
    "numpy.isnan",
    "sklearn.isotonic.IsotonicRegression",
    "sum"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_isotonic.test_isotonic_regression_oob_raise": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "max",
    "min",
    "numpy.arange",
    "numpy.array",
    "sklearn.isotonic.IsotonicRegression",
    "sklearn.utils._testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_isotonic.test_isotonic_regression_pickle": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "numpy.array",
    "numpy.testing.assert_array_equal",
    "sklearn.isotonic.IsotonicRegression",
    "sklearn.tests.test_isotonic.pickle"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_isotonic.test_isotonic_regression_reversed": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "numpy.array",
    "numpy.ones",
    "sklearn.isotonic.IsotonicRegression",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_isotonic.test_isotonic_regression_ties_max": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "sklearn.isotonic.IsotonicRegression",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_isotonic.test_isotonic_regression_ties_min": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "sklearn.isotonic.IsotonicRegression",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_isotonic.test_isotonic_regression_ties_secondary_": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "sklearn.isotonic.IsotonicRegression",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_isotonic.test_isotonic_regression_with_ties_in_differently_sized_groups": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.isotonic.IsotonicRegression",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_isotonic.test_isotonic_sample_weight": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "sklearn.isotonic.IsotonicRegression",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_isotonic.test_isotonic_sample_weight_parameter_default_value": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.log",
    "numpy.ones",
    "numpy.random.RandomState",
    "sklearn.isotonic.IsotonicRegression",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_isotonic.test_isotonic_thresholds": {
  "data": {
   "lineno": 551,
   "symbols_in_volume": [
    "all",
    "numpy.diff",
    "numpy.in1d",
    "numpy.random.RandomState",
    "sklearn.isotonic.IsotonicRegression",
    "sklearn.tests.test_isotonic.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_isotonic.test_isotonic_ymin_ymax": {
  "data": {
   "lineno": 383,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.array",
    "sklearn.isotonic.isotonic_regression"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_isotonic.test_isotonic_zero_weight_loop": {
  "data": {
   "lineno": 406,
   "symbols_in_volume": [
    "numpy.linspace",
    "numpy.random.RandomState",
    "sklearn.isotonic.IsotonicRegression"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_isotonic.test_make_unique_dtype": {
  "data": {
   "lineno": 504,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.float32",
    "numpy.float64",
    "numpy.ones_like",
    "sklearn.isotonic._make_unique",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_isotonic.test_make_unique_tolerance": {
  "data": {
   "lineno": 514,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.float32",
    "numpy.float64",
    "numpy.ones_like",
    "sklearn.isotonic._make_unique",
    "sklearn.tests.test_isotonic.pytest",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_isotonic.test_permutation_invariance": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "sklearn.isotonic.IsotonicRegression",
    "sklearn.utils._testing.assert_array_equal",
    "sklearn.utils.shuffle"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_isotonic.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.tests.test_kernel_approximation": {
  "data": {
   "symbols_in_volume": [
    "numpy.newaxis",
    "numpy.random.RandomState",
    "sklearn.tests.test_kernel_approximation.X",
    "sklearn.tests.test_kernel_approximation.Y",
    "sklearn.tests.test_kernel_approximation.rng"
   ]
  },
  "type": "module"
 },
 "sklearn.tests.test_kernel_approximation.AdditiveChi2Sampler": {
  "data": {
   "shadows": "sklearn.kernel_approximation.AdditiveChi2Sampler"
  },
  "type": "import"
 },
 "sklearn.tests.test_kernel_approximation.Nystroem": {
  "data": {
   "shadows": "sklearn.kernel_approximation.Nystroem"
  },
  "type": "import"
 },
 "sklearn.tests.test_kernel_approximation.PolynomialCountSketch": {
  "data": {
   "shadows": "sklearn.kernel_approximation.PolynomialCountSketch"
  },
  "type": "import"
 },
 "sklearn.tests.test_kernel_approximation.RBFSampler": {
  "data": {
   "shadows": "sklearn.kernel_approximation.RBFSampler"
  },
  "type": "import"
 },
 "sklearn.tests.test_kernel_approximation.SkewedChi2Sampler": {
  "data": {
   "shadows": "sklearn.kernel_approximation.SkewedChi2Sampler"
  },
  "type": "import"
 },
 "sklearn.tests.test_kernel_approximation.X": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "sklearn.tests.test_kernel_approximation.Y": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "sklearn.tests.test_kernel_approximation._linear_kernel": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "numpy.dot",
    "sklearn.tests.test_kernel_approximation.X",
    "sklearn.tests.test_kernel_approximation.Y"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_kernel_approximation.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.tests.test_kernel_approximation.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.tests.test_kernel_approximation.assert_raises": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.tests.test_kernel_approximation.chi2_kernel": {
  "data": {
   "shadows": "sklearn.metrics.pairwise.chi2_kernel"
  },
  "type": "import"
 },
 "sklearn.tests.test_kernel_approximation.csr_matrix": {
  "data": {
   "shadows": "scipy.sparse.csr_matrix"
  },
  "type": "import"
 },
 "sklearn.tests.test_kernel_approximation.kernel_metrics": {
  "data": {
   "shadows": "sklearn.metrics.pairwise.kernel_metrics"
  },
  "type": "import"
 },
 "sklearn.tests.test_kernel_approximation.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.tests.test_kernel_approximation.polynomial_kernel": {
  "data": {
   "shadows": "sklearn.metrics.pairwise.polynomial_kernel"
  },
  "type": "import"
 },
 "sklearn.tests.test_kernel_approximation.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.tests.test_kernel_approximation.rbf_kernel": {
  "data": {
   "shadows": "sklearn.metrics.pairwise.rbf_kernel"
  },
  "type": "import"
 },
 "sklearn.tests.test_kernel_approximation.rng": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "sklearn.tests.test_kernel_approximation.test_additive_chi2_sampler": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "ValueError",
    "numpy.dot",
    "numpy.newaxis",
    "scipy.sparse.csr_matrix",
    "sklearn.kernel_approximation.AdditiveChi2Sampler",
    "sklearn.tests.test_kernel_approximation.X",
    "sklearn.tests.test_kernel_approximation.Y",
    "sklearn.utils._testing.assert_array_almost_equal",
    "sklearn.utils._testing.assert_array_equal",
    "sklearn.utils._testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_kernel_approximation.test_additive_chi2_sampler_exceptions": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.kernel_approximation.AdditiveChi2Sampler",
    "sklearn.tests.test_kernel_approximation.X",
    "sklearn.tests.test_kernel_approximation.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_kernel_approximation.test_input_validation": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "scipy.sparse.csr_matrix",
    "sklearn.kernel_approximation.AdditiveChi2Sampler",
    "sklearn.kernel_approximation.RBFSampler",
    "sklearn.kernel_approximation.SkewedChi2Sampler",
    "sklearn.tests.test_kernel_approximation.X"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_kernel_approximation.test_nystroem_approximation": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.random.RandomState",
    "sklearn.kernel_approximation.Nystroem",
    "sklearn.metrics.pairwise.kernel_metrics",
    "sklearn.metrics.pairwise.rbf_kernel",
    "sklearn.tests.test_kernel_approximation.X",
    "sklearn.tests.test_kernel_approximation._linear_kernel",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_kernel_approximation.test_nystroem_callable": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "list",
    "numpy.random.RandomState",
    "sklearn.kernel_approximation.Nystroem",
    "sklearn.tests.test_kernel_approximation.X",
    "sklearn.tests.test_kernel_approximation._linear_kernel",
    "sklearn.tests.test_kernel_approximation.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_kernel_approximation.test_nystroem_callable.logging_histogram_kernel": {
  "data": {
   "lineno": 284,
   "symbols_in_volume": [
    "numpy.minimum"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_kernel_approximation.test_nystroem_default_parameters": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.random.RandomState",
    "sklearn.kernel_approximation.Nystroem",
    "sklearn.metrics.pairwise.chi2_kernel",
    "sklearn.metrics.pairwise.rbf_kernel",
    "sklearn.tests.test_kernel_approximation.X",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_kernel_approximation.test_nystroem_poly_kernel_params": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.random.RandomState",
    "sklearn.kernel_approximation.Nystroem",
    "sklearn.metrics.pairwise.polynomial_kernel",
    "sklearn.tests.test_kernel_approximation.X",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_kernel_approximation.test_nystroem_precomputed_kernel": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "ValueError",
    "numpy.dot",
    "numpy.random.RandomState",
    "sklearn.kernel_approximation.Nystroem",
    "sklearn.metrics.pairwise.polynomial_kernel",
    "sklearn.tests.test_kernel_approximation.X",
    "sklearn.tests.test_kernel_approximation.pytest",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_kernel_approximation.test_nystroem_singular_kernel": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.dot",
    "numpy.isfinite",
    "numpy.random.RandomState",
    "numpy.vstack",
    "sklearn.kernel_approximation.Nystroem",
    "sklearn.metrics.pairwise.rbf_kernel",
    "sklearn.tests.test_kernel_approximation.X",
    "sklearn.tests.test_kernel_approximation.Y",
    "sklearn.tests.test_kernel_approximation.rng",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_kernel_approximation.test_polynomial_count_sketch": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.dot",
    "numpy.max",
    "numpy.mean",
    "scipy.sparse.csr_matrix",
    "sklearn.kernel_approximation.PolynomialCountSketch",
    "sklearn.metrics.pairwise.polynomial_kernel",
    "sklearn.tests.test_kernel_approximation.X",
    "sklearn.tests.test_kernel_approximation.Y",
    "sklearn.tests.test_kernel_approximation.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_kernel_approximation.test_polynomial_count_sketch_raises_if_degree_lower_than_one": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.kernel_approximation.PolynomialCountSketch",
    "sklearn.tests.test_kernel_approximation.X",
    "sklearn.tests.test_kernel_approximation.Y",
    "sklearn.tests.test_kernel_approximation.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_kernel_approximation.test_rbf_sampler": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.dot",
    "numpy.max",
    "numpy.mean",
    "sklearn.kernel_approximation.RBFSampler",
    "sklearn.metrics.pairwise.rbf_kernel",
    "sklearn.tests.test_kernel_approximation.X",
    "sklearn.tests.test_kernel_approximation.Y"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_kernel_approximation.test_skewed_chi2_sampler": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "ValueError",
    "numpy.dot",
    "numpy.exp",
    "numpy.isfinite",
    "numpy.log",
    "numpy.newaxis",
    "sklearn.kernel_approximation.SkewedChi2Sampler",
    "sklearn.tests.test_kernel_approximation.X",
    "sklearn.tests.test_kernel_approximation.Y",
    "sklearn.utils._testing.assert_array_almost_equal",
    "sklearn.utils._testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_kernel_ridge": {
  "data": {
   "symbols_in_volume": [
    "numpy.array",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "sklearn.datasets.make_regression"
   ]
  },
  "type": "module"
 },
 "sklearn.tests.test_kernel_ridge.KernelRidge": {
  "data": {
   "shadows": "sklearn.kernel_ridge.KernelRidge"
  },
  "type": "import"
 },
 "sklearn.tests.test_kernel_ridge.Ridge": {
  "data": {
   "shadows": "sklearn.linear_model.Ridge"
  },
  "type": "import"
 },
 "sklearn.tests.test_kernel_ridge.Xcsc": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "sklearn.tests.test_kernel_ridge.Xcsr": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "sklearn.tests.test_kernel_ridge.Y": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "sklearn.tests.test_kernel_ridge.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.tests.test_kernel_ridge.ignore_warnings": {
  "data": {
   "shadows": "sklearn.utils._testing.ignore_warnings"
  },
  "type": "import"
 },
 "sklearn.tests.test_kernel_ridge.make_regression": {
  "data": {
   "shadows": "sklearn.datasets.make_regression"
  },
  "type": "import"
 },
 "sklearn.tests.test_kernel_ridge.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.tests.test_kernel_ridge.pairwise_kernels": {
  "data": {
   "shadows": "sklearn.metrics.pairwise.pairwise_kernels"
  },
  "type": "import"
 },
 "sklearn.tests.test_kernel_ridge.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.tests.test_kernel_ridge.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.tests.test_kernel_ridge.test_kernel_ridge": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "sklearn.kernel_ridge.KernelRidge",
    "sklearn.linear_model.Ridge",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_kernel_ridge.test_kernel_ridge_csc": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "sklearn.kernel_ridge.KernelRidge",
    "sklearn.linear_model.Ridge",
    "sklearn.tests.test_kernel_ridge.Xcsc",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_kernel_ridge.test_kernel_ridge_csr": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "sklearn.kernel_ridge.KernelRidge",
    "sklearn.linear_model.Ridge",
    "sklearn.tests.test_kernel_ridge.Xcsr",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_kernel_ridge.test_kernel_ridge_multi_output": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.kernel_ridge.KernelRidge",
    "sklearn.linear_model.Ridge",
    "sklearn.tests.test_kernel_ridge.Y",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_kernel_ridge.test_kernel_ridge_pairwise_is_deprecated": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "FutureWarning",
    "sklearn.kernel_ridge.KernelRidge",
    "sklearn.tests.test_kernel_ridge.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_kernel_ridge.test_kernel_ridge_precomputed": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "sklearn.kernel_ridge.KernelRidge",
    "sklearn.metrics.pairwise.pairwise_kernels",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_kernel_ridge.test_kernel_ridge_precomputed_kernel_unchanged": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "numpy.dot",
    "sklearn.kernel_ridge.KernelRidge",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_kernel_ridge.test_kernel_ridge_sample_weights": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.random.RandomState",
    "sklearn.kernel_ridge.KernelRidge",
    "sklearn.linear_model.Ridge",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_kernel_ridge.test_kernel_ridge_singular_kernel": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "sklearn.kernel_ridge.KernelRidge",
    "sklearn.linear_model.Ridge",
    "sklearn.utils._testing.assert_array_almost_equal",
    "sklearn.utils._testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_metaestimators": {
  "data": {
   "symbols_in_volume": [
    "sklearn.ensemble.BaggingClassifier",
    "sklearn.feature_selection.RFE",
    "sklearn.feature_selection.RFECV",
    "sklearn.model_selection.GridSearchCV",
    "sklearn.model_selection.RandomizedSearchCV",
    "sklearn.pipeline.Pipeline",
    "sklearn.semi_supervised.SelfTrainingClassifier",
    "sklearn.tests.test_metaestimators.DelegatorData"
   ]
  },
  "type": "module"
 },
 "sklearn.tests.test_metaestimators.BaggingClassifier": {
  "data": {
   "shadows": "sklearn.ensemble.BaggingClassifier"
  },
  "type": "import"
 },
 "sklearn.tests.test_metaestimators.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "sklearn.tests.test_metaestimators.DELEGATING_METAESTIMATORS": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "sklearn.tests.test_metaestimators.DelegatorData": {
  "data": {
   "lineno": 19
  },
  "type": "class"
 },
 "sklearn.tests.test_metaestimators.DelegatorData.__init__": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "sklearn.datasets.make_classification"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_metaestimators.GridSearchCV": {
  "data": {
   "shadows": "sklearn.model_selection.GridSearchCV"
  },
  "type": "import"
 },
 "sklearn.tests.test_metaestimators.NotFittedError": {
  "data": {
   "shadows": "sklearn.exceptions.NotFittedError"
  },
  "type": "import"
 },
 "sklearn.tests.test_metaestimators.Pipeline": {
  "data": {
   "shadows": "sklearn.pipeline.Pipeline"
  },
  "type": "import"
 },
 "sklearn.tests.test_metaestimators.RFE": {
  "data": {
   "shadows": "sklearn.feature_selection.RFE"
  },
  "type": "import"
 },
 "sklearn.tests.test_metaestimators.RFECV": {
  "data": {
   "shadows": "sklearn.feature_selection.RFECV"
  },
  "type": "import"
 },
 "sklearn.tests.test_metaestimators.RandomizedSearchCV": {
  "data": {
   "shadows": "sklearn.model_selection.RandomizedSearchCV"
  },
  "type": "import"
 },
 "sklearn.tests.test_metaestimators.SelfTrainingClassifier": {
  "data": {
   "shadows": "sklearn.semi_supervised.SelfTrainingClassifier"
  },
  "type": "import"
 },
 "sklearn.tests.test_metaestimators.assert_raises": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.tests.test_metaestimators.check_is_fitted": {
  "data": {
   "shadows": "sklearn.utils.validation.check_is_fitted"
  },
  "type": "import"
 },
 "sklearn.tests.test_metaestimators.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "sklearn.tests.test_metaestimators.make_classification": {
  "data": {
   "shadows": "sklearn.datasets.make_classification"
  },
  "type": "import"
 },
 "sklearn.tests.test_metaestimators.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.tests.test_metaestimators.test_metaestimator_delegation": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "SubEstimator",
    "getattr",
    "hasattr",
    "sklearn.exceptions.NotFittedError",
    "sklearn.tests.test_metaestimators.DELEGATING_METAESTIMATORS",
    "sklearn.utils._testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_metaestimators.test_metaestimator_delegation.SubEstimator": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator"
   ]
  },
  "type": "class"
 },
 "sklearn.tests.test_metaestimators.test_metaestimator_delegation.SubEstimator.__init__": {
  "data": {
   "lineno": 64
  },
  "type": "function"
 },
 "sklearn.tests.test_metaestimators.test_metaestimator_delegation.SubEstimator._check_fit": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "sklearn.utils.validation.check_is_fitted"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_metaestimators.test_metaestimator_delegation.SubEstimator.decision_function": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_metaestimators.test_metaestimator_delegation.SubEstimator.fit": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_metaestimators.test_metaestimator_delegation.SubEstimator.inverse_transform": {
  "data": {
   "lineno": 76
  },
  "type": "function"
 },
 "sklearn.tests.test_metaestimators.test_metaestimator_delegation.SubEstimator.predict": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_metaestimators.test_metaestimator_delegation.SubEstimator.predict_log_proba": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_metaestimators.test_metaestimator_delegation.SubEstimator.predict_proba": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_metaestimators.test_metaestimator_delegation.SubEstimator.score": {
  "data": {
   "lineno": 106
  },
  "type": "function"
 },
 "sklearn.tests.test_metaestimators.test_metaestimator_delegation.SubEstimator.transform": {
  "data": {
   "lineno": 81
  },
  "type": "function"
 },
 "sklearn.tests.test_metaestimators.test_metaestimator_delegation.hides": {
  "data": {
   "lineno": 55
  },
  "type": "function"
 },
 "sklearn.tests.test_metaestimators.test_metaestimator_delegation.hides.wrapper": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "AttributeError",
    "property",
    "sklearn.tests.test_metaestimators.functools"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_min_dependencies_readme": {
  "data": {},
  "type": "module"
 },
 "sklearn.tests.test_min_dependencies_readme.Path": {
  "data": {
   "shadows": "pathlib.Path"
  },
  "type": "import"
 },
 "sklearn.tests.test_min_dependencies_readme.dependent_packages": {
  "data": {
   "shadows": "sklearn._min_dependencies.dependent_packages"
  },
  "type": "import"
 },
 "sklearn.tests.test_min_dependencies_readme.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "sklearn.tests.test_min_dependencies_readme.parse_version": {
  "data": {
   "shadows": "sklearn.utils.fixes.parse_version"
  },
  "type": "import"
 },
 "sklearn.tests.test_min_dependencies_readme.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.tests.test_min_dependencies_readme.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "sklearn.tests.test_min_dependencies_readme.sklearn": {
  "data": {
   "shadows": "sklearn"
  },
  "type": "import"
 },
 "sklearn.tests.test_min_dependencies_readme.test_min_dependencies_readme": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "pathlib.Path",
    "sklearn._min_dependencies.dependent_packages",
    "sklearn.tests.test_min_dependencies_readme.os",
    "sklearn.tests.test_min_dependencies_readme.pytest",
    "sklearn.tests.test_min_dependencies_readme.re",
    "sklearn.tests.test_min_dependencies_readme.sklearn",
    "sklearn.utils.fixes.parse_version"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_multiclass": {
  "data": {
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.datasets.load_iris",
    "sklearn.tests.test_multiclass.iris",
    "sklearn.tests.test_multiclass.perm",
    "sklearn.tests.test_multiclass.rng"
   ]
  },
  "type": "module"
 },
 "sklearn.tests.test_multiclass.CheckingClassifier": {
  "data": {
   "shadows": "sklearn.utils._mocking.CheckingClassifier"
  },
  "type": "import"
 },
 "sklearn.tests.test_multiclass.DecisionTreeClassifier": {
  "data": {
   "shadows": "sklearn.tree.DecisionTreeClassifier"
  },
  "type": "import"
 },
 "sklearn.tests.test_multiclass.DecisionTreeRegressor": {
  "data": {
   "shadows": "sklearn.tree.DecisionTreeRegressor"
  },
  "type": "import"
 },
 "sklearn.tests.test_multiclass.ElasticNet": {
  "data": {
   "shadows": "sklearn.linear_model.ElasticNet"
  },
  "type": "import"
 },
 "sklearn.tests.test_multiclass.GridSearchCV": {
  "data": {
   "shadows": "sklearn.model_selection.GridSearchCV"
  },
  "type": "import"
 },
 "sklearn.tests.test_multiclass.Lasso": {
  "data": {
   "shadows": "sklearn.linear_model.Lasso"
  },
  "type": "import"
 },
 "sklearn.tests.test_multiclass.LinearRegression": {
  "data": {
   "shadows": "sklearn.linear_model.LinearRegression"
  },
  "type": "import"
 },
 "sklearn.tests.test_multiclass.LinearSVC": {
  "data": {
   "shadows": "sklearn.svm.LinearSVC"
  },
  "type": "import"
 },
 "sklearn.tests.test_multiclass.LogisticRegression": {
  "data": {
   "shadows": "sklearn.linear_model.LogisticRegression"
  },
  "type": "import"
 },
 "sklearn.tests.test_multiclass.MultinomialNB": {
  "data": {
   "shadows": "sklearn.naive_bayes.MultinomialNB"
  },
  "type": "import"
 },
 "sklearn.tests.test_multiclass.OneVsOneClassifier": {
  "data": {
   "shadows": "sklearn.multiclass.OneVsOneClassifier"
  },
  "type": "import"
 },
 "sklearn.tests.test_multiclass.OneVsRestClassifier": {
  "data": {
   "shadows": "sklearn.multiclass.OneVsRestClassifier"
  },
  "type": "import"
 },
 "sklearn.tests.test_multiclass.OutputCodeClassifier": {
  "data": {
   "shadows": "sklearn.multiclass.OutputCodeClassifier"
  },
  "type": "import"
 },
 "sklearn.tests.test_multiclass.Perceptron": {
  "data": {
   "shadows": "sklearn.linear_model.Perceptron"
  },
  "type": "import"
 },
 "sklearn.tests.test_multiclass.Pipeline": {
  "data": {
   "shadows": "sklearn.pipeline.Pipeline"
  },
  "type": "import"
 },
 "sklearn.tests.test_multiclass.Ridge": {
  "data": {
   "shadows": "sklearn.linear_model.Ridge"
  },
  "type": "import"
 },
 "sklearn.tests.test_multiclass.SGDClassifier": {
  "data": {
   "shadows": "sklearn.linear_model.SGDClassifier"
  },
  "type": "import"
 },
 "sklearn.tests.test_multiclass.SVC": {
  "data": {
   "shadows": "sklearn.svm.SVC"
  },
  "type": "import"
 },
 "sklearn.tests.test_multiclass.SimpleImputer": {
  "data": {
   "shadows": "sklearn.impute.SimpleImputer"
  },
  "type": "import"
 },
 "sklearn.tests.test_multiclass.assert_almost_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_almost_equal"
  },
  "type": "import"
 },
 "sklearn.tests.test_multiclass.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.tests.test_multiclass.assert_raise_message": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_raise_message"
  },
  "type": "import"
 },
 "sklearn.tests.test_multiclass.assert_raises": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.tests.test_multiclass.assert_raises_regexp": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_raises_regexp"
  },
  "type": "import"
 },
 "sklearn.tests.test_multiclass.assert_warns": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_warns"
  },
  "type": "import"
 },
 "sklearn.tests.test_multiclass.check_array": {
  "data": {
   "shadows": "sklearn.utils.check_array"
  },
  "type": "import"
 },
 "sklearn.tests.test_multiclass.check_classification_targets": {
  "data": {
   "shadows": "sklearn.utils.multiclass.check_classification_targets"
  },
  "type": "import"
 },
 "sklearn.tests.test_multiclass.cross_val_score": {
  "data": {
   "shadows": "sklearn.model_selection.cross_val_score"
  },
  "type": "import"
 },
 "sklearn.tests.test_multiclass.datasets": {
  "data": {
   "shadows": "sklearn.datasets"
  },
  "type": "import"
 },
 "sklearn.tests.test_multiclass.escape": {
  "data": {
   "shadows": "re.escape"
  },
  "type": "import"
 },
 "sklearn.tests.test_multiclass.ignore_warnings": {
  "data": {
   "shadows": "sklearn.utils._testing.ignore_warnings"
  },
  "type": "import"
 },
 "sklearn.tests.test_multiclass.iris": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "sklearn.tests.test_multiclass.make_pipeline": {
  "data": {
   "shadows": "sklearn.pipeline.make_pipeline"
  },
  "type": "import"
 },
 "sklearn.tests.test_multiclass.n_classes": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "sklearn.tests.test_multiclass.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.tests.test_multiclass.perm": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "sklearn.tests.test_multiclass.precision_score": {
  "data": {
   "shadows": "sklearn.metrics.precision_score"
  },
  "type": "import"
 },
 "sklearn.tests.test_multiclass.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.tests.test_multiclass.recall_score": {
  "data": {
   "shadows": "sklearn.metrics.recall_score"
  },
  "type": "import"
 },
 "sklearn.tests.test_multiclass.rng": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "sklearn.tests.test_multiclass.shuffle": {
  "data": {
   "shadows": "sklearn.utils.shuffle"
  },
  "type": "import"
 },
 "sklearn.tests.test_multiclass.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.tests.test_multiclass.svm": {
  "data": {
   "shadows": "sklearn.svm"
  },
  "type": "import"
 },
 "sklearn.tests.test_multiclass.test_check_classification_targets": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "sklearn.utils._testing.assert_raise_message",
    "sklearn.utils.multiclass.check_classification_targets",
    "sklearn.utils.multiclass.type_of_target"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_multiclass.test_ecoc_delegate_sparse_base_estimator": {
  "data": {
   "lineno": 737,
   "symbols_in_volume": [
    "TypeError",
    "len",
    "scipy.sparse.csc_matrix",
    "sklearn.multiclass.OutputCodeClassifier",
    "sklearn.svm.LinearSVC",
    "sklearn.tests.test_multiclass.iris",
    "sklearn.tests.test_multiclass.pytest",
    "sklearn.utils._mocking.CheckingClassifier",
    "sklearn.utils.check_array"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_multiclass.test_ecoc_exceptions": {
  "data": {
   "lineno": 697,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.multiclass.OutputCodeClassifier",
    "sklearn.svm.LinearSVC",
    "sklearn.utils._testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_multiclass.test_ecoc_fit_predict": {
  "data": {
   "lineno": 702,
   "symbols_in_volume": [
    "len",
    "sklearn.multiclass.OutputCodeClassifier",
    "sklearn.naive_bayes.MultinomialNB",
    "sklearn.svm.LinearSVC",
    "sklearn.tests.test_multiclass.iris",
    "sklearn.tests.test_multiclass.n_classes"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_multiclass.test_ecoc_float_y": {
  "data": {
   "lineno": 725,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.multiclass.OutputCodeClassifier",
    "sklearn.svm.LinearSVC",
    "sklearn.tests.test_multiclass.iris",
    "sklearn.utils._testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_multiclass.test_ecoc_gridsearch": {
  "data": {
   "lineno": 715,
   "symbols_in_volume": [
    "sklearn.model_selection.GridSearchCV",
    "sklearn.multiclass.OutputCodeClassifier",
    "sklearn.svm.LinearSVC",
    "sklearn.tests.test_multiclass.iris"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_multiclass.test_ovo_decision_function": {
  "data": {
   "lineno": 574,
   "symbols_in_volume": [
    "len",
    "numpy.round",
    "numpy.unique",
    "numpy.zeros",
    "range",
    "set",
    "sklearn.multiclass.OneVsOneClassifier",
    "sklearn.svm.LinearSVC",
    "sklearn.tests.test_multiclass.iris",
    "sklearn.tests.test_multiclass.n_classes",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_multiclass.test_ovo_exceptions": {
  "data": {
   "lineno": 495,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.multiclass.OneVsOneClassifier",
    "sklearn.svm.LinearSVC",
    "sklearn.utils._testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_multiclass.test_ovo_fit_on_list": {
  "data": {
   "lineno": 500,
   "symbols_in_volume": [
    "list",
    "sklearn.multiclass.OneVsOneClassifier",
    "sklearn.svm.LinearSVC",
    "sklearn.tests.test_multiclass.iris",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_multiclass.test_ovo_fit_predict": {
  "data": {
   "lineno": 511,
   "symbols_in_volume": [
    "len",
    "sklearn.multiclass.OneVsOneClassifier",
    "sklearn.naive_bayes.MultinomialNB",
    "sklearn.svm.LinearSVC",
    "sklearn.tests.test_multiclass.iris",
    "sklearn.tests.test_multiclass.n_classes"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_multiclass.test_ovo_float_y": {
  "data": {
   "lineno": 688,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.multiclass.OneVsOneClassifier",
    "sklearn.svm.LinearSVC",
    "sklearn.tests.test_multiclass.iris",
    "sklearn.utils._testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_multiclass.test_ovo_gridsearch": {
  "data": {
   "lineno": 621,
   "symbols_in_volume": [
    "sklearn.model_selection.GridSearchCV",
    "sklearn.multiclass.OneVsOneClassifier",
    "sklearn.svm.LinearSVC",
    "sklearn.tests.test_multiclass.iris"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_multiclass.test_ovo_one_class": {
  "data": {
   "lineno": 679,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "numpy.eye",
    "sklearn.multiclass.OneVsOneClassifier",
    "sklearn.svm.LinearSVC",
    "sklearn.utils._testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_multiclass.test_ovo_partial_fit_predict": {
  "data": {
   "lineno": 523,
   "symbols_in_volume": [
    "ValueError",
    "hasattr",
    "len",
    "numpy.mean",
    "numpy.random.rand",
    "numpy.unique",
    "re.escape",
    "sklearn.datasets.load_iris",
    "sklearn.multiclass.OneVsOneClassifier",
    "sklearn.naive_bayes.MultinomialNB",
    "sklearn.svm.SVC",
    "sklearn.tests.test_multiclass.n_classes",
    "sklearn.utils._testing.assert_almost_equal",
    "sklearn.utils._testing.assert_raises_regexp"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_multiclass.test_ovo_string_y": {
  "data": {
   "lineno": 669,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.eye",
    "sklearn.multiclass.OneVsOneClassifier",
    "sklearn.svm.LinearSVC",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_multiclass.test_ovo_ties": {
  "data": {
   "lineno": 630,
   "symbols_in_volume": [
    "numpy.argmax",
    "numpy.array",
    "numpy.round",
    "sklearn.linear_model.Perceptron",
    "sklearn.multiclass.OneVsOneClassifier",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_multiclass.test_ovo_ties2": {
  "data": {
   "lineno": 655,
   "symbols_in_volume": [
    "numpy.array",
    "range",
    "sklearn.linear_model.Perceptron",
    "sklearn.multiclass.OneVsOneClassifier"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_multiclass.test_ovr_always_present": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "UserWarning",
    "numpy.array",
    "numpy.ones",
    "numpy.unique",
    "numpy.zeros",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.multiclass.OneVsRestClassifier",
    "sklearn.utils._testing.assert_array_equal",
    "sklearn.utils._testing.assert_warns"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_multiclass.test_ovr_binary": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "conduct_test",
    "numpy.array",
    "set",
    "sklearn.linear_model.ElasticNet",
    "sklearn.linear_model.LinearRegression",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.linear_model.Ridge",
    "sklearn.naive_bayes.MultinomialNB",
    "sklearn.svm.LinearSVC",
    "sklearn.svm.SVC"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_multiclass.test_ovr_binary.conduct_test": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "hasattr",
    "len",
    "numpy.argmax",
    "numpy.array",
    "set",
    "sklearn.multiclass.OneVsRestClassifier",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_multiclass.test_ovr_coef_": {
  "data": {
   "lineno": 446,
   "symbols_in_volume": [
    "FutureWarning",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.issparse",
    "sklearn.multiclass.OneVsRestClassifier",
    "sklearn.svm.LinearSVC",
    "sklearn.svm.SVC",
    "sklearn.tests.test_multiclass.iris",
    "sklearn.tests.test_multiclass.n_classes",
    "sklearn.utils._testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_multiclass.test_ovr_coef_exceptions": {
  "data": {
   "lineno": 466,
   "symbols_in_volume": [
    "AttributeError",
    "FutureWarning",
    "ValueError",
    "sklearn.multiclass.OneVsRestClassifier",
    "sklearn.svm.LinearSVC",
    "sklearn.tests.test_multiclass.iris",
    "sklearn.tree.DecisionTreeClassifier",
    "sklearn.utils._testing.assert_raises",
    "sklearn.utils._testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_multiclass.test_ovr_deprecated_coef_intercept": {
  "data": {
   "lineno": 481,
   "symbols_in_volume": [
    "FutureWarning",
    "getattr",
    "sklearn.multiclass.OneVsRestClassifier",
    "sklearn.svm.SVC",
    "sklearn.tests.test_multiclass.iris",
    "sklearn.tests.test_multiclass.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_multiclass.test_ovr_exceptions": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "sklearn.multiclass.OneVsRestClassifier",
    "sklearn.naive_bayes.MultinomialNB",
    "sklearn.svm.LinearSVC",
    "sklearn.utils._testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_multiclass.test_ovr_fit_predict": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "len",
    "numpy.mean",
    "sklearn.multiclass.OneVsRestClassifier",
    "sklearn.naive_bayes.MultinomialNB",
    "sklearn.svm.LinearSVC",
    "sklearn.tests.test_multiclass.iris",
    "sklearn.tests.test_multiclass.n_classes"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_multiclass.test_ovr_fit_predict_sparse": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "int",
    "scipy.sparse.coo_matrix",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.dok_matrix",
    "scipy.sparse.issparse",
    "scipy.sparse.lil_matrix",
    "sklearn.datasets.make_multilabel_classification",
    "sklearn.multiclass.OneVsRestClassifier",
    "sklearn.naive_bayes.MultinomialNB",
    "sklearn.svm.SVC",
    "sklearn.utils._testing.assert_array_equal",
    "sparse"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_multiclass.test_ovr_fit_predict_svc": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "len",
    "sklearn.multiclass.OneVsRestClassifier",
    "sklearn.svm.SVC",
    "sklearn.tests.test_multiclass.iris"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_multiclass.test_ovr_gridsearch": {
  "data": {
   "lineno": 423,
   "symbols_in_volume": [
    "sklearn.model_selection.GridSearchCV",
    "sklearn.multiclass.OneVsRestClassifier",
    "sklearn.svm.LinearSVC",
    "sklearn.tests.test_multiclass.iris"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_multiclass.test_ovr_multiclass": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "numpy.array",
    "set",
    "sklearn.linear_model.ElasticNet",
    "sklearn.linear_model.LinearRegression",
    "sklearn.linear_model.Ridge",
    "sklearn.multiclass.OneVsRestClassifier",
    "sklearn.naive_bayes.MultinomialNB",
    "sklearn.svm.LinearSVC",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_multiclass.test_ovr_multilabel": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.linear_model.ElasticNet",
    "sklearn.linear_model.Lasso",
    "sklearn.linear_model.LinearRegression",
    "sklearn.linear_model.Ridge",
    "sklearn.multiclass.OneVsRestClassifier",
    "sklearn.naive_bayes.MultinomialNB",
    "sklearn.svm.LinearSVC",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_multiclass.test_ovr_multilabel_dataset": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": [
    "sklearn.datasets.make_multilabel_classification",
    "sklearn.metrics.precision_score",
    "sklearn.metrics.recall_score",
    "sklearn.multiclass.OneVsRestClassifier",
    "sklearn.naive_bayes.MultinomialNB",
    "sklearn.utils._testing.assert_almost_equal",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_multiclass.test_ovr_multilabel_decision_function": {
  "data": {
   "lineno": 397,
   "symbols_in_volume": [
    "int",
    "sklearn.datasets.make_multilabel_classification",
    "sklearn.multiclass.OneVsRestClassifier",
    "sklearn.svm.SVC",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_multiclass.test_ovr_multilabel_predict_proba": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": [
    "hasattr",
    "sklearn.datasets.make_multilabel_classification",
    "sklearn.model_selection.GridSearchCV",
    "sklearn.multiclass.OneVsRestClassifier",
    "sklearn.naive_bayes.MultinomialNB",
    "sklearn.svm.SVC",
    "sklearn.svm.SVR",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_multiclass.test_ovr_ovo_regressor": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "len",
    "numpy.mean",
    "numpy.unique",
    "sklearn.multiclass.OneVsOneClassifier",
    "sklearn.multiclass.OneVsRestClassifier",
    "sklearn.tests.test_multiclass.iris",
    "sklearn.tests.test_multiclass.n_classes",
    "sklearn.tree.DecisionTreeRegressor",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_multiclass.test_ovr_partial_fit": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "hasattr",
    "len",
    "numpy.abs",
    "numpy.mean",
    "numpy.random.randn",
    "numpy.unique",
    "sklearn.linear_model.SGDClassifier",
    "sklearn.multiclass.OneVsRestClassifier",
    "sklearn.naive_bayes.MultinomialNB",
    "sklearn.svm.SVC",
    "sklearn.tests.test_multiclass.iris",
    "sklearn.utils._testing.assert_almost_equal",
    "sklearn.utils.shuffle"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_multiclass.test_ovr_partial_fit_exceptions": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "ValueError",
    "numpy.abs",
    "numpy.random.randn",
    "numpy.unique",
    "sklearn.multiclass.OneVsRestClassifier",
    "sklearn.naive_bayes.MultinomialNB",
    "sklearn.utils._testing.assert_raises_regexp"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_multiclass.test_ovr_pipeline": {
  "data": {
   "lineno": 432,
   "symbols_in_volume": [
    "sklearn.multiclass.OneVsRestClassifier",
    "sklearn.pipeline.Pipeline",
    "sklearn.tests.test_multiclass.iris",
    "sklearn.tree.DecisionTreeClassifier",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_multiclass.test_ovr_single_label_decision_function": {
  "data": {
   "lineno": 412,
   "symbols_in_volume": [
    "sklearn.datasets.make_classification",
    "sklearn.multiclass.OneVsRestClassifier",
    "sklearn.svm.SVC",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_multiclass.test_ovr_single_label_predict_proba": {
  "data": {
   "lineno": 376,
   "symbols_in_volume": [
    "hasattr",
    "numpy.array",
    "sklearn.multiclass.OneVsRestClassifier",
    "sklearn.naive_bayes.MultinomialNB",
    "sklearn.svm.SVR",
    "sklearn.tests.test_multiclass.iris",
    "sklearn.utils._testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_multiclass.test_pairwise_attribute": {
  "data": {
   "lineno": 779,
   "symbols_in_volume": [
    "FutureWarning",
    "MultiClassClassifier",
    "sklearn.multiclass.OneVsOneClassifier",
    "sklearn.multiclass.OneVsRestClassifier",
    "sklearn.svm.SVC",
    "sklearn.utils._testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_multiclass.test_pairwise_cross_val_score": {
  "data": {
   "lineno": 816,
   "symbols_in_volume": [
    "MultiClassClassifier",
    "numpy.dot",
    "sklearn.model_selection.cross_val_score",
    "sklearn.multiclass.OneVsOneClassifier",
    "sklearn.multiclass.OneVsRestClassifier",
    "sklearn.svm.SVC",
    "sklearn.tests.test_multiclass.iris",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_multiclass.test_pairwise_deprecated": {
  "data": {
   "lineno": 806,
   "symbols_in_volume": [
    "FutureWarning",
    "MultiClassClassifier",
    "sklearn.multiclass.OneVsOneClassifier",
    "sklearn.multiclass.OneVsRestClassifier",
    "sklearn.svm.SVC",
    "sklearn.tests.test_multiclass.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_multiclass.test_pairwise_indices": {
  "data": {
   "lineno": 763,
   "symbols_in_volume": [
    "len",
    "numpy.dot",
    "sklearn.multiclass.OneVsOneClassifier",
    "sklearn.svm.SVC",
    "sklearn.tests.test_multiclass.iris"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_multiclass.test_pairwise_tag": {
  "data": {
   "lineno": 792,
   "symbols_in_volume": [
    "MultiClassClassifier",
    "sklearn.multiclass.OneVsOneClassifier",
    "sklearn.multiclass.OneVsRestClassifier",
    "sklearn.svm.SVC",
    "sklearn.tests.test_multiclass.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_multiclass.test_support_missing_values": {
  "data": {
   "lineno": 832,
   "symbols_in_volume": [
    "MultiClassClassifier",
    "bool",
    "numpy.copy",
    "numpy.nan",
    "numpy.random.RandomState",
    "sklearn.impute.SimpleImputer",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.multiclass.OneVsOneClassifier",
    "sklearn.multiclass.OneVsRestClassifier",
    "sklearn.pipeline.make_pipeline",
    "sklearn.tests.test_multiclass.iris",
    "sklearn.tests.test_multiclass.pytest",
    "sklearn.tests.test_multiclass.rng"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_multiclass.type_of_target": {
  "data": {
   "shadows": "sklearn.utils.multiclass.type_of_target"
  },
  "type": "import"
 },
 "sklearn.tests.test_multioutput": {
  "data": {
   "symbols_in_volume": [
    "len",
    "list",
    "map",
    "numpy.column_stack",
    "numpy.unique",
    "sklearn.datasets.load_iris",
    "sklearn.tests.test_multioutput.X",
    "sklearn.tests.test_multioutput.iris",
    "sklearn.tests.test_multioutput.y",
    "sklearn.tests.test_multioutput.y1",
    "sklearn.tests.test_multioutput.y2",
    "sklearn.tests.test_multioutput.y3",
    "sklearn.utils.shuffle"
   ]
  },
  "type": "module"
 },
 "sklearn.tests.test_multioutput.ClassifierChain": {
  "data": {
   "shadows": "sklearn.multioutput.ClassifierChain"
  },
  "type": "import"
 },
 "sklearn.tests.test_multioutput.ClassifierMixin": {
  "data": {
   "shadows": "sklearn.base.ClassifierMixin"
  },
  "type": "import"
 },
 "sklearn.tests.test_multioutput.DummyClassifier": {
  "data": {
   "shadows": "sklearn.dummy.DummyClassifier"
  },
  "type": "import"
 },
 "sklearn.tests.test_multioutput.DummyClassifierWithFitParams": {
  "data": {
   "lineno": 566,
   "symbols_in_volume": [
    "sklearn.dummy.DummyClassifier"
   ]
  },
  "type": "class"
 },
 "sklearn.tests.test_multioutput.DummyClassifierWithFitParams.fit": {
  "data": {
   "lineno": 567,
   "symbols_in_volume": [
    "sklearn.tests.test_multioutput.X",
    "sklearn.tests.test_multioutput.y",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_multioutput.DummyRegressor": {
  "data": {
   "shadows": "sklearn.dummy.DummyRegressor"
  },
  "type": "import"
 },
 "sklearn.tests.test_multioutput.DummyRegressorWithFitParams": {
  "data": {
   "lineno": 560,
   "symbols_in_volume": [
    "sklearn.dummy.DummyRegressor"
   ]
  },
  "type": "class"
 },
 "sklearn.tests.test_multioutput.DummyRegressorWithFitParams.fit": {
  "data": {
   "lineno": 561,
   "symbols_in_volume": [
    "sklearn.tests.test_multioutput.X",
    "sklearn.tests.test_multioutput.y",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_multioutput.GradientBoostingRegressor": {
  "data": {
   "shadows": "sklearn.ensemble.GradientBoostingRegressor"
  },
  "type": "import"
 },
 "sklearn.tests.test_multioutput.GridSearchCV": {
  "data": {
   "shadows": "sklearn.model_selection.GridSearchCV"
  },
  "type": "import"
 },
 "sklearn.tests.test_multioutput.Lasso": {
  "data": {
   "shadows": "sklearn.linear_model.Lasso"
  },
  "type": "import"
 },
 "sklearn.tests.test_multioutput.LinearSVC": {
  "data": {
   "shadows": "sklearn.svm.LinearSVC"
  },
  "type": "import"
 },
 "sklearn.tests.test_multioutput.LogisticRegression": {
  "data": {
   "shadows": "sklearn.linear_model.LogisticRegression"
  },
  "type": "import"
 },
 "sklearn.tests.test_multioutput.MultiOutputClassifier": {
  "data": {
   "shadows": "sklearn.multioutput.MultiOutputClassifier"
  },
  "type": "import"
 },
 "sklearn.tests.test_multioutput.MultiOutputRegressor": {
  "data": {
   "shadows": "sklearn.multioutput.MultiOutputRegressor"
  },
  "type": "import"
 },
 "sklearn.tests.test_multioutput.NotFittedError": {
  "data": {
   "shadows": "sklearn.exceptions.NotFittedError"
  },
  "type": "import"
 },
 "sklearn.tests.test_multioutput.OneVsRestClassifier": {
  "data": {
   "shadows": "sklearn.multiclass.OneVsRestClassifier"
  },
  "type": "import"
 },
 "sklearn.tests.test_multioutput.OrthogonalMatchingPursuit": {
  "data": {
   "shadows": "sklearn.linear_model.OrthogonalMatchingPursuit"
  },
  "type": "import"
 },
 "sklearn.tests.test_multioutput.RandomForestClassifier": {
  "data": {
   "shadows": "sklearn.ensemble.RandomForestClassifier"
  },
  "type": "import"
 },
 "sklearn.tests.test_multioutput.RegressorChain": {
  "data": {
   "shadows": "sklearn.multioutput.RegressorChain"
  },
  "type": "import"
 },
 "sklearn.tests.test_multioutput.Ridge": {
  "data": {
   "shadows": "sklearn.linear_model.Ridge"
  },
  "type": "import"
 },
 "sklearn.tests.test_multioutput.SGDClassifier": {
  "data": {
   "shadows": "sklearn.linear_model.SGDClassifier"
  },
  "type": "import"
 },
 "sklearn.tests.test_multioutput.SGDRegressor": {
  "data": {
   "shadows": "sklearn.linear_model.SGDRegressor"
  },
  "type": "import"
 },
 "sklearn.tests.test_multioutput.SimpleImputer": {
  "data": {
   "shadows": "sklearn.impute.SimpleImputer"
  },
  "type": "import"
 },
 "sklearn.tests.test_multioutput.X": {
  "data": {
   "lineno": 154
  },
  "type": "constant"
 },
 "sklearn.tests.test_multioutput.assert_almost_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_almost_equal"
  },
  "type": "import"
 },
 "sklearn.tests.test_multioutput.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.tests.test_multioutput.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.tests.test_multioutput.assert_raise_message": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_raise_message"
  },
  "type": "import"
 },
 "sklearn.tests.test_multioutput.assert_raises": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.tests.test_multioutput.assert_raises_regex": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_raises_regex"
  },
  "type": "import"
 },
 "sklearn.tests.test_multioutput.classes": {
  "data": {
   "lineno": 162
  },
  "type": "constant"
 },
 "sklearn.tests.test_multioutput.clone": {
  "data": {
   "shadows": "sklearn.base.clone"
  },
  "type": "import"
 },
 "sklearn.tests.test_multioutput.cpu_count": {
  "data": {
   "shadows": "joblib.cpu_count"
  },
  "type": "import"
 },
 "sklearn.tests.test_multioutput.datasets": {
  "data": {
   "shadows": "sklearn.datasets"
  },
  "type": "import"
 },
 "sklearn.tests.test_multioutput.generate_multilabel_dataset_with_correlations": {
  "data": {
   "lineno": 402,
   "symbols_in_volume": [
    "format",
    "int",
    "numpy.array",
    "sklearn.datasets.make_classification",
    "sklearn.tests.test_multioutput.X",
    "sklearn.tests.test_multioutput.y"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_multioutput.iris": {
  "data": {
   "lineno": 152
  },
  "type": "constant"
 },
 "sklearn.tests.test_multioutput.jaccard_score": {
  "data": {
   "shadows": "sklearn.metrics.jaccard_score"
  },
  "type": "import"
 },
 "sklearn.tests.test_multioutput.make_classification": {
  "data": {
   "shadows": "sklearn.datasets.make_classification"
  },
  "type": "import"
 },
 "sklearn.tests.test_multioutput.make_pipeline": {
  "data": {
   "shadows": "sklearn.pipeline.make_pipeline"
  },
  "type": "import"
 },
 "sklearn.tests.test_multioutput.mean_squared_error": {
  "data": {
   "shadows": "sklearn.metrics.mean_squared_error"
  },
  "type": "import"
 },
 "sklearn.tests.test_multioutput.n_classes": {
  "data": {
   "lineno": 161
  },
  "type": "constant"
 },
 "sklearn.tests.test_multioutput.n_outputs": {
  "data": {
   "lineno": 160
  },
  "type": "constant"
 },
 "sklearn.tests.test_multioutput.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.tests.test_multioutput.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.tests.test_multioutput.shuffle": {
  "data": {
   "shadows": "sklearn.utils.shuffle"
  },
  "type": "import"
 },
 "sklearn.tests.test_multioutput.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.tests.test_multioutput.test_base_chain_crossval_fit_and_predict": {
  "data": {
   "lineno": 522,
   "symbols_in_volume": [
    "isinstance",
    "numpy.all",
    "sklearn.base.clone",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.linear_model.Ridge",
    "sklearn.metrics.jaccard_score",
    "sklearn.metrics.mean_squared_error",
    "sklearn.multioutput.ClassifierChain",
    "sklearn.multioutput.RegressorChain",
    "sklearn.tests.test_multioutput.X",
    "sklearn.tests.test_multioutput.generate_multilabel_dataset_with_correlations"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_multioutput.test_base_chain_fit_and_predict": {
  "data": {
   "lineno": 471,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "range",
    "sklearn.base.ClassifierMixin",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.linear_model.Ridge",
    "sklearn.multioutput.ClassifierChain",
    "sklearn.multioutput.RegressorChain",
    "sklearn.tests.test_multioutput.X",
    "sklearn.tests.test_multioutput.generate_multilabel_dataset_with_correlations",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_multioutput.test_base_chain_fit_and_predict_with_sparse_data_and_cv": {
  "data": {
   "lineno": 490,
   "symbols_in_volume": [
    "scipy.sparse.csr_matrix",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.linear_model.Ridge",
    "sklearn.multioutput.ClassifierChain",
    "sklearn.multioutput.RegressorChain",
    "sklearn.tests.test_multioutput.X",
    "sklearn.tests.test_multioutput.generate_multilabel_dataset_with_correlations"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_multioutput.test_base_chain_random_order": {
  "data": {
   "lineno": 502,
   "symbols_in_volume": [
    "len",
    "list",
    "range",
    "set",
    "sklearn.base.clone",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.linear_model.Ridge",
    "sklearn.multioutput.ClassifierChain",
    "sklearn.multioutput.RegressorChain",
    "sklearn.tests.test_multioutput.X",
    "sklearn.tests.test_multioutput.generate_multilabel_dataset_with_correlations",
    "sklearn.utils._testing.assert_array_almost_equal",
    "sklearn.utils._testing.assert_array_equal",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_multioutput.test_classifier_chain_fit_and_predict_with_linear_svc": {
  "data": {
   "lineno": 417,
   "symbols_in_volume": [
    "hasattr",
    "sklearn.multioutput.ClassifierChain",
    "sklearn.svm.LinearSVC",
    "sklearn.tests.test_multioutput.X",
    "sklearn.tests.test_multioutput.generate_multilabel_dataset_with_correlations",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_multioutput.test_classifier_chain_fit_and_predict_with_sparse_data": {
  "data": {
   "lineno": 433,
   "symbols_in_volume": [
    "scipy.sparse.csr_matrix",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.multioutput.ClassifierChain",
    "sklearn.tests.test_multioutput.X",
    "sklearn.tests.test_multioutput.generate_multilabel_dataset_with_correlations",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_multioutput.test_classifier_chain_tuple_invalid_order": {
  "data": {
   "lineno": 642,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.ensemble.RandomForestClassifier",
    "sklearn.multioutput.ClassifierChain",
    "sklearn.tests.test_multioutput.X",
    "sklearn.tests.test_multioutput.pytest",
    "sklearn.tests.test_multioutput.y",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_multioutput.test_classifier_chain_tuple_order": {
  "data": {
   "lineno": 628,
   "symbols_in_volume": [
    "list",
    "numpy.array",
    "order_type",
    "sklearn.ensemble.RandomForestClassifier",
    "sklearn.multioutput.ClassifierChain",
    "sklearn.tests.test_multioutput.X",
    "sklearn.tests.test_multioutput.pytest",
    "sklearn.tests.test_multioutput.y",
    "sklearn.utils._testing.assert_array_almost_equal",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_multioutput.test_classifier_chain_vs_independent_models": {
  "data": {
   "lineno": 449,
   "symbols_in_volume": [
    "sklearn.linear_model.LogisticRegression",
    "sklearn.metrics.jaccard_score",
    "sklearn.multiclass.OneVsRestClassifier",
    "sklearn.multioutput.ClassifierChain",
    "sklearn.tests.test_multioutput.X",
    "sklearn.tests.test_multioutput.generate_multilabel_dataset_with_correlations"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_multioutput.test_hasattr_multi_output_predict_proba": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "hasattr",
    "sklearn.linear_model.SGDClassifier",
    "sklearn.multioutput.MultiOutputClassifier",
    "sklearn.tests.test_multioutput.X",
    "sklearn.tests.test_multioutput.y"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_multioutput.test_multi_output_classes_": {
  "data": {
   "lineno": 543,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "list",
    "sklearn.ensemble.RandomForestClassifier",
    "sklearn.multioutput.ClassifierChain",
    "sklearn.multioutput.MultiOutputClassifier",
    "sklearn.tests.test_multioutput.X",
    "sklearn.tests.test_multioutput.classes",
    "sklearn.tests.test_multioutput.n_outputs",
    "sklearn.tests.test_multioutput.pytest",
    "sklearn.tests.test_multioutput.y",
    "sklearn.utils._testing.assert_array_equal",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_multioutput.test_multi_output_classification": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "len",
    "list",
    "numpy.argmax",
    "numpy.dstack",
    "range",
    "sklearn.base.clone",
    "sklearn.ensemble.RandomForestClassifier",
    "sklearn.multioutput.MultiOutputClassifier",
    "sklearn.tests.test_multioutput.X",
    "sklearn.tests.test_multioutput.n_classes",
    "sklearn.tests.test_multioutput.n_outputs",
    "sklearn.tests.test_multioutput.y",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_multioutput.test_multi_output_classification_partial_fit": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "range",
    "sklearn.base.clone",
    "sklearn.linear_model.SGDClassifier",
    "sklearn.multioutput.MultiOutputClassifier",
    "sklearn.tests.test_multioutput.X",
    "sklearn.tests.test_multioutput.classes",
    "sklearn.tests.test_multioutput.n_outputs",
    "sklearn.tests.test_multioutput.y",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_multioutput.test_multi_output_classification_partial_fit_no_first_classes_exception": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.linear_model.SGDClassifier",
    "sklearn.multioutput.MultiOutputClassifier",
    "sklearn.tests.test_multioutput.X",
    "sklearn.tests.test_multioutput.y",
    "sklearn.utils._testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_multioutput.test_multi_output_classification_partial_fit_parallelism": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "joblib.cpu_count",
    "sklearn.linear_model.SGDClassifier",
    "sklearn.multioutput.MultiOutputClassifier",
    "sklearn.tests.test_multioutput.X",
    "sklearn.tests.test_multioutput.classes",
    "sklearn.tests.test_multioutput.y"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_multioutput.test_multi_output_classification_partial_fit_sample_weights": {
  "data": {
   "lineno": 366,
   "symbols_in_volume": [
    "numpy.asarray",
    "sklearn.linear_model.SGDClassifier",
    "sklearn.multioutput.MultiOutputClassifier",
    "sklearn.tests.test_multioutput.X",
    "sklearn.tests.test_multioutput.y",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_multioutput.test_multi_output_classification_sample_weights": {
  "data": {
   "lineno": 346,
   "symbols_in_volume": [
    "numpy.asarray",
    "sklearn.ensemble.RandomForestClassifier",
    "sklearn.multioutput.MultiOutputClassifier",
    "sklearn.tests.test_multioutput.X",
    "sklearn.tests.test_multioutput.y",
    "sklearn.utils._testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_multioutput.test_multi_output_exceptions": {
  "data": {
   "lineno": 385,
   "symbols_in_volume": [
    "ValueError",
    "numpy.column_stack",
    "sklearn.exceptions.NotFittedError",
    "sklearn.multioutput.MultiOutputClassifier",
    "sklearn.svm.LinearSVC",
    "sklearn.tests.test_multioutput.X",
    "sklearn.tests.test_multioutput.pytest",
    "sklearn.tests.test_multioutput.y",
    "sklearn.tests.test_multioutput.y1",
    "sklearn.tests.test_multioutput.y2",
    "sklearn.utils._testing.assert_raise_message",
    "sklearn.utils._testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_multioutput.test_multi_output_predict_proba": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "AttributeError",
    "sklearn.linear_model.SGDClassifier",
    "sklearn.model_selection.GridSearchCV",
    "sklearn.multioutput.MultiOutputClassifier",
    "sklearn.tests.test_multioutput.X",
    "sklearn.tests.test_multioutput.pytest",
    "sklearn.tests.test_multioutput.y"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_multioutput.test_multi_output_predict_proba.custom_scorer": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_multioutput.test_multi_target_regression": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "numpy.zeros_like",
    "range",
    "sklearn.datasets.make_regression",
    "sklearn.ensemble.GradientBoostingRegressor",
    "sklearn.multioutput.MultiOutputRegressor",
    "sklearn.utils._testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_multioutput.test_multi_target_regression_one_target": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.datasets.make_regression",
    "sklearn.ensemble.GradientBoostingRegressor",
    "sklearn.multioutput.MultiOutputRegressor",
    "sklearn.utils._testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_multioutput.test_multi_target_regression_partial_fit": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "hasattr",
    "numpy.zeros_like",
    "range",
    "sklearn.datasets.make_regression",
    "sklearn.linear_model.Lasso",
    "sklearn.linear_model.SGDRegressor",
    "sklearn.multioutput.MultiOutputRegressor",
    "sklearn.utils._testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_multioutput.test_multi_target_sample_weight_partial_fit": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "sklearn.linear_model.SGDRegressor",
    "sklearn.multioutput.MultiOutputRegressor"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_multioutput.test_multi_target_sample_weights": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "sklearn.ensemble.GradientBoostingRegressor",
    "sklearn.multioutput.MultiOutputRegressor",
    "sklearn.utils._testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_multioutput.test_multi_target_sample_weights_api": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.ensemble.GradientBoostingRegressor",
    "sklearn.linear_model.OrthogonalMatchingPursuit",
    "sklearn.multioutput.MultiOutputRegressor",
    "sklearn.utils._testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_multioutput.test_multi_target_sparse_regression": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "scipy.sparse.coo_matrix",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.dok_matrix",
    "scipy.sparse.lil_matrix",
    "sklearn.datasets.make_regression",
    "sklearn.linear_model.Lasso",
    "sklearn.multioutput.MultiOutputRegressor",
    "sklearn.utils._testing.assert_almost_equal",
    "sparse"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_multioutput.test_multiclass_multioutput_estimator": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "list",
    "range",
    "sklearn.base.clone",
    "sklearn.multiclass.OneVsRestClassifier",
    "sklearn.multioutput.MultiOutputClassifier",
    "sklearn.svm.LinearSVC",
    "sklearn.tests.test_multioutput.X",
    "sklearn.tests.test_multioutput.n_outputs",
    "sklearn.tests.test_multioutput.y"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_multioutput.test_multiclass_multioutput_estimator_predict_proba": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "numpy.concatenate",
    "numpy.random.RandomState",
    "range",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.multioutput.MultiOutputClassifier",
    "sklearn.tests.test_multioutput.X",
    "sklearn.tests.test_multioutput.y1",
    "sklearn.tests.test_multioutput.y2",
    "sklearn.utils._testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_multioutput.test_multioutput_estimator_with_fit_params": {
  "data": {
   "lineno": 572,
   "symbols_in_volume": [
    "numpy.zeros_like",
    "sklearn.datasets.make_multilabel_classification",
    "sklearn.datasets.make_regression",
    "sklearn.multioutput.MultiOutputClassifier",
    "sklearn.multioutput.MultiOutputRegressor",
    "sklearn.tests.test_multioutput.DummyClassifierWithFitParams",
    "sklearn.tests.test_multioutput.DummyRegressorWithFitParams",
    "sklearn.tests.test_multioutput.X",
    "sklearn.tests.test_multioutput.pytest",
    "sklearn.tests.test_multioutput.y"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_multioutput.test_regressor_chain_w_fit_params": {
  "data": {
   "lineno": 586,
   "symbols_in_volume": [
    "MySGD",
    "numpy.random.RandomState",
    "sklearn.datasets.make_regression",
    "sklearn.multioutput.RegressorChain",
    "sklearn.tests.test_multioutput.X",
    "sklearn.tests.test_multioutput.y"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_multioutput.test_regressor_chain_w_fit_params.MySGD": {
  "data": {
   "lineno": 592,
   "symbols_in_volume": [
    "sklearn.linear_model.SGDRegressor"
   ]
  },
  "type": "class"
 },
 "sklearn.tests.test_multioutput.test_regressor_chain_w_fit_params.MySGD.fit": {
  "data": {
   "lineno": 594,
   "symbols_in_volume": [
    "sklearn.tests.test_multioutput.X",
    "sklearn.tests.test_multioutput.y",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_multioutput.test_support_missing_values": {
  "data": {
   "lineno": 608,
   "symbols_in_volume": [
    "Estimator",
    "MultiOutputEstimator",
    "bool",
    "numpy.nan",
    "numpy.random.RandomState",
    "sklearn.impute.SimpleImputer",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.linear_model.Ridge",
    "sklearn.multioutput.MultiOutputClassifier",
    "sklearn.multioutput.MultiOutputRegressor",
    "sklearn.pipeline.make_pipeline",
    "sklearn.tests.test_multioutput.X",
    "sklearn.tests.test_multioutput.pytest",
    "sklearn.tests.test_multioutput.y"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_multioutput.y": {
  "data": {
   "lineno": 158
  },
  "type": "constant"
 },
 "sklearn.tests.test_multioutput.y1": {
  "data": {
   "lineno": 155
  },
  "type": "constant"
 },
 "sklearn.tests.test_multioutput.y2": {
  "data": {
   "lineno": 156
  },
  "type": "constant"
 },
 "sklearn.tests.test_multioutput.y3": {
  "data": {
   "lineno": 157
  },
  "type": "constant"
 },
 "sklearn.tests.test_naive_bayes": {
  "data": {
   "symbols_in_volume": [
    "int",
    "numpy.array",
    "numpy.random.RandomState",
    "sklearn.tests.test_naive_bayes.rng"
   ]
  },
  "type": "module"
 },
 "sklearn.tests.test_naive_bayes.BernoulliNB": {
  "data": {
   "shadows": "sklearn.naive_bayes.BernoulliNB"
  },
  "type": "import"
 },
 "sklearn.tests.test_naive_bayes.BytesIO": {
  "data": {
   "shadows": "io.BytesIO"
  },
  "type": "import"
 },
 "sklearn.tests.test_naive_bayes.CategoricalNB": {
  "data": {
   "shadows": "sklearn.naive_bayes.CategoricalNB"
  },
  "type": "import"
 },
 "sklearn.tests.test_naive_bayes.ComplementNB": {
  "data": {
   "shadows": "sklearn.naive_bayes.ComplementNB"
  },
  "type": "import"
 },
 "sklearn.tests.test_naive_bayes.GaussianNB": {
  "data": {
   "shadows": "sklearn.naive_bayes.GaussianNB"
  },
  "type": "import"
 },
 "sklearn.tests.test_naive_bayes.MultinomialNB": {
  "data": {
   "shadows": "sklearn.naive_bayes.MultinomialNB"
  },
  "type": "import"
 },
 "sklearn.tests.test_naive_bayes.X": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "sklearn.tests.test_naive_bayes.X1": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "sklearn.tests.test_naive_bayes.X2": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "sklearn.tests.test_naive_bayes.assert_almost_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_almost_equal"
  },
  "type": "import"
 },
 "sklearn.tests.test_naive_bayes.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.tests.test_naive_bayes.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.tests.test_naive_bayes.assert_no_warnings": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_no_warnings"
  },
  "type": "import"
 },
 "sklearn.tests.test_naive_bayes.assert_raise_message": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_raise_message"
  },
  "type": "import"
 },
 "sklearn.tests.test_naive_bayes.assert_raises": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.tests.test_naive_bayes.assert_warns": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_warns"
  },
  "type": "import"
 },
 "sklearn.tests.test_naive_bayes.cross_val_score": {
  "data": {
   "shadows": "sklearn.model_selection.cross_val_score"
  },
  "type": "import"
 },
 "sklearn.tests.test_naive_bayes.ignore_warnings": {
  "data": {
   "shadows": "sklearn.utils._testing.ignore_warnings"
  },
  "type": "import"
 },
 "sklearn.tests.test_naive_bayes.load_digits": {
  "data": {
   "shadows": "sklearn.datasets.load_digits"
  },
  "type": "import"
 },
 "sklearn.tests.test_naive_bayes.load_iris": {
  "data": {
   "shadows": "sklearn.datasets.load_iris"
  },
  "type": "import"
 },
 "sklearn.tests.test_naive_bayes.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.tests.test_naive_bayes.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "sklearn.tests.test_naive_bayes.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.tests.test_naive_bayes.rng": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "sklearn.tests.test_naive_bayes.scipy.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.tests.test_naive_bayes.test_alpha": {
  "data": {
   "lineno": 778,
   "symbols_in_volume": [
    "UserWarning",
    "ValueError",
    "numpy.array",
    "sklearn.naive_bayes.BernoulliNB",
    "sklearn.naive_bayes.CategoricalNB",
    "sklearn.naive_bayes.MultinomialNB",
    "sklearn.tests.test_naive_bayes.X",
    "sklearn.tests.test_naive_bayes.y",
    "sklearn.utils._testing.assert_array_almost_equal",
    "sklearn.utils._testing.assert_raise_message",
    "sklearn.utils._testing.assert_warns"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_naive_bayes.test_alpha_vector": {
  "data": {
   "lineno": 831,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "numpy.log",
    "sklearn.naive_bayes.MultinomialNB",
    "sklearn.tests.test_naive_bayes.X",
    "sklearn.tests.test_naive_bayes.y",
    "sklearn.utils._testing.assert_array_almost_equal",
    "sklearn.utils._testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_naive_bayes.test_bnb": {
  "data": {
   "lineno": 533,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.exp",
    "numpy.sum",
    "sklearn.naive_bayes.BernoulliNB",
    "sklearn.tests.test_naive_bayes.X",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_naive_bayes.test_bnb_feature_log_prob": {
  "data": {
   "lineno": 579,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.log",
    "numpy.tile",
    "sklearn.naive_bayes.BernoulliNB",
    "sklearn.tests.test_naive_bayes.X",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_naive_bayes.test_categoricalnb": {
  "data": {
   "lineno": 668,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.array",
    "sklearn.naive_bayes.CategoricalNB",
    "sklearn.tests.test_naive_bayes.X",
    "sklearn.tests.test_naive_bayes.X2",
    "sklearn.tests.test_naive_bayes.y",
    "sklearn.tests.test_naive_bayes.y2",
    "sklearn.utils._testing.assert_array_almost_equal",
    "sklearn.utils._testing.assert_array_equal",
    "sklearn.utils._testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_naive_bayes.test_categoricalnb_min_categories_errors": {
  "data": {
   "lineno": 759,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "sklearn.naive_bayes.CategoricalNB",
    "sklearn.tests.test_naive_bayes.X",
    "sklearn.tests.test_naive_bayes.pytest",
    "sklearn.tests.test_naive_bayes.y"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_naive_bayes.test_categoricalnb_with_min_categories": {
  "data": {
   "lineno": 723,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.naive_bayes.CategoricalNB",
    "sklearn.tests.test_naive_bayes.pytest",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_naive_bayes.test_check_accuracy_on_digits": {
  "data": {
   "lineno": 873,
   "symbols_in_volume": [
    "numpy.logical_or",
    "sklearn.datasets.load_digits",
    "sklearn.model_selection.cross_val_score",
    "sklearn.naive_bayes.BernoulliNB",
    "sklearn.naive_bayes.GaussianNB",
    "sklearn.naive_bayes.MultinomialNB",
    "sklearn.tests.test_naive_bayes.X",
    "sklearn.tests.test_naive_bayes.y"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_naive_bayes.test_cnb": {
  "data": {
   "lineno": 602,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "numpy.log",
    "numpy.zeros",
    "range",
    "sklearn.naive_bayes.ComplementNB",
    "sklearn.tests.test_naive_bayes.X",
    "sklearn.utils._testing.assert_array_almost_equal",
    "sklearn.utils._testing.assert_array_equal",
    "sklearn.utils._testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_naive_bayes.test_discretenb_coef_intercept_shape": {
  "data": {
   "lineno": 427,
   "symbols_in_volume": [
    "FutureWarning",
    "cls",
    "sklearn.naive_bayes.BernoulliNB",
    "sklearn.naive_bayes.MultinomialNB",
    "sklearn.tests.test_naive_bayes.X",
    "sklearn.tests.test_naive_bayes.pytest",
    "sklearn.tests.test_naive_bayes.y",
    "sklearn.utils._testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_naive_bayes.test_discretenb_deprecated_coef_intercept": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "FutureWarning",
    "cls",
    "hasattr",
    "sklearn.naive_bayes.BernoulliNB",
    "sklearn.naive_bayes.CategoricalNB",
    "sklearn.naive_bayes.ComplementNB",
    "sklearn.naive_bayes.MultinomialNB",
    "sklearn.tests.test_naive_bayes.X2",
    "sklearn.tests.test_naive_bayes.pytest",
    "sklearn.tests.test_naive_bayes.y2"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_naive_bayes.test_discretenb_input_check_fit": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "ValueError",
    "cls",
    "sklearn.naive_bayes.BernoulliNB",
    "sklearn.naive_bayes.CategoricalNB",
    "sklearn.naive_bayes.GaussianNB",
    "sklearn.naive_bayes.MultinomialNB",
    "sklearn.tests.test_naive_bayes.X2",
    "sklearn.tests.test_naive_bayes.pytest",
    "sklearn.tests.test_naive_bayes.y2",
    "sklearn.utils._testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_naive_bayes.test_discretenb_input_check_partial_fit": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "ValueError",
    "cls",
    "numpy.arange",
    "numpy.unique",
    "sklearn.naive_bayes.BernoulliNB",
    "sklearn.naive_bayes.CategoricalNB",
    "sklearn.naive_bayes.MultinomialNB",
    "sklearn.tests.test_naive_bayes.X2",
    "sklearn.tests.test_naive_bayes.pytest",
    "sklearn.tests.test_naive_bayes.y2",
    "sklearn.utils._testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_naive_bayes.test_discretenb_partial_fit": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "cls",
    "len",
    "numpy.array",
    "numpy.sum",
    "range",
    "sklearn.naive_bayes.BernoulliNB",
    "sklearn.naive_bayes.CategoricalNB",
    "sklearn.naive_bayes.MultinomialNB",
    "sklearn.tests.test_naive_bayes.pytest",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_naive_bayes.test_discretenb_pickle": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "cls",
    "io.BytesIO",
    "numpy.unique",
    "sklearn.naive_bayes.BernoulliNB",
    "sklearn.naive_bayes.CategoricalNB",
    "sklearn.naive_bayes.GaussianNB",
    "sklearn.naive_bayes.MultinomialNB",
    "sklearn.tests.test_naive_bayes.X2",
    "sklearn.tests.test_naive_bayes.pickle",
    "sklearn.tests.test_naive_bayes.pytest",
    "sklearn.tests.test_naive_bayes.y2",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_naive_bayes.test_discretenb_predict_proba": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": [
    "FutureWarning",
    "cls",
    "numpy.array",
    "numpy.exp",
    "numpy.sum",
    "sklearn.naive_bayes.BernoulliNB",
    "sklearn.naive_bayes.MultinomialNB",
    "sklearn.tests.test_naive_bayes.X",
    "sklearn.tests.test_naive_bayes.y",
    "sklearn.utils._testing.assert_almost_equal",
    "sklearn.utils._testing.assert_array_almost_equal",
    "sklearn.utils._testing.ignore_warnings",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_naive_bayes.test_discretenb_prior": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "cls",
    "numpy.array",
    "numpy.log",
    "sklearn.naive_bayes.BernoulliNB",
    "sklearn.naive_bayes.CategoricalNB",
    "sklearn.naive_bayes.MultinomialNB",
    "sklearn.tests.test_naive_bayes.X2",
    "sklearn.tests.test_naive_bayes.pytest",
    "sklearn.tests.test_naive_bayes.y2",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_naive_bayes.test_discretenb_provide_prior": {
  "data": {
   "lineno": 367,
   "symbols_in_volume": [
    "ValueError",
    "cls",
    "numpy.array",
    "numpy.exp",
    "sklearn.naive_bayes.BernoulliNB",
    "sklearn.naive_bayes.CategoricalNB",
    "sklearn.naive_bayes.MultinomialNB",
    "sklearn.tests.test_naive_bayes.pytest",
    "sklearn.utils._testing.assert_array_almost_equal",
    "sklearn.utils._testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_naive_bayes.test_discretenb_provide_prior_with_partial_fit": {
  "data": {
   "lineno": 382,
   "symbols_in_volume": [
    "cls",
    "sklearn.datasets.load_iris",
    "sklearn.model_selection.train_test_split",
    "sklearn.naive_bayes.BernoulliNB",
    "sklearn.naive_bayes.CategoricalNB",
    "sklearn.naive_bayes.MultinomialNB",
    "sklearn.tests.test_naive_bayes.pytest",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_naive_bayes.test_discretenb_sample_weight_multiclass": {
  "data": {
   "lineno": 402,
   "symbols_in_volume": [
    "cls",
    "numpy.array",
    "numpy.float64",
    "sklearn.naive_bayes.BernoulliNB",
    "sklearn.naive_bayes.CategoricalNB",
    "sklearn.naive_bayes.MultinomialNB",
    "sklearn.tests.test_naive_bayes.X",
    "sklearn.tests.test_naive_bayes.pytest",
    "sklearn.tests.test_naive_bayes.y",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_naive_bayes.test_discretenb_uniform_prior": {
  "data": {
   "lineno": 355,
   "symbols_in_volume": [
    "cls",
    "numpy.array",
    "numpy.exp",
    "sklearn.naive_bayes.BernoulliNB",
    "sklearn.naive_bayes.CategoricalNB",
    "sklearn.naive_bayes.MultinomialNB",
    "sklearn.tests.test_naive_bayes.pytest",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_naive_bayes.test_gnb": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "ValueError",
    "numpy.log",
    "sklearn.naive_bayes.GaussianNB",
    "sklearn.tests.test_naive_bayes.X",
    "sklearn.tests.test_naive_bayes.y",
    "sklearn.utils._testing.assert_array_almost_equal",
    "sklearn.utils._testing.assert_array_equal",
    "sklearn.utils._testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_naive_bayes.test_gnb_check_update_with_no_data": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "numpy.empty",
    "sklearn.naive_bayes.GaussianNB._update_mean_variance",
    "sklearn.tests.test_naive_bayes.X"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_naive_bayes.test_gnb_naive_bayes_scale_invariance": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "sklearn.datasets.load_iris",
    "sklearn.naive_bayes.GaussianNB",
    "sklearn.tests.test_naive_bayes.X",
    "sklearn.tests.test_naive_bayes.y",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_naive_bayes.test_gnb_neg_priors": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "sklearn.naive_bayes.GaussianNB",
    "sklearn.tests.test_naive_bayes.X",
    "sklearn.tests.test_naive_bayes.y",
    "sklearn.utils._testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_naive_bayes.test_gnb_partial_fit": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "numpy.unique",
    "sklearn.naive_bayes.GaussianNB",
    "sklearn.tests.test_naive_bayes.X",
    "sklearn.tests.test_naive_bayes.y",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_naive_bayes.test_gnb_pfit_wrong_nb_features": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "ValueError",
    "numpy.hstack",
    "sklearn.naive_bayes.GaussianNB",
    "sklearn.tests.test_naive_bayes.X",
    "sklearn.tests.test_naive_bayes.y",
    "sklearn.utils._testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_naive_bayes.test_gnb_prior": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.naive_bayes.GaussianNB",
    "sklearn.tests.test_naive_bayes.X",
    "sklearn.tests.test_naive_bayes.X1",
    "sklearn.tests.test_naive_bayes.y",
    "sklearn.tests.test_naive_bayes.y1",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_naive_bayes.test_gnb_prior_greater_one": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "sklearn.naive_bayes.GaussianNB",
    "sklearn.tests.test_naive_bayes.X",
    "sklearn.tests.test_naive_bayes.y",
    "sklearn.utils._testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_naive_bayes.test_gnb_prior_large_bias": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.naive_bayes.GaussianNB",
    "sklearn.tests.test_naive_bayes.X",
    "sklearn.tests.test_naive_bayes.y"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_naive_bayes.test_gnb_priors": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.naive_bayes.GaussianNB",
    "sklearn.tests.test_naive_bayes.X",
    "sklearn.tests.test_naive_bayes.y",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_naive_bayes.test_gnb_priors_sum_isclose": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.naive_bayes.GaussianNB",
    "sklearn.tests.test_naive_bayes.X"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_naive_bayes.test_gnb_sample_weight": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "numpy.bincount",
    "numpy.ones",
    "sklearn.naive_bayes.GaussianNB",
    "sklearn.tests.test_naive_bayes.X",
    "sklearn.tests.test_naive_bayes.rng",
    "sklearn.tests.test_naive_bayes.y",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_naive_bayes.test_gnb_wrong_nb_priors": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "sklearn.naive_bayes.GaussianNB",
    "sklearn.tests.test_naive_bayes.X",
    "sklearn.tests.test_naive_bayes.y",
    "sklearn.utils._testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_naive_bayes.test_mnb_prior_unobserved_targets": {
  "data": {
   "lineno": 493,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.naive_bayes.MultinomialNB",
    "sklearn.tests.test_naive_bayes.X",
    "sklearn.tests.test_naive_bayes.y",
    "sklearn.utils._testing.assert_no_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_naive_bayes.test_mnb_sample_weight": {
  "data": {
   "lineno": 521,
   "symbols_in_volume": [
    "FutureWarning",
    "numpy.exp",
    "sklearn.naive_bayes.MultinomialNB",
    "sklearn.utils._testing.assert_array_almost_equal",
    "sklearn.utils._testing.assert_array_equal",
    "sklearn.utils._testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_naive_bayes.test_mnnb": {
  "data": {
   "lineno": 441,
   "symbols_in_volume": [
    "ValueError",
    "numpy.log",
    "numpy.unique",
    "sklearn.naive_bayes.MultinomialNB",
    "sklearn.tests.test_naive_bayes.X",
    "sklearn.tests.test_naive_bayes.X2",
    "sklearn.tests.test_naive_bayes.pytest",
    "sklearn.tests.test_naive_bayes.y2",
    "sklearn.utils._testing.assert_array_almost_equal",
    "sklearn.utils._testing.assert_array_equal",
    "sklearn.utils._testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_naive_bayes.train_test_split": {
  "data": {
   "shadows": "sklearn.model_selection.train_test_split"
  },
  "type": "import"
 },
 "sklearn.tests.test_naive_bayes.y": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "sklearn.tests.test_naive_bayes.y1": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "sklearn.tests.test_naive_bayes.y2": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "sklearn.tests.test_pipeline": {
  "data": {
   "symbols_in_volume": [
    "hasattr",
    "isinstance",
    "sklearn.datasets.load_iris",
    "sklearn.pipeline.FeatureUnion",
    "sklearn.pipeline.Pipeline",
    "sklearn.tests.test_pipeline.FitParamT",
    "sklearn.tests.test_pipeline.Mult",
    "sklearn.tests.test_pipeline.Transf",
    "sklearn.tests.test_pipeline.itertools"
   ]
  },
  "type": "module"
 },
 "sklearn.tests.test_pipeline.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "sklearn.tests.test_pipeline.CountVectorizer": {
  "data": {
   "shadows": "sklearn.feature_extraction.text.CountVectorizer"
  },
  "type": "import"
 },
 "sklearn.tests.test_pipeline.DummyEstimatorParams": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator"
   ]
  },
  "type": "class"
 },
 "sklearn.tests.test_pipeline.DummyEstimatorParams.fit": {
  "data": {
   "lineno": 160
  },
  "type": "function"
 },
 "sklearn.tests.test_pipeline.DummyEstimatorParams.predict": {
  "data": {
   "lineno": 163
  },
  "type": "function"
 },
 "sklearn.tests.test_pipeline.DummyMemory": {
  "data": {
   "lineno": 1020
  },
  "type": "class"
 },
 "sklearn.tests.test_pipeline.DummyMemory.cache": {
  "data": {
   "lineno": 1021
  },
  "type": "function"
 },
 "sklearn.tests.test_pipeline.DummyRegressor": {
  "data": {
   "shadows": "sklearn.dummy.DummyRegressor"
  },
  "type": "import"
 },
 "sklearn.tests.test_pipeline.DummyTransf": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "sklearn.tests.test_pipeline.Transf"
   ]
  },
  "type": "class"
 },
 "sklearn.tests.test_pipeline.DummyTransf.fit": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "numpy.mean",
    "sklearn.tests.test_pipeline.time"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_pipeline.FeatureUnion": {
  "data": {
   "shadows": "sklearn.pipeline.FeatureUnion"
  },
  "type": "import"
 },
 "sklearn.tests.test_pipeline.FitParamT": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator"
   ]
  },
  "type": "class"
 },
 "sklearn.tests.test_pipeline.FitParamT.__init__": {
  "data": {
   "lineno": 127
  },
  "type": "function"
 },
 "sklearn.tests.test_pipeline.FitParamT.fit": {
  "data": {
   "lineno": 130
  },
  "type": "function"
 },
 "sklearn.tests.test_pipeline.FitParamT.fit_predict": {
  "data": {
   "lineno": 136
  },
  "type": "function"
 },
 "sklearn.tests.test_pipeline.FitParamT.predict": {
  "data": {
   "lineno": 133
  },
  "type": "function"
 },
 "sklearn.tests.test_pipeline.FitParamT.score": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_pipeline.HistGradientBoostingClassifier": {
  "data": {
   "shadows": "sklearn.ensemble.HistGradientBoostingClassifier"
  },
  "type": "import"
 },
 "sklearn.tests.test_pipeline.JUNK_FOOD_DOCS": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "sklearn.tests.test_pipeline.KMeans": {
  "data": {
   "shadows": "sklearn.cluster.KMeans"
  },
  "type": "import"
 },
 "sklearn.tests.test_pipeline.Lasso": {
  "data": {
   "shadows": "sklearn.linear_model.Lasso"
  },
  "type": "import"
 },
 "sklearn.tests.test_pipeline.LinearRegression": {
  "data": {
   "shadows": "sklearn.linear_model.LinearRegression"
  },
  "type": "import"
 },
 "sklearn.tests.test_pipeline.LocalOutlierFactor": {
  "data": {
   "shadows": "sklearn.neighbors.LocalOutlierFactor"
  },
  "type": "import"
 },
 "sklearn.tests.test_pipeline.LogisticRegression": {
  "data": {
   "shadows": "sklearn.linear_model.LogisticRegression"
  },
  "type": "import"
 },
 "sklearn.tests.test_pipeline.MinimalClassifier": {
  "data": {
   "shadows": "sklearn.utils._testing.MinimalClassifier"
  },
  "type": "import"
 },
 "sklearn.tests.test_pipeline.MinimalRegressor": {
  "data": {
   "shadows": "sklearn.utils._testing.MinimalRegressor"
  },
  "type": "import"
 },
 "sklearn.tests.test_pipeline.MinimalTransformer": {
  "data": {
   "shadows": "sklearn.utils._testing.MinimalTransformer"
  },
  "type": "import"
 },
 "sklearn.tests.test_pipeline.Mult": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator"
   ]
  },
  "type": "class"
 },
 "sklearn.tests.test_pipeline.Mult.__init__": {
  "data": {
   "lineno": 102
  },
  "type": "function"
 },
 "sklearn.tests.test_pipeline.Mult.fit": {
  "data": {
   "lineno": 105
  },
  "type": "function"
 },
 "sklearn.tests.test_pipeline.Mult.inverse_transform": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_pipeline.Mult.predict": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_pipeline.Mult.score": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_pipeline.Mult.transform": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_pipeline.NoFit": {
  "data": {
   "lineno": 59
  },
  "type": "class"
 },
 "sklearn.tests.test_pipeline.NoFit.__init__": {
  "data": {
   "lineno": 63
  },
  "type": "function"
 },
 "sklearn.tests.test_pipeline.NoInvTransf": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "sklearn.tests.test_pipeline.NoTrans"
   ]
  },
  "type": "class"
 },
 "sklearn.tests.test_pipeline.NoInvTransf.transform": {
  "data": {
   "lineno": 82
  },
  "type": "function"
 },
 "sklearn.tests.test_pipeline.NoTrans": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "sklearn.tests.test_pipeline.NoFit"
   ]
  },
  "type": "class"
 },
 "sklearn.tests.test_pipeline.NoTrans.fit": {
  "data": {
   "lineno": 70
  },
  "type": "function"
 },
 "sklearn.tests.test_pipeline.NoTrans.get_params": {
  "data": {
   "lineno": 73
  },
  "type": "function"
 },
 "sklearn.tests.test_pipeline.NoTrans.set_params": {
  "data": {
   "lineno": 76
  },
  "type": "function"
 },
 "sklearn.tests.test_pipeline.PCA": {
  "data": {
   "shadows": "sklearn.decomposition.PCA"
  },
  "type": "import"
 },
 "sklearn.tests.test_pipeline.Pipeline": {
  "data": {
   "shadows": "sklearn.pipeline.Pipeline"
  },
  "type": "import"
 },
 "sklearn.tests.test_pipeline.SVC": {
  "data": {
   "shadows": "sklearn.svm.SVC"
  },
  "type": "import"
 },
 "sklearn.tests.test_pipeline.SelectKBest": {
  "data": {
   "shadows": "sklearn.feature_selection.SelectKBest"
  },
  "type": "import"
 },
 "sklearn.tests.test_pipeline.SimpleImputer": {
  "data": {
   "shadows": "sklearn.impute.SimpleImputer"
  },
  "type": "import"
 },
 "sklearn.tests.test_pipeline.StandardScaler": {
  "data": {
   "shadows": "sklearn.preprocessing.StandardScaler"
  },
  "type": "import"
 },
 "sklearn.tests.test_pipeline.Transf": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "sklearn.tests.test_pipeline.NoInvTransf"
   ]
  },
  "type": "class"
 },
 "sklearn.tests.test_pipeline.Transf.inverse_transform": {
  "data": {
   "lineno": 90
  },
  "type": "function"
 },
 "sklearn.tests.test_pipeline.Transf.transform": {
  "data": {
   "lineno": 87
  },
  "type": "function"
 },
 "sklearn.tests.test_pipeline.TransfFitParams": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "sklearn.tests.test_pipeline.Transf"
   ]
  },
  "type": "class"
 },
 "sklearn.tests.test_pipeline.TransfFitParams.fit": {
  "data": {
   "lineno": 96
  },
  "type": "function"
 },
 "sklearn.tests.test_pipeline.TransformerMixin": {
  "data": {
   "shadows": "sklearn.base.TransformerMixin"
  },
  "type": "import"
 },
 "sklearn.tests.test_pipeline.TruncatedSVD": {
  "data": {
   "shadows": "sklearn.decomposition.TruncatedSVD"
  },
  "type": "import"
 },
 "sklearn.tests.test_pipeline.WrongDummyMemory": {
  "data": {
   "lineno": 1025
  },
  "type": "class"
 },
 "sklearn.tests.test_pipeline.accuracy_score": {
  "data": {
   "shadows": "sklearn.metrics.accuracy_score"
  },
  "type": "import"
 },
 "sklearn.tests.test_pipeline.assert_allclose": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_allclose"
  },
  "type": "import"
 },
 "sklearn.tests.test_pipeline.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.tests.test_pipeline.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.tests.test_pipeline.assert_no_warnings": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_no_warnings"
  },
  "type": "import"
 },
 "sklearn.tests.test_pipeline.assert_raise_message": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_raise_message"
  },
  "type": "import"
 },
 "sklearn.tests.test_pipeline.assert_raises": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.tests.test_pipeline.assert_raises_regex": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_raises_regex"
  },
  "type": "import"
 },
 "sklearn.tests.test_pipeline.clone": {
  "data": {
   "shadows": "sklearn.base.clone"
  },
  "type": "import"
 },
 "sklearn.tests.test_pipeline.enable_hist_gradient_boosting": {
  "data": {
   "shadows": "sklearn.experimental.enable_hist_gradient_boosting"
  },
  "type": "import"
 },
 "sklearn.tests.test_pipeline.f_classif": {
  "data": {
   "shadows": "sklearn.feature_selection.f_classif"
  },
  "type": "import"
 },
 "sklearn.tests.test_pipeline.iris": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "sklearn.tests.test_pipeline.is_classifier": {
  "data": {
   "shadows": "sklearn.base.is_classifier"
  },
  "type": "import"
 },
 "sklearn.tests.test_pipeline.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "sklearn.tests.test_pipeline.joblib": {
  "data": {
   "shadows": "joblib"
  },
  "type": "import"
 },
 "sklearn.tests.test_pipeline.load_iris": {
  "data": {
   "shadows": "sklearn.datasets.load_iris"
  },
  "type": "import"
 },
 "sklearn.tests.test_pipeline.make_pipeline": {
  "data": {
   "shadows": "sklearn.pipeline.make_pipeline"
  },
  "type": "import"
 },
 "sklearn.tests.test_pipeline.make_union": {
  "data": {
   "shadows": "sklearn.pipeline.make_union"
  },
  "type": "import"
 },
 "sklearn.tests.test_pipeline.mkdtemp": {
  "data": {
   "shadows": "tempfile.mkdtemp"
  },
  "type": "import"
 },
 "sklearn.tests.test_pipeline.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.tests.test_pipeline.parameter_grid_test_verbose": {
  "data": {
   "lineno": 1130
  },
  "type": "constant"
 },
 "sklearn.tests.test_pipeline.parse_version": {
  "data": {
   "shadows": "sklearn.utils.fixes.parse_version"
  },
  "type": "import"
 },
 "sklearn.tests.test_pipeline.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.tests.test_pipeline.r2_score": {
  "data": {
   "shadows": "sklearn.metrics.r2_score"
  },
  "type": "import"
 },
 "sklearn.tests.test_pipeline.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "sklearn.tests.test_pipeline.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "sklearn.tests.test_pipeline.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.tests.test_pipeline.test_classes_property": {
  "data": {
   "lineno": 880,
   "symbols_in_volume": [
    "AttributeError",
    "getattr",
    "numpy.unique",
    "sklearn.feature_selection.SelectKBest",
    "sklearn.linear_model.LinearRegression",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.pipeline.make_pipeline",
    "sklearn.tests.test_pipeline.iris",
    "sklearn.utils._testing.assert_array_equal",
    "sklearn.utils._testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_pipeline.test_feature_union": {
  "data": {
   "lineno": 462,
   "symbols_in_volume": [
    "TypeError",
    "scipy.sparse.csr_matrix",
    "sklearn.base.clone",
    "sklearn.decomposition.TruncatedSVD",
    "sklearn.feature_selection.SelectKBest",
    "sklearn.pipeline.FeatureUnion",
    "sklearn.tests.test_pipeline.NoTrans",
    "sklearn.tests.test_pipeline.Transf",
    "sklearn.tests.test_pipeline.iris",
    "sklearn.utils._testing.assert_array_almost_equal",
    "sklearn.utils._testing.assert_array_equal",
    "sklearn.utils._testing.assert_no_warnings",
    "sklearn.utils._testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_pipeline.test_feature_union_feature_names": {
  "data": {
   "lineno": 864,
   "symbols_in_volume": [
    "AttributeError",
    "len",
    "sklearn.feature_extraction.text.CountVectorizer",
    "sklearn.pipeline.FeatureUnion",
    "sklearn.tests.test_pipeline.JUNK_FOOD_DOCS",
    "sklearn.tests.test_pipeline.Transf",
    "sklearn.utils._testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_pipeline.test_feature_union_fit_params": {
  "data": {
   "lineno": 1226,
   "symbols_in_volume": [
    "Dummy",
    "ValueError",
    "sklearn.pipeline.FeatureUnion",
    "sklearn.tests.test_pipeline.iris",
    "sklearn.tests.test_pipeline.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_pipeline.test_feature_union_fit_params.Dummy": {
  "data": {
   "lineno": 1228,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator",
    "sklearn.base.TransformerMixin"
   ]
  },
  "type": "class"
 },
 "sklearn.tests.test_pipeline.test_feature_union_fit_params.Dummy.fit": {
  "data": {
   "lineno": 1229,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_pipeline.test_feature_union_fit_params.Dummy.transform": {
  "data": {
   "lineno": 1234
  },
  "type": "function"
 },
 "sklearn.tests.test_pipeline.test_feature_union_parallel": {
  "data": {
   "lineno": 818,
   "symbols_in_volume": [
    "len",
    "sklearn.feature_extraction.text.CountVectorizer",
    "sklearn.pipeline.FeatureUnion",
    "sklearn.tests.test_pipeline.JUNK_FOOD_DOCS",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_pipeline.test_feature_union_warns_unknown_transformer_weight": {
  "data": {
   "lineno": 1259,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.pipeline.FeatureUnion",
    "sklearn.tests.test_pipeline.Transf",
    "sklearn.tests.test_pipeline.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_pipeline.test_feature_union_weights": {
  "data": {
   "lineno": 786,
   "symbols_in_volume": [
    "sklearn.decomposition.PCA",
    "sklearn.feature_selection.SelectKBest",
    "sklearn.pipeline.FeatureUnion",
    "sklearn.tests.test_pipeline.Transf",
    "sklearn.tests.test_pipeline.iris",
    "sklearn.utils._testing.assert_array_almost_equal",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_pipeline.test_fit_predict_on_pipeline": {
  "data": {
   "lineno": 403,
   "symbols_in_volume": [
    "sklearn.cluster.KMeans",
    "sklearn.pipeline.Pipeline",
    "sklearn.preprocessing.StandardScaler",
    "sklearn.tests.test_pipeline.iris",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_pipeline.test_fit_predict_on_pipeline_without_fit_predict": {
  "data": {
   "lineno": 428,
   "symbols_in_volume": [
    "AttributeError",
    "getattr",
    "sklearn.decomposition.PCA",
    "sklearn.pipeline.Pipeline",
    "sklearn.preprocessing.StandardScaler",
    "sklearn.utils._testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_pipeline.test_fit_predict_with_intermediate_fit_params": {
  "data": {
   "lineno": 439,
   "symbols_in_volume": [
    "sklearn.pipeline.Pipeline",
    "sklearn.tests.test_pipeline.FitParamT",
    "sklearn.tests.test_pipeline.TransfFitParams"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_pipeline.test_make_pipeline": {
  "data": {
   "lineno": 771,
   "symbols_in_volume": [
    "isinstance",
    "sklearn.pipeline.Pipeline",
    "sklearn.pipeline.make_pipeline",
    "sklearn.tests.test_pipeline.FitParamT",
    "sklearn.tests.test_pipeline.Transf"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_pipeline.test_make_pipeline_memory": {
  "data": {
   "lineno": 1107,
   "symbols_in_volume": [
    "len",
    "sklearn.pipeline.make_pipeline",
    "sklearn.svm.SVC",
    "sklearn.tests.test_pipeline.DummyTransf",
    "sklearn.tests.test_pipeline.joblib",
    "sklearn.tests.test_pipeline.shutil",
    "sklearn.utils.fixes.parse_version",
    "tempfile.mkdtemp"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_pipeline.test_make_union": {
  "data": {
   "lineno": 511,
   "symbols_in_volume": [
    "sklearn.decomposition.PCA",
    "sklearn.pipeline.make_union",
    "sklearn.tests.test_pipeline.Transf",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_pipeline.test_make_union_kwargs": {
  "data": {
   "lineno": 520,
   "symbols_in_volume": [
    "TypeError",
    "sklearn.decomposition.PCA",
    "sklearn.pipeline.make_union",
    "sklearn.tests.test_pipeline.Transf",
    "sklearn.utils._testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_pipeline.test_n_features_in_feature_union": {
  "data": {
   "lineno": 1206,
   "symbols_in_volume": [
    "hasattr",
    "sklearn.pipeline.make_union",
    "sklearn.preprocessing.StandardScaler"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_pipeline.test_n_features_in_pipeline": {
  "data": {
   "lineno": 1183,
   "symbols_in_volume": [
    "hasattr",
    "sklearn.ensemble.HistGradientBoostingClassifier",
    "sklearn.pipeline.make_pipeline",
    "sklearn.preprocessing.StandardScaler"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_pipeline.test_pipeline_correctly_adjusts_steps": {
  "data": {
   "lineno": 650,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.pipeline.Pipeline",
    "sklearn.tests.test_pipeline.Mult",
    "sklearn.tests.test_pipeline.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_pipeline.test_pipeline_ducktyping": {
  "data": {
   "lineno": 743,
   "symbols_in_volume": [
    "hasattr",
    "sklearn.pipeline.make_pipeline",
    "sklearn.tests.test_pipeline.Mult",
    "sklearn.tests.test_pipeline.NoInvTransf",
    "sklearn.tests.test_pipeline.Transf"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_pipeline.test_pipeline_fit_params": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "TypeError",
    "sklearn.pipeline.Pipeline",
    "sklearn.tests.test_pipeline.FitParamT",
    "sklearn.tests.test_pipeline.Transf",
    "sklearn.utils._testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_pipeline.test_pipeline_fit_transform": {
  "data": {
   "lineno": 554,
   "symbols_in_volume": [
    "sklearn.pipeline.Pipeline",
    "sklearn.tests.test_pipeline.Transf",
    "sklearn.tests.test_pipeline.iris",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_pipeline.test_pipeline_get_tags_none": {
  "data": {
   "lineno": 1275,
   "symbols_in_volume": [
    "sklearn.pipeline.make_pipeline",
    "sklearn.svm.SVC",
    "sklearn.tests.test_pipeline.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_pipeline.test_pipeline_index": {
  "data": {
   "lineno": 595,
   "symbols_in_volume": [
    "IndexError",
    "KeyError",
    "sklearn.pipeline.Pipeline",
    "sklearn.tests.test_pipeline.FitParamT",
    "sklearn.tests.test_pipeline.Transf",
    "sklearn.utils._testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_pipeline.test_pipeline_init": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "dict",
    "repr",
    "sklearn.base.clone",
    "sklearn.feature_selection.SelectKBest",
    "sklearn.feature_selection.f_classif",
    "sklearn.pipeline.Pipeline",
    "sklearn.svm.SVC",
    "sklearn.tests.test_pipeline.NoFit",
    "sklearn.tests.test_pipeline.NoTrans",
    "sklearn.utils._testing.assert_no_warnings",
    "sklearn.utils._testing.assert_raises",
    "sklearn.utils._testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_pipeline.test_pipeline_init_tuple": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.pipeline.Pipeline",
    "sklearn.tests.test_pipeline.FitParamT",
    "sklearn.tests.test_pipeline.Transf"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_pipeline.test_pipeline_memory": {
  "data": {
   "lineno": 1042,
   "symbols_in_volume": [
    "hasattr",
    "sklearn.base.clone",
    "sklearn.pipeline.Pipeline",
    "sklearn.svm.SVC",
    "sklearn.tests.test_pipeline.DummyTransf",
    "sklearn.tests.test_pipeline.iris",
    "sklearn.tests.test_pipeline.joblib",
    "sklearn.tests.test_pipeline.shutil",
    "sklearn.utils._testing.assert_array_equal",
    "sklearn.utils.fixes.parse_version",
    "tempfile.mkdtemp"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_pipeline.test_pipeline_methods_anova": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "sklearn.feature_selection.SelectKBest",
    "sklearn.feature_selection.f_classif",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.pipeline.Pipeline",
    "sklearn.tests.test_pipeline.iris"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_pipeline.test_pipeline_methods_pca_svm": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": [
    "sklearn.decomposition.PCA",
    "sklearn.pipeline.Pipeline",
    "sklearn.svm.SVC",
    "sklearn.tests.test_pipeline.iris"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_pipeline.test_pipeline_methods_preprocessing_svm": {
  "data": {
   "lineno": 373,
   "symbols_in_volume": [
    "len",
    "numpy.unique",
    "sklearn.decomposition.PCA",
    "sklearn.pipeline.Pipeline",
    "sklearn.preprocessing.StandardScaler",
    "sklearn.svm.SVC",
    "sklearn.tests.test_pipeline.iris"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_pipeline.test_pipeline_missing_values_leniency": {
  "data": {
   "lineno": 1249,
   "symbols_in_volume": [
    "bool",
    "numpy.nan",
    "numpy.random.choice",
    "sklearn.impute.SimpleImputer",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.pipeline.make_pipeline",
    "sklearn.tests.test_pipeline.iris"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_pipeline.test_pipeline_named_steps": {
  "data": {
   "lineno": 633,
   "symbols_in_volume": [
    "sklearn.pipeline.Pipeline",
    "sklearn.tests.test_pipeline.Mult",
    "sklearn.tests.test_pipeline.Transf"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_pipeline.test_pipeline_param_error": {
  "data": {
   "lineno": 1123,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.pipeline.make_pipeline",
    "sklearn.tests.test_pipeline.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_pipeline.test_pipeline_raise_set_params_error": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.linear_model.LinearRegression",
    "sklearn.pipeline.Pipeline",
    "sklearn.utils._testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_pipeline.test_pipeline_sample_weight_supported": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.pipeline.Pipeline",
    "sklearn.tests.test_pipeline.FitParamT",
    "sklearn.tests.test_pipeline.Transf"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_pipeline.test_pipeline_sample_weight_unsupported": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": [
    "TypeError",
    "numpy.array",
    "sklearn.pipeline.Pipeline",
    "sklearn.tests.test_pipeline.Mult",
    "sklearn.tests.test_pipeline.Transf",
    "sklearn.utils._testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_pipeline.test_pipeline_score_samples_pca_lof": {
  "data": {
   "lineno": 344,
   "symbols_in_volume": [
    "sklearn.decomposition.PCA",
    "sklearn.neighbors.LocalOutlierFactor",
    "sklearn.pipeline.Pipeline",
    "sklearn.tests.test_pipeline.iris",
    "sklearn.utils._testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_pipeline.test_pipeline_slice": {
  "data": {
   "lineno": 567,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "list",
    "sklearn.pipeline.Pipeline",
    "sklearn.tests.test_pipeline.FitParamT",
    "sklearn.tests.test_pipeline.Transf",
    "sklearn.tests.test_pipeline.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_pipeline.test_pipeline_transform": {
  "data": {
   "lineno": 535,
   "symbols_in_volume": [
    "sklearn.decomposition.PCA",
    "sklearn.pipeline.Pipeline",
    "sklearn.tests.test_pipeline.iris",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_pipeline.test_pipeline_with_cache_attribute": {
  "data": {
   "lineno": 1029,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "sklearn.pipeline.Pipeline",
    "sklearn.tests.test_pipeline.DummyMemory",
    "sklearn.tests.test_pipeline.Mult",
    "sklearn.tests.test_pipeline.Transf",
    "sklearn.tests.test_pipeline.WrongDummyMemory",
    "sklearn.utils._testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_pipeline.test_pipeline_wrong_memory": {
  "data": {
   "lineno": 1006,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.pipeline.Pipeline",
    "sklearn.svm.SVC",
    "sklearn.tests.test_pipeline.DummyTransf",
    "sklearn.tests.test_pipeline.iris",
    "sklearn.utils._testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_pipeline.test_predict_with_predict_params": {
  "data": {
   "lineno": 452,
   "symbols_in_volume": [
    "sklearn.pipeline.Pipeline",
    "sklearn.tests.test_pipeline.DummyEstimatorParams",
    "sklearn.tests.test_pipeline.Transf"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_pipeline.test_score_samples_on_pipeline_without_score_samples": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": [
    "AttributeError",
    "numpy.array",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.pipeline.make_pipeline",
    "sklearn.tests.test_pipeline.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_pipeline.test_search_cv_using_minimal_compatible_estimator": {
  "data": {
   "lineno": 1287,
   "symbols_in_volume": [
    "Predictor",
    "numpy.array",
    "numpy.random.RandomState",
    "sklearn.base.is_classifier",
    "sklearn.metrics.accuracy_score",
    "sklearn.metrics.r2_score",
    "sklearn.pipeline.Pipeline",
    "sklearn.tests.test_pipeline.pytest",
    "sklearn.utils._testing.MinimalClassifier",
    "sklearn.utils._testing.MinimalRegressor",
    "sklearn.utils._testing.MinimalTransformer",
    "sklearn.utils._testing.assert_allclose",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_pipeline.test_set_feature_union_step_drop": {
  "data": {
   "lineno": 922,
   "symbols_in_volume": [
    "numpy.asarray",
    "sklearn.pipeline.FeatureUnion",
    "sklearn.tests.test_pipeline.Mult",
    "sklearn.tests.test_pipeline.pytest",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_pipeline.test_set_feature_union_steps": {
  "data": {
   "lineno": 894,
   "symbols_in_volume": [
    "numpy.asarray",
    "sklearn.pipeline.FeatureUnion",
    "sklearn.tests.test_pipeline.Mult",
    "sklearn.utils._testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_pipeline.test_set_params_nested_pipeline": {
  "data": {
   "lineno": 996,
   "symbols_in_volume": [
    "sklearn.dummy.DummyRegressor",
    "sklearn.linear_model.Lasso",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.pipeline.Pipeline"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_pipeline.test_set_pipeline_step_passthrough": {
  "data": {
   "lineno": 671,
   "symbols_in_volume": [
    "AttributeError",
    "getattr",
    "make",
    "numpy.array",
    "sklearn.pipeline.Pipeline",
    "sklearn.tests.test_pipeline.Mult",
    "sklearn.tests.test_pipeline.pytest",
    "sklearn.utils._testing.assert_array_equal",
    "sklearn.utils._testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_pipeline.test_set_pipeline_step_passthrough.make": {
  "data": {
   "lineno": 679,
   "symbols_in_volume": [
    "sklearn.pipeline.Pipeline"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_pipeline.test_set_pipeline_steps": {
  "data": {
   "lineno": 607,
   "symbols_in_volume": [
    "TypeError",
    "sklearn.pipeline.Pipeline",
    "sklearn.tests.test_pipeline.Transf",
    "sklearn.utils._testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_pipeline.test_step_name_validation": {
  "data": {
   "lineno": 963,
   "symbols_in_volume": [
    "ValueError",
    "cls",
    "setattr",
    "sklearn.pipeline.FeatureUnion",
    "sklearn.pipeline.Pipeline",
    "sklearn.tests.test_pipeline.Mult",
    "sklearn.utils._testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_pipeline.test_verbose": {
  "data": {
   "lineno": 1167,
   "symbols_in_volume": [
    "func",
    "getattr",
    "sklearn.tests.test_pipeline.parameter_grid_test_verbose",
    "sklearn.tests.test_pipeline.pytest",
    "sklearn.tests.test_pipeline.re"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_pipeline.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "sklearn.tests.test_random_projection": {
  "data": {
   "symbols_in_volume": [
    "int",
    "set",
    "sklearn.random_projection.GaussianRandomProjection",
    "sklearn.random_projection.SparseRandomProjection",
    "sklearn.random_projection._gaussian_random_matrix",
    "sklearn.random_projection._sparse_random_matrix",
    "sklearn.tests.test_random_projection.make_sparse_random_data",
    "sklearn.tests.test_random_projection.n_nonzeros",
    "typing.Any",
    "typing.List"
   ]
  },
  "type": "module"
 },
 "sklearn.tests.test_random_projection.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "sklearn.tests.test_random_projection.DataDimensionalityWarning": {
  "data": {
   "shadows": "sklearn.exceptions.DataDimensionalityWarning"
  },
  "type": "import"
 },
 "sklearn.tests.test_random_projection.GaussianRandomProjection": {
  "data": {
   "shadows": "sklearn.random_projection.GaussianRandomProjection"
  },
  "type": "import"
 },
 "sklearn.tests.test_random_projection.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "sklearn.tests.test_random_projection.SparseRandomProjection": {
  "data": {
   "shadows": "sklearn.random_projection.SparseRandomProjection"
  },
  "type": "import"
 },
 "sklearn.tests.test_random_projection._gaussian_random_matrix": {
  "data": {
   "shadows": "sklearn.random_projection._gaussian_random_matrix"
  },
  "type": "import"
 },
 "sklearn.tests.test_random_projection._sparse_random_matrix": {
  "data": {
   "shadows": "sklearn.random_projection._sparse_random_matrix"
  },
  "type": "import"
 },
 "sklearn.tests.test_random_projection.all_RandomProjection": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "sklearn.tests.test_random_projection.all_random_matrix": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "sklearn.tests.test_random_projection.assert_almost_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_almost_equal"
  },
  "type": "import"
 },
 "sklearn.tests.test_random_projection.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.tests.test_random_projection.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.tests.test_random_projection.assert_raise_message": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_raise_message"
  },
  "type": "import"
 },
 "sklearn.tests.test_random_projection.assert_raises": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.tests.test_random_projection.assert_warns": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_warns"
  },
  "type": "import"
 },
 "sklearn.tests.test_random_projection.check_input_size_random_matrix": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.utils._testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_random_projection.check_input_with_sparse_random_matrix": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "ValueError",
    "random_matrix",
    "sklearn.utils._testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_random_projection.check_size_generated": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "random_matrix"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_random_projection.check_zero_mean_and_unit_norm": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "numpy.linalg.norm",
    "numpy.mean",
    "random_matrix",
    "sklearn.tests.test_random_projection.densify",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_random_projection.densify": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "scipy.sparse.issparse"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_random_projection.euclidean_distances": {
  "data": {
   "shadows": "sklearn.metrics.euclidean_distances"
  },
  "type": "import"
 },
 "sklearn.tests.test_random_projection.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "sklearn.tests.test_random_projection.johnson_lindenstrauss_min_dim": {
  "data": {
   "shadows": "sklearn.random_projection.johnson_lindenstrauss_min_dim"
  },
  "type": "import"
 },
 "sklearn.tests.test_random_projection.make_sparse_random_data": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "scipy.sparse.coo_matrix"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_random_projection.n_nonzeros": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "sklearn.tests.test_random_projection.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.tests.test_random_projection.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.tests.test_random_projection.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.tests.test_random_projection.test_SparseRandomProjection_output_representation": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "isinstance",
    "numpy.ndarray",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.issparse",
    "sklearn.random_projection.SparseRandomProjection"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_random_projection.test_basic_property_of_random_matrix": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "random_matrix",
    "sklearn.tests.test_random_projection.all_random_matrix",
    "sklearn.tests.test_random_projection.check_input_size_random_matrix",
    "sklearn.tests.test_random_projection.check_size_generated",
    "sklearn.tests.test_random_projection.check_zero_mean_and_unit_norm",
    "sklearn.tests.test_random_projection.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_random_projection.test_basic_property_of_sparse_random_matrix": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "random_matrix",
    "sklearn.tests.test_random_projection.check_input_with_sparse_random_matrix",
    "sklearn.tests.test_random_projection.check_zero_mean_and_unit_norm",
    "sklearn.tests.test_random_projection.functools",
    "sklearn.tests.test_random_projection.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_random_projection.test_correct_RandomProjection_dimensions_embedding": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "RandomProjection",
    "ValueError",
    "sklearn.tests.test_random_projection.all_RandomProjection",
    "sklearn.utils._testing.assert_almost_equal",
    "sklearn.utils._testing.assert_array_equal",
    "sklearn.utils._testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_random_projection.test_gaussian_random_matrix": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "numpy.mean",
    "numpy.var",
    "sklearn.random_projection._gaussian_random_matrix",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_random_projection.test_input_size_jl_min_dim": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "ValueError",
    "numpy.full",
    "numpy.random.randint",
    "sklearn.random_projection.johnson_lindenstrauss_min_dim",
    "sklearn.utils._testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_random_projection.test_invalid_jl_domain": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.random_projection.johnson_lindenstrauss_min_dim",
    "sklearn.utils._testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_random_projection.test_random_projection_embedding_quality": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "RandomProjection",
    "sklearn.metrics.euclidean_distances",
    "sklearn.tests.test_random_projection.all_RandomProjection",
    "sklearn.tests.test_random_projection.make_sparse_random_data"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_random_projection.test_random_projection_transformer_invalid_input": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "RandomProjection",
    "ValueError",
    "sklearn.tests.test_random_projection.all_RandomProjection",
    "sklearn.utils._testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_random_projection.test_sparse_random_matrix": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "numpy.mean",
    "numpy.size",
    "numpy.sqrt",
    "numpy.unique",
    "numpy.var",
    "sklearn.random_projection._sparse_random_matrix",
    "sklearn.tests.test_random_projection.densify",
    "sklearn.utils._testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_random_projection.test_sparse_random_projection_transformer_invalid_density": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "RandomProjection",
    "ValueError",
    "sklearn.utils._testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_random_projection.test_too_many_samples_to_find_a_safe_embedding": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "RandomProjection",
    "ValueError",
    "sklearn.tests.test_random_projection.all_RandomProjection",
    "sklearn.tests.test_random_projection.make_sparse_random_data",
    "sklearn.utils._testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_random_projection.test_try_to_transform_before_fit": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "RandomProjection",
    "ValueError",
    "sklearn.tests.test_random_projection.all_RandomProjection",
    "sklearn.utils._testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_random_projection.test_warning_n_components_greater_than_n_features": {
  "data": {
   "lineno": 335,
   "symbols_in_volume": [
    "RandomProjection",
    "int",
    "sklearn.exceptions.DataDimensionalityWarning",
    "sklearn.tests.test_random_projection.all_RandomProjection",
    "sklearn.tests.test_random_projection.make_sparse_random_data",
    "sklearn.utils._testing.assert_warns"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_random_projection.test_works_with_sparse_data": {
  "data": {
   "lineno": 344,
   "symbols_in_volume": [
    "RandomProjection",
    "int",
    "scipy.sparse.csr_matrix",
    "sklearn.tests.test_random_projection.all_RandomProjection",
    "sklearn.tests.test_random_projection.densify",
    "sklearn.tests.test_random_projection.make_sparse_random_data",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tree": {
  "data": {},
  "type": "module"
 },
 "sklearn.tree.__all__": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "sklearn.tree._classes": {
  "data": {},
  "type": "module"
 },
 "sklearn.tree._classes.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "sklearn.tree._classes.BaseDecisionTree": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "abc.ABCMeta"
   ]
  },
  "type": "class"
 },
 "sklearn.tree._classes.BaseDecisionTree.__init__": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "sklearn.tree._classes.BaseDecisionTree._prune_tree": {
  "data": {
   "lineno": 518,
   "symbols_in_volume": [
    "Tree",
    "ValueError",
    "_build_pruned_tree_ccp",
    "check_is_fitted",
    "is_classifier",
    "numpy.array",
    "numpy.atleast_1d",
    "numpy.intp"
   ]
  },
  "type": "function"
 },
 "sklearn.tree._classes.BaseDecisionTree._validate_X_predict": {
  "data": {
   "lineno": 399,
   "symbols_in_volume": [
    "ValueError",
    "numpy.intc",
    "scipy.sparse.issparse",
    "sklearn.tree._classes.DTYPE"
   ]
  },
  "type": "function"
 },
 "sklearn.tree._classes.BaseDecisionTree.apply": {
  "data": {
   "lineno": 465,
   "symbols_in_volume": [
    "check_is_fitted"
   ]
  },
  "type": "function"
 },
 "sklearn.tree._classes.BaseDecisionTree.cost_complexity_pruning_path": {
  "data": {
   "lineno": 541,
   "symbols_in_volume": [
    "Bunch",
    "ccp_pruning_path",
    "clone"
   ]
  },
  "type": "function"
 },
 "sklearn.tree._classes.BaseDecisionTree.decision_path": {
  "data": {
   "lineno": 493
  },
  "type": "function"
 },
 "sklearn.tree._classes.BaseDecisionTree.feature_importances_": {
  "data": {
   "lineno": 580,
   "symbols_in_volume": [
    "check_is_fitted",
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.tree._classes.BaseDecisionTree.fit": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "BestFirstTreeBuilder",
    "DepthFirstTreeBuilder",
    "FutureWarning",
    "Tree",
    "ValueError",
    "_check_sample_weight",
    "check_classification_targets",
    "check_random_state",
    "compute_sample_weight",
    "dict",
    "getattr",
    "int",
    "is_classifier",
    "isinstance",
    "len",
    "math.ceil",
    "max",
    "numpy.any",
    "numpy.array",
    "numpy.ascontiguousarray",
    "numpy.atleast_1d",
    "numpy.copy",
    "numpy.iinfo",
    "numpy.int32",
    "numpy.intc",
    "numpy.intp",
    "numpy.log2",
    "numpy.reshape",
    "numpy.sqrt",
    "numpy.sum",
    "numpy.unique",
    "numpy.zeros",
    "range",
    "scipy.sparse.issparse",
    "sklearn.tree._classes.CRITERIA_CLF",
    "sklearn.tree._classes.CRITERIA_REG",
    "sklearn.tree._classes.DENSE_SPLITTERS",
    "sklearn.tree._classes.DOUBLE",
    "sklearn.tree._classes.DTYPE",
    "sklearn.tree._classes.SPARSE_SPLITTERS",
    "sklearn.tree._classes.numbers",
    "sklearn.tree._classes.warnings",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.tree._classes.BaseDecisionTree.get_depth": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "check_is_fitted"
   ]
  },
  "type": "function"
 },
 "sklearn.tree._classes.BaseDecisionTree.get_n_leaves": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "check_is_fitted"
   ]
  },
  "type": "function"
 },
 "sklearn.tree._classes.BaseDecisionTree.predict": {
  "data": {
   "lineno": 413,
   "symbols_in_volume": [
    "check_is_fitted",
    "is_classifier",
    "numpy.argmax",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "sklearn.tree._classes.CRITERIA_CLF": {
  "data": {
   "lineno": 62
  },
  "type": "constant"
 },
 "sklearn.tree._classes.CRITERIA_REG": {
  "data": {
   "lineno": 64
  },
  "type": "constant"
 },
 "sklearn.tree._classes.DENSE_SPLITTERS": {
  "data": {
   "lineno": 69
  },
  "type": "constant"
 },
 "sklearn.tree._classes.DOUBLE": {
  "data": {
   "lineno": 60
  },
  "type": "constant"
 },
 "sklearn.tree._classes.DTYPE": {
  "data": {
   "lineno": 59
  },
  "type": "constant"
 },
 "sklearn.tree._classes.DecisionTreeClassifier": {
  "data": {
   "lineno": 607,
   "symbols_in_volume": [
    "sklearn.tree._classes.BaseDecisionTree"
   ]
  },
  "type": "class"
 },
 "sklearn.tree._classes.DecisionTreeClassifier.__init__": {
  "data": {
   "lineno": 831,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.tree._classes.DecisionTreeClassifier.fit": {
  "data": {
   "lineno": 861,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.tree._classes.DecisionTreeClassifier.predict_log_proba": {
  "data": {
   "lineno": 953,
   "symbols_in_volume": [
    "numpy.log",
    "range"
   ]
  },
  "type": "function"
 },
 "sklearn.tree._classes.DecisionTreeClassifier.predict_proba": {
  "data": {
   "lineno": 905,
   "symbols_in_volume": [
    "check_is_fitted",
    "numpy.newaxis",
    "range"
   ]
  },
  "type": "function"
 },
 "sklearn.tree._classes.DecisionTreeRegressor": {
  "data": {
   "lineno": 982,
   "symbols_in_volume": [
    "sklearn.tree._classes.BaseDecisionTree"
   ]
  },
  "type": "class"
 },
 "sklearn.tree._classes.DecisionTreeRegressor.__init__": {
  "data": {
   "lineno": 1183,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.tree._classes.DecisionTreeRegressor._compute_partial_dependence_recursion": {
  "data": {
   "lineno": 1254,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.float64",
    "numpy.zeros",
    "sklearn.tree._classes.DTYPE"
   ]
  },
  "type": "function"
 },
 "sklearn.tree._classes.DecisionTreeRegressor.fit": {
  "data": {
   "lineno": 1211,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.tree._classes.ExtraTreeClassifier": {
  "data": {
   "lineno": 1280,
   "symbols_in_volume": [
    "sklearn.tree._classes.DecisionTreeClassifier"
   ]
  },
  "type": "class"
 },
 "sklearn.tree._classes.ExtraTreeClassifier.__init__": {
  "data": {
   "lineno": 1496,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.tree._classes.ExtraTreeRegressor": {
  "data": {
   "lineno": 1527,
   "symbols_in_volume": [
    "sklearn.tree._classes.DecisionTreeRegressor"
   ]
  },
  "type": "class"
 },
 "sklearn.tree._classes.ExtraTreeRegressor.__init__": {
  "data": {
   "lineno": 1718,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.tree._classes.SPARSE_SPLITTERS": {
  "data": {
   "lineno": 72
  },
  "type": "constant"
 },
 "sklearn.tree._classes.__all__": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "sklearn.tree._classes.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "sklearn.tree._classes.ceil": {
  "data": {
   "shadows": "math.ceil"
  },
  "type": "import"
 },
 "sklearn.tree._classes.issparse": {
  "data": {
   "shadows": "scipy.sparse.issparse"
  },
  "type": "import"
 },
 "sklearn.tree._classes.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.tree._classes.numbers": {
  "data": {
   "shadows": "numbers"
  },
  "type": "import"
 },
 "sklearn.tree._classes.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.tree._export": {
  "data": {
   "symbols_in_volume": [
    "sklearn.tree._export.Sentinel"
   ]
  },
  "type": "module"
 },
 "sklearn.tree._export.Annotation": {
  "data": {
   "shadows": "matplotlib.text.Annotation"
  },
  "type": "import"
 },
 "sklearn.tree._export.Integral": {
  "data": {
   "shadows": "numbers.Integral"
  },
  "type": "import"
 },
 "sklearn.tree._export.SENTINEL": {
  "data": {
   "lineno": 78
  },
  "type": "constant"
 },
 "sklearn.tree._export.Sentinel": {
  "data": {
   "lineno": 73
  },
  "type": "class"
 },
 "sklearn.tree._export.Sentinel.__repr__": {
  "data": {
   "lineno": 74
  },
  "type": "function"
 },
 "sklearn.tree._export.StringIO": {
  "data": {
   "shadows": "io.StringIO"
  },
  "type": "import"
 },
 "sklearn.tree._export._BaseTreeExporter": {
  "data": {
   "lineno": 197
  },
  "type": "class"
 },
 "sklearn.tree._export._BaseTreeExporter.__init__": {
  "data": {
   "lineno": 198
  },
  "type": "function"
 },
 "sklearn.tree._export._BaseTreeExporter.get_color": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "float",
    "int",
    "len",
    "list",
    "numpy.argmax",
    "round",
    "sorted",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sklearn.tree._export._BaseTreeExporter.get_fill_color": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "len",
    "numpy.max",
    "numpy.min",
    "numpy.unique",
    "sklearn.tree._export._color_brew"
   ]
  },
  "type": "function"
 },
 "sklearn.tree._export._BaseTreeExporter.node_to_str": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "float",
    "int",
    "isinstance",
    "len",
    "numpy.all",
    "numpy.argmax",
    "numpy.around",
    "numpy.equal",
    "numpy.mod",
    "round",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.tree._export._DOTTreeExporter": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": [
    "sklearn.tree._export._BaseTreeExporter"
   ]
  },
  "type": "class"
 },
 "sklearn.tree._export._DOTTreeExporter.__init__": {
  "data": {
   "lineno": 370,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "numbers.Integral",
    "sklearn.tree._export.SENTINEL",
    "super",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.tree._export._DOTTreeExporter.export": {
  "data": {
   "lineno": 408,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "len"
   ]
  },
  "type": "function"
 },
 "sklearn.tree._export._DOTTreeExporter.head": {
  "data": {
   "lineno": 438,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "sklearn.tree._export._DOTTreeExporter.recurse": {
  "data": {
   "lineno": 465,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.tree._export._DOTTreeExporter.tail": {
  "data": {
   "lineno": 429,
   "symbols_in_volume": [
    "sorted"
   ]
  },
  "type": "function"
 },
 "sklearn.tree._export._MPLTreeExporter": {
  "data": {
   "lineno": 527,
   "symbols_in_volume": [
    "sklearn.tree._export._BaseTreeExporter"
   ]
  },
  "type": "class"
 },
 "sklearn.tree._export._MPLTreeExporter.__init__": {
  "data": {
   "lineno": 528,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "isinstance",
    "numbers.Integral",
    "super",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.tree._export._MPLTreeExporter._make_tree": {
  "data": {
   "lineno": 562,
   "symbols_in_volume": [
    "Tree"
   ]
  },
  "type": "function"
 },
 "sklearn.tree._export._MPLTreeExporter.export": {
  "data": {
   "lineno": 576,
   "symbols_in_volume": [
    "buchheim",
    "isinstance",
    "matplotlib.pyplot.gca",
    "matplotlib.text.Annotation",
    "max",
    "min"
   ]
  },
  "type": "function"
 },
 "sklearn.tree._export._MPLTreeExporter.recurse": {
  "data": {
   "lineno": 627,
   "symbols_in_volume": [
    "dict",
    "matplotlib.pyplot.rcParams"
   ]
  },
  "type": "function"
 },
 "sklearn.tree._export._color_brew": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "abs",
    "int",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "sklearn.tree._export._compute_depth": {
  "data": {
   "lineno": 798,
   "symbols_in_volume": [
    "compute_depth_",
    "max"
   ]
  },
  "type": "function"
 },
 "sklearn.tree._export._compute_depth.compute_depth_": {
  "data": {
   "lineno": 802,
   "symbols_in_volume": [
    "compute_depth_"
   ]
  },
  "type": "function"
 },
 "sklearn.tree._export.export_graphviz": {
  "data": {
   "lineno": 665,
   "symbols_in_volume": [
    "check_is_fitted",
    "io.StringIO",
    "isinstance",
    "open",
    "sklearn.tree._export._DOTTreeExporter",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.tree._export.export_text": {
  "data": {
   "lineno": 818,
   "symbols_in_volume": [
    "ValueError",
    "check_is_fitted",
    "is_classifier",
    "isinstance",
    "len",
    "print_tree_recurse"
   ]
  },
  "type": "function"
 },
 "sklearn.tree._export.export_text._add_leaf": {
  "data": {
   "lineno": 914,
   "symbols_in_volume": [
    "isinstance",
    "sklearn.tree._export.export_text",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.tree._export.export_text.print_tree_recurse": {
  "data": {
   "lineno": 925,
   "symbols_in_volume": [
    "_add_leaf",
    "numpy.argmax",
    "print_tree_recurse",
    "sklearn.tree._export._compute_depth",
    "sklearn.tree._export.export_text"
   ]
  },
  "type": "function"
 },
 "sklearn.tree._export.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.tree._export.plot_tree": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "FutureWarning",
    "check_is_fitted",
    "sklearn.tree._export._MPLTreeExporter",
    "sklearn.tree._export.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.tree._export.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "sklearn.tree._export.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.tree._reingold_tilford": {
  "data": {},
  "type": "module"
 },
 "sklearn.tree._reingold_tilford.DrawTree": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "class"
 },
 "sklearn.tree._reingold_tilford.DrawTree.__init__": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "enumerate",
    "sklearn.tree._reingold_tilford.DrawTree"
   ]
  },
  "type": "function"
 },
 "sklearn.tree._reingold_tilford.DrawTree.__repr__": {
  "data": {
   "lineno": 50
  },
  "type": "function"
 },
 "sklearn.tree._reingold_tilford.DrawTree.__str__": {
  "data": {
   "lineno": 47
  },
  "type": "function"
 },
 "sklearn.tree._reingold_tilford.DrawTree.get_lmost_sibling": {
  "data": {
   "lineno": 40
  },
  "type": "function"
 },
 "sklearn.tree._reingold_tilford.DrawTree.lbrother": {
  "data": {
   "lineno": 30
  },
  "type": "function"
 },
 "sklearn.tree._reingold_tilford.DrawTree.left": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "sklearn.tree._reingold_tilford.DrawTree.max_extents": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "numpy.max"
   ]
  },
  "type": "function"
 },
 "sklearn.tree._reingold_tilford.DrawTree.right": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "sklearn.tree._reingold_tilford.Tree": {
  "data": {
   "lineno": 181
  },
  "type": "class"
 },
 "sklearn.tree._reingold_tilford.Tree.__init__": {
  "data": {
   "lineno": 182
  },
  "type": "function"
 },
 "sklearn.tree._reingold_tilford.ancestor": {
  "data": {
   "lineno": 157
  },
  "type": "function"
 },
 "sklearn.tree._reingold_tilford.apportion": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "sklearn.tree._reingold_tilford.ancestor",
    "sklearn.tree._reingold_tilford.move_subtree"
   ]
  },
  "type": "function"
 },
 "sklearn.tree._reingold_tilford.buchheim": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "min",
    "sklearn.tree._reingold_tilford.DrawTree",
    "sklearn.tree._reingold_tilford.first_walk",
    "sklearn.tree._reingold_tilford.second_walk",
    "sklearn.tree._reingold_tilford.third_walk"
   ]
  },
  "type": "function"
 },
 "sklearn.tree._reingold_tilford.execute_shifts": {
  "data": {
   "lineno": 147
  },
  "type": "function"
 },
 "sklearn.tree._reingold_tilford.first_walk": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "len",
    "sklearn.tree._reingold_tilford.apportion",
    "sklearn.tree._reingold_tilford.execute_shifts"
   ]
  },
  "type": "function"
 },
 "sklearn.tree._reingold_tilford.move_subtree": {
  "data": {
   "lineno": 135
  },
  "type": "function"
 },
 "sklearn.tree._reingold_tilford.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.tree._reingold_tilford.second_walk": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "min"
   ]
  },
  "type": "function"
 },
 "sklearn.tree._reingold_tilford.third_walk": {
  "data": {
   "lineno": 67
  },
  "type": "function"
 },
 "sklearn.tree.setup": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.distutils.core.setup",
    "sklearn.tree.setup.configuration"
   ]
  },
  "type": "module"
 },
 "sklearn.tree.setup.Configuration": {
  "data": {
   "shadows": "numpy.distutils.misc_util.Configuration"
  },
  "type": "import"
 },
 "sklearn.tree.setup.configuration": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "numpy.distutils.misc_util.Configuration",
    "sklearn.tree.setup.numpy",
    "sklearn.tree.setup.os"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.setup.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.tree.setup.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "sklearn.tree.setup.setup": {
  "data": {
   "shadows": "numpy.distutils.core.setup"
  },
  "type": "import"
 },
 "sklearn.tree.tests": {
  "data": {},
  "type": "module"
 },
 "sklearn.tree.tests.test_export": {
  "data": {},
  "type": "module"
 },
 "sklearn.tree.tests.test_export.DecisionTreeClassifier": {
  "data": {
   "shadows": "sklearn.tree.DecisionTreeClassifier"
  },
  "type": "import"
 },
 "sklearn.tree.tests.test_export.DecisionTreeRegressor": {
  "data": {
   "shadows": "sklearn.tree.DecisionTreeRegressor"
  },
  "type": "import"
 },
 "sklearn.tree.tests.test_export.GradientBoostingClassifier": {
  "data": {
   "shadows": "sklearn.ensemble.GradientBoostingClassifier"
  },
  "type": "import"
 },
 "sklearn.tree.tests.test_export.NotFittedError": {
  "data": {
   "shadows": "sklearn.exceptions.NotFittedError"
  },
  "type": "import"
 },
 "sklearn.tree.tests.test_export.RandomState": {
  "data": {
   "shadows": "numpy.random.RandomState"
  },
  "type": "import"
 },
 "sklearn.tree.tests.test_export.StringIO": {
  "data": {
   "shadows": "io.StringIO"
  },
  "type": "import"
 },
 "sklearn.tree.tests.test_export.X": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "sklearn.tree.tests.test_export.dedent": {
  "data": {
   "shadows": "textwrap.dedent"
  },
  "type": "import"
 },
 "sklearn.tree.tests.test_export.export_graphviz": {
  "data": {
   "shadows": "sklearn.tree.export_graphviz"
  },
  "type": "import"
 },
 "sklearn.tree.tests.test_export.export_text": {
  "data": {
   "shadows": "sklearn.tree.export_text"
  },
  "type": "import"
 },
 "sklearn.tree.tests.test_export.finditer": {
  "data": {
   "shadows": "re.finditer"
  },
  "type": "import"
 },
 "sklearn.tree.tests.test_export.is_classifier": {
  "data": {
   "shadows": "sklearn.base.is_classifier"
  },
  "type": "import"
 },
 "sklearn.tree.tests.test_export.plot_tree": {
  "data": {
   "shadows": "sklearn.tree.plot_tree"
  },
  "type": "import"
 },
 "sklearn.tree.tests.test_export.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.tree.tests.test_export.search": {
  "data": {
   "shadows": "re.search"
  },
  "type": "import"
 },
 "sklearn.tree.tests.test_export.test_export_text": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": [
    "sklearn.tree.DecisionTreeClassifier",
    "sklearn.tree.DecisionTreeRegressor",
    "sklearn.tree.export_text",
    "sklearn.tree.tests.test_export.X",
    "sklearn.tree.tests.test_export.y",
    "textwrap.dedent"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.tests.test_export.test_export_text_errors": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.tree.DecisionTreeClassifier",
    "sklearn.tree.export_text",
    "sklearn.tree.tests.test_export.X",
    "sklearn.tree.tests.test_export.pytest",
    "sklearn.tree.tests.test_export.y"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.tests.test_export.test_friedman_mse_in_graphviz": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "io.StringIO",
    "re.finditer",
    "sklearn.ensemble.GradientBoostingClassifier",
    "sklearn.tree.DecisionTreeRegressor",
    "sklearn.tree.export_graphviz",
    "sklearn.tree.tests.test_export.X",
    "sklearn.tree.tests.test_export.y"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.tests.test_export.test_graphviz_errors": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "IndexError",
    "TypeError",
    "ValueError",
    "io.StringIO",
    "sklearn.exceptions.NotFittedError",
    "sklearn.tree.DecisionTreeClassifier",
    "sklearn.tree.export_graphviz",
    "sklearn.tree.tests.test_export.X",
    "sklearn.tree.tests.test_export.pytest",
    "sklearn.tree.tests.test_export.y"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.tests.test_export.test_graphviz_toy": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "sklearn.tree.DecisionTreeClassifier",
    "sklearn.tree.DecisionTreeRegressor",
    "sklearn.tree.export_graphviz",
    "sklearn.tree.tests.test_export.X",
    "sklearn.tree.tests.test_export.w",
    "sklearn.tree.tests.test_export.y",
    "sklearn.tree.tests.test_export.y2",
    "sklearn.tree.tests.test_export.y_degraded"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.tests.test_export.test_not_fitted_tree": {
  "data": {
   "lineno": 464,
   "symbols_in_volume": [
    "sklearn.exceptions.NotFittedError",
    "sklearn.tree.DecisionTreeRegressor",
    "sklearn.tree.plot_tree",
    "sklearn.tree.tests.test_export.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.tests.test_export.test_plot_tree_entropy": {
  "data": {
   "lineno": 415,
   "symbols_in_volume": [
    "len",
    "sklearn.tree.DecisionTreeClassifier",
    "sklearn.tree.plot_tree",
    "sklearn.tree.tests.test_export.X",
    "sklearn.tree.tests.test_export.y"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.tests.test_export.test_plot_tree_gini": {
  "data": {
   "lineno": 434,
   "symbols_in_volume": [
    "len",
    "sklearn.tree.DecisionTreeClassifier",
    "sklearn.tree.plot_tree",
    "sklearn.tree.tests.test_export.X",
    "sklearn.tree.tests.test_export.y"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.tests.test_export.test_plot_tree_rotate_deprecation": {
  "data": {
   "lineno": 454,
   "symbols_in_volume": [
    "FutureWarning",
    "sklearn.tree.DecisionTreeClassifier",
    "sklearn.tree.plot_tree",
    "sklearn.tree.tests.test_export.X",
    "sklearn.tree.tests.test_export.pytest",
    "sklearn.tree.tests.test_export.y"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.tests.test_export.test_precision": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "len",
    "numpy.random.RandomState",
    "re.finditer",
    "re.search",
    "sklearn.base.is_classifier",
    "sklearn.tree.DecisionTreeClassifier",
    "sklearn.tree.DecisionTreeRegressor",
    "sklearn.tree.export_graphviz",
    "sklearn.tree.tests.test_export.X",
    "sklearn.tree.tests.test_export.y",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.tests.test_export.w": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "sklearn.tree.tests.test_export.y": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "sklearn.tree.tests.test_export.y2": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "sklearn.tree.tests.test_export.y_degraded": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "sklearn.tree.tests.test_reingold_tilford": {
  "data": {
   "symbols_in_volume": [
    "sklearn.tree._reingold_tilford.Tree"
   ]
  },
  "type": "module"
 },
 "sklearn.tree.tests.test_reingold_tilford.Tree": {
  "data": {
   "shadows": "sklearn.tree._reingold_tilford.Tree"
  },
  "type": "import"
 },
 "sklearn.tree.tests.test_reingold_tilford.bigger_tree": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "sklearn.tree.tests.test_reingold_tilford.buchheim": {
  "data": {
   "shadows": "sklearn.tree._reingold_tilford.buchheim"
  },
  "type": "import"
 },
 "sklearn.tree.tests.test_reingold_tilford.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.tree.tests.test_reingold_tilford.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.tree.tests.test_reingold_tilford.simple_tree": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "sklearn.tree.tests.test_reingold_tilford.test_buchheim": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "len",
    "numpy.unique",
    "sklearn.tree._reingold_tilford.buchheim",
    "sklearn.tree.tests.test_reingold_tilford.bigger_tree",
    "sklearn.tree.tests.test_reingold_tilford.pytest",
    "sklearn.tree.tests.test_reingold_tilford.simple_tree",
    "walk_tree"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.tests.test_reingold_tilford.test_buchheim.walk_tree": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "len",
    "walk_tree"
   ]
  },
  "type": "function"
 },
 "sklearn.utils": {
  "data": {
   "symbols_in_volume": [
    "sklearn.utils.platform",
    "sklearn.utils.struct"
   ]
  },
  "type": "module"
 },
 "sklearn.utils.Bunch": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "class"
 },
 "sklearn.utils.Bunch.__dir__": {
  "data": {
   "lineno": 89
  },
  "type": "function"
 },
 "sklearn.utils.Bunch.__getattr__": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "AttributeError",
    "KeyError"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.Bunch.__init__": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.Bunch.__setattr__": {
  "data": {
   "lineno": 86
  },
  "type": "function"
 },
 "sklearn.utils.Bunch.__setstate__": {
  "data": {
   "lineno": 98
  },
  "type": "function"
 },
 "sklearn.utils.IS_PYPY": {
  "data": {
   "lineno": 57
  },
  "type": "constant"
 },
 "sklearn.utils.Path": {
  "data": {
   "shadows": "pathlib.Path"
  },
  "type": "import"
 },
 "sklearn.utils.Sequence": {
  "data": {
   "shadows": "collections.abc.Sequence"
  },
  "type": "import"
 },
 "sklearn.utils._IS_32BIT": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "sklearn.utils.__all__": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "sklearn.utils._approximate_mode": {
  "data": {
   "lineno": 979,
   "symbols_in_volume": [
    "check_random_state",
    "int",
    "len",
    "min",
    "numpy.floor",
    "numpy.sort",
    "numpy.unique",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "sklearn.utils._arpack": {
  "data": {},
  "type": "module"
 },
 "sklearn.utils._arpack._init_arpack_v0": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.utils._array_indexing": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "numpy.asarray",
    "parse_version",
    "scipy.sparse.issparse",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sklearn.utils._chunk_generator": {
  "data": {
   "lineno": 664,
   "symbols_in_volume": [
    "itertools.islice",
    "list"
   ]
  },
  "type": "function"
 },
 "sklearn.utils._determine_key_type": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "KeyError",
    "TypeError",
    "ValueError",
    "bool",
    "hasattr",
    "int",
    "isinstance",
    "len",
    "list",
    "numpy.bool_",
    "set",
    "slice",
    "str",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.utils._encode": {
  "data": {},
  "type": "module"
 },
 "sklearn.utils._encode.MissingValues": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "bool",
    "typing.NamedTuple"
   ]
  },
  "type": "class"
 },
 "sklearn.utils._encode.MissingValues.to_list": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "sklearn.utils._encode.NamedTuple": {
  "data": {
   "shadows": "typing.NamedTuple"
  },
  "type": "import"
 },
 "sklearn.utils._encode._check_unknown": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "bool",
    "is_valid",
    "len",
    "list",
    "numpy.array",
    "numpy.in1d",
    "numpy.isnan",
    "numpy.nan",
    "numpy.ones",
    "numpy.setdiff1d",
    "numpy.unique",
    "set",
    "sklearn.utils._encode._extract_missing"
   ]
  },
  "type": "function"
 },
 "sklearn.utils._encode._check_unknown.is_valid": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "is_scalar_nan"
   ]
  },
  "type": "function"
 },
 "sklearn.utils._encode._encode": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "numpy.searchsorted",
    "sklearn.utils._encode._check_unknown",
    "sklearn.utils._encode._map_to_integer",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.utils._encode._extract_missing": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "is_scalar_nan",
    "len",
    "sklearn.utils._encode.MissingValues"
   ]
  },
  "type": "function"
 },
 "sklearn.utils._encode._map_to_integer": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "enumerate",
    "numpy.array",
    "sklearn.utils._encode._nandict"
   ]
  },
  "type": "function"
 },
 "sklearn.utils._encode._nandict": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "class"
 },
 "sklearn.utils._encode._nandict.__init__": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "is_scalar_nan",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.utils._encode._nandict.__missing__": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "KeyError",
    "hasattr",
    "is_scalar_nan"
   ]
  },
  "type": "function"
 },
 "sklearn.utils._encode._unique": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "is_scalar_nan",
    "numpy.nan",
    "numpy.searchsorted",
    "numpy.unique",
    "object",
    "sklearn.utils._encode._unique_python"
   ]
  },
  "type": "function"
 },
 "sklearn.utils._encode._unique_python": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "TypeError",
    "numpy.array",
    "set",
    "sklearn.utils._encode._extract_missing",
    "sklearn.utils._encode._map_to_integer",
    "sorted",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.utils._encode.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.utils._estimator_html_repr": {
  "data": {},
  "type": "module"
 },
 "sklearn.utils._estimator_html_repr.StringIO": {
  "data": {
   "shadows": "io.StringIO"
  },
  "type": "import"
 },
 "sklearn.utils._estimator_html_repr._STYLE": {
  "data": {
   "lineno": 148
  },
  "type": "constant"
 },
 "sklearn.utils._estimator_html_repr._VisualBlock": {
  "data": {
   "lineno": 10
  },
  "type": "class"
 },
 "sklearn.utils._estimator_html_repr._VisualBlock.__init__": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "sklearn.utils._estimator_html_repr._VisualBlock._sk_visual_block_": {
  "data": {
   "lineno": 52
  },
  "type": "function"
 },
 "sklearn.utils._estimator_html_repr._get_visual_block": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "AttributeError",
    "contextlib.suppress",
    "hasattr",
    "isinstance",
    "len",
    "sklearn.utils._estimator_html_repr._VisualBlock",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.utils._estimator_html_repr._write_estimator_html": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "sklearn.config_context",
    "sklearn.utils._estimator_html_repr._VisualBlock",
    "sklearn.utils._estimator_html_repr._get_visual_block",
    "sklearn.utils._estimator_html_repr._write_label_html",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.utils._estimator_html_repr._write_label_html": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "sklearn.utils._estimator_html_repr.html",
    "sklearn.utils._estimator_html_repr.uuid"
   ]
  },
  "type": "function"
 },
 "sklearn.utils._estimator_html_repr.closing": {
  "data": {
   "shadows": "contextlib.closing"
  },
  "type": "import"
 },
 "sklearn.utils._estimator_html_repr.config_context": {
  "data": {
   "shadows": "sklearn.config_context"
  },
  "type": "import"
 },
 "sklearn.utils._estimator_html_repr.estimator_html_repr": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "contextlib.closing",
    "io.StringIO",
    "sklearn.utils._estimator_html_repr._STYLE",
    "sklearn.utils._estimator_html_repr._write_estimator_html",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.utils._estimator_html_repr.html": {
  "data": {
   "shadows": "html"
  },
  "type": "import"
 },
 "sklearn.utils._estimator_html_repr.suppress": {
  "data": {
   "shadows": "contextlib.suppress"
  },
  "type": "import"
 },
 "sklearn.utils._estimator_html_repr.uuid": {
  "data": {
   "shadows": "uuid"
  },
  "type": "import"
 },
 "sklearn.utils._get_column_indices": {
  "data": {
   "lineno": 349,
   "symbols_in_volume": [
    "AttributeError",
    "IndexError",
    "KeyError",
    "ValueError",
    "isinstance",
    "list",
    "numpy.arange",
    "numpy.atleast_1d",
    "range",
    "sklearn.utils._determine_key_type",
    "sklearn.utils._safe_indexing",
    "sklearn.utils.numbers",
    "slice",
    "str",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sklearn.utils._joblib": {
  "data": {
   "symbols_in_volume": [
    "warnings.catch_warnings",
    "warnings.simplefilter"
   ]
  },
  "type": "module"
 },
 "sklearn.utils._joblib.Memory": {
  "data": {
   "shadows": "joblib.Memory"
  },
  "type": "import"
 },
 "sklearn.utils._joblib.Parallel": {
  "data": {
   "shadows": "joblib.Parallel"
  },
  "type": "import"
 },
 "sklearn.utils._joblib.__all__": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "sklearn.utils._joblib.__version__": {
  "data": {
   "shadows": "joblib.__version__"
  },
  "type": "import"
 },
 "sklearn.utils._joblib._warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.utils._joblib.cpu_count": {
  "data": {
   "shadows": "joblib.cpu_count"
  },
  "type": "import"
 },
 "sklearn.utils._joblib.delayed": {
  "data": {
   "shadows": "joblib.delayed"
  },
  "type": "import"
 },
 "sklearn.utils._joblib.dump": {
  "data": {
   "shadows": "joblib.dump"
  },
  "type": "import"
 },
 "sklearn.utils._joblib.effective_n_jobs": {
  "data": {
   "shadows": "joblib.effective_n_jobs"
  },
  "type": "import"
 },
 "sklearn.utils._joblib.hash": {
  "data": {
   "shadows": "joblib.hash"
  },
  "type": "import"
 },
 "sklearn.utils._joblib.joblib": {
  "data": {
   "shadows": "joblib"
  },
  "type": "import"
 },
 "sklearn.utils._joblib.load": {
  "data": {
   "shadows": "joblib.load"
  },
  "type": "import"
 },
 "sklearn.utils._joblib.logger": {
  "data": {
   "shadows": "joblib.logger"
  },
  "type": "import"
 },
 "sklearn.utils._joblib.parallel_backend": {
  "data": {
   "shadows": "joblib.parallel_backend"
  },
  "type": "import"
 },
 "sklearn.utils._joblib.register_parallel_backend": {
  "data": {
   "shadows": "joblib.register_parallel_backend"
  },
  "type": "import"
 },
 "sklearn.utils._list_indexing": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "isinstance",
    "itertools.compress",
    "list",
    "numpy.isscalar",
    "slice"
   ]
  },
  "type": "function"
 },
 "sklearn.utils._mask": {
  "data": {},
  "type": "module"
 },
 "sklearn.utils._mask._get_dense_mask": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "_object_dtype_isnan",
    "bool",
    "is_scalar_nan",
    "numpy.isnan",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "sklearn.utils._mask._get_mask": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "bool",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.issparse",
    "sklearn.utils._mask._get_dense_mask",
    "sparse_constructor"
   ]
  },
  "type": "function"
 },
 "sklearn.utils._mask.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.utils._mask.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.utils._message_with_time": {
  "data": {
   "lineno": 854,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "sklearn.utils._mocking": {
  "data": {},
  "type": "module"
 },
 "sklearn.utils._mocking.ArraySlicingWrapper": {
  "data": {
   "lineno": 7
  },
  "type": "class"
 },
 "sklearn.utils._mocking.ArraySlicingWrapper.__getitem__": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "sklearn.utils._mocking.MockDataFrame"
   ]
  },
  "type": "function"
 },
 "sklearn.utils._mocking.ArraySlicingWrapper.__init__": {
  "data": {
   "lineno": 14
  },
  "type": "function"
 },
 "sklearn.utils._mocking.CheckingClassifier": {
  "data": {
   "lineno": 53
  },
  "type": "class"
 },
 "sklearn.utils._mocking.CheckingClassifier.__init__": {
  "data": {
   "lineno": 114
  },
  "type": "function"
 },
 "sklearn.utils._mocking.CheckingClassifier._check_X_y": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "bool",
    "check_is_fitted",
    "isinstance",
    "numpy.bool_"
   ]
  },
  "type": "function"
 },
 "sklearn.utils._mocking.CheckingClassifier._more_tags": {
  "data": {
   "lineno": 297
  },
  "type": "function"
 },
 "sklearn.utils._mocking.CheckingClassifier.decision_function": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "_num_samples",
    "len",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "sklearn.utils._mocking.CheckingClassifier.fit": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "AssertionError",
    "_num_samples",
    "check_array",
    "list",
    "numpy.shape",
    "numpy.unique",
    "set"
   ]
  },
  "type": "function"
 },
 "sklearn.utils._mocking.CheckingClassifier.predict": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "_num_samples",
    "int",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "sklearn.utils._mocking.CheckingClassifier.predict_proba": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "_num_samples",
    "len",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "sklearn.utils._mocking.CheckingClassifier.score": {
  "data": {
   "lineno": 270
  },
  "type": "function"
 },
 "sklearn.utils._mocking.MockDataFrame": {
  "data": {
   "lineno": 21
  },
  "type": "class"
 },
 "sklearn.utils._mocking.MockDataFrame.__array__": {
  "data": {
   "lineno": 40
  },
  "type": "function"
 },
 "sklearn.utils._mocking.MockDataFrame.__eq__": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "sklearn.utils._mocking.MockDataFrame"
   ]
  },
  "type": "function"
 },
 "sklearn.utils._mocking.MockDataFrame.__init__": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "sklearn.utils._mocking.ArraySlicingWrapper"
   ]
  },
  "type": "function"
 },
 "sklearn.utils._mocking.MockDataFrame.__len__": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "sklearn.utils._mocking.MockDataFrame.__ne__": {
  "data": {
   "lineno": 49
  },
  "type": "function"
 },
 "sklearn.utils._mocking.NoSampleWeightWrapper": {
  "data": {
   "lineno": 301
  },
  "type": "class"
 },
 "sklearn.utils._mocking.NoSampleWeightWrapper.__init__": {
  "data": {
   "lineno": 310
  },
  "type": "function"
 },
 "sklearn.utils._mocking.NoSampleWeightWrapper._more_tags": {
  "data": {
   "lineno": 322
  },
  "type": "function"
 },
 "sklearn.utils._mocking.NoSampleWeightWrapper.fit": {
  "data": {
   "lineno": 313
  },
  "type": "function"
 },
 "sklearn.utils._mocking.NoSampleWeightWrapper.predict": {
  "data": {
   "lineno": 316
  },
  "type": "function"
 },
 "sklearn.utils._mocking.NoSampleWeightWrapper.predict_proba": {
  "data": {
   "lineno": 319
  },
  "type": "function"
 },
 "sklearn.utils._mocking.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.utils._pandas_indexing": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "hasattr",
    "isinstance",
    "list",
    "numpy.asarray",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sklearn.utils._pprint": {
  "data": {},
  "type": "module"
 },
 "sklearn.utils._pprint.KeyValTuple": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "tuple"
   ]
  },
  "type": "class"
 },
 "sklearn.utils._pprint.KeyValTuple.__repr__": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.utils._pprint.KeyValTupleParam": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "sklearn.utils._pprint.KeyValTuple"
   ]
  },
  "type": "class"
 },
 "sklearn.utils._pprint.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "sklearn.utils._pprint._EstimatorPrettyPrinter": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "sklearn.utils._pprint.KeyValTuple",
    "sklearn.utils._pprint.pprint"
   ]
  },
  "type": "class"
 },
 "sklearn.utils._pprint._EstimatorPrettyPrinter.__init__": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "get_config",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.utils._pprint._EstimatorPrettyPrinter._format_dict_items": {
  "data": {
   "lineno": 201
  },
  "type": "function"
 },
 "sklearn.utils._pprint._EstimatorPrettyPrinter._format_items": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "StopIteration",
    "iter",
    "len",
    "next",
    "write"
   ]
  },
  "type": "function"
 },
 "sklearn.utils._pprint._EstimatorPrettyPrinter._format_params": {
  "data": {
   "lineno": 206
  },
  "type": "function"
 },
 "sklearn.utils._pprint._EstimatorPrettyPrinter._format_params_or_dict_items": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "StopIteration",
    "class_",
    "iter",
    "len",
    "next",
    "object",
    "sklearn.utils._pprint.KeyValTuple",
    "sklearn.utils._pprint.KeyValTupleParam",
    "write"
   ]
  },
  "type": "function"
 },
 "sklearn.utils._pprint._EstimatorPrettyPrinter._pprint_estimator": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "len",
    "object",
    "object.__class__.__name__",
    "object.get_params",
    "sklearn.utils._pprint._changed_params",
    "sorted"
   ]
  },
  "type": "function"
 },
 "sklearn.utils._pprint._EstimatorPrettyPrinter._pprint_key_val_tuple": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "object",
    "sklearn.utils._pprint.KeyValTupleParam"
   ]
  },
  "type": "function"
 },
 "sklearn.utils._pprint._EstimatorPrettyPrinter.format": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "object",
    "sklearn.utils._pprint._safe_repr"
   ]
  },
  "type": "function"
 },
 "sklearn.utils._pprint._changed_params": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "getattr",
    "has_changed",
    "sklearn.utils._pprint.inspect"
   ]
  },
  "type": "function"
 },
 "sklearn.utils._pprint._changed_params.has_changed": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "is_scalar_nan",
    "isinstance",
    "repr",
    "sklearn.utils._pprint.inspect"
   ]
  },
  "type": "function"
 },
 "sklearn.utils._pprint._safe_repr": {
  "data": {
   "lineno": 344,
   "symbols_in_volume": [
    "append",
    "dict",
    "dict.__repr__",
    "format",
    "getattr",
    "id",
    "issubclass",
    "len",
    "list",
    "list.__repr__",
    "object",
    "object.get_params",
    "object.items",
    "repr",
    "saferepr",
    "sklearn.utils._pprint._changed_params",
    "sklearn.utils._pprint.pprint",
    "sorted",
    "tuple",
    "tuple.__repr__",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.utils._pprint.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "sklearn.utils._pprint.pprint": {
  "data": {
   "shadows": "pprint"
  },
  "type": "import"
 },
 "sklearn.utils._print_elapsed_time": {
  "data": {
   "lineno": 881,
   "symbols_in_volume": [
    "contextlib.contextmanager",
    "print",
    "sklearn.utils._message_with_time",
    "sklearn.utils.timeit"
   ]
  },
  "type": "function"
 },
 "sklearn.utils._safe_indexing": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "ValueError",
    "hasattr",
    "sklearn.utils._array_indexing",
    "sklearn.utils._determine_key_type",
    "sklearn.utils._list_indexing",
    "sklearn.utils._pandas_indexing",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.utils._show_versions": {
  "data": {},
  "type": "module"
 },
 "sklearn.utils._show_versions._get_deps_info": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "ImportError",
    "get_version",
    "sklearn.utils._show_versions.importlib",
    "sklearn.utils._show_versions.sys"
   ]
  },
  "type": "function"
 },
 "sklearn.utils._show_versions._get_deps_info.get_version": {
  "data": {
   "lineno": 57
  },
  "type": "function"
 },
 "sklearn.utils._show_versions._get_sys_info": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "dict",
    "sklearn.utils._show_versions.platform",
    "sklearn.utils._show_versions.sys"
   ]
  },
  "type": "function"
 },
 "sklearn.utils._show_versions.importlib": {
  "data": {
   "shadows": "importlib"
  },
  "type": "import"
 },
 "sklearn.utils._show_versions.platform": {
  "data": {
   "shadows": "platform"
  },
  "type": "import"
 },
 "sklearn.utils._show_versions.show_versions": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "_openmp_parallelism_enabled",
    "print",
    "sklearn.utils._show_versions._get_deps_info",
    "sklearn.utils._show_versions._get_sys_info"
   ]
  },
  "type": "function"
 },
 "sklearn.utils._show_versions.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "sklearn.utils._tags": {
  "data": {
   "symbols_in_volume": [
    "numpy.float64"
   ]
  },
  "type": "module"
 },
 "sklearn.utils._tags._DEFAULT_TAGS": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "sklearn.utils._tags._safe_tags": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "ValueError",
    "hasattr",
    "sklearn.utils._tags._DEFAULT_TAGS"
   ]
  },
  "type": "function"
 },
 "sklearn.utils._tags.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.utils._testing": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "NameError",
    "sklearn.utils.IS_PYPY",
    "sklearn.utils._IS_32BIT",
    "sklearn.utils._testing._dummy",
    "sklearn.utils._testing.assert_raises_regex",
    "sklearn.utils._testing.joblib",
    "sklearn.utils._testing.os",
    "sklearn.utils._testing.pytest",
    "sklearn.utils._testing.sys",
    "sklearn.utils._testing.unittest",
    "unittest.TestCase"
   ]
  },
  "type": "module"
 },
 "sklearn.utils._testing.CalledProcessError": {
  "data": {
   "shadows": "subprocess.CalledProcessError"
  },
  "type": "import"
 },
 "sklearn.utils._testing.IS_PYPY": {
  "data": {
   "shadows": "sklearn.utils.IS_PYPY"
  },
  "type": "import"
 },
 "sklearn.utils._testing.Iterable": {
  "data": {
   "shadows": "collections.abc.Iterable"
  },
  "type": "import"
 },
 "sklearn.utils._testing.MinimalClassifier": {
  "data": {
   "lineno": 877
  },
  "type": "class"
 },
 "sklearn.utils._testing.MinimalClassifier.__init__": {
  "data": {
   "lineno": 888
  },
  "type": "function"
 },
 "sklearn.utils._testing.MinimalClassifier.fit": {
  "data": {
   "lineno": 899,
   "symbols_in_volume": [
    "numpy.unique",
    "sklearn.utils.multiclass.check_classification_targets",
    "sklearn.utils.validation.check_X_y"
   ]
  },
  "type": "function"
 },
 "sklearn.utils._testing.MinimalClassifier.get_params": {
  "data": {
   "lineno": 891
  },
  "type": "function"
 },
 "sklearn.utils._testing.MinimalClassifier.predict": {
  "data": {
   "lineno": 914
  },
  "type": "function"
 },
 "sklearn.utils._testing.MinimalClassifier.predict_proba": {
  "data": {
   "lineno": 906,
   "symbols_in_volume": [
    "numpy.float64",
    "numpy.zeros",
    "sklearn.utils.validation.check_array",
    "sklearn.utils.validation.check_is_fitted"
   ]
  },
  "type": "function"
 },
 "sklearn.utils._testing.MinimalClassifier.score": {
  "data": {
   "lineno": 919,
   "symbols_in_volume": [
    "sklearn.metrics.accuracy_score"
   ]
  },
  "type": "function"
 },
 "sklearn.utils._testing.MinimalClassifier.set_params": {
  "data": {
   "lineno": 894,
   "symbols_in_volume": [
    "setattr"
   ]
  },
  "type": "function"
 },
 "sklearn.utils._testing.MinimalRegressor": {
  "data": {
   "lineno": 924
  },
  "type": "class"
 },
 "sklearn.utils._testing.MinimalRegressor.__init__": {
  "data": {
   "lineno": 935
  },
  "type": "function"
 },
 "sklearn.utils._testing.MinimalRegressor.fit": {
  "data": {
   "lineno": 946,
   "symbols_in_volume": [
    "numpy.mean",
    "sklearn.utils.validation.check_X_y"
   ]
  },
  "type": "function"
 },
 "sklearn.utils._testing.MinimalRegressor.get_params": {
  "data": {
   "lineno": 938
  },
  "type": "function"
 },
 "sklearn.utils._testing.MinimalRegressor.predict": {
  "data": {
   "lineno": 952,
   "symbols_in_volume": [
    "numpy.ones",
    "sklearn.utils.validation.check_array",
    "sklearn.utils.validation.check_is_fitted"
   ]
  },
  "type": "function"
 },
 "sklearn.utils._testing.MinimalRegressor.score": {
  "data": {
   "lineno": 957,
   "symbols_in_volume": [
    "sklearn.metrics.r2_score"
   ]
  },
  "type": "function"
 },
 "sklearn.utils._testing.MinimalRegressor.set_params": {
  "data": {
   "lineno": 941,
   "symbols_in_volume": [
    "setattr"
   ]
  },
  "type": "function"
 },
 "sklearn.utils._testing.MinimalTransformer": {
  "data": {
   "lineno": 962
  },
  "type": "class"
 },
 "sklearn.utils._testing.MinimalTransformer.__init__": {
  "data": {
   "lineno": 973
  },
  "type": "function"
 },
 "sklearn.utils._testing.MinimalTransformer.fit": {
  "data": {
   "lineno": 984,
   "symbols_in_volume": [
    "sklearn.utils.validation.check_array"
   ]
  },
  "type": "function"
 },
 "sklearn.utils._testing.MinimalTransformer.fit_transform": {
  "data": {
   "lineno": 994
  },
  "type": "function"
 },
 "sklearn.utils._testing.MinimalTransformer.get_params": {
  "data": {
   "lineno": 976
  },
  "type": "function"
 },
 "sklearn.utils._testing.MinimalTransformer.set_params": {
  "data": {
   "lineno": 979,
   "symbols_in_volume": [
    "setattr"
   ]
  },
  "type": "function"
 },
 "sklearn.utils._testing.MinimalTransformer.transform": {
  "data": {
   "lineno": 989,
   "symbols_in_volume": [
    "sklearn.utils.validation.check_array",
    "sklearn.utils.validation.check_is_fitted"
   ]
  },
  "type": "function"
 },
 "sklearn.utils._testing.STDOUT": {
  "data": {
   "shadows": "subprocess.STDOUT"
  },
  "type": "import"
 },
 "sklearn.utils._testing.SkipTest": {
  "data": {
   "lineno": 70
  },
  "type": "constant"
 },
 "sklearn.utils._testing.TempMemmap": {
  "data": {
   "lineno": 495
  },
  "type": "class"
 },
 "sklearn.utils._testing.TempMemmap.__enter__": {
  "data": {
   "lineno": 506,
   "symbols_in_volume": [
    "sklearn.utils._testing.create_memmap_backed_data"
   ]
  },
  "type": "function"
 },
 "sklearn.utils._testing.TempMemmap.__exit__": {
  "data": {
   "lineno": 511,
   "symbols_in_volume": [
    "sklearn.utils._testing._delete_folder"
   ]
  },
  "type": "function"
 },
 "sklearn.utils._testing.TempMemmap.__init__": {
  "data": {
   "lineno": 502
  },
  "type": "function"
 },
 "sklearn.utils._testing.TestCase": {
  "data": {
   "shadows": "unittest.TestCase"
  },
  "type": "import"
 },
 "sklearn.utils._testing.TimeoutExpired": {
  "data": {
   "shadows": "subprocess.TimeoutExpired"
  },
  "type": "import"
 },
 "sklearn.utils._testing.WindowsError": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "sklearn.utils._testing._IS_32BIT": {
  "data": {
   "shadows": "sklearn.utils._IS_32BIT"
  },
  "type": "import"
 },
 "sklearn.utils._testing._IgnoreWarnings": {
  "data": {
   "lineno": 282
  },
  "type": "class"
 },
 "sklearn.utils._testing._IgnoreWarnings.__call__": {
  "data": {
   "lineno": 302
  },
  "type": "function"
 },
 "sklearn.utils._testing._IgnoreWarnings.__call__.wrapper": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "fn",
    "functools.wraps",
    "sklearn.utils._testing.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.utils._testing._IgnoreWarnings.__enter__": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "RuntimeError",
    "sklearn.utils._testing.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.utils._testing._IgnoreWarnings.__exit__": {
  "data": {
   "lineno": 330,
   "symbols_in_volume": [
    "RuntimeError"
   ]
  },
  "type": "function"
 },
 "sklearn.utils._testing._IgnoreWarnings.__init__": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": [
    "sklearn.utils._testing.sys"
   ]
  },
  "type": "function"
 },
 "sklearn.utils._testing._IgnoreWarnings.__repr__": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": [
    "sklearn.utils._testing.sys",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.utils._testing._Raises": {
  "data": {
   "lineno": 827,
   "symbols_in_volume": [
    "sklearn.utils._testing.contextlib"
   ]
  },
  "type": "class"
 },
 "sklearn.utils._testing._Raises.__exit__": {
  "data": {
   "lineno": 840,
   "symbols_in_volume": [
    "AssertionError",
    "any",
    "issubclass",
    "sklearn.utils._testing.re",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.utils._testing._Raises.__init__": {
  "data": {
   "lineno": 829,
   "symbols_in_volume": [
    "collections.abc.Iterable",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.utils._testing.__all__": {
  "data": {
   "lineno": 60
  },
  "type": "constant"
 },
 "sklearn.utils._testing._convert_container": {
  "data": {
   "lineno": 761,
   "symbols_in_volume": [
    "list",
    "numpy.asarray",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "sklearn.utils._testing.pytest",
    "slice",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sklearn.utils._testing._delete_folder": {
  "data": {
   "lineno": 480,
   "symbols_in_volume": [
    "sklearn.utils._testing.WindowsError",
    "sklearn.utils._testing.os",
    "sklearn.utils._testing.shutil",
    "sklearn.utils._testing.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.utils._testing._dummy": {
  "data": {
   "lineno": 68
  },
  "type": "constant"
 },
 "sklearn.utils._testing._get_args": {
  "data": {
   "lineno": 536,
   "symbols_in_volume": [
    "ValueError",
    "function",
    "inspect.signature",
    "len"
   ]
  },
  "type": "function"
 },
 "sklearn.utils._testing._get_func_name": {
  "data": {
   "lineno": 556,
   "symbols_in_volume": [
    "func",
    "func.__name__",
    "func.__qualname__",
    "sklearn.utils._testing.inspect"
   ]
  },
  "type": "function"
 },
 "sklearn.utils._testing.accuracy_score": {
  "data": {
   "shadows": "sklearn.metrics.accuracy_score"
  },
  "type": "import"
 },
 "sklearn.utils._testing.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "sklearn.utils._testing.assert_allclose_dense_sparse": {
  "data": {
   "lineno": 380,
   "symbols_in_volume": [
    "ValueError",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal",
    "scipy.sparse.issparse"
   ]
  },
  "type": "function"
 },
 "sklearn.utils._testing.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "sklearn.utils._testing.assert_approx_equal": {
  "data": {
   "shadows": "numpy.testing.assert_approx_equal"
  },
  "type": "import"
 },
 "sklearn.utils._testing.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.utils._testing.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.utils._testing.assert_array_less": {
  "data": {
   "shadows": "numpy.testing.assert_array_less"
  },
  "type": "import"
 },
 "sklearn.utils._testing.assert_dict_equal": {
  "data": {
   "lineno": 71
  },
  "type": "constant"
 },
 "sklearn.utils._testing.assert_no_warnings": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "AssertionError",
    "func",
    "func.__name__",
    "hasattr",
    "len",
    "numpy",
    "numpy.VisibleDeprecationWarning",
    "sklearn.utils._testing.warnings",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.utils._testing.assert_raise_message": {
  "data": {
   "lineno": 338,
   "symbols_in_volume": [
    "AssertionError",
    "function",
    "function.__name__",
    "isinstance",
    "str",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sklearn.utils._testing.assert_raises": {
  "data": {
   "lineno": 69
  },
  "type": "constant"
 },
 "sklearn.utils._testing.assert_raises_regex": {
  "data": {
   "lineno": 73
  },
  "type": "constant"
 },
 "sklearn.utils._testing.assert_raises_regexp": {
  "data": {
   "lineno": 77
  },
  "type": "constant"
 },
 "sklearn.utils._testing.assert_run_python_script": {
  "data": {
   "lineno": 708,
   "symbols_in_volume": [
    "AssertionError",
    "KeyError",
    "RuntimeError",
    "open",
    "os.path.dirname",
    "os.path.join",
    "os.path.normpath",
    "sklearn.utils._testing.os",
    "sklearn.utils._testing.sklearn",
    "sklearn.utils._testing.sys",
    "sklearn.utils._testing.tempfile",
    "subprocess.CalledProcessError",
    "subprocess.STDOUT",
    "subprocess.TimeoutExpired",
    "subprocess.check_output"
   ]
  },
  "type": "function"
 },
 "sklearn.utils._testing.assert_warns": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "AssertionError",
    "any",
    "func",
    "func.__name__",
    "hasattr",
    "len",
    "numpy",
    "numpy.VisibleDeprecationWarning",
    "sklearn.utils._testing.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.utils._testing.assert_warns_div0": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "AssertionError",
    "RuntimeWarning",
    "func",
    "numpy.divide",
    "numpy.errstate",
    "numpy.zeros",
    "sklearn.utils._testing.assert_warns",
    "sklearn.utils._testing.assert_warns_message"
   ]
  },
  "type": "function"
 },
 "sklearn.utils._testing.assert_warns_message": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "AssertionError",
    "any",
    "callable",
    "check_in_message",
    "enumerate",
    "func",
    "func.__name__",
    "hasattr",
    "issubclass",
    "len",
    "numpy",
    "numpy.VisibleDeprecationWarning",
    "sklearn.utils._testing.warnings",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.utils._testing.assert_warns_message.check_in_message": {
  "data": {
   "lineno": 176
  },
  "type": "function"
 },
 "sklearn.utils._testing.atexit": {
  "data": {
   "shadows": "atexit"
  },
  "type": "import"
 },
 "sklearn.utils._testing.check_X_y": {
  "data": {
   "shadows": "sklearn.utils.validation.check_X_y"
  },
  "type": "import"
 },
 "sklearn.utils._testing.check_array": {
  "data": {
   "shadows": "sklearn.utils.validation.check_array"
  },
  "type": "import"
 },
 "sklearn.utils._testing.check_classification_targets": {
  "data": {
   "shadows": "sklearn.utils.multiclass.check_classification_targets"
  },
  "type": "import"
 },
 "sklearn.utils._testing.check_docstring_parameters": {
  "data": {
   "lineno": 582,
   "symbols_in_volume": [
    "Exception",
    "RuntimeError",
    "filter",
    "func",
    "len",
    "list",
    "min",
    "numpydoc.docscrape.FunctionDoc",
    "range",
    "sklearn.utils._testing._get_args",
    "sklearn.utils._testing._get_func_name",
    "sklearn.utils._testing.difflib",
    "sklearn.utils._testing.inspect",
    "sklearn.utils._testing.pprint",
    "sklearn.utils._testing.warnings",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.utils._testing.check_is_fitted": {
  "data": {
   "shadows": "sklearn.utils.validation.check_is_fitted"
  },
  "type": "import"
 },
 "sklearn.utils._testing.check_output": {
  "data": {
   "shadows": "subprocess.check_output"
  },
  "type": "import"
 },
 "sklearn.utils._testing.check_skip_network": {
  "data": {
   "lineno": 475,
   "symbols_in_volume": [
    "int",
    "sklearn.utils._testing.SkipTest",
    "sklearn.utils._testing.os"
   ]
  },
  "type": "function"
 },
 "sklearn.utils._testing.contextlib": {
  "data": {
   "shadows": "contextlib"
  },
  "type": "import"
 },
 "sklearn.utils._testing.create_memmap_backed_data": {
  "data": {
   "lineno": 515,
   "symbols_in_volume": [
    "os.path.join",
    "sklearn.utils._testing._delete_folder",
    "sklearn.utils._testing.atexit",
    "sklearn.utils._testing.functools",
    "sklearn.utils._testing.joblib",
    "sklearn.utils._testing.tempfile"
   ]
  },
  "type": "function"
 },
 "sklearn.utils._testing.difflib": {
  "data": {
   "shadows": "difflib"
  },
  "type": "import"
 },
 "sklearn.utils._testing.docscrape": {
  "data": {
   "shadows": "numpydoc.docscrape"
  },
  "type": "import"
 },
 "sklearn.utils._testing.fails_if_pypy": {
  "data": {
   "lineno": 444
  },
  "type": "constant"
 },
 "sklearn.utils._testing.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "sklearn.utils._testing.if_safe_multiprocessing_with_blas": {
  "data": {
   "lineno": 468
  },
  "type": "constant"
 },
 "sklearn.utils._testing.ignore_warnings": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "ValueError",
    "Warning",
    "callable",
    "isinstance",
    "issubclass",
    "sklearn.utils._testing._IgnoreWarnings",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.utils._testing.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "sklearn.utils._testing.joblib": {
  "data": {
   "shadows": "joblib"
  },
  "type": "import"
 },
 "sklearn.utils._testing.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.utils._testing.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "sklearn.utils._testing.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "sklearn.utils._testing.pprint": {
  "data": {
   "shadows": "pprint"
  },
  "type": "import"
 },
 "sklearn.utils._testing.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.utils._testing.r2_score": {
  "data": {
   "shadows": "sklearn.metrics.r2_score"
  },
  "type": "import"
 },
 "sklearn.utils._testing.raises": {
  "data": {
   "lineno": 787,
   "symbols_in_volume": [
    "sklearn.utils._testing._Raises"
   ]
  },
  "type": "function"
 },
 "sklearn.utils._testing.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "sklearn.utils._testing.set_random_state": {
  "data": {
   "lineno": 421
  },
  "type": "function"
 },
 "sklearn.utils._testing.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "sklearn.utils._testing.signature": {
  "data": {
   "shadows": "inspect.signature"
  },
  "type": "import"
 },
 "sklearn.utils._testing.skip_if_32bit": {
  "data": {
   "lineno": 440
  },
  "type": "constant"
 },
 "sklearn.utils._testing.skip_if_no_parallel": {
  "data": {
   "lineno": 446
  },
  "type": "constant"
 },
 "sklearn.utils._testing.skip_travis": {
  "data": {
   "lineno": 442
  },
  "type": "constant"
 },
 "sklearn.utils._testing.sklearn": {
  "data": {
   "shadows": "sklearn"
  },
  "type": "import"
 },
 "sklearn.utils._testing.sp": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "sklearn.utils._testing.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "sklearn.utils._testing.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "sklearn.utils._testing.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "sklearn.utils._testing.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.utils._testing.wraps": {
  "data": {
   "shadows": "functools.wraps"
  },
  "type": "import"
 },
 "sklearn.utils._to_object_array": {
  "data": {
   "lineno": 786,
   "symbols_in_volume": [
    "len",
    "numpy.empty",
    "object"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.all_estimators": {
  "data": {
   "lineno": 1089,
   "symbols_in_volume": [
    "FutureWarning",
    "ValueError",
    "any",
    "ignore_warnings",
    "importlib.import_module",
    "is_abstract",
    "isinstance",
    "issubclass",
    "list",
    "operator.itemgetter",
    "pathlib.Path",
    "repr",
    "set",
    "sklearn.utils.IS_PYPY",
    "sklearn.utils.inspect",
    "sklearn.utils.pkgutil",
    "sorted",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.all_estimators.is_abstract": {
  "data": {
   "lineno": 1117,
   "symbols_in_volume": [
    "hasattr",
    "len"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.axis0_safe_slice": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "numpy.zeros",
    "sklearn.utils.safe_mask"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.check_matplotlib_support": {
  "data": {
   "lineno": 1048,
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.check_pandas_support": {
  "data": {
   "lineno": 1068,
   "symbols_in_volume": [
    "ImportError",
    "sklearn.utils.pandas"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.class_weight": {
  "data": {},
  "type": "module"
 },
 "sklearn.utils.class_weight.compute_class_weight": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "LabelEncoder",
    "ValueError",
    "all",
    "dict",
    "isinstance",
    "len",
    "numpy.bincount",
    "numpy.float64",
    "numpy.in1d",
    "numpy.ones",
    "numpy.searchsorted",
    "set"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.class_weight.compute_sample_weight": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "hasattr",
    "isinstance",
    "len",
    "list",
    "numpy.atleast_1d",
    "numpy.float64",
    "numpy.in1d",
    "numpy.prod",
    "numpy.reshape",
    "numpy.searchsorted",
    "numpy.take",
    "numpy.unique",
    "range",
    "set",
    "sklearn.utils.class_weight.compute_class_weight",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.class_weight.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.utils.compress": {
  "data": {
   "shadows": "itertools.compress"
  },
  "type": "import"
 },
 "sklearn.utils.contextmanager": {
  "data": {
   "shadows": "contextlib.contextmanager"
  },
  "type": "import"
 },
 "sklearn.utils.deprecation": {
  "data": {},
  "type": "module"
 },
 "sklearn.utils.deprecation.__all__": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "sklearn.utils.deprecation._is_deprecated": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "getattr",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.deprecation.deprecated": {
  "data": {
   "lineno": 8
  },
  "type": "class"
 },
 "sklearn.utils.deprecation.deprecated.__call__": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "isinstance",
    "property",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.deprecation.deprecated.__init__": {
  "data": {
   "lineno": 34
  },
  "type": "function"
 },
 "sklearn.utils.deprecation.deprecated._decorate_class": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "init",
    "init.__doc__"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.deprecation.deprecated._decorate_class.wrapped": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "FutureWarning",
    "init",
    "sklearn.utils.deprecation.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.deprecation.deprecated._decorate_fun": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "fun"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.deprecation.deprecated._decorate_fun.wrapped": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "FutureWarning",
    "fun",
    "sklearn.utils.deprecation.functools",
    "sklearn.utils.deprecation.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.deprecation.deprecated._decorate_property": {
  "data": {
   "lineno": 96
  },
  "type": "function"
 },
 "sklearn.utils.deprecation.deprecated._decorate_property.wrapped": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "FutureWarning",
    "property",
    "sklearn.utils.deprecation.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.deprecation.deprecated._update_doc": {
  "data": {
   "lineno": 106
  },
  "type": "function"
 },
 "sklearn.utils.deprecation.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "sklearn.utils.deprecation.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.utils.extmath": {
  "data": {},
  "type": "module"
 },
 "sklearn.utils.extmath._deterministic_vector_sign_flip": {
  "data": {
   "lineno": 870,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.argmax",
    "numpy.newaxis",
    "numpy.sign",
    "range"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.extmath._incremental_mean_and_var": {
  "data": {
   "lineno": 792,
   "symbols_in_volume": [
    "numpy.errstate",
    "numpy.isnan",
    "numpy.nansum",
    "numpy.nanvar",
    "numpy.sum",
    "sklearn.utils.extmath._safe_accumulator_op"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.extmath._incremental_weighted_mean_and_var": {
  "data": {
   "lineno": 693,
   "symbols_in_volume": [
    "numpy.average",
    "numpy.dot",
    "numpy.float64",
    "numpy.isnan",
    "numpy.reshape",
    "numpy.sum",
    "numpy.where",
    "sklearn.utils.extmath._incremental_mean_and_var",
    "sklearn.utils.extmath._safe_accumulator_op"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.extmath._safe_accumulator_op": {
  "data": {
   "lineno": 663,
   "symbols_in_volume": [
    "numpy.float64",
    "numpy.floating",
    "numpy.issubdtype",
    "op"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.extmath.cartesian": {
  "data": {
   "lineno": 451,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "numpy.asarray",
    "numpy.empty_like",
    "numpy.indices"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.extmath.density": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "float",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.extmath.fast_logdet": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "numpy.inf",
    "numpy.linalg.slogdet"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.extmath.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "sklearn.utils.extmath.log_logistic": {
  "data": {
   "lineno": 550,
   "symbols_in_volume": [
    "_log_logistic_sigmoid",
    "check_array",
    "numpy.atleast_2d",
    "numpy.empty_like",
    "numpy.float64",
    "numpy.squeeze"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.extmath.make_nonnegative": {
  "data": {
   "lineno": 629,
   "symbols_in_volume": [
    "ValueError",
    "scipy.sparse.issparse"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.extmath.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.utils.extmath.randomized_range_finder": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "check_random_state",
    "range",
    "scipy.linalg.lu",
    "scipy.linalg.qr",
    "sklearn.utils.extmath.safe_sparse_dot"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.extmath.randomized_svd": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "check_random_state",
    "isinstance",
    "min",
    "numpy.dot",
    "scipy.linalg.svd",
    "scipy.sparse.SparseEfficiencyWarning",
    "scipy.sparse.dok_matrix",
    "scipy.sparse.lil_matrix",
    "sklearn.utils.extmath.randomized_range_finder",
    "sklearn.utils.extmath.safe_sparse_dot",
    "sklearn.utils.extmath.svd_flip",
    "sklearn.utils.extmath.warnings",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.extmath.row_norms": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "csr_row_norms",
    "isinstance",
    "numpy.einsum",
    "numpy.sqrt",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.issparse"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.extmath.safe_sparse_dot": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "hasattr",
    "numpy.dot",
    "numpy.rollaxis",
    "scipy.sparse.issparse"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.extmath.softmax": {
  "data": {
   "lineno": 595,
   "symbols_in_volume": [
    "numpy.copy",
    "numpy.exp",
    "numpy.max",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.extmath.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.utils.extmath.squared_norm": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "UserWarning",
    "numpy.dot",
    "numpy.integer",
    "numpy.issubdtype",
    "numpy.ravel",
    "sklearn.utils.extmath.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.extmath.stable_cumsum": {
  "data": {
   "lineno": 892,
   "symbols_in_volume": [
    "RuntimeWarning",
    "numpy.all",
    "numpy.cumsum",
    "numpy.float64",
    "numpy.isclose",
    "numpy.sum",
    "sklearn.utils.extmath.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.extmath.svd_flip": {
  "data": {
   "lineno": 504,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.argmax",
    "numpy.newaxis",
    "numpy.sign",
    "range"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.extmath.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.utils.extmath.weighted_mode": {
  "data": {
   "lineno": 377,
   "symbols_in_volume": [
    "list",
    "numpy.asarray",
    "numpy.expand_dims",
    "numpy.full",
    "numpy.maximum",
    "numpy.ravel",
    "numpy.sum",
    "numpy.unique",
    "numpy.where",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.fixes": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "distutils.version.LooseVersion",
    "numpy.__version__",
    "pkg_resources.parse_version",
    "sklearn.utils.fixes.scipy",
    "sklearn.utils.fixes.sp_version"
   ]
  },
  "type": "module"
 },
 "sklearn.utils.fixes.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "sklearn.utils.fixes.MaskedArray": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "deprecated",
    "numpy.ma.MaskedArray"
   ]
  },
  "type": "class"
 },
 "sklearn.utils.fixes._FuncWrapper": {
  "data": {
   "lineno": 213
  },
  "type": "class"
 },
 "sklearn.utils.fixes._FuncWrapper.__call__": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "config_context"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.fixes._FuncWrapper.__init__": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "functools.update_wrapper",
    "get_config"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.fixes._MaskedArray": {
  "data": {
   "shadows": "numpy.ma.MaskedArray"
  },
  "type": "import"
 },
 "sklearn.utils.fixes._astype_copy_false": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "pkg_resources.parse_version",
    "scipy.sparse.issparse",
    "sklearn.utils.fixes.sp_version"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.fixes._joblib_parallel_args": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "NotImplementedError",
    "ValueError",
    "list",
    "pkg_resources.parse_version",
    "set",
    "sklearn.utils.fixes.joblib"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.fixes._object_dtype_isnan": {
  "data": {
   "lineno": 47
  },
  "type": "function"
 },
 "sklearn.utils.fixes._take_along_axis": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "IndexError",
    "ValueError",
    "list",
    "numpy.arange",
    "numpy.intp",
    "numpy.issubdtype",
    "numpy.take_along_axis",
    "pkg_resources.parse_version",
    "range",
    "sklearn.utils.fixes.np_version",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.fixes.delayed": {
  "data": {
   "lineno": 205
  },
  "type": "function"
 },
 "sklearn.utils.fixes.delayed.delayed_function": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "sklearn.utils.fixes._FuncWrapper",
    "sklearn.utils.fixes.functools"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.fixes.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "sklearn.utils.fixes.joblib": {
  "data": {
   "shadows": "joblib"
  },
  "type": "import"
 },
 "sklearn.utils.fixes.lobpcg": {
  "data": {
   "shadows": "scipy.sparse.linalg.lobpcg"
  },
  "type": "import"
 },
 "sklearn.utils.fixes.loguniform": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "sklearn.utils.fixes.scipy"
   ]
  },
  "type": "class"
 },
 "sklearn.utils.fixes.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.utils.fixes.np_version": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "sklearn.utils.fixes.parse_version": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "sklearn.utils.fixes.scipy": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "sklearn.utils.fixes.scipy.stats": {
  "data": {
   "shadows": "scipy.stats"
  },
  "type": "import"
 },
 "sklearn.utils.fixes.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.utils.fixes.sp_version": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "sklearn.utils.fixes.sparse_lsqr": {
  "data": {
   "shadows": "scipy.sparse.linalg.lsqr"
  },
  "type": "import"
 },
 "sklearn.utils.fixes.update_wrapper": {
  "data": {
   "shadows": "functools.update_wrapper"
  },
  "type": "import"
 },
 "sklearn.utils.gen_batches": {
  "data": {
   "lineno": 675,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "int",
    "isinstance",
    "range",
    "sklearn.utils.numbers",
    "slice"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.gen_even_slices": {
  "data": {
   "lineno": 725,
   "symbols_in_volume": [
    "ValueError",
    "min",
    "range",
    "slice"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.get_chunk_n_rows": {
  "data": {
   "lineno": 908,
   "symbols_in_volume": [
    "get_config",
    "int",
    "min",
    "numpy.ceil",
    "sklearn.utils.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.graph": {
  "data": {},
  "type": "module"
 },
 "sklearn.utils.graph.single_source_shortest_path_length": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "scipy.sparse.isspmatrix",
    "scipy.sparse.lil_matrix",
    "set"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.graph.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.utils.import_module": {
  "data": {
   "shadows": "importlib.import_module"
  },
  "type": "import"
 },
 "sklearn.utils.indices_to_mask": {
  "data": {
   "lineno": 822,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "numpy.max",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "sklearn.utils.is_scalar_nan": {
  "data": {
   "lineno": 947,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "numpy.isnan",
    "sklearn.utils.numbers"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.islice": {
  "data": {
   "shadows": "itertools.islice"
  },
  "type": "import"
 },
 "sklearn.utils.issparse": {
  "data": {
   "shadows": "scipy.sparse.issparse"
  },
  "type": "import"
 },
 "sklearn.utils.itemgetter": {
  "data": {
   "shadows": "operator.itemgetter"
  },
  "type": "import"
 },
 "sklearn.utils.matplotlib": {
  "data": {
   "shadows": "matplotlib"
  },
  "type": "import"
 },
 "sklearn.utils.metaestimators": {
  "data": {},
  "type": "module"
 },
 "sklearn.utils.metaestimators.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "sklearn.utils.metaestimators.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "sklearn.utils.metaestimators.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "sklearn.utils.metaestimators._BaseComposition": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "abc.ABCMeta",
    "typing.Any",
    "typing.List"
   ]
  },
  "type": "class"
 },
 "sklearn.utils.metaestimators._BaseComposition.__init__": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.metaestimators._BaseComposition._get_params": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "getattr",
    "hasattr",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.metaestimators._BaseComposition._replace_estimator": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "enumerate",
    "getattr",
    "list",
    "setattr"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.metaestimators._BaseComposition._set_params": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "getattr",
    "list",
    "setattr",
    "super",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.metaestimators._BaseComposition._validate_names": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "list",
    "set",
    "sorted"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.metaestimators._IffHasAttrDescriptor": {
  "data": {
   "lineno": 80
  },
  "type": "class"
 },
 "sklearn.utils.metaestimators._IffHasAttrDescriptor.__get__": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "AttributeError",
    "functools.update_wrapper",
    "getattr",
    "operator.attrgetter"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.metaestimators._IffHasAttrDescriptor.__init__": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "functools.update_wrapper"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.metaestimators.__all__": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "sklearn.utils.metaestimators._safe_split": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "ValueError",
    "_is_pairwise",
    "_safe_indexing",
    "hasattr",
    "numpy.ix_"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.metaestimators.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "sklearn.utils.metaestimators.attrgetter": {
  "data": {
   "shadows": "operator.attrgetter"
  },
  "type": "import"
 },
 "sklearn.utils.metaestimators.if_delegate_has_method": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "sklearn.utils.metaestimators._IffHasAttrDescriptor",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.metaestimators.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.utils.metaestimators.update_wrapper": {
  "data": {
   "shadows": "functools.update_wrapper"
  },
  "type": "import"
 },
 "sklearn.utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.utils.numbers": {
  "data": {
   "shadows": "numbers"
  },
  "type": "import"
 },
 "sklearn.utils.optimize": {
  "data": {},
  "type": "module"
 },
 "sklearn.utils.optimize._LineSearchError": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "RuntimeError"
   ]
  },
  "type": "class"
 },
 "sklearn.utils.optimize._cg": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "fhess_p",
    "len",
    "numpy.abs",
    "numpy.dot",
    "numpy.finfo",
    "numpy.float64",
    "numpy.sum",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.optimize._check_optimize_result": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "AttributeError",
    "NotImplementedError",
    "min",
    "sklearn.utils.optimize.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.optimize._line_search_wolfe12": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "scipy.optimize.linesearch.line_search_wolfe1",
    "scipy.optimize.linesearch.line_search_wolfe2",
    "sklearn.utils.optimize._LineSearchError"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.optimize._newton_cg": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "fhess_p",
    "func",
    "grad_hess",
    "min",
    "numpy.abs",
    "numpy.asarray",
    "numpy.max",
    "numpy.sqrt",
    "numpy.sum",
    "sklearn.utils.optimize._LineSearchError",
    "sklearn.utils.optimize._cg",
    "sklearn.utils.optimize._line_search_wolfe12",
    "sklearn.utils.optimize.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.optimize.line_search_wolfe1": {
  "data": {
   "shadows": "scipy.optimize.linesearch.line_search_wolfe1"
  },
  "type": "import"
 },
 "sklearn.utils.optimize.line_search_wolfe2": {
  "data": {
   "shadows": "scipy.optimize.linesearch.line_search_wolfe2"
  },
  "type": "import"
 },
 "sklearn.utils.optimize.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.utils.optimize.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.utils.pandas": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "sklearn.utils.parallel_backend": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "sklearn.utils.pkgutil": {
  "data": {
   "shadows": "pkgutil"
  },
  "type": "import"
 },
 "sklearn.utils.platform": {
  "data": {
   "shadows": "platform"
  },
  "type": "import"
 },
 "sklearn.utils.random": {
  "data": {},
  "type": "module"
 },
 "sklearn.utils.random.__all__": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "sklearn.utils.random._random_choice_csc": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "ValueError",
    "check_random_state",
    "int",
    "len",
    "numpy.asarray",
    "numpy.empty",
    "numpy.insert",
    "numpy.int64",
    "numpy.isclose",
    "numpy.searchsorted",
    "numpy.sum",
    "range",
    "sample_without_replacement",
    "scipy.sparse.csc_matrix",
    "sklearn.utils.random.array"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.random.array": {
  "data": {
   "shadows": "array"
  },
  "type": "import"
 },
 "sklearn.utils.random.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.utils.random.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.utils.register_parallel_backend": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "sklearn.utils.resample": {
  "data": {
   "lineno": 414,
   "symbols_in_volume": [
    "ValueError",
    "check_array",
    "check_consistent_length",
    "check_random_state",
    "hasattr",
    "len",
    "numpy.arange",
    "numpy.argsort",
    "numpy.array",
    "numpy.bincount",
    "numpy.cumsum",
    "numpy.split",
    "numpy.unique",
    "range",
    "scipy.sparse.issparse",
    "sklearn.utils._approximate_mode",
    "sklearn.utils._safe_indexing"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.safe_mask": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "hasattr",
    "numpy.arange",
    "numpy.asarray",
    "numpy.issubdtype",
    "numpy.signedinteger"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.safe_sqr": {
  "data": {
   "lineno": 635,
   "symbols_in_volume": [
    "check_array",
    "scipy.sparse.issparse"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.setup": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.distutils.core.setup",
    "sklearn.utils.setup.configuration"
   ]
  },
  "type": "module"
 },
 "sklearn.utils.setup.Configuration": {
  "data": {
   "shadows": "numpy.distutils.misc_util.Configuration"
  },
  "type": "import"
 },
 "sklearn.utils.setup.configuration": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "numpy.distutils.misc_util.Configuration",
    "os.path.join",
    "sklearn._build_utils.gen_from_templates",
    "sklearn.utils.setup.numpy",
    "sklearn.utils.setup.os"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.setup.gen_from_templates": {
  "data": {
   "shadows": "sklearn._build_utils.gen_from_templates"
  },
  "type": "import"
 },
 "sklearn.utils.setup.join": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "sklearn.utils.setup.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.utils.setup.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "sklearn.utils.setup.setup": {
  "data": {
   "shadows": "numpy.distutils.core.setup"
  },
  "type": "import"
 },
 "sklearn.utils.shuffle": {
  "data": {
   "lineno": 566,
   "symbols_in_volume": [
    "sklearn.utils.resample"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.sparsefuncs": {
  "data": {},
  "type": "module"
 },
 "sklearn.utils.sparsefuncs._csc_mean_var_axis0": {
  "data": {
   "shadows": "csc_mean_variance_axis0"
  },
  "type": "import"
 },
 "sklearn.utils.sparsefuncs._csr_mean_var_axis0": {
  "data": {
   "shadows": "csr_mean_variance_axis0"
  },
  "type": "import"
 },
 "sklearn.utils.sparsefuncs._get_elem_at_rank": {
  "data": {
   "lineno": 572
  },
  "type": "function"
 },
 "sklearn.utils.sparsefuncs._get_median": {
  "data": {
   "lineno": 552,
   "symbols_in_volume": [
    "divmod",
    "len",
    "numpy.count_nonzero",
    "numpy.nan",
    "sklearn.utils.sparsefuncs._get_elem_at_rank"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.sparsefuncs._incr_mean_var_axis0": {
  "data": {
   "shadows": "incr_mean_variance_axis0"
  },
  "type": "import"
 },
 "sklearn.utils.sparsefuncs._min_or_max_axis": {
  "data": {
   "lineno": 416,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "min_or_max",
    "numpy.compress",
    "numpy.diff",
    "numpy.zeros",
    "scipy.sparse.coo_matrix",
    "sklearn.utils.sparsefuncs._minor_reduce"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.sparsefuncs._minor_reduce": {
  "data": {
   "lineno": 405,
   "symbols_in_volume": [
    "numpy.diff",
    "numpy.flatnonzero",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.sparsefuncs._raise_error_wrong_axis": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.sparsefuncs._raise_typeerror": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "TypeError",
    "scipy.sparse.issparse",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.sparsefuncs._sparse_min_max": {
  "data": {
   "lineno": 458,
   "symbols_in_volume": [
    "numpy.maximum",
    "numpy.minimum",
    "sklearn.utils.sparsefuncs._sparse_min_or_max"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.sparsefuncs._sparse_min_or_max": {
  "data": {
   "lineno": 439,
   "symbols_in_volume": [
    "ValueError",
    "min_or_max",
    "min_or_max.reduce",
    "numpy.product",
    "sklearn.utils.sparsefuncs._min_or_max_axis"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.sparsefuncs._sparse_nan_min_max": {
  "data": {
   "lineno": 463,
   "symbols_in_volume": [
    "numpy.fmax",
    "numpy.fmin",
    "sklearn.utils.sparsefuncs._sparse_min_or_max"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.sparsefuncs.count_nonzero": {
  "data": {
   "lineno": 503,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "numpy.bincount",
    "numpy.diff",
    "numpy.dot",
    "numpy.repeat"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.sparsefuncs.csc_median_axis_0": {
  "data": {
   "lineno": 581,
   "symbols_in_volume": [
    "TypeError",
    "enumerate",
    "isinstance",
    "numpy.copy",
    "numpy.zeros",
    "scipy.sparse.csc_matrix",
    "sklearn.utils.sparsefuncs._get_median",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.sparsefuncs.incr_mean_variance_axis": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "ValueError",
    "_check_sample_weight",
    "isinstance",
    "numpy.full",
    "numpy.size",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "sklearn.utils.sparsefuncs._raise_error_wrong_axis",
    "sklearn.utils.sparsefuncs._raise_typeerror"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.sparsefuncs.inplace_column_scale": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "isinstance",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "sklearn.utils.sparsefuncs._raise_typeerror",
    "sklearn.utils.sparsefuncs.inplace_csr_column_scale",
    "sklearn.utils.sparsefuncs.inplace_csr_row_scale"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.sparsefuncs.inplace_csr_column_scale": {
  "data": {
   "lineno": 30
  },
  "type": "function"
 },
 "sklearn.utils.sparsefuncs.inplace_csr_row_scale": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "numpy.diff",
    "numpy.repeat"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.sparsefuncs.inplace_row_scale": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "isinstance",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "sklearn.utils.sparsefuncs._raise_typeerror",
    "sklearn.utils.sparsefuncs.inplace_csr_column_scale",
    "sklearn.utils.sparsefuncs.inplace_csr_row_scale"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.sparsefuncs.inplace_swap_column": {
  "data": {
   "lineno": 377,
   "symbols_in_volume": [
    "isinstance",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "sklearn.utils.sparsefuncs._raise_typeerror",
    "sklearn.utils.sparsefuncs.inplace_swap_row_csc",
    "sklearn.utils.sparsefuncs.inplace_swap_row_csr"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.sparsefuncs.inplace_swap_row": {
  "data": {
   "lineno": 353,
   "symbols_in_volume": [
    "isinstance",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "sklearn.utils.sparsefuncs._raise_typeerror",
    "sklearn.utils.sparsefuncs.inplace_swap_row_csc",
    "sklearn.utils.sparsefuncs.inplace_swap_row_csr"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.sparsefuncs.inplace_swap_row_csc": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.sparsefuncs.inplace_swap_row_csr": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "numpy.concatenate",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.sparsefuncs.mean_variance_axis": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "isinstance",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "sklearn.utils.sparsefuncs._raise_error_wrong_axis",
    "sklearn.utils.sparsefuncs._raise_typeerror"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.sparsefuncs.min_max_axis": {
  "data": {
   "lineno": 468,
   "symbols_in_volume": [
    "isinstance",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "sklearn.utils.sparsefuncs._raise_typeerror",
    "sklearn.utils.sparsefuncs._sparse_min_max",
    "sklearn.utils.sparsefuncs._sparse_nan_min_max"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.sparsefuncs.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.utils.sparsefuncs.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.utils.stats": {
  "data": {},
  "type": "module"
 },
 "sklearn.utils.stats._weighted_percentile": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "_take_along_axis",
    "numpy.apply_along_axis",
    "numpy.arange",
    "numpy.argsort",
    "numpy.array",
    "numpy.clip",
    "numpy.searchsorted",
    "numpy.tile",
    "range",
    "stable_cumsum"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.stats.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.utils.struct": {
  "data": {
   "shadows": "struct"
  },
  "type": "import"
 },
 "sklearn.utils.tests": {
  "data": {},
  "type": "module"
 },
 "sklearn.utils.tests.conftest": {
  "data": {},
  "type": "module"
 },
 "sklearn.utils.tests.conftest.print_changed_only_false": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "sklearn.utils.tests.conftest.pytest",
    "sklearn.utils.tests.conftest.sklearn"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.conftest.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.utils.tests.conftest.sklearn": {
  "data": {
   "shadows": "sklearn"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_arpack": {
  "data": {},
  "type": "module"
 },
 "sklearn.utils.tests.test_arpack._init_arpack_v0": {
  "data": {
   "shadows": "sklearn.utils._arpack._init_arpack_v0"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_arpack.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_arpack.check_random_state": {
  "data": {
   "shadows": "sklearn.utils.check_random_state"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_arpack.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_arpack.test_init_arpack_v0": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose",
    "range",
    "sklearn.utils._arpack._init_arpack_v0",
    "sklearn.utils.check_random_state",
    "sklearn.utils.tests.test_arpack.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_class_weight": {
  "data": {},
  "type": "module"
 },
 "sklearn.utils.tests.test_class_weight.LogisticRegression": {
  "data": {
   "shadows": "sklearn.linear_model.LogisticRegression"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_class_weight.assert_almost_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_almost_equal"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_class_weight.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_class_weight.compute_class_weight": {
  "data": {
   "shadows": "sklearn.utils.class_weight.compute_class_weight"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_class_weight.compute_sample_weight": {
  "data": {
   "shadows": "sklearn.utils.class_weight.compute_sample_weight"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_class_weight.make_blobs": {
  "data": {
   "shadows": "sklearn.datasets.make_blobs"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_class_weight.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_class_weight.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_class_weight.test_compute_class_weight": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.bincount",
    "numpy.dot",
    "numpy.unique",
    "sklearn.utils._testing.assert_almost_equal",
    "sklearn.utils.class_weight.compute_class_weight"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_class_weight.test_compute_class_weight_balanced_negative": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "numpy.asarray",
    "numpy.bincount",
    "numpy.dot",
    "sklearn.utils._testing.assert_almost_equal",
    "sklearn.utils._testing.assert_array_almost_equal",
    "sklearn.utils.class_weight.compute_class_weight"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_class_weight.test_compute_class_weight_balanced_unordered": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.asarray",
    "numpy.bincount",
    "numpy.dot",
    "sklearn.utils._testing.assert_almost_equal",
    "sklearn.utils._testing.assert_array_almost_equal",
    "sklearn.utils.class_weight.compute_class_weight"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_class_weight.test_compute_class_weight_default": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "len",
    "numpy.asarray",
    "numpy.ones",
    "numpy.unique",
    "sklearn.utils._testing.assert_array_almost_equal",
    "sklearn.utils.class_weight.compute_class_weight"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_class_weight.test_compute_class_weight_dict": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "ValueError",
    "numpy.arange",
    "numpy.asarray",
    "sklearn.utils._testing.assert_array_almost_equal",
    "sklearn.utils.class_weight.compute_class_weight",
    "sklearn.utils.tests.test_class_weight.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_class_weight.test_compute_class_weight_invariance": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "numpy.hstack",
    "numpy.vstack",
    "sklearn.datasets.make_blobs",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.utils._testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_class_weight.test_compute_class_weight_not_present": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "ValueError",
    "numpy.arange",
    "numpy.asarray",
    "sklearn.utils.class_weight.compute_class_weight",
    "sklearn.utils.tests.test_class_weight.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_class_weight.test_compute_sample_weight": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.asarray",
    "sklearn.utils._testing.assert_array_almost_equal",
    "sklearn.utils.class_weight.compute_sample_weight"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_class_weight.test_compute_sample_weight_errors": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "ValueError",
    "numpy.asarray",
    "range",
    "sklearn.utils.class_weight.compute_sample_weight",
    "sklearn.utils.tests.test_class_weight.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_class_weight.test_compute_sample_weight_more_than_32": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.ones",
    "sklearn.utils._testing.assert_array_almost_equal",
    "sklearn.utils.class_weight.compute_sample_weight"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_class_weight.test_compute_sample_weight_with_subsample": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "numpy.asarray",
    "range",
    "sklearn.utils._testing.assert_array_almost_equal",
    "sklearn.utils.class_weight.compute_sample_weight"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_cython_blas": {
  "data": {
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.float64",
    "sklearn.utils._cython_blas.ColMajor",
    "sklearn.utils._cython_blas.RowMajor"
   ]
  },
  "type": "module"
 },
 "sklearn.utils.tests.test_cython_blas.ColMajor": {
  "data": {
   "shadows": "sklearn.utils._cython_blas.ColMajor"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_cython_blas.NoTrans": {
  "data": {
   "shadows": "sklearn.utils._cython_blas.NoTrans"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_cython_blas.ORDER": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "sklearn.utils.tests.test_cython_blas.RTOL": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "sklearn.utils.tests.test_cython_blas.RowMajor": {
  "data": {
   "shadows": "sklearn.utils._cython_blas.RowMajor"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_cython_blas.Trans": {
  "data": {
   "shadows": "sklearn.utils._cython_blas.Trans"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_cython_blas._asum_memview": {
  "data": {
   "shadows": "sklearn.utils._cython_blas._asum_memview"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_cython_blas._axpy_memview": {
  "data": {
   "shadows": "sklearn.utils._cython_blas._axpy_memview"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_cython_blas._copy_memview": {
  "data": {
   "shadows": "sklearn.utils._cython_blas._copy_memview"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_cython_blas._dot_memview": {
  "data": {
   "shadows": "sklearn.utils._cython_blas._dot_memview"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_cython_blas._gemm_memview": {
  "data": {
   "shadows": "sklearn.utils._cython_blas._gemm_memview"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_cython_blas._gemv_memview": {
  "data": {
   "shadows": "sklearn.utils._cython_blas._gemv_memview"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_cython_blas._ger_memview": {
  "data": {
   "shadows": "sklearn.utils._cython_blas._ger_memview"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_cython_blas._no_op": {
  "data": {
   "lineno": 33
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_cython_blas._nrm2_memview": {
  "data": {
   "shadows": "sklearn.utils._cython_blas._nrm2_memview"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_cython_blas._numpy_to_cython": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.float64",
    "sklearn.utils.tests.test_cython_blas.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_cython_blas._rot_memview": {
  "data": {
   "shadows": "sklearn.utils._cython_blas._rot_memview"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_cython_blas._rotg_memview": {
  "data": {
   "shadows": "sklearn.utils._cython_blas._rotg_memview"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_cython_blas._scal_memview": {
  "data": {
   "shadows": "sklearn.utils._cython_blas._scal_memview"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_cython_blas.assert_allclose": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_allclose"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_cython_blas.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_cython_blas.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_cython_blas.test_asum": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "asum",
    "numpy.abs",
    "numpy.float32",
    "numpy.float64",
    "numpy.random.RandomState",
    "sklearn.utils._cython_blas._asum_memview",
    "sklearn.utils._testing.assert_allclose",
    "sklearn.utils.tests.test_cython_blas.RTOL",
    "sklearn.utils.tests.test_cython_blas._numpy_to_cython",
    "sklearn.utils.tests.test_cython_blas.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_cython_blas.test_axpy": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "axpy",
    "numpy.float32",
    "numpy.float64",
    "numpy.random.RandomState",
    "sklearn.utils._cython_blas._axpy_memview",
    "sklearn.utils._testing.assert_allclose",
    "sklearn.utils.tests.test_cython_blas.RTOL",
    "sklearn.utils.tests.test_cython_blas._numpy_to_cython",
    "sklearn.utils.tests.test_cython_blas.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_cython_blas.test_copy": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "copy",
    "numpy.empty_like",
    "numpy.float32",
    "numpy.float64",
    "numpy.random.RandomState",
    "sklearn.utils._cython_blas._copy_memview",
    "sklearn.utils._testing.assert_allclose",
    "sklearn.utils.tests.test_cython_blas.RTOL",
    "sklearn.utils.tests.test_cython_blas._numpy_to_cython",
    "sklearn.utils.tests.test_cython_blas.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_cython_blas.test_dot": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "dot",
    "numpy.float32",
    "numpy.float64",
    "numpy.random.RandomState",
    "sklearn.utils._cython_blas._dot_memview",
    "sklearn.utils._testing.assert_allclose",
    "sklearn.utils.tests.test_cython_blas.RTOL",
    "sklearn.utils.tests.test_cython_blas._numpy_to_cython",
    "sklearn.utils.tests.test_cython_blas.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_cython_blas.test_gemm": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "dtype",
    "gemm",
    "numpy.asarray",
    "numpy.float32",
    "numpy.float64",
    "numpy.random.RandomState",
    "numpy.transpose",
    "opA",
    "opB",
    "sklearn.utils._cython_blas.ColMajor",
    "sklearn.utils._cython_blas.NoTrans",
    "sklearn.utils._cython_blas.RowMajor",
    "sklearn.utils._cython_blas.Trans",
    "sklearn.utils._cython_blas._gemm_memview",
    "sklearn.utils._testing.assert_allclose",
    "sklearn.utils.tests.test_cython_blas.ORDER",
    "sklearn.utils.tests.test_cython_blas.RTOL",
    "sklearn.utils.tests.test_cython_blas._no_op",
    "sklearn.utils.tests.test_cython_blas._numpy_to_cython",
    "sklearn.utils.tests.test_cython_blas.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_cython_blas.test_gemv": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "dtype",
    "gemv",
    "numpy.asarray",
    "numpy.float32",
    "numpy.float64",
    "numpy.random.RandomState",
    "numpy.transpose",
    "opA",
    "sklearn.utils._cython_blas.ColMajor",
    "sklearn.utils._cython_blas.NoTrans",
    "sklearn.utils._cython_blas.RowMajor",
    "sklearn.utils._cython_blas.Trans",
    "sklearn.utils._cython_blas._gemv_memview",
    "sklearn.utils._testing.assert_allclose",
    "sklearn.utils.tests.test_cython_blas.ORDER",
    "sklearn.utils.tests.test_cython_blas.RTOL",
    "sklearn.utils.tests.test_cython_blas._no_op",
    "sklearn.utils.tests.test_cython_blas._numpy_to_cython",
    "sklearn.utils.tests.test_cython_blas.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_cython_blas.test_ger": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "dtype",
    "ger",
    "numpy.asarray",
    "numpy.float32",
    "numpy.float64",
    "numpy.outer",
    "numpy.random.RandomState",
    "sklearn.utils._cython_blas.ColMajor",
    "sklearn.utils._cython_blas.RowMajor",
    "sklearn.utils._cython_blas._ger_memview",
    "sklearn.utils._testing.assert_allclose",
    "sklearn.utils.tests.test_cython_blas.ORDER",
    "sklearn.utils.tests.test_cython_blas.RTOL",
    "sklearn.utils.tests.test_cython_blas._numpy_to_cython",
    "sklearn.utils.tests.test_cython_blas.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_cython_blas.test_nrm2": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "nrm2",
    "numpy.float32",
    "numpy.float64",
    "numpy.linalg.norm",
    "numpy.random.RandomState",
    "sklearn.utils._cython_blas._nrm2_memview",
    "sklearn.utils._testing.assert_allclose",
    "sklearn.utils.tests.test_cython_blas.RTOL",
    "sklearn.utils.tests.test_cython_blas._numpy_to_cython",
    "sklearn.utils.tests.test_cython_blas.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_cython_blas.test_rot": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "dtype",
    "numpy.float32",
    "numpy.float64",
    "numpy.random.RandomState",
    "rot",
    "sklearn.utils._cython_blas._rot_memview",
    "sklearn.utils._testing.assert_allclose",
    "sklearn.utils.tests.test_cython_blas._numpy_to_cython",
    "sklearn.utils.tests.test_cython_blas.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_cython_blas.test_rotg": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "dtype",
    "expected_rotg",
    "numpy.float32",
    "numpy.float64",
    "numpy.random.RandomState",
    "rotg",
    "sklearn.utils._cython_blas._rotg_memview",
    "sklearn.utils._testing.assert_allclose",
    "sklearn.utils.tests.test_cython_blas.RTOL",
    "sklearn.utils.tests.test_cython_blas._numpy_to_cython",
    "sklearn.utils.tests.test_cython_blas.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_cython_blas.test_rotg.expected_rotg": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "abs",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_cython_blas.test_scal": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.float64",
    "numpy.random.RandomState",
    "scal",
    "sklearn.utils._cython_blas._scal_memview",
    "sklearn.utils._testing.assert_allclose",
    "sklearn.utils.tests.test_cython_blas.RTOL",
    "sklearn.utils.tests.test_cython_blas._numpy_to_cython",
    "sklearn.utils.tests.test_cython_blas.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_deprecation": {
  "data": {},
  "type": "module"
 },
 "sklearn.utils.tests.test_deprecation.MockClass1": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "sklearn.utils.deprecation.deprecated"
   ]
  },
  "type": "class"
 },
 "sklearn.utils.tests.test_deprecation.MockClass2": {
  "data": {
   "lineno": 17
  },
  "type": "class"
 },
 "sklearn.utils.tests.test_deprecation.MockClass2.method": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "sklearn.utils.deprecation.deprecated"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_deprecation.MockClass3": {
  "data": {
   "lineno": 23
  },
  "type": "class"
 },
 "sklearn.utils.tests.test_deprecation.MockClass3.__init__": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "sklearn.utils.deprecation.deprecated"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_deprecation.MockClass4": {
  "data": {
   "lineno": 29
  },
  "type": "class"
 },
 "sklearn.utils.tests.test_deprecation._is_deprecated": {
  "data": {
   "shadows": "sklearn.utils.deprecation._is_deprecated"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_deprecation.assert_warns_message": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_warns_message"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_deprecation.deprecated": {
  "data": {
   "shadows": "sklearn.utils.deprecation.deprecated"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_deprecation.mock_function": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "sklearn.utils.deprecation.deprecated"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_deprecation.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_deprecation.test_deprecated": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "FutureWarning",
    "sklearn.utils._testing.assert_warns_message",
    "sklearn.utils.tests.test_deprecation.MockClass1",
    "sklearn.utils.tests.test_deprecation.MockClass2",
    "sklearn.utils.tests.test_deprecation.MockClass3",
    "sklearn.utils.tests.test_deprecation.mock_function"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_deprecation.test_is_deprecated": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "sklearn.utils.deprecation._is_deprecated",
    "sklearn.utils.tests.test_deprecation.MockClass1",
    "sklearn.utils.tests.test_deprecation.MockClass2",
    "sklearn.utils.tests.test_deprecation.MockClass3",
    "sklearn.utils.tests.test_deprecation.MockClass4",
    "sklearn.utils.tests.test_deprecation.mock_function"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_deprecation.test_pickle": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "sklearn.utils.tests.test_deprecation.mock_function",
    "sklearn.utils.tests.test_deprecation.pickle"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_encode": {
  "data": {},
  "type": "module"
 },
 "sklearn.utils.tests.test_encode._assert_check_unknown": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "numpy.testing.assert_array_equal",
    "sklearn.utils._encode._check_unknown"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_encode._check_unknown": {
  "data": {
   "shadows": "sklearn.utils._encode._check_unknown"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_encode._encode": {
  "data": {
   "shadows": "sklearn.utils._encode._encode"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_encode._unique": {
  "data": {
   "shadows": "sklearn.utils._encode._unique"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_encode.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_encode.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_encode.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_encode.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_encode.test_check_unknown": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "object",
    "sklearn.utils.tests.test_encode._assert_check_unknown",
    "sklearn.utils.tests.test_encode.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_encode.test_check_unknown_missing_values": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "float",
    "numpy.array",
    "numpy.nan",
    "object",
    "sklearn.utils.tests.test_encode._assert_check_unknown",
    "sklearn.utils.tests.test_encode.pickle",
    "sklearn.utils.tests.test_encode.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_encode.test_check_unknown_with_both_missing_values": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.isnan",
    "numpy.nan",
    "numpy.testing.assert_array_equal",
    "object",
    "sklearn.utils._encode._check_unknown"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_encode.test_encode_util": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.assert_array_equal",
    "object",
    "sklearn.utils._encode._encode",
    "sklearn.utils._encode._unique",
    "sklearn.utils.tests.test_encode.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_encode.test_encode_with_check_unknown": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "object",
    "sklearn.utils._encode._encode",
    "sklearn.utils.tests.test_encode.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_encode.test_unique_util_missing_values_numeric": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "float",
    "numpy.array",
    "numpy.nan",
    "numpy.testing.assert_array_equal",
    "sklearn.utils._encode._encode",
    "sklearn.utils._encode._unique"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_encode.test_unique_util_missing_values_objects": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "float",
    "numpy.array",
    "numpy.isnan",
    "numpy.nan",
    "numpy.testing.assert_array_equal",
    "object",
    "sklearn.utils._encode._encode",
    "sklearn.utils._encode._unique",
    "sklearn.utils.tests.test_encode.pickle",
    "sklearn.utils.tests.test_encode.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_encode.test_unique_util_with_all_missing_values": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "float",
    "numpy.array",
    "numpy.isnan",
    "numpy.nan",
    "numpy.testing.assert_array_equal",
    "object",
    "sklearn.utils._encode._unique"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "sklearn.utils.tests.test_estimator_checks.run_tests_without_pytest"
   ]
  },
  "type": "module"
 },
 "sklearn.utils.tests.test_estimator_checks.BadBalancedWeightsClassifier": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "sklearn.utils.tests.test_estimator_checks.BaseBadClassifier"
   ]
  },
  "type": "class"
 },
 "sklearn.utils.tests.test_estimator_checks.BadBalancedWeightsClassifier.__init__": {
  "data": {
   "lineno": 229
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks.BadBalancedWeightsClassifier.fit": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "sklearn.preprocessing.LabelEncoder",
    "sklearn.utils.compute_class_weight"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks.BadTransformerWithoutMixin": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator"
   ]
  },
  "type": "class"
 },
 "sklearn.utils.tests.test_estimator_checks.BadTransformerWithoutMixin.fit": {
  "data": {
   "lineno": 252
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks.BadTransformerWithoutMixin.transform": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "sklearn.utils.validation.check_array"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks.BaseBadClassifier": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator",
    "sklearn.base.ClassifierMixin"
   ]
  },
  "type": "class"
 },
 "sklearn.utils.tests.test_estimator_checks.BaseBadClassifier.fit": {
  "data": {
   "lineno": 57
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks.BaseBadClassifier.predict": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_estimator_checks.ChangesDict": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator"
   ]
  },
  "type": "class"
 },
 "sklearn.utils.tests.test_estimator_checks.ChangesDict.__init__": {
  "data": {
   "lineno": 65
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks.ChangesDict.fit": {
  "data": {
   "lineno": 68
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks.ChangesDict.predict": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "numpy.ones",
    "sklearn.utils.validation.check_array"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks.ChangesUnderscoreAttribute": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator"
   ]
  },
  "type": "class"
 },
 "sklearn.utils.tests.test_estimator_checks.ChangesUnderscoreAttribute.fit": {
  "data": {
   "lineno": 99
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks.ChangesWrongAttribute": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator"
   ]
  },
  "type": "class"
 },
 "sklearn.utils.tests.test_estimator_checks.ChangesWrongAttribute.__init__": {
  "data": {
   "lineno": 89
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks.ChangesWrongAttribute.fit": {
  "data": {
   "lineno": 92
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks.ClassifierMixin": {
  "data": {
   "shadows": "sklearn.base.ClassifierMixin"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_estimator_checks.CorrectNotFittedError": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "class"
 },
 "sklearn.utils.tests.test_estimator_checks.CorrectNotFittedErrorClassifier": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "sklearn.utils.tests.test_estimator_checks.BaseBadClassifier"
   ]
  },
  "type": "class"
 },
 "sklearn.utils.tests.test_estimator_checks.CorrectNotFittedErrorClassifier.fit": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks.CorrectNotFittedErrorClassifier.predict": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "numpy.ones",
    "sklearn.utils.validation.check_array",
    "sklearn.utils.validation.check_is_fitted"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_estimator_checks.EstimatorInconsistentForPandas": {
  "data": {
   "lineno": 335,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator"
   ]
  },
  "type": "class"
 },
 "sklearn.utils.tests.test_estimator_checks.EstimatorInconsistentForPandas.fit": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": [
    "ImportError",
    "isinstance",
    "pandas.DataFrame",
    "sklearn.utils.validation.check_array"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks.EstimatorInconsistentForPandas.predict": {
  "data": {
   "lineno": 351,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.utils.validation.check_array"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks.EstimatorMissingDefaultTags": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator"
   ]
  },
  "type": "class"
 },
 "sklearn.utils.tests.test_estimator_checks.EstimatorMissingDefaultTags._get_tags": {
  "data": {
   "lineno": 380,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks.GaussianMixture": {
  "data": {
   "shadows": "sklearn.mixture.GaussianMixture"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_estimator_checks.HasImmutableParameters": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator"
   ]
  },
  "type": "class"
 },
 "sklearn.utils.tests.test_estimator_checks.HasImmutableParameters.__init__": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "numpy.int32",
    "object"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks.HasImmutableParameters.fit": {
  "data": {
   "lineno": 138
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks.HasMutableParameters": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator"
   ]
  },
  "type": "class"
 },
 "sklearn.utils.tests.test_estimator_checks.HasMutableParameters.__init__": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks.HasMutableParameters.fit": {
  "data": {
   "lineno": 126
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks.KNeighborsRegressor": {
  "data": {
   "shadows": "sklearn.neighbors.KNeighborsRegressor"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_estimator_checks.LabelEncoder": {
  "data": {
   "shadows": "sklearn.preprocessing.LabelEncoder"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_estimator_checks.LargeSparseNotSupportedClassifier": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator"
   ]
  },
  "type": "class"
 },
 "sklearn.utils.tests.test_estimator_checks.LargeSparseNotSupportedClassifier.fit": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "ValueError",
    "scipy.sparse.issparse"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks.LinearRegression": {
  "data": {
   "shadows": "sklearn.linear_model.LinearRegression"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_estimator_checks.LogisticRegression": {
  "data": {
   "shadows": "sklearn.linear_model.LogisticRegression"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_estimator_checks.MiniBatchKMeans": {
  "data": {
   "shadows": "sklearn.cluster.MiniBatchKMeans"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_estimator_checks.MinimalClassifier": {
  "data": {
   "shadows": "sklearn.utils._testing.MinimalClassifier"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_estimator_checks.MinimalRegressor": {
  "data": {
   "shadows": "sklearn.utils._testing.MinimalRegressor"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_estimator_checks.MinimalTransformer": {
  "data": {
   "shadows": "sklearn.utils._testing.MinimalTransformer"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_estimator_checks.ModifiesAnotherValue": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator"
   ]
  },
  "type": "class"
 },
 "sklearn.utils.tests.test_estimator_checks.ModifiesAnotherValue.__init__": {
  "data": {
   "lineno": 160
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks.ModifiesAnotherValue.fit": {
  "data": {
   "lineno": 173
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks.ModifiesAnotherValue.set_params": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks.ModifiesValueInsteadOfRaisingError": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator"
   ]
  },
  "type": "class"
 },
 "sklearn.utils.tests.test_estimator_checks.ModifiesValueInsteadOfRaisingError.__init__": {
  "data": {
   "lineno": 143
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks.ModifiesValueInsteadOfRaisingError.fit": {
  "data": {
   "lineno": 154
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks.ModifiesValueInsteadOfRaisingError.set_params": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks.MultiTaskElasticNet": {
  "data": {
   "shadows": "sklearn.linear_model.MultiTaskElasticNet"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_estimator_checks.NMF": {
  "data": {
   "shadows": "sklearn.decomposition.NMF"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_estimator_checks.NoCheckinPredict": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "sklearn.utils.tests.test_estimator_checks.BaseBadClassifier"
   ]
  },
  "type": "class"
 },
 "sklearn.utils.tests.test_estimator_checks.NoCheckinPredict.fit": {
  "data": {
   "lineno": 179
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks.NoSampleWeightPandasSeriesType": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator"
   ]
  },
  "type": "class"
 },
 "sklearn.utils.tests.test_estimator_checks.NoSampleWeightPandasSeriesType.fit": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks.NoSampleWeightPandasSeriesType.predict": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "numpy.ones",
    "sklearn.utils.validation.check_array"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks.NoSparseClassifier": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "sklearn.utils.tests.test_estimator_checks.BaseBadClassifier"
   ]
  },
  "type": "class"
 },
 "sklearn.utils.tests.test_estimator_checks.NoSparseClassifier.fit": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "ValueError",
    "scipy.sparse.issparse"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks.NoSparseClassifier.predict": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "numpy.ones",
    "sklearn.utils.validation.check_array"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks.NotInvariantPredict": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator"
   ]
  },
  "type": "class"
 },
 "sklearn.utils.tests.test_estimator_checks.NotInvariantPredict.fit": {
  "data": {
   "lineno": 262
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks.NotInvariantPredict.predict": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "numpy.ones",
    "numpy.zeros",
    "sklearn.utils.validation.check_array"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks.NotInvariantSampleOrder": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator"
   ]
  },
  "type": "class"
 },
 "sklearn.utils.tests.test_estimator_checks.NotInvariantSampleOrder.fit": {
  "data": {
   "lineno": 280
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks.NotInvariantSampleOrder.predict": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "numpy.array_equiv",
    "numpy.sort",
    "numpy.zeros",
    "sklearn.utils.validation.check_array"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks.NuSVC": {
  "data": {
   "shadows": "sklearn.svm.NuSVC"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_estimator_checks.PoorScoreLogisticRegression": {
  "data": {
   "lineno": 398,
   "symbols_in_volume": [
    "sklearn.linear_model.LogisticRegression"
   ]
  },
  "type": "class"
 },
 "sklearn.utils.tests.test_estimator_checks.PoorScoreLogisticRegression._more_tags": {
  "data": {
   "lineno": 402
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks.PoorScoreLogisticRegression.decision_function": {
  "data": {
   "lineno": 399,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks.RaisesErrorInSetParams": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator"
   ]
  },
  "type": "class"
 },
 "sklearn.utils.tests.test_estimator_checks.RaisesErrorInSetParams.__init__": {
  "data": {
   "lineno": 106
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks.RaisesErrorInSetParams.fit": {
  "data": {
   "lineno": 117
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks.RaisesErrorInSetParams.set_params": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "ValueError",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks.RandomForestClassifier": {
  "data": {
   "shadows": "sklearn.ensemble.RandomForestClassifier"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_estimator_checks.RequiresPositiveYRegressor": {
  "data": {
   "lineno": 386,
   "symbols_in_volume": [
    "sklearn.linear_model.LinearRegression"
   ]
  },
  "type": "class"
 },
 "sklearn.utils.tests.test_estimator_checks.RequiresPositiveYRegressor._more_tags": {
  "data": {
   "lineno": 394
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks.RequiresPositiveYRegressor.fit": {
  "data": {
   "lineno": 388,
   "symbols_in_volume": [
    "ValueError",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks.SGDClassifier": {
  "data": {
   "shadows": "sklearn.linear_model.SGDClassifier"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_estimator_checks.SVC": {
  "data": {
   "shadows": "sklearn.svm.SVC"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_estimator_checks.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_estimator_checks.SetsWrongAttribute": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator"
   ]
  },
  "type": "class"
 },
 "sklearn.utils.tests.test_estimator_checks.SetsWrongAttribute.__init__": {
  "data": {
   "lineno": 79
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks.SetsWrongAttribute.fit": {
  "data": {
   "lineno": 82
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks.SkipTest": {
  "data": {
   "shadows": "sklearn.utils._testing.SkipTest"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_estimator_checks.SkipTestWarning": {
  "data": {
   "shadows": "sklearn.exceptions.SkipTestWarning"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_estimator_checks.SparseTransformer": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator"
   ]
  },
  "type": "class"
 },
 "sklearn.utils.tests.test_estimator_checks.SparseTransformer.fit": {
  "data": {
   "lineno": 321
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks.SparseTransformer.fit_transform": {
  "data": {
   "lineno": 325
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks.SparseTransformer.transform": {
  "data": {
   "lineno": 328,
   "symbols_in_volume": [
    "ValueError",
    "scipy.sparse.csr_matrix",
    "sklearn.utils.validation.check_array"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks.TaggedBinaryClassifier": {
  "data": {
   "lineno": 373,
   "symbols_in_volume": [
    "sklearn.utils.tests.test_estimator_checks.UntaggedBinaryClassifier"
   ]
  },
  "type": "class"
 },
 "sklearn.utils.tests.test_estimator_checks.TaggedBinaryClassifier._more_tags": {
  "data": {
   "lineno": 375
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks.UntaggedBinaryClassifier": {
  "data": {
   "lineno": 356,
   "symbols_in_volume": [
    "sklearn.linear_model.SGDClassifier"
   ]
  },
  "type": "class"
 },
 "sklearn.utils.tests.test_estimator_checks.UntaggedBinaryClassifier.fit": {
  "data": {
   "lineno": 358,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks.UntaggedBinaryClassifier.partial_fit": {
  "data": {
   "lineno": 365,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks._NotAnArray": {
  "data": {
   "shadows": "sklearn.utils.estimator_checks._NotAnArray"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_estimator_checks._set_checking_parameters": {
  "data": {
   "shadows": "sklearn.utils.estimator_checks._set_checking_parameters"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_estimator_checks.all_estimators": {
  "data": {
   "shadows": "sklearn.utils.all_estimators"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_estimator_checks.assert_raises": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_estimator_checks.assert_raises_regex": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_raises_regex"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_estimator_checks.assert_warns": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_warns"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_estimator_checks.check_array": {
  "data": {
   "shadows": "sklearn.utils.validation.check_array"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_estimator_checks.check_class_weight_balanced_linear_classifier": {
  "data": {
   "shadows": "sklearn.utils.estimator_checks.check_class_weight_balanced_linear_classifier"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_estimator_checks.check_classifier_data_not_an_array": {
  "data": {
   "shadows": "sklearn.utils.estimator_checks.check_classifier_data_not_an_array"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_estimator_checks.check_estimator": {
  "data": {
   "shadows": "sklearn.utils.estimator_checks.check_estimator"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_estimator_checks.check_estimator_get_tags_default_keys": {
  "data": {
   "shadows": "sklearn.utils.estimator_checks.check_estimator_get_tags_default_keys"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_estimator_checks.check_estimators_unfitted": {
  "data": {
   "shadows": "sklearn.utils.estimator_checks.check_estimators_unfitted"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_estimator_checks.check_fit_score_takes_y": {
  "data": {
   "shadows": "sklearn.utils.estimator_checks.check_fit_score_takes_y"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_estimator_checks.check_is_fitted": {
  "data": {
   "shadows": "sklearn.utils.validation.check_is_fitted"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_estimator_checks.check_no_attributes_set_in_init": {
  "data": {
   "shadows": "sklearn.utils.estimator_checks.check_no_attributes_set_in_init"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_estimator_checks.check_outlier_corruption": {
  "data": {
   "shadows": "sklearn.utils.estimator_checks.check_outlier_corruption"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_estimator_checks.check_regressor_data_not_an_array": {
  "data": {
   "shadows": "sklearn.utils.estimator_checks.check_regressor_data_not_an_array"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_estimator_checks.compute_class_weight": {
  "data": {
   "shadows": "sklearn.utils.compute_class_weight"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_estimator_checks.deprecated": {
  "data": {
   "shadows": "sklearn.utils.deprecated"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_estimator_checks.ignore_warnings": {
  "data": {
   "shadows": "sklearn.utils._testing.ignore_warnings"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_estimator_checks.joblib": {
  "data": {
   "shadows": "joblib"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_estimator_checks.load_iris": {
  "data": {
   "shadows": "sklearn.datasets.load_iris"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_estimator_checks.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_estimator_checks.np_version": {
  "data": {
   "shadows": "sklearn.utils.fixes.np_version"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_estimator_checks.parse_version": {
  "data": {
   "shadows": "sklearn.utils.fixes.parse_version"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_estimator_checks.run_tests_without_pytest": {
  "data": {
   "lineno": 671,
   "symbols_in_volume": [
    "dir",
    "getattr",
    "sklearn.utils.tests.test_estimator_checks.sys",
    "sklearn.utils.tests.test_estimator_checks.unittest"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks.set_random_state": {
  "data": {
   "shadows": "sklearn.utils.estimator_checks.set_random_state"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_estimator_checks.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_estimator_checks.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_estimator_checks.test_all_estimators_all_public": {
  "data": {
   "lineno": 694,
   "symbols_in_volume": [
    "sklearn.utils.all_estimators"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks.test_check_class_weight_balanced_linear_classifier": {
  "data": {
   "lineno": 684,
   "symbols_in_volume": [
    "AssertionError",
    "sklearn.utils._testing.assert_raises_regex",
    "sklearn.utils.estimator_checks.check_class_weight_balanced_linear_classifier",
    "sklearn.utils.tests.test_estimator_checks.BadBalancedWeightsClassifier"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks.test_check_classifier_data_not_an_array": {
  "data": {
   "lineno": 636,
   "symbols_in_volume": [
    "AssertionError",
    "sklearn.utils._testing.assert_raises_regex",
    "sklearn.utils.estimator_checks.check_classifier_data_not_an_array",
    "sklearn.utils.tests.test_estimator_checks.EstimatorInconsistentForPandas"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks.test_check_estimator": {
  "data": {
   "lineno": 429,
   "symbols_in_volume": [
    "AssertionError",
    "AttributeError",
    "ImportError",
    "TypeError",
    "UserWarning",
    "ValueError",
    "object",
    "sklearn.base.BaseEstimator",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.linear_model.MultiTaskElasticNet",
    "sklearn.utils._testing.assert_raises_regex",
    "sklearn.utils._testing.assert_warns",
    "sklearn.utils.estimator_checks.check_estimator",
    "sklearn.utils.tests.test_estimator_checks.BaseBadClassifier",
    "sklearn.utils.tests.test_estimator_checks.ChangesDict",
    "sklearn.utils.tests.test_estimator_checks.ChangesUnderscoreAttribute",
    "sklearn.utils.tests.test_estimator_checks.ChangesWrongAttribute",
    "sklearn.utils.tests.test_estimator_checks.HasImmutableParameters",
    "sklearn.utils.tests.test_estimator_checks.HasMutableParameters",
    "sklearn.utils.tests.test_estimator_checks.LargeSparseNotSupportedClassifier",
    "sklearn.utils.tests.test_estimator_checks.ModifiesAnotherValue",
    "sklearn.utils.tests.test_estimator_checks.ModifiesValueInsteadOfRaisingError",
    "sklearn.utils.tests.test_estimator_checks.NoCheckinPredict",
    "sklearn.utils.tests.test_estimator_checks.NoSampleWeightPandasSeriesType",
    "sklearn.utils.tests.test_estimator_checks.NoSparseClassifier",
    "sklearn.utils.tests.test_estimator_checks.NotInvariantPredict",
    "sklearn.utils.tests.test_estimator_checks.NotInvariantSampleOrder",
    "sklearn.utils.tests.test_estimator_checks.PoorScoreLogisticRegression",
    "sklearn.utils.tests.test_estimator_checks.RaisesErrorInSetParams",
    "sklearn.utils.tests.test_estimator_checks.RequiresPositiveYRegressor",
    "sklearn.utils.tests.test_estimator_checks.SetsWrongAttribute",
    "sklearn.utils.tests.test_estimator_checks.SparseTransformer",
    "sklearn.utils.tests.test_estimator_checks.TaggedBinaryClassifier",
    "sklearn.utils.tests.test_estimator_checks.UntaggedBinaryClassifier"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks.test_check_estimator_clones": {
  "data": {
   "lineno": 557,
   "symbols_in_volume": [
    "Estimator",
    "FutureWarning",
    "sklearn.cluster.MiniBatchKMeans",
    "sklearn.datasets.load_iris",
    "sklearn.decomposition.NMF",
    "sklearn.ensemble.RandomForestClassifier",
    "sklearn.linear_model.LinearRegression",
    "sklearn.linear_model.SGDClassifier",
    "sklearn.mixture.GaussianMixture",
    "sklearn.utils._testing.ignore_warnings",
    "sklearn.utils.estimator_checks._set_checking_parameters",
    "sklearn.utils.estimator_checks.check_estimator",
    "sklearn.utils.estimator_checks.set_random_state",
    "sklearn.utils.tests.test_estimator_checks.joblib"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks.test_check_estimator_get_tags_default_keys": {
  "data": {
   "lineno": 652,
   "symbols_in_volume": [
    "AssertionError",
    "sklearn.utils._testing.MinimalTransformer",
    "sklearn.utils._testing.assert_raises_regex",
    "sklearn.utils.estimator_checks.check_estimator_get_tags_default_keys",
    "sklearn.utils.tests.test_estimator_checks.EstimatorMissingDefaultTags"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks.test_check_estimator_pairwise": {
  "data": {
   "lineno": 623,
   "symbols_in_volume": [
    "sklearn.neighbors.KNeighborsRegressor",
    "sklearn.svm.SVC",
    "sklearn.utils.estimator_checks.check_estimator"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks.test_check_estimator_transformer_no_mixin": {
  "data": {
   "lineno": 551,
   "symbols_in_volume": [
    "AttributeError",
    "sklearn.utils._testing.assert_raises_regex",
    "sklearn.utils.estimator_checks.check_estimator",
    "sklearn.utils.tests.test_estimator_checks.BadTransformerWithoutMixin"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks.test_check_estimators_unfitted": {
  "data": {
   "lineno": 587,
   "symbols_in_volume": [
    "AssertionError",
    "sklearn.utils._testing.assert_raises_regex",
    "sklearn.utils.estimator_checks.check_estimators_unfitted",
    "sklearn.utils.tests.test_estimator_checks.CorrectNotFittedErrorClassifier",
    "sklearn.utils.tests.test_estimator_checks.NoSparseClassifier"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks.test_check_fit_score_takes_y_works_on_deprecated_fit": {
  "data": {
   "lineno": 416,
   "symbols_in_volume": [
    "TestEstimatorWithDeprecatedFitMethod",
    "sklearn.utils.estimator_checks.check_fit_score_takes_y"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks.test_check_fit_score_takes_y_works_on_deprecated_fit.TestEstimatorWithDeprecatedFitMethod": {
  "data": {
   "lineno": 420,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator"
   ]
  },
  "type": "class"
 },
 "sklearn.utils.tests.test_estimator_checks.test_check_fit_score_takes_y_works_on_deprecated_fit.TestEstimatorWithDeprecatedFitMethod.fit": {
  "data": {
   "lineno": 421,
   "symbols_in_volume": [
    "sklearn.utils.deprecated"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks.test_check_no_attributes_set_in_init": {
  "data": {
   "lineno": 599,
   "symbols_in_volume": [
    "AssertionError",
    "AttributeError",
    "NonConformantEstimatorNoParamSet",
    "NonConformantEstimatorPrivateSet",
    "sklearn.utils._testing.assert_raises_regex",
    "sklearn.utils.estimator_checks.check_no_attributes_set_in_init"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks.test_check_no_attributes_set_in_init.NonConformantEstimatorNoParamSet": {
  "data": {
   "lineno": 604,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator"
   ]
  },
  "type": "class"
 },
 "sklearn.utils.tests.test_estimator_checks.test_check_no_attributes_set_in_init.NonConformantEstimatorNoParamSet.__init__": {
  "data": {
   "lineno": 605
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks.test_check_no_attributes_set_in_init.NonConformantEstimatorPrivateSet": {
  "data": {
   "lineno": 600,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator"
   ]
  },
  "type": "class"
 },
 "sklearn.utils.tests.test_estimator_checks.test_check_no_attributes_set_in_init.NonConformantEstimatorPrivateSet.__init__": {
  "data": {
   "lineno": 601
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks.test_check_outlier_corruption": {
  "data": {
   "lineno": 542,
   "symbols_in_volume": [
    "AssertionError",
    "numpy.array",
    "sklearn.utils._testing.assert_raises",
    "sklearn.utils.estimator_checks.check_outlier_corruption"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks.test_check_regressor_data_not_an_array": {
  "data": {
   "lineno": 644,
   "symbols_in_volume": [
    "AssertionError",
    "sklearn.utils._testing.assert_raises_regex",
    "sklearn.utils.estimator_checks.check_regressor_data_not_an_array",
    "sklearn.utils.tests.test_estimator_checks.EstimatorInconsistentForPandas"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks.test_minimal_class_implementation_checks": {
  "data": {
   "lineno": 716,
   "symbols_in_volume": [
    "sklearn.utils._testing.MinimalClassifier",
    "sklearn.utils._testing.MinimalRegressor",
    "sklearn.utils._testing.MinimalTransformer",
    "sklearn.utils._testing.SkipTest",
    "sklearn.utils.estimator_checks.check_estimator"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks.test_not_an_array_array_function": {
  "data": {
   "lineno": 406,
   "symbols_in_volume": [
    "TypeError",
    "numpy.may_share_memory",
    "numpy.ones",
    "numpy.sum",
    "sklearn.utils._testing.SkipTest",
    "sklearn.utils._testing.assert_raises_regex",
    "sklearn.utils.estimator_checks._NotAnArray",
    "sklearn.utils.fixes.np_version",
    "sklearn.utils.fixes.parse_version"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks.test_xfail_ignored_in_check_estimator": {
  "data": {
   "lineno": 708,
   "symbols_in_volume": [
    "sklearn.exceptions.SkipTestWarning",
    "sklearn.svm.NuSVC",
    "sklearn.utils._testing.assert_warns",
    "sklearn.utils.estimator_checks.check_estimator"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_estimator_html_repr": {
  "data": {},
  "type": "module"
 },
 "sklearn.utils.tests.test_estimator_html_repr.AgglomerativeClustering": {
  "data": {
   "shadows": "sklearn.cluster.AgglomerativeClustering"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_estimator_html_repr.Birch": {
  "data": {
   "shadows": "sklearn.cluster.Birch"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_estimator_html_repr.ColumnTransformer": {
  "data": {
   "shadows": "sklearn.compose.ColumnTransformer"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_estimator_html_repr.DecisionTreeClassifier": {
  "data": {
   "shadows": "sklearn.tree.DecisionTreeClassifier"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_estimator_html_repr.FeatureUnion": {
  "data": {
   "shadows": "sklearn.pipeline.FeatureUnion"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_estimator_html_repr.GaussianProcessRegressor": {
  "data": {
   "shadows": "sklearn.gaussian_process.GaussianProcessRegressor"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_estimator_html_repr.LinearSVC": {
  "data": {
   "shadows": "sklearn.svm.LinearSVC"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_estimator_html_repr.LinearSVR": {
  "data": {
   "shadows": "sklearn.svm.LinearSVR"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_estimator_html_repr.LogisticRegression": {
  "data": {
   "shadows": "sklearn.linear_model.LogisticRegression"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_estimator_html_repr.MLPClassifier": {
  "data": {
   "shadows": "sklearn.neural_network.MLPClassifier"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_estimator_html_repr.OneHotEncoder": {
  "data": {
   "shadows": "sklearn.preprocessing.OneHotEncoder"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_estimator_html_repr.OneVsOneClassifier": {
  "data": {
   "shadows": "sklearn.multiclass.OneVsOneClassifier"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_estimator_html_repr.PCA": {
  "data": {
   "shadows": "sklearn.decomposition.PCA"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_estimator_html_repr.Pipeline": {
  "data": {
   "shadows": "sklearn.pipeline.Pipeline"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_estimator_html_repr.RationalQuadratic": {
  "data": {
   "shadows": "sklearn.gaussian_process.kernels.RationalQuadratic"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_estimator_html_repr.SelectPercentile": {
  "data": {
   "shadows": "sklearn.feature_selection.SelectPercentile"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_estimator_html_repr.SimpleImputer": {
  "data": {
   "shadows": "sklearn.impute.SimpleImputer"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_estimator_html_repr.StackingClassifier": {
  "data": {
   "shadows": "sklearn.ensemble.StackingClassifier"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_estimator_html_repr.StackingRegressor": {
  "data": {
   "shadows": "sklearn.ensemble.StackingRegressor"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_estimator_html_repr.StringIO": {
  "data": {
   "shadows": "io.StringIO"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_estimator_html_repr.TruncatedSVD": {
  "data": {
   "shadows": "sklearn.decomposition.TruncatedSVD"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_estimator_html_repr.VotingClassifier": {
  "data": {
   "shadows": "sklearn.ensemble.VotingClassifier"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_estimator_html_repr._get_visual_block": {
  "data": {
   "shadows": "sklearn.utils._estimator_html_repr._get_visual_block"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_estimator_html_repr._write_label_html": {
  "data": {
   "shadows": "sklearn.utils._estimator_html_repr._write_label_html"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_estimator_html_repr.closing": {
  "data": {
   "shadows": "contextlib.closing"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_estimator_html_repr.config_context": {
  "data": {
   "shadows": "sklearn.config_context"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_estimator_html_repr.estimator_html_repr": {
  "data": {
   "shadows": "sklearn.utils._estimator_html_repr.estimator_html_repr"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_estimator_html_repr.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_estimator_html_repr.test_birch_duck_typing_meta": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "sklearn.cluster.AgglomerativeClustering",
    "sklearn.cluster.Birch",
    "sklearn.config_context",
    "sklearn.utils._estimator_html_repr.estimator_html_repr",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_html_repr.test_duck_typing_nested_estimator": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "sklearn.gaussian_process.GaussianProcessRegressor",
    "sklearn.gaussian_process.kernels.RationalQuadratic",
    "sklearn.utils._estimator_html_repr.estimator_html_repr",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_html_repr.test_estimator_html_repr_pipeline": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "sklearn.compose.ColumnTransformer",
    "sklearn.config_context",
    "sklearn.decomposition.PCA",
    "sklearn.decomposition.TruncatedSVD",
    "sklearn.ensemble.VotingClassifier",
    "sklearn.feature_selection.SelectPercentile",
    "sklearn.impute.SimpleImputer",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.neural_network.MLPClassifier",
    "sklearn.pipeline.FeatureUnion",
    "sklearn.pipeline.Pipeline",
    "sklearn.preprocessing.OneHotEncoder",
    "sklearn.utils._estimator_html_repr.estimator_html_repr",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_html_repr.test_get_visual_block_column_transformer": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "sklearn.compose.ColumnTransformer",
    "sklearn.decomposition.PCA",
    "sklearn.decomposition.TruncatedSVD",
    "sklearn.utils._estimator_html_repr._get_visual_block",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_html_repr.test_get_visual_block_feature_union": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "sklearn.decomposition.PCA",
    "sklearn.decomposition.TruncatedSVD",
    "sklearn.pipeline.FeatureUnion",
    "sklearn.utils._estimator_html_repr._get_visual_block",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_html_repr.test_get_visual_block_pipeline": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "sklearn.impute.SimpleImputer",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.pipeline.Pipeline",
    "sklearn.utils._estimator_html_repr._get_visual_block",
    "str",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_html_repr.test_get_visual_block_single_estimator": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "sklearn.linear_model.LogisticRegression",
    "sklearn.utils._estimator_html_repr._get_visual_block",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_html_repr.test_get_visual_block_single_str_none": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "sklearn.utils._estimator_html_repr._get_visual_block",
    "sklearn.utils.tests.test_estimator_html_repr.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_html_repr.test_get_visual_block_voting": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "sklearn.ensemble.VotingClassifier",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.neural_network.MLPClassifier",
    "sklearn.utils._estimator_html_repr._get_visual_block",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_html_repr.test_one_estimator_print_change_only": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "sklearn.config_context",
    "sklearn.decomposition.PCA",
    "sklearn.utils._estimator_html_repr.estimator_html_repr",
    "sklearn.utils.tests.test_estimator_html_repr.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_html_repr.test_ovo_classifier_duck_typing_meta": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "sklearn.config_context",
    "sklearn.multiclass.OneVsOneClassifier",
    "sklearn.svm.LinearSVC",
    "sklearn.utils._estimator_html_repr.estimator_html_repr",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_html_repr.test_stacking_classsifer": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "sklearn.ensemble.StackingClassifier",
    "sklearn.neural_network.MLPClassifier",
    "sklearn.svm.LinearSVC",
    "sklearn.tree.DecisionTreeClassifier",
    "sklearn.utils._estimator_html_repr.estimator_html_repr",
    "sklearn.utils.tests.test_estimator_html_repr.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_html_repr.test_stacking_regressor": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "sklearn.ensemble.StackingRegressor",
    "sklearn.svm.LinearSVR",
    "sklearn.utils._estimator_html_repr.estimator_html_repr",
    "sklearn.utils.tests.test_estimator_html_repr.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_html_repr.test_write_label_html": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "contextlib.closing",
    "io.StringIO",
    "sklearn.utils._estimator_html_repr._write_label_html",
    "sklearn.utils.tests.test_estimator_html_repr.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_extmath": {
  "data": {},
  "type": "module"
 },
 "sklearn.utils.tests.test_extmath._deterministic_vector_sign_flip": {
  "data": {
   "shadows": "sklearn.utils.extmath._deterministic_vector_sign_flip"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_extmath._incremental_mean_and_var": {
  "data": {
   "shadows": "sklearn.utils.extmath._incremental_mean_and_var"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_extmath._incremental_weighted_mean_and_var": {
  "data": {
   "shadows": "sklearn.utils.extmath._incremental_weighted_mean_and_var"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_extmath._safe_accumulator_op": {
  "data": {
   "shadows": "sklearn.utils.extmath._safe_accumulator_op"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_extmath.assert_allclose": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_allclose"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_extmath.assert_allclose_dense_sparse": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_allclose_dense_sparse"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_extmath.assert_almost_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_almost_equal"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_extmath.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_extmath.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_extmath.assert_warns": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_warns"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_extmath.assert_warns_message": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_warns_message"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_extmath.cartesian": {
  "data": {
   "shadows": "sklearn.utils.extmath.cartesian"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_extmath.check_randomized_svd_low_rank": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.dtype",
    "numpy.float32",
    "numpy.float64",
    "scipy.linalg.svd",
    "scipy.sparse.csr_matrix",
    "sklearn.datasets.make_low_rank_matrix",
    "sklearn.utils._testing.assert_almost_equal",
    "sklearn.utils.extmath.randomized_svd"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_extmath.density": {
  "data": {
   "shadows": "sklearn.utils.extmath.density"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_extmath.expit": {
  "data": {
   "shadows": "scipy.special.expit"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_extmath.gen_batches": {
  "data": {
   "shadows": "sklearn.utils.gen_batches"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_extmath.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_extmath.log_logistic": {
  "data": {
   "shadows": "sklearn.utils.extmath.log_logistic"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_extmath.make_low_rank_matrix": {
  "data": {
   "shadows": "sklearn.datasets.make_low_rank_matrix"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_extmath.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_extmath.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_extmath.randomized_svd": {
  "data": {
   "shadows": "sklearn.utils.extmath.randomized_svd"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_extmath.rng": {
  "data": {
   "lineno": 457,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.utils.tests.test_extmath.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_extmath.row_norms": {
  "data": {
   "shadows": "sklearn.utils.extmath.row_norms"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_extmath.safe_sparse_dot": {
  "data": {
   "shadows": "sklearn.utils.extmath.safe_sparse_dot"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_extmath.skip_if_32bit": {
  "data": {
   "shadows": "sklearn.utils._testing.skip_if_32bit"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_extmath.softmax": {
  "data": {
   "shadows": "sklearn.utils.extmath.softmax"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_extmath.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_extmath.stable_cumsum": {
  "data": {
   "shadows": "sklearn.utils.extmath.stable_cumsum"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_extmath.stats": {
  "data": {
   "shadows": "scipy.stats"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_extmath.svd_flip": {
  "data": {
   "shadows": "sklearn.utils.extmath.svd_flip"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_extmath.test_cartesian": {
  "data": {
   "lineno": 419,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "numpy.newaxis",
    "sklearn.utils._testing.assert_array_equal",
    "sklearn.utils.extmath.cartesian"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_extmath.test_density": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "scipy.sparse.coo_matrix",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.lil_matrix",
    "sklearn.utils.extmath.density"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_extmath.test_incremental_mean_and_variance_ignore_nan": {
  "data": {
   "lineno": 574,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.int32",
    "numpy.nan",
    "sklearn.utils._testing.assert_allclose",
    "sklearn.utils.extmath._incremental_mean_and_var"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_extmath.test_incremental_variance_ddof": {
  "data": {
   "lineno": 671,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.full",
    "numpy.hstack",
    "numpy.int32",
    "numpy.mean",
    "numpy.random.RandomState",
    "numpy.var",
    "sklearn.utils._testing.assert_almost_equal",
    "sklearn.utils._testing.assert_array_equal",
    "sklearn.utils.extmath._incremental_mean_and_var",
    "sklearn.utils.tests.test_extmath.rng",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_extmath.test_incremental_variance_numerical_stability": {
  "data": {
   "lineno": 598,
   "symbols_in_volume": [
    "naive_mean_variance_update",
    "np_var",
    "numpy.abs",
    "numpy.array",
    "numpy.float64",
    "numpy.full",
    "numpy.int32",
    "numpy.log",
    "numpy.vstack",
    "numpy.zeros",
    "one_pass_var",
    "range",
    "sklearn.utils._testing.assert_array_almost_equal",
    "sklearn.utils._testing.assert_array_equal",
    "sklearn.utils._testing.skip_if_32bit",
    "sklearn.utils.extmath._incremental_mean_and_var"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_extmath.test_incremental_variance_numerical_stability.naive_mean_variance_update": {
  "data": {
   "lineno": 624,
   "symbols_in_volume": [
    "float"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_extmath.test_incremental_variance_numerical_stability.np_var": {
  "data": {
   "lineno": 602
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_extmath.test_incremental_variance_numerical_stability.one_pass_var": {
  "data": {
   "lineno": 607
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_extmath.test_incremental_variance_numerical_stability.two_pass_var": {
  "data": {
   "lineno": 616,
   "symbols_in_volume": [
    "numpy.mean"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_extmath.test_incremental_variance_update_formulas": {
  "data": {
   "lineno": 552,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.full",
    "numpy.int32",
    "sklearn.utils._testing.assert_almost_equal",
    "sklearn.utils.extmath._incremental_mean_and_var"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_extmath.test_incremental_weighted_mean_and_variance": {
  "data": {
   "lineno": 477,
   "symbols_in_volume": [
    "_assert",
    "numpy.average",
    "numpy.mean",
    "numpy.ones",
    "numpy.var",
    "sklearn.utils.extmath._safe_accumulator_op",
    "sklearn.utils.tests.test_extmath.pytest",
    "sklearn.utils.tests.test_extmath.rng"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_extmath.test_incremental_weighted_mean_and_variance._assert": {
  "data": {
   "lineno": 485,
   "symbols_in_volume": [
    "sklearn.utils._testing.assert_allclose",
    "sklearn.utils.extmath._incremental_weighted_mean_and_var",
    "sklearn.utils.gen_batches"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_extmath.test_incremental_weighted_mean_and_variance_ignore_nan": {
  "data": {
   "lineno": 517,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.float32",
    "numpy.float64",
    "numpy.int32",
    "numpy.nan",
    "numpy.ones",
    "sklearn.utils._testing.assert_allclose",
    "sklearn.utils.extmath._incremental_weighted_mean_and_var",
    "sklearn.utils.tests.test_extmath.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_extmath.test_incremental_weighted_mean_and_variance_simple": {
  "data": {
   "lineno": 462,
   "symbols_in_volume": [
    "numpy.average",
    "numpy.float32",
    "numpy.float64",
    "sklearn.utils._testing.assert_almost_equal",
    "sklearn.utils.extmath._incremental_weighted_mean_and_var",
    "sklearn.utils.tests.test_extmath.pytest",
    "sklearn.utils.tests.test_extmath.rng"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_extmath.test_logistic_sigmoid": {
  "data": {
   "lineno": 445,
   "symbols_in_volume": [
    "naive_log_logistic",
    "numpy.array",
    "numpy.linspace",
    "sklearn.utils._testing.assert_array_almost_equal",
    "sklearn.utils.extmath.log_logistic"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_extmath.test_logistic_sigmoid.naive_log_logistic": {
  "data": {
   "lineno": 447,
   "symbols_in_volume": [
    "numpy.log",
    "scipy.special.expit"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_extmath.test_random_weights": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.utils._testing.assert_array_almost_equal",
    "sklearn.utils._testing.assert_array_equal",
    "sklearn.utils.extmath.weighted_mode"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_extmath.test_randomized_svd_infinite_rank": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "numpy.abs",
    "scipy.linalg.svd",
    "sklearn.datasets.make_low_rank_matrix",
    "sklearn.utils._testing.assert_almost_equal",
    "sklearn.utils.extmath.randomized_svd"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_extmath.test_randomized_svd_low_rank_all_dtypes": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.float64",
    "numpy.int32",
    "numpy.int64",
    "sklearn.utils.tests.test_extmath.check_randomized_svd_low_rank",
    "sklearn.utils.tests.test_extmath.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_extmath.test_randomized_svd_low_rank_with_noise": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "numpy.abs",
    "scipy.linalg.svd",
    "sklearn.datasets.make_low_rank_matrix",
    "sklearn.utils._testing.assert_almost_equal",
    "sklearn.utils.extmath.randomized_svd"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_extmath.test_randomized_svd_power_iteration_normalizer": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.diag",
    "numpy.random.RandomState",
    "scipy.linalg.norm",
    "sklearn.datasets.make_low_rank_matrix",
    "sklearn.utils.extmath.randomized_svd"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_extmath.test_randomized_svd_sign_flip": {
  "data": {
   "lineno": 376,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.dot",
    "numpy.eye",
    "range",
    "sklearn.utils._testing.assert_almost_equal",
    "sklearn.utils.extmath.randomized_svd"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_extmath.test_randomized_svd_sign_flip_with_transpose": {
  "data": {
   "lineno": 388,
   "symbols_in_volume": [
    "max_loading_is_positive",
    "numpy.arange",
    "sklearn.utils.extmath.randomized_svd"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_extmath.test_randomized_svd_sign_flip_with_transpose.max_loading_is_positive": {
  "data": {
   "lineno": 393,
   "symbols_in_volume": [
    "numpy.abs"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_extmath.test_randomized_svd_sparse_warnings": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": [
    "cls",
    "cls.__name__",
    "numpy.random.RandomState",
    "scipy.sparse.SparseEfficiencyWarning",
    "scipy.sparse.dok_matrix",
    "scipy.sparse.lil_matrix",
    "sklearn.datasets.make_low_rank_matrix",
    "sklearn.utils._testing.assert_warns_message",
    "sklearn.utils.extmath.randomized_svd"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_extmath.test_randomized_svd_transpose_consistency": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "numpy.dot",
    "scipy.linalg.svd",
    "sklearn.datasets.make_low_rank_matrix",
    "sklearn.utils._testing.assert_almost_equal",
    "sklearn.utils.extmath.randomized_svd"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_extmath.test_row_norms": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.float64",
    "numpy.int32",
    "numpy.int64",
    "numpy.random.RandomState",
    "numpy.sqrt",
    "scipy.sparse.csr_matrix",
    "sklearn.utils._testing.assert_array_almost_equal",
    "sklearn.utils.extmath.row_norms",
    "sklearn.utils.tests.test_extmath.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_extmath.test_safe_sparse_dot_2d": {
  "data": {
   "lineno": 737,
   "symbols_in_volume": [
    "A_array_constr",
    "B_array_constr",
    "numpy.array",
    "numpy.dot",
    "numpy.random.RandomState",
    "scipy.sparse.csr_matrix",
    "sklearn.utils._testing.assert_allclose",
    "sklearn.utils.extmath.safe_sparse_dot",
    "sklearn.utils.tests.test_extmath.pytest",
    "sklearn.utils.tests.test_extmath.rng"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_extmath.test_safe_sparse_dot_2d_1d": {
  "data": {
   "lineno": 775,
   "symbols_in_volume": [
    "A_array_constr",
    "numpy.array",
    "numpy.dot",
    "numpy.random.RandomState",
    "scipy.sparse.csr_matrix",
    "sklearn.utils._testing.assert_allclose",
    "sklearn.utils.extmath.safe_sparse_dot",
    "sklearn.utils.tests.test_extmath.pytest",
    "sklearn.utils.tests.test_extmath.rng"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_extmath.test_safe_sparse_dot_dense_output": {
  "data": {
   "lineno": 797,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "scipy.sparse.issparse",
    "scipy.sparse.random",
    "sklearn.utils._testing.assert_allclose_dense_sparse",
    "sklearn.utils.extmath.safe_sparse_dot",
    "sklearn.utils.tests.test_extmath.pytest",
    "sklearn.utils.tests.test_extmath.rng"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_extmath.test_safe_sparse_dot_nd": {
  "data": {
   "lineno": 755,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.random.RandomState",
    "scipy.sparse.csr_matrix",
    "sklearn.utils._testing.assert_allclose",
    "sklearn.utils.extmath.safe_sparse_dot",
    "sklearn.utils.tests.test_extmath.rng"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_extmath.test_softmax": {
  "data": {
   "lineno": 717,
   "symbols_in_volume": [
    "numpy.exp",
    "numpy.random.RandomState",
    "numpy.sum",
    "sklearn.utils._testing.assert_array_almost_equal",
    "sklearn.utils.extmath.softmax",
    "sklearn.utils.tests.test_extmath.rng"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_extmath.test_stable_cumsum": {
  "data": {
   "lineno": 725,
   "symbols_in_volume": [
    "RuntimeWarning",
    "numpy.cumsum",
    "numpy.random.RandomState",
    "sklearn.utils._testing.assert_array_equal",
    "sklearn.utils._testing.assert_warns",
    "sklearn.utils.extmath.stable_cumsum"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_extmath.test_svd_flip": {
  "data": {
   "lineno": 351,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.random.RandomState",
    "scipy.linalg.svd",
    "sklearn.utils._testing.assert_almost_equal",
    "sklearn.utils.extmath.svd_flip"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_extmath.test_uniform_weights": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "numpy.ones",
    "numpy.random.RandomState",
    "scipy.stats.mode",
    "sklearn.utils._testing.assert_array_equal",
    "sklearn.utils.extmath.weighted_mode"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_extmath.test_vector_sign_flip": {
  "data": {
   "lineno": 706,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.argmax",
    "numpy.newaxis",
    "numpy.random.RandomState",
    "numpy.sign",
    "range",
    "sklearn.utils._testing.assert_array_equal",
    "sklearn.utils.extmath._deterministic_vector_sign_flip"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_extmath.weighted_mode": {
  "data": {
   "shadows": "sklearn.utils.extmath.weighted_mode"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_fast_dict": {
  "data": {},
  "type": "module"
 },
 "sklearn.utils.tests.test_fast_dict.IntFloatDict": {
  "data": {
   "shadows": "sklearn.utils._fast_dict.IntFloatDict"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_fast_dict.argmin": {
  "data": {
   "shadows": "sklearn.utils._fast_dict.argmin"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_fast_dict.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_fast_dict.test_int_float_dict": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "len",
    "numpy.intp",
    "numpy.random.RandomState",
    "numpy.unique",
    "range",
    "sklearn.utils._fast_dict.IntFloatDict",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_fast_dict.test_int_float_dict_argmin": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.float64",
    "numpy.intp",
    "sklearn.utils._fast_dict.IntFloatDict",
    "sklearn.utils._fast_dict.argmin"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_fixes": {
  "data": {},
  "type": "module"
 },
 "sklearn.utils.tests.test_fixes.MaskedArray": {
  "data": {
   "shadows": "sklearn.utils.fixes.MaskedArray"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_fixes._joblib_parallel_args": {
  "data": {
   "shadows": "sklearn.utils.fixes._joblib_parallel_args"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_fixes._object_dtype_isnan": {
  "data": {
   "shadows": "sklearn.utils.fixes._object_dtype_isnan"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_fixes.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_fixes.joblib": {
  "data": {
   "shadows": "joblib"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_fixes.loguniform": {
  "data": {
   "shadows": "sklearn.utils.fixes.loguniform"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_fixes.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_fixes.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_fixes.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_fixes.scipy.stats": {
  "data": {
   "shadows": "scipy.stats"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_fixes.test_joblib_parallel_args": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "NotImplementedError",
    "ValueError",
    "sklearn.utils.fixes._joblib_parallel_args",
    "sklearn.utils.tests.test_fixes.joblib",
    "sklearn.utils.tests.test_fixes.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_fixes.test_loguniform": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "numpy.abs",
    "numpy.array",
    "numpy.exp",
    "numpy.histogram",
    "sklearn.utils.fixes.loguniform",
    "sklearn.utils.tests.test_fixes.math",
    "sklearn.utils.tests.test_fixes.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_fixes.test_masked_array_deprecated": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "FutureWarning",
    "sklearn.utils.fixes.MaskedArray",
    "sklearn.utils.tests.test_fixes.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_fixes.test_object_dtype_isnan": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "float",
    "numpy.array",
    "numpy.nan",
    "object",
    "sklearn.utils._testing.assert_array_equal",
    "sklearn.utils.fixes._object_dtype_isnan",
    "sklearn.utils.tests.test_fixes.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_metaestimators": {
  "data": {},
  "type": "module"
 },
 "sklearn.utils.tests.test_metaestimators.HasNoPredict": {
  "data": {
   "lineno": 62
  },
  "type": "class"
 },
 "sklearn.utils.tests.test_metaestimators.HasPredict": {
  "data": {
   "lineno": 55
  },
  "type": "class"
 },
 "sklearn.utils.tests.test_metaestimators.HasPredict.predict": {
  "data": {
   "lineno": 58
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_metaestimators.MetaEst": {
  "data": {
   "lineno": 28
  },
  "type": "class"
 },
 "sklearn.utils.tests.test_metaestimators.MetaEst.__init__": {
  "data": {
   "lineno": 30
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_metaestimators.MetaEst.predict": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "sklearn.utils.metaestimators.if_delegate_has_method"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_metaestimators.MetaEstTestList": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "sklearn.utils.tests.test_metaestimators.MetaEst"
   ]
  },
  "type": "class"
 },
 "sklearn.utils.tests.test_metaestimators.MetaEstTestList.predict": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "sklearn.utils.metaestimators.if_delegate_has_method"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_metaestimators.MetaEstTestTuple": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "sklearn.utils.tests.test_metaestimators.MetaEst"
   ]
  },
  "type": "class"
 },
 "sklearn.utils.tests.test_metaestimators.MetaEstTestTuple.predict": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "sklearn.utils.metaestimators.if_delegate_has_method"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_metaestimators.MockMetaEstimator": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "sklearn.utils.tests.test_metaestimators.Prefix"
   ]
  },
  "type": "class"
 },
 "sklearn.utils.tests.test_metaestimators.MockMetaEstimator.func": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "sklearn.utils.metaestimators.if_delegate_has_method"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_metaestimators.Prefix": {
  "data": {
   "lineno": 4
  },
  "type": "class"
 },
 "sklearn.utils.tests.test_metaestimators.Prefix.func": {
  "data": {
   "lineno": 5
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_metaestimators.if_delegate_has_method": {
  "data": {
   "shadows": "sklearn.utils.metaestimators.if_delegate_has_method"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_metaestimators.test_delegated_docstring": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "sklearn.utils.tests.test_metaestimators.MockMetaEstimator",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_metaestimators.test_if_delegate_has_method": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "hasattr",
    "sklearn.utils.tests.test_metaestimators.HasNoPredict",
    "sklearn.utils.tests.test_metaestimators.HasPredict",
    "sklearn.utils.tests.test_metaestimators.MetaEst",
    "sklearn.utils.tests.test_metaestimators.MetaEstTestList",
    "sklearn.utils.tests.test_metaestimators.MetaEstTestTuple"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_mocking": {
  "data": {},
  "type": "module"
 },
 "sklearn.utils.tests.test_mocking.CheckingClassifier": {
  "data": {
   "shadows": "sklearn.utils._mocking.CheckingClassifier"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_mocking._convert_container": {
  "data": {
   "shadows": "sklearn.utils._testing._convert_container"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_mocking._fail": {
  "data": {
   "lineno": 25
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_mocking._safe_indexing": {
  "data": {
   "shadows": "sklearn.utils._safe_indexing"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_mocking._success": {
  "data": {
   "lineno": 21
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_mocking.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_mocking.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_mocking.check_array": {
  "data": {
   "shadows": "sklearn.utils.check_array"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_mocking.iris": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "sklearn.datasets.load_iris",
    "sklearn.utils.tests.test_mocking.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_mocking.load_iris": {
  "data": {
   "shadows": "sklearn.datasets.load_iris"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_mocking.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_mocking.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_mocking.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_mocking.test_check_X_on_predict_fail": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "AssertionError",
    "getattr",
    "sklearn.utils._mocking.CheckingClassifier",
    "sklearn.utils.tests.test_mocking._fail",
    "sklearn.utils.tests.test_mocking._success",
    "sklearn.utils.tests.test_mocking.iris",
    "sklearn.utils.tests.test_mocking.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_mocking.test_check_X_on_predict_success": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "getattr",
    "sklearn.utils._mocking.CheckingClassifier",
    "sklearn.utils.tests.test_mocking._success",
    "sklearn.utils.tests.test_mocking.iris",
    "sklearn.utils.tests.test_mocking.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_mocking.test_check_on_fit_fail": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "AssertionError",
    "sklearn.utils._mocking.CheckingClassifier",
    "sklearn.utils.tests.test_mocking._fail",
    "sklearn.utils.tests.test_mocking._success",
    "sklearn.utils.tests.test_mocking.iris",
    "sklearn.utils.tests.test_mocking.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_mocking.test_check_on_fit_success": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "sklearn.utils._mocking.CheckingClassifier",
    "sklearn.utils.tests.test_mocking._success",
    "sklearn.utils.tests.test_mocking.iris",
    "sklearn.utils.tests.test_mocking.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_mocking.test_checking_classifier": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "int",
    "len",
    "numpy.logical_or",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal",
    "numpy.unique",
    "numpy.zeros",
    "sklearn.utils._mocking.CheckingClassifier",
    "sklearn.utils._safe_indexing",
    "sklearn.utils._testing._convert_container",
    "sklearn.utils.tests.test_mocking.iris",
    "sklearn.utils.tests.test_mocking.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_mocking.test_checking_classifier_fit_params": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "AssertionError",
    "len",
    "numpy.ones",
    "sklearn.utils._mocking.CheckingClassifier",
    "sklearn.utils.tests.test_mocking.iris",
    "sklearn.utils.tests.test_mocking.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_mocking.test_checking_classifier_methods_to_check": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "AssertionError",
    "getattr",
    "scipy.sparse.issparse",
    "sklearn.utils._mocking.CheckingClassifier",
    "sklearn.utils.tests.test_mocking.iris",
    "sklearn.utils.tests.test_mocking.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_mocking.test_checking_classifier_missing_fit_params": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "AssertionError",
    "sklearn.utils._mocking.CheckingClassifier",
    "sklearn.utils.tests.test_mocking.iris",
    "sklearn.utils.tests.test_mocking.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_mocking.test_checking_classifier_with_params": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "AssertionError",
    "TypeError",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.issparse",
    "sklearn.utils._mocking.CheckingClassifier",
    "sklearn.utils.check_array",
    "sklearn.utils.tests.test_mocking.iris",
    "sklearn.utils.tests.test_mocking.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_multiclass": {
  "data": {
   "symbols_in_volume": [
    "bool",
    "float",
    "frozenset",
    "numpy.array",
    "numpy.float32",
    "numpy.int8",
    "numpy.random.RandomState",
    "numpy.uint8",
    "object",
    "scipy.sparse.csr_matrix",
    "sklearn.utils.estimator_checks._NotAnArray"
   ]
  },
  "type": "module"
 },
 "sklearn.utils.tests.test_multiclass.EXAMPLES": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "sklearn.utils.tests.test_multiclass.MULTILABEL_SEQUENCES": {
  "data": {
   "lineno": 145
  },
  "type": "constant"
 },
 "sklearn.utils.tests.test_multiclass.NON_ARRAY_LIKE_EXAMPLES": {
  "data": {
   "lineno": 136
  },
  "type": "constant"
 },
 "sklearn.utils.tests.test_multiclass.SVC": {
  "data": {
   "shadows": "sklearn.svm.SVC"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_multiclass.ShuffleSplit": {
  "data": {
   "shadows": "sklearn.model_selection.ShuffleSplit"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_multiclass._NotAnArray": {
  "data": {
   "shadows": "sklearn.utils.estimator_checks._NotAnArray"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_multiclass._ovr_decision_function": {
  "data": {
   "shadows": "sklearn.utils.multiclass._ovr_decision_function"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_multiclass._safe_split": {
  "data": {
   "shadows": "sklearn.utils.metaestimators._safe_split"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_multiclass.assert_allclose": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_allclose"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_multiclass.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_multiclass.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_multiclass.check_classification_targets": {
  "data": {
   "shadows": "sklearn.utils.multiclass.check_classification_targets"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_multiclass.class_distribution": {
  "data": {
   "shadows": "sklearn.utils.multiclass.class_distribution"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_multiclass.coo_matrix": {
  "data": {
   "shadows": "scipy.sparse.coo_matrix"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_multiclass.csc_matrix": {
  "data": {
   "shadows": "scipy.sparse.csc_matrix"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_multiclass.csr_matrix": {
  "data": {
   "shadows": "scipy.sparse.csr_matrix"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_multiclass.datasets": {
  "data": {
   "shadows": "sklearn.datasets"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_multiclass.dok_matrix": {
  "data": {
   "shadows": "scipy.sparse.dok_matrix"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_multiclass.is_multilabel": {
  "data": {
   "shadows": "sklearn.utils.multiclass.is_multilabel"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_multiclass.issparse": {
  "data": {
   "shadows": "scipy.sparse.issparse"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_multiclass.lil_matrix": {
  "data": {
   "shadows": "scipy.sparse.lil_matrix"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_multiclass.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_multiclass.parse_version": {
  "data": {
   "shadows": "sklearn.utils.fixes.parse_version"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_multiclass.product": {
  "data": {
   "shadows": "itertools.product"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_multiclass.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_multiclass.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_multiclass.test_check_classification_targets": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.utils.multiclass.check_classification_targets",
    "sklearn.utils.tests.test_multiclass.EXAMPLES",
    "sklearn.utils.tests.test_multiclass.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_multiclass.test_class_distribution": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "numpy.array",
    "range",
    "scipy.sparse.csc_matrix",
    "sklearn.utils._testing.assert_array_almost_equal",
    "sklearn.utils.multiclass.class_distribution"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_multiclass.test_is_multilabel": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "hasattr",
    "numpy.asarray",
    "scipy.sparse.coo_matrix",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.dok_matrix",
    "scipy.sparse.issparse",
    "scipy.sparse.lil_matrix",
    "sklearn.utils.multiclass.is_multilabel",
    "sklearn.utils.tests.test_multiclass.EXAMPLES",
    "sparse_matrix"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_multiclass.test_ovr_decision_function": {
  "data": {
   "lineno": 399,
   "symbols_in_volume": [
    "numpy.argmax",
    "numpy.array",
    "range",
    "sklearn.utils._testing.assert_allclose",
    "sklearn.utils._testing.assert_array_equal",
    "sklearn.utils.multiclass._ovr_decision_function"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_multiclass.test_safe_split_with_precomputed_kernel": {
  "data": {
   "lineno": 377,
   "symbols_in_volume": [
    "list",
    "numpy.dot",
    "sklearn.datasets.load_iris",
    "sklearn.model_selection.ShuffleSplit",
    "sklearn.svm.SVC",
    "sklearn.utils._testing.assert_array_almost_equal",
    "sklearn.utils.metaestimators._safe_split"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_multiclass.test_type_of_target": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.utils.multiclass.type_of_target",
    "sklearn.utils.tests.test_multiclass.EXAMPLES",
    "sklearn.utils.tests.test_multiclass.MULTILABEL_SEQUENCES",
    "sklearn.utils.tests.test_multiclass.NON_ARRAY_LIKE_EXAMPLES",
    "sklearn.utils.tests.test_multiclass.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_multiclass.test_type_of_target_pandas_sparse": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": [
    "ValueError",
    "numpy.nan",
    "pd_sparse_array",
    "sklearn.utils.fixes.parse_version",
    "sklearn.utils.multiclass.type_of_target",
    "sklearn.utils.tests.test_multiclass.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_multiclass.test_unique_labels": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "ValueError",
    "numpy.arange",
    "numpy.array",
    "numpy.ones",
    "range",
    "sklearn.utils._testing.assert_array_equal",
    "sklearn.utils.multiclass.unique_labels",
    "sklearn.utils.tests.test_multiclass.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_multiclass.test_unique_labels_mixed_types": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "ValueError",
    "itertools.product",
    "sklearn.utils.multiclass.unique_labels",
    "sklearn.utils.tests.test_multiclass.EXAMPLES",
    "sklearn.utils.tests.test_multiclass.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_multiclass.test_unique_labels_non_specific": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "ValueError",
    "format",
    "sklearn.utils.multiclass.unique_labels",
    "sklearn.utils.tests.test_multiclass.EXAMPLES",
    "sklearn.utils.tests.test_multiclass.NON_ARRAY_LIKE_EXAMPLES",
    "sklearn.utils.tests.test_multiclass.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_multiclass.type_of_target": {
  "data": {
   "shadows": "sklearn.utils.multiclass.type_of_target"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_multiclass.unique_labels": {
  "data": {
   "shadows": "sklearn.utils.multiclass.unique_labels"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_murmurhash": {
  "data": {},
  "type": "module"
 },
 "sklearn.utils.tests.test_murmurhash.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_murmurhash.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_murmurhash.murmurhash3_32": {
  "data": {
   "shadows": "sklearn.utils.murmurhash.murmurhash3_32"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_murmurhash.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_murmurhash.test_mmhash3_bytes": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "sklearn.utils.murmurhash.murmurhash3_32"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_murmurhash.test_mmhash3_int": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "sklearn.utils.murmurhash.murmurhash3_32"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_murmurhash.test_mmhash3_int_array": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "int",
    "numpy.array",
    "numpy.int32",
    "numpy.random.RandomState",
    "numpy.testing.assert_array_equal",
    "sklearn.utils.murmurhash.murmurhash3_32"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_murmurhash.test_mmhash3_unicode": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "sklearn.utils.murmurhash.murmurhash3_32"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_murmurhash.test_no_collision_on_byte_range": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "range",
    "set",
    "sklearn.utils.murmurhash.murmurhash3_32"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_murmurhash.test_uniform_distribution": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "numpy.float64",
    "numpy.full",
    "numpy.ones",
    "numpy.testing.assert_array_almost_equal",
    "numpy.zeros",
    "range",
    "sklearn.utils.murmurhash.murmurhash3_32"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_optimize": {
  "data": {},
  "type": "module"
 },
 "sklearn.utils.tests.test_optimize._newton_cg": {
  "data": {
   "shadows": "sklearn.utils.optimize._newton_cg"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_optimize.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_optimize.fmin_ncg": {
  "data": {
   "shadows": "scipy.optimize.fmin_ncg"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_optimize.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_optimize.test_newton_cg": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "grad",
    "numpy.ones",
    "numpy.random.RandomState",
    "scipy.optimize.fmin_ncg",
    "sklearn.utils._testing.assert_array_almost_equal",
    "sklearn.utils.optimize._newton_cg"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_optimize.test_newton_cg.func": {
  "data": {
   "lineno": 16
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_optimize.test_newton_cg.grad": {
  "data": {
   "lineno": 20
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_optimize.test_newton_cg.grad_hess": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "grad"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_optimize.test_newton_cg.hess": {
  "data": {
   "lineno": 23
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_parallel": {
  "data": {},
  "type": "module"
 },
 "sklearn.utils.tests.test_parallel.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_parallel.Parallel": {
  "data": {
   "shadows": "joblib.Parallel"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_parallel.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_parallel.config_context": {
  "data": {
   "shadows": "sklearn._config.config_context"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_parallel.delayed": {
  "data": {
   "shadows": "sklearn.utils.fixes.delayed"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_parallel.get_config": {
  "data": {
   "shadows": "sklearn._config.get_config"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_parallel.get_working_memory": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "sklearn._config.get_config"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_parallel.joblib": {
  "data": {
   "shadows": "joblib"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_parallel.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_parallel.test_configuration_passes_through_to_joblib": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "distutils.version.LooseVersion",
    "joblib.Parallel",
    "numpy.testing.assert_array_equal",
    "range",
    "sklearn._config.config_context",
    "sklearn.utils.fixes.delayed",
    "sklearn.utils.tests.test_parallel.get_working_memory",
    "sklearn.utils.tests.test_parallel.joblib",
    "sklearn.utils.tests.test_parallel.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_pprint": {
  "data": {},
  "type": "module"
 },
 "sklearn.utils.tests.test_pprint.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_pprint.CountVectorizer": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator"
   ]
  },
  "type": "class"
 },
 "sklearn.utils.tests.test_pprint.CountVectorizer.__init__": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "input",
    "numpy.int64"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_pprint.GridSearchCV": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator"
   ]
  },
  "type": "class"
 },
 "sklearn.utils.tests.test_pprint.GridSearchCV.__init__": {
  "data": {
   "lineno": 64
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_pprint.LogisticRegression": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator"
   ]
  },
  "type": "class"
 },
 "sklearn.utils.tests.test_pprint.LogisticRegression.__init__": {
  "data": {
   "lineno": 19
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_pprint.LogisticRegression.fit": {
  "data": {
   "lineno": 40
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_pprint.LogisticRegressionCV": {
  "data": {
   "shadows": "sklearn.linear_model.LogisticRegressionCV"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_pprint.NMF": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator"
   ]
  },
  "type": "class"
 },
 "sklearn.utils.tests.test_pprint.NMF.__init__": {
  "data": {
   "lineno": 150
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_pprint.PCA": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator"
   ]
  },
  "type": "class"
 },
 "sklearn.utils.tests.test_pprint.PCA.__init__": {
  "data": {
   "lineno": 137
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_pprint.Pipeline": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator"
   ]
  },
  "type": "class"
 },
 "sklearn.utils.tests.test_pprint.Pipeline.__init__": {
  "data": {
   "lineno": 109
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_pprint.PrettyPrinter": {
  "data": {
   "shadows": "pprint.PrettyPrinter"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_pprint.RFE": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator"
   ]
  },
  "type": "class"
 },
 "sklearn.utils.tests.test_pprint.RFE.__init__": {
  "data": {
   "lineno": 55
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_pprint.SVC": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator"
   ]
  },
  "type": "class"
 },
 "sklearn.utils.tests.test_pprint.SVC.__init__": {
  "data": {
   "lineno": 115
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_pprint.SelectKBest": {
  "data": {
   "shadows": "sklearn.feature_selection.SelectKBest"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_pprint.SimpleImputer": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator"
   ]
  },
  "type": "class"
 },
 "sklearn.utils.tests.test_pprint.SimpleImputer.__init__": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_pprint.StandardScaler": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator",
    "sklearn.base.TransformerMixin"
   ]
  },
  "type": "class"
 },
 "sklearn.utils.tests.test_pprint.StandardScaler.__init__": {
  "data": {
   "lineno": 45
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_pprint.StandardScaler.transform": {
  "data": {
   "lineno": 50
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_pprint.TransformerMixin": {
  "data": {
   "shadows": "sklearn.base.TransformerMixin"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_pprint._EstimatorPrettyPrinter": {
  "data": {
   "shadows": "sklearn.utils._pprint._EstimatorPrettyPrinter"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_pprint.chi2": {
  "data": {
   "shadows": "sklearn.feature_selection.chi2"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_pprint.config_context": {
  "data": {
   "shadows": "sklearn.config_context"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_pprint.make_pipeline": {
  "data": {
   "shadows": "sklearn.pipeline.make_pipeline"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_pprint.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_pprint.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_pprint.set_config": {
  "data": {
   "shadows": "sklearn.set_config"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_pprint.test_basic": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "sklearn.utils.tests.test_pprint.LogisticRegression"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_pprint.test_bruteforce_ellipsis": {
  "data": {
   "lineno": 461,
   "symbols_in_volume": [
    "float",
    "len",
    "sklearn.utils.tests.test_pprint.LogisticRegression"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_pprint.test_builtin_prettyprinter": {
  "data": {
   "lineno": 535,
   "symbols_in_volume": [
    "pprint.PrettyPrinter",
    "sklearn.utils.tests.test_pprint.LogisticRegression"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_pprint.test_changed_only": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "float",
    "numpy.array",
    "repr",
    "sklearn.linear_model.LogisticRegressionCV",
    "sklearn.utils.tests.test_pprint.LogisticRegression",
    "sklearn.utils.tests.test_pprint.SimpleImputer"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_pprint.test_complexity_print_changed_only": {
  "data": {
   "lineno": 578,
   "symbols_in_volume": [
    "DummyEstimator",
    "DummyEstimator.nb_times_repr_called",
    "repr",
    "sklearn.config_context",
    "sklearn.pipeline.make_pipeline"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_pprint.test_complexity_print_changed_only.DummyEstimator": {
  "data": {
   "lineno": 584,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator",
    "sklearn.base.TransformerMixin"
   ]
  },
  "type": "class"
 },
 "sklearn.utils.tests.test_pprint.test_complexity_print_changed_only.DummyEstimator.__init__": {
  "data": {
   "lineno": 587
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_pprint.test_complexity_print_changed_only.DummyEstimator.__repr__": {
  "data": {
   "lineno": 590,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_pprint.test_complexity_print_changed_only.DummyEstimator.transform": {
  "data": {
   "lineno": 594
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_pprint.test_deeply_nested": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "sklearn.utils.tests.test_pprint.LogisticRegression",
    "sklearn.utils.tests.test_pprint.RFE"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_pprint.test_gridsearch": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "sklearn.utils.tests.test_pprint.GridSearchCV",
    "sklearn.utils.tests.test_pprint.SVC"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_pprint.test_gridsearch_pipeline": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "sklearn.feature_selection.SelectKBest",
    "sklearn.feature_selection.chi2",
    "sklearn.utils._pprint._EstimatorPrettyPrinter",
    "sklearn.utils.tests.test_pprint.GridSearchCV",
    "sklearn.utils.tests.test_pprint.NMF",
    "sklearn.utils.tests.test_pprint.PCA",
    "sklearn.utils.tests.test_pprint.Pipeline",
    "sklearn.utils.tests.test_pprint.SVC",
    "sklearn.utils.tests.test_pprint.re"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_pprint.test_kwargs_in_init": {
  "data": {
   "lineno": 543,
   "symbols_in_volume": [
    "WithKWargs",
    "sklearn.config_context"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_pprint.test_kwargs_in_init.WithKWargs": {
  "data": {
   "lineno": 549,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator"
   ]
  },
  "type": "class"
 },
 "sklearn.utils.tests.test_pprint.test_kwargs_in_init.WithKWargs.__init__": {
  "data": {
   "lineno": 552
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_pprint.test_kwargs_in_init.WithKWargs.get_params": {
  "data": {
   "lineno": 558,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_pprint.test_kwargs_in_init.WithKWargs.set_params": {
  "data": {
   "lineno": 563,
   "symbols_in_volume": [
    "setattr"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_pprint.test_n_max_elements_to_show": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": [
    "list",
    "range",
    "sklearn.utils._pprint._EstimatorPrettyPrinter",
    "sklearn.utils.tests.test_pprint.CountVectorizer",
    "sklearn.utils.tests.test_pprint.GridSearchCV",
    "sklearn.utils.tests.test_pprint.SVC"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_pprint.test_pipeline": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "sklearn.pipeline.make_pipeline",
    "sklearn.utils.tests.test_pprint.LogisticRegression",
    "sklearn.utils.tests.test_pprint.StandardScaler"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_random": {
  "data": {},
  "type": "module"
 },
 "sklearn.utils.tests.test_random._our_rand_r_py": {
  "data": {
   "shadows": "sklearn.utils._random._our_rand_r_py"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_random._random_choice_csc": {
  "data": {
   "shadows": "sklearn.utils.random._random_choice_csc"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_random.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_random.check_edge_case_of_sample_int": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.utils.random.sample_without_replacement",
    "sklearn.utils.tests.test_random.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_random.check_sample_int": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "len",
    "numpy.all",
    "numpy.size",
    "numpy.unique",
    "range",
    "sklearn.utils.random.sample_without_replacement"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_random.check_sample_int_distribution": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "AssertionError",
    "frozenset",
    "len",
    "range",
    "scipy.special.comb",
    "sklearn.utils.random.sample_without_replacement"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_random.comb": {
  "data": {
   "shadows": "scipy.special.comb"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_random.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_random.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_random.sample_without_replacement": {
  "data": {
   "shadows": "sklearn.utils.random.sample_without_replacement"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_random.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_random.test_invalid_sample_without_replacement_algorithm": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.utils.random.sample_without_replacement",
    "sklearn.utils.tests.test_random.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_random.test_our_rand_r": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "sklearn.utils._random._our_rand_r_py"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_random.test_random_choice_csc": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "float",
    "len",
    "numpy.array",
    "numpy.bincount",
    "numpy.testing.assert_array_almost_equal",
    "range",
    "scipy.sparse.issparse",
    "sklearn.utils.random._random_choice_csc"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_random.test_random_choice_csc_errors": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "sklearn.utils.random._random_choice_csc",
    "sklearn.utils.tests.test_random.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_random.test_sample_without_replacement_algorithms": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "sklearn.utils.tests.test_random.check_edge_case_of_sample_int",
    "sklearn.utils.tests.test_random.check_sample_int",
    "sklearn.utils.tests.test_random.check_sample_int_distribution"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_random.test_sample_without_replacement_algorithms.sample_without_replacement_method": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "sklearn.utils.random.sample_without_replacement"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_seq_dataset": {
  "data": {
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.float32",
    "numpy.float64",
    "scipy.sparse.csr_matrix",
    "sklearn.datasets.load_iris",
    "sklearn.utils.tests.test_seq_dataset.X32",
    "sklearn.utils.tests.test_seq_dataset.X64",
    "sklearn.utils.tests.test_seq_dataset.iris",
    "sklearn.utils.tests.test_seq_dataset.y32",
    "sklearn.utils.tests.test_seq_dataset.y64"
   ]
  },
  "type": "module"
 },
 "sklearn.utils.tests.test_seq_dataset.ArrayDataset32": {
  "data": {
   "shadows": "sklearn.utils._seq_dataset.ArrayDataset32"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_seq_dataset.ArrayDataset64": {
  "data": {
   "shadows": "sklearn.utils._seq_dataset.ArrayDataset64"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_seq_dataset.CSRDataset32": {
  "data": {
   "shadows": "sklearn.utils._seq_dataset.CSRDataset32"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_seq_dataset.CSRDataset64": {
  "data": {
   "shadows": "sklearn.utils._seq_dataset.CSRDataset64"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_seq_dataset.X32": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "sklearn.utils.tests.test_seq_dataset.X64": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "sklearn.utils.tests.test_seq_dataset.X_csr32": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "sklearn.utils.tests.test_seq_dataset.X_csr64": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "sklearn.utils.tests.test_seq_dataset.assert_allclose": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_allclose"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_seq_dataset.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_seq_dataset.assert_csr_equal_values": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_seq_dataset.iris": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "sklearn.utils.tests.test_seq_dataset.load_iris": {
  "data": {
   "shadows": "sklearn.datasets.load_iris"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_seq_dataset.make_dense_dataset_32": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "sklearn.utils._seq_dataset.ArrayDataset32",
    "sklearn.utils.tests.test_seq_dataset.X32",
    "sklearn.utils.tests.test_seq_dataset.sample_weight32",
    "sklearn.utils.tests.test_seq_dataset.y32"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_seq_dataset.make_dense_dataset_64": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "sklearn.utils._seq_dataset.ArrayDataset64",
    "sklearn.utils.tests.test_seq_dataset.X64",
    "sklearn.utils.tests.test_seq_dataset.sample_weight64",
    "sklearn.utils.tests.test_seq_dataset.y64"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_seq_dataset.make_sparse_dataset_32": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "sklearn.utils._seq_dataset.CSRDataset32",
    "sklearn.utils.tests.test_seq_dataset.X_csr32",
    "sklearn.utils.tests.test_seq_dataset.sample_weight32",
    "sklearn.utils.tests.test_seq_dataset.y32"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_seq_dataset.make_sparse_dataset_64": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "sklearn.utils._seq_dataset.CSRDataset64",
    "sklearn.utils.tests.test_seq_dataset.X_csr64",
    "sklearn.utils.tests.test_seq_dataset.sample_weight64",
    "sklearn.utils.tests.test_seq_dataset.y64"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_seq_dataset.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_seq_dataset.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_seq_dataset.sample_weight32": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "sklearn.utils.tests.test_seq_dataset.sample_weight64": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "sklearn.utils.tests.test_seq_dataset.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_seq_dataset.test_buffer_dtype_mismatch_error": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.utils._seq_dataset.ArrayDataset32",
    "sklearn.utils._seq_dataset.ArrayDataset64",
    "sklearn.utils._seq_dataset.CSRDataset32",
    "sklearn.utils._seq_dataset.CSRDataset64",
    "sklearn.utils.tests.test_seq_dataset.X32",
    "sklearn.utils.tests.test_seq_dataset.X64",
    "sklearn.utils.tests.test_seq_dataset.X_csr32",
    "sklearn.utils.tests.test_seq_dataset.X_csr64",
    "sklearn.utils.tests.test_seq_dataset.pytest",
    "sklearn.utils.tests.test_seq_dataset.sample_weight32",
    "sklearn.utils.tests.test_seq_dataset.sample_weight64",
    "sklearn.utils.tests.test_seq_dataset.y32",
    "sklearn.utils.tests.test_seq_dataset.y64"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_seq_dataset.test_fused_types_consistency": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "make_dataset_32",
    "make_dataset_64",
    "numpy.float32",
    "numpy.float64",
    "range",
    "sklearn.utils._testing.assert_allclose",
    "sklearn.utils.tests.test_seq_dataset.make_dense_dataset_32",
    "sklearn.utils.tests.test_seq_dataset.make_dense_dataset_64",
    "sklearn.utils.tests.test_seq_dataset.make_sparse_dataset_32",
    "sklearn.utils.tests.test_seq_dataset.make_sparse_dataset_64",
    "sklearn.utils.tests.test_seq_dataset.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_seq_dataset.test_seq_dataset_basic_iteration": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "dataset_constructor",
    "range",
    "scipy.sparse.csr_matrix",
    "sklearn.utils.tests.test_seq_dataset.X64",
    "sklearn.utils.tests.test_seq_dataset.X_csr64",
    "sklearn.utils.tests.test_seq_dataset.assert_csr_equal_values",
    "sklearn.utils.tests.test_seq_dataset.make_dense_dataset_32",
    "sklearn.utils.tests.test_seq_dataset.make_dense_dataset_64",
    "sklearn.utils.tests.test_seq_dataset.make_sparse_dataset_32",
    "sklearn.utils.tests.test_seq_dataset.make_sparse_dataset_64",
    "sklearn.utils.tests.test_seq_dataset.pytest",
    "sklearn.utils.tests.test_seq_dataset.sample_weight64",
    "sklearn.utils.tests.test_seq_dataset.y64"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_seq_dataset.test_seq_dataset_shuffle": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "make_dense_dataset",
    "make_sparse_dataset",
    "range",
    "sklearn.utils.tests.test_seq_dataset.make_dense_dataset_32",
    "sklearn.utils.tests.test_seq_dataset.make_dense_dataset_64",
    "sklearn.utils.tests.test_seq_dataset.make_sparse_dataset_32",
    "sklearn.utils.tests.test_seq_dataset.make_sparse_dataset_64",
    "sklearn.utils.tests.test_seq_dataset.pytest",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_seq_dataset.y32": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "sklearn.utils.tests.test_seq_dataset.y64": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "sklearn.utils.tests.test_shortest_path": {
  "data": {},
  "type": "module"
 },
 "sklearn.utils.tests.test_shortest_path.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_shortest_path.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_shortest_path.floyd_warshall_slow": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "min",
    "numpy.inf",
    "numpy.isinf",
    "numpy.minimum",
    "numpy.where",
    "range"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_shortest_path.generate_graph": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "numpy.random.RandomState"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_shortest_path.graph_shortest_path": {
  "data": {
   "shadows": "sklearn.utils.graph.graph_shortest_path"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_shortest_path.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_shortest_path.single_source_shortest_path_length": {
  "data": {
   "shadows": "sklearn.utils.graph.single_source_shortest_path_length"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_shortest_path.test_dijkstra": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "numpy.testing.assert_array_almost_equal",
    "sklearn.utils.graph.graph_shortest_path",
    "sklearn.utils.tests.test_shortest_path.floyd_warshall_slow",
    "sklearn.utils.tests.test_shortest_path.generate_graph"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_shortest_path.test_dijkstra_bug_fix": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.assert_array_almost_equal",
    "sklearn.utils.graph.graph_shortest_path"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_shortest_path.test_floyd_warshall": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "numpy.testing.assert_array_almost_equal",
    "sklearn.utils.graph.graph_shortest_path",
    "sklearn.utils.tests.test_shortest_path.floyd_warshall_slow",
    "sklearn.utils.tests.test_shortest_path.generate_graph"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_shortest_path.test_shortest_path": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "collections.defaultdict",
    "int",
    "numpy.minimum",
    "numpy.testing.assert_array_almost_equal",
    "range",
    "sklearn.utils.graph.single_source_shortest_path_length",
    "sklearn.utils.tests.test_shortest_path.floyd_warshall_slow",
    "sklearn.utils.tests.test_shortest_path.generate_graph"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_show_versions": {
  "data": {},
  "type": "module"
 },
 "sklearn.utils.tests.test_show_versions._get_deps_info": {
  "data": {
   "shadows": "sklearn.utils._show_versions._get_deps_info"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_show_versions._get_sys_info": {
  "data": {
   "shadows": "sklearn.utils._show_versions._get_sys_info"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_show_versions.ignore_warnings": {
  "data": {
   "shadows": "sklearn.utils._testing.ignore_warnings"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_show_versions.show_versions": {
  "data": {
   "shadows": "sklearn.utils._show_versions.show_versions"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_show_versions.test_get_deps_info": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "sklearn.utils._show_versions._get_deps_info",
    "sklearn.utils._testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_show_versions.test_get_sys_info": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "sklearn.utils._show_versions._get_sys_info"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_show_versions.test_show_versions": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "sklearn.utils._show_versions.show_versions",
    "sklearn.utils._testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_sparsefuncs": {
  "data": {},
  "type": "module"
 },
 "sklearn.utils.tests.test_sparsefuncs.RandomState": {
  "data": {
   "shadows": "numpy.random.RandomState"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_sparsefuncs.assert_allclose": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_allclose"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_sparsefuncs.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_sparsefuncs.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_sparsefuncs.assign_rows_csr": {
  "data": {
   "shadows": "sklearn.utils.sparsefuncs_fast.assign_rows_csr"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_sparsefuncs.count_nonzero": {
  "data": {
   "shadows": "sklearn.utils.sparsefuncs.count_nonzero"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_sparsefuncs.csc_median_axis_0": {
  "data": {
   "shadows": "sklearn.utils.sparsefuncs.csc_median_axis_0"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_sparsefuncs.csr_row_norms": {
  "data": {
   "shadows": "sklearn.utils.sparsefuncs_fast.csr_row_norms"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_sparsefuncs.incr_mean_variance_axis": {
  "data": {
   "shadows": "sklearn.utils.sparsefuncs.incr_mean_variance_axis"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_sparsefuncs.inplace_column_scale": {
  "data": {
   "shadows": "sklearn.utils.sparsefuncs.inplace_column_scale"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_sparsefuncs.inplace_csr_row_normalize_l1": {
  "data": {
   "shadows": "sklearn.utils.sparsefuncs_fast.inplace_csr_row_normalize_l1"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_sparsefuncs.inplace_csr_row_normalize_l2": {
  "data": {
   "shadows": "sklearn.utils.sparsefuncs_fast.inplace_csr_row_normalize_l2"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_sparsefuncs.inplace_row_scale": {
  "data": {
   "shadows": "sklearn.utils.sparsefuncs.inplace_row_scale"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_sparsefuncs.inplace_swap_column": {
  "data": {
   "shadows": "sklearn.utils.sparsefuncs.inplace_swap_column"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_sparsefuncs.inplace_swap_row": {
  "data": {
   "shadows": "sklearn.utils.sparsefuncs.inplace_swap_row"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_sparsefuncs.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_sparsefuncs.make_classification": {
  "data": {
   "shadows": "sklearn.datasets.make_classification"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_sparsefuncs.mean_variance_axis": {
  "data": {
   "shadows": "sklearn.utils.sparsefuncs.mean_variance_axis"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_sparsefuncs.min_max_axis": {
  "data": {
   "shadows": "sklearn.utils.sparsefuncs.min_max_axis"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_sparsefuncs.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_sparsefuncs.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_sparsefuncs.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_sparsefuncs.test_count_nonzero": {
  "data": {
   "lineno": 717,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "numpy.array",
    "numpy.float64",
    "numpy.int64",
    "numpy.intp",
    "numpy.testing.assert_array_almost_equal",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "sklearn.utils.sparsefuncs.count_nonzero",
    "sklearn.utils.tests.test_sparsefuncs.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_sparsefuncs.test_csc_row_median": {
  "data": {
   "lineno": 762,
   "symbols_in_volume": [
    "TypeError",
    "numpy.array",
    "numpy.median",
    "numpy.random.RandomState",
    "numpy.testing.assert_array_equal",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "sklearn.utils.sparsefuncs.csc_median_axis_0",
    "sklearn.utils.tests.test_sparsefuncs.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_sparsefuncs.test_csr_row_norms": {
  "data": {
   "lineno": 820,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.float64",
    "scipy.sparse.linalg.norm",
    "scipy.sparse.random",
    "sklearn.utils._testing.assert_allclose",
    "sklearn.utils.sparsefuncs_fast.csr_row_norms",
    "sklearn.utils.tests.test_sparsefuncs.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_sparsefuncs.test_densify_rows": {
  "data": {
   "lineno": 488,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.float32",
    "numpy.float64",
    "numpy.intp",
    "numpy.ones",
    "numpy.ones_like",
    "numpy.testing.assert_array_equal",
    "scipy.sparse.csr_matrix",
    "sklearn.utils.sparsefuncs_fast.assign_rows_csr"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_sparsefuncs.test_incr_mean_variance_axis": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "TypeError",
    "numpy.array",
    "numpy.atleast_2d",
    "numpy.float32",
    "numpy.float64",
    "numpy.int32",
    "numpy.int64",
    "numpy.random.RandomState",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_array_equal",
    "numpy.vstack",
    "numpy.zeros",
    "numpy.zeros_like",
    "range",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.lil_matrix",
    "sklearn.utils.sparsefuncs.incr_mean_variance_axis",
    "sklearn.utils.sparsefuncs.mean_variance_axis",
    "sklearn.utils.tests.test_sparsefuncs.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_sparsefuncs.test_incr_mean_variance_axis_dim_mismatch": {
  "data": {
   "lineno": 330,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "numpy.int64",
    "numpy.mean",
    "numpy.random.RandomState",
    "numpy.var",
    "numpy.zeros",
    "numpy.zeros_like",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "sklearn.utils._testing.assert_allclose",
    "sklearn.utils.sparsefuncs.incr_mean_variance_axis",
    "sklearn.utils.tests.test_sparsefuncs.pytest",
    "sparse_constructor"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_sparsefuncs.test_incr_mean_variance_axis_equivalence_mean_variance": {
  "data": {
   "lineno": 361,
   "symbols_in_volume": [
    "numpy.count_nonzero",
    "numpy.full",
    "numpy.int64",
    "numpy.isnan",
    "numpy.nan",
    "numpy.nanmean",
    "numpy.nanvar",
    "numpy.zeros",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.hstack",
    "scipy.sparse.random",
    "scipy.sparse.vstack",
    "sklearn.utils._testing.assert_allclose",
    "sklearn.utils.sparsefuncs.incr_mean_variance_axis",
    "sklearn.utils.tests.test_sparsefuncs.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_sparsefuncs.test_incr_mean_variance_axis_ignore_nan": {
  "data": {
   "lineno": 424,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.int64",
    "numpy.nan",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "sklearn.utils._testing.assert_allclose",
    "sklearn.utils.sparsefuncs.incr_mean_variance_axis",
    "sklearn.utils.tests.test_sparsefuncs.pytest",
    "sparse_constructor"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_sparsefuncs.test_incr_mean_variance_axis_weighted_axis0": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.float32",
    "numpy.float64",
    "numpy.int64",
    "numpy.nan",
    "numpy.size",
    "numpy.testing.assert_array_almost_equal",
    "numpy.zeros",
    "numpy.zeros_like",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "sklearn.utils.sparsefuncs.incr_mean_variance_axis",
    "sklearn.utils.sparsefuncs.mean_variance_axis",
    "sklearn.utils.tests.test_sparsefuncs.pytest",
    "sparse_constructor"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_sparsefuncs.test_incr_mean_variance_axis_weighted_axis1": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.float32",
    "numpy.float64",
    "numpy.int64",
    "numpy.nan",
    "numpy.shape",
    "numpy.testing.assert_array_almost_equal",
    "numpy.zeros",
    "numpy.zeros_like",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "sklearn.utils.sparsefuncs.incr_mean_variance_axis",
    "sklearn.utils.sparsefuncs.mean_variance_axis",
    "sklearn.utils.tests.test_sparsefuncs.pytest",
    "sparse_constructor"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_sparsefuncs.test_incr_mean_variance_n_float": {
  "data": {
   "lineno": 412,
   "symbols_in_volume": [
    "numpy.full",
    "numpy.zeros",
    "scipy.sparse.random",
    "sklearn.utils._testing.assert_allclose",
    "sklearn.utils.sparsefuncs.incr_mean_variance_axis"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_sparsefuncs.test_incr_mean_variance_no_new_n": {
  "data": {
   "lineno": 393,
   "symbols_in_volume": [
    "numpy.int64",
    "numpy.zeros",
    "scipy.sparse.random",
    "sklearn.utils._testing.assert_allclose",
    "sklearn.utils.sparsefuncs.incr_mean_variance_axis"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_sparsefuncs.test_inplace_column_scale": {
  "data": {
   "lineno": 506,
   "symbols_in_volume": [
    "TypeError",
    "numpy.float32",
    "numpy.random.RandomState",
    "numpy.testing.assert_array_almost_equal",
    "scipy.sparse.rand",
    "sklearn.utils.sparsefuncs.inplace_column_scale",
    "sklearn.utils.tests.test_sparsefuncs.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_sparsefuncs.test_inplace_normalize": {
  "data": {
   "lineno": 796,
   "symbols_in_volume": [
    "inplace_csr_row_normalize",
    "numpy.abs",
    "numpy.float32",
    "numpy.float64",
    "numpy.int32",
    "numpy.int64",
    "numpy.ones",
    "numpy.random.RandomState",
    "numpy.testing.assert_array_almost_equal",
    "scipy.sparse.csr_matrix",
    "sklearn.utils.sparsefuncs_fast.inplace_csr_row_normalize_l1",
    "sklearn.utils.sparsefuncs_fast.inplace_csr_row_normalize_l2"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_sparsefuncs.test_inplace_row_scale": {
  "data": {
   "lineno": 538,
   "symbols_in_volume": [
    "TypeError",
    "numpy.float32",
    "numpy.random.RandomState",
    "numpy.testing.assert_array_almost_equal",
    "scipy.sparse.rand",
    "sklearn.utils.sparsefuncs.inplace_column_scale",
    "sklearn.utils.sparsefuncs.inplace_row_scale",
    "sklearn.utils.tests.test_sparsefuncs.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_sparsefuncs.test_inplace_swap_column": {
  "data": {
   "lineno": 622,
   "symbols_in_volume": [
    "TypeError",
    "numpy.array",
    "numpy.float32",
    "numpy.float64",
    "numpy.testing.assert_array_equal",
    "scipy.linalg.get_blas_funcs",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "sklearn.utils.sparsefuncs.inplace_swap_column",
    "sklearn.utils.tests.test_sparsefuncs.pytest",
    "swap"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_sparsefuncs.test_inplace_swap_row": {
  "data": {
   "lineno": 570,
   "symbols_in_volume": [
    "TypeError",
    "numpy.array",
    "numpy.float32",
    "numpy.float64",
    "numpy.testing.assert_array_equal",
    "scipy.linalg.get_blas_funcs",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "sklearn.utils.sparsefuncs.inplace_swap_row",
    "sklearn.utils.tests.test_sparsefuncs.pytest",
    "swap"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_sparsefuncs.test_mean_variance_axis0": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "TypeError",
    "numpy.float32",
    "numpy.float64",
    "numpy.int32",
    "numpy.int64",
    "numpy.mean",
    "numpy.testing.assert_array_almost_equal",
    "numpy.var",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.lil_matrix",
    "sklearn.datasets.make_classification",
    "sklearn.utils.sparsefuncs.mean_variance_axis",
    "sklearn.utils.tests.test_sparsefuncs.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_sparsefuncs.test_mean_variance_axis1": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "TypeError",
    "numpy.float32",
    "numpy.float64",
    "numpy.int32",
    "numpy.int64",
    "numpy.mean",
    "numpy.testing.assert_array_almost_equal",
    "numpy.var",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.lil_matrix",
    "sklearn.datasets.make_classification",
    "sklearn.utils.sparsefuncs.mean_variance_axis",
    "sklearn.utils.tests.test_sparsefuncs.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_sparsefuncs.test_mean_variance_illegal_axis": {
  "data": {
   "lineno": 461,
   "symbols_in_volume": [
    "ValueError",
    "scipy.sparse.csr_matrix",
    "sklearn.datasets.make_classification",
    "sklearn.utils.sparsefuncs.incr_mean_variance_axis",
    "sklearn.utils.sparsefuncs.mean_variance_axis",
    "sklearn.utils.tests.test_sparsefuncs.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_sparsefuncs.test_min_max": {
  "data": {
   "lineno": 674,
   "symbols_in_volume": [
    "max_func",
    "min_func",
    "numpy.array",
    "numpy.float32",
    "numpy.float64",
    "numpy.max",
    "numpy.min",
    "numpy.nan",
    "numpy.nanmax",
    "numpy.nanmin",
    "numpy.testing.assert_array_equal",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "sklearn.utils.sparsefuncs.min_max_axis",
    "sklearn.utils.tests.test_sparsefuncs.pytest",
    "sparse_format"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_sparsefuncs.test_min_max_axis_errors": {
  "data": {
   "lineno": 701,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "numpy.array",
    "numpy.float64",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "sklearn.utils.sparsefuncs.min_max_axis",
    "sklearn.utils.tests.test_sparsefuncs.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_stats": {
  "data": {},
  "type": "module"
 },
 "sklearn.utils.tests.test_stats._weighted_percentile": {
  "data": {
   "shadows": "sklearn.utils.stats._weighted_percentile"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_stats.approx": {
  "data": {
   "shadows": "pytest.approx"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_stats.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_stats.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_stats.test_weighted_median_equal_weights": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "numpy.median",
    "numpy.ones",
    "numpy.random.RandomState",
    "pytest.approx",
    "sklearn.utils.stats._weighted_percentile"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_stats.test_weighted_median_integer_weights": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "numpy.median",
    "numpy.random.RandomState",
    "numpy.repeat",
    "pytest.approx",
    "sklearn.utils.stats._weighted_percentile"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_stats.test_weighted_percentile": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "numpy.empty",
    "numpy.float64",
    "numpy.ones",
    "pytest.approx",
    "sklearn.utils.stats._weighted_percentile"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_stats.test_weighted_percentile_2d": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "numpy.testing.assert_allclose",
    "numpy.vstack",
    "range",
    "sklearn.utils.stats._weighted_percentile"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_stats.test_weighted_percentile_equal": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "numpy.empty",
    "numpy.float64",
    "numpy.ones",
    "sklearn.utils.stats._weighted_percentile"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_stats.test_weighted_percentile_zero_weight": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "numpy.empty",
    "numpy.float64",
    "numpy.ones",
    "pytest.approx",
    "sklearn.utils.stats._weighted_percentile"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_tags": {
  "data": {},
  "type": "module"
 },
 "sklearn.utils.tests.test_tags.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_tags.MoreTagsEstimator": {
  "data": {
   "lineno": 14
  },
  "type": "class"
 },
 "sklearn.utils.tests.test_tags.MoreTagsEstimator._more_tags": {
  "data": {
   "lineno": 15
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_tags.NoTagsEstimator": {
  "data": {
   "lineno": 10
  },
  "type": "class"
 },
 "sklearn.utils.tests.test_tags._DEFAULT_TAGS": {
  "data": {
   "shadows": "sklearn.utils._tags._DEFAULT_TAGS"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_tags._safe_tags": {
  "data": {
   "shadows": "sklearn.utils._tags._safe_tags"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_tags.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_tags.test_safe_tags_error": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.base.BaseEstimator",
    "sklearn.utils._tags._safe_tags",
    "sklearn.utils.tests.test_tags.NoTagsEstimator",
    "sklearn.utils.tests.test_tags.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_tags.test_safe_tags_no_get_tags": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator",
    "sklearn.utils._tags._DEFAULT_TAGS",
    "sklearn.utils._tags._safe_tags",
    "sklearn.utils.tests.test_tags.MoreTagsEstimator",
    "sklearn.utils.tests.test_tags.NoTagsEstimator",
    "sklearn.utils.tests.test_tags.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_testing": {
  "data": {},
  "type": "module"
 },
 "sklearn.utils.tests.test_testing.DecisionTreeClassifier": {
  "data": {
   "shadows": "sklearn.tree.DecisionTreeClassifier"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_testing.Klass": {
  "data": {
   "lineno": 360
  },
  "type": "class"
 },
 "sklearn.utils.tests.test_testing.Klass.f_bad_sections": {
  "data": {
   "lineno": 364
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_testing.Klass.f_missing": {
  "data": {
   "lineno": 361
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_testing.LinearDiscriminantAnalysis": {
  "data": {
   "shadows": "sklearn.discriminant_analysis.LinearDiscriminantAnalysis"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_testing.MockEst": {
  "data": {
   "lineno": 382
  },
  "type": "class"
 },
 "sklearn.utils.tests.test_testing.MockEst.__init__": {
  "data": {
   "lineno": 383
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_testing.MockEst.fit": {
  "data": {
   "lineno": 385
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_testing.MockEst.predict": {
  "data": {
   "lineno": 388
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_testing.MockEst.predict_proba": {
  "data": {
   "lineno": 391
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_testing.MockEst.score": {
  "data": {
   "lineno": 394
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_testing.MockMetaEstimator": {
  "data": {
   "lineno": 398
  },
  "type": "class"
 },
 "sklearn.utils.tests.test_testing.MockMetaEstimator.__init__": {
  "data": {
   "lineno": 399
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_testing.MockMetaEstimator.fit": {
  "data": {
   "lineno": 442,
   "symbols_in_volume": [
    "sklearn.utils.deprecation.deprecated"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_testing.MockMetaEstimator.predict": {
  "data": {
   "lineno": 409,
   "symbols_in_volume": [
    "sklearn.utils.metaestimators.if_delegate_has_method"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_testing.MockMetaEstimator.predict_proba": {
  "data": {
   "lineno": 431,
   "symbols_in_volume": [
    "sklearn.utils.metaestimators.if_delegate_has_method"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_testing.MockMetaEstimator.score": {
  "data": {
   "lineno": 420,
   "symbols_in_volume": [
    "sklearn.utils.deprecation.deprecated",
    "sklearn.utils.metaestimators.if_delegate_has_method"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_testing.RegistrationCounter": {
  "data": {
   "lineno": 561
  },
  "type": "class"
 },
 "sklearn.utils.tests.test_testing.RegistrationCounter.__call__": {
  "data": {
   "lineno": 565,
   "symbols_in_volume": [
    "sklearn.utils._testing._delete_folder"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_testing.RegistrationCounter.__init__": {
  "data": {
   "lineno": 562
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_testing.TempMemmap": {
  "data": {
   "shadows": "sklearn.utils._testing.TempMemmap"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_testing.TestWarns": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "sklearn.utils.tests.test_testing.unittest"
   ]
  },
  "type": "class"
 },
 "sklearn.utils.tests.test_testing.TestWarns.test_warn": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "AssertionError",
    "UserWarning",
    "sklearn.utils._testing.assert_no_warnings",
    "sklearn.utils._testing.assert_warns",
    "sklearn.utils.tests.test_testing.pytest",
    "sklearn.utils.tests.test_testing.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_testing.TestWarns.test_warn.f": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "sklearn.utils.tests.test_testing.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_testing.TestWarns.test_warn_wrong_warning": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "AssertionError",
    "UserWarning",
    "sklearn.utils._testing.assert_warns",
    "sklearn.utils.tests.test_testing.sys"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_testing.TestWarns.test_warn_wrong_warning.f": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "FutureWarning",
    "sklearn.utils.tests.test_testing.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_testing._convert_container": {
  "data": {
   "shadows": "sklearn.utils._testing._convert_container"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_testing._delete_folder": {
  "data": {
   "shadows": "sklearn.utils._testing._delete_folder"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_testing.assert_allclose_dense_sparse": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_allclose_dense_sparse"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_testing.assert_no_warnings": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_no_warnings"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_testing.assert_raise_message": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_raise_message"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_testing.assert_raises": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_testing.assert_raises_regex": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_raises_regex"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_testing.assert_warns": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_warns"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_testing.atexit": {
  "data": {
   "shadows": "atexit"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_testing.check_docstring_parameters": {
  "data": {
   "shadows": "sklearn.utils._testing.check_docstring_parameters"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_testing.check_memmap": {
  "data": {
   "lineno": 570,
   "symbols_in_volume": [
    "isinstance",
    "numpy.memmap",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_testing.create_memmap_backed_data": {
  "data": {
   "shadows": "sklearn.utils._testing.create_memmap_backed_data"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_testing.deprecated": {
  "data": {
   "shadows": "sklearn.utils.deprecation.deprecated"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_testing.f_bad_order": {
  "data": {
   "lineno": 284
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_testing.f_bad_sections": {
  "data": {
   "lineno": 265
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_testing.f_check_param_definition": {
  "data": {
   "lineno": 341
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_testing.f_missing": {
  "data": {
   "lineno": 324
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_testing.f_ok": {
  "data": {
   "lineno": 246
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_testing.f_too_many_param_docstring": {
  "data": {
   "lineno": 303
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_testing.if_delegate_has_method": {
  "data": {
   "shadows": "sklearn.utils.metaestimators.if_delegate_has_method"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_testing.ignore_warnings": {
  "data": {
   "shadows": "sklearn.utils._testing.ignore_warnings"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_testing.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_testing.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_testing.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_testing.raises": {
  "data": {
   "shadows": "sklearn.utils._testing.raises"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_testing.set_random_state": {
  "data": {
   "shadows": "sklearn.utils._testing.set_random_state"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_testing.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_testing.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_testing.test_assert_allclose_dense_sparse": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "AssertionError",
    "ValueError",
    "numpy.arange",
    "numpy.ones",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.diags",
    "sklearn.utils._testing.assert_allclose_dense_sparse",
    "sklearn.utils.tests.test_testing.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_testing.test_assert_raise_message": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "AssertionError",
    "AttributeError",
    "TypeError",
    "ValueError",
    "sklearn.utils._testing.assert_raise_message",
    "sklearn.utils._testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_testing.test_assert_raise_message._no_raise": {
  "data": {
   "lineno": 74
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_testing.test_assert_raise_message._raise_ValueError": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_testing.test_assert_raises_msg": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "AssertionError",
    "ValueError",
    "sklearn.utils._testing.assert_raises",
    "sklearn.utils._testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_testing.test_check_docstring_parameters": {
  "data": {
   "lineno": 447,
   "symbols_in_volume": [
    "RuntimeError",
    "sklearn.utils._testing.check_docstring_parameters",
    "sklearn.utils.tests.test_testing.Klass",
    "sklearn.utils.tests.test_testing.MockEst",
    "sklearn.utils.tests.test_testing.MockMetaEstimator",
    "sklearn.utils.tests.test_testing.f_bad_order",
    "sklearn.utils.tests.test_testing.f_bad_sections",
    "sklearn.utils.tests.test_testing.f_check_param_definition",
    "sklearn.utils.tests.test_testing.f_missing",
    "sklearn.utils.tests.test_testing.f_ok",
    "sklearn.utils.tests.test_testing.f_too_many_param_docstring",
    "sklearn.utils.tests.test_testing.pytest",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_testing.test_convert_container": {
  "data": {
   "lineno": 625,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "numpy.ndarray",
    "scipy.sparse.csr_matrix",
    "sklearn.utils._testing._convert_container",
    "sklearn.utils.tests.test_testing.pytest",
    "slice",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_testing.test_create_memmap_backed_data": {
  "data": {
   "lineno": 598,
   "symbols_in_volume": [
    "numpy.ones",
    "sklearn.utils._testing.create_memmap_backed_data",
    "sklearn.utils.tests.test_testing.RegistrationCounter",
    "sklearn.utils.tests.test_testing.atexit",
    "sklearn.utils.tests.test_testing.check_memmap",
    "sklearn.utils.tests.test_testing.os",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_testing.test_ignore_warning": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "DeprecationWarning",
    "FutureWarning",
    "UserWarning",
    "ValueError",
    "_warning_function",
    "silence_warnings_func",
    "sklearn.utils._testing.assert_no_warnings",
    "sklearn.utils._testing.assert_warns",
    "sklearn.utils._testing.ignore_warnings",
    "sklearn.utils.tests.test_testing.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_testing.test_ignore_warning._multiple_warning_function": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "DeprecationWarning",
    "sklearn.utils.tests.test_testing.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_testing.test_ignore_warning._warning_function": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "DeprecationWarning",
    "sklearn.utils.tests.test_testing.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_testing.test_ignore_warning.context_manager_no_deprecation_multiple_warning": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "DeprecationWarning",
    "_multiple_warning_function",
    "sklearn.utils._testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_testing.test_ignore_warning.context_manager_no_deprecation_warning": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "DeprecationWarning",
    "_warning_function",
    "sklearn.utils._testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_testing.test_ignore_warning.context_manager_no_user_multiple_warning": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "UserWarning",
    "_multiple_warning_function",
    "sklearn.utils._testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_testing.test_ignore_warning.context_manager_no_user_warning": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "UserWarning",
    "_warning_function",
    "sklearn.utils._testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_testing.test_ignore_warning.context_manager_no_warning": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "_warning_function",
    "sklearn.utils._testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_testing.test_ignore_warning.context_manager_no_warning_multiple": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "DeprecationWarning",
    "UserWarning",
    "_multiple_warning_function",
    "sklearn.utils._testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_testing.test_ignore_warning.decorator_no_deprecation_multiple_warning": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "DeprecationWarning",
    "_multiple_warning_function",
    "sklearn.utils._testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_testing.test_ignore_warning.decorator_no_deprecation_warning": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "DeprecationWarning",
    "_warning_function",
    "sklearn.utils._testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_testing.test_ignore_warning.decorator_no_user_multiple_warning": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "UserWarning",
    "_multiple_warning_function",
    "sklearn.utils._testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_testing.test_ignore_warning.decorator_no_user_warning": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "UserWarning",
    "_warning_function",
    "sklearn.utils._testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_testing.test_ignore_warning.decorator_no_warning": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "_multiple_warning_function",
    "_warning_function",
    "sklearn.utils._testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_testing.test_ignore_warning.decorator_no_warning_multiple": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "DeprecationWarning",
    "UserWarning",
    "_multiple_warning_function",
    "sklearn.utils._testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_testing.test_ignore_warning.test": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "sklearn.utils._testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_testing.test_raises": {
  "data": {
   "lineno": 642,
   "symbols_in_volume": [
    "AssertionError",
    "TypeError",
    "ValueError",
    "sklearn.utils._testing.raises",
    "sklearn.utils.tests.test_testing.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_testing.test_set_random_state": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "sklearn.discriminant_analysis.LinearDiscriminantAnalysis",
    "sklearn.tree.DecisionTreeClassifier",
    "sklearn.utils._testing.set_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_testing.test_tempmemmap": {
  "data": {
   "lineno": 577,
   "symbols_in_volume": [
    "numpy.ones",
    "sklearn.utils._testing.TempMemmap",
    "sklearn.utils.tests.test_testing.RegistrationCounter",
    "sklearn.utils.tests.test_testing.atexit",
    "sklearn.utils.tests.test_testing.check_memmap",
    "sklearn.utils.tests.test_testing.os"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_testing.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_testing.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_utils": {
  "data": {
   "symbols_in_volume": [
    "numpy.arange"
   ]
  },
  "type": "module"
 },
 "sklearn.utils.tests.test_utils.MockDataFrame": {
  "data": {
   "shadows": "sklearn.utils._mocking.MockDataFrame"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_utils.X_toy": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "sklearn.utils.tests.test_utils._convert_container": {
  "data": {
   "shadows": "sklearn.utils._testing._convert_container"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_utils._determine_key_type": {
  "data": {
   "shadows": "sklearn.utils._determine_key_type"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_utils._get_column_indices": {
  "data": {
   "shadows": "sklearn.utils._get_column_indices"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_utils._message_with_time": {
  "data": {
   "shadows": "sklearn.utils._message_with_time"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_utils._print_elapsed_time": {
  "data": {
   "shadows": "sklearn.utils._print_elapsed_time"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_utils._safe_indexing": {
  "data": {
   "shadows": "sklearn.utils._safe_indexing"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_utils._to_object_array": {
  "data": {
   "shadows": "sklearn.utils._to_object_array"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_utils.assert_allclose_dense_sparse": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_allclose_dense_sparse"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_utils.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_utils.assert_no_warnings": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_no_warnings"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_utils.assert_warns_message": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_warns_message"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_utils.chain": {
  "data": {
   "shadows": "itertools.chain"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_utils.check_random_state": {
  "data": {
   "shadows": "sklearn.utils.check_random_state"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_utils.column_or_1d": {
  "data": {
   "shadows": "sklearn.utils.column_or_1d"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_utils.config_context": {
  "data": {
   "shadows": "sklearn.config_context"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_utils.copy": {
  "data": {
   "shadows": "copy.copy"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_utils.deprecated": {
  "data": {
   "shadows": "sklearn.utils.deprecated"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_utils.dummy_func": {
  "data": {
   "lineno": 671
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_utils.gen_batches": {
  "data": {
   "shadows": "sklearn.utils.gen_batches"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_utils.gen_even_slices": {
  "data": {
   "shadows": "sklearn.utils.gen_even_slices"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_utils.get_chunk_n_rows": {
  "data": {
   "shadows": "sklearn.utils.get_chunk_n_rows"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_utils.is_scalar_nan": {
  "data": {
   "shadows": "sklearn.utils.is_scalar_nan"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_utils.joblib": {
  "data": {
   "shadows": "sklearn.utils._joblib.joblib"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_utils.parallel_backend": {
  "data": {
   "shadows": "sklearn.utils.parallel_backend"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_utils.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_utils.register_parallel_backend": {
  "data": {
   "shadows": "sklearn.utils.register_parallel_backend"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_utils.resample": {
  "data": {
   "shadows": "sklearn.utils.resample"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_utils.safe_mask": {
  "data": {
   "shadows": "sklearn.utils.safe_mask"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_utils.shuffle": {
  "data": {
   "shadows": "sklearn.utils.shuffle"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_utils.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_utils.string": {
  "data": {
   "shadows": "string"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_utils.test_column_or_1d": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "ValueError",
    "numpy.arange",
    "numpy.ravel",
    "sklearn.utils._testing.assert_array_equal",
    "sklearn.utils.column_or_1d",
    "sklearn.utils.tests.test_utils.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_utils.test_deprecated": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "FutureWarning",
    "Ham",
    "ham",
    "hasattr",
    "issubclass",
    "len",
    "sklearn.utils.tests.test_utils.warnings",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_utils.test_deprecated.Ham": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "sklearn.utils.deprecated"
   ]
  },
  "type": "class"
 },
 "sklearn.utils.tests.test_utils.test_deprecated.ham": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "sklearn.utils.deprecated"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_utils.test_deprecation_joblib_api": {
  "data": {
   "lineno": 675,
   "symbols_in_volume": [
    "sklearn.utils._joblib.joblib.parallel.BACKENDS",
    "sklearn.utils._testing.assert_no_warnings",
    "sklearn.utils.parallel_backend",
    "sklearn.utils.register_parallel_backend"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_utils.test_determine_key_type": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.bool_",
    "numpy.int32",
    "numpy.int64",
    "numpy.uint8",
    "object",
    "sklearn.utils._determine_key_type",
    "sklearn.utils.tests.test_utils.pytest",
    "slice"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_utils.test_determine_key_type_error": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.utils._determine_key_type",
    "sklearn.utils.tests.test_utils.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_utils.test_determine_key_type_slice_error": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "TypeError",
    "sklearn.utils._determine_key_type",
    "sklearn.utils.tests.test_utils.pytest",
    "slice"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_utils.test_gen_batches": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "list",
    "next",
    "sklearn.utils._testing.assert_array_equal",
    "sklearn.utils.gen_batches",
    "sklearn.utils.tests.test_utils.pytest",
    "slice"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_utils.test_gen_even_slices": {
  "data": {
   "lineno": 550,
   "symbols_in_volume": [
    "ValueError",
    "itertools.chain",
    "list",
    "next",
    "range",
    "sklearn.utils._testing.assert_array_equal",
    "sklearn.utils.gen_even_slices",
    "sklearn.utils.tests.test_utils.pytest",
    "slice"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_utils.test_get_chunk_n_rows": {
  "data": {
   "lineno": 564,
   "symbols_in_volume": [
    "check_warning",
    "sklearn.config_context",
    "sklearn.utils._testing.assert_no_warnings",
    "sklearn.utils.get_chunk_n_rows",
    "sklearn.utils.tests.test_utils.pytest",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_utils.test_get_chunk_n_rows.check_warning": {
  "data": {
   "lineno": 580,
   "symbols_in_volume": [
    "UserWarning",
    "sklearn.utils._testing.assert_warns_message"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_utils.test_get_column_indices_error": {
  "data": {
   "lineno": 478,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.utils._get_column_indices",
    "sklearn.utils.tests.test_utils.X_toy",
    "sklearn.utils.tests.test_utils.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_utils.test_get_column_indices_pandas_nonunique_columns_error": {
  "data": {
   "lineno": 491,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "numpy.zeros",
    "sklearn.utils._get_column_indices",
    "sklearn.utils.tests.test_utils.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_utils.test_is_scalar_nan": {
  "data": {
   "lineno": 656,
   "symbols_in_volume": [
    "float",
    "numpy.float32",
    "numpy.float64",
    "numpy.nan",
    "sklearn.utils.is_scalar_nan",
    "sklearn.utils.tests.test_utils.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_utils.test_make_rng": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "ValueError",
    "numpy.random",
    "numpy.random.RandomState",
    "numpy.random.mtrand._rand",
    "sklearn.utils.check_random_state",
    "sklearn.utils.tests.test_utils.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_utils.test_message_with_time": {
  "data": {
   "lineno": 600,
   "symbols_in_volume": [
    "len",
    "list",
    "set",
    "sklearn.utils._message_with_time",
    "sklearn.utils.tests.test_utils.pytest",
    "sklearn.utils.tests.test_utils.string"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_utils.test_print_elapsed_time": {
  "data": {
   "lineno": 642,
   "symbols_in_volume": [
    "sklearn.utils._message_with_time",
    "sklearn.utils._print_elapsed_time",
    "sklearn.utils.tests.test_utils.pytest",
    "sklearn.utils.tests.test_utils.timeit"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_utils.test_resample": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "sklearn.utils.resample",
    "sklearn.utils.tests.test_utils.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_utils.test_resample_stratified": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.random.RandomState",
    "numpy.sum",
    "sklearn.utils.resample"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_utils.test_resample_stratified_replace": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "numpy.unique",
    "sklearn.utils.resample"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_utils.test_resample_stratify_2dy": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.utils.resample"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_utils.test_resample_stratify_sparse_error": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "TypeError",
    "numpy.random.RandomState",
    "scipy.sparse.csr_matrix",
    "sklearn.utils.resample",
    "sklearn.utils.tests.test_utils.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_utils.test_safe_indexing_1d_array_error": {
  "data": {
   "lineno": 454,
   "symbols_in_volume": [
    "ValueError",
    "list",
    "numpy.asarray",
    "range",
    "sklearn.utils._safe_indexing",
    "sklearn.utils.tests.test_utils.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_utils.test_safe_indexing_1d_container": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "int",
    "isinstance",
    "sklearn.utils._safe_indexing",
    "sklearn.utils._testing._convert_container",
    "sklearn.utils._testing.assert_allclose_dense_sparse",
    "sklearn.utils.tests.test_utils.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_utils.test_safe_indexing_1d_container_mask": {
  "data": {
   "lineno": 349,
   "symbols_in_volume": [
    "sklearn.utils._safe_indexing",
    "sklearn.utils._testing._convert_container",
    "sklearn.utils._testing.assert_allclose_dense_sparse",
    "sklearn.utils.tests.test_utils.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_utils.test_safe_indexing_1d_scalar": {
  "data": {
   "lineno": 396,
   "symbols_in_volume": [
    "sklearn.utils._safe_indexing",
    "sklearn.utils._testing._convert_container",
    "sklearn.utils.tests.test_utils.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_utils.test_safe_indexing_2d_container_axis_0": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "int",
    "isinstance",
    "sklearn.utils._safe_indexing",
    "sklearn.utils._testing._convert_container",
    "sklearn.utils._testing.assert_allclose_dense_sparse",
    "sklearn.utils.tests.test_utils.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_utils.test_safe_indexing_2d_container_axis_1": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": [
    "ValueError",
    "copy.copy",
    "int",
    "isinstance",
    "sklearn.utils._safe_indexing",
    "sklearn.utils._testing._convert_container",
    "sklearn.utils._testing.assert_allclose_dense_sparse",
    "sklearn.utils.tests.test_utils.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_utils.test_safe_indexing_2d_mask": {
  "data": {
   "lineno": 361,
   "symbols_in_volume": [
    "sklearn.utils._safe_indexing",
    "sklearn.utils._testing._convert_container",
    "sklearn.utils._testing.assert_allclose_dense_sparse",
    "sklearn.utils.tests.test_utils.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_utils.test_safe_indexing_2d_read_only_axis_1": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.utils._safe_indexing",
    "sklearn.utils._testing._convert_container",
    "sklearn.utils._testing.assert_allclose_dense_sparse",
    "sklearn.utils.tests.test_utils.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_utils.test_safe_indexing_2d_scalar_axis_0": {
  "data": {
   "lineno": 383,
   "symbols_in_volume": [
    "sklearn.utils._safe_indexing",
    "sklearn.utils._testing._convert_container",
    "sklearn.utils._testing.assert_allclose_dense_sparse",
    "sklearn.utils.tests.test_utils.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_utils.test_safe_indexing_2d_scalar_axis_1": {
  "data": {
   "lineno": 404,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "sklearn.utils._safe_indexing",
    "sklearn.utils._testing._convert_container",
    "sklearn.utils._testing.assert_allclose_dense_sparse",
    "sklearn.utils.tests.test_utils.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_utils.test_safe_indexing_None_axis_0": {
  "data": {
   "lineno": 433,
   "symbols_in_volume": [
    "sklearn.utils._safe_indexing",
    "sklearn.utils._testing._convert_container",
    "sklearn.utils._testing.assert_allclose_dense_sparse",
    "sklearn.utils.tests.test_utils.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_utils.test_safe_indexing_container_axis_0_unsupported_type": {
  "data": {
   "lineno": 470,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.utils._safe_indexing",
    "sklearn.utils.tests.test_utils.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_utils.test_safe_indexing_error_axis": {
  "data": {
   "lineno": 448,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.utils._safe_indexing",
    "sklearn.utils.tests.test_utils.X_toy",
    "sklearn.utils.tests.test_utils.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_utils.test_safe_indexing_pandas_no_matching_cols_error": {
  "data": {
   "lineno": 440,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.utils._safe_indexing",
    "sklearn.utils.tests.test_utils.X_toy",
    "sklearn.utils.tests.test_utils.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_utils.test_safe_mask": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "scipy.sparse.csr_matrix",
    "sklearn.utils.check_random_state",
    "sklearn.utils.safe_mask"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_utils.test_shuffle_dont_convert_to_array": {
  "data": {
   "lineno": 517,
   "symbols_in_volume": [
    "list",
    "numpy.arange",
    "numpy.array",
    "object",
    "scipy.sparse.csc_matrix",
    "sklearn.utils._mocking.MockDataFrame",
    "sklearn.utils._testing.assert_array_equal",
    "sklearn.utils.shuffle",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_utils.test_shuffle_on_ndim_equals_three": {
  "data": {
   "lineno": 507,
   "symbols_in_volume": [
    "numpy.array",
    "set",
    "sklearn.utils.shuffle",
    "to_tuple"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_utils.test_shuffle_on_ndim_equals_three.to_tuple": {
  "data": {
   "lineno": 508,
   "symbols_in_volume": [
    "tuple"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_utils.test_to_object_array": {
  "data": {
   "lineno": 687,
   "symbols_in_volume": [
    "isinstance",
    "numpy.array",
    "numpy.ndarray",
    "sklearn.utils._to_object_array",
    "sklearn.utils.tests.test_utils.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_utils.timeit": {
  "data": {
   "shadows": "timeit"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_utils.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_validation": {
  "data": {
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "numpy.float32",
    "numpy.float64",
    "sklearn.exceptions.PositiveSpectrumWarning"
   ]
  },
  "type": "module"
 },
 "sklearn.utils.tests.test_validation.ARDRegression": {
  "data": {
   "shadows": "sklearn.linear_model.ARDRegression"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_validation.DummyMemory": {
  "data": {
   "lineno": 882
  },
  "type": "class"
 },
 "sklearn.utils.tests.test_validation.DummyMemory.cache": {
  "data": {
   "lineno": 883
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_validation.FLOAT_DTYPES": {
  "data": {
   "shadows": "sklearn.utils.validation.FLOAT_DTYPES"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_validation.KNeighborsClassifier": {
  "data": {
   "shadows": "sklearn.neighbors.KNeighborsClassifier"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_validation.MockDataFrame": {
  "data": {
   "shadows": "sklearn.utils._mocking.MockDataFrame"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_validation.NamedTemporaryFile": {
  "data": {
   "shadows": "tempfile.NamedTemporaryFile"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_validation.NotFittedError": {
  "data": {
   "shadows": "sklearn.exceptions.NotFittedError"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_validation.PositiveSpectrumWarning": {
  "data": {
   "shadows": "sklearn.exceptions.PositiveSpectrumWarning"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_validation.RandomForestRegressor": {
  "data": {
   "shadows": "sklearn.ensemble.RandomForestRegressor"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_validation.SVR": {
  "data": {
   "shadows": "sklearn.svm.SVR"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_validation.SkipTest": {
  "data": {
   "shadows": "sklearn.utils._testing.SkipTest"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_validation.TempMemmap": {
  "data": {
   "shadows": "sklearn.utils._testing.TempMemmap"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_validation.WrongDummyMemory": {
  "data": {
   "lineno": 887
  },
  "type": "class"
 },
 "sklearn.utils.tests.test_validation.X_64bit": {
  "data": {
   "lineno": 551,
   "symbols_in_volume": [
    "getattr",
    "hasattr",
    "scipy.sparse.rand",
    "setattr",
    "sklearn.utils.tests.test_validation.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_validation._NotAnArray": {
  "data": {
   "shadows": "sklearn.utils.estimator_checks._NotAnArray"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_validation._allclose_dense_sparse": {
  "data": {
   "shadows": "sklearn.utils.validation._allclose_dense_sparse"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_validation._check_fit_params": {
  "data": {
   "shadows": "sklearn.utils.validation._check_fit_params"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_validation._check_psd_eigenvalues": {
  "data": {
   "shadows": "sklearn.utils.validation._check_psd_eigenvalues"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_validation._check_sample_weight": {
  "data": {
   "shadows": "sklearn.utils.validation._check_sample_weight"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_validation._deprecate_positional_args": {
  "data": {
   "shadows": "sklearn.utils.validation._deprecate_positional_args"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_validation._num_samples": {
  "data": {
   "shadows": "sklearn.utils.validation._num_samples"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_validation._psd_cases_invalid": {
  "data": {
   "lineno": 1048
  },
  "type": "constant"
 },
 "sklearn.utils.tests.test_validation._psd_cases_valid": {
  "data": {
   "lineno": 1000
  },
  "type": "constant"
 },
 "sklearn.utils.tests.test_validation._safe_indexing": {
  "data": {
   "shadows": "sklearn.utils._safe_indexing"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_validation._sparse_random_matrix": {
  "data": {
   "shadows": "sklearn.random_projection._sparse_random_matrix"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_validation.as_float_array": {
  "data": {
   "shadows": "sklearn.utils.as_float_array"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_validation.assert_all_finite": {
  "data": {
   "shadows": "sklearn.utils.validation.assert_all_finite"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_validation.assert_allclose": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_allclose"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_validation.assert_allclose_dense_sparse": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_allclose_dense_sparse"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_validation.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_validation.assert_no_warnings": {
  "data": {
   "shadows": "sklearn.utils._testing.assert_no_warnings"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_validation.check_X_y": {
  "data": {
   "shadows": "sklearn.utils.check_X_y"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_validation.check_array": {
  "data": {
   "shadows": "sklearn.utils.check_array"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_validation.check_consistent_length": {
  "data": {
   "shadows": "sklearn.utils.validation.check_consistent_length"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_validation.check_is_fitted": {
  "data": {
   "shadows": "sklearn.utils.validation.check_is_fitted"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_validation.check_memory": {
  "data": {
   "shadows": "sklearn.utils.validation.check_memory"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_validation.check_non_negative": {
  "data": {
   "shadows": "sklearn.utils.validation.check_non_negative"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_validation.check_scalar": {
  "data": {
   "shadows": "sklearn.utils.validation.check_scalar"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_validation.check_symmetric": {
  "data": {
   "shadows": "sklearn.utils.check_symmetric"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_validation.deprecated": {
  "data": {
   "shadows": "sklearn.utils.deprecated"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_validation.has_fit_parameter": {
  "data": {
   "shadows": "sklearn.utils.validation.has_fit_parameter"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_validation.ignore_warnings": {
  "data": {
   "shadows": "sklearn.utils._testing.ignore_warnings"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_validation.importorskip": {
  "data": {
   "shadows": "pytest.importorskip"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_validation.itemgetter": {
  "data": {
   "shadows": "operator.itemgetter"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_validation.make_blobs": {
  "data": {
   "shadows": "sklearn.datasets.make_blobs"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_validation.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_validation.np_version": {
  "data": {
   "shadows": "sklearn.utils.fixes.np_version"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_validation.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_validation.parse_version": {
  "data": {
   "shadows": "sklearn.utils.fixes.parse_version"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_validation.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_validation.product": {
  "data": {
   "shadows": "itertools.product"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_validation.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_validation.sklearn": {
  "data": {
   "shadows": "sklearn"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_validation.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_validation.test_allclose_dense_sparse_equals": {
  "data": {
   "lineno": 1112,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "sklearn.utils.tests.test_validation.pytest",
    "sklearn.utils.validation._allclose_dense_sparse",
    "toarray"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_validation.test_allclose_dense_sparse_not_equals": {
  "data": {
   "lineno": 1120,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "sklearn.utils.tests.test_validation.pytest",
    "sklearn.utils.validation._allclose_dense_sparse",
    "toarray"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_validation.test_allclose_dense_sparse_raise": {
  "data": {
   "lineno": 1128,
   "symbols_in_volume": [
    "ValueError",
    "numpy.arange",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "sklearn.utils.tests.test_validation.pytest",
    "sklearn.utils.validation._allclose_dense_sparse",
    "toarray"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_validation.test_as_float_array": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "bool",
    "numpy.arange",
    "numpy.asfortranarray",
    "numpy.float32",
    "numpy.float64",
    "numpy.int16",
    "numpy.int32",
    "numpy.int64",
    "numpy.int8",
    "numpy.isfortran",
    "numpy.isnan",
    "numpy.matrix",
    "numpy.nan",
    "numpy.ones",
    "numpy.uint16",
    "numpy.uint32",
    "numpy.uint8",
    "object",
    "scipy.sparse.csc_matrix",
    "sklearn.random_projection._sparse_random_matrix",
    "sklearn.utils.as_float_array"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_validation.test_as_float_array_nan": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "numpy.nan",
    "numpy.random.random",
    "scipy.sparse.rand",
    "sklearn.utils._testing.assert_allclose_dense_sparse",
    "sklearn.utils.as_float_array",
    "sklearn.utils.tests.test_validation.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_validation.test_check_X_y_informative_error": {
  "data": {
   "lineno": 941,
   "symbols_in_volume": [
    "ValueError",
    "numpy.ones",
    "sklearn.utils.check_X_y",
    "sklearn.utils.tests.test_validation.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_validation.test_check_array": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "bool",
    "float",
    "int",
    "isinstance",
    "itertools.product",
    "len",
    "numpy.arange",
    "numpy.float32",
    "numpy.int32",
    "numpy.ndarray",
    "object",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.isspmatrix_dok",
    "sklearn.utils._testing.ignore_warnings",
    "sklearn.utils.check_array",
    "sklearn.utils.estimator_checks._NotAnArray",
    "sklearn.utils.tests.test_validation.pytest",
    "sklearn.utils.tests.test_validation.warnings",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_validation.test_check_array_accept_large_sparse_no_exception": {
  "data": {
   "lineno": 560,
   "symbols_in_volume": [
    "sklearn.utils.check_array",
    "sklearn.utils.tests.test_validation.X_64bit"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_validation.test_check_array_accept_large_sparse_raise_exception": {
  "data": {
   "lineno": 565,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.utils.check_array",
    "sklearn.utils.tests.test_validation.X_64bit",
    "sklearn.utils.tests.test_validation.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_validation.test_check_array_accept_sparse_no_exception": {
  "data": {
   "lineno": 541,
   "symbols_in_volume": [
    "scipy.sparse.csr_matrix",
    "sklearn.utils.check_array"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_validation.test_check_array_accept_sparse_type_exception": {
  "data": {
   "lineno": 516,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "scipy.sparse.csr_matrix",
    "sklearn.svm.SVR",
    "sklearn.utils.check_array",
    "sklearn.utils.tests.test_validation.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_validation.test_check_array_complex_data_error": {
  "data": {
   "lineno": 636,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "scipy.sparse.coo_matrix",
    "sklearn.utils._mocking.MockDataFrame",
    "sklearn.utils.check_array",
    "sklearn.utils.tests.test_validation.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_validation.test_check_array_dtype_numeric_errors": {
  "data": {
   "lineno": 359,
   "symbols_in_volume": [
    "FutureWarning",
    "ValueError",
    "hasattr",
    "numpy.array",
    "sklearn.utils._testing.ignore_warnings",
    "sklearn.utils.check_array",
    "sklearn.utils.fixes.np_version",
    "sklearn.utils.fixes.parse_version",
    "sklearn.utils.tests.test_validation.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_validation.test_check_array_dtype_stability": {
  "data": {
   "lineno": 472,
   "symbols_in_volume": [
    "sklearn.utils.check_array"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_validation.test_check_array_dtype_warning": {
  "data": {
   "lineno": 479,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.float32",
    "numpy.float64",
    "numpy.int32",
    "numpy.int64",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "sklearn.utils._testing.assert_no_warnings",
    "sklearn.utils.check_array"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_validation.test_check_array_force_all_finite_object": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "numpy.nan",
    "object",
    "sklearn.utils.check_array",
    "sklearn.utils.tests.test_validation.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_validation.test_check_array_force_all_finite_object_unsafe_casting": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "numpy.array",
    "numpy.inf",
    "numpy.nan",
    "object",
    "sklearn.utils.check_array",
    "sklearn.utils.tests.test_validation.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_validation.test_check_array_force_all_finite_valid": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "float",
    "numpy.arange",
    "numpy.asarray",
    "numpy.inf",
    "numpy.nan",
    "retype",
    "scipy.sparse.csr_matrix",
    "sklearn.utils._testing.assert_allclose_dense_sparse",
    "sklearn.utils.check_array",
    "sklearn.utils.tests.test_validation.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_validation.test_check_array_force_all_finiteinvalid": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "numpy.arange",
    "numpy.asarray",
    "numpy.inf",
    "numpy.nan",
    "retype",
    "scipy.sparse.csr_matrix",
    "sklearn.utils.check_array",
    "sklearn.utils.tests.test_validation.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_validation.test_check_array_memmap": {
  "data": {
   "lineno": 912,
   "symbols_in_volume": [
    "numpy.may_share_memory",
    "numpy.ones",
    "sklearn.utils._testing.TempMemmap",
    "sklearn.utils.check_array",
    "sklearn.utils.tests.test_validation.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_validation.test_check_array_min_samples_and_features_messages": {
  "data": {
   "lineno": 573,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "numpy.empty",
    "numpy.ones",
    "sklearn.utils._testing.assert_array_equal",
    "sklearn.utils.check_X_y",
    "sklearn.utils.check_array",
    "sklearn.utils.tests.test_validation.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_validation.test_check_array_numeric_warns": {
  "data": {
   "lineno": 342,
   "symbols_in_volume": [
    "FutureWarning",
    "numpy.array",
    "sklearn.utils.check_array",
    "sklearn.utils.tests.test_validation.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_validation.test_check_array_on_mock_dataframe": {
  "data": {
   "lineno": 463,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.dtype",
    "numpy.float32",
    "sklearn.utils._mocking.MockDataFrame",
    "sklearn.utils.check_array"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_validation.test_check_array_pandas_dtype_casting": {
  "data": {
   "lineno": 424,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.float16",
    "numpy.float32",
    "numpy.float64",
    "numpy.int16",
    "numpy.int64",
    "sklearn.utils._testing.assert_array_equal",
    "sklearn.utils.check_array",
    "sklearn.utils.tests.test_validation.pytest",
    "sklearn.utils.validation.FLOAT_DTYPES"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_validation.test_check_array_pandas_dtype_object_conversion": {
  "data": {
   "lineno": 409,
   "symbols_in_volume": [
    "FutureWarning",
    "numpy.array",
    "object",
    "sklearn.utils._mocking.MockDataFrame",
    "sklearn.utils.check_array",
    "sklearn.utils.tests.test_validation.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_validation.test_check_array_pandas_na_support": {
  "data": {
   "lineno": 377,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "numpy.float32",
    "numpy.float64",
    "numpy.nan",
    "sklearn.utils._testing.assert_allclose",
    "sklearn.utils.check_array",
    "sklearn.utils.tests.test_validation.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_validation.test_check_array_series": {
  "data": {
   "lineno": 849,
   "symbols_in_volume": [
    "numpy.array",
    "object",
    "pandas",
    "pandas.Series",
    "pytest.importorskip",
    "sklearn.utils._testing.assert_array_equal",
    "sklearn.utils.check_array"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_validation.test_check_consistent_length": {
  "data": {
   "lineno": 806,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "numpy.array",
    "object",
    "scipy.sparse.csr_matrix",
    "sklearn.ensemble.RandomForestRegressor",
    "sklearn.utils.tests.test_validation.pytest",
    "sklearn.utils.validation.check_consistent_length"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_validation.test_check_dataframe_fit_attribute": {
  "data": {
   "lineno": 826,
   "symbols_in_volume": [
    "ImportError",
    "numpy.array",
    "pandas.DataFrame",
    "sklearn.utils._testing.SkipTest",
    "sklearn.utils.validation.check_consistent_length"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_validation.test_check_dataframe_mixed_float_dtypes": {
  "data": {
   "lineno": 861,
   "symbols_in_volume": [
    "float",
    "numpy.array",
    "numpy.float16",
    "numpy.float32",
    "numpy.float64",
    "pandas",
    "pandas.DataFrame",
    "pytest.importorskip",
    "sklearn.utils._testing.assert_allclose_dense_sparse",
    "sklearn.utils.check_array"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_validation.test_check_fit_params": {
  "data": {
   "lineno": 1210,
   "symbols_in_volume": [
    "list",
    "numpy.array",
    "numpy.random.randn",
    "range",
    "scipy.sparse.csc_matrix",
    "sklearn.utils._safe_indexing",
    "sklearn.utils._testing.assert_allclose_dense_sparse",
    "sklearn.utils._testing.assert_array_equal",
    "sklearn.utils.tests.test_validation.pytest",
    "sklearn.utils.validation._check_fit_params"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_validation.test_check_is_fitted": {
  "data": {
   "lineno": 724,
   "symbols_in_volume": [
    "AttributeError",
    "TypeError",
    "ValueError",
    "sklearn.datasets.make_blobs",
    "sklearn.exceptions.NotFittedError",
    "sklearn.linear_model.ARDRegression",
    "sklearn.svm.SVR",
    "sklearn.utils.tests.test_validation.pytest",
    "sklearn.utils.validation.check_is_fitted",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_validation.test_check_is_fitted_attributes": {
  "data": {
   "lineno": 760,
   "symbols_in_volume": [
    "MyEstimator",
    "all",
    "any",
    "sklearn.exceptions.NotFittedError",
    "sklearn.utils.tests.test_validation.pytest",
    "sklearn.utils.validation.check_is_fitted"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_validation.test_check_is_fitted_attributes.MyEstimator": {
  "data": {
   "lineno": 761
  },
  "type": "class"
 },
 "sklearn.utils.tests.test_validation.test_check_is_fitted_attributes.MyEstimator.fit": {
  "data": {
   "lineno": 762
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_validation.test_check_is_fitted_with_attributes": {
  "data": {
   "lineno": 788,
   "symbols_in_volume": [
    "list",
    "operator.itemgetter",
    "sklearn.datasets.make_blobs",
    "sklearn.exceptions.NotFittedError",
    "sklearn.linear_model.ARDRegression",
    "sklearn.utils.tests.test_validation.pytest",
    "sklearn.utils.validation.check_is_fitted",
    "tuple",
    "wrap"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_validation.test_check_memory": {
  "data": {
   "lineno": 891,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.utils.tests.test_validation.DummyMemory",
    "sklearn.utils.tests.test_validation.WrongDummyMemory",
    "sklearn.utils.tests.test_validation.os",
    "sklearn.utils.tests.test_validation.pytest",
    "sklearn.utils.validation.check_memory"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_validation.test_check_non_negative": {
  "data": {
   "lineno": 921,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "numpy.asarray",
    "retype",
    "scipy.sparse.bsr_matrix",
    "scipy.sparse.coo_matrix",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.dia_matrix",
    "scipy.sparse.dok_matrix",
    "scipy.sparse.lil_matrix",
    "sklearn.utils.tests.test_validation.pytest",
    "sklearn.utils.validation.check_non_negative"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_validation.test_check_pandas_sparse_invalid": {
  "data": {
   "lineno": 1257,
   "symbols_in_volume": [
    "ValueError",
    "pandas",
    "pandas.DataFrame",
    "pandas.__version__",
    "pandas.arrays.SparseArray",
    "sklearn.utils.check_array",
    "sklearn.utils.fixes.parse_version",
    "sklearn.utils.tests.test_validation.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_validation.test_check_pandas_sparse_valid": {
  "data": {
   "lineno": 1292,
   "symbols_in_volume": [
    "numpy.floating",
    "numpy.integer",
    "numpy.issubdtype",
    "numpy.unsignedinteger",
    "pandas",
    "pandas.DataFrame",
    "pandas.arrays.SparseArray",
    "sklearn.utils.check_array",
    "sklearn.utils.tests.test_validation.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_validation.test_check_psd_eigenvalues_invalid": {
  "data": {
   "lineno": 1064,
   "symbols_in_volume": [
    "list",
    "sklearn.utils.tests.test_validation._psd_cases_invalid",
    "sklearn.utils.tests.test_validation.pytest",
    "sklearn.utils.validation._check_psd_eigenvalues"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_validation.test_check_psd_eigenvalues_valid": {
  "data": {
   "lineno": 1026,
   "symbols_in_volume": [
    "list",
    "sklearn.utils._testing.assert_array_equal",
    "sklearn.utils.tests.test_validation._psd_cases_valid",
    "sklearn.utils.tests.test_validation.pytest",
    "sklearn.utils.validation._check_psd_eigenvalues"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_validation.test_check_sample_weight": {
  "data": {
   "lineno": 1075,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "numpy.float32",
    "numpy.float64",
    "numpy.ones",
    "sklearn.utils._testing.assert_allclose",
    "sklearn.utils.tests.test_validation.pytest",
    "sklearn.utils.validation._check_sample_weight"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_validation.test_check_scalar_invalid": {
  "data": {
   "lineno": 980,
   "symbols_in_volume": [
    "Exception",
    "TypeError",
    "ValueError",
    "float",
    "int",
    "sklearn.utils.tests.test_validation.pytest",
    "sklearn.utils.validation.check_scalar",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_validation.test_check_scalar_valid": {
  "data": {
   "lineno": 968,
   "symbols_in_volume": [
    "float",
    "int",
    "len",
    "sklearn.utils.tests.test_validation.pytest",
    "sklearn.utils.validation.check_scalar"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_validation.test_check_sparse_pandas_sp_format": {
  "data": {
   "lineno": 1238,
   "symbols_in_volume": [
    "pandas",
    "pandas.DataFrame.sparse.from_spmatrix",
    "scipy.sparse.issparse",
    "sklearn.random_projection._sparse_random_matrix",
    "sklearn.utils._testing.assert_allclose_dense_sparse",
    "sklearn.utils.check_array",
    "sklearn.utils.tests.test_validation.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_validation.test_check_symmetric": {
  "data": {
   "lineno": 691,
   "symbols_in_volume": [
    "UserWarning",
    "ValueError",
    "numpy.array",
    "numpy.ones",
    "scipy.sparse.bsr_matrix",
    "scipy.sparse.coo_matrix",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.dok_matrix",
    "scipy.sparse.issparse",
    "scipy.sparse.lil_matrix",
    "sklearn.utils._testing.assert_array_equal",
    "sklearn.utils.check_symmetric",
    "sklearn.utils.tests.test_validation.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_validation.test_deprecate_positional_args_warns_for_class": {
  "data": {
   "lineno": 1181,
   "symbols_in_volume": [
    "A1",
    "A2",
    "FutureWarning",
    "sklearn.utils.tests.test_validation.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_validation.test_deprecate_positional_args_warns_for_class.A1": {
  "data": {
   "lineno": 1183
  },
  "type": "class"
 },
 "sklearn.utils.tests.test_validation.test_deprecate_positional_args_warns_for_class.A1.__init__": {
  "data": {
   "lineno": 1184,
   "symbols_in_volume": [
    "sklearn.utils.validation._deprecate_positional_args"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_validation.test_deprecate_positional_args_warns_for_class.A2": {
  "data": {
   "lineno": 1196
  },
  "type": "class"
 },
 "sklearn.utils.tests.test_validation.test_deprecate_positional_args_warns_for_class.A2.__init__": {
  "data": {
   "lineno": 1197,
   "symbols_in_volume": [
    "sklearn.utils.validation._deprecate_positional_args"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_validation.test_deprecate_positional_args_warns_for_function": {
  "data": {
   "lineno": 1139,
   "symbols_in_volume": [
    "FutureWarning",
    "f1",
    "f2",
    "f3",
    "sklearn.utils.tests.test_validation.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_validation.test_deprecate_positional_args_warns_for_function.f1": {
  "data": {
   "lineno": 1141,
   "symbols_in_volume": [
    "sklearn.utils.validation._deprecate_positional_args"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_validation.test_deprecate_positional_args_warns_for_function.f2": {
  "data": {
   "lineno": 1153,
   "symbols_in_volume": [
    "sklearn.utils.validation._deprecate_positional_args"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_validation.test_deprecate_positional_args_warns_for_function.f3": {
  "data": {
   "lineno": 1162,
   "symbols_in_volume": [
    "sklearn.utils.validation._deprecate_positional_args"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_validation.test_deprecate_positional_args_warns_for_function_version": {
  "data": {
   "lineno": 1171,
   "symbols_in_volume": [
    "FutureWarning",
    "f1",
    "sklearn.utils.tests.test_validation.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_validation.test_deprecate_positional_args_warns_for_function_version.f1": {
  "data": {
   "lineno": 1172,
   "symbols_in_volume": [
    "sklearn.utils.validation._deprecate_positional_args"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_validation.test_has_fit_parameter": {
  "data": {
   "lineno": 675,
   "symbols_in_volume": [
    "sklearn.ensemble.RandomForestRegressor",
    "sklearn.neighbors.KNeighborsClassifier",
    "sklearn.svm.SVR",
    "sklearn.utils.validation.has_fit_parameter"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_validation.test_has_fit_parameter.TestClassWithDeprecatedFitMethod": {
  "data": {
   "lineno": 681
  },
  "type": "class"
 },
 "sklearn.utils.tests.test_validation.test_has_fit_parameter.TestClassWithDeprecatedFitMethod.fit": {
  "data": {
   "lineno": 682,
   "symbols_in_volume": [
    "sklearn.utils.deprecated"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_validation.test_memmap": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "f",
    "numpy.asarray",
    "numpy.float32",
    "numpy.memmap",
    "sklearn.utils._testing.assert_array_equal",
    "sklearn.utils.as_float_array",
    "sklearn.utils.check_array",
    "tempfile.NamedTemporaryFile"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_validation.test_np_matrix": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "isinstance",
    "numpy.arange",
    "numpy.matrix",
    "scipy.sparse.csc_matrix",
    "sklearn.utils.as_float_array"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_validation.test_ordering": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "numpy.ones",
    "scipy.sparse.csr_matrix",
    "sklearn.utils.check_array"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_validation.test_retrieve_samples_from_non_standard_shape": {
  "data": {
   "lineno": 948,
   "symbols_in_volume": [
    "TestNoLenWeirdShape",
    "TestNonNumericShape",
    "TypeError",
    "len",
    "sklearn.utils.tests.test_validation.pytest",
    "sklearn.utils.validation._num_samples"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_validation.test_retrieve_samples_from_non_standard_shape.TestNoLenWeirdShape": {
  "data": {
   "lineno": 960
  },
  "type": "class"
 },
 "sklearn.utils.tests.test_validation.test_retrieve_samples_from_non_standard_shape.TestNoLenWeirdShape.__init__": {
  "data": {
   "lineno": 961
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_validation.test_retrieve_samples_from_non_standard_shape.TestNonNumericShape": {
  "data": {
   "lineno": 949
  },
  "type": "class"
 },
 "sklearn.utils.tests.test_validation.test_retrieve_samples_from_non_standard_shape.TestNonNumericShape.__init__": {
  "data": {
   "lineno": 950
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_validation.test_retrieve_samples_from_non_standard_shape.TestNonNumericShape.__len__": {
  "data": {
   "lineno": 953,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_validation.test_suppress_validation": {
  "data": {
   "lineno": 838,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "numpy.inf",
    "sklearn.utils.tests.test_validation.pytest",
    "sklearn.utils.tests.test_validation.sklearn",
    "sklearn.utils.validation.assert_all_finite"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_validation.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.utils.timeit": {
  "data": {
   "shadows": "timeit"
  },
  "type": "import"
 },
 "sklearn.utils.tosequence": {
  "data": {
   "lineno": 771,
   "symbols_in_volume": [
    "collections.abc.Sequence",
    "isinstance",
    "list",
    "numpy.asarray",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.validation": {
  "data": {
   "symbols_in_volume": [
    "numpy.float16",
    "numpy.float32",
    "numpy.float64"
   ]
  },
  "type": "module"
 },
 "sklearn.utils.validation.ComplexWarning": {
  "data": {
   "shadows": "numpy.core.numeric.ComplexWarning"
  },
  "type": "import"
 },
 "sklearn.utils.validation.FLOAT_DTYPES": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "sklearn.utils.validation.Int16Dtype": {
  "data": {
   "shadows": "pandas.Int16Dtype"
  },
  "type": "import"
 },
 "sklearn.utils.validation.Int32Dtype": {
  "data": {
   "shadows": "pandas.Int32Dtype"
  },
  "type": "import"
 },
 "sklearn.utils.validation.Int64Dtype": {
  "data": {
   "shadows": "pandas.Int64Dtype"
  },
  "type": "import"
 },
 "sklearn.utils.validation.Int8Dtype": {
  "data": {
   "shadows": "pandas.Int8Dtype"
  },
  "type": "import"
 },
 "sklearn.utils.validation.Parameter": {
  "data": {
   "shadows": "inspect.Parameter"
  },
  "type": "import"
 },
 "sklearn.utils.validation.UInt16Dtype": {
  "data": {
   "shadows": "pandas.UInt16Dtype"
  },
  "type": "import"
 },
 "sklearn.utils.validation.UInt32Dtype": {
  "data": {
   "shadows": "pandas.UInt32Dtype"
  },
  "type": "import"
 },
 "sklearn.utils.validation.UInt64Dtype": {
  "data": {
   "shadows": "pandas.UInt64Dtype"
  },
  "type": "import"
 },
 "sklearn.utils.validation.UInt8Dtype": {
  "data": {
   "shadows": "pandas.UInt8Dtype"
  },
  "type": "import"
 },
 "sklearn.utils.validation._allclose_dense_sparse": {
  "data": {
   "lineno": 1329,
   "symbols_in_volume": [
    "ValueError",
    "numpy.allclose",
    "numpy.array_equal",
    "scipy.sparse.issparse"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.validation._assert_all_finite": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "ValueError",
    "_object_dtype_isnan",
    "_safe_accumulator_op",
    "numpy.asanyarray",
    "numpy.dtype",
    "numpy.isfinite",
    "numpy.isinf",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.validation._check_fit_params": {
  "data": {
   "lineno": 1365,
   "symbols_in_volume": [
    "_safe_indexing",
    "sklearn.utils.validation._is_arraylike",
    "sklearn.utils.validation._make_indexable",
    "sklearn.utils.validation._num_samples"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.validation._check_large_sparse": {
  "data": {
   "lineno": 688,
   "symbols_in_volume": [
    "ValueError",
    "getattr"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.validation._check_psd_eigenvalues": {
  "data": {
   "lineno": 1113,
   "symbols_in_volume": [
    "ValueError",
    "numpy.abs",
    "numpy.array",
    "numpy.float64",
    "numpy.imag",
    "numpy.isreal",
    "numpy.real",
    "sklearn.utils.validation.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.validation._check_sample_weight": {
  "data": {
   "lineno": 1276,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "numpy.float32",
    "numpy.float64",
    "numpy.full",
    "numpy.ones",
    "sklearn.utils.validation._num_samples",
    "sklearn.utils.validation.check_array",
    "sklearn.utils.validation.numbers"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.validation._deprecate_positional_args": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "_inner_deprecate_positional_args"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.validation._deprecate_positional_args._inner_deprecate_positional_args": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "inspect.Parameter.KEYWORD_ONLY",
    "inspect.Parameter.POSITIONAL_OR_KEYWORD",
    "inspect.signature"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.validation._deprecate_positional_args._inner_deprecate_positional_args.inner_f": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "FutureWarning",
    "f",
    "functools.wraps",
    "len",
    "sklearn.utils.validation.warnings",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.validation._ensure_no_complex_data": {
  "data": {
   "lineno": 397,
   "symbols_in_volume": [
    "ValueError",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.validation._ensure_sparse_format": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "hasattr",
    "isinstance",
    "len",
    "list",
    "sklearn.utils.validation._assert_all_finite",
    "sklearn.utils.validation._check_large_sparse",
    "sklearn.utils.validation.warnings",
    "str",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.validation._get_config": {
  "data": {
   "shadows": "get_config"
  },
  "type": "import"
 },
 "sklearn.utils.validation._is_arraylike": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.validation._make_indexable": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "hasattr",
    "numpy.array",
    "scipy.sparse.issparse"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.validation._num_samples": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "TypeError",
    "callable",
    "hasattr",
    "isinstance",
    "len",
    "numpy.asarray",
    "sklearn.utils.validation.numbers",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.validation.as_float_array": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "isinstance",
    "numpy.float32",
    "numpy.float64",
    "numpy.matrix",
    "numpy.ndarray",
    "scipy.sparse.issparse",
    "sklearn.utils.validation._deprecate_positional_args",
    "sklearn.utils.validation.check_array"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.validation.assert_all_finite": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "scipy.sparse.issparse",
    "sklearn.utils.validation._assert_all_finite",
    "sklearn.utils.validation._deprecate_positional_args"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.validation.check_X_y": {
  "data": {
   "lineno": 707,
   "symbols_in_volume": [
    "ValueError",
    "numpy.float64",
    "sklearn.utils.validation._assert_all_finite",
    "sklearn.utils.validation._deprecate_positional_args",
    "sklearn.utils.validation.check_array",
    "sklearn.utils.validation.check_consistent_length",
    "sklearn.utils.validation.column_or_1d"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.validation.check_array": {
  "data": {
   "lineno": 404,
   "symbols_in_volume": [
    "FutureWarning",
    "ImportError",
    "ValueError",
    "all",
    "contextlib.suppress",
    "enumerate",
    "getattr",
    "hasattr",
    "isinstance",
    "len",
    "list",
    "numpy.array",
    "numpy.asarray",
    "numpy.core.numeric.ComplexWarning",
    "numpy.dtype",
    "numpy.float64",
    "numpy.may_share_memory",
    "numpy.result_type",
    "object",
    "pandas.Int16Dtype",
    "pandas.Int32Dtype",
    "pandas.Int64Dtype",
    "pandas.Int8Dtype",
    "pandas.UInt16Dtype",
    "pandas.UInt32Dtype",
    "pandas.UInt64Dtype",
    "pandas.UInt8Dtype",
    "pandas.api.types.is_sparse",
    "scipy.sparse.issparse",
    "set",
    "sklearn.utils.validation._assert_all_finite",
    "sklearn.utils.validation._deprecate_positional_args",
    "sklearn.utils.validation._ensure_no_complex_data",
    "sklearn.utils.validation._ensure_sparse_format",
    "sklearn.utils.validation._num_samples",
    "sklearn.utils.validation.warnings",
    "str",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.validation.check_consistent_length": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "len",
    "numpy.unique",
    "sklearn.utils.validation._num_samples"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.validation.check_is_fitted": {
  "data": {
   "lineno": 977,
   "symbols_in_volume": [
    "NotFittedError",
    "TypeError",
    "all",
    "all_or_any",
    "hasattr",
    "inspect.isclass",
    "isinstance",
    "list",
    "sklearn.utils.validation._deprecate_positional_args",
    "tuple",
    "type",
    "vars"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.validation.check_memory": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "ValueError",
    "hasattr",
    "isinstance",
    "parse_version",
    "sklearn.utils.validation.joblib",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.validation.check_non_negative": {
  "data": {
   "lineno": 1044,
   "symbols_in_volume": [
    "ValueError",
    "scipy.sparse.issparse"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.validation.check_random_state": {
  "data": {
   "lineno": 869,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "numpy.random",
    "numpy.random.RandomState",
    "numpy.random.mtrand._rand",
    "sklearn.utils.validation.numbers"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.validation.check_scalar": {
  "data": {
   "lineno": 1071,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "isinstance",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.validation.check_symmetric": {
  "data": {
   "lineno": 917,
   "symbols_in_volume": [
    "ValueError",
    "abs",
    "getattr",
    "numpy.all",
    "numpy.allclose",
    "scipy.sparse.issparse",
    "sklearn.utils.validation._deprecate_positional_args",
    "sklearn.utils.validation.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.validation.column_or_1d": {
  "data": {
   "lineno": 836,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.asarray",
    "numpy.ravel",
    "numpy.shape",
    "sklearn.utils.validation._deprecate_positional_args",
    "sklearn.utils.validation.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.validation.has_fit_parameter": {
  "data": {
   "lineno": 890,
   "symbols_in_volume": [
    "inspect.signature"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.validation.indexable": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "sklearn.utils.validation._make_indexable",
    "sklearn.utils.validation.check_consistent_length"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.validation.is_sparse": {
  "data": {
   "shadows": "pandas.api.types.is_sparse"
  },
  "type": "import"
 },
 "sklearn.utils.validation.isclass": {
  "data": {
   "shadows": "inspect.isclass"
  },
  "type": "import"
 },
 "sklearn.utils.validation.joblib": {
  "data": {
   "shadows": "joblib"
  },
  "type": "import"
 },
 "sklearn.utils.validation.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.utils.validation.numbers": {
  "data": {
   "shadows": "numbers"
  },
  "type": "import"
 },
 "sklearn.utils.validation.signature": {
  "data": {
   "shadows": "inspect.signature"
  },
  "type": "import"
 },
 "sklearn.utils.validation.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.utils.validation.suppress": {
  "data": {
   "shadows": "contextlib.suppress"
  },
  "type": "import"
 },
 "sklearn.utils.validation.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.utils.validation.wraps": {
  "data": {
   "shadows": "functools.wraps"
  },
  "type": "import"
 },
 "sklearn.utils.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 }
}