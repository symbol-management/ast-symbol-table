{
 "*": {
  "data": {
   "imports": [
    "joblib"
   ]
  },
  "type": "star-import"
 },
 "sklearn": {
  "data": {
   "symbols_in_volume": [
    "DeprecationWarning",
    "NameError",
    "__name__",
    "sklearn.__SKLEARN_SETUP__",
    "sklearn.logger",
    "sklearn.logging",
    "sklearn.re",
    "sklearn.sys",
    "sklearn.warnings"
   ]
  },
  "type": "module"
 },
 "sklearn.__SKLEARN_SETUP__": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "sklearn.__all__": {
  "data": {
   "lineno": 69
  },
  "type": "constant"
 },
 "sklearn.__check_build": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "sklearn.__check_build.raise_build_error"
   ]
  },
  "type": "module"
 },
 "sklearn.__check_build.INPLACE_MSG": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "sklearn.__check_build.STANDARD_MSG": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "sklearn.__check_build.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "sklearn.__check_build.raise_build_error": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "ImportError",
    "enumerate",
    "list",
    "sklearn.__check_build.INPLACE_MSG",
    "sklearn.__check_build.STANDARD_MSG",
    "sklearn.__check_build.os"
   ]
  },
  "type": "function"
 },
 "sklearn.__check_build.setup": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.distutils.core.setup",
    "sklearn.__check_build.setup.configuration"
   ]
  },
  "type": "module"
 },
 "sklearn.__check_build.setup.Configuration": {
  "data": {
   "shadows": "numpy.distutils.misc_util.Configuration"
  },
  "type": "import"
 },
 "sklearn.__check_build.setup.configuration": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "numpy.distutils.misc_util.Configuration",
    "sklearn.__check_build.setup.numpy"
   ]
  },
  "type": "function"
 },
 "sklearn.__check_build.setup.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.__check_build.setup.setup": {
  "data": {
   "shadows": "numpy.distutils.core.setup"
  },
  "type": "import"
 },
 "sklearn.__version__": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "sklearn._build_utils": {
  "data": {},
  "type": "module"
 },
 "sklearn._build_utils.CYTHON_MIN_VERSION": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "sklearn._build_utils.Cython": {
  "data": {
   "shadows": "Cython"
  },
  "type": "import"
 },
 "sklearn._build_utils.DEFAULT_ROOT": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "sklearn._build_utils.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "sklearn._build_utils.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "sklearn._build_utils.build_from_c_and_cpp_files": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "sklearn._build_utils.os"
   ]
  },
  "type": "function"
 },
 "sklearn._build_utils.cythonize": {
  "data": {
   "shadows": "Cython.Build.cythonize"
  },
  "type": "import"
 },
 "sklearn._build_utils.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sklearn._build_utils.get_blas_info": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "atlas_not_found",
    "numpy.distutils.system_info.get_info"
   ]
  },
  "type": "function"
 },
 "sklearn._build_utils.get_blas_info.atlas_not_found": {
  "data": {
   "lineno": 20
  },
  "type": "function"
 },
 "sklearn._build_utils.get_info": {
  "data": {
   "shadows": "numpy.distutils.system_info.get_info"
  },
  "type": "import"
 },
 "sklearn._build_utils.maybe_cythonize_extensions": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "Cython.Build.cythonize",
    "ImportError",
    "ValueError",
    "distutils.version.LooseVersion",
    "sklearn._build_utils.CYTHON_MIN_VERSION",
    "sklearn._build_utils.Cython",
    "sklearn._build_utils.build_from_c_and_cpp_files",
    "sklearn._build_utils.os"
   ]
  },
  "type": "function"
 },
 "sklearn._build_utils.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "sklearn._build_utils.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "sklearn._config": {
  "data": {
   "symbols_in_volume": [
    "bool",
    "int",
    "sklearn._config.os"
   ]
  },
  "type": "module"
 },
 "sklearn._config._global_config": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "sklearn._config.config_context": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "contextlib.contextmanager",
    "sklearn._config.get_config",
    "sklearn._config.set_config"
   ]
  },
  "type": "function"
 },
 "sklearn._config.contextmanager": {
  "data": {
   "shadows": "contextlib.contextmanager"
  },
  "type": "import"
 },
 "sklearn._config.get_config": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "sklearn._config._global_config"
   ]
  },
  "type": "function"
 },
 "sklearn._config.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "sklearn._config.set_config": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "sklearn._config._global_config"
   ]
  },
  "type": "function"
 },
 "sklearn.base": {
  "data": {},
  "type": "module"
 },
 "sklearn.base.BaseEstimator": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "sklearn.base.BaseEstimator.__getstate__": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "AttributeError",
    "dict",
    "sklearn.base.BaseEstimator",
    "super",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.base.BaseEstimator.__repr__": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "len",
    "sklearn.base._pprint"
   ]
  },
  "type": "function"
 },
 "sklearn.base.BaseEstimator.__setstate__": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "AttributeError",
    "UserWarning",
    "sklearn.base.BaseEstimator",
    "sklearn.base.warnings",
    "super",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.base.BaseEstimator._get_param_names": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "RuntimeError",
    "classmethod",
    "getattr",
    "object.__init__",
    "signature",
    "sorted"
   ]
  },
  "type": "function"
 },
 "sklearn.base.BaseEstimator.get_params": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "dict",
    "getattr",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "sklearn.base.BaseEstimator.set_params": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "ValueError",
    "collections.defaultdict",
    "dict",
    "setattr"
   ]
  },
  "type": "function"
 },
 "sklearn.base.BiclusterMixin": {
  "data": {
   "lineno": 359,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "sklearn.base.BiclusterMixin.biclusters_": {
  "data": {
   "lineno": 362,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.base.BiclusterMixin.get_indices": {
  "data": {
   "lineno": 370,
   "symbols_in_volume": [
    "numpy.nonzero"
   ]
  },
  "type": "function"
 },
 "sklearn.base.BiclusterMixin.get_shape": {
  "data": {
   "lineno": 392,
   "symbols_in_volume": [
    "len",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sklearn.base.BiclusterMixin.get_submatrix": {
  "data": {
   "lineno": 408,
   "symbols_in_volume": [
    "check_array",
    "numpy.newaxis"
   ]
  },
  "type": "function"
 },
 "sklearn.base.ClassifierMixin": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "sklearn.base.ClassifierMixin.score": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "accuracy_score"
   ]
  },
  "type": "function"
 },
 "sklearn.base.ClusterMixin": {
  "data": {
   "lineno": 333,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "sklearn.base.ClusterMixin.fit_predict": {
  "data": {
   "lineno": 337
  },
  "type": "function"
 },
 "sklearn.base.DensityMixin": {
  "data": {
   "lineno": 468,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "sklearn.base.DensityMixin.score": {
  "data": {
   "lineno": 472
  },
  "type": "function"
 },
 "sklearn.base.MetaEstimatorMixin": {
  "data": {
   "lineno": 513,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "sklearn.base.OutlierMixin": {
  "data": {
   "lineno": 486,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "sklearn.base.OutlierMixin.fit_predict": {
  "data": {
   "lineno": 490
  },
  "type": "function"
 },
 "sklearn.base.RegressorMixin": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "sklearn.base.RegressorMixin.score": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": [
    "r2_score"
   ]
  },
  "type": "function"
 },
 "sklearn.base.TransformerMixin": {
  "data": {
   "lineno": 435,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "sklearn.base.TransformerMixin.fit_transform": {
  "data": {
   "lineno": 438
  },
  "type": "function"
 },
 "sklearn.base._first_and_last_element": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "hasattr",
    "isinstance",
    "numpy.ndarray",
    "scipy.sparse.issparse"
   ]
  },
  "type": "function"
 },
 "sklearn.base._pprint": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "enumerate",
    "float",
    "len",
    "list",
    "numpy.get_printoptions",
    "numpy.set_printoptions",
    "printer",
    "repr",
    "sorted",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.base.clone": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "RuntimeError",
    "TypeError",
    "estimator_type",
    "frozenset",
    "hasattr",
    "klass",
    "list",
    "repr",
    "set",
    "sklearn.base.copy",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.base.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "sklearn.base.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "sklearn.base.is_classifier": {
  "data": {
   "lineno": 520,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "sklearn.base.is_outlier_detector": {
  "data": {
   "lineno": 552,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "sklearn.base.is_regressor": {
  "data": {
   "lineno": 536,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "sklearn.base.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.base.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.base.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.calibration": {
  "data": {},
  "type": "module"
 },
 "sklearn.calibration.CalibratedClassifierCV": {
  "data": {
   "lineno": 30
  },
  "type": "class"
 },
 "sklearn.calibration.CalibratedClassifierCV.__init__": {
  "data": {
   "lineno": 106
  },
  "type": "function"
 },
 "sklearn.calibration.CalibratedClassifierCV.fit": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "LabelBinarizer",
    "LinearSVC",
    "ValueError",
    "check_X_y",
    "check_array",
    "check_consistent_length",
    "check_cv",
    "clone",
    "hasattr",
    "indexable",
    "int",
    "isinstance",
    "numpy.any",
    "numpy.sum",
    "signature",
    "sklearn.calibration._CalibratedClassifier",
    "sklearn.calibration.warnings",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.calibration.CalibratedClassifierCV.predict": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "check_is_fitted",
    "numpy.argmax"
   ]
  },
  "type": "function"
 },
 "sklearn.calibration.CalibratedClassifierCV.predict_proba": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "check_array",
    "check_is_fitted",
    "len",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "sklearn.calibration.LabelEncoder": {
  "data": {
   "shadows": "sklearn.preprocessing.LabelEncoder"
  },
  "type": "import"
 },
 "sklearn.calibration._CalibratedClassifier": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "sklearn.calibration._CalibratedClassifier.__init__": {
  "data": {
   "lineno": 290
  },
  "type": "function"
 },
 "sklearn.calibration._CalibratedClassifier._preproc": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": [
    "RuntimeError",
    "hasattr",
    "len",
    "numpy.newaxis"
   ]
  },
  "type": "function"
 },
 "sklearn.calibration._CalibratedClassifier.fit": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": [
    "IsotonicRegression",
    "ValueError",
    "label_binarize",
    "sklearn.calibration._SigmoidCalibration",
    "sklearn.preprocessing.LabelEncoder",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.calibration._CalibratedClassifier.predict_proba": {
  "data": {
   "lineno": 359,
   "symbols_in_volume": [
    "len",
    "numpy.isnan",
    "numpy.newaxis",
    "numpy.sum",
    "numpy.zeros",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.calibration._SigmoidCalibration": {
  "data": {
   "lineno": 467
  },
  "type": "class"
 },
 "sklearn.calibration._SigmoidCalibration.fit": {
  "data": {
   "lineno": 478,
   "symbols_in_volume": [
    "column_or_1d",
    "indexable",
    "sklearn.calibration._sigmoid_calibration"
   ]
  },
  "type": "function"
 },
 "sklearn.calibration._SigmoidCalibration.predict": {
  "data": {
   "lineno": 504,
   "symbols_in_volume": [
    "column_or_1d",
    "numpy.exp"
   ]
  },
  "type": "function"
 },
 "sklearn.calibration._sigmoid_calibration": {
  "data": {
   "lineno": 401,
   "symbols_in_volume": [
    "column_or_1d",
    "float",
    "math.log",
    "numpy.array",
    "numpy.finfo",
    "numpy.float",
    "numpy.sum",
    "numpy.zeros",
    "scipy.optimize.fmin_bfgs"
   ]
  },
  "type": "function"
 },
 "sklearn.calibration._sigmoid_calibration.grad": {
  "data": {
   "lineno": 451,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.dot",
    "numpy.exp",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "sklearn.calibration._sigmoid_calibration.objective": {
  "data": {
   "lineno": 441,
   "symbols_in_volume": [
    "numpy.exp",
    "numpy.log"
   ]
  },
  "type": "function"
 },
 "sklearn.calibration.calibration_curve": {
  "data": {
   "lineno": 521,
   "symbols_in_volume": [
    "ValueError",
    "_check_binary_probabilistic_predictions",
    "column_or_1d",
    "len",
    "numpy.bincount",
    "numpy.digitize",
    "numpy.linspace"
   ]
  },
  "type": "function"
 },
 "sklearn.calibration.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sklearn.calibration.fmin_bfgs": {
  "data": {
   "shadows": "scipy.optimize.fmin_bfgs"
  },
  "type": "import"
 },
 "sklearn.calibration.log": {
  "data": {
   "shadows": "math.log"
  },
  "type": "import"
 },
 "sklearn.calibration.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.calibration.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.cluster": {
  "data": {},
  "type": "module"
 },
 "sklearn.cluster.__all__": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "sklearn.cluster._feature_agglomeration": {
  "data": {},
  "type": "module"
 },
 "sklearn.cluster._feature_agglomeration.AgglomerationTransform": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "numpy.mean"
   ]
  },
  "type": "class"
 },
 "sklearn.cluster._feature_agglomeration.AgglomerationTransform.inverse_transform": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "check_is_fitted",
    "numpy.unique"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster._feature_agglomeration.AgglomerationTransform.transform": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "ValueError",
    "check_array",
    "check_is_fitted",
    "len",
    "numpy.array",
    "numpy.bincount",
    "numpy.mean",
    "numpy.unique",
    "pooling_func",
    "range",
    "scipy.sparse.issparse"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster._feature_agglomeration.issparse": {
  "data": {
   "shadows": "scipy.sparse.issparse"
  },
  "type": "import"
 },
 "sklearn.cluster._feature_agglomeration.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.cluster.affinity_propagation_": {
  "data": {},
  "type": "module"
 },
 "sklearn.cluster.affinity_propagation_.AffinityPropagation": {
  "data": {
   "lineno": 236
  },
  "type": "class"
 },
 "sklearn.cluster.affinity_propagation_.AffinityPropagation.__init__": {
  "data": {
   "lineno": 337
  },
  "type": "function"
 },
 "sklearn.cluster.affinity_propagation_.AffinityPropagation._pairwise": {
  "data": {
   "lineno": 349,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.affinity_propagation_.AffinityPropagation.fit": {
  "data": {
   "lineno": 353,
   "symbols_in_volume": [
    "ValueError",
    "check_array",
    "euclidean_distances",
    "sklearn.cluster.affinity_propagation_.affinity_propagation",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.affinity_propagation_.AffinityPropagation.predict": {
  "data": {
   "lineno": 388,
   "symbols_in_volume": [
    "ValueError",
    "check_is_fitted",
    "hasattr",
    "numpy.array",
    "pairwise_distances_argmin",
    "sklearn.cluster.affinity_propagation_.warnings",
    "sklearn.exceptions.ConvergenceWarning"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.affinity_propagation_.ConvergenceWarning": {
  "data": {
   "shadows": "sklearn.exceptions.ConvergenceWarning"
  },
  "type": "import"
 },
 "sklearn.cluster.affinity_propagation_._equal_similarities_and_preferences": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "all_equal_preferences",
    "all_equal_similarities"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.affinity_propagation_._equal_similarities_and_preferences.all_equal_preferences": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.affinity_propagation_._equal_similarities_and_preferences.all_equal_similarities": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "bool",
    "numpy.all",
    "numpy.fill_diagonal",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.affinity_propagation_.affinity_propagation": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "ValueError",
    "as_float_array",
    "numpy.add",
    "numpy.arange",
    "numpy.argmax",
    "numpy.array",
    "numpy.diag",
    "numpy.double",
    "numpy.finfo",
    "numpy.flatnonzero",
    "numpy.inf",
    "numpy.max",
    "numpy.maximum",
    "numpy.median",
    "numpy.newaxis",
    "numpy.random.RandomState",
    "numpy.searchsorted",
    "numpy.subtract",
    "numpy.sum",
    "numpy.unique",
    "numpy.where",
    "numpy.zeros",
    "print",
    "range",
    "repr",
    "sklearn.cluster.affinity_propagation_._equal_similarities_and_preferences",
    "sklearn.cluster.affinity_propagation_.warnings",
    "sklearn.exceptions.ConvergenceWarning"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.affinity_propagation_.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.cluster.affinity_propagation_.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.cluster.bicluster": {
  "data": {},
  "type": "module"
 },
 "sklearn.cluster.bicluster.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "sklearn.cluster.bicluster.BaseSpectral": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "abc.ABCMeta"
   ]
  },
  "type": "class"
 },
 "sklearn.cluster.bicluster.BaseSpectral.__init__": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.bicluster.BaseSpectral._check_parameters": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.bicluster.BaseSpectral._k_means": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "KMeans",
    "MiniBatchKMeans"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.bicluster.BaseSpectral._svd": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "assert_all_finite",
    "check_random_state",
    "numpy.any",
    "numpy.isnan",
    "randomized_svd",
    "safe_sparse_dot",
    "scipy.sparse.linalg.eigsh",
    "scipy.sparse.linalg.svds"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.bicluster.BaseSpectral.fit": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "check_array",
    "numpy.float64"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.bicluster.SpectralBiclustering": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": [
    "sklearn.cluster.bicluster.BaseSpectral"
   ]
  },
  "type": "class"
 },
 "sklearn.cluster.bicluster.SpectralBiclustering.__init__": {
  "data": {
   "lineno": 431,
   "symbols_in_volume": [
    "sklearn.cluster.bicluster.SpectralBiclustering",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.bicluster.SpectralBiclustering._check_parameters": {
  "data": {
   "lineno": 447,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "int",
    "sklearn.cluster.bicluster.SpectralBiclustering",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.bicluster.SpectralBiclustering._fit": {
  "data": {
   "lineno": 476,
   "symbols_in_volume": [
    "TypeError",
    "numpy.vstack",
    "range",
    "sklearn.cluster.bicluster._bistochastic_normalize",
    "sklearn.cluster.bicluster._log_normalize",
    "sklearn.cluster.bicluster._scale_normalize"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.bicluster.SpectralBiclustering._fit_best_piecewise": {
  "data": {
   "lineno": 515,
   "symbols_in_volume": [
    "numpy.apply_along_axis",
    "numpy.argsort",
    "scipy.linalg.norm"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.bicluster.SpectralBiclustering._fit_best_piecewise.make_piecewise": {
  "data": {
   "lineno": 523
  },
  "type": "function"
 },
 "sklearn.cluster.bicluster.SpectralBiclustering._project_and_cluster": {
  "data": {
   "lineno": 533,
   "symbols_in_volume": [
    "safe_sparse_dot"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.bicluster.SpectralCoclustering": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "sklearn.cluster.bicluster.BaseSpectral"
   ]
  },
  "type": "class"
 },
 "sklearn.cluster.bicluster.SpectralCoclustering.__init__": {
  "data": {
   "lineno": 284,
   "symbols_in_volume": [
    "sklearn.cluster.bicluster.SpectralCoclustering",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.bicluster.SpectralCoclustering._fit": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": [
    "int",
    "numpy.ceil",
    "numpy.log2",
    "numpy.newaxis",
    "numpy.vstack",
    "range",
    "sklearn.cluster.bicluster._scale_normalize"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.bicluster.__all__": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "sklearn.cluster.bicluster._bistochastic_normalize": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "make_nonnegative",
    "range",
    "scipy.linalg.norm",
    "scipy.sparse.issparse",
    "sklearn.cluster.bicluster._scale_normalize"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.bicluster._log_normalize": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "ValueError",
    "make_nonnegative",
    "numpy.log",
    "numpy.newaxis",
    "scipy.sparse.issparse"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.bicluster._scale_normalize": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "make_nonnegative",
    "numpy.asarray",
    "numpy.isnan",
    "numpy.newaxis",
    "numpy.sqrt",
    "numpy.where",
    "scipy.sparse.dia_matrix",
    "scipy.sparse.issparse"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.bicluster.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "sklearn.cluster.bicluster.dia_matrix": {
  "data": {
   "shadows": "scipy.sparse.dia_matrix"
  },
  "type": "import"
 },
 "sklearn.cluster.bicluster.eigsh": {
  "data": {
   "shadows": "scipy.sparse.linalg.eigsh"
  },
  "type": "import"
 },
 "sklearn.cluster.bicluster.issparse": {
  "data": {
   "shadows": "scipy.sparse.issparse"
  },
  "type": "import"
 },
 "sklearn.cluster.bicluster.norm": {
  "data": {
   "shadows": "scipy.linalg.norm"
  },
  "type": "import"
 },
 "sklearn.cluster.bicluster.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.cluster.bicluster.svds": {
  "data": {
   "shadows": "scipy.sparse.linalg.svds"
  },
  "type": "import"
 },
 "sklearn.cluster.birch": {
  "data": {},
  "type": "module"
 },
 "sklearn.cluster.birch.Birch": {
  "data": {
   "lineno": 324
  },
  "type": "class"
 },
 "sklearn.cluster.birch.Birch.__init__": {
  "data": {
   "lineno": 428
  },
  "type": "function"
 },
 "sklearn.cluster.birch.Birch._check_fit": {
  "data": {
   "lineno": 540,
   "symbols_in_volume": [
    "NotFittedError",
    "ValueError",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.birch.Birch._fit": {
  "data": {
   "lineno": 451,
   "symbols_in_volume": [
    "ValueError",
    "check_array",
    "getattr",
    "iter",
    "iter_func",
    "numpy.concatenate",
    "scipy.sparse.issparse",
    "sklearn.cluster.birch._CFNode",
    "sklearn.cluster.birch._CFSubcluster",
    "sklearn.cluster.birch._iterate_sparse_X",
    "sklearn.cluster.birch._split_node"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.birch.Birch._get_leaves": {
  "data": {
   "lineno": 502
  },
  "type": "function"
 },
 "sklearn.cluster.birch.Birch._global_clustering": {
  "data": {
   "lineno": 598,
   "symbols_in_volume": [
    "AgglomerativeClustering",
    "ValueError",
    "hasattr",
    "int",
    "isinstance",
    "len",
    "numpy.arange",
    "row_norms",
    "sklearn.cluster.birch.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.birch.Birch.fit": {
  "data": {
   "lineno": 436
  },
  "type": "function"
 },
 "sklearn.cluster.birch.Birch.partial_fit": {
  "data": {
   "lineno": 518
  },
  "type": "function"
 },
 "sklearn.cluster.birch.Birch.predict": {
  "data": {
   "lineno": 555,
   "symbols_in_volume": [
    "check_array",
    "numpy.argmin",
    "safe_sparse_dot"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.birch.Birch.transform": {
  "data": {
   "lineno": 578,
   "symbols_in_volume": [
    "check_is_fitted",
    "euclidean_distances"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.birch._CFNode": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "sklearn.cluster.birch._CFNode.__init__": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.birch._CFNode.append_subcluster": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.birch._CFNode.insert_cf_subcluster": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "len",
    "numpy.argmin",
    "numpy.dot",
    "sklearn.cluster.birch._split_node"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.birch._CFNode.update_split_subclusters": {
  "data": {
   "lineno": 164
  },
  "type": "function"
 },
 "sklearn.cluster.birch._CFSubcluster": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "sklearn.cluster.birch._CFSubcluster.__init__": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "numpy.dot"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.birch._CFSubcluster.merge_subcluster": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "numpy.dot"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.birch._CFSubcluster.radius": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": [
    "math.sqrt",
    "numpy.dot",
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.birch._CFSubcluster.update": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "numpy.dot"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.birch._iterate_sparse_X": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "numpy.zeros",
    "xrange"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.birch._split_node": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "enumerate",
    "euclidean_distances",
    "numpy.unravel_index",
    "sklearn.cluster.birch._CFNode",
    "sklearn.cluster.birch._CFSubcluster"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.birch.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sklearn.cluster.birch.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.cluster.birch.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.cluster.birch.sqrt": {
  "data": {
   "shadows": "math.sqrt"
  },
  "type": "import"
 },
 "sklearn.cluster.birch.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.cluster.dbscan_": {
  "data": {},
  "type": "module"
 },
 "sklearn.cluster.dbscan_.DBSCAN": {
  "data": {
   "lineno": 177
  },
  "type": "class"
 },
 "sklearn.cluster.dbscan_.DBSCAN.__init__": {
  "data": {
   "lineno": 287
  },
  "type": "function"
 },
 "sklearn.cluster.dbscan_.DBSCAN.fit": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": [
    "check_array",
    "len",
    "numpy.empty",
    "sklearn.cluster.dbscan_.dbscan"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.dbscan_.DBSCAN.fit_predict": {
  "data": {
   "lineno": 329
  },
  "type": "function"
 },
 "sklearn.cluster.dbscan_.dbscan": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "NearestNeighbors",
    "ValueError",
    "check_array",
    "check_consistent_length",
    "dbscan_inner",
    "len",
    "numpy.arange",
    "numpy.array",
    "numpy.asarray",
    "numpy.concatenate",
    "numpy.cumsum",
    "numpy.empty",
    "numpy.full",
    "numpy.insert",
    "numpy.intp",
    "numpy.split",
    "numpy.sum",
    "numpy.uint8",
    "numpy.where",
    "object",
    "scipy.sparse.issparse"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.dbscan_.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.cluster.dbscan_.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.cluster.hierarchical": {
  "data": {
   "symbols_in_volume": [
    "dict",
    "sklearn.cluster.hierarchical._average_linkage",
    "sklearn.cluster.hierarchical._complete_linkage",
    "sklearn.cluster.hierarchical._single_linkage",
    "sklearn.cluster.hierarchical.ward_tree"
   ]
  },
  "type": "module"
 },
 "sklearn.cluster.hierarchical.AgglomerativeClustering": {
  "data": {
   "lineno": 656
  },
  "type": "class"
 },
 "sklearn.cluster.hierarchical.AgglomerativeClustering.__init__": {
  "data": {
   "lineno": 752,
   "symbols_in_volume": [
    "affinity"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.hierarchical.AgglomerativeClustering.fit": {
  "data": {
   "lineno": 764,
   "symbols_in_volume": [
    "DeprecationWarning",
    "ValueError",
    "callable",
    "check_array",
    "check_memory",
    "isinstance",
    "len",
    "max",
    "numpy.copy",
    "numpy.searchsorted",
    "numpy.unique",
    "sklearn.cluster.hierarchical._TREE_BUILDERS",
    "sklearn.cluster.hierarchical._hc_cut",
    "sklearn.cluster.hierarchical.warnings",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.hierarchical.FeatureAgglomeration": {
  "data": {
   "lineno": 844,
   "symbols_in_volume": [
    "sklearn.cluster.hierarchical.AgglomerativeClustering"
   ]
  },
  "type": "class"
 },
 "sklearn.cluster.hierarchical.FeatureAgglomeration.__init__": {
  "data": {
   "lineno": 938,
   "symbols_in_volume": [
    "affinity",
    "numpy.mean",
    "sklearn.cluster.hierarchical.FeatureAgglomeration",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.hierarchical.FeatureAgglomeration.fit": {
  "data": {
   "lineno": 948,
   "symbols_in_volume": [
    "check_array",
    "sklearn.cluster.hierarchical.AgglomerativeClustering"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.hierarchical.FeatureAgglomeration.fit_predict": {
  "data": {
   "lineno": 966,
   "symbols_in_volume": [
    "AttributeError",
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.hierarchical._TREE_BUILDERS": {
  "data": {
   "lineno": 597
  },
  "type": "constant"
 },
 "sklearn.cluster.hierarchical._average_linkage": {
  "data": {
   "lineno": 587,
   "symbols_in_volume": [
    "sklearn.cluster.hierarchical.linkage_tree"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.hierarchical._complete_linkage": {
  "data": {
   "lineno": 582,
   "symbols_in_volume": [
    "sklearn.cluster.hierarchical.linkage_tree"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.hierarchical._fix_connectivity": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "ValueError",
    "numpy.min",
    "numpy.where",
    "pairwise_distances",
    "scipy.sparse.csgraph.connected_components",
    "scipy.sparse.isspmatrix",
    "scipy.sparse.isspmatrix_lil",
    "scipy.sparse.lil_matrix",
    "sklearn.cluster.hierarchical.warnings",
    "xrange"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.hierarchical._hc_cut": {
  "data": {
   "lineno": 607,
   "symbols_in_volume": [
    "ValueError",
    "enumerate",
    "heapq.heappush",
    "heapq.heappushpop",
    "max",
    "numpy.intp",
    "numpy.zeros",
    "xrange"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.hierarchical._single_linkage": {
  "data": {
   "lineno": 592,
   "symbols_in_volume": [
    "sklearn.cluster.hierarchical.linkage_tree"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.hierarchical._single_linkage_tree": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "enumerate",
    "numpy.arange",
    "numpy.argsort",
    "numpy.finfo",
    "numpy.int",
    "numpy.intp",
    "numpy.vstack",
    "scipy.sparse.csgraph.minimum_spanning_tree"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.hierarchical.connected_components": {
  "data": {
   "shadows": "scipy.sparse.csgraph.connected_components"
  },
  "type": "import"
 },
 "sklearn.cluster.hierarchical.heapify": {
  "data": {
   "shadows": "heapq.heapify"
  },
  "type": "import"
 },
 "sklearn.cluster.hierarchical.heappop": {
  "data": {
   "shadows": "heapq.heappop"
  },
  "type": "import"
 },
 "sklearn.cluster.hierarchical.heappush": {
  "data": {
   "shadows": "heapq.heappush"
  },
  "type": "import"
 },
 "sklearn.cluster.hierarchical.heappushpop": {
  "data": {
   "shadows": "heapq.heappushpop"
  },
  "type": "import"
 },
 "sklearn.cluster.hierarchical.hierarchy": {
  "data": {
   "shadows": "scipy.cluster.hierarchy"
  },
  "type": "import"
 },
 "sklearn.cluster.hierarchical.linkage_tree": {
  "data": {
   "lineno": 342,
   "symbols_in_volume": [
    "DeprecationWarning",
    "IntFloatDict",
    "KeyError",
    "ValueError",
    "affinity",
    "callable",
    "enumerate",
    "heapq.heapify",
    "heapq.heappop",
    "heapq.heappush",
    "join_func",
    "list",
    "numpy.arange",
    "numpy.array",
    "numpy.asarray",
    "numpy.empty",
    "numpy.float64",
    "numpy.int",
    "numpy.intp",
    "numpy.ones",
    "numpy.reshape",
    "numpy.triu_indices",
    "object",
    "paired_distances",
    "scipy.cluster.hierarchy.linkage",
    "sklearn.cluster.hierarchical._fix_connectivity",
    "sklearn.cluster.hierarchical._single_linkage_tree",
    "sklearn.cluster.hierarchical.warnings",
    "xrange",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.hierarchical.minimum_spanning_tree": {
  "data": {
   "shadows": "scipy.sparse.csgraph.minimum_spanning_tree"
  },
  "type": "import"
 },
 "sklearn.cluster.hierarchical.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.cluster.hierarchical.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.cluster.hierarchical.ward_tree": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "enumerate",
    "heapq.heapify",
    "heapq.heappop",
    "heapq.heappush",
    "len",
    "list",
    "numpy.arange",
    "numpy.array",
    "numpy.asarray",
    "numpy.empty",
    "numpy.float64",
    "numpy.int8",
    "numpy.intp",
    "numpy.ones",
    "numpy.reshape",
    "numpy.sqrt",
    "numpy.zeros",
    "range",
    "scipy.cluster.hierarchy.ward",
    "sklearn.cluster.hierarchical._fix_connectivity",
    "sklearn.cluster.hierarchical.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.hierarchical.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.cluster.mean_shift_": {
  "data": {},
  "type": "module"
 },
 "sklearn.cluster.mean_shift_.MeanShift": {
  "data": {
   "lineno": 294
  },
  "type": "class"
 },
 "sklearn.cluster.mean_shift_.MeanShift.__init__": {
  "data": {
   "lineno": 396
  },
  "type": "function"
 },
 "sklearn.cluster.mean_shift_.MeanShift.fit": {
  "data": {
   "lineno": 405,
   "symbols_in_volume": [
    "check_array",
    "sklearn.cluster.mean_shift_.mean_shift"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.mean_shift_.MeanShift.predict": {
  "data": {
   "lineno": 424,
   "symbols_in_volume": [
    "check_is_fitted",
    "pairwise_distances_argmin"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.mean_shift_._mean_shift_single_seed": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "len",
    "numpy.linalg.norm",
    "numpy.mean",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.mean_shift_.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "sklearn.cluster.mean_shift_.estimate_bandwidth": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "NearestNeighbors",
    "check_array",
    "check_random_state",
    "gen_batches",
    "int",
    "len",
    "numpy.max"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.mean_shift_.get_bin_seeds": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "collections.defaultdict",
    "int",
    "len",
    "numpy.array",
    "numpy.float32",
    "numpy.round",
    "sklearn.cluster.mean_shift_.warnings",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.mean_shift_.mean_shift": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "NearestNeighbors",
    "Parallel",
    "ValueError",
    "delayed",
    "enumerate",
    "len",
    "numpy.array",
    "numpy.bool",
    "numpy.int",
    "numpy.ones",
    "numpy.zeros",
    "range",
    "sklearn.cluster.mean_shift_._mean_shift_single_seed",
    "sklearn.cluster.mean_shift_.estimate_bandwidth",
    "sklearn.cluster.mean_shift_.get_bin_seeds",
    "sorted"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.mean_shift_.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.cluster.mean_shift_.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.cluster.setup": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.distutils.core.setup",
    "sklearn.cluster.setup.configuration"
   ]
  },
  "type": "module"
 },
 "sklearn.cluster.setup.Configuration": {
  "data": {
   "shadows": "numpy.distutils.misc_util.Configuration"
  },
  "type": "import"
 },
 "sklearn.cluster.setup.configuration": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "numpy.distutils.misc_util.Configuration",
    "os.path.join",
    "sklearn._build_utils.get_blas_info",
    "sklearn.cluster.setup.numpy",
    "sklearn.cluster.setup.os"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.setup.get_blas_info": {
  "data": {
   "shadows": "sklearn._build_utils.get_blas_info"
  },
  "type": "import"
 },
 "sklearn.cluster.setup.join": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "sklearn.cluster.setup.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.cluster.setup.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "sklearn.cluster.setup.setup": {
  "data": {
   "shadows": "numpy.distutils.core.setup"
  },
  "type": "import"
 },
 "sklearn.cluster.spectral": {
  "data": {},
  "type": "module"
 },
 "sklearn.cluster.spectral.LinAlgError": {
  "data": {
   "shadows": "scipy.linalg.LinAlgError"
  },
  "type": "import"
 },
 "sklearn.cluster.spectral.SpectralClustering": {
  "data": {
   "lineno": 275
  },
  "type": "class"
 },
 "sklearn.cluster.spectral.SpectralClustering.__init__": {
  "data": {
   "lineno": 428
  },
  "type": "function"
 },
 "sklearn.cluster.spectral.SpectralClustering._pairwise": {
  "data": {
   "lineno": 496,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.spectral.SpectralClustering.fit": {
  "data": {
   "lineno": 446,
   "symbols_in_volume": [
    "callable",
    "check_array",
    "check_random_state",
    "kneighbors_graph",
    "numpy.float64",
    "pairwise_kernels",
    "sklearn.cluster.spectral.spectral_clustering",
    "sklearn.cluster.spectral.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.spectral.csc_matrix": {
  "data": {
   "shadows": "scipy.sparse.csc_matrix"
  },
  "type": "import"
 },
 "sklearn.cluster.spectral.discretize": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "abs",
    "as_float_array",
    "check_random_state",
    "float",
    "len",
    "numpy.abs",
    "numpy.arange",
    "numpy.dot",
    "numpy.finfo",
    "numpy.linalg.norm",
    "numpy.linalg.svd",
    "numpy.newaxis",
    "numpy.ones",
    "numpy.sign",
    "numpy.sqrt",
    "numpy.zeros",
    "print",
    "range",
    "scipy.linalg.LinAlgError",
    "scipy.sparse.csc_matrix"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.spectral.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.cluster.spectral.spectral_clustering": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "ValueError",
    "check_random_state",
    "k_means",
    "sklearn.cluster.spectral.discretize",
    "spectral_embedding"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.spectral.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.cluster.tests": {
  "data": {},
  "type": "module"
 },
 "sklearn.cluster.tests.common": {
  "data": {},
  "type": "module"
 },
 "sklearn.cluster.tests.common.generate_clustered_data": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.empty",
    "numpy.r_",
    "numpy.random.RandomState",
    "range"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.common.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_affinity_propagation": {
  "data": {
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.cluster.tests.test_affinity_propagation.centers",
    "sklearn.datasets.samples_generator.make_blobs"
   ]
  },
  "type": "module"
 },
 "sklearn.cluster.tests.test_affinity_propagation.AffinityPropagation": {
  "data": {
   "shadows": "sklearn.cluster.affinity_propagation_.AffinityPropagation"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_affinity_propagation.ConvergenceWarning": {
  "data": {
   "shadows": "sklearn.exceptions.ConvergenceWarning"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_affinity_propagation._equal_similarities_and_preferences": {
  "data": {
   "shadows": "sklearn.cluster.affinity_propagation_._equal_similarities_and_preferences"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_affinity_propagation.affinity_propagation": {
  "data": {
   "shadows": "sklearn.cluster.affinity_propagation_.affinity_propagation"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_affinity_propagation.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_affinity_propagation.assert_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_affinity_propagation.assert_false": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_false"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_affinity_propagation.assert_no_warnings": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_no_warnings"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_affinity_propagation.assert_raises": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_affinity_propagation.assert_true": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_true"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_affinity_propagation.assert_warns": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_warns"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_affinity_propagation.assert_warns_message": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_warns_message"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_affinity_propagation.centers": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "sklearn.cluster.tests.test_affinity_propagation.euclidean_distances": {
  "data": {
   "shadows": "sklearn.metrics.euclidean_distances"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_affinity_propagation.make_blobs": {
  "data": {
   "shadows": "sklearn.datasets.samples_generator.make_blobs"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_affinity_propagation.n_clusters": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "sklearn.cluster.tests.test_affinity_propagation.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_affinity_propagation.test_affinity_propagation": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.median",
    "numpy.unique",
    "sklearn.cluster.affinity_propagation_.AffinityPropagation",
    "sklearn.cluster.affinity_propagation_.affinity_propagation",
    "sklearn.cluster.tests.test_affinity_propagation.n_clusters",
    "sklearn.metrics.euclidean_distances",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_affinity_propagation.test_affinity_propagation_equal_mutual_similarities": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "UserWarning",
    "numpy.array",
    "sklearn.cluster.affinity_propagation_.affinity_propagation",
    "sklearn.metrics.euclidean_distances",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_no_warnings",
    "sklearn.utils.testing.assert_warns_message"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_affinity_propagation.test_affinity_propagation_fit_non_convergence": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.empty",
    "sklearn.cluster.affinity_propagation_.AffinityPropagation",
    "sklearn.exceptions.ConvergenceWarning",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_warns"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_affinity_propagation.test_affinity_propagation_predict": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "sklearn.cluster.affinity_propagation_.AffinityPropagation",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_affinity_propagation.test_affinity_propagation_predict_error": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "ValueError",
    "numpy.dot",
    "sklearn.cluster.affinity_propagation_.AffinityPropagation",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_affinity_propagation.test_affinity_propagation_predict_non_convergence": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.cluster.affinity_propagation_.AffinityPropagation",
    "sklearn.exceptions.ConvergenceWarning",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_warns"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_affinity_propagation.test_equal_similarities_and_preferences": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.cluster.affinity_propagation_._equal_similarities_and_preferences",
    "sklearn.metrics.euclidean_distances",
    "sklearn.utils.testing.assert_false",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_bicluster": {
  "data": {},
  "type": "module"
 },
 "sklearn.cluster.tests.test_bicluster.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_bicluster.BiclusterMixin": {
  "data": {
   "shadows": "sklearn.base.BiclusterMixin"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_bicluster.MockBiclustering": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator",
    "sklearn.base.BiclusterMixin"
   ]
  },
  "type": "class"
 },
 "sklearn.cluster.tests.test_bicluster.MockBiclustering.__init__": {
  "data": {
   "lineno": 31
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_bicluster.MockBiclustering.get_indices": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_bicluster.ParameterGrid": {
  "data": {
   "shadows": "sklearn.model_selection.ParameterGrid"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_bicluster.SkipTest": {
  "data": {
   "shadows": "sklearn.utils.testing.SkipTest"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_bicluster.SpectralBiclustering": {
  "data": {
   "shadows": "sklearn.cluster.bicluster.SpectralBiclustering"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_bicluster.SpectralCoclustering": {
  "data": {
   "shadows": "sklearn.cluster.bicluster.SpectralCoclustering"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_bicluster._bistochastic_normalize": {
  "data": {
   "shadows": "sklearn.cluster.bicluster._bistochastic_normalize"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_bicluster._do_bistochastic_test": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "sklearn.cluster.tests.test_bicluster._do_scale_test",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_bicluster._do_scale_test": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.tile",
    "scipy.sparse.issparse",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_bicluster._log_normalize": {
  "data": {
   "shadows": "sklearn.cluster.bicluster._log_normalize"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_bicluster._scale_normalize": {
  "data": {
   "shadows": "sklearn.cluster.bicluster._scale_normalize"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_bicluster._test_shape_indices": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "len",
    "range",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_bicluster.assert_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_bicluster.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_bicluster.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_bicluster.assert_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_bicluster.assert_raises": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_bicluster.assert_true": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_true"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_bicluster.consensus_score": {
  "data": {
   "shadows": "sklearn.metrics.consensus_score"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_bicluster.csr_matrix": {
  "data": {
   "shadows": "scipy.sparse.csr_matrix"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_bicluster.issparse": {
  "data": {
   "shadows": "scipy.sparse.issparse"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_bicluster.make_biclusters": {
  "data": {
   "shadows": "sklearn.datasets.make_biclusters"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_bicluster.make_checkerboard": {
  "data": {
   "shadows": "sklearn.datasets.make_checkerboard"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_bicluster.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_bicluster.test_bistochastic_normalize": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.issparse",
    "sklearn.cluster.bicluster._bistochastic_normalize",
    "sklearn.cluster.tests.test_bicluster._do_bistochastic_test"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_bicluster.test_errors": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "ValueError",
    "numpy.arange",
    "sklearn.cluster.bicluster.SpectralBiclustering",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_bicluster.test_fit_best_piecewise": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.cluster.bicluster.SpectralBiclustering",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_bicluster.test_get_submatrix": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.arange",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.issparse",
    "sklearn.cluster.tests.test_bicluster.MockBiclustering",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_bicluster.test_log_normalize": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.cluster.bicluster._log_normalize",
    "sklearn.cluster.tests.test_bicluster._do_bistochastic_test"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_bicluster.test_perfect_checkerboard": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "sklearn.cluster.bicluster.SpectralBiclustering",
    "sklearn.datasets.make_checkerboard",
    "sklearn.metrics.consensus_score",
    "sklearn.utils.testing.SkipTest",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_bicluster.test_project_and_cluster": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "numpy.array",
    "scipy.sparse.csr_matrix",
    "sklearn.cluster.bicluster.SpectralBiclustering",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_bicluster.test_scale_normalize": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.issparse",
    "sklearn.cluster.bicluster._scale_normalize",
    "sklearn.cluster.tests.test_bicluster._do_scale_test"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_bicluster.test_spectral_biclustering": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "numpy.repeat",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.issparse",
    "sklearn.cluster.bicluster.SpectralBiclustering",
    "sklearn.cluster.tests.test_bicluster._test_shape_indices",
    "sklearn.datasets.make_checkerboard",
    "sklearn.metrics.consensus_score",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_bicluster.test_spectral_coclustering": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "numpy.ones",
    "numpy.where",
    "scipy.sparse.csr_matrix",
    "sklearn.cluster.bicluster.SpectralCoclustering",
    "sklearn.cluster.tests.test_bicluster._test_shape_indices",
    "sklearn.datasets.make_biclusters",
    "sklearn.metrics.consensus_score",
    "sklearn.model_selection.ParameterGrid",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_birch": {
  "data": {},
  "type": "module"
 },
 "sklearn.cluster.tests.test_birch.AgglomerativeClustering": {
  "data": {
   "shadows": "sklearn.cluster.hierarchical.AgglomerativeClustering"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_birch.Birch": {
  "data": {
   "shadows": "sklearn.cluster.birch.Birch"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_birch.ConvergenceWarning": {
  "data": {
   "shadows": "sklearn.exceptions.ConvergenceWarning"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_birch.ElasticNet": {
  "data": {
   "shadows": "sklearn.linear_model.ElasticNet"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_birch.assert_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_birch.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_birch.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_birch.assert_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_birch.assert_greater": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_greater"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_birch.assert_greater_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_greater_equal"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_birch.assert_raises": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_birch.assert_warns": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_warns"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_birch.check_branching_factor": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "len",
    "sklearn.utils.testing.assert_greater_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_birch.check_threshold": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "sklearn.utils.testing.assert_greater_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_birch.generate_clustered_data": {
  "data": {
   "shadows": "sklearn.cluster.tests.common.generate_clustered_data"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_birch.make_blobs": {
  "data": {
   "shadows": "sklearn.datasets.make_blobs"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_birch.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_birch.pairwise_distances_argmin": {
  "data": {
   "shadows": "sklearn.metrics.pairwise_distances_argmin"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_birch.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_birch.test_birch_predict": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.random.RandomState",
    "sklearn.cluster.birch.Birch",
    "sklearn.cluster.tests.common.generate_clustered_data",
    "sklearn.metrics.pairwise_distances_argmin",
    "sklearn.metrics.v_measure_score",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_birch.test_branching_factor": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.cluster.birch.Birch",
    "sklearn.cluster.tests.test_birch.check_branching_factor",
    "sklearn.datasets.make_blobs",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_birch.test_n_clusters": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.unique",
    "sklearn.cluster.birch.Birch",
    "sklearn.cluster.hierarchical.AgglomerativeClustering",
    "sklearn.datasets.make_blobs",
    "sklearn.exceptions.ConvergenceWarning",
    "sklearn.linear_model.ElasticNet",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_greater",
    "sklearn.utils.testing.assert_raises",
    "sklearn.utils.testing.assert_warns"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_birch.test_n_samples_leaves_roots": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "sklearn.cluster.birch.Birch",
    "sklearn.datasets.make_blobs",
    "sklearn.utils.testing.assert_equal",
    "sum"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_birch.test_partial_fit": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "sklearn.cluster.birch.Birch",
    "sklearn.datasets.make_blobs",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_birch.test_sparse_X": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "scipy.sparse.csr_matrix",
    "sklearn.cluster.birch.Birch",
    "sklearn.datasets.make_blobs",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_birch.test_threshold": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "sklearn.cluster.birch.Birch",
    "sklearn.cluster.tests.test_birch.check_threshold",
    "sklearn.datasets.make_blobs"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_birch.v_measure_score": {
  "data": {
   "shadows": "sklearn.metrics.v_measure_score"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_dbscan": {
  "data": {
   "symbols_in_volume": [
    "sklearn.cluster.tests.common.generate_clustered_data",
    "sklearn.cluster.tests.test_dbscan.n_clusters"
   ]
  },
  "type": "module"
 },
 "sklearn.cluster.tests.test_dbscan.DBSCAN": {
  "data": {
   "shadows": "sklearn.cluster.dbscan_.DBSCAN"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_dbscan.NearestNeighbors": {
  "data": {
   "shadows": "sklearn.neighbors.NearestNeighbors"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_dbscan.X": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "sklearn.cluster.tests.test_dbscan.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_dbscan.assert_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_dbscan.assert_in": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_in"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_dbscan.assert_not_in": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_not_in"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_dbscan.assert_raises": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_dbscan.dbscan": {
  "data": {
   "shadows": "sklearn.cluster.dbscan_.dbscan"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_dbscan.distance": {
  "data": {
   "shadows": "scipy.spatial.distance"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_dbscan.generate_clustered_data": {
  "data": {
   "shadows": "sklearn.cluster.tests.common.generate_clustered_data"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_dbscan.n_clusters": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "sklearn.cluster.tests.test_dbscan.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_dbscan.pairwise_distances": {
  "data": {
   "shadows": "sklearn.metrics.pairwise.pairwise_distances"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_dbscan.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_dbscan.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_dbscan.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_dbscan.test_boundaries": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "sklearn.cluster.dbscan_.dbscan",
    "sklearn.utils.testing.assert_in",
    "sklearn.utils.testing.assert_not_in"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_dbscan.test_dbscan_badargs": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.cluster.dbscan_.dbscan",
    "sklearn.cluster.tests.test_dbscan.X",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_dbscan.test_dbscan_balltree": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "int",
    "len",
    "set",
    "sklearn.cluster.dbscan_.DBSCAN",
    "sklearn.cluster.dbscan_.dbscan",
    "sklearn.cluster.tests.test_dbscan.X",
    "sklearn.cluster.tests.test_dbscan.n_clusters",
    "sklearn.metrics.pairwise.pairwise_distances",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_dbscan.test_dbscan_callable": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "int",
    "len",
    "scipy.spatial.distance.euclidean",
    "set",
    "sklearn.cluster.dbscan_.DBSCAN",
    "sklearn.cluster.dbscan_.dbscan",
    "sklearn.cluster.tests.test_dbscan.X",
    "sklearn.cluster.tests.test_dbscan.n_clusters",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_dbscan.test_dbscan_core_samples_toy": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "numpy.full",
    "sklearn.cluster.dbscan_.dbscan",
    "sklearn.cluster.tests.test_dbscan.X",
    "sklearn.cluster.tests.test_dbscan.pytest",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_dbscan.test_dbscan_feature": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "int",
    "len",
    "set",
    "sklearn.cluster.dbscan_.DBSCAN",
    "sklearn.cluster.dbscan_.dbscan",
    "sklearn.cluster.tests.test_dbscan.X",
    "sklearn.cluster.tests.test_dbscan.n_clusters",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_dbscan.test_dbscan_metric_params": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "sklearn.cluster.dbscan_.DBSCAN",
    "sklearn.cluster.tests.test_dbscan.X",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_dbscan.test_dbscan_no_core_samples": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "numpy.empty",
    "numpy.random.RandomState",
    "scipy.sparse.csr_matrix",
    "sklearn.cluster.dbscan_.DBSCAN",
    "sklearn.cluster.tests.test_dbscan.X",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_dbscan.test_dbscan_precomputed_metric_with_degenerate_input_arrays": {
  "data": {
   "lineno": 345,
   "symbols_in_volume": [
    "len",
    "numpy.eye",
    "numpy.zeros",
    "set",
    "sklearn.cluster.dbscan_.DBSCAN",
    "sklearn.cluster.tests.test_dbscan.X",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_dbscan.test_dbscan_precomputed_metric_with_initial_rows_zero": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "numpy.array",
    "scipy.sparse.csr_matrix",
    "sklearn.cluster.dbscan_.DBSCAN",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_dbscan.test_dbscan_similarity": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "int",
    "len",
    "numpy.max",
    "scipy.spatial.distance.pdist",
    "scipy.spatial.distance.squareform",
    "set",
    "sklearn.cluster.dbscan_.DBSCAN",
    "sklearn.cluster.dbscan_.dbscan",
    "sklearn.cluster.tests.test_dbscan.X",
    "sklearn.cluster.tests.test_dbscan.n_clusters",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_dbscan.test_dbscan_sparse": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "scipy.sparse.lil_matrix",
    "sklearn.cluster.dbscan_.dbscan",
    "sklearn.cluster.tests.test_dbscan.X",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_dbscan.test_dbscan_sparse_precomputed": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "sklearn.cluster.dbscan_.dbscan",
    "sklearn.cluster.tests.test_dbscan.X",
    "sklearn.metrics.pairwise.pairwise_distances",
    "sklearn.neighbors.NearestNeighbors",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_dbscan.test_input_validation": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "sklearn.cluster.dbscan_.DBSCAN",
    "sklearn.cluster.tests.test_dbscan.X"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_dbscan.test_pickle": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "sklearn.cluster.dbscan_.DBSCAN",
    "sklearn.cluster.tests.test_dbscan.pickle",
    "sklearn.utils.testing.assert_equal",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_dbscan.test_weighted_dbscan": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "len",
    "numpy.random.RandomState",
    "numpy.repeat",
    "numpy.zeros",
    "sklearn.cluster.dbscan_.DBSCAN",
    "sklearn.cluster.dbscan_.dbscan",
    "sklearn.cluster.tests.test_dbscan.X",
    "sklearn.metrics.pairwise.pairwise_distances",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_feature_agglomeration": {
  "data": {},
  "type": "module"
 },
 "sklearn.cluster.tests.test_feature_agglomeration.FeatureAgglomeration": {
  "data": {
   "shadows": "sklearn.cluster.FeatureAgglomeration"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_feature_agglomeration.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_feature_agglomeration.assert_no_warnings": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_no_warnings"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_feature_agglomeration.assert_true": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_true"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_feature_agglomeration.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_feature_agglomeration.test_feature_agglomeration": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.mean",
    "numpy.median",
    "numpy.size",
    "numpy.unique",
    "sklearn.cluster.FeatureAgglomeration",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_no_warnings",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_hierarchical": {
  "data": {},
  "type": "module"
 },
 "sklearn.cluster.tests.test_hierarchical.AgglomerativeClustering": {
  "data": {
   "shadows": "sklearn.cluster.AgglomerativeClustering"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_hierarchical.FeatureAgglomeration": {
  "data": {
   "shadows": "sklearn.cluster.FeatureAgglomeration"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_hierarchical.IntFloatDict": {
  "data": {
   "shadows": "sklearn.utils.fast_dict.IntFloatDict"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_hierarchical.PAIRED_DISTANCES": {
  "data": {
   "shadows": "sklearn.metrics.pairwise.PAIRED_DISTANCES"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_hierarchical._TREE_BUILDERS": {
  "data": {
   "shadows": "sklearn.cluster.hierarchical._TREE_BUILDERS"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_hierarchical._fix_connectivity": {
  "data": {
   "shadows": "sklearn.cluster.hierarchical._fix_connectivity"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_hierarchical._hc_cut": {
  "data": {
   "shadows": "sklearn.cluster.hierarchical._hc_cut"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_hierarchical.assert_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_hierarchical.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_hierarchical.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_hierarchical.assert_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_hierarchical.assert_raise_message": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raise_message"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_hierarchical.assert_raises": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_hierarchical.assert_true": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_true"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_hierarchical.assert_warns": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_warns"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_hierarchical.assess_same_labelling": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "numpy.dot",
    "numpy.zeros",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_hierarchical.average_merge": {
  "data": {
   "shadows": "sklearn.cluster._hierarchical.average_merge"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_hierarchical.cosine_distances": {
  "data": {
   "shadows": "sklearn.metrics.pairwise.cosine_distances"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_hierarchical.grid_to_graph": {
  "data": {
   "shadows": "sklearn.feature_extraction.image.grid_to_graph"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_hierarchical.hierarchy": {
  "data": {
   "shadows": "scipy.cluster.hierarchy"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_hierarchical.ignore_warnings": {
  "data": {
   "shadows": "sklearn.utils.testing.ignore_warnings"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_hierarchical.kneighbors_graph": {
  "data": {
   "shadows": "sklearn.neighbors.graph.kneighbors_graph"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_hierarchical.linkage_tree": {
  "data": {
   "shadows": "sklearn.cluster.hierarchical.linkage_tree"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_hierarchical.make_circles": {
  "data": {
   "shadows": "sklearn.datasets.make_circles"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_hierarchical.make_moons": {
  "data": {
   "shadows": "sklearn.datasets.make_moons"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_hierarchical.manhattan_distances": {
  "data": {
   "shadows": "sklearn.metrics.pairwise.manhattan_distances"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_hierarchical.max_merge": {
  "data": {
   "shadows": "sklearn.cluster._hierarchical.max_merge"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_hierarchical.mkdtemp": {
  "data": {
   "shadows": "tempfile.mkdtemp"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_hierarchical.normalized_mutual_info_score": {
  "data": {
   "shadows": "sklearn.metrics.cluster.normalized_mutual_info_score"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_hierarchical.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_hierarchical.pairwise_distances": {
  "data": {
   "shadows": "sklearn.metrics.pairwise.pairwise_distances"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_hierarchical.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_hierarchical.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_hierarchical.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_hierarchical.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_hierarchical.test_affinity_passed_to_fix_connectivity": {
  "data": {
   "lineno": 592,
   "symbols_in_volume": [
    "FakeAffinity",
    "numpy.array",
    "numpy.ndarray",
    "numpy.random.RandomState",
    "sklearn.cluster.hierarchical.linkage_tree",
    "sklearn.feature_extraction.image.grid_to_graph",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_hierarchical.test_affinity_passed_to_fix_connectivity.FakeAffinity": {
  "data": {
   "lineno": 604
  },
  "type": "class"
 },
 "sklearn.cluster.tests.test_hierarchical.test_affinity_passed_to_fix_connectivity.FakeAffinity.__init__": {
  "data": {
   "lineno": 605
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_hierarchical.test_affinity_passed_to_fix_connectivity.FakeAffinity.increment": {
  "data": {
   "lineno": 608
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_hierarchical.test_agg_n_clusters": {
  "data": {
   "lineno": 580,
   "symbols_in_volume": [
    "ValueError",
    "numpy.random.RandomState",
    "sklearn.cluster.AgglomerativeClustering",
    "sklearn.utils.testing.assert_raise_message",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_hierarchical.test_agglomerative_clustering": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "ValueError",
    "numpy.bool",
    "numpy.ones",
    "numpy.random.RandomState",
    "numpy.size",
    "numpy.unique",
    "scipy.sparse.lil_matrix",
    "sklearn.cluster.AgglomerativeClustering",
    "sklearn.cluster.tests.test_hierarchical.pytest",
    "sklearn.cluster.tests.test_hierarchical.shutil",
    "sklearn.feature_extraction.image.grid_to_graph",
    "sklearn.metrics.cluster.normalized_mutual_info_score",
    "sklearn.metrics.pairwise.PAIRED_DISTANCES.keys",
    "sklearn.metrics.pairwise.pairwise_distances",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_raises",
    "sklearn.utils.testing.assert_true",
    "tempfile.mkdtemp"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_hierarchical.test_agglomerative_clustering_wrong_arg_memory": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "ValueError",
    "numpy.random.RandomState",
    "sklearn.cluster.AgglomerativeClustering",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_hierarchical.test_compute_full_tree": {
  "data": {
   "lineno": 541,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.cluster.AgglomerativeClustering",
    "sklearn.neighbors.graph.kneighbors_graph",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_hierarchical.test_connectivity_callable": {
  "data": {
   "lineno": 516,
   "symbols_in_volume": [
    "functools.partial",
    "numpy.random.RandomState",
    "sklearn.cluster.AgglomerativeClustering",
    "sklearn.neighbors.graph.kneighbors_graph",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_hierarchical.test_connectivity_fixing_non_lil": {
  "data": {
   "lineno": 487,
   "symbols_in_volume": [
    "UserWarning",
    "numpy.array",
    "sklearn.cluster.AgglomerativeClustering",
    "sklearn.feature_extraction.image.grid_to_graph",
    "sklearn.utils.testing.assert_warns"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_hierarchical.test_connectivity_ignores_diagonal": {
  "data": {
   "lineno": 529,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.cluster.AgglomerativeClustering",
    "sklearn.neighbors.graph.kneighbors_graph",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_hierarchical.test_connectivity_propagation": {
  "data": {
   "lineno": 344,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.cluster.AgglomerativeClustering",
    "sklearn.neighbors.graph.kneighbors_graph"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_hierarchical.test_deprecation_of_n_components_in_linkage_tree": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "DeprecationWarning",
    "numpy.random.RandomState",
    "sklearn.cluster.hierarchical.linkage_tree",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_warns"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_hierarchical.test_height_linkage_tree": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "len",
    "linkage_func",
    "numpy.bool",
    "numpy.ones",
    "numpy.random.RandomState",
    "sklearn.cluster.hierarchical._TREE_BUILDERS.values",
    "sklearn.feature_extraction.image.grid_to_graph",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_hierarchical.test_identical_points": {
  "data": {
   "lineno": 319,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.cluster.AgglomerativeClustering",
    "sklearn.cluster.hierarchical._fix_connectivity",
    "sklearn.cluster.tests.test_hierarchical.pytest",
    "sklearn.metrics.cluster.normalized_mutual_info_score",
    "sklearn.neighbors.graph.kneighbors_graph",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_hierarchical.test_int_float_dict": {
  "data": {
   "lineno": 499,
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "numpy.full",
    "numpy.intp",
    "numpy.ones",
    "numpy.random.RandomState",
    "numpy.unique",
    "sklearn.cluster._hierarchical.average_merge",
    "sklearn.cluster._hierarchical.max_merge",
    "sklearn.utils.fast_dict.IntFloatDict",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_hierarchical.test_linkage_misc": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "ValueError",
    "numpy.ones",
    "numpy.random.RandomState",
    "sklearn.cluster.AgglomerativeClustering",
    "sklearn.cluster.FeatureAgglomeration",
    "sklearn.cluster.hierarchical.linkage_tree",
    "sklearn.metrics.pairwise.cosine_distances",
    "sklearn.metrics.pairwise.manhattan_distances",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_hierarchical.test_n_components": {
  "data": {
   "lineno": 568,
   "symbols_in_volume": [
    "linkage_func",
    "numpy.eye",
    "numpy.random.RandomState",
    "sklearn.cluster.hierarchical._TREE_BUILDERS.values",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_hierarchical.test_scikit_vs_scipy": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "ValueError",
    "numpy.arange",
    "numpy.int",
    "numpy.newaxis",
    "numpy.ones",
    "numpy.random.RandomState",
    "range",
    "scipy.cluster.hierarchy.linkage",
    "sklearn.cluster.hierarchical._TREE_BUILDERS",
    "sklearn.cluster.hierarchical._TREE_BUILDERS.keys",
    "sklearn.cluster.hierarchical._hc_cut",
    "sklearn.cluster.tests.test_hierarchical.assess_same_labelling",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_hierarchical.test_single_linkage_clustering": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "sklearn.cluster.AgglomerativeClustering",
    "sklearn.cluster.tests.test_hierarchical.pytest",
    "sklearn.datasets.make_circles",
    "sklearn.datasets.make_moons",
    "sklearn.metrics.cluster.normalized_mutual_info_score",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_hierarchical.test_structured_linkage_tree": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.bool",
    "numpy.ones",
    "numpy.random.RandomState",
    "sklearn.cluster.hierarchical._TREE_BUILDERS.values",
    "sklearn.feature_extraction.image.grid_to_graph",
    "sklearn.utils.testing.assert_raises",
    "sklearn.utils.testing.assert_true",
    "tree_builder"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_hierarchical.test_unstructured_linkage_tree": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "UserWarning",
    "len",
    "numpy.random.RandomState",
    "sklearn.cluster.hierarchical._TREE_BUILDERS.values",
    "sklearn.cluster.ward_tree",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_warns",
    "sklearn.utils.testing.ignore_warnings",
    "tree_builder"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_hierarchical.test_ward_agglomeration": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "ValueError",
    "numpy.bool",
    "numpy.ones",
    "numpy.random.RandomState",
    "numpy.size",
    "numpy.unique",
    "sklearn.cluster.FeatureAgglomeration",
    "sklearn.feature_extraction.image.grid_to_graph",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_raises",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_hierarchical.test_ward_linkage_tree_return_distance": {
  "data": {
   "lineno": 380,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "numpy.newaxis",
    "numpy.ones",
    "numpy.random.RandomState",
    "numpy.shape",
    "range",
    "sklearn.cluster.hierarchical.linkage_tree",
    "sklearn.cluster.ward_tree",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_array_equal",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_hierarchical.test_ward_tree_children_order": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.newaxis",
    "numpy.ones",
    "numpy.random.RandomState",
    "range",
    "sklearn.cluster.ward_tree",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_hierarchical.ward_tree": {
  "data": {
   "shadows": "sklearn.cluster.ward_tree"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_k_means": {
  "data": {
   "symbols_in_volume": [
    "numpy.array",
    "scipy.sparse.csr_matrix",
    "sklearn.cluster.tests.test_k_means.centers",
    "sklearn.cluster.tests.test_k_means.n_samples",
    "sklearn.datasets.samples_generator.make_blobs"
   ]
  },
  "type": "module"
 },
 "sklearn.cluster.tests.test_k_means.ConvergenceWarning": {
  "data": {
   "shadows": "sklearn.exceptions.ConvergenceWarning"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_k_means.KMeans": {
  "data": {
   "shadows": "sklearn.cluster.KMeans"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_k_means.MiniBatchKMeans": {
  "data": {
   "shadows": "sklearn.cluster.MiniBatchKMeans"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_k_means.SkipTest": {
  "data": {
   "shadows": "sklearn.utils.testing.SkipTest"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_k_means.StringIO": {
  "data": {
   "shadows": "sklearn.externals.six.moves.cStringIO"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_k_means.X_csr": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "sklearn.cluster.tests.test_k_means._check_fitted_model": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "ValueError",
    "numpy.unique",
    "sklearn.cluster.tests.test_k_means.centers",
    "sklearn.metrics.cluster.v_measure_score",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_greater",
    "sklearn.utils.testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means._check_sample_weight": {
  "data": {
   "shadows": "sklearn.cluster.k_means_._check_sample_weight"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_k_means._init_centroids": {
  "data": {
   "shadows": "sklearn.cluster.k_means_._init_centroids"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_k_means._labels_inertia": {
  "data": {
   "shadows": "sklearn.cluster.k_means_._labels_inertia"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_k_means._mini_batch_step": {
  "data": {
   "shadows": "sklearn.cluster.k_means_._mini_batch_step"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_k_means._num_samples": {
  "data": {
   "shadows": "sklearn.utils.validation._num_samples"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_k_means._sort_centers": {
  "data": {
   "lineno": 913,
   "symbols_in_volume": [
    "numpy.sort",
    "sklearn.cluster.tests.test_k_means.centers"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.assert_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_k_means.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_k_means.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_k_means.assert_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_k_means.assert_greater": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_greater"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_k_means.assert_less": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_less"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_k_means.assert_raise_message": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raise_message"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_k_means.assert_raises": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_k_means.assert_raises_regex": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises_regex"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_k_means.assert_true": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_true"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_k_means.assert_warns": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_warns"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_k_means.assert_warns_message": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_warns_message"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_k_means.centers": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "sklearn.cluster.tests.test_k_means.clone": {
  "data": {
   "shadows": "sklearn.base.clone"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_k_means.homogeneity_score": {
  "data": {
   "shadows": "sklearn.metrics.cluster.homogeneity_score"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_k_means.if_safe_multiprocessing_with_blas": {
  "data": {
   "shadows": "sklearn.utils.testing.if_safe_multiprocessing_with_blas"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_k_means.k_means": {
  "data": {
   "shadows": "sklearn.cluster.k_means"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_k_means.load_iris": {
  "data": {
   "shadows": "sklearn.datasets.load_iris"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_k_means.make_blobs": {
  "data": {
   "shadows": "sklearn.datasets.samples_generator.make_blobs"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_k_means.n_samples": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "sklearn.cluster.tests.test_k_means.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_k_means.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_k_means.row_norms": {
  "data": {
   "shadows": "sklearn.utils.extmath.row_norms"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_k_means.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_k_means.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_k_means.test_check_sample_weight": {
  "data": {
   "lineno": 976,
   "symbols_in_volume": [
    "sklearn.cluster.k_means_._check_sample_weight",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.validation._num_samples"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_elkan_results": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.cluster.KMeans",
    "sklearn.datasets.samples_generator.make_blobs",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_fit_transform": {
  "data": {
   "lineno": 691,
   "symbols_in_volume": [
    "sklearn.cluster.KMeans",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_float_precision": {
  "data": {
   "lineno": 792,
   "symbols_in_volume": [
    "Estimator",
    "hasattr",
    "numpy.float32",
    "numpy.float64",
    "scipy.sparse.csr_matrix",
    "sklearn.cluster.KMeans",
    "sklearn.cluster.MiniBatchKMeans",
    "sklearn.cluster.tests.test_k_means.X_csr",
    "sklearn.cluster.tests.test_k_means.centers",
    "sklearn.cluster.tests.test_k_means.pytest",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_full_vs_elkan": {
  "data": {
   "lineno": 709,
   "symbols_in_volume": [
    "sklearn.cluster.KMeans",
    "sklearn.metrics.cluster.homogeneity_score"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_int_input": {
  "data": {
   "lineno": 649,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.float64",
    "numpy.int32",
    "numpy.int64",
    "numpy.ones",
    "scipy.sparse.csr_matrix",
    "sklearn.cluster.KMeans",
    "sklearn.cluster.MiniBatchKMeans",
    "sklearn.metrics.cluster.v_measure_score",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_iter_attribute": {
  "data": {
   "lineno": 985,
   "symbols_in_volume": [
    "numpy.random.rand",
    "sklearn.cluster.KMeans"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_k_means_copyx": {
  "data": {
   "lineno": 539,
   "symbols_in_volume": [
    "sklearn.cluster.KMeans",
    "sklearn.cluster.tests.test_k_means._check_fitted_model",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_k_means_explicit_init_shape": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": [
    "Class",
    "ValueError",
    "len",
    "numpy.random.RandomState",
    "sklearn.cluster.KMeans",
    "sklearn.cluster.MiniBatchKMeans",
    "sklearn.cluster.tests.test_k_means.pytest",
    "sklearn.utils.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_k_means_fortran_aligned_data": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.asfortranarray",
    "sklearn.cluster.KMeans",
    "sklearn.cluster.tests.test_k_means.centers",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_k_means_function": {
  "data": {
   "lineno": 738,
   "symbols_in_volume": [
    "RuntimeWarning",
    "TypeError",
    "ValueError",
    "numpy.unique",
    "sklearn.cluster.k_means",
    "sklearn.cluster.tests.test_k_means.X_csr",
    "sklearn.cluster.tests.test_k_means.centers",
    "sklearn.cluster.tests.test_k_means.sys",
    "sklearn.externals.six.moves.cStringIO",
    "sklearn.metrics.cluster.v_measure_score",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_greater",
    "sklearn.utils.testing.assert_raise_message",
    "sklearn.utils.testing.assert_raises",
    "sklearn.utils.testing.assert_warns"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_k_means_init_centers": {
  "data": {
   "lineno": 834,
   "symbols_in_volume": [
    "dtype",
    "numpy.array",
    "numpy.float32",
    "numpy.float64",
    "numpy.int32",
    "numpy.int64",
    "numpy.may_share_memory",
    "sklearn.cluster.KMeans",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_k_means_invalid_init": {
  "data": {
   "lineno": 529,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.cluster.KMeans",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_k_means_n_init": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "ValueError",
    "numpy.random.RandomState",
    "sklearn.cluster.KMeans",
    "sklearn.utils.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_k_means_new_centers": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.assert_array_equal",
    "numpy.unique",
    "scipy.sparse.coo_matrix",
    "sklearn.cluster.KMeans"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_k_means_non_collapsed": {
  "data": {
   "lineno": 550,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "numpy.linalg.norm",
    "numpy.unique",
    "sklearn.cluster.KMeans",
    "sklearn.cluster.tests.test_k_means.centers",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_k_means_perfect_init": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "sklearn.cluster.KMeans",
    "sklearn.cluster.tests.test_k_means._check_fitted_model",
    "sklearn.cluster.tests.test_k_means.centers"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_k_means_plus_plus_init": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "sklearn.cluster.KMeans",
    "sklearn.cluster.tests.test_k_means._check_fitted_model"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_k_means_plus_plus_init_2_jobs": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "sklearn.cluster.KMeans",
    "sklearn.cluster.tests.test_k_means._check_fitted_model",
    "sklearn.cluster.tests.test_k_means.sys",
    "sklearn.utils.testing.SkipTest",
    "sklearn.utils.testing.if_safe_multiprocessing_with_blas"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_k_means_plus_plus_init_not_precomputed": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "sklearn.cluster.KMeans",
    "sklearn.cluster.tests.test_k_means._check_fitted_model"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_k_means_plus_plus_init_sparse": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "sklearn.cluster.KMeans",
    "sklearn.cluster.tests.test_k_means.X_csr",
    "sklearn.cluster.tests.test_k_means._check_fitted_model"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_k_means_precompute_distances_flag": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.cluster.KMeans",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_k_means_random_init": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "sklearn.cluster.KMeans",
    "sklearn.cluster.tests.test_k_means._check_fitted_model"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_k_means_random_init_not_precomputed": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "sklearn.cluster.KMeans",
    "sklearn.cluster.tests.test_k_means._check_fitted_model"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_k_means_random_init_sparse": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "sklearn.cluster.KMeans",
    "sklearn.cluster.tests.test_k_means.X_csr",
    "sklearn.cluster.tests.test_k_means._check_fitted_model"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_labels_assignment_and_inertia": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "numpy.empty",
    "numpy.full",
    "numpy.infty",
    "numpy.int",
    "numpy.minimum",
    "numpy.random.RandomState",
    "numpy.sum",
    "range",
    "sklearn.cluster.k_means_._labels_inertia",
    "sklearn.cluster.tests.test_k_means.X_csr",
    "sklearn.cluster.tests.test_k_means.centers",
    "sklearn.cluster.tests.test_k_means.n_samples",
    "sklearn.utils.extmath.row_norms",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_less_centers_than_unique_points": {
  "data": {
   "lineno": 893,
   "symbols_in_volume": [
    "numpy.asarray",
    "range",
    "set",
    "sklearn.cluster.KMeans",
    "sklearn.cluster.k_means",
    "sklearn.exceptions.ConvergenceWarning",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_warns_message"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_max_iter_error": {
  "data": {
   "lineno": 785,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.cluster.KMeans",
    "sklearn.utils.testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_mb_k_means_plus_plus_init_dense_array": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": [
    "sklearn.cluster.MiniBatchKMeans",
    "sklearn.cluster.tests.test_k_means._check_fitted_model"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_mb_k_means_plus_plus_init_sparse_matrix": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": [
    "sklearn.cluster.MiniBatchKMeans",
    "sklearn.cluster.tests.test_k_means.X_csr",
    "sklearn.cluster.tests.test_k_means._check_fitted_model"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_mb_kmeans_verbose": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": [
    "sklearn.cluster.MiniBatchKMeans",
    "sklearn.cluster.tests.test_k_means.sys",
    "sklearn.externals.six.moves.cStringIO"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_mini_batch_k_means_random_init_partial_fit": {
  "data": {
   "lineno": 494,
   "symbols_in_volume": [
    "numpy.array_split",
    "sklearn.cluster.MiniBatchKMeans",
    "sklearn.metrics.cluster.v_measure_score",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_mini_match_k_means_invalid_init": {
  "data": {
   "lineno": 534,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.cluster.MiniBatchKMeans",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_minibatch_default_init_size": {
  "data": {
   "lineno": 506,
   "symbols_in_volume": [
    "sklearn.cluster.MiniBatchKMeans",
    "sklearn.cluster.tests.test_k_means._check_fitted_model",
    "sklearn.cluster.tests.test_k_means.centers",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_minibatch_init_with_large_k": {
  "data": {
   "lineno": 343,
   "symbols_in_volume": [
    "RuntimeWarning",
    "sklearn.cluster.MiniBatchKMeans",
    "sklearn.utils.testing.assert_warns"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_minibatch_k_means_init_multiple_runs_with_explicit_centers": {
  "data": {
   "lineno": 370,
   "symbols_in_volume": [
    "RuntimeWarning",
    "sklearn.cluster.MiniBatchKMeans",
    "sklearn.cluster.tests.test_k_means.centers",
    "sklearn.utils.testing.assert_warns"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_minibatch_k_means_perfect_init_dense_array": {
  "data": {
   "lineno": 364,
   "symbols_in_volume": [
    "sklearn.cluster.MiniBatchKMeans",
    "sklearn.cluster.tests.test_k_means._check_fitted_model",
    "sklearn.cluster.tests.test_k_means.centers"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_minibatch_k_means_perfect_init_sparse_csr": {
  "data": {
   "lineno": 376,
   "symbols_in_volume": [
    "sklearn.cluster.MiniBatchKMeans",
    "sklearn.cluster.tests.test_k_means.X_csr",
    "sklearn.cluster.tests.test_k_means._check_fitted_model",
    "sklearn.cluster.tests.test_k_means.centers"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_minibatch_k_means_random_init_dense_array": {
  "data": {
   "lineno": 350,
   "symbols_in_volume": [
    "sklearn.cluster.MiniBatchKMeans",
    "sklearn.cluster.tests.test_k_means._check_fitted_model"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_minibatch_k_means_random_init_sparse_csr": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "sklearn.cluster.MiniBatchKMeans",
    "sklearn.cluster.tests.test_k_means.X_csr",
    "sklearn.cluster.tests.test_k_means._check_fitted_model"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_minibatch_reassign": {
  "data": {
   "lineno": 414,
   "symbols_in_volume": [
    "numpy.double",
    "numpy.ones",
    "numpy.zeros",
    "sklearn.cluster.MiniBatchKMeans",
    "sklearn.cluster.k_means_._mini_batch_step",
    "sklearn.cluster.tests.test_k_means.X_csr",
    "sklearn.cluster.tests.test_k_means.centers",
    "sklearn.cluster.tests.test_k_means.sys",
    "sklearn.externals.six.moves.cStringIO",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_greater"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_minibatch_sensible_reassign_fit": {
  "data": {
   "lineno": 382,
   "symbols_in_volume": [
    "sklearn.cluster.MiniBatchKMeans",
    "sklearn.datasets.samples_generator.make_blobs",
    "sklearn.utils.testing.assert_greater"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_minibatch_sensible_reassign_partial_fit": {
  "data": {
   "lineno": 403,
   "symbols_in_volume": [
    "range",
    "sklearn.cluster.MiniBatchKMeans",
    "sklearn.cluster.tests.test_k_means.n_samples",
    "sklearn.datasets.samples_generator.make_blobs",
    "sklearn.utils.testing.assert_greater"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_minibatch_set_init_size": {
  "data": {
   "lineno": 520,
   "symbols_in_volume": [
    "sklearn.cluster.MiniBatchKMeans",
    "sklearn.cluster.tests.test_k_means._check_fitted_model",
    "sklearn.cluster.tests.test_k_means.centers",
    "sklearn.cluster.tests.test_k_means.n_samples",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_minibatch_tol": {
  "data": {
   "lineno": 514,
   "symbols_in_volume": [
    "sklearn.cluster.MiniBatchKMeans",
    "sklearn.cluster.tests.test_k_means._check_fitted_model"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_minibatch_update_consistency": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "numpy.double",
    "numpy.ones",
    "numpy.random.RandomState",
    "numpy.sum",
    "numpy.zeros",
    "sklearn.cluster.k_means_._labels_inertia",
    "sklearn.cluster.k_means_._mini_batch_step",
    "sklearn.cluster.tests.test_k_means.X_csr",
    "sklearn.cluster.tests.test_k_means.centers",
    "sklearn.utils.extmath.row_norms",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_greater",
    "sklearn.utils.testing.assert_less"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_minibatch_with_many_reassignments": {
  "data": {
   "lineno": 459,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.cluster.MiniBatchKMeans",
    "sklearn.cluster.tests.test_k_means.n_samples"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_n_init": {
  "data": {
   "lineno": 720,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "list",
    "numpy.zeros",
    "range",
    "sklearn.cluster.KMeans",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_predict": {
  "data": {
   "lineno": 570,
   "symbols_in_volume": [
    "numpy.arange",
    "sklearn.cluster.KMeans",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_predict_equal_labels": {
  "data": {
   "lineno": 697,
   "symbols_in_volume": [
    "sklearn.cluster.KMeans",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_predict_minibatch_dense_input": {
  "data": {
   "lineno": 605,
   "symbols_in_volume": [
    "numpy.arange",
    "sklearn.cluster.MiniBatchKMeans",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_predict_minibatch_kmeanspp_init_sparse_input": {
  "data": {
   "lineno": 617,
   "symbols_in_volume": [
    "numpy.arange",
    "sklearn.cluster.MiniBatchKMeans",
    "sklearn.cluster.tests.test_k_means.X_csr",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_predict_minibatch_random_init_sparse_input": {
  "data": {
   "lineno": 633,
   "symbols_in_volume": [
    "numpy.arange",
    "sklearn.cluster.MiniBatchKMeans",
    "sklearn.cluster.tests.test_k_means.X_csr",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_sample_weight_length": {
  "data": {
   "lineno": 968,
   "symbols_in_volume": [
    "ValueError",
    "numpy.ones",
    "sklearn.cluster.KMeans",
    "sklearn.utils.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_scaled_weights": {
  "data": {
   "lineno": 955,
   "symbols_in_volume": [
    "numpy.ones",
    "sklearn.base.clone",
    "sklearn.cluster.KMeans",
    "sklearn.cluster.MiniBatchKMeans",
    "sklearn.cluster.tests.test_k_means._sort_centers",
    "sklearn.cluster.tests.test_k_means.n_samples",
    "sklearn.metrics.cluster.v_measure_score",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_score": {
  "data": {
   "lineno": 588,
   "symbols_in_volume": [
    "sklearn.cluster.KMeans",
    "sklearn.utils.testing.assert_greater"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_sparse_k_means_init_centers": {
  "data": {
   "lineno": 849,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose",
    "scipy.sparse.csr_matrix",
    "sklearn.cluster.KMeans",
    "sklearn.cluster.tests.test_k_means.centers",
    "sklearn.datasets.load_iris"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_sparse_mb_k_means_callable_init": {
  "data": {
   "lineno": 476,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.cluster.MiniBatchKMeans",
    "sklearn.cluster.tests.test_k_means.X_csr",
    "sklearn.cluster.tests.test_k_means._check_fitted_model",
    "sklearn.utils.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_sparse_mb_k_means_callable_init.test_init": {
  "data": {
   "lineno": 478,
   "symbols_in_volume": [
    "sklearn.cluster.tests.test_k_means.centers"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_sparse_validate_centers": {
  "data": {
   "lineno": 876,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.cluster.KMeans",
    "sklearn.cluster.tests.test_k_means.centers",
    "sklearn.datasets.load_iris",
    "sklearn.utils.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_transform": {
  "data": {
   "lineno": 679,
   "symbols_in_volume": [
    "range",
    "sklearn.cluster.KMeans",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_greater"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_unit_weights_vs_no_weights": {
  "data": {
   "lineno": 942,
   "symbols_in_volume": [
    "numpy.ones",
    "sklearn.base.clone",
    "sklearn.cluster.KMeans",
    "sklearn.cluster.MiniBatchKMeans",
    "sklearn.cluster.tests.test_k_means._sort_centers",
    "sklearn.cluster.tests.test_k_means.n_samples",
    "sklearn.metrics.cluster.v_measure_score",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_weighted_vs_repeated": {
  "data": {
   "lineno": 917,
   "symbols_in_volume": [
    "isinstance",
    "numpy.random.RandomState",
    "numpy.repeat",
    "sklearn.base.clone",
    "sklearn.cluster.KMeans",
    "sklearn.cluster.MiniBatchKMeans",
    "sklearn.cluster.tests.test_k_means._sort_centers",
    "sklearn.cluster.tests.test_k_means.centers",
    "sklearn.cluster.tests.test_k_means.n_samples",
    "sklearn.metrics.cluster.v_measure_score",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_x_squared_norms_init_centroids": {
  "data": {
   "lineno": 773,
   "symbols_in_volume": [
    "numpy.sum",
    "sklearn.cluster.k_means_._init_centroids",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.v_measure_score": {
  "data": {
   "shadows": "sklearn.metrics.cluster.v_measure_score"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_mean_shift": {
  "data": {
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.cluster.tests.test_mean_shift.centers",
    "sklearn.datasets.samples_generator.make_blobs"
   ]
  },
  "type": "module"
 },
 "sklearn.cluster.tests.test_mean_shift.MeanShift": {
  "data": {
   "shadows": "sklearn.cluster.MeanShift"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_mean_shift.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_mean_shift.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_mean_shift.assert_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_mean_shift.assert_false": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_false"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_mean_shift.assert_raise_message": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raise_message"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_mean_shift.assert_true": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_true"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_mean_shift.centers": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "sklearn.cluster.tests.test_mean_shift.estimate_bandwidth": {
  "data": {
   "shadows": "sklearn.cluster.estimate_bandwidth"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_mean_shift.get_bin_seeds": {
  "data": {
   "shadows": "sklearn.cluster.get_bin_seeds"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_mean_shift.make_blobs": {
  "data": {
   "shadows": "sklearn.datasets.samples_generator.make_blobs"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_mean_shift.mean_shift": {
  "data": {
   "shadows": "sklearn.cluster.mean_shift"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_mean_shift.n_clusters": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "sklearn.cluster.tests.test_mean_shift.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_mean_shift.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_mean_shift.test_bin_seeds": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "set",
    "sklearn.cluster.get_bin_seeds",
    "sklearn.cluster.tests.test_mean_shift.warnings",
    "sklearn.datasets.samples_generator.make_blobs",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_true",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_mean_shift.test_cluster_intensity_tie": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.cluster.MeanShift",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_mean_shift.test_estimate_bandwidth": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "sklearn.cluster.estimate_bandwidth",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_mean_shift.test_estimate_bandwidth_1sample": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "sklearn.cluster.estimate_bandwidth",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_mean_shift.test_estimate_bandwidth_with_sparse_matrix": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "TypeError",
    "scipy.sparse.lil_matrix",
    "sklearn.cluster.estimate_bandwidth",
    "sklearn.utils.testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_mean_shift.test_mean_shift": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "len",
    "numpy.unique",
    "sklearn.cluster.MeanShift",
    "sklearn.cluster.mean_shift",
    "sklearn.cluster.tests.test_mean_shift.n_clusters",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_mean_shift.test_meanshift_all_orphans": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.cluster.MeanShift",
    "sklearn.utils.testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_mean_shift.test_meanshift_predict": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "sklearn.cluster.MeanShift",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_mean_shift.test_parallel": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.cluster.MeanShift",
    "sklearn.cluster.tests.test_mean_shift.centers",
    "sklearn.datasets.samples_generator.make_blobs",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_mean_shift.test_unfitted": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "hasattr",
    "sklearn.cluster.MeanShift",
    "sklearn.utils.testing.assert_false"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_mean_shift.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_spectral": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "sklearn.cluster.tests.test_spectral.SpectralClustering": {
  "data": {
   "shadows": "sklearn.cluster.SpectralClustering"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_spectral.adjusted_rand_score": {
  "data": {
   "shadows": "sklearn.metrics.adjusted_rand_score"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_spectral.amg_loaded": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "sklearn.cluster.tests.test_spectral.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_spectral.assert_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_spectral.assert_raises": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_spectral.assert_warns_message": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_warns_message"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_spectral.cPickle": {
  "data": {
   "shadows": "sklearn.externals.six.moves.cPickle"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_spectral.check_random_state": {
  "data": {
   "shadows": "sklearn.utils.check_random_state"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_spectral.discretize": {
  "data": {
   "shadows": "sklearn.cluster.spectral.discretize"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_spectral.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_spectral.img_to_graph": {
  "data": {
   "shadows": "sklearn.feature_extraction.img_to_graph"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_spectral.kernel_metrics": {
  "data": {
   "shadows": "sklearn.metrics.pairwise.kernel_metrics"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_spectral.make_blobs": {
  "data": {
   "shadows": "sklearn.datasets.samples_generator.make_blobs"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_spectral.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_spectral.pairwise_distances": {
  "data": {
   "shadows": "sklearn.metrics.pairwise_distances"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_spectral.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_spectral.rbf_kernel": {
  "data": {
   "shadows": "sklearn.metrics.pairwise.rbf_kernel"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_spectral.smoothed_aggregation_solver": {
  "data": {
   "shadows": "pyamg.smoothed_aggregation_solver"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_spectral.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_spectral.spectral_clustering": {
  "data": {
   "shadows": "sklearn.cluster.spectral_clustering"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_spectral.test_affinities": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "UserWarning",
    "ValueError",
    "sklearn.cluster.SpectralClustering",
    "sklearn.datasets.samples_generator.make_blobs",
    "sklearn.metrics.adjusted_rand_score",
    "sklearn.metrics.pairwise.kernel_metrics",
    "sklearn.utils.check_random_state",
    "sklearn.utils.testing.assert_raises",
    "sklearn.utils.testing.assert_warns_message"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_spectral.test_affinities.histogram": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "numpy.minimum",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_spectral.test_discretize": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "numpy.float",
    "numpy.ones",
    "numpy.random.RandomState",
    "range",
    "scipy.sparse.coo_matrix",
    "sklearn.cluster.spectral.discretize",
    "sklearn.cluster.tests.test_spectral.pytest",
    "sklearn.metrics.adjusted_rand_score"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_spectral.test_spectral_clustering": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "numpy.array",
    "scipy.sparse.csr_matrix",
    "sklearn.cluster.SpectralClustering",
    "sklearn.cluster.tests.test_spectral.pytest",
    "sklearn.externals.six.moves.cPickle.dumps",
    "sklearn.externals.six.moves.cPickle.loads",
    "sklearn.metrics.adjusted_rand_score",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_spectral.test_spectral_clustering_sparse": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "numpy.maximum",
    "scipy.sparse.coo_matrix",
    "sklearn.cluster.SpectralClustering",
    "sklearn.datasets.samples_generator.make_blobs",
    "sklearn.metrics.adjusted_rand_score",
    "sklearn.metrics.pairwise.rbf_kernel"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_spectral.test_spectral_clustering_with_arpack_amg_solvers": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "len",
    "numpy.exp",
    "numpy.indices",
    "numpy.unique",
    "sklearn.cluster.spectral_clustering",
    "sklearn.cluster.tests.test_spectral.amg_loaded",
    "sklearn.feature_extraction.img_to_graph",
    "sklearn.metrics.adjusted_rand_score",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_spectral.test_spectral_unknown_assign_labels": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "numpy.max",
    "scipy.sparse.coo_matrix",
    "sklearn.cluster.spectral_clustering",
    "sklearn.datasets.samples_generator.make_blobs",
    "sklearn.metrics.pairwise_distances",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_spectral.test_spectral_unknown_mode": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "numpy.max",
    "scipy.sparse.coo_matrix",
    "sklearn.cluster.spectral_clustering",
    "sklearn.datasets.samples_generator.make_blobs",
    "sklearn.metrics.pairwise_distances",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.compose": {
  "data": {},
  "type": "module"
 },
 "sklearn.compose.__all__": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "sklearn.compose._target": {
  "data": {},
  "type": "module"
 },
 "sklearn.compose._target.TransformedTargetRegressor": {
  "data": {
   "lineno": 17
  },
  "type": "class"
 },
 "sklearn.compose._target.TransformedTargetRegressor.__init__": {
  "data": {
   "lineno": 107
  },
  "type": "function"
 },
 "sklearn.compose._target.TransformedTargetRegressor._fit_transformer": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "FunctionTransformer",
    "UserWarning",
    "ValueError",
    "clone",
    "max",
    "numpy.allclose",
    "safe_indexing",
    "sklearn.compose._target.warnings",
    "slice"
   ]
  },
  "type": "function"
 },
 "sklearn.compose._target.TransformedTargetRegressor.fit": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "LinearRegression",
    "check_array",
    "clone"
   ]
  },
  "type": "function"
 },
 "sklearn.compose._target.TransformedTargetRegressor.predict": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "check_is_fitted"
   ]
  },
  "type": "function"
 },
 "sklearn.compose._target.__all__": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "sklearn.compose._target.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.compose._target.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.compose.tests": {
  "data": {},
  "type": "module"
 },
 "sklearn.compose.tests.test_column_transformer": {
  "data": {},
  "type": "module"
 },
 "sklearn.compose.tests.test_column_transformer.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "sklearn.compose.tests.test_column_transformer.ColumnTransformer": {
  "data": {
   "shadows": "sklearn.compose.ColumnTransformer"
  },
  "type": "import"
 },
 "sklearn.compose.tests.test_column_transformer.DataConversionWarning": {
  "data": {
   "shadows": "sklearn.exceptions.DataConversionWarning"
  },
  "type": "import"
 },
 "sklearn.compose.tests.test_column_transformer.DictVectorizer": {
  "data": {
   "shadows": "sklearn.feature_extraction.DictVectorizer"
  },
  "type": "import"
 },
 "sklearn.compose.tests.test_column_transformer.DoubleTrans": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator"
   ]
  },
  "type": "class"
 },
 "sklearn.compose.tests.test_column_transformer.DoubleTrans.fit": {
  "data": {
   "lineno": 41
  },
  "type": "function"
 },
 "sklearn.compose.tests.test_column_transformer.DoubleTrans.transform": {
  "data": {
   "lineno": 44
  },
  "type": "function"
 },
 "sklearn.compose.tests.test_column_transformer.Normalizer": {
  "data": {
   "shadows": "sklearn.preprocessing.Normalizer"
  },
  "type": "import"
 },
 "sklearn.compose.tests.test_column_transformer.NotFittedError": {
  "data": {
   "shadows": "sklearn.exceptions.NotFittedError"
  },
  "type": "import"
 },
 "sklearn.compose.tests.test_column_transformer.OneHotEncoder": {
  "data": {
   "shadows": "sklearn.preprocessing.OneHotEncoder"
  },
  "type": "import"
 },
 "sklearn.compose.tests.test_column_transformer.SparseMatrixTrans": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator"
   ]
  },
  "type": "class"
 },
 "sklearn.compose.tests.test_column_transformer.SparseMatrixTrans.fit": {
  "data": {
   "lineno": 49
  },
  "type": "function"
 },
 "sklearn.compose.tests.test_column_transformer.SparseMatrixTrans.transform": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "len",
    "scipy.sparse.eye"
   ]
  },
  "type": "function"
 },
 "sklearn.compose.tests.test_column_transformer.StandardScaler": {
  "data": {
   "shadows": "sklearn.preprocessing.StandardScaler"
  },
  "type": "import"
 },
 "sklearn.compose.tests.test_column_transformer.Trans": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator"
   ]
  },
  "type": "class"
 },
 "sklearn.compose.tests.test_column_transformer.Trans.fit": {
  "data": {
   "lineno": 27
  },
  "type": "function"
 },
 "sklearn.compose.tests.test_column_transformer.Trans.transform": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "hasattr",
    "numpy.atleast_2d"
   ]
  },
  "type": "function"
 },
 "sklearn.compose.tests.test_column_transformer.TransNo2D": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator"
   ]
  },
  "type": "class"
 },
 "sklearn.compose.tests.test_column_transformer.TransNo2D.fit": {
  "data": {
   "lineno": 58
  },
  "type": "function"
 },
 "sklearn.compose.tests.test_column_transformer.TransNo2D.transform": {
  "data": {
   "lineno": 61
  },
  "type": "function"
 },
 "sklearn.compose.tests.test_column_transformer.TransRaise": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator"
   ]
  },
  "type": "class"
 },
 "sklearn.compose.tests.test_column_transformer.TransRaise.fit": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "sklearn.compose.tests.test_column_transformer.TransRaise.transform": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "sklearn.compose.tests.test_column_transformer.assert_allclose_dense_sparse": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_allclose_dense_sparse"
  },
  "type": "import"
 },
 "sklearn.compose.tests.test_column_transformer.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.compose.tests.test_column_transformer.assert_dict_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_dict_equal"
  },
  "type": "import"
 },
 "sklearn.compose.tests.test_column_transformer.assert_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.compose.tests.test_column_transformer.assert_false": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_false"
  },
  "type": "import"
 },
 "sklearn.compose.tests.test_column_transformer.assert_raise_message": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raise_message"
  },
  "type": "import"
 },
 "sklearn.compose.tests.test_column_transformer.assert_raises": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.compose.tests.test_column_transformer.assert_true": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_true"
  },
  "type": "import"
 },
 "sklearn.compose.tests.test_column_transformer.make_column_transformer": {
  "data": {
   "shadows": "sklearn.compose.make_column_transformer"
  },
  "type": "import"
 },
 "sklearn.compose.tests.test_column_transformer.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.compose.tests.test_column_transformer.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.compose.tests.test_column_transformer.six": {
  "data": {
   "shadows": "sklearn.externals.six"
  },
  "type": "import"
 },
 "sklearn.compose.tests.test_column_transformer.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.compose.tests.test_column_transformer.test_2D_transformer_output": {
  "data": {
   "lineno": 427,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "sklearn.compose.ColumnTransformer",
    "sklearn.compose.tests.test_column_transformer.TransNo2D",
    "sklearn.utils.testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.compose.tests.test_column_transformer.test_2D_transformer_output_pandas": {
  "data": {
   "lineno": 440,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "sklearn.compose.ColumnTransformer",
    "sklearn.compose.tests.test_column_transformer.TransNo2D",
    "sklearn.compose.tests.test_column_transformer.pytest",
    "sklearn.utils.testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.compose.tests.test_column_transformer.test_column_transformer": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "numpy.vstack",
    "sklearn.compose.ColumnTransformer",
    "sklearn.compose.tests.test_column_transformer.Trans",
    "sklearn.utils.testing.assert_array_equal",
    "slice"
   ]
  },
  "type": "function"
 },
 "sklearn.compose.tests.test_column_transformer.test_column_transformer_callable_specifier": {
  "data": {
   "lineno": 932,
   "symbols_in_volume": [
    "callable",
    "numpy.array",
    "sklearn.compose.ColumnTransformer",
    "sklearn.compose.tests.test_column_transformer.Trans",
    "sklearn.compose.tests.test_column_transformer.pytest",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.compose.tests.test_column_transformer.test_column_transformer_callable_specifier.func": {
  "data": {
   "lineno": 951,
   "symbols_in_volume": [
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.compose.tests.test_column_transformer.test_column_transformer_cloning": {
  "data": {
   "lineno": 580,
   "symbols_in_volume": [
    "hasattr",
    "numpy.array",
    "sklearn.compose.ColumnTransformer",
    "sklearn.preprocessing.StandardScaler",
    "sklearn.utils.testing.assert_false",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.compose.tests.test_column_transformer.test_column_transformer_dataframe": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "TransAssert",
    "len",
    "numpy.array",
    "numpy.vstack",
    "sklearn.compose.ColumnTransformer",
    "sklearn.compose.tests.test_column_transformer.Trans",
    "sklearn.compose.tests.test_column_transformer.pytest",
    "sklearn.utils.testing.assert_array_equal",
    "slice"
   ]
  },
  "type": "function"
 },
 "sklearn.compose.tests.test_column_transformer.test_column_transformer_dataframe.TransAssert": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator"
   ]
  },
  "type": "class"
 },
 "sklearn.compose.tests.test_column_transformer.test_column_transformer_dataframe.TransAssert.fit": {
  "data": {
   "lineno": 226
  },
  "type": "function"
 },
 "sklearn.compose.tests.test_column_transformer.test_column_transformer_dataframe.TransAssert.transform": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "isinstance",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.compose.tests.test_column_transformer.test_column_transformer_drop_all_sparse_remainder_transformer": {
  "data": {
   "lineno": 855,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "numpy.array",
    "numpy.eye",
    "scipy.sparse.issparse",
    "sklearn.compose.ColumnTransformer",
    "sklearn.compose.tests.test_column_transformer.SparseMatrixTrans",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.compose.tests.test_column_transformer.test_column_transformer_drops_all_remainder_transformer": {
  "data": {
   "lineno": 812,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "numpy.array",
    "sklearn.compose.ColumnTransformer",
    "sklearn.compose.tests.test_column_transformer.DoubleTrans",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.compose.tests.test_column_transformer.test_column_transformer_empty_columns": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "numpy.array",
    "sklearn.compose.ColumnTransformer",
    "sklearn.compose.tests.test_column_transformer.Trans",
    "sklearn.compose.tests.test_column_transformer.pytest",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.compose.tests.test_column_transformer.test_column_transformer_error_msg_1D": {
  "data": {
   "lineno": 413,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "sklearn.compose.ColumnTransformer",
    "sklearn.compose.tests.test_column_transformer.TransRaise",
    "sklearn.preprocessing.StandardScaler",
    "sklearn.utils.testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.compose.tests.test_column_transformer.test_column_transformer_get_feature_names": {
  "data": {
   "lineno": 594,
   "symbols_in_volume": [
    "AttributeError",
    "NotImplementedError",
    "numpy.array",
    "object",
    "range",
    "sklearn.compose.ColumnTransformer",
    "sklearn.compose.tests.test_column_transformer.Trans",
    "sklearn.exceptions.NotFittedError",
    "sklearn.feature_extraction.DictVectorizer",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_raise_message",
    "sklearn.utils.testing.assert_raises",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.compose.tests.test_column_transformer.test_column_transformer_get_set_params": {
  "data": {
   "lineno": 526,
   "symbols_in_volume": [
    "sklearn.compose.ColumnTransformer",
    "sklearn.preprocessing.StandardScaler",
    "sklearn.utils.testing.assert_dict_equal",
    "sklearn.utils.testing.assert_false"
   ]
  },
  "type": "function"
 },
 "sklearn.compose.tests.test_column_transformer.test_column_transformer_get_set_params_with_remainder": {
  "data": {
   "lineno": 875,
   "symbols_in_volume": [
    "sklearn.compose.ColumnTransformer",
    "sklearn.preprocessing.StandardScaler"
   ]
  },
  "type": "function"
 },
 "sklearn.compose.tests.test_column_transformer.test_column_transformer_invalid_columns": {
  "data": {
   "lineno": 455,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "sklearn.compose.ColumnTransformer",
    "sklearn.compose.tests.test_column_transformer.Trans",
    "sklearn.compose.tests.test_column_transformer.pytest",
    "sklearn.utils.testing.assert_raise_message",
    "slice"
   ]
  },
  "type": "function"
 },
 "sklearn.compose.tests.test_column_transformer.test_column_transformer_invalid_transformer": {
  "data": {
   "lineno": 472,
   "symbols_in_volume": [
    "NoTrans",
    "TypeError",
    "numpy.array",
    "sklearn.compose.ColumnTransformer",
    "sklearn.utils.testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.compose.tests.test_column_transformer.test_column_transformer_invalid_transformer.NoTrans": {
  "data": {
   "lineno": 474,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator"
   ]
  },
  "type": "class"
 },
 "sklearn.compose.tests.test_column_transformer.test_column_transformer_invalid_transformer.NoTrans.fit": {
  "data": {
   "lineno": 475
  },
  "type": "function"
 },
 "sklearn.compose.tests.test_column_transformer.test_column_transformer_invalid_transformer.NoTrans.predict": {
  "data": {
   "lineno": 478
  },
  "type": "function"
 },
 "sklearn.compose.tests.test_column_transformer.test_column_transformer_list": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": [
    "float",
    "numpy.array",
    "sklearn.compose.ColumnTransformer",
    "sklearn.compose.tests.test_column_transformer.pytest",
    "sklearn.exceptions.DataConversionWarning",
    "sklearn.preprocessing.OneHotEncoder",
    "sklearn.preprocessing.StandardScaler",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.compose.tests.test_column_transformer.test_column_transformer_named_estimators": {
  "data": {
   "lineno": 564,
   "symbols_in_volume": [
    "hasattr",
    "isinstance",
    "numpy.array",
    "sklearn.compose.ColumnTransformer",
    "sklearn.preprocessing.StandardScaler",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_false",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.compose.tests.test_column_transformer.test_column_transformer_no_estimators": {
  "data": {
   "lineno": 911,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "sklearn.compose.ColumnTransformer",
    "sklearn.preprocessing.StandardScaler"
   ]
  },
  "type": "function"
 },
 "sklearn.compose.tests.test_column_transformer.test_column_transformer_no_estimators_set_params": {
  "data": {
   "lineno": 927,
   "symbols_in_volume": [
    "sklearn.compose.ColumnTransformer"
   ]
  },
  "type": "function"
 },
 "sklearn.compose.tests.test_column_transformer.test_column_transformer_no_remaining_remainder_transformer": {
  "data": {
   "lineno": 798,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "sklearn.compose.ColumnTransformer",
    "sklearn.compose.tests.test_column_transformer.DoubleTrans",
    "sklearn.compose.tests.test_column_transformer.Trans",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.compose.tests.test_column_transformer.test_column_transformer_remainder": {
  "data": {
   "lineno": 674,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.array",
    "sklearn.compose.ColumnTransformer",
    "sklearn.compose.make_column_transformer",
    "sklearn.compose.tests.test_column_transformer.Trans",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.compose.tests.test_column_transformer.test_column_transformer_remainder_numpy": {
  "data": {
   "lineno": 735,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "sklearn.compose.ColumnTransformer",
    "sklearn.compose.tests.test_column_transformer.Trans",
    "sklearn.compose.tests.test_column_transformer.pytest",
    "sklearn.utils.testing.assert_array_equal",
    "slice"
   ]
  },
  "type": "function"
 },
 "sklearn.compose.tests.test_column_transformer.test_column_transformer_remainder_pandas": {
  "data": {
   "lineno": 752,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "numpy.array",
    "object",
    "sklearn.compose.ColumnTransformer",
    "sklearn.compose.tests.test_column_transformer.Trans",
    "sklearn.compose.tests.test_column_transformer.pytest",
    "sklearn.externals.six.string_types",
    "sklearn.utils.testing.assert_array_equal",
    "slice"
   ]
  },
  "type": "function"
 },
 "sklearn.compose.tests.test_column_transformer.test_column_transformer_remainder_transformer": {
  "data": {
   "lineno": 776,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "numpy.array",
    "sklearn.compose.ColumnTransformer",
    "sklearn.compose.tests.test_column_transformer.DoubleTrans",
    "sklearn.compose.tests.test_column_transformer.Trans",
    "sklearn.compose.tests.test_column_transformer.pytest",
    "sklearn.utils.testing.assert_array_equal",
    "slice"
   ]
  },
  "type": "function"
 },
 "sklearn.compose.tests.test_column_transformer.test_column_transformer_sparse_array": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": [
    "scipy.sparse.eye",
    "scipy.sparse.issparse",
    "sklearn.compose.ColumnTransformer",
    "sklearn.compose.tests.test_column_transformer.Trans",
    "sklearn.utils.testing.assert_allclose_dense_sparse",
    "sklearn.utils.testing.assert_true",
    "slice"
   ]
  },
  "type": "function"
 },
 "sklearn.compose.tests.test_column_transformer.test_column_transformer_sparse_remainder_transformer": {
  "data": {
   "lineno": 831,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "numpy.array",
    "numpy.eye",
    "numpy.hstack",
    "scipy.sparse.issparse",
    "sklearn.compose.ColumnTransformer",
    "sklearn.compose.tests.test_column_transformer.SparseMatrixTrans",
    "sklearn.compose.tests.test_column_transformer.Trans",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.compose.tests.test_column_transformer.test_column_transformer_sparse_stacking": {
  "data": {
   "lineno": 348,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "numpy.eye",
    "scipy.sparse.issparse",
    "sklearn.compose.ColumnTransformer",
    "sklearn.compose.tests.test_column_transformer.SparseMatrixTrans",
    "sklearn.compose.tests.test_column_transformer.Trans",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.compose.tests.test_column_transformer.test_column_transformer_sparse_threshold": {
  "data": {
   "lineno": 371,
   "symbols_in_volume": [
    "numpy.array",
    "object",
    "scipy.sparse.issparse",
    "sklearn.compose.ColumnTransformer",
    "sklearn.preprocessing.OneHotEncoder"
   ]
  },
  "type": "function"
 },
 "sklearn.compose.tests.test_column_transformer.test_column_transformer_special_strings": {
  "data": {
   "lineno": 634,
   "symbols_in_volume": [
    "TypeError",
    "len",
    "numpy.array",
    "sklearn.compose.ColumnTransformer",
    "sklearn.compose.tests.test_column_transformer.Trans",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.compose.tests.test_column_transformer.test_make_column_transformer": {
  "data": {
   "lineno": 487,
   "symbols_in_volume": [
    "sklearn.compose.make_column_transformer",
    "sklearn.preprocessing.Normalizer",
    "sklearn.preprocessing.StandardScaler",
    "sklearn.utils.testing.assert_equal",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.compose.tests.test_column_transformer.test_make_column_transformer_kwargs": {
  "data": {
   "lineno": 497,
   "symbols_in_volume": [
    "TypeError",
    "sklearn.compose.make_column_transformer",
    "sklearn.preprocessing.Normalizer",
    "sklearn.preprocessing.StandardScaler",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.compose.tests.test_column_transformer.test_make_column_transformer_remainder_transformer": {
  "data": {
   "lineno": 517,
   "symbols_in_volume": [
    "sklearn.compose.make_column_transformer",
    "sklearn.preprocessing.Normalizer",
    "sklearn.preprocessing.StandardScaler"
   ]
  },
  "type": "function"
 },
 "sklearn.compose.tests.test_target": {
  "data": {
   "symbols_in_volume": [
    "sklearn.datasets.make_friedman1"
   ]
  },
  "type": "module"
 },
 "sklearn.compose.tests.test_target.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "sklearn.compose.tests.test_target.DummyCheckerArrayTransformer": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator",
    "sklearn.base.TransformerMixin"
   ]
  },
  "type": "class"
 },
 "sklearn.compose.tests.test_target.DummyCheckerArrayTransformer.fit": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "isinstance",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "sklearn.compose.tests.test_target.DummyCheckerArrayTransformer.inverse_transform": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "isinstance",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "sklearn.compose.tests.test_target.DummyCheckerArrayTransformer.transform": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "isinstance",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "sklearn.compose.tests.test_target.DummyCheckerListRegressor": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "sklearn.dummy.DummyRegressor"
   ]
  },
  "type": "class"
 },
 "sklearn.compose.tests.test_target.DummyCheckerListRegressor.fit": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "sklearn.compose.tests.test_target.DummyCheckerListRegressor",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.compose.tests.test_target.DummyCheckerListRegressor.predict": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "sklearn.compose.tests.test_target.DummyCheckerListRegressor",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.compose.tests.test_target.DummyRegressor": {
  "data": {
   "shadows": "sklearn.dummy.DummyRegressor"
  },
  "type": "import"
 },
 "sklearn.compose.tests.test_target.FunctionTransformer": {
  "data": {
   "shadows": "sklearn.preprocessing.FunctionTransformer"
  },
  "type": "import"
 },
 "sklearn.compose.tests.test_target.Lasso": {
  "data": {
   "shadows": "sklearn.linear_model.Lasso"
  },
  "type": "import"
 },
 "sklearn.compose.tests.test_target.LinearRegression": {
  "data": {
   "shadows": "sklearn.linear_model.LinearRegression"
  },
  "type": "import"
 },
 "sklearn.compose.tests.test_target.StandardScaler": {
  "data": {
   "shadows": "sklearn.preprocessing.StandardScaler"
  },
  "type": "import"
 },
 "sklearn.compose.tests.test_target.TransformedTargetRegressor": {
  "data": {
   "shadows": "sklearn.compose.TransformedTargetRegressor"
  },
  "type": "import"
 },
 "sklearn.compose.tests.test_target.TransformerMixin": {
  "data": {
   "shadows": "sklearn.base.TransformerMixin"
  },
  "type": "import"
 },
 "sklearn.compose.tests.test_target._check_shifted_by_one": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "sklearn.utils.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "sklearn.compose.tests.test_target._check_standard_scaled": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "numpy.mean",
    "numpy.std",
    "sklearn.utils.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "sklearn.compose.tests.test_target.assert_allclose": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_allclose"
  },
  "type": "import"
 },
 "sklearn.compose.tests.test_target.assert_no_warnings": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_no_warnings"
  },
  "type": "import"
 },
 "sklearn.compose.tests.test_target.assert_raises": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.compose.tests.test_target.assert_raises_regex": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises_regex"
  },
  "type": "import"
 },
 "sklearn.compose.tests.test_target.assert_warns_message": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_warns_message"
  },
  "type": "import"
 },
 "sklearn.compose.tests.test_target.clone": {
  "data": {
   "shadows": "sklearn.base.clone"
  },
  "type": "import"
 },
 "sklearn.compose.tests.test_target.datasets": {
  "data": {
   "shadows": "sklearn.datasets"
  },
  "type": "import"
 },
 "sklearn.compose.tests.test_target.friedman": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "sklearn.compose.tests.test_target.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.compose.tests.test_target.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.compose.tests.test_target.test_transform_target_regressor_1d_transformer": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "numpy.vstack",
    "sklearn.base.clone",
    "sklearn.compose.TransformedTargetRegressor",
    "sklearn.compose.tests.test_target._check_shifted_by_one",
    "sklearn.compose.tests.test_target.friedman",
    "sklearn.compose.tests.test_target.pytest",
    "sklearn.linear_model.LinearRegression",
    "sklearn.preprocessing.FunctionTransformer",
    "sklearn.utils.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "sklearn.compose.tests.test_target.test_transform_target_regressor_2d_transformer": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "numpy.vstack",
    "sklearn.base.clone",
    "sklearn.compose.TransformedTargetRegressor",
    "sklearn.compose.tests.test_target._check_standard_scaled",
    "sklearn.compose.tests.test_target.friedman",
    "sklearn.compose.tests.test_target.pytest",
    "sklearn.linear_model.LinearRegression",
    "sklearn.preprocessing.StandardScaler",
    "sklearn.utils.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "sklearn.compose.tests.test_target.test_transform_target_regressor_2d_transformer_multioutput": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "numpy.vstack",
    "sklearn.base.clone",
    "sklearn.compose.TransformedTargetRegressor",
    "sklearn.compose.tests.test_target._check_standard_scaled",
    "sklearn.compose.tests.test_target.friedman",
    "sklearn.linear_model.LinearRegression",
    "sklearn.preprocessing.StandardScaler",
    "sklearn.utils.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "sklearn.compose.tests.test_target.test_transform_target_regressor_ensure_y_array": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "AssertionError",
    "sklearn.compose.TransformedTargetRegressor",
    "sklearn.compose.tests.test_target.DummyCheckerArrayTransformer",
    "sklearn.compose.tests.test_target.DummyCheckerListRegressor",
    "sklearn.compose.tests.test_target.friedman",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.compose.tests.test_target.test_transform_target_regressor_error": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "numpy.exp",
    "numpy.log",
    "numpy.ones",
    "sklearn.compose.TransformedTargetRegressor",
    "sklearn.compose.tests.test_target.friedman",
    "sklearn.linear_model.Lasso",
    "sklearn.linear_model.LinearRegression",
    "sklearn.preprocessing.StandardScaler",
    "sklearn.utils.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "sklearn.compose.tests.test_target.test_transform_target_regressor_functions": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "numpy.exp",
    "numpy.log",
    "sklearn.compose.TransformedTargetRegressor",
    "sklearn.compose.tests.test_target.friedman",
    "sklearn.linear_model.LinearRegression",
    "sklearn.utils.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "sklearn.compose.tests.test_target.test_transform_target_regressor_functions_multioutput": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "numpy.exp",
    "numpy.log",
    "numpy.vstack",
    "sklearn.compose.TransformedTargetRegressor",
    "sklearn.compose.tests.test_target.friedman",
    "sklearn.linear_model.LinearRegression",
    "sklearn.utils.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "sklearn.compose.tests.test_target.test_transform_target_regressor_invertible": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "UserWarning",
    "numpy.log",
    "numpy.sqrt",
    "sklearn.compose.TransformedTargetRegressor",
    "sklearn.compose.tests.test_target.friedman",
    "sklearn.linear_model.LinearRegression",
    "sklearn.utils.testing.assert_no_warnings",
    "sklearn.utils.testing.assert_warns_message"
   ]
  },
  "type": "function"
 },
 "sklearn.compose.tests.test_target.test_transform_target_regressor_multi_to_single": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "numpy.transpose",
    "sklearn.compose.TransformedTargetRegressor",
    "sklearn.compose.tests.test_target.friedman",
    "sklearn.utils.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "sklearn.compose.tests.test_target.test_transform_target_regressor_multi_to_single.func": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "sklearn.compose.tests.test_target.test_transform_target_regressor_multi_to_single.inverse_func": {
  "data": {
   "lineno": 208
  },
  "type": "function"
 },
 "sklearn.covariance": {
  "data": {},
  "type": "module"
 },
 "sklearn.covariance.__all__": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "sklearn.covariance.elliptic_envelope": {
  "data": {},
  "type": "module"
 },
 "sklearn.covariance.elliptic_envelope.EllipticEnvelope": {
  "data": {
   "lineno": 13
  },
  "type": "class"
 },
 "sklearn.covariance.elliptic_envelope.EllipticEnvelope.__init__": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "sklearn.covariance.elliptic_envelope.EllipticEnvelope",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance.elliptic_envelope.EllipticEnvelope.decision_function": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "DeprecationWarning",
    "check_is_fitted",
    "sklearn.covariance.elliptic_envelope.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance.elliptic_envelope.EllipticEnvelope.fit": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "numpy.percentile",
    "sklearn.covariance.elliptic_envelope.EllipticEnvelope",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance.elliptic_envelope.EllipticEnvelope.predict": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "check_array",
    "int",
    "numpy.full"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance.elliptic_envelope.EllipticEnvelope.score": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "accuracy_score"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance.elliptic_envelope.EllipticEnvelope.score_samples": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "check_is_fitted"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance.elliptic_envelope.EllipticEnvelope.threshold_": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "DeprecationWarning",
    "property",
    "sklearn.covariance.elliptic_envelope.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance.elliptic_envelope.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.covariance.elliptic_envelope.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.covariance.empirical_covariance_": {
  "data": {},
  "type": "module"
 },
 "sklearn.covariance.empirical_covariance_.EmpiricalCovariance": {
  "data": {
   "lineno": 89
  },
  "type": "class"
 },
 "sklearn.covariance.empirical_covariance_.EmpiricalCovariance.__init__": {
  "data": {
   "lineno": 136
  },
  "type": "function"
 },
 "sklearn.covariance.empirical_covariance_.EmpiricalCovariance._set_covariance": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "check_array",
    "scipy.linalg.pinvh"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance.empirical_covariance_.EmpiricalCovariance.error_norm": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "NotImplementedError",
    "numpy.amax",
    "numpy.dot",
    "numpy.sqrt",
    "numpy.sum",
    "scipy.linalg.svdvals"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance.empirical_covariance_.EmpiricalCovariance.fit": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "check_array",
    "numpy.zeros",
    "sklearn.covariance.empirical_covariance_.empirical_covariance"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance.empirical_covariance_.EmpiricalCovariance.get_precision": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "scipy.linalg.pinvh"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance.empirical_covariance_.EmpiricalCovariance.mahalanobis": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "len",
    "numpy.newaxis",
    "numpy.reshape",
    "pairwise_distances"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance.empirical_covariance_.EmpiricalCovariance.score": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "sklearn.covariance.empirical_covariance_.empirical_covariance",
    "sklearn.covariance.empirical_covariance_.log_likelihood"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance.empirical_covariance_.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sklearn.covariance.empirical_covariance_.empirical_covariance": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.asarray",
    "numpy.cov",
    "numpy.dot",
    "numpy.reshape",
    "sklearn.covariance.empirical_covariance_.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance.empirical_covariance_.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "sklearn.covariance.empirical_covariance_.log_likelihood": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "fast_logdet",
    "numpy.log",
    "numpy.pi",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance.empirical_covariance_.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.covariance.empirical_covariance_.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.covariance.graph_lasso_": {
  "data": {},
  "type": "module"
 },
 "sklearn.covariance.graph_lasso_.GraphLasso": {
  "data": {
   "lineno": 815,
   "symbols_in_volume": [
    "deprecated",
    "sklearn.covariance.graph_lasso_.GraphicalLasso"
   ]
  },
  "type": "class"
 },
 "sklearn.covariance.graph_lasso_.GraphLassoCV": {
  "data": {
   "lineno": 875,
   "symbols_in_volume": [
    "deprecated",
    "sklearn.covariance.graph_lasso_.GraphicalLassoCV"
   ]
  },
  "type": "class"
 },
 "sklearn.covariance.graph_lasso_.GraphicalLasso": {
  "data": {
   "lineno": 280
  },
  "type": "class"
 },
 "sklearn.covariance.graph_lasso_.GraphicalLasso.__init__": {
  "data": {
   "lineno": 335,
   "symbols_in_volume": [
    "sklearn.covariance.graph_lasso_.GraphicalLasso",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance.graph_lasso_.GraphicalLasso.fit": {
  "data": {
   "lineno": 345,
   "symbols_in_volume": [
    "check_array",
    "empirical_covariance",
    "numpy.zeros",
    "sklearn.covariance.graph_lasso_.graphical_lasso"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance.graph_lasso_.GraphicalLassoCV": {
  "data": {
   "lineno": 469,
   "symbols_in_volume": [
    "sklearn.covariance.graph_lasso_.GraphicalLasso"
   ]
  },
  "type": "class"
 },
 "sklearn.covariance.graph_lasso_.GraphicalLassoCV.__init__": {
  "data": {
   "lineno": 576,
   "symbols_in_volume": [
    "sklearn.covariance.graph_lasso_.GraphicalLassoCV",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance.graph_lasso_.GraphicalLassoCV.fit": {
  "data": {
   "lineno": 593,
   "symbols_in_volume": [
    "EmpiricalCovariance",
    "Parallel",
    "check_array",
    "check_cv",
    "cross_val_score",
    "delayed",
    "empirical_covariance",
    "enumerate",
    "int",
    "isinstance",
    "len",
    "list",
    "max",
    "numpy.array",
    "numpy.finfo",
    "numpy.float64",
    "numpy.inf",
    "numpy.isfinite",
    "numpy.log10",
    "numpy.logspace",
    "numpy.mean",
    "numpy.nan",
    "numpy.zeros",
    "print",
    "range",
    "sklearn.covariance.graph_lasso_.alpha_max",
    "sklearn.covariance.graph_lasso_.graphical_lasso",
    "sklearn.covariance.graph_lasso_.graphical_lasso_path",
    "sklearn.covariance.graph_lasso_.operator",
    "sklearn.covariance.graph_lasso_.time",
    "sklearn.covariance.graph_lasso_.warnings",
    "sorted",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance.graph_lasso_.GraphicalLassoCV.grid_scores": {
  "data": {
   "lineno": 587,
   "symbols_in_volume": [
    "deprecated",
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance.graph_lasso_.Sequence": {
  "data": {
   "shadows": "_Sequence"
  },
  "type": "import"
 },
 "sklearn.covariance.graph_lasso_._dual_gap": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.diag",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance.graph_lasso_._objective": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "log_likelihood",
    "numpy.abs",
    "numpy.diag",
    "numpy.log",
    "numpy.pi"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance.graph_lasso_.alpha_max": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.copy",
    "numpy.max"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance.graph_lasso_.graph_lasso": {
  "data": {
   "lineno": 725,
   "symbols_in_volume": [
    "deprecated",
    "numpy.finfo",
    "numpy.float64",
    "sklearn.covariance.graph_lasso_.graphical_lasso"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance.graph_lasso_.graphical_lasso": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "FloatingPointError",
    "check_random_state",
    "dict",
    "lars_path",
    "list",
    "log_likelihood",
    "numpy.abs",
    "numpy.arange",
    "numpy.ascontiguousarray",
    "numpy.dot",
    "numpy.errstate",
    "numpy.finfo",
    "numpy.float64",
    "numpy.inf",
    "numpy.isfinite",
    "numpy.log",
    "numpy.pi",
    "numpy.sum",
    "print",
    "range",
    "scipy.linalg.inv",
    "scipy.linalg.pinvh",
    "sklearn.covariance.graph_lasso_._dual_gap",
    "sklearn.covariance.graph_lasso_._objective",
    "sklearn.covariance.graph_lasso_.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance.graph_lasso_.graphical_lasso_path": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": [
    "FloatingPointError",
    "empirical_covariance",
    "list",
    "log_likelihood",
    "max",
    "numpy.inf",
    "numpy.isfinite",
    "numpy.nan",
    "print",
    "sklearn.covariance.graph_lasso_.graphical_lasso",
    "sklearn.covariance.graph_lasso_.sys"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance.graph_lasso_.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "sklearn.covariance.graph_lasso_.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.covariance.graph_lasso_.operator": {
  "data": {
   "shadows": "operator"
  },
  "type": "import"
 },
 "sklearn.covariance.graph_lasso_.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "sklearn.covariance.graph_lasso_.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "sklearn.covariance.graph_lasso_.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.covariance.robust_covariance": {
  "data": {},
  "type": "module"
 },
 "sklearn.covariance.robust_covariance.MinCovDet": {
  "data": {
   "lineno": 514,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "class"
 },
 "sklearn.covariance.robust_covariance.MinCovDet.__init__": {
  "data": {
   "lineno": 617
  },
  "type": "function"
 },
 "sklearn.covariance.robust_covariance.MinCovDet.correct_covariance": {
  "data": {
   "lineno": 673,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.allclose",
    "numpy.median",
    "numpy.sum",
    "scipy.stats.chi2"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance.robust_covariance.MinCovDet.fit": {
  "data": {
   "lineno": 624,
   "symbols_in_volume": [
    "check_array",
    "check_random_state",
    "numpy.dot",
    "numpy.sum",
    "numpy.zeros",
    "scipy.linalg.pinvh",
    "scipy.linalg.svdvals",
    "sklearn.covariance.robust_covariance.fast_mcd",
    "sklearn.covariance.robust_covariance.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance.robust_covariance.MinCovDet.reweight_covariance": {
  "data": {
   "lineno": 712,
   "symbols_in_volume": [
    "bool",
    "numpy.dot",
    "numpy.sum",
    "numpy.zeros",
    "scipy.stats.chi2"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance.robust_covariance._c_step": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "RuntimeWarning",
    "bool",
    "cov_computation_method",
    "fast_logdet",
    "numpy.allclose",
    "numpy.argsort",
    "numpy.dot",
    "numpy.inf",
    "numpy.isinf",
    "numpy.zeros",
    "print",
    "scipy.linalg.pinvh",
    "sklearn.covariance.robust_covariance.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance.robust_covariance.c_step": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "check_random_state",
    "numpy.asarray",
    "sklearn.covariance.robust_covariance._c_step"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance.robust_covariance.chi2": {
  "data": {
   "shadows": "scipy.stats.chi2"
  },
  "type": "import"
 },
 "sklearn.covariance.robust_covariance.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sklearn.covariance.robust_covariance.fast_mcd": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": [
    "MemoryError",
    "bool",
    "check_array",
    "check_random_state",
    "cov_computation_method",
    "float",
    "int",
    "max",
    "min",
    "numpy.abs",
    "numpy.arange",
    "numpy.argsort",
    "numpy.array",
    "numpy.asarray",
    "numpy.ceil",
    "numpy.dot",
    "numpy.mean",
    "numpy.min",
    "numpy.ones",
    "numpy.ravel",
    "numpy.sort",
    "numpy.var",
    "numpy.where",
    "numpy.zeros",
    "range",
    "scipy.linalg.pinvh",
    "sklearn.covariance.robust_covariance.select_candidates"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance.robust_covariance.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "sklearn.covariance.robust_covariance.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.covariance.robust_covariance.numbers": {
  "data": {
   "shadows": "numbers"
  },
  "type": "import"
 },
 "sklearn.covariance.robust_covariance.select_candidates": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "TypeError",
    "check_random_state",
    "cov_computation_method",
    "isinstance",
    "numpy.argsort",
    "numpy.asarray",
    "range",
    "sklearn.covariance.robust_covariance._c_step",
    "sklearn.covariance.robust_covariance.numbers",
    "tuple",
    "type",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance.robust_covariance.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.covariance.shrunk_covariance_": {
  "data": {},
  "type": "module"
 },
 "sklearn.covariance.shrunk_covariance_.LedoitWolf": {
  "data": {
   "lineno": 328
  },
  "type": "class"
 },
 "sklearn.covariance.shrunk_covariance_.LedoitWolf.__init__": {
  "data": {
   "lineno": 384,
   "symbols_in_volume": [
    "sklearn.covariance.shrunk_covariance_.LedoitWolf",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance.shrunk_covariance_.LedoitWolf.fit": {
  "data": {
   "lineno": 390,
   "symbols_in_volume": [
    "check_array",
    "numpy.zeros",
    "sklearn.covariance.shrunk_covariance_.ledoit_wolf"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance.shrunk_covariance_.OAS": {
  "data": {
   "lineno": 490
  },
  "type": "class"
 },
 "sklearn.covariance.shrunk_covariance_.OAS.fit": {
  "data": {
   "lineno": 545,
   "symbols_in_volume": [
    "check_array",
    "numpy.zeros",
    "sklearn.covariance.shrunk_covariance_.oas"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance.shrunk_covariance_.ShrunkCovariance": {
  "data": {
   "lineno": 65
  },
  "type": "class"
 },
 "sklearn.covariance.shrunk_covariance_.ShrunkCovariance.__init__": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "sklearn.covariance.shrunk_covariance_.ShrunkCovariance",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance.shrunk_covariance_.ShrunkCovariance.fit": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "check_array",
    "empirical_covariance",
    "numpy.zeros",
    "sklearn.covariance.shrunk_covariance_.shrunk_covariance"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance.shrunk_covariance_.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sklearn.covariance.shrunk_covariance_.ledoit_wolf": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "empirical_covariance",
    "len",
    "numpy.asarray",
    "numpy.atleast_2d",
    "numpy.reshape",
    "numpy.sum",
    "numpy.trace",
    "sklearn.covariance.shrunk_covariance_.ledoit_wolf_shrinkage",
    "sklearn.covariance.shrunk_covariance_.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance.shrunk_covariance_.ledoit_wolf_shrinkage": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "int",
    "len",
    "min",
    "numpy.asarray",
    "numpy.dot",
    "numpy.reshape",
    "numpy.sum",
    "sklearn.covariance.shrunk_covariance_.warnings",
    "slice",
    "xrange"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance.shrunk_covariance_.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.covariance.shrunk_covariance_.oas": {
  "data": {
   "lineno": 425,
   "symbols_in_volume": [
    "empirical_covariance",
    "len",
    "min",
    "numpy.asarray",
    "numpy.atleast_2d",
    "numpy.mean",
    "numpy.reshape",
    "numpy.trace",
    "sklearn.covariance.shrunk_covariance_.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance.shrunk_covariance_.shrunk_covariance": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "check_array",
    "numpy.trace"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance.shrunk_covariance_.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.covariance.tests": {
  "data": {},
  "type": "module"
 },
 "sklearn.covariance.tests.test_covariance": {
  "data": {
   "symbols_in_volume": [
    "sklearn.covariance.tests.test_covariance.X",
    "sklearn.datasets.load_diabetes"
   ]
  },
  "type": "module"
 },
 "sklearn.covariance.tests.test_covariance.EmpiricalCovariance": {
  "data": {
   "shadows": "sklearn.covariance.EmpiricalCovariance"
  },
  "type": "import"
 },
 "sklearn.covariance.tests.test_covariance.LedoitWolf": {
  "data": {
   "shadows": "sklearn.covariance.LedoitWolf"
  },
  "type": "import"
 },
 "sklearn.covariance.tests.test_covariance.OAS": {
  "data": {
   "shadows": "sklearn.covariance.OAS"
  },
  "type": "import"
 },
 "sklearn.covariance.tests.test_covariance.ShrunkCovariance": {
  "data": {
   "shadows": "sklearn.covariance.ShrunkCovariance"
  },
  "type": "import"
 },
 "sklearn.covariance.tests.test_covariance.X": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "sklearn.covariance.tests.test_covariance.X_1d": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "sklearn.covariance.tests.test_covariance._naive_ledoit_wolf_shrinkage": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "min",
    "numpy.dot",
    "numpy.sum",
    "numpy.trace",
    "sklearn.covariance.empirical_covariance",
    "sklearn.covariance.tests.test_covariance.X"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance.tests.test_covariance.assert_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "sklearn.covariance.tests.test_covariance.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.covariance.tests.test_covariance.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.covariance.tests.test_covariance.assert_greater": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_greater"
  },
  "type": "import"
 },
 "sklearn.covariance.tests.test_covariance.assert_raises": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.covariance.tests.test_covariance.assert_warns": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_warns"
  },
  "type": "import"
 },
 "sklearn.covariance.tests.test_covariance.datasets": {
  "data": {
   "shadows": "sklearn.datasets"
  },
  "type": "import"
 },
 "sklearn.covariance.tests.test_covariance.empirical_covariance": {
  "data": {
   "shadows": "sklearn.covariance.empirical_covariance"
  },
  "type": "import"
 },
 "sklearn.covariance.tests.test_covariance.ledoit_wolf": {
  "data": {
   "shadows": "sklearn.covariance.ledoit_wolf"
  },
  "type": "import"
 },
 "sklearn.covariance.tests.test_covariance.ledoit_wolf_shrinkage": {
  "data": {
   "shadows": "sklearn.covariance.ledoit_wolf_shrinkage"
  },
  "type": "import"
 },
 "sklearn.covariance.tests.test_covariance.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.covariance.tests.test_covariance.oas": {
  "data": {
   "shadows": "sklearn.covariance.oas"
  },
  "type": "import"
 },
 "sklearn.covariance.tests.test_covariance.shrunk_covariance": {
  "data": {
   "shadows": "sklearn.covariance.shrunk_covariance"
  },
  "type": "import"
 },
 "sklearn.covariance.tests.test_covariance.test_covariance": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "NotImplementedError",
    "UserWarning",
    "numpy.amin",
    "numpy.arange",
    "numpy.asarray",
    "numpy.float64",
    "numpy.zeros",
    "sklearn.covariance.EmpiricalCovariance",
    "sklearn.covariance.empirical_covariance",
    "sklearn.covariance.tests.test_covariance.X",
    "sklearn.covariance.tests.test_covariance.X_1d",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_greater",
    "sklearn.utils.testing.assert_raises",
    "sklearn.utils.testing.assert_warns"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance.tests.test_covariance.test_ledoit_wolf": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "UserWarning",
    "numpy.arange",
    "numpy.float64",
    "numpy.zeros",
    "sklearn.covariance.LedoitWolf",
    "sklearn.covariance.ShrunkCovariance",
    "sklearn.covariance.empirical_covariance",
    "sklearn.covariance.ledoit_wolf",
    "sklearn.covariance.ledoit_wolf_shrinkage",
    "sklearn.covariance.tests.test_covariance.X",
    "sklearn.covariance.tests.test_covariance.X_1d",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_warns"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance.tests.test_covariance.test_ledoit_wolf_large": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "numpy.eye",
    "numpy.random.RandomState",
    "sklearn.covariance.LedoitWolf",
    "sklearn.covariance.tests.test_covariance.X",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance.tests.test_covariance.test_ledoit_wolf_small": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "sklearn.covariance.LedoitWolf",
    "sklearn.covariance.tests.test_covariance.X",
    "sklearn.covariance.tests.test_covariance._naive_ledoit_wolf_shrinkage",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance.tests.test_covariance.test_oas": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "UserWarning",
    "numpy.arange",
    "numpy.float64",
    "numpy.zeros",
    "sklearn.covariance.OAS",
    "sklearn.covariance.ShrunkCovariance",
    "sklearn.covariance.empirical_covariance",
    "sklearn.covariance.oas",
    "sklearn.covariance.tests.test_covariance.X",
    "sklearn.covariance.tests.test_covariance.X_1d",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_warns"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance.tests.test_covariance.test_shrunk_covariance": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "sklearn.covariance.ShrunkCovariance",
    "sklearn.covariance.empirical_covariance",
    "sklearn.covariance.shrunk_covariance",
    "sklearn.covariance.tests.test_covariance.X",
    "sklearn.covariance.tests.test_covariance.X_1d",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance.tests.test_elliptic_envelope": {
  "data": {},
  "type": "module"
 },
 "sklearn.covariance.tests.test_elliptic_envelope.EllipticEnvelope": {
  "data": {
   "shadows": "sklearn.covariance.EllipticEnvelope"
  },
  "type": "import"
 },
 "sklearn.covariance.tests.test_elliptic_envelope.NotFittedError": {
  "data": {
   "shadows": "sklearn.exceptions.NotFittedError"
  },
  "type": "import"
 },
 "sklearn.covariance.tests.test_elliptic_envelope.assert_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "sklearn.covariance.tests.test_elliptic_envelope.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.covariance.tests.test_elliptic_envelope.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.covariance.tests.test_elliptic_envelope.assert_raises": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.covariance.tests.test_elliptic_envelope.assert_warns_message": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_warns_message"
  },
  "type": "import"
 },
 "sklearn.covariance.tests.test_elliptic_envelope.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.covariance.tests.test_elliptic_envelope.test_elliptic_envelope": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "numpy.ones",
    "numpy.random.RandomState",
    "sklearn.covariance.EllipticEnvelope",
    "sklearn.exceptions.NotFittedError",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_raises",
    "sum"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance.tests.test_elliptic_envelope.test_raw_values_deprecation": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "DeprecationWarning",
    "sklearn.covariance.EllipticEnvelope",
    "sklearn.utils.testing.assert_warns_message"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance.tests.test_elliptic_envelope.test_score_samples": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "sklearn.covariance.EllipticEnvelope",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance.tests.test_elliptic_envelope.test_threshold_deprecation": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "DeprecationWarning",
    "getattr",
    "sklearn.covariance.EllipticEnvelope",
    "sklearn.utils.testing.assert_warns_message"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance.tests.test_graph_lasso": {
  "data": {},
  "type": "module"
 },
 "sklearn.covariance.tests.test_graph_lasso.GraphLasso": {
  "data": {
   "shadows": "sklearn.covariance.GraphLasso"
  },
  "type": "import"
 },
 "sklearn.covariance.tests.test_graph_lasso.GraphLassoCV": {
  "data": {
   "shadows": "sklearn.covariance.GraphLassoCV"
  },
  "type": "import"
 },
 "sklearn.covariance.tests.test_graph_lasso.StringIO": {
  "data": {
   "shadows": "sklearn.externals.six.moves.StringIO"
  },
  "type": "import"
 },
 "sklearn.covariance.tests.test_graph_lasso.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.covariance.tests.test_graph_lasso.assert_array_less": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_less"
  },
  "type": "import"
 },
 "sklearn.covariance.tests.test_graph_lasso.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.covariance.tests.test_graph_lasso.assert_warns_message": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_warns_message"
  },
  "type": "import"
 },
 "sklearn.covariance.tests.test_graph_lasso.check_random_state": {
  "data": {
   "shadows": "sklearn.utils.check_random_state"
  },
  "type": "import"
 },
 "sklearn.covariance.tests.test_graph_lasso.datasets": {
  "data": {
   "shadows": "sklearn.datasets"
  },
  "type": "import"
 },
 "sklearn.covariance.tests.test_graph_lasso.empirical_covariance": {
  "data": {
   "shadows": "sklearn.covariance.empirical_covariance"
  },
  "type": "import"
 },
 "sklearn.covariance.tests.test_graph_lasso.graph_lasso": {
  "data": {
   "shadows": "sklearn.covariance.graph_lasso"
  },
  "type": "import"
 },
 "sklearn.covariance.tests.test_graph_lasso.ignore_warnings": {
  "data": {
   "shadows": "sklearn.utils.testing.ignore_warnings"
  },
  "type": "import"
 },
 "sklearn.covariance.tests.test_graph_lasso.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "sklearn.covariance.tests.test_graph_lasso.make_sparse_spd_matrix": {
  "data": {
   "shadows": "sklearn.datasets.samples_generator.make_sparse_spd_matrix"
  },
  "type": "import"
 },
 "sklearn.covariance.tests.test_graph_lasso.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.covariance.tests.test_graph_lasso.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.covariance.tests.test_graph_lasso.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "sklearn.covariance.tests.test_graph_lasso.test_deprecated_grid_scores": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "DeprecationWarning",
    "numpy.testing.assert_equal",
    "numpy.zeros",
    "scipy.linalg.inv",
    "sklearn.covariance.GraphLassoCV",
    "sklearn.covariance.graph_lasso",
    "sklearn.covariance.graph_lasso.fit",
    "sklearn.covariance.graph_lasso.grid_scores",
    "sklearn.covariance.graph_lasso.grid_scores_",
    "sklearn.covariance.tests.test_graph_lasso.pytest",
    "sklearn.datasets.samples_generator.make_sparse_spd_matrix",
    "sklearn.utils.check_random_state",
    "sklearn.utils.testing.assert_warns_message",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance.tests.test_graph_lasso.test_graph_lasso": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "DeprecationWarning",
    "dict",
    "list",
    "numpy.array",
    "numpy.diff",
    "numpy.zeros",
    "scipy.linalg.inv",
    "sklearn.covariance.GraphLasso",
    "sklearn.covariance.empirical_covariance",
    "sklearn.covariance.graph_lasso",
    "sklearn.datasets.samples_generator.make_sparse_spd_matrix",
    "sklearn.utils.check_random_state",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_array_less",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance.tests.test_graph_lasso.test_graph_lasso_cv": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "DeprecationWarning",
    "numpy.zeros",
    "scipy.linalg.inv",
    "sklearn.covariance.GraphLassoCV",
    "sklearn.covariance.tests.test_graph_lasso.pytest",
    "sklearn.covariance.tests.test_graph_lasso.sys",
    "sklearn.datasets.samples_generator.make_sparse_spd_matrix",
    "sklearn.externals.six.moves.StringIO",
    "sklearn.utils.check_random_state",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance.tests.test_graph_lasso.test_graph_lasso_iris": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "DeprecationWarning",
    "numpy.array",
    "sklearn.covariance.empirical_covariance",
    "sklearn.covariance.graph_lasso",
    "sklearn.datasets.load_iris",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance.tests.test_graph_lasso.test_graph_lasso_iris_singular": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "DeprecationWarning",
    "numpy.arange",
    "numpy.array",
    "sklearn.covariance.empirical_covariance",
    "sklearn.covariance.graph_lasso",
    "sklearn.datasets.load_iris",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance.tests.test_graphical_lasso": {
  "data": {},
  "type": "module"
 },
 "sklearn.covariance.tests.test_graphical_lasso.GraphicalLasso": {
  "data": {
   "shadows": "sklearn.covariance.GraphicalLasso"
  },
  "type": "import"
 },
 "sklearn.covariance.tests.test_graphical_lasso.GraphicalLassoCV": {
  "data": {
   "shadows": "sklearn.covariance.GraphicalLassoCV"
  },
  "type": "import"
 },
 "sklearn.covariance.tests.test_graphical_lasso.PY3_OR_LATER": {
  "data": {
   "shadows": "sklearn.utils.fixes.PY3_OR_LATER"
  },
  "type": "import"
 },
 "sklearn.covariance.tests.test_graphical_lasso.StringIO": {
  "data": {
   "shadows": "sklearn.externals.six.moves.StringIO"
  },
  "type": "import"
 },
 "sklearn.covariance.tests.test_graphical_lasso.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.covariance.tests.test_graphical_lasso.assert_array_less": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_less"
  },
  "type": "import"
 },
 "sklearn.covariance.tests.test_graphical_lasso.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.covariance.tests.test_graphical_lasso.assert_warns_message": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_warns_message"
  },
  "type": "import"
 },
 "sklearn.covariance.tests.test_graphical_lasso.check_random_state": {
  "data": {
   "shadows": "sklearn.utils.check_random_state"
  },
  "type": "import"
 },
 "sklearn.covariance.tests.test_graphical_lasso.datasets": {
  "data": {
   "shadows": "sklearn.datasets"
  },
  "type": "import"
 },
 "sklearn.covariance.tests.test_graphical_lasso.empirical_covariance": {
  "data": {
   "shadows": "sklearn.covariance.empirical_covariance"
  },
  "type": "import"
 },
 "sklearn.covariance.tests.test_graphical_lasso.graphical_lasso": {
  "data": {
   "shadows": "sklearn.covariance.graphical_lasso"
  },
  "type": "import"
 },
 "sklearn.covariance.tests.test_graphical_lasso.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "sklearn.covariance.tests.test_graphical_lasso.make_sparse_spd_matrix": {
  "data": {
   "shadows": "sklearn.datasets.samples_generator.make_sparse_spd_matrix"
  },
  "type": "import"
 },
 "sklearn.covariance.tests.test_graphical_lasso.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.covariance.tests.test_graphical_lasso.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.covariance.tests.test_graphical_lasso.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "sklearn.covariance.tests.test_graphical_lasso.test_deprecated_grid_scores": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "DeprecationWarning",
    "numpy.testing.assert_equal",
    "numpy.zeros",
    "scipy.linalg.inv",
    "sklearn.covariance.GraphicalLassoCV",
    "sklearn.covariance.graphical_lasso",
    "sklearn.covariance.graphical_lasso.fit",
    "sklearn.covariance.graphical_lasso.grid_scores",
    "sklearn.covariance.graphical_lasso.grid_scores_",
    "sklearn.covariance.tests.test_graphical_lasso.pytest",
    "sklearn.datasets.samples_generator.make_sparse_spd_matrix",
    "sklearn.utils.check_random_state",
    "sklearn.utils.fixes.PY3_OR_LATER"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance.tests.test_graphical_lasso.test_graphical_lasso": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "dict",
    "list",
    "numpy.array",
    "numpy.diff",
    "numpy.zeros",
    "scipy.linalg.inv",
    "sklearn.covariance.GraphicalLasso",
    "sklearn.covariance.empirical_covariance",
    "sklearn.covariance.graphical_lasso",
    "sklearn.datasets.samples_generator.make_sparse_spd_matrix",
    "sklearn.utils.check_random_state",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_array_less"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance.tests.test_graphical_lasso.test_graphical_lasso_cv": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "numpy.zeros",
    "scipy.linalg.inv",
    "sklearn.covariance.GraphicalLassoCV",
    "sklearn.covariance.tests.test_graphical_lasso.pytest",
    "sklearn.covariance.tests.test_graphical_lasso.sys",
    "sklearn.datasets.samples_generator.make_sparse_spd_matrix",
    "sklearn.externals.six.moves.StringIO",
    "sklearn.utils.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance.tests.test_graphical_lasso.test_graphical_lasso_iris": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.covariance.empirical_covariance",
    "sklearn.covariance.graphical_lasso",
    "sklearn.datasets.load_iris",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance.tests.test_graphical_lasso.test_graphical_lasso_iris_singular": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "sklearn.covariance.empirical_covariance",
    "sklearn.covariance.graphical_lasso",
    "sklearn.datasets.load_iris",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance.tests.test_robust_covariance": {
  "data": {
   "symbols_in_volume": [
    "sklearn.covariance.tests.test_robust_covariance.X",
    "sklearn.datasets.load_iris"
   ]
  },
  "type": "module"
 },
 "sklearn.covariance.tests.test_robust_covariance.MinCovDet": {
  "data": {
   "shadows": "sklearn.covariance.MinCovDet"
  },
  "type": "import"
 },
 "sklearn.covariance.tests.test_robust_covariance.X": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "sklearn.covariance.tests.test_robust_covariance.X_1d": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "sklearn.covariance.tests.test_robust_covariance.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.covariance.tests.test_robust_covariance.assert_raise_message": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raise_message"
  },
  "type": "import"
 },
 "sklearn.covariance.tests.test_robust_covariance.assert_warns_message": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_warns_message"
  },
  "type": "import"
 },
 "sklearn.covariance.tests.test_robust_covariance.datasets": {
  "data": {
   "shadows": "sklearn.datasets"
  },
  "type": "import"
 },
 "sklearn.covariance.tests.test_robust_covariance.empirical_covariance": {
  "data": {
   "shadows": "sklearn.covariance.empirical_covariance"
  },
  "type": "import"
 },
 "sklearn.covariance.tests.test_robust_covariance.fast_mcd": {
  "data": {
   "shadows": "sklearn.covariance.fast_mcd"
  },
  "type": "import"
 },
 "sklearn.covariance.tests.test_robust_covariance.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "sklearn.covariance.tests.test_robust_covariance.launch_mcd_on_dataset": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "bool",
    "numpy.mean",
    "numpy.ones",
    "numpy.random.RandomState",
    "numpy.sum",
    "sklearn.covariance.MinCovDet",
    "sklearn.covariance.empirical_covariance",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance.tests.test_robust_covariance.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.covariance.tests.test_robust_covariance.test_fast_mcd_on_invalid_input": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "ValueError",
    "numpy.arange",
    "sklearn.covariance.fast_mcd",
    "sklearn.covariance.tests.test_robust_covariance.X",
    "sklearn.utils.testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance.tests.test_robust_covariance.test_mcd": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "sklearn.covariance.tests.test_robust_covariance.launch_mcd_on_dataset"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance.tests.test_robust_covariance.test_mcd_class_on_invalid_input": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "ValueError",
    "numpy.arange",
    "sklearn.covariance.MinCovDet",
    "sklearn.covariance.tests.test_robust_covariance.X",
    "sklearn.utils.testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance.tests.test_robust_covariance.test_mcd_increasing_det_warning": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "RuntimeWarning",
    "sklearn.covariance.MinCovDet",
    "sklearn.covariance.tests.test_robust_covariance.X",
    "sklearn.utils.testing.assert_warns_message"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance.tests.test_robust_covariance.test_mcd_issue1127": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.covariance.MinCovDet",
    "sklearn.covariance.tests.test_robust_covariance.X"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance.tests.test_robust_covariance.test_mcd_issue3367": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "list",
    "numpy.array",
    "numpy.hstack",
    "numpy.linspace",
    "numpy.random.RandomState",
    "numpy.zeros",
    "sklearn.covariance.MinCovDet",
    "sklearn.covariance.tests.test_robust_covariance.itertools"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance.tests.test_robust_covariance.test_mcd_support_covariance_is_zero": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "sklearn.covariance.MinCovDet",
    "sklearn.covariance.tests.test_robust_covariance.X",
    "sklearn.utils.testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.cross_decomposition": {
  "data": {},
  "type": "module"
 },
 "sklearn.cross_decomposition.cca_": {
  "data": {},
  "type": "module"
 },
 "sklearn.cross_decomposition.cca_.CCA": {
  "data": {
   "lineno": 6
  },
  "type": "class"
 },
 "sklearn.cross_decomposition.cca_.CCA.__init__": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "sklearn.cross_decomposition.cca_.CCA",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.cross_decomposition.cca_.__all__": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "sklearn.cross_decomposition.pls_": {
  "data": {},
  "type": "module"
 },
 "sklearn.cross_decomposition.pls_.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "sklearn.cross_decomposition.pls_.PLSCanonical": {
  "data": {
   "lineno": 599,
   "symbols_in_volume": [
    "sklearn.cross_decomposition.pls_._PLS"
   ]
  },
  "type": "class"
 },
 "sklearn.cross_decomposition.pls_.PLSCanonical.__init__": {
  "data": {
   "lineno": 736,
   "symbols_in_volume": [
    "sklearn.cross_decomposition.pls_.PLSCanonical",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.cross_decomposition.pls_.PLSRegression": {
  "data": {
   "lineno": 459,
   "symbols_in_volume": [
    "sklearn.cross_decomposition.pls_._PLS"
   ]
  },
  "type": "class"
 },
 "sklearn.cross_decomposition.pls_.PLSRegression.__init__": {
  "data": {
   "lineno": 590,
   "symbols_in_volume": [
    "sklearn.cross_decomposition.pls_.PLSRegression",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.cross_decomposition.pls_.PLSSVD": {
  "data": {
   "lineno": 745
  },
  "type": "class"
 },
 "sklearn.cross_decomposition.pls_.PLSSVD.__init__": {
  "data": {
   "lineno": 803
  },
  "type": "function"
 },
 "sklearn.cross_decomposition.pls_.PLSSVD.fit": {
  "data": {
   "lineno": 808,
   "symbols_in_volume": [
    "ValueError",
    "check_array",
    "check_consistent_length",
    "max",
    "numpy.dot",
    "numpy.float64",
    "numpy.min",
    "scipy.linalg.svd",
    "scipy.sparse.linalg.svds",
    "sklearn.cross_decomposition.pls_._center_scale_xy",
    "str",
    "svd_flip"
   ]
  },
  "type": "function"
 },
 "sklearn.cross_decomposition.pls_.PLSSVD.fit_transform": {
  "data": {
   "lineno": 883
  },
  "type": "function"
 },
 "sklearn.cross_decomposition.pls_.PLSSVD.transform": {
  "data": {
   "lineno": 857,
   "symbols_in_volume": [
    "check_array",
    "check_is_fitted",
    "numpy.dot",
    "numpy.float64"
   ]
  },
  "type": "function"
 },
 "sklearn.cross_decomposition.pls_._PLS": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "abc.ABCMeta"
   ]
  },
  "type": "class"
 },
 "sklearn.cross_decomposition.pls_._PLS.__init__": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "sklearn.cross_decomposition.pls_._PLS.fit": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "ValueError",
    "check_array",
    "check_consistent_length",
    "numpy.all",
    "numpy.dot",
    "numpy.double",
    "numpy.finfo",
    "numpy.float64",
    "numpy.ones",
    "numpy.zeros",
    "range",
    "scipy.linalg.pinv2",
    "sklearn.cross_decomposition.pls_._center_scale_xy",
    "sklearn.cross_decomposition.pls_._nipals_twoblocks_inner_loop",
    "sklearn.cross_decomposition.pls_._svd_cross_product",
    "sklearn.cross_decomposition.pls_.warnings",
    "svd_flip"
   ]
  },
  "type": "function"
 },
 "sklearn.cross_decomposition.pls_._PLS.fit_transform": {
  "data": {
   "lineno": 439
  },
  "type": "function"
 },
 "sklearn.cross_decomposition.pls_._PLS.predict": {
  "data": {
   "lineno": 414,
   "symbols_in_volume": [
    "check_array",
    "check_is_fitted",
    "numpy.dot"
   ]
  },
  "type": "function"
 },
 "sklearn.cross_decomposition.pls_._PLS.transform": {
  "data": {
   "lineno": 376,
   "symbols_in_volume": [
    "check_array",
    "check_is_fitted",
    "numpy.dot"
   ]
  },
  "type": "function"
 },
 "sklearn.cross_decomposition.pls_.__all__": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "sklearn.cross_decomposition.pls_._center_scale_xy": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "sklearn.cross_decomposition.pls_._nipals_twoblocks_inner_loop": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.finfo",
    "numpy.sqrt",
    "scipy.linalg.pinv2",
    "sklearn.cross_decomposition.pls_.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.cross_decomposition.pls_._svd_cross_product": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "numpy.dot",
    "scipy.linalg.svd"
   ]
  },
  "type": "function"
 },
 "sklearn.cross_decomposition.pls_.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "sklearn.cross_decomposition.pls_.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.cross_decomposition.pls_.pinv2": {
  "data": {
   "shadows": "scipy.linalg.pinv2"
  },
  "type": "import"
 },
 "sklearn.cross_decomposition.pls_.svd": {
  "data": {
   "shadows": "scipy.linalg.svd"
  },
  "type": "import"
 },
 "sklearn.cross_decomposition.pls_.svds": {
  "data": {
   "shadows": "scipy.sparse.linalg.svds"
  },
  "type": "import"
 },
 "sklearn.cross_decomposition.pls_.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.cross_decomposition.tests": {
  "data": {},
  "type": "module"
 },
 "sklearn.cross_decomposition.tests.test_pls": {
  "data": {},
  "type": "module"
 },
 "sklearn.cross_decomposition.tests.test_pls.CCA": {
  "data": {
   "shadows": "sklearn.cross_decomposition.CCA"
  },
  "type": "import"
 },
 "sklearn.cross_decomposition.tests.test_pls.ConvergenceWarning": {
  "data": {
   "shadows": "sklearn.exceptions.ConvergenceWarning"
  },
  "type": "import"
 },
 "sklearn.cross_decomposition.tests.test_pls.StandardScaler": {
  "data": {
   "shadows": "sklearn.preprocessing.StandardScaler"
  },
  "type": "import"
 },
 "sklearn.cross_decomposition.tests.test_pls.assert_approx_equal": {
  "data": {
   "shadows": "numpy.testing.assert_approx_equal"
  },
  "type": "import"
 },
 "sklearn.cross_decomposition.tests.test_pls.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.cross_decomposition.tests.test_pls.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.cross_decomposition.tests.test_pls.assert_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.cross_decomposition.tests.test_pls.assert_raise_message": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raise_message"
  },
  "type": "import"
 },
 "sklearn.cross_decomposition.tests.test_pls.assert_true": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_true"
  },
  "type": "import"
 },
 "sklearn.cross_decomposition.tests.test_pls.assert_warns": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_warns"
  },
  "type": "import"
 },
 "sklearn.cross_decomposition.tests.test_pls.check_random_state": {
  "data": {
   "shadows": "sklearn.utils.check_random_state"
  },
  "type": "import"
 },
 "sklearn.cross_decomposition.tests.test_pls.load_linnerud": {
  "data": {
   "shadows": "sklearn.datasets.load_linnerud"
  },
  "type": "import"
 },
 "sklearn.cross_decomposition.tests.test_pls.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.cross_decomposition.tests.test_pls.pls_": {
  "data": {
   "shadows": "sklearn.cross_decomposition.pls_"
  },
  "type": "import"
 },
 "sklearn.cross_decomposition.tests.test_pls.test_PLSSVD": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "clf",
    "sklearn.cross_decomposition.pls_.PLSCanonical",
    "sklearn.cross_decomposition.pls_.PLSRegression",
    "sklearn.cross_decomposition.pls_.PLSSVD",
    "sklearn.datasets.load_linnerud",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.cross_decomposition.tests.test_pls.test_convergence_fail": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "sklearn.cross_decomposition.pls_.PLSCanonical",
    "sklearn.datasets.load_linnerud",
    "sklearn.exceptions.ConvergenceWarning",
    "sklearn.utils.testing.assert_warns"
   ]
  },
  "type": "function"
 },
 "sklearn.cross_decomposition.tests.test_pls.test_pls": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "check_ortho",
    "numpy.abs",
    "numpy.array",
    "numpy.concatenate",
    "numpy.dot",
    "sklearn.cross_decomposition.pls_.PLSCanonical",
    "sklearn.cross_decomposition.pls_.PLSRegression",
    "sklearn.cross_decomposition.pls_._center_scale_xy",
    "sklearn.datasets.load_linnerud",
    "sklearn.utils.check_random_state",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.cross_decomposition.tests.test_pls.test_pls.check_ortho": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "numpy.diag",
    "numpy.dot",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.cross_decomposition.tests.test_pls.test_pls_errors": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": [
    "ValueError",
    "clf",
    "clf.fit",
    "clf.n_components",
    "sklearn.cross_decomposition.pls_.PLSCanonical",
    "sklearn.cross_decomposition.pls_.PLSRegression",
    "sklearn.cross_decomposition.pls_.PLSSVD",
    "sklearn.datasets.load_linnerud",
    "sklearn.utils.testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.cross_decomposition.tests.test_pls.test_pls_scaling": {
  "data": {
   "lineno": 380,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.testing.assert_approx_equal",
    "sklearn.cross_decomposition.pls_.PLSRegression",
    "sklearn.preprocessing.StandardScaler",
    "sklearn.utils.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.cross_decomposition.tests.test_pls.test_predict_transform_copy": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": [
    "clf",
    "clf.fit",
    "clf.predict",
    "clf.transform",
    "numpy.all",
    "sklearn.cross_decomposition.pls_.PLSCanonical",
    "sklearn.datasets.load_linnerud",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.cross_decomposition.tests.test_pls.test_scale_and_stability": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": [
    "clf",
    "clf.fit_transform",
    "clf.set_params",
    "numpy.array",
    "sklearn.cross_decomposition.CCA",
    "sklearn.cross_decomposition.pls_.PLSCanonical",
    "sklearn.cross_decomposition.pls_.PLSRegression",
    "sklearn.cross_decomposition.pls_.PLSSVD",
    "sklearn.datasets.load_linnerud",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.cross_decomposition.tests.test_pls.test_univariate_pls_regression": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "clf",
    "clf.fit",
    "sklearn.cross_decomposition.pls_.PLSRegression",
    "sklearn.datasets.load_linnerud",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets": {
  "data": {},
  "type": "module"
 },
 "sklearn.datasets.__all__": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "sklearn.datasets.base": {
  "data": {
   "symbols_in_volume": [
    "collections.namedtuple"
   ]
  },
  "type": "module"
 },
 "sklearn.datasets.base.RemoteFileMetadata": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "sklearn.datasets.base._fetch_remote": {
  "data": {
   "lineno": 892,
   "symbols_in_volume": [
    "IOError",
    "os.path.dirname",
    "os.path.join",
    "sklearn.datasets.base._sha256",
    "sklearn.externals.six.moves.urllib.request.urlretrieve"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.base._pkl_filepath": {
  "data": {
   "lineno": 850,
   "symbols_in_volume": [
    "os.path.join",
    "os.path.splitext",
    "sklearn.datasets.base.sys"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.base._sha256": {
  "data": {
   "lineno": 879,
   "symbols_in_volume": [
    "open",
    "sklearn.datasets.base.hashlib"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.base.clear_data_home": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "sklearn.datasets.base.get_data_home",
    "sklearn.datasets.base.shutil"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.base.csv": {
  "data": {
   "shadows": "csv"
  },
  "type": "import"
 },
 "sklearn.datasets.base.dirname": {
  "data": {
   "shadows": "os.path.dirname"
  },
  "type": "import"
 },
 "sklearn.datasets.base.environ": {
  "data": {
   "shadows": "os.environ"
  },
  "type": "import"
 },
 "sklearn.datasets.base.exists": {
  "data": {
   "shadows": "os.path.exists"
  },
  "type": "import"
 },
 "sklearn.datasets.base.expanduser": {
  "data": {
   "shadows": "os.path.expanduser"
  },
  "type": "import"
 },
 "sklearn.datasets.base.get_data_home": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "os.environ.get",
    "os.makedirs",
    "os.path.exists",
    "os.path.expanduser",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.base.hashlib": {
  "data": {
   "shadows": "hashlib"
  },
  "type": "import"
 },
 "sklearn.datasets.base.isdir": {
  "data": {
   "shadows": "os.path.isdir"
  },
  "type": "import"
 },
 "sklearn.datasets.base.join": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "sklearn.datasets.base.listdir": {
  "data": {
   "shadows": "os.listdir"
  },
  "type": "import"
 },
 "sklearn.datasets.base.load_boston": {
  "data": {
   "lineno": 687,
   "symbols_in_volume": [
    "Bunch",
    "enumerate",
    "int",
    "next",
    "numpy.array",
    "numpy.asarray",
    "numpy.empty",
    "numpy.float64",
    "open",
    "os.path.dirname",
    "os.path.join",
    "sklearn.datasets.base.csv"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.base.load_breast_cancer": {
  "data": {
   "lineno": 403,
   "symbols_in_volume": [
    "Bunch",
    "numpy.array",
    "open",
    "os.path.dirname",
    "os.path.join",
    "sklearn.datasets.base.load_data"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.base.load_data": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "enumerate",
    "int",
    "next",
    "numpy.array",
    "numpy.asarray",
    "numpy.empty",
    "numpy.float64",
    "numpy.int",
    "open",
    "os.path.join",
    "sklearn.datasets.base.csv"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.base.load_diabetes": {
  "data": {
   "lineno": 570,
   "symbols_in_volume": [
    "Bunch",
    "numpy.loadtxt",
    "open",
    "os.path.dirname",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.base.load_digits": {
  "data": {
   "lineno": 490,
   "symbols_in_volume": [
    "Bunch",
    "numpy.arange",
    "numpy.int",
    "numpy.loadtxt",
    "open",
    "os.path.dirname",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.base.load_files": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "Bunch",
    "check_random_state",
    "enumerate",
    "len",
    "numpy.arange",
    "numpy.array",
    "open",
    "os.listdir",
    "os.path.isdir",
    "os.path.join",
    "sorted"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.base.load_iris": {
  "data": {
   "lineno": 328,
   "symbols_in_volume": [
    "Bunch",
    "open",
    "os.path.dirname",
    "os.path.join",
    "sklearn.datasets.base.load_data"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.base.load_linnerud": {
  "data": {
   "lineno": 623,
   "symbols_in_volume": [
    "Bunch",
    "numpy.loadtxt",
    "open",
    "os.path.dirname",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.base.load_sample_image": {
  "data": {
   "lineno": 809,
   "symbols_in_volume": [
    "AttributeError",
    "enumerate",
    "sklearn.datasets.base.load_sample_images"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.base.load_sample_images": {
  "data": {
   "lineno": 764,
   "symbols_in_volume": [
    "Bunch",
    "imread",
    "open",
    "os.path.dirname",
    "os.path.join",
    "sklearn.datasets.base.os"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.base.load_wine": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "Bunch",
    "open",
    "os.path.dirname",
    "os.path.join",
    "sklearn.datasets.base.load_data"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.base.makedirs": {
  "data": {
   "shadows": "os.makedirs"
  },
  "type": "import"
 },
 "sklearn.datasets.base.namedtuple": {
  "data": {
   "shadows": "collections.namedtuple"
  },
  "type": "import"
 },
 "sklearn.datasets.base.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.datasets.base.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "sklearn.datasets.base.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "sklearn.datasets.base.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "sklearn.datasets.base.splitext": {
  "data": {
   "shadows": "os.path.splitext"
  },
  "type": "import"
 },
 "sklearn.datasets.base.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "sklearn.datasets.base.urlretrieve": {
  "data": {
   "shadows": "sklearn.externals.six.moves.urllib.request.urlretrieve"
  },
  "type": "import"
 },
 "sklearn.datasets.california_housing": {
  "data": {
   "symbols_in_volume": [
    "RemoteFileMetadata",
    "__name__",
    "sklearn.datasets.california_housing.logging"
   ]
  },
  "type": "module"
 },
 "sklearn.datasets.california_housing.ARCHIVE": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "sklearn.datasets.california_housing.dirname": {
  "data": {
   "shadows": "os.path.dirname"
  },
  "type": "import"
 },
 "sklearn.datasets.california_housing.exists": {
  "data": {
   "shadows": "os.path.exists"
  },
  "type": "import"
 },
 "sklearn.datasets.california_housing.fetch_california_housing": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "Bunch",
    "IOError",
    "_fetch_remote",
    "_pkl_filepath",
    "get_data_home",
    "numpy.loadtxt",
    "open",
    "os.makedirs",
    "os.path.dirname",
    "os.path.exists",
    "os.path.join",
    "os.remove",
    "sklearn.datasets.california_housing.ARCHIVE",
    "sklearn.datasets.california_housing.logger",
    "sklearn.datasets.california_housing.tarfile"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.california_housing.join": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "sklearn.datasets.california_housing.logger": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "sklearn.datasets.california_housing.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "sklearn.datasets.california_housing.makedirs": {
  "data": {
   "shadows": "os.makedirs"
  },
  "type": "import"
 },
 "sklearn.datasets.california_housing.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.datasets.california_housing.remove": {
  "data": {
   "shadows": "os.remove"
  },
  "type": "import"
 },
 "sklearn.datasets.california_housing.tarfile": {
  "data": {
   "shadows": "tarfile"
  },
  "type": "import"
 },
 "sklearn.datasets.covtype": {
  "data": {
   "symbols_in_volume": [
    "RemoteFileMetadata",
    "__name__",
    "sklearn.datasets.covtype.logging"
   ]
  },
  "type": "module"
 },
 "sklearn.datasets.covtype.ARCHIVE": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "sklearn.datasets.covtype.GzipFile": {
  "data": {
   "shadows": "gzip.GzipFile"
  },
  "type": "import"
 },
 "sklearn.datasets.covtype.dirname": {
  "data": {
   "shadows": "os.path.dirname"
  },
  "type": "import"
 },
 "sklearn.datasets.covtype.exists": {
  "data": {
   "shadows": "os.path.exists"
  },
  "type": "import"
 },
 "sklearn.datasets.covtype.fetch_covtype": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "Bunch",
    "IOError",
    "NameError",
    "_fetch_remote",
    "_pkl_filepath",
    "check_random_state",
    "get_data_home",
    "gzip.GzipFile",
    "makedirs",
    "numpy.arange",
    "numpy.genfromtxt",
    "numpy.int32",
    "open",
    "os.path.dirname",
    "os.path.exists",
    "os.path.join",
    "os.remove",
    "sklearn.datasets.covtype.ARCHIVE",
    "sklearn.datasets.covtype.logger"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.covtype.join": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "sklearn.datasets.covtype.logger": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "sklearn.datasets.covtype.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "sklearn.datasets.covtype.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.datasets.covtype.remove": {
  "data": {
   "shadows": "os.remove"
  },
  "type": "import"
 },
 "sklearn.datasets.kddcup99": {
  "data": {
   "symbols_in_volume": [
    "RemoteFileMetadata",
    "__name__",
    "sklearn.datasets.kddcup99.logging"
   ]
  },
  "type": "module"
 },
 "sklearn.datasets.kddcup99.ARCHIVE": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "sklearn.datasets.kddcup99.ARCHIVE_10_PERCENT": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "sklearn.datasets.kddcup99.GzipFile": {
  "data": {
   "shadows": "gzip.GzipFile"
  },
  "type": "import"
 },
 "sklearn.datasets.kddcup99._fetch_brute_kddcup99": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "Bunch",
    "IOError",
    "NameError",
    "_fetch_remote",
    "float",
    "get_data_home",
    "gzip.GzipFile",
    "int",
    "numpy.asarray",
    "numpy.dtype",
    "object",
    "os.path.exists",
    "os.path.join",
    "range",
    "sklearn.datasets.kddcup99.ARCHIVE",
    "sklearn.datasets.kddcup99.ARCHIVE_10_PERCENT",
    "sklearn.datasets.kddcup99._mkdirp",
    "sklearn.datasets.kddcup99.logger",
    "sklearn.datasets.kddcup99.os",
    "sklearn.datasets.kddcup99.sys"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.kddcup99._mkdirp": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "OSError",
    "sklearn.datasets.kddcup99.errno",
    "sklearn.datasets.kddcup99.os"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.kddcup99.dirname": {
  "data": {
   "shadows": "os.path.dirname"
  },
  "type": "import"
 },
 "sklearn.datasets.kddcup99.errno": {
  "data": {
   "shadows": "errno"
  },
  "type": "import"
 },
 "sklearn.datasets.kddcup99.exists": {
  "data": {
   "shadows": "os.path.exists"
  },
  "type": "import"
 },
 "sklearn.datasets.kddcup99.fetch_kddcup99": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "Bunch",
    "check_random_state",
    "float",
    "get_data_home",
    "numpy.c_",
    "numpy.log",
    "numpy.logical_not",
    "numpy.r_",
    "open",
    "os.path.dirname",
    "os.path.join",
    "sklearn.datasets.kddcup99._fetch_brute_kddcup99"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.kddcup99.join": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "sklearn.datasets.kddcup99.logger": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "sklearn.datasets.kddcup99.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "sklearn.datasets.kddcup99.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.datasets.kddcup99.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "sklearn.datasets.kddcup99.shuffle_method": {
  "data": {
   "shadows": "shuffle"
  },
  "type": "import"
 },
 "sklearn.datasets.kddcup99.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "sklearn.datasets.lfw": {
  "data": {
   "symbols_in_volume": [
    "RemoteFileMetadata",
    "__name__",
    "sklearn.datasets.lfw.logging"
   ]
  },
  "type": "module"
 },
 "sklearn.datasets.lfw.ARCHIVE": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "sklearn.datasets.lfw.FUNNELED_ARCHIVE": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "sklearn.datasets.lfw.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "sklearn.datasets.lfw.TARGETS": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "sklearn.datasets.lfw._check_fetch_lfw": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "IOError",
    "_fetch_remote",
    "get_data_home",
    "os.makedirs",
    "os.path.exists",
    "os.path.join",
    "os.remove",
    "sklearn.datasets.lfw.ARCHIVE",
    "sklearn.datasets.lfw.FUNNELED_ARCHIVE",
    "sklearn.datasets.lfw.TARGETS",
    "sklearn.datasets.lfw.logger",
    "sklearn.datasets.lfw.tarfile"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.lfw._fetch_lfw_pairs": {
  "data": {
   "lineno": 363,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "b",
    "enumerate",
    "int",
    "len",
    "list",
    "numpy.array",
    "numpy.int",
    "numpy.zeros",
    "open",
    "os.listdir",
    "os.path.join",
    "sklearn.datasets.lfw._load_imgs",
    "sorted",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.lfw._fetch_lfw_people": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.arange",
    "numpy.random.RandomState",
    "numpy.searchsorted",
    "numpy.unique",
    "os.listdir",
    "os.path.isdir",
    "os.path.join",
    "sklearn.datasets.lfw._load_imgs",
    "sorted"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.lfw._load_imgs": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "RuntimeError",
    "enumerate",
    "float",
    "imread",
    "imresize",
    "int",
    "len",
    "numpy.asarray",
    "numpy.float32",
    "numpy.zeros",
    "sklearn.datasets.lfw.logger",
    "slice",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.lfw.dirname": {
  "data": {
   "shadows": "os.path.dirname"
  },
  "type": "import"
 },
 "sklearn.datasets.lfw.exists": {
  "data": {
   "shadows": "os.path.exists"
  },
  "type": "import"
 },
 "sklearn.datasets.lfw.fetch_lfw_pairs": {
  "data": {
   "lineno": 414,
   "symbols_in_volume": [
    "Bunch",
    "Memory",
    "ValueError",
    "distutils.version.LooseVersion",
    "len",
    "list",
    "load_func",
    "open",
    "os.path.dirname",
    "os.path.join",
    "sklearn.datasets.lfw._check_fetch_lfw",
    "sklearn.datasets.lfw._fetch_lfw_pairs",
    "sklearn.datasets.lfw.logger",
    "slice",
    "sorted"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.lfw.fetch_lfw_people": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "Bunch",
    "Memory",
    "distutils.version.LooseVersion",
    "len",
    "load_func",
    "open",
    "os.path.dirname",
    "os.path.join",
    "sklearn.datasets.lfw._check_fetch_lfw",
    "sklearn.datasets.lfw._fetch_lfw_people",
    "sklearn.datasets.lfw.logger",
    "slice"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.lfw.isdir": {
  "data": {
   "shadows": "os.path.isdir"
  },
  "type": "import"
 },
 "sklearn.datasets.lfw.joblib_version": {
  "data": {
   "shadows": "__version__"
  },
  "type": "import"
 },
 "sklearn.datasets.lfw.join": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "sklearn.datasets.lfw.listdir": {
  "data": {
   "shadows": "os.listdir"
  },
  "type": "import"
 },
 "sklearn.datasets.lfw.logger": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "sklearn.datasets.lfw.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "sklearn.datasets.lfw.makedirs": {
  "data": {
   "shadows": "os.makedirs"
  },
  "type": "import"
 },
 "sklearn.datasets.lfw.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.datasets.lfw.remove": {
  "data": {
   "shadows": "os.remove"
  },
  "type": "import"
 },
 "sklearn.datasets.lfw.scale_face": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "deprecated"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.lfw.tarfile": {
  "data": {
   "shadows": "tarfile"
  },
  "type": "import"
 },
 "sklearn.datasets.mlcomp": {
  "data": {
   "symbols_in_volume": [
    "sklearn.datasets.mlcomp._load_document_classification"
   ]
  },
  "type": "module"
 },
 "sklearn.datasets.mlcomp.LOADERS": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "sklearn.datasets.mlcomp._load_document_classification": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "sklearn.datasets.base.load_files",
    "sklearn.datasets.mlcomp.os"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.mlcomp.deprecated": {
  "data": {
   "shadows": "sklearn.utils.deprecated"
  },
  "type": "import"
 },
 "sklearn.datasets.mlcomp.load_files": {
  "data": {
   "shadows": "sklearn.datasets.base.load_files"
  },
  "type": "import"
 },
 "sklearn.datasets.mlcomp.load_mlcomp": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "dict",
    "format",
    "isinstance",
    "loader",
    "open",
    "sklearn.datasets.mlcomp.LOADERS",
    "sklearn.datasets.mlcomp.numbers",
    "sklearn.datasets.mlcomp.os",
    "sklearn.utils.deprecated",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.mlcomp.numbers": {
  "data": {
   "shadows": "numbers"
  },
  "type": "import"
 },
 "sklearn.datasets.mlcomp.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "sklearn.datasets.mldata": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "sklearn.datasets.mldata.HTTPError": {
  "data": {
   "shadows": "urllib.error.HTTPError"
  },
  "type": "import"
 },
 "sklearn.datasets.mldata.MLDATA_BASE_URL": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "sklearn.datasets.mldata.copyfileobj": {
  "data": {
   "shadows": "shutil.copyfileobj"
  },
  "type": "import"
 },
 "sklearn.datasets.mldata.exists": {
  "data": {
   "shadows": "os.path.exists"
  },
  "type": "import"
 },
 "sklearn.datasets.mldata.fetch_mldata": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "Bunch",
    "deprecated",
    "get_data_home",
    "isinstance",
    "len",
    "open",
    "os.path.exists",
    "os.path.join",
    "scipy.io.loadmat",
    "scipy.sparse.issparse",
    "shutil.copyfileobj",
    "sklearn.datasets.mldata.MLDATA_BASE_URL",
    "sklearn.datasets.mldata.mldata_filename",
    "sklearn.datasets.mldata.numbers",
    "sklearn.datasets.mldata.os",
    "str",
    "urllib.error.HTTPError",
    "urllib.parse.quote",
    "urllib.request.urlopen"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.mldata.install_mldata_mock": {
  "data": {
   "shadows": "sklearn.utils.testing.install_mldata_mock"
  },
  "type": "import"
 },
 "sklearn.datasets.mldata.io": {
  "data": {
   "shadows": "scipy.io"
  },
  "type": "import"
 },
 "sklearn.datasets.mldata.join": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "sklearn.datasets.mldata.mldata_filename": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "deprecated",
    "sklearn.datasets.mldata.re"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.mldata.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.datasets.mldata.numbers": {
  "data": {
   "shadows": "numbers"
  },
  "type": "import"
 },
 "sklearn.datasets.mldata.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "sklearn.datasets.mldata.quote": {
  "data": {
   "shadows": "urllib.parse.quote"
  },
  "type": "import"
 },
 "sklearn.datasets.mldata.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "sklearn.datasets.mldata.setup_module": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "numpy.empty",
    "sklearn.utils.testing.install_mldata_mock"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.mldata.sp": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "sklearn.datasets.mldata.teardown_module": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "sklearn.utils.testing.uninstall_mldata_mock"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.mldata.uninstall_mldata_mock": {
  "data": {
   "shadows": "sklearn.utils.testing.uninstall_mldata_mock"
  },
  "type": "import"
 },
 "sklearn.datasets.mldata.urlopen": {
  "data": {
   "shadows": "urllib.request.urlopen"
  },
  "type": "import"
 },
 "sklearn.datasets.olivetti_faces": {
  "data": {
   "symbols_in_volume": [
    "RemoteFileMetadata"
   ]
  },
  "type": "module"
 },
 "sklearn.datasets.olivetti_faces.FACES": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "sklearn.datasets.olivetti_faces.dirname": {
  "data": {
   "shadows": "os.path.dirname"
  },
  "type": "import"
 },
 "sklearn.datasets.olivetti_faces.exists": {
  "data": {
   "shadows": "os.path.exists"
  },
  "type": "import"
 },
 "sklearn.datasets.olivetti_faces.fetch_olivetti_faces": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "Bunch",
    "IOError",
    "_fetch_remote",
    "_pkl_filepath",
    "check_random_state",
    "get_data_home",
    "len",
    "numpy.array",
    "numpy.float32",
    "open",
    "os.makedirs",
    "os.path.dirname",
    "os.path.exists",
    "os.path.join",
    "os.remove",
    "print",
    "range",
    "scipy.io.matlab.loadmat",
    "sklearn.datasets.olivetti_faces.FACES"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.olivetti_faces.join": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "sklearn.datasets.olivetti_faces.loadmat": {
  "data": {
   "shadows": "scipy.io.matlab.loadmat"
  },
  "type": "import"
 },
 "sklearn.datasets.olivetti_faces.makedirs": {
  "data": {
   "shadows": "os.makedirs"
  },
  "type": "import"
 },
 "sklearn.datasets.olivetti_faces.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.datasets.olivetti_faces.remove": {
  "data": {
   "shadows": "os.remove"
  },
  "type": "import"
 },
 "sklearn.datasets.openml": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "sklearn.datasets.openml.Request": {
  "data": {
   "shadows": "urllib2.Request"
  },
  "type": "import"
 },
 "sklearn.datasets.openml._DATA_FEATURES": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "sklearn.datasets.openml._DATA_FILE": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "sklearn.datasets.openml._DATA_INFO": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "sklearn.datasets.openml._OPENML_PREFIX": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "sklearn.datasets.openml._SEARCH_NAME": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "sklearn.datasets.openml.__all__": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "sklearn.datasets.openml._arff": {
  "data": {
   "shadows": "sklearn.externals._arff"
  },
  "type": "import"
 },
 "sklearn.datasets.openml._convert_arff_data": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "len",
    "list",
    "max",
    "numpy.array",
    "numpy.float64",
    "sklearn.datasets.openml._sparse_data_to_array",
    "sklearn.datasets.openml._split_sparse_columns",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.openml._download_data_arff": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": [
    "sklearn.datasets.openml._DATA_FILE",
    "sklearn.datasets.openml._open_openml_url",
    "sklearn.externals._arff.COO",
    "sklearn.externals._arff.DENSE",
    "sklearn.externals._arff.load",
    "sklearn.externals._arff.loads"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.openml._get_data_description_by_id": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "sklearn.datasets.openml._DATA_INFO",
    "sklearn.datasets.openml._get_json_content_from_openml_api"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.openml._get_data_features": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": [
    "sklearn.datasets.openml._DATA_FEATURES",
    "sklearn.datasets.openml._get_json_content_from_openml_api"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.openml._get_data_info_by_name": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "len",
    "sklearn.datasets.openml._SEARCH_NAME",
    "sklearn.datasets.openml._get_json_content_from_openml_api",
    "warnings.warn"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.openml._get_json_content_from_openml_api": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.datasets.openml._open_openml_url",
    "sklearn.datasets.openml.json"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.openml._open_openml_url": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "BytesIO",
    "Exception",
    "OSError",
    "open",
    "sklearn.datasets.openml._OPENML_PREFIX",
    "sklearn.datasets.openml.gzip",
    "sklearn.datasets.openml.os",
    "sklearn.datasets.openml.shutil",
    "urllib2.Request",
    "urllib2.urlopen"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.openml._sparse_data_to_array": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "max",
    "numpy.empty",
    "numpy.float64",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.openml._split_sparse_columns": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "enumerate",
    "list",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.openml._verify_target_data_type": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "isinstance",
    "len",
    "list",
    "numpy.float64",
    "object",
    "set",
    "type",
    "warnings.warn"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.openml.fetch_openml": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": [
    "Bunch",
    "TypeError",
    "ValueError",
    "all",
    "any",
    "enumerate",
    "get_data_home",
    "int",
    "isinstance",
    "list",
    "numpy.asarray",
    "numpy.hstack",
    "numpy.take",
    "os.path.join",
    "sklearn.datasets.openml._convert_arff_data",
    "sklearn.datasets.openml._download_data_arff",
    "sklearn.datasets.openml._get_data_description_by_id",
    "sklearn.datasets.openml._get_data_features",
    "sklearn.datasets.openml._get_data_info_by_name",
    "sklearn.datasets.openml._verify_target_data_type",
    "type",
    "warnings.warn"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.openml.gzip": {
  "data": {
   "shadows": "gzip"
  },
  "type": "import"
 },
 "sklearn.datasets.openml.join": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "sklearn.datasets.openml.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "sklearn.datasets.openml.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.datasets.openml.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "sklearn.datasets.openml.scipy.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.datasets.openml.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "sklearn.datasets.openml.urlopen": {
  "data": {
   "shadows": "urllib2.urlopen"
  },
  "type": "import"
 },
 "sklearn.datasets.openml.warn": {
  "data": {
   "shadows": "warnings.warn"
  },
  "type": "import"
 },
 "sklearn.datasets.rcv1": {
  "data": {
   "symbols_in_volume": [
    "RemoteFileMetadata",
    "__name__",
    "sklearn.datasets.rcv1.logging"
   ]
  },
  "type": "module"
 },
 "sklearn.datasets.rcv1.GzipFile": {
  "data": {
   "shadows": "gzip.GzipFile"
  },
  "type": "import"
 },
 "sklearn.datasets.rcv1.TOPICS_METADATA": {
  "data": {
   "lineno": 70
  },
  "type": "constant"
 },
 "sklearn.datasets.rcv1.XY_METADATA": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "sklearn.datasets.rcv1._find_permutation": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "numpy.argsort",
    "sklearn.datasets.rcv1._inverse_permutation"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.rcv1._inverse_permutation": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.int32",
    "numpy.put",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.rcv1.dirname": {
  "data": {
   "shadows": "os.path.dirname"
  },
  "type": "import"
 },
 "sklearn.datasets.rcv1.exists": {
  "data": {
   "shadows": "os.path.exists"
  },
  "type": "import"
 },
 "sklearn.datasets.rcv1.fetch_rcv1": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "Bunch",
    "ValueError",
    "_fetch_remote",
    "_pkl_filepath",
    "get_data_home",
    "gzip.GzipFile",
    "int",
    "len",
    "load_svmlight_files",
    "makedirs",
    "numpy.argsort",
    "numpy.empty",
    "numpy.hstack",
    "numpy.int32",
    "numpy.uint32",
    "numpy.uint8",
    "numpy.zeros",
    "object",
    "open",
    "os.path.dirname",
    "os.path.exists",
    "os.path.join",
    "os.remove",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.vstack",
    "sklearn.datasets.rcv1.TOPICS_METADATA",
    "sklearn.datasets.rcv1.XY_METADATA",
    "sklearn.datasets.rcv1._find_permutation",
    "sklearn.datasets.rcv1.logger"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.rcv1.join": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "sklearn.datasets.rcv1.logger": {
  "data": {
   "lineno": 76
  },
  "type": "constant"
 },
 "sklearn.datasets.rcv1.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "sklearn.datasets.rcv1.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.datasets.rcv1.remove": {
  "data": {
   "shadows": "os.remove"
  },
  "type": "import"
 },
 "sklearn.datasets.rcv1.shuffle_": {
  "data": {
   "shadows": "shuffle"
  },
  "type": "import"
 },
 "sklearn.datasets.rcv1.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.datasets.samples_generator": {
  "data": {},
  "type": "module"
 },
 "sklearn.datasets.samples_generator.Iterable": {
  "data": {
   "shadows": "_Iterable"
  },
  "type": "import"
 },
 "sklearn.datasets.samples_generator._generate_hypercube": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "numpy.hstack",
    "numpy.unpackbits",
    "sample_without_replacement"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.samples_generator._shuffle": {
  "data": {
   "lineno": 1501,
   "symbols_in_volume": [
    "check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.samples_generator.array": {
  "data": {
   "shadows": "array"
  },
  "type": "import"
 },
 "sklearn.datasets.samples_generator.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "sklearn.datasets.samples_generator.make_biclusters": {
  "data": {
   "lineno": 1510,
   "symbols_in_volume": [
    "check_random_state",
    "list",
    "numpy.float64",
    "numpy.hstack",
    "numpy.outer",
    "numpy.repeat",
    "numpy.vstack",
    "numpy.zeros",
    "range",
    "sklearn.datasets.samples_generator._shuffle",
    "sklearn.datasets.samples_generator.zip"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.samples_generator.make_blobs": {
  "data": {
   "lineno": 699,
   "symbols_in_volume": [
    "AssertionError",
    "TypeError",
    "ValueError",
    "check_array",
    "check_random_state",
    "enumerate",
    "hasattr",
    "int",
    "isinstance",
    "len",
    "numpy.arange",
    "numpy.array",
    "numpy.concatenate",
    "numpy.full",
    "numpy.sum",
    "range",
    "sklearn.datasets.samples_generator.numbers",
    "sklearn.datasets.samples_generator.zip"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.samples_generator.make_checkerboard": {
  "data": {
   "lineno": 1601,
   "symbols_in_volume": [
    "check_random_state",
    "hasattr",
    "list",
    "numpy.float64",
    "numpy.hstack",
    "numpy.outer",
    "numpy.repeat",
    "numpy.vstack",
    "numpy.zeros",
    "range",
    "sklearn.datasets.samples_generator._shuffle",
    "sklearn.datasets.samples_generator.zip"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.samples_generator.make_circles": {
  "data": {
   "lineno": 578,
   "symbols_in_volume": [
    "ValueError",
    "check_random_state",
    "numpy.append",
    "numpy.cos",
    "numpy.hstack",
    "numpy.intp",
    "numpy.linspace",
    "numpy.ones",
    "numpy.pi",
    "numpy.sin",
    "numpy.vstack",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.samples_generator.make_classification": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "ValueError",
    "check_random_state",
    "enumerate",
    "float",
    "int",
    "len",
    "numpy.arange",
    "numpy.dot",
    "numpy.int",
    "numpy.intp",
    "numpy.zeros",
    "range",
    "sklearn.datasets.samples_generator._generate_hypercube",
    "sum"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.samples_generator.make_friedman1": {
  "data": {
   "lineno": 841,
   "symbols_in_volume": [
    "ValueError",
    "check_random_state",
    "numpy.pi",
    "numpy.sin"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.samples_generator.make_friedman2": {
  "data": {
   "lineno": 903,
   "symbols_in_volume": [
    "check_random_state",
    "numpy.pi"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.samples_generator.make_friedman3": {
  "data": {
   "lineno": 968,
   "symbols_in_volume": [
    "check_random_state",
    "numpy.arctan",
    "numpy.pi"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.samples_generator.make_gaussian_quantiles": {
  "data": {
   "lineno": 1415,
   "symbols_in_volume": [
    "ValueError",
    "check_random_state",
    "numpy.arange",
    "numpy.argsort",
    "numpy.array",
    "numpy.hstack",
    "numpy.identity",
    "numpy.newaxis",
    "numpy.repeat",
    "numpy.sum",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.samples_generator.make_hastie_10_2": {
  "data": {
   "lineno": 408,
   "symbols_in_volume": [
    "check_random_state",
    "numpy.float64"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.samples_generator.make_low_rank_matrix": {
  "data": {
   "lineno": 1032,
   "symbols_in_volume": [
    "check_random_state",
    "min",
    "numpy.arange",
    "numpy.dot",
    "numpy.exp",
    "numpy.float64",
    "numpy.identity",
    "scipy.linalg.qr"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.samples_generator.make_moons": {
  "data": {
   "lineno": 644,
   "symbols_in_volume": [
    "check_random_state",
    "numpy.append",
    "numpy.cos",
    "numpy.hstack",
    "numpy.intp",
    "numpy.linspace",
    "numpy.ones",
    "numpy.pi",
    "numpy.sin",
    "numpy.vstack",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.samples_generator.make_multilabel_classification": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "MultiLabelBinarizer",
    "ValueError",
    "check_random_state",
    "len",
    "numpy.cumsum",
    "numpy.float64",
    "numpy.ones",
    "numpy.sum",
    "range",
    "sample_example",
    "scipy.sparse.csr_matrix",
    "sklearn.datasets.samples_generator.array"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.samples_generator.make_multilabel_classification.sample_example": {
  "data": {
   "lineno": 347,
   "symbols_in_volume": [
    "len",
    "list",
    "numpy.searchsorted",
    "set"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.samples_generator.make_regression": {
  "data": {
   "lineno": 456,
   "symbols_in_volume": [
    "check_random_state",
    "min",
    "numpy.arange",
    "numpy.dot",
    "numpy.squeeze",
    "numpy.zeros",
    "sklearn.datasets.samples_generator.make_low_rank_matrix"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.samples_generator.make_s_curve": {
  "data": {
   "lineno": 1373,
   "symbols_in_volume": [
    "check_random_state",
    "numpy.concatenate",
    "numpy.cos",
    "numpy.pi",
    "numpy.sign",
    "numpy.sin",
    "numpy.squeeze"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.samples_generator.make_sparse_coded_signal": {
  "data": {
   "lineno": 1101,
   "symbols_in_volume": [
    "check_random_state",
    "numpy.arange",
    "numpy.dot",
    "numpy.sqrt",
    "numpy.squeeze",
    "numpy.sum",
    "numpy.zeros",
    "range",
    "sklearn.datasets.samples_generator.map"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.samples_generator.make_sparse_spd_matrix": {
  "data": {
   "lineno": 1247,
   "symbols_in_volume": [
    "check_random_state",
    "numpy.diag",
    "numpy.dot",
    "numpy.eye",
    "numpy.sqrt",
    "numpy.sum",
    "numpy.tril"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.samples_generator.make_sparse_uncorrelated": {
  "data": {
   "lineno": 1163,
   "symbols_in_volume": [
    "check_random_state",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.samples_generator.make_spd_matrix": {
  "data": {
   "lineno": 1214,
   "symbols_in_volume": [
    "check_random_state",
    "numpy.diag",
    "numpy.dot",
    "scipy.linalg.svd"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.samples_generator.make_swiss_roll": {
  "data": {
   "lineno": 1321,
   "symbols_in_volume": [
    "check_random_state",
    "numpy.concatenate",
    "numpy.cos",
    "numpy.pi",
    "numpy.sin",
    "numpy.squeeze"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.samples_generator.map": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "sklearn.datasets.samples_generator.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.datasets.samples_generator.numbers": {
  "data": {
   "shadows": "numbers"
  },
  "type": "import"
 },
 "sklearn.datasets.samples_generator.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.datasets.samples_generator.util_shuffle": {
  "data": {
   "shadows": "shuffle"
  },
  "type": "import"
 },
 "sklearn.datasets.samples_generator.zip": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "sklearn.datasets.setup": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.distutils.core.setup",
    "sklearn.datasets.setup.configuration"
   ]
  },
  "type": "module"
 },
 "sklearn.datasets.setup.Configuration": {
  "data": {
   "shadows": "numpy.distutils.misc_util.Configuration"
  },
  "type": "import"
 },
 "sklearn.datasets.setup.configuration": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "numpy.distutils.misc_util.Configuration",
    "sklearn.datasets.setup.numpy",
    "sklearn.datasets.setup.os",
    "sklearn.datasets.setup.platform"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.setup.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.datasets.setup.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "sklearn.datasets.setup.platform": {
  "data": {
   "shadows": "platform"
  },
  "type": "import"
 },
 "sklearn.datasets.setup.setup": {
  "data": {
   "shadows": "numpy.distutils.core.setup"
  },
  "type": "import"
 },
 "sklearn.datasets.species_distributions": {
  "data": {
   "symbols_in_volume": [
    "RemoteFileMetadata",
    "__name__",
    "sklearn.datasets.species_distributions.logging",
    "sklearn.datasets.species_distributions.sys"
   ]
  },
  "type": "module"
 },
 "sklearn.datasets.species_distributions.BytesIO": {
  "data": {
   "shadows": "io.BytesIO"
  },
  "type": "import"
 },
 "sklearn.datasets.species_distributions.COVERAGES": {
  "data": {
   "lineno": 68
  },
  "type": "constant"
 },
 "sklearn.datasets.species_distributions.DATA_ARCHIVE_NAME": {
  "data": {
   "lineno": 74
  },
  "type": "constant"
 },
 "sklearn.datasets.species_distributions.PY3_OR_LATER": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "sklearn.datasets.species_distributions.SAMPLES": {
  "data": {
   "lineno": 60
  },
  "type": "constant"
 },
 "sklearn.datasets.species_distributions._load_coverage": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "dict",
    "float",
    "int",
    "make_tuple",
    "numpy.int16",
    "numpy.loadtxt",
    "range"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.species_distributions._load_csv": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "numpy.loadtxt",
    "sklearn.datasets.species_distributions.PY3_OR_LATER"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.species_distributions._pkl_filepath": {
  "data": {
   "shadows": "sklearn.datasets.base._pkl_filepath"
  },
  "type": "import"
 },
 "sklearn.datasets.species_distributions.construct_grids": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.species_distributions.exists": {
  "data": {
   "shadows": "os.path.exists"
  },
  "type": "import"
 },
 "sklearn.datasets.species_distributions.fetch_species_distributions": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "Bunch",
    "IOError",
    "_fetch_remote",
    "dict",
    "get_data_home",
    "io.BytesIO",
    "numpy.asarray",
    "numpy.int16",
    "numpy.load",
    "os.makedirs",
    "os.path.exists",
    "os.remove",
    "sklearn.datasets.base._pkl_filepath",
    "sklearn.datasets.species_distributions.COVERAGES",
    "sklearn.datasets.species_distributions.DATA_ARCHIVE_NAME",
    "sklearn.datasets.species_distributions.SAMPLES",
    "sklearn.datasets.species_distributions._load_coverage",
    "sklearn.datasets.species_distributions._load_csv",
    "sklearn.datasets.species_distributions.logger",
    "sklearn.externals.joblib.dump",
    "sklearn.externals.joblib.load"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.species_distributions.joblib": {
  "data": {
   "shadows": "sklearn.externals.joblib"
  },
  "type": "import"
 },
 "sklearn.datasets.species_distributions.logger": {
  "data": {
   "lineno": 77
  },
  "type": "constant"
 },
 "sklearn.datasets.species_distributions.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "sklearn.datasets.species_distributions.makedirs": {
  "data": {
   "shadows": "os.makedirs"
  },
  "type": "import"
 },
 "sklearn.datasets.species_distributions.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.datasets.species_distributions.remove": {
  "data": {
   "shadows": "os.remove"
  },
  "type": "import"
 },
 "sklearn.datasets.species_distributions.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "sklearn.datasets.svmlight_format": {
  "data": {},
  "type": "module"
 },
 "sklearn.datasets.svmlight_format.BZ2File": {
  "data": {
   "shadows": "bz2.BZ2File"
  },
  "type": "import"
 },
 "sklearn.datasets.svmlight_format._dump_svmlight": {
  "data": {
   "lineno": 328,
   "symbols_in_volume": [
    "b",
    "hasattr",
    "int",
    "numpy.where",
    "range",
    "slice",
    "u",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.svmlight_format._gen_open": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "TypeError",
    "bz2.BZ2File",
    "int",
    "isinstance",
    "open",
    "sklearn.datasets.svmlight_format.gzip",
    "sklearn.datasets.svmlight_format.io",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.svmlight_format._load_svmlight_file": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.svmlight_format._open_and_load": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "contextlib.closing",
    "hasattr",
    "numpy.asarray",
    "numpy.float64",
    "numpy.frombuffer",
    "numpy.int64",
    "numpy.intc",
    "sklearn.datasets.svmlight_format._gen_open",
    "sklearn.datasets.svmlight_format._load_svmlight_file"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.svmlight_format.closing": {
  "data": {
   "shadows": "contextlib.closing"
  },
  "type": "import"
 },
 "sklearn.datasets.svmlight_format.dump_svmlight_file": {
  "data": {
   "lineno": 385,
   "symbols_in_volume": [
    "ValueError",
    "bytes",
    "check_array",
    "hasattr",
    "isinstance",
    "numpy.asarray",
    "open",
    "scipy.sparse.issparse",
    "sklearn.datasets.svmlight_format._dump_svmlight"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.svmlight_format.gzip": {
  "data": {
   "shadows": "gzip"
  },
  "type": "import"
 },
 "sklearn.datasets.svmlight_format.io": {
  "data": {
   "shadows": "io"
  },
  "type": "import"
 },
 "sklearn.datasets.svmlight_format.load_svmlight_file": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "numpy.float64",
    "sklearn.datasets.svmlight_format.load_svmlight_files",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.svmlight_format.load_svmlight_files": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "ValueError",
    "all",
    "bool",
    "len",
    "max",
    "numpy.float64",
    "numpy.min",
    "scipy.sparse.csr_matrix",
    "sklearn.datasets.svmlight_format._open_and_load"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.svmlight_format.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.datasets.svmlight_format.os.path": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "sklearn.datasets.svmlight_format.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.datasets.tests": {
  "data": {},
  "type": "module"
 },
 "sklearn.datasets.tests.test_20news": {
  "data": {},
  "type": "module"
 },
 "sklearn.datasets.tests.test_20news.SkipTest": {
  "data": {
   "shadows": "sklearn.utils.testing.SkipTest"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_20news.assert_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_20news.assert_true": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_true"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_20news.check_return_X_y": {
  "data": {
   "shadows": "sklearn.datasets.tests.test_common.check_return_X_y"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_20news.datasets": {
  "data": {
   "shadows": "sklearn.datasets"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_20news.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_20news.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_20news.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_20news.test_20news": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "IOError",
    "len",
    "numpy.unique",
    "numpy.where",
    "sklearn.datasets.fetch_20newsgroups",
    "sklearn.utils.testing.SkipTest",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_20news.test_20news_length_consistency": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "IOError",
    "len",
    "sklearn.datasets.fetch_20newsgroups",
    "sklearn.utils.testing.SkipTest",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_20news.test_20news_vectorized": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "IOError",
    "functools.partial",
    "numpy.float64",
    "scipy.sparse.isspmatrix_csr",
    "sklearn.datasets.fetch_20newsgroups",
    "sklearn.datasets.fetch_20newsgroups_vectorized",
    "sklearn.datasets.tests.test_common.check_return_X_y",
    "sklearn.utils.testing.SkipTest",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_base": {
  "data": {},
  "type": "module"
 },
 "sklearn.datasets.tests.test_base.Bunch": {
  "data": {
   "shadows": "sklearn.datasets.base.Bunch"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_base._remove_dir": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "sklearn.datasets.tests.test_base.os",
    "sklearn.datasets.tests.test_base.shutil"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_base.assert_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_base.assert_false": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_false"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_base.assert_raises": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_base.assert_true": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_true"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_base.b": {
  "data": {
   "shadows": "sklearn.externals.six.b"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_base.check_return_X_y": {
  "data": {
   "shadows": "sklearn.datasets.tests.test_common.check_return_X_y"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_base.clear_data_home": {
  "data": {
   "shadows": "sklearn.datasets.clear_data_home"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_base.data_home": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "sklearn.datasets.tests.test_base._remove_dir",
    "sklearn.datasets.tests.test_base.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_base.dumps": {
  "data": {
   "shadows": "pickle.dumps"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_base.get_data_home": {
  "data": {
   "shadows": "sklearn.datasets.get_data_home"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_base.load_boston": {
  "data": {
   "shadows": "sklearn.datasets.load_boston"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_base.load_breast_cancer": {
  "data": {
   "shadows": "sklearn.datasets.load_breast_cancer"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_base.load_diabetes": {
  "data": {
   "shadows": "sklearn.datasets.load_diabetes"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_base.load_digits": {
  "data": {
   "shadows": "sklearn.datasets.load_digits"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_base.load_files": {
  "data": {
   "shadows": "sklearn.datasets.load_files"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_base.load_files_root": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "sklearn.datasets.tests.test_base._remove_dir",
    "sklearn.datasets.tests.test_base.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_base.load_iris": {
  "data": {
   "shadows": "sklearn.datasets.load_iris"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_base.load_linnerud": {
  "data": {
   "shadows": "sklearn.datasets.load_linnerud"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_base.load_sample_image": {
  "data": {
   "shadows": "sklearn.datasets.load_sample_image"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_base.load_sample_images": {
  "data": {
   "shadows": "sklearn.datasets.load_sample_images"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_base.load_wine": {
  "data": {
   "shadows": "sklearn.datasets.load_wine"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_base.loads": {
  "data": {
   "shadows": "pickle.loads"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_base.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_base.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_base.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_base.pillow_installed": {
  "data": {
   "shadows": "sklearn.externals._pilutil.pillow_installed"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_base.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_base.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_base.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_base.test_bunch_dir": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "dir",
    "sklearn.datasets.load_iris",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_base.test_bunch_pickle_generated_with_0_16_and_read_with_0_17": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "pickle.dumps",
    "pickle.loads",
    "sklearn.datasets.base.Bunch",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_base.test_category_dir_1": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "sklearn.datasets.tests.test_base._remove_dir",
    "sklearn.datasets.tests.test_base.load_files_root",
    "sklearn.datasets.tests.test_base.pytest",
    "sklearn.datasets.tests.test_base.tempfile",
    "sklearn.externals.six.b",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_base.test_category_dir_2": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "sklearn.datasets.tests.test_base._remove_dir",
    "sklearn.datasets.tests.test_base.load_files_root",
    "sklearn.datasets.tests.test_base.pytest",
    "sklearn.datasets.tests.test_base.tempfile",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_base.test_data_home": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "sklearn.datasets.clear_data_home",
    "sklearn.datasets.get_data_home",
    "sklearn.datasets.tests.test_base.data_home",
    "sklearn.datasets.tests.test_base.os",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_false",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_base.test_default_empty_load_files": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "len",
    "sklearn.datasets.load_files",
    "sklearn.datasets.tests.test_base.load_files_root",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_base.test_default_load_files": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "len",
    "sklearn.datasets.load_files",
    "sklearn.datasets.tests.test_base.load_files_root",
    "sklearn.externals.six.b",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_base.test_load_boston": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "functools.partial",
    "sklearn.datasets.load_boston",
    "sklearn.datasets.tests.test_base.os",
    "sklearn.datasets.tests.test_common.check_return_X_y",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_base.test_load_breast_cancer": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "functools.partial",
    "sklearn.datasets.load_breast_cancer",
    "sklearn.datasets.tests.test_base.os",
    "sklearn.datasets.tests.test_common.check_return_X_y",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_base.test_load_diabetes": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "functools.partial",
    "len",
    "sklearn.datasets.load_diabetes",
    "sklearn.datasets.tests.test_common.check_return_X_y",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_base.test_load_digits": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "functools.partial",
    "sklearn.datasets.load_digits",
    "sklearn.datasets.tests.test_base.numpy",
    "sklearn.datasets.tests.test_common.check_return_X_y",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_base.test_load_digits_n_class_lt_10": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "sklearn.datasets.load_digits",
    "sklearn.datasets.tests.test_base.numpy",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_base.test_load_files_w_categories_desc_and_encoding": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "len",
    "sklearn.datasets.load_files",
    "sklearn.datasets.tests.test_base.load_files_root",
    "sklearn.datasets.tests.test_base.os",
    "sklearn.datasets.tests.test_base.test_category_dir_1",
    "sklearn.externals.six.u",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_base.test_load_files_wo_load_content": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "len",
    "sklearn.datasets.load_files",
    "sklearn.datasets.tests.test_base.load_files_root",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_base.test_load_iris": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "functools.partial",
    "sklearn.datasets.load_iris",
    "sklearn.datasets.tests.test_base.os",
    "sklearn.datasets.tests.test_common.check_return_X_y",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_base.test_load_linnerud": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "functools.partial",
    "len",
    "sklearn.datasets.load_linnerud",
    "sklearn.datasets.tests.test_base.os",
    "sklearn.datasets.tests.test_common.check_return_X_y",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_base.test_load_missing_sample_image_error": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "AttributeError",
    "sklearn.datasets.load_sample_image",
    "sklearn.datasets.tests.test_base.warnings",
    "sklearn.externals._pilutil.pillow_installed",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_base.test_load_sample_image": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "ImportError",
    "sklearn.datasets.load_sample_image",
    "sklearn.datasets.tests.test_base.warnings",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_base.test_load_sample_images": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "ImportError",
    "len",
    "sklearn.datasets.load_sample_images",
    "sklearn.datasets.tests.test_base.warnings",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_base.test_load_wine": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "functools.partial",
    "sklearn.datasets.load_wine",
    "sklearn.datasets.tests.test_common.check_return_X_y",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_base.test_loads_dumps_bunch": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "pickle.dumps",
    "pickle.loads",
    "sklearn.datasets.base.Bunch",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_base.u": {
  "data": {
   "shadows": "sklearn.externals.six.u"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_base.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_california_housing": {
  "data": {},
  "type": "module"
 },
 "sklearn.datasets.tests.test_california_housing.SkipTest": {
  "data": {
   "shadows": "sklearn.utils.testing.SkipTest"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_california_housing.check_return_X_y": {
  "data": {
   "shadows": "sklearn.datasets.tests.test_common.check_return_X_y"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_california_housing.fetch": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "sklearn.datasets.fetch_california_housing"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_california_housing.fetch_california_housing": {
  "data": {
   "shadows": "sklearn.datasets.fetch_california_housing"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_california_housing.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_california_housing.test_fetch": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "IOError",
    "functools.partial",
    "sklearn.datasets.tests.test_california_housing.fetch",
    "sklearn.datasets.tests.test_common.check_return_X_y",
    "sklearn.utils.testing.SkipTest"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_common": {
  "data": {},
  "type": "module"
 },
 "sklearn.datasets.tests.test_common.check_return_X_y": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "fetch_func_partial",
    "isinstance",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_covtype": {
  "data": {},
  "type": "module"
 },
 "sklearn.datasets.tests.test_covtype.SkipTest": {
  "data": {
   "shadows": "sklearn.utils.testing.SkipTest"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_covtype.assert_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_covtype.check_return_X_y": {
  "data": {
   "shadows": "sklearn.datasets.tests.test_common.check_return_X_y"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_covtype.fetch": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "sklearn.datasets.fetch_covtype"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_covtype.fetch_covtype": {
  "data": {
   "shadows": "sklearn.datasets.fetch_covtype"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_covtype.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_covtype.test_fetch": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "IOError",
    "functools.partial",
    "sklearn.datasets.tests.test_common.check_return_X_y",
    "sklearn.datasets.tests.test_covtype.fetch",
    "sklearn.utils.testing.SkipTest",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_kddcup99": {
  "data": {},
  "type": "module"
 },
 "sklearn.datasets.tests.test_kddcup99.SkipTest": {
  "data": {
   "shadows": "sklearn.utils.testing.SkipTest"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_kddcup99.assert_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_kddcup99.check_return_X_y": {
  "data": {
   "shadows": "sklearn.datasets.tests.test_common.check_return_X_y"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_kddcup99.fetch_kddcup99": {
  "data": {
   "shadows": "sklearn.datasets.fetch_kddcup99"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_kddcup99.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_kddcup99.test_percent10": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "IOError",
    "functools.partial",
    "sklearn.datasets.fetch_kddcup99",
    "sklearn.datasets.tests.test_common.check_return_X_y",
    "sklearn.utils.testing.SkipTest",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_kddcup99.test_shuffle": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "IOError",
    "any",
    "sklearn.datasets.fetch_kddcup99",
    "sklearn.utils.testing.SkipTest"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_lfw": {
  "data": {
   "symbols_in_volume": [
    "sklearn.datasets.tests.test_lfw.SCIKIT_LEARN_DATA",
    "sklearn.datasets.tests.test_lfw.os",
    "sklearn.datasets.tests.test_lfw.tempfile"
   ]
  },
  "type": "module"
 },
 "sklearn.datasets.tests.test_lfw.FAKE_NAMES": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "sklearn.datasets.tests.test_lfw.LFW_HOME": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "sklearn.datasets.tests.test_lfw.SCIKIT_LEARN_DATA": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "sklearn.datasets.tests.test_lfw.SCIKIT_LEARN_EMPTY_DATA": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "sklearn.datasets.tests.test_lfw.SkipTest": {
  "data": {
   "shadows": "sklearn.utils.testing.SkipTest"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_lfw.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_lfw.assert_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_lfw.assert_raises": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_lfw.check_return_X_y": {
  "data": {
   "shadows": "sklearn.datasets.tests.test_common.check_return_X_y"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_lfw.fetch_lfw_pairs": {
  "data": {
   "shadows": "sklearn.datasets.fetch_lfw_pairs"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_lfw.fetch_lfw_people": {
  "data": {
   "shadows": "sklearn.datasets.fetch_lfw_people"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_lfw.imsave": {
  "data": {
   "shadows": "sklearn.externals._pilutil.imsave"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_lfw.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_lfw.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_lfw.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_lfw.pillow_installed": {
  "data": {
   "shadows": "sklearn.externals._pilutil.pillow_installed"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_lfw.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_lfw.setup_module": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "ImportError",
    "numpy.arange",
    "numpy.random.RandomState",
    "open",
    "range",
    "sklearn.datasets.tests.test_lfw.FAKE_NAMES",
    "sklearn.datasets.tests.test_lfw.LFW_HOME",
    "sklearn.datasets.tests.test_lfw.os",
    "sklearn.datasets.tests.test_lfw.random",
    "sklearn.externals._pilutil.imsave",
    "sklearn.externals._pilutil.pillow_installed",
    "sklearn.externals.six.b",
    "sklearn.externals.six.iteritems",
    "sklearn.utils.testing.SkipTest"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_lfw.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_lfw.six": {
  "data": {
   "shadows": "sklearn.externals.six"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_lfw.teardown_module": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "sklearn.datasets.tests.test_lfw.SCIKIT_LEARN_DATA",
    "sklearn.datasets.tests.test_lfw.SCIKIT_LEARN_EMPTY_DATA",
    "sklearn.datasets.tests.test_lfw.os",
    "sklearn.datasets.tests.test_lfw.shutil"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_lfw.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_lfw.test_load_empty_lfw_pairs": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "IOError",
    "sklearn.datasets.fetch_lfw_pairs",
    "sklearn.datasets.tests.test_lfw.SCIKIT_LEARN_EMPTY_DATA",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_lfw.test_load_empty_lfw_people": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "IOError",
    "sklearn.datasets.fetch_lfw_people",
    "sklearn.datasets.tests.test_lfw.SCIKIT_LEARN_EMPTY_DATA",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_lfw.test_load_fake_lfw_pairs": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "sklearn.datasets.fetch_lfw_pairs",
    "sklearn.datasets.tests.test_lfw.SCIKIT_LEARN_DATA",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_lfw.test_load_fake_lfw_people": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "functools.partial",
    "sklearn.datasets.fetch_lfw_people",
    "sklearn.datasets.tests.test_common.check_return_X_y",
    "sklearn.datasets.tests.test_lfw.SCIKIT_LEARN_DATA",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_lfw.test_load_fake_lfw_people_too_restrictive": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.datasets.fetch_lfw_people",
    "sklearn.datasets.tests.test_lfw.SCIKIT_LEARN_DATA",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_mldata": {
  "data": {},
  "type": "module"
 },
 "sklearn.datasets.tests.test_mldata.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_mldata.assert_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_mldata.assert_in": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_in"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_mldata.assert_not_in": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_not_in"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_mldata.assert_raises": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_mldata.assert_warns": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_warns"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_mldata.datasets": {
  "data": {
   "shadows": "sklearn.datasets"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_mldata.fetch_mldata": {
  "data": {
   "shadows": "sklearn.datasets.fetch_mldata"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_mldata.mldata_filename": {
  "data": {
   "shadows": "sklearn.datasets.mldata_filename"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_mldata.mock_mldata_urlopen": {
  "data": {
   "shadows": "sklearn.utils.testing.mock_mldata_urlopen"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_mldata.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_mldata.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_mldata.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_mldata.sp": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_mldata.test_download": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "DeprecationWarning",
    "scipy.ones",
    "sklearn.datasets.fetch_mldata",
    "sklearn.datasets.mldata.HTTPError",
    "sklearn.datasets.mldata.urlopen",
    "sklearn.datasets.tests.test_mldata.pytest",
    "sklearn.datasets.tests.test_mldata.tmpdata",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_in",
    "sklearn.utils.testing.assert_raises",
    "sklearn.utils.testing.assert_warns",
    "sklearn.utils.testing.mock_mldata_urlopen"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_mldata.test_fetch_multiple_column": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "scipy.arange",
    "scipy.array",
    "sklearn.datasets.fetch_mldata",
    "sklearn.datasets.mldata.urlopen",
    "sklearn.datasets.tests.test_mldata.pytest",
    "sklearn.datasets.tests.test_mldata.tmpdata",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_in",
    "sklearn.utils.testing.assert_not_in",
    "sklearn.utils.testing.mock_mldata_urlopen"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_mldata.test_fetch_one_column": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "scipy.arange",
    "sklearn.datasets.fetch_mldata",
    "sklearn.datasets.mldata.urlopen",
    "sklearn.datasets.tests.test_mldata.pytest",
    "sklearn.datasets.tests.test_mldata.tmpdata",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_in",
    "sklearn.utils.testing.assert_not_in",
    "sklearn.utils.testing.mock_mldata_urlopen"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_mldata.test_mldata_filename": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "sklearn.datasets.mldata_filename",
    "sklearn.datasets.tests.test_mldata.pytest",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_mldata.tmpdata": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "sklearn.datasets.tests.test_mldata.os",
    "sklearn.datasets.tests.test_mldata.pytest",
    "sklearn.datasets.tests.test_mldata.shutil",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_openml": {
  "data": {
   "symbols_in_volume": [
    "sklearn.datasets.tests.test_openml.os"
   ]
  },
  "type": "module"
 },
 "sklearn.datasets.tests.test_openml.HTTPError": {
  "data": {
   "shadows": "sklearn.externals.six.moves.urllib.error.HTTPError"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_openml._download_data_arff": {
  "data": {
   "shadows": "sklearn.datasets.openml._download_data_arff"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_openml._fetch_dataset_from_openml": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "functools.partial",
    "int",
    "isinstance",
    "len",
    "list",
    "numpy.array_equal",
    "numpy.count_nonzero",
    "numpy.float64",
    "numpy.isfinite",
    "numpy.isnan",
    "numpy.ndarray",
    "numpy.testing.assert_allclose",
    "numpy.unique",
    "range",
    "set",
    "sklearn.datasets.fetch_openml",
    "sklearn.datasets.tests.test_common.check_return_X_y",
    "sklearn.externals.six.string_types",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_openml._get_data_description_by_id": {
  "data": {
   "shadows": "sklearn.datasets.openml._get_data_description_by_id"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_openml._monkey_patch_webbased_functions": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "sklearn.datasets.tests.test_openml.gzip",
    "sklearn.datasets.tests.test_openml.sklearn",
    "sklearn.datasets.tests.test_openml.test_offline"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_openml._monkey_patch_webbased_functions.MockHTTPResponse": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "sklearn.datasets.tests.test_openml._monkey_patch_webbased_functions.MockHTTPResponse.__init__": {
  "data": {
   "lineno": 150
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_openml._monkey_patch_webbased_functions.MockHTTPResponse.close": {
  "data": {
   "lineno": 163
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_openml._monkey_patch_webbased_functions.MockHTTPResponse.info": {
  "data": {
   "lineno": 166
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_openml._monkey_patch_webbased_functions.MockHTTPResponse.read": {
  "data": {
   "lineno": 154
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_openml._monkey_patch_webbased_functions.MockHTTPResponse.seek": {
  "data": {
   "lineno": 160
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_openml._monkey_patch_webbased_functions.MockHTTPResponse.tell": {
  "data": {
   "lineno": 157
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_openml._monkey_patch_webbased_functions._file_name": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "len",
    "sklearn.datasets.tests.test_openml.re"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_openml._monkey_patch_webbased_functions._mock_urlopen": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "ValueError",
    "_mock_urlopen_data_description",
    "_mock_urlopen_data_features",
    "_mock_urlopen_data_list",
    "_mock_urlopen_download_data"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_openml._monkey_patch_webbased_functions._mock_urlopen_data_description": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "MockHTTPResponse",
    "_file_name",
    "open",
    "read_fn",
    "sklearn.datasets.tests.test_openml.currdir",
    "sklearn.datasets.tests.test_openml.os",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_openml._monkey_patch_webbased_functions._mock_urlopen_data_features": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "MockHTTPResponse",
    "_file_name",
    "open",
    "read_fn",
    "sklearn.datasets.tests.test_openml.currdir",
    "sklearn.datasets.tests.test_openml.os",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_openml._monkey_patch_webbased_functions._mock_urlopen_data_list": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "MockHTTPResponse",
    "_file_name",
    "open",
    "read_fn",
    "sklearn.datasets.tests.test_openml.currdir",
    "sklearn.datasets.tests.test_openml.json",
    "sklearn.datasets.tests.test_openml.os",
    "sklearn.externals.six.moves.urllib.error.HTTPError",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_openml._monkey_patch_webbased_functions._mock_urlopen_download_data": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "MockHTTPResponse",
    "_file_name",
    "open",
    "read_fn",
    "sklearn.datasets.tests.test_openml.currdir",
    "sklearn.datasets.tests.test_openml.os",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_openml._open_openml_url": {
  "data": {
   "shadows": "sklearn.datasets.openml._open_openml_url"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_openml._test_features_list": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "ValueError",
    "decode_column",
    "len",
    "numpy.array",
    "numpy.testing.assert_array_equal",
    "range",
    "sklearn.datasets.fetch_openml",
    "sklearn.datasets.openml._download_data_arff",
    "sklearn.datasets.openml._get_data_description_by_id"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_openml._test_features_list.decode_column": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "int",
    "len",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_openml.assert_raise_message": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raise_message"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_openml.assert_warns_message": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_warns_message"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_openml.check_return_X_y": {
  "data": {
   "shadows": "sklearn.datasets.tests.test_common.check_return_X_y"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_openml.currdir": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "sklearn.datasets.tests.test_openml.fetch_openml": {
  "data": {
   "shadows": "sklearn.datasets.fetch_openml"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_openml.gzip": {
  "data": {
   "shadows": "gzip"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_openml.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_openml.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_openml.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_openml.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_openml.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_openml.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_openml.scipy.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_openml.sklearn": {
  "data": {
   "shadows": "sklearn"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_openml.string_types": {
  "data": {
   "shadows": "sklearn.externals.six.string_types"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_openml.test_decode_anneal": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": [
    "sklearn.datasets.tests.test_openml._monkey_patch_webbased_functions",
    "sklearn.datasets.tests.test_openml._test_features_list"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_openml.test_decode_cpu": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": [
    "sklearn.datasets.tests.test_openml._monkey_patch_webbased_functions",
    "sklearn.datasets.tests.test_openml._test_features_list"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_openml.test_decode_emotions": {
  "data": {
   "lineno": 449,
   "symbols_in_volume": [
    "sklearn.datasets.tests.test_openml._monkey_patch_webbased_functions",
    "sklearn.datasets.tests.test_openml._test_features_list"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_openml.test_decode_iris": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "sklearn.datasets.tests.test_openml._monkey_patch_webbased_functions",
    "sklearn.datasets.tests.test_openml._test_features_list"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_openml.test_fetch_nonexiting": {
  "data": {
   "lineno": 503,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.datasets.fetch_openml",
    "sklearn.datasets.tests.test_openml._monkey_patch_webbased_functions",
    "sklearn.datasets.tests.test_openml.pytest",
    "sklearn.utils.testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_openml.test_fetch_openml_anneal": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": [
    "object",
    "sklearn.datasets.tests.test_openml._fetch_dataset_from_openml",
    "sklearn.datasets.tests.test_openml._monkey_patch_webbased_functions",
    "sklearn.datasets.tests.test_openml.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_openml.test_fetch_openml_anneal_multitarget": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": [
    "object",
    "sklearn.datasets.tests.test_openml._fetch_dataset_from_openml",
    "sklearn.datasets.tests.test_openml._monkey_patch_webbased_functions",
    "sklearn.datasets.tests.test_openml.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_openml.test_fetch_openml_australian": {
  "data": {
   "lineno": 375,
   "symbols_in_volume": [
    "UserWarning",
    "numpy.float64",
    "object",
    "sklearn.datasets.tests.test_openml._fetch_dataset_from_openml",
    "sklearn.datasets.tests.test_openml._monkey_patch_webbased_functions",
    "sklearn.datasets.tests.test_openml.pytest",
    "sklearn.utils.testing.assert_warns_message"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_openml.test_fetch_openml_cpu": {
  "data": {
   "lineno": 351,
   "symbols_in_volume": [
    "numpy.float64",
    "object",
    "sklearn.datasets.tests.test_openml._fetch_dataset_from_openml",
    "sklearn.datasets.tests.test_openml._monkey_patch_webbased_functions",
    "sklearn.datasets.tests.test_openml.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_openml.test_fetch_openml_emotions": {
  "data": {
   "lineno": 429,
   "symbols_in_volume": [
    "numpy.float64",
    "object",
    "sklearn.datasets.tests.test_openml._fetch_dataset_from_openml",
    "sklearn.datasets.tests.test_openml._monkey_patch_webbased_functions",
    "sklearn.datasets.tests.test_openml.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_openml.test_fetch_openml_inactive": {
  "data": {
   "lineno": 487,
   "symbols_in_volume": [
    "UserWarning",
    "int",
    "sklearn.datasets.fetch_openml",
    "sklearn.datasets.tests.test_openml._monkey_patch_webbased_functions",
    "sklearn.datasets.tests.test_openml.pytest",
    "sklearn.utils.testing.assert_warns_message"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_openml.test_fetch_openml_iris": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "UserWarning",
    "numpy.float64",
    "object",
    "sklearn.datasets.tests.test_openml._fetch_dataset_from_openml",
    "sklearn.datasets.tests.test_openml._monkey_patch_webbased_functions",
    "sklearn.datasets.tests.test_openml.pytest",
    "sklearn.utils.testing.assert_warns_message"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_openml.test_fetch_openml_iris_multitarget": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "numpy.float64",
    "object",
    "sklearn.datasets.tests.test_openml._fetch_dataset_from_openml",
    "sklearn.datasets.tests.test_openml._monkey_patch_webbased_functions",
    "sklearn.datasets.tests.test_openml.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_openml.test_fetch_openml_miceprotein": {
  "data": {
   "lineno": 407,
   "symbols_in_volume": [
    "numpy.float64",
    "object",
    "sklearn.datasets.tests.test_openml._fetch_dataset_from_openml",
    "sklearn.datasets.tests.test_openml._monkey_patch_webbased_functions",
    "sklearn.datasets.tests.test_openml.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_openml.test_fetch_openml_notarget": {
  "data": {
   "lineno": 473,
   "symbols_in_volume": [
    "sklearn.datasets.fetch_openml",
    "sklearn.datasets.tests.test_openml._monkey_patch_webbased_functions",
    "sklearn.datasets.tests.test_openml.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_openml.test_fetch_openml_raises_illegal_argument": {
  "data": {
   "lineno": 583,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.datasets.fetch_openml",
    "sklearn.utils.testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_openml.test_fetch_openml_raises_missing_values_target": {
  "data": {
   "lineno": 575,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.datasets.fetch_openml",
    "sklearn.datasets.tests.test_openml._monkey_patch_webbased_functions",
    "sklearn.datasets.tests.test_openml.pytest",
    "sklearn.utils.testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_openml.test_illegal_column": {
  "data": {
   "lineno": 561,
   "symbols_in_volume": [
    "KeyError",
    "sklearn.datasets.fetch_openml",
    "sklearn.datasets.tests.test_openml._monkey_patch_webbased_functions",
    "sklearn.datasets.tests.test_openml.pytest",
    "sklearn.utils.testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_openml.test_offline": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "sklearn.datasets.tests.test_openml.test_open_openml_url_cache": {
  "data": {
   "lineno": 455,
   "symbols_in_volume": [
    "sklearn.datasets.openml._open_openml_url",
    "sklearn.datasets.tests.test_openml._monkey_patch_webbased_functions",
    "sklearn.datasets.tests.test_openml.os",
    "sklearn.datasets.tests.test_openml.pytest",
    "sklearn.datasets.tests.test_openml.sklearn"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_openml.test_raises_illegal_multitarget": {
  "data": {
   "lineno": 513,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.datasets.fetch_openml",
    "sklearn.datasets.tests.test_openml._monkey_patch_webbased_functions",
    "sklearn.datasets.tests.test_openml.pytest",
    "sklearn.utils.testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_openml.test_string_attribute": {
  "data": {
   "lineno": 551,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.datasets.fetch_openml",
    "sklearn.datasets.tests.test_openml._monkey_patch_webbased_functions",
    "sklearn.datasets.tests.test_openml.pytest",
    "sklearn.utils.testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_openml.test_warn_ignore_attribute": {
  "data": {
   "lineno": 525,
   "symbols_in_volume": [
    "UserWarning",
    "sklearn.datasets.fetch_openml",
    "sklearn.datasets.tests.test_openml._monkey_patch_webbased_functions",
    "sklearn.datasets.tests.test_openml.pytest",
    "sklearn.utils.testing.assert_warns_message"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_rcv1": {
  "data": {},
  "type": "module"
 },
 "sklearn.datasets.tests.test_rcv1.SkipTest": {
  "data": {
   "shadows": "sklearn.utils.testing.SkipTest"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_rcv1.assert_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_rcv1.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_rcv1.assert_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_rcv1.assert_true": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_true"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_rcv1.check_return_X_y": {
  "data": {
   "shadows": "sklearn.datasets.tests.test_common.check_return_X_y"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_rcv1.errno": {
  "data": {
   "shadows": "errno"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_rcv1.fetch_rcv1": {
  "data": {
   "shadows": "sklearn.datasets.fetch_rcv1"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_rcv1.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_rcv1.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_rcv1.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_rcv1.test_fetch_rcv1": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "IOError",
    "functools.partial",
    "len",
    "numpy.sort",
    "scipy.sparse.issparse",
    "sklearn.datasets.fetch_rcv1",
    "sklearn.datasets.tests.test_common.check_return_X_y",
    "sklearn.datasets.tests.test_rcv1.errno",
    "sklearn.utils.testing.SkipTest",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_true",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_samples_generator": {
  "data": {},
  "type": "module"
 },
 "sklearn.datasets.tests.test_samples_generator.assert_all_finite": {
  "data": {
   "shadows": "sklearn.utils.validation.assert_all_finite"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_samples_generator.assert_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_samples_generator.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_samples_generator.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_samples_generator.assert_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_samples_generator.assert_less": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_less"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_samples_generator.assert_raise_message": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raise_message"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_samples_generator.assert_raises": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_samples_generator.assert_true": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_true"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_samples_generator.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_samples_generator.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_samples_generator.eig": {
  "data": {
   "shadows": "numpy.linalg.eig"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_samples_generator.make_biclusters": {
  "data": {
   "shadows": "sklearn.datasets.make_biclusters"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_samples_generator.make_blobs": {
  "data": {
   "shadows": "sklearn.datasets.make_blobs"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_samples_generator.make_checkerboard": {
  "data": {
   "shadows": "sklearn.datasets.make_checkerboard"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_samples_generator.make_circles": {
  "data": {
   "shadows": "sklearn.datasets.make_circles"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_samples_generator.make_classification": {
  "data": {
   "shadows": "sklearn.datasets.make_classification"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_samples_generator.make_friedman1": {
  "data": {
   "shadows": "sklearn.datasets.make_friedman1"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_samples_generator.make_friedman2": {
  "data": {
   "shadows": "sklearn.datasets.make_friedman2"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_samples_generator.make_friedman3": {
  "data": {
   "shadows": "sklearn.datasets.make_friedman3"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_samples_generator.make_hastie_10_2": {
  "data": {
   "shadows": "sklearn.datasets.make_hastie_10_2"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_samples_generator.make_low_rank_matrix": {
  "data": {
   "shadows": "sklearn.datasets.make_low_rank_matrix"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_samples_generator.make_moons": {
  "data": {
   "shadows": "sklearn.datasets.make_moons"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_samples_generator.make_multilabel_classification": {
  "data": {
   "shadows": "sklearn.datasets.make_multilabel_classification"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_samples_generator.make_regression": {
  "data": {
   "shadows": "sklearn.datasets.make_regression"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_samples_generator.make_s_curve": {
  "data": {
   "shadows": "sklearn.datasets.make_s_curve"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_samples_generator.make_sparse_coded_signal": {
  "data": {
   "shadows": "sklearn.datasets.make_sparse_coded_signal"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_samples_generator.make_sparse_uncorrelated": {
  "data": {
   "shadows": "sklearn.datasets.make_sparse_uncorrelated"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_samples_generator.make_spd_matrix": {
  "data": {
   "shadows": "sklearn.datasets.make_spd_matrix"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_samples_generator.make_swiss_roll": {
  "data": {
   "shadows": "sklearn.datasets.make_swiss_roll"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_samples_generator.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_samples_generator.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_samples_generator.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_samples_generator.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_samples_generator.svd": {
  "data": {
   "shadows": "numpy.linalg.svd"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_samples_generator.test_make_biclusters": {
  "data": {
   "lineno": 407,
   "symbols_in_volume": [
    "sklearn.datasets.make_biclusters",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.validation.assert_all_finite"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_samples_generator.test_make_blobs": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "enumerate",
    "numpy.array",
    "numpy.unique",
    "sklearn.datasets.make_blobs",
    "sklearn.externals.six.moves.zip",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_samples_generator.test_make_blobs_error": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "sklearn.datasets.make_blobs",
    "sklearn.utils.testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_samples_generator.test_make_blobs_n_samples_centers_none": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "all",
    "len",
    "numpy.array",
    "numpy.bincount",
    "sklearn.datasets.make_blobs",
    "sklearn.datasets.tests.test_samples_generator.pytest",
    "sum",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_samples_generator.test_make_blobs_n_samples_list": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "all",
    "len",
    "numpy.bincount",
    "sklearn.datasets.make_blobs",
    "sum"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_samples_generator.test_make_blobs_n_samples_list_with_centers": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "all",
    "enumerate",
    "len",
    "numpy.array",
    "numpy.bincount",
    "sklearn.datasets.make_blobs",
    "sklearn.externals.six.moves.zip",
    "sklearn.utils.testing.assert_almost_equal",
    "sum"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_samples_generator.test_make_checkerboard": {
  "data": {
   "lineno": 422,
   "symbols_in_volume": [
    "sklearn.datasets.make_checkerboard",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.validation.assert_all_finite"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_samples_generator.test_make_circles": {
  "data": {
   "lineno": 452,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.datasets.make_circles",
    "sklearn.externals.six.moves.zip",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_samples_generator.test_make_classification": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "numpy.unique",
    "sklearn.datasets.make_classification",
    "sklearn.utils.testing.assert_equal",
    "sum"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_samples_generator.test_make_classification_informative_features": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "AssertionError",
    "ValueError",
    "collections.defaultdict",
    "functools.partial",
    "len",
    "make",
    "numpy.abs",
    "numpy.bincount",
    "numpy.sign",
    "numpy.unique",
    "range",
    "set",
    "sklearn.datasets.make_classification",
    "sklearn.externals.six.moves.zip",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_samples_generator.test_make_friedman1": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": [
    "numpy.pi",
    "numpy.sin",
    "sklearn.datasets.make_friedman1",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_samples_generator.test_make_friedman2": {
  "data": {
   "lineno": 322,
   "symbols_in_volume": [
    "sklearn.datasets.make_friedman2",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_samples_generator.test_make_friedman3": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": [
    "numpy.arctan",
    "sklearn.datasets.make_friedman3",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_samples_generator.test_make_hastie_10_2": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "numpy.unique",
    "sklearn.datasets.make_hastie_10_2",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_samples_generator.test_make_low_rank_matrix": {
  "data": {
   "lineno": 345,
   "symbols_in_volume": [
    "numpy.linalg.svd",
    "sklearn.datasets.make_low_rank_matrix",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_less",
    "sum"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_samples_generator.test_make_moons": {
  "data": {
   "lineno": 443,
   "symbols_in_volume": [
    "sklearn.datasets.make_moons",
    "sklearn.externals.six.moves.zip",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_samples_generator.test_make_multilabel_classification_return_indicator": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.sum",
    "sklearn.datasets.make_multilabel_classification",
    "sklearn.externals.six.moves.zip",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_samples_generator.test_make_multilabel_classification_return_indicator_sparse": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "scipy.sparse.issparse",
    "sklearn.datasets.make_multilabel_classification",
    "sklearn.externals.six.moves.zip",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_samples_generator.test_make_multilabel_classification_return_sequences": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "len",
    "max",
    "min",
    "sklearn.datasets.make_multilabel_classification",
    "sklearn.externals.six.moves.zip",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_samples_generator.test_make_regression": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.std",
    "sklearn.datasets.make_regression",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_equal",
    "sum"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_samples_generator.test_make_regression_multitarget": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.std",
    "sklearn.datasets.make_regression",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal",
    "sum"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_samples_generator.test_make_s_curve": {
  "data": {
   "lineno": 398,
   "symbols_in_volume": [
    "numpy.cos",
    "numpy.sign",
    "numpy.sin",
    "sklearn.datasets.make_s_curve",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_samples_generator.test_make_sparse_coded_signal": {
  "data": {
   "lineno": 356,
   "symbols_in_volume": [
    "len",
    "numpy.dot",
    "numpy.flatnonzero",
    "numpy.ones",
    "numpy.sqrt",
    "sklearn.datasets.make_sparse_coded_signal",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_samples_generator.test_make_sparse_uncorrelated": {
  "data": {
   "lineno": 370,
   "symbols_in_volume": [
    "sklearn.datasets.make_sparse_uncorrelated",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_samples_generator.test_make_spd_matrix": {
  "data": {
   "lineno": 377,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.linalg.eig",
    "sklearn.datasets.make_spd_matrix",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_samples_generator.test_make_swiss_roll": {
  "data": {
   "lineno": 389,
   "symbols_in_volume": [
    "numpy.cos",
    "numpy.sin",
    "sklearn.datasets.make_swiss_roll",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_samples_generator.zip": {
  "data": {
   "shadows": "sklearn.externals.six.moves.zip"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_svmlight_format": {
  "data": {
   "symbols_in_volume": [
    "sklearn.datasets.tests.test_svmlight_format.currdir",
    "sklearn.datasets.tests.test_svmlight_format.os",
    "sklearn.utils.testing.fails_if_pypy"
   ]
  },
  "type": "module"
 },
 "sklearn.datasets.tests.test_svmlight_format.BZ2File": {
  "data": {
   "shadows": "bz2.BZ2File"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_svmlight_format.BytesIO": {
  "data": {
   "shadows": "io.BytesIO"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_svmlight_format.NamedTemporaryFile": {
  "data": {
   "shadows": "tempfile.NamedTemporaryFile"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_svmlight_format.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_svmlight_format.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_svmlight_format.assert_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_svmlight_format.assert_in": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_in"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_svmlight_format.assert_raises": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_svmlight_format.assert_raises_regex": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises_regex"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_svmlight_format.b": {
  "data": {
   "shadows": "sklearn.externals.six.b"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_svmlight_format.currdir": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "sklearn.datasets.tests.test_svmlight_format.datafile": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "sklearn.datasets.tests.test_svmlight_format.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_svmlight_format.dump_svmlight_file": {
  "data": {
   "shadows": "sklearn.datasets.dump_svmlight_file"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_svmlight_format.fails_if_pypy": {
  "data": {
   "shadows": "sklearn.utils.testing.fails_if_pypy"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_svmlight_format.gzip": {
  "data": {
   "shadows": "gzip"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_svmlight_format.invalidfile": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "sklearn.datasets.tests.test_svmlight_format.invalidfile2": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "sklearn.datasets.tests.test_svmlight_format.load_svmlight_file": {
  "data": {
   "shadows": "sklearn.datasets.load_svmlight_file"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_svmlight_format.load_svmlight_files": {
  "data": {
   "shadows": "sklearn.datasets.load_svmlight_files"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_svmlight_format.multifile": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "sklearn.datasets.tests.test_svmlight_format.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_svmlight_format.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_svmlight_format.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_svmlight_format.pytestmark": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "sklearn.datasets.tests.test_svmlight_format.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_svmlight_format.sklearn": {
  "data": {
   "shadows": "sklearn"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_svmlight_format.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_svmlight_format.sp_version": {
  "data": {
   "shadows": "sklearn.utils.fixes.sp_version"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_svmlight_format.test_dump": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "TypeError",
    "io.BytesIO",
    "numpy.arange",
    "numpy.float32",
    "numpy.float64",
    "numpy.int32",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.issparse",
    "sklearn.datasets.dump_svmlight_file",
    "sklearn.datasets.load_svmlight_file",
    "sklearn.datasets.tests.test_svmlight_format.datafile",
    "sklearn.datasets.tests.test_svmlight_format.sklearn",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_in",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_svmlight_format.test_dump_comment": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": [
    "UnicodeDecodeError",
    "ValueError",
    "io.BytesIO",
    "sklearn.datasets.dump_svmlight_file",
    "sklearn.datasets.load_svmlight_file",
    "sklearn.datasets.tests.test_svmlight_format.datafile",
    "sklearn.externals.six.b",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_svmlight_format.test_dump_concise": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "io.BytesIO",
    "sklearn.datasets.dump_svmlight_file",
    "sklearn.datasets.load_svmlight_file",
    "sklearn.externals.six.b",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_svmlight_format.test_dump_invalid": {
  "data": {
   "lineno": 351,
   "symbols_in_volume": [
    "ValueError",
    "io.BytesIO",
    "sklearn.datasets.dump_svmlight_file",
    "sklearn.datasets.load_svmlight_file",
    "sklearn.datasets.tests.test_svmlight_format.datafile",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_svmlight_format.test_dump_multilabel": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "io.BytesIO",
    "scipy.sparse.csr_matrix",
    "sklearn.datasets.dump_svmlight_file",
    "sklearn.externals.six.b",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_svmlight_format.test_dump_query_id": {
  "data": {
   "lineno": 362,
   "symbols_in_volume": [
    "io.BytesIO",
    "numpy.arange",
    "sklearn.datasets.dump_svmlight_file",
    "sklearn.datasets.load_svmlight_file",
    "sklearn.datasets.tests.test_svmlight_format.datafile",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_svmlight_format.test_invalid_filename": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "IOError",
    "sklearn.datasets.load_svmlight_file",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_svmlight_format.test_load_compressed": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "bz2.BZ2File",
    "open",
    "sklearn.datasets.load_svmlight_file",
    "sklearn.datasets.tests.test_svmlight_format.datafile",
    "sklearn.datasets.tests.test_svmlight_format.gzip",
    "sklearn.datasets.tests.test_svmlight_format.os",
    "sklearn.datasets.tests.test_svmlight_format.shutil",
    "sklearn.utils.testing.assert_array_almost_equal",
    "tempfile.NamedTemporaryFile"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_svmlight_format.test_load_invalid_file": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.datasets.load_svmlight_file",
    "sklearn.datasets.tests.test_svmlight_format.invalidfile",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_svmlight_format.test_load_invalid_file2": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.datasets.load_svmlight_files",
    "sklearn.datasets.tests.test_svmlight_format.datafile",
    "sklearn.datasets.tests.test_svmlight_format.invalidfile",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_svmlight_format.test_load_invalid_order_file": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.datasets.load_svmlight_file",
    "sklearn.datasets.tests.test_svmlight_format.invalidfile2",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_svmlight_format.test_load_offset_exhaustive_splits": {
  "data": {
   "lineno": 462,
   "symbols_in_volume": [
    "io.BytesIO",
    "len",
    "numpy.arange",
    "numpy.array",
    "numpy.concatenate",
    "numpy.random.RandomState",
    "range",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.vstack",
    "sklearn.datasets.dump_svmlight_file",
    "sklearn.datasets.load_svmlight_file",
    "sklearn.utils.fixes.sp_version",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_svmlight_format.test_load_svmlight_file": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "sklearn.datasets.load_svmlight_file",
    "sklearn.datasets.tests.test_svmlight_format.datafile",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_svmlight_format.test_load_svmlight_file_fd": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "sklearn.datasets.load_svmlight_file",
    "sklearn.datasets.tests.test_svmlight_format.datafile",
    "sklearn.datasets.tests.test_svmlight_format.os",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_svmlight_format.test_load_svmlight_file_multilabel": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "sklearn.datasets.load_svmlight_file",
    "sklearn.datasets.tests.test_svmlight_format.multifile",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_svmlight_format.test_load_svmlight_file_n_features": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.datasets.load_svmlight_file",
    "sklearn.datasets.tests.test_svmlight_format.datafile",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_svmlight_format.test_load_svmlight_files": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.float64",
    "sklearn.datasets.load_svmlight_files",
    "sklearn.datasets.tests.test_svmlight_format.datafile",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_svmlight_format.test_load_with_long_qid": {
  "data": {
   "lineno": 377,
   "symbols_in_volume": [
    "io.BytesIO",
    "sklearn.datasets.dump_svmlight_file",
    "sklearn.datasets.load_svmlight_file",
    "sklearn.externals.six.b",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_svmlight_format.test_load_with_offsets": {
  "data": {
   "lineno": 424,
   "symbols_in_volume": [
    "io.BytesIO",
    "len",
    "numpy.concatenate",
    "numpy.random.RandomState",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.vstack",
    "sklearn.datasets.dump_svmlight_file",
    "sklearn.datasets.load_svmlight_file",
    "sklearn.datasets.tests.test_svmlight_format.pytest",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_svmlight_format.test_load_with_offsets_error": {
  "data": {
   "lineno": 505,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.datasets.load_svmlight_file",
    "sklearn.datasets.tests.test_svmlight_format.datafile",
    "sklearn.utils.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_svmlight_format.test_load_with_qid": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "io.BytesIO",
    "sklearn.datasets.load_svmlight_file",
    "sklearn.datasets.load_svmlight_files",
    "sklearn.externals.six.b",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_svmlight_format.test_load_zero_based": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "ValueError",
    "io.BytesIO",
    "sklearn.datasets.load_svmlight_file",
    "sklearn.externals.six.b",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_svmlight_format.test_load_zero_based_auto": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "io.BytesIO",
    "sklearn.datasets.load_svmlight_file",
    "sklearn.datasets.load_svmlight_files",
    "sklearn.externals.six.b",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_svmlight_format.test_load_zeros": {
  "data": {
   "lineno": 411,
   "symbols_in_volume": [
    "io.BytesIO",
    "numpy.array",
    "numpy.zeros",
    "scipy.sparse.csr_matrix",
    "sklearn.datasets.dump_svmlight_file",
    "sklearn.datasets.load_svmlight_file",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_svmlight_format.test_not_a_filename": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "TypeError",
    "sklearn.datasets.load_svmlight_file",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.twenty_newsgroups": {
  "data": {
   "symbols_in_volume": [
    "RemoteFileMetadata",
    "__name__",
    "sklearn.datasets.twenty_newsgroups.logging",
    "sklearn.datasets.twenty_newsgroups.re"
   ]
  },
  "type": "module"
 },
 "sklearn.datasets.twenty_newsgroups.ARCHIVE": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "sklearn.datasets.twenty_newsgroups.CACHE_NAME": {
  "data": {
   "lineno": 60
  },
  "type": "constant"
 },
 "sklearn.datasets.twenty_newsgroups.TEST_FOLDER": {
  "data": {
   "lineno": 62
  },
  "type": "constant"
 },
 "sklearn.datasets.twenty_newsgroups.TRAIN_FOLDER": {
  "data": {
   "lineno": 61
  },
  "type": "constant"
 },
 "sklearn.datasets.twenty_newsgroups._QUOTE_RE": {
  "data": {
   "lineno": 112
  },
  "type": "constant"
 },
 "sklearn.datasets.twenty_newsgroups._download_20newsgroups": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "_fetch_remote",
    "dict",
    "load_files",
    "open",
    "sklearn.datasets.twenty_newsgroups.ARCHIVE",
    "sklearn.datasets.twenty_newsgroups.TEST_FOLDER",
    "sklearn.datasets.twenty_newsgroups.TRAIN_FOLDER",
    "sklearn.datasets.twenty_newsgroups.codecs",
    "sklearn.datasets.twenty_newsgroups.logger",
    "sklearn.datasets.twenty_newsgroups.os",
    "sklearn.datasets.twenty_newsgroups.pickle",
    "sklearn.datasets.twenty_newsgroups.shutil",
    "sklearn.datasets.twenty_newsgroups.tarfile"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.twenty_newsgroups.codecs": {
  "data": {
   "shadows": "codecs"
  },
  "type": "import"
 },
 "sklearn.datasets.twenty_newsgroups.dirname": {
  "data": {
   "shadows": "os.path.dirname"
  },
  "type": "import"
 },
 "sklearn.datasets.twenty_newsgroups.download_20newsgroups": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "deprecated",
    "sklearn.datasets.twenty_newsgroups._download_20newsgroups"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.twenty_newsgroups.fetch_20newsgroups": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "Exception",
    "IOError",
    "ValueError",
    "_pkl_filepath",
    "check_random_state",
    "get_data_home",
    "list",
    "numpy.arange",
    "numpy.array",
    "numpy.in1d",
    "numpy.searchsorted",
    "object",
    "open",
    "os.path.dirname",
    "os.path.join",
    "print",
    "sklearn.datasets.twenty_newsgroups.CACHE_NAME",
    "sklearn.datasets.twenty_newsgroups._download_20newsgroups",
    "sklearn.datasets.twenty_newsgroups.codecs",
    "sklearn.datasets.twenty_newsgroups.logger",
    "sklearn.datasets.twenty_newsgroups.os",
    "sklearn.datasets.twenty_newsgroups.pickle",
    "sklearn.datasets.twenty_newsgroups.strip_newsgroup_footer",
    "sklearn.datasets.twenty_newsgroups.strip_newsgroup_header",
    "sklearn.datasets.twenty_newsgroups.strip_newsgroup_quoting",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.twenty_newsgroups.fetch_20newsgroups_vectorized": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": [
    "Bunch",
    "CountVectorizer",
    "ValueError",
    "_pkl_filepath",
    "get_data_home",
    "normalize",
    "numpy.concatenate",
    "numpy.float64",
    "numpy.int16",
    "open",
    "os.path.dirname",
    "os.path.join",
    "scipy.sparse.vstack",
    "sklearn.datasets.twenty_newsgroups.fetch_20newsgroups",
    "sklearn.datasets.twenty_newsgroups.os"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.twenty_newsgroups.join": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "sklearn.datasets.twenty_newsgroups.logger": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "sklearn.datasets.twenty_newsgroups.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "sklearn.datasets.twenty_newsgroups.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.datasets.twenty_newsgroups.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "sklearn.datasets.twenty_newsgroups.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "sklearn.datasets.twenty_newsgroups.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "sklearn.datasets.twenty_newsgroups.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "sklearn.datasets.twenty_newsgroups.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.datasets.twenty_newsgroups.strip_newsgroup_footer": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.twenty_newsgroups.strip_newsgroup_header": {
  "data": {
   "lineno": 98
  },
  "type": "function"
 },
 "sklearn.datasets.twenty_newsgroups.strip_newsgroup_quoting": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "sklearn.datasets.twenty_newsgroups._QUOTE_RE"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.twenty_newsgroups.tarfile": {
  "data": {
   "shadows": "tarfile"
  },
  "type": "import"
 },
 "sklearn.decomposition": {
  "data": {},
  "type": "module"
 },
 "sklearn.decomposition.__all__": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "sklearn.decomposition.base": {
  "data": {},
  "type": "module"
 },
 "sklearn.decomposition.base.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "sklearn.decomposition.base._BasePCA": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "abc.ABCMeta"
   ]
  },
  "type": "class"
 },
 "sklearn.decomposition.base._BasePCA.fit": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.base._BasePCA.get_covariance": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "len",
    "numpy.dot",
    "numpy.maximum",
    "numpy.newaxis",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.base._BasePCA.get_precision": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "len",
    "numpy.dot",
    "numpy.eye",
    "numpy.maximum",
    "numpy.newaxis",
    "numpy.sqrt",
    "scipy.linalg.inv"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.base._BasePCA.inverse_transform": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.newaxis",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.base._BasePCA.transform": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "all",
    "check_array",
    "check_is_fitted",
    "numpy.dot",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.base.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "sklearn.decomposition.base.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "sklearn.decomposition.base.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.decomposition.dict_learning": {
  "data": {},
  "type": "module"
 },
 "sklearn.decomposition.dict_learning.DictionaryLearning": {
  "data": {
   "lineno": 1013,
   "symbols_in_volume": [
    "sklearn.decomposition.dict_learning.SparseCodingMixin"
   ]
  },
  "type": "class"
 },
 "sklearn.decomposition.dict_learning.DictionaryLearning.__init__": {
  "data": {
   "lineno": 1141
  },
  "type": "function"
 },
 "sklearn.decomposition.dict_learning.DictionaryLearning.fit": {
  "data": {
   "lineno": 1162,
   "symbols_in_volume": [
    "check_array",
    "check_random_state",
    "sklearn.decomposition.dict_learning.dict_learning"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.dict_learning.MiniBatchDictionaryLearning": {
  "data": {
   "lineno": 1202,
   "symbols_in_volume": [
    "sklearn.decomposition.dict_learning.SparseCodingMixin"
   ]
  },
  "type": "class"
 },
 "sklearn.decomposition.dict_learning.MiniBatchDictionaryLearning.__init__": {
  "data": {
   "lineno": 1330
  },
  "type": "function"
 },
 "sklearn.decomposition.dict_learning.MiniBatchDictionaryLearning.fit": {
  "data": {
   "lineno": 1352,
   "symbols_in_volume": [
    "check_array",
    "check_random_state",
    "sklearn.decomposition.dict_learning.dict_learning_online"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.dict_learning.MiniBatchDictionaryLearning.partial_fit": {
  "data": {
   "lineno": 1389,
   "symbols_in_volume": [
    "check_array",
    "check_random_state",
    "getattr",
    "hasattr",
    "len",
    "sklearn.decomposition.dict_learning.dict_learning_online"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.dict_learning.SparseCoder": {
  "data": {
   "lineno": 907,
   "symbols_in_volume": [
    "sklearn.decomposition.dict_learning.SparseCodingMixin"
   ]
  },
  "type": "class"
 },
 "sklearn.decomposition.dict_learning.SparseCoder.__init__": {
  "data": {
   "lineno": 983
  },
  "type": "function"
 },
 "sklearn.decomposition.dict_learning.SparseCoder.fit": {
  "data": {
   "lineno": 993
  },
  "type": "function"
 },
 "sklearn.decomposition.dict_learning.SparseCodingMixin": {
  "data": {
   "lineno": 852
  },
  "type": "class"
 },
 "sklearn.decomposition.dict_learning.SparseCodingMixin._set_sparse_coding_params": {
  "data": {
   "lineno": 855
  },
  "type": "function"
 },
 "sklearn.decomposition.dict_learning.SparseCodingMixin.transform": {
  "data": {
   "lineno": 868,
   "symbols_in_volume": [
    "check_array",
    "check_is_fitted",
    "numpy.empty",
    "numpy.maximum",
    "numpy.minimum",
    "sklearn.decomposition.dict_learning.sparse_encode"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.dict_learning._sparse_encode": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "Lars",
    "Lasso",
    "LassoLars",
    "ValueError",
    "float",
    "int",
    "numpy.abs",
    "numpy.clip",
    "numpy.dot",
    "numpy.maximum",
    "numpy.newaxis",
    "numpy.seterr",
    "numpy.sign",
    "orthogonal_mp_gram",
    "row_norms"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.dict_learning._update_dict": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": [
    "check_random_state",
    "gemm",
    "ger",
    "len",
    "nrm2",
    "numpy.clip",
    "numpy.dot",
    "print",
    "range",
    "scipy.linalg.get_blas_funcs",
    "sklearn.decomposition.dict_learning.sys"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.dict_learning.ceil": {
  "data": {
   "shadows": "math.ceil"
  },
  "type": "import"
 },
 "sklearn.decomposition.dict_learning.dict_learning": {
  "data": {
   "lineno": 419,
   "symbols_in_volume": [
    "ValueError",
    "callback",
    "check_random_state",
    "float",
    "len",
    "locals",
    "numpy.abs",
    "numpy.array",
    "numpy.c_",
    "numpy.nan",
    "numpy.newaxis",
    "numpy.r_",
    "numpy.sum",
    "numpy.zeros",
    "print",
    "range",
    "scipy.linalg.svd",
    "sklearn.decomposition.dict_learning._update_dict",
    "sklearn.decomposition.dict_learning.sparse_encode",
    "sklearn.decomposition.dict_learning.sys",
    "sklearn.decomposition.dict_learning.time"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.dict_learning.dict_learning_online": {
  "data": {
   "lineno": 605,
   "symbols_in_volume": [
    "ValueError",
    "callback",
    "check_array",
    "check_random_state",
    "float",
    "gen_batches",
    "len",
    "locals",
    "math.ceil",
    "numpy.dot",
    "numpy.float64",
    "numpy.newaxis",
    "numpy.r_",
    "numpy.require",
    "numpy.zeros",
    "print",
    "randomized_svd",
    "range",
    "sklearn.decomposition.dict_learning._update_dict",
    "sklearn.decomposition.dict_learning.itertools",
    "sklearn.decomposition.dict_learning.sparse_encode",
    "sklearn.decomposition.dict_learning.sys",
    "sklearn.decomposition.dict_learning.time",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.dict_learning.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "sklearn.decomposition.dict_learning.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "sklearn.decomposition.dict_learning.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.decomposition.dict_learning.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "sklearn.decomposition.dict_learning.sparse_encode": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "Parallel",
    "check_array",
    "delayed",
    "effective_n_jobs",
    "gen_even_slices",
    "list",
    "max",
    "min",
    "numpy.dot",
    "numpy.empty",
    "sklearn.decomposition.dict_learning._sparse_encode",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.dict_learning.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "sklearn.decomposition.dict_learning.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "sklearn.decomposition.factor_analysis": {
  "data": {},
  "type": "module"
 },
 "sklearn.decomposition.factor_analysis.FactorAnalysis": {
  "data": {
   "lineno": 36
  },
  "type": "class"
 },
 "sklearn.decomposition.factor_analysis.FactorAnalysis.__init__": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.factor_analysis.FactorAnalysis.fit": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "ValueError",
    "check_array",
    "check_random_state",
    "len",
    "math.log",
    "math.sqrt",
    "my_svd",
    "numpy.array",
    "numpy.float64",
    "numpy.inf",
    "numpy.log",
    "numpy.maximum",
    "numpy.mean",
    "numpy.newaxis",
    "numpy.ones",
    "numpy.pi",
    "numpy.sqrt",
    "numpy.sum",
    "numpy.var",
    "sklearn.decomposition.factor_analysis.warnings",
    "xrange"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.factor_analysis.FactorAnalysis.fit.my_svd": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "randomized_svd",
    "squared_norm"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.factor_analysis.FactorAnalysis.get_covariance": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": [
    "check_is_fitted",
    "len",
    "numpy.dot"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.factor_analysis.FactorAnalysis.get_precision": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": [
    "check_is_fitted",
    "len",
    "numpy.diag",
    "numpy.dot",
    "numpy.newaxis",
    "scipy.linalg.inv"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.factor_analysis.FactorAnalysis.score": {
  "data": {
   "lineno": 344,
   "symbols_in_volume": [
    "numpy.mean"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.factor_analysis.FactorAnalysis.score_samples": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "check_is_fitted",
    "fast_logdet",
    "math.log",
    "numpy.dot",
    "numpy.pi"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.factor_analysis.FactorAnalysis.transform": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "check_array",
    "check_is_fitted",
    "len",
    "numpy.dot",
    "numpy.eye",
    "scipy.linalg.inv"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.factor_analysis.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "sklearn.decomposition.factor_analysis.log": {
  "data": {
   "shadows": "math.log"
  },
  "type": "import"
 },
 "sklearn.decomposition.factor_analysis.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.decomposition.factor_analysis.sqrt": {
  "data": {
   "shadows": "math.sqrt"
  },
  "type": "import"
 },
 "sklearn.decomposition.factor_analysis.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.decomposition.fastica_": {
  "data": {},
  "type": "module"
 },
 "sklearn.decomposition.fastica_.FastICA": {
  "data": {
   "lineno": 385
  },
  "type": "class"
 },
 "sklearn.decomposition.fastica_.FastICA.__init__": {
  "data": {
   "lineno": 465,
   "symbols_in_volume": [
    "ValueError",
    "fun",
    "sklearn.decomposition.fastica_.FastICA",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.fastica_.FastICA._fit": {
  "data": {
   "lineno": 482,
   "symbols_in_volume": [
    "numpy.dot",
    "scipy.linalg.pinv",
    "sklearn.decomposition.fastica_.fastica"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.fastica_.FastICA.fit": {
  "data": {
   "lineno": 538
  },
  "type": "function"
 },
 "sklearn.decomposition.fastica_.FastICA.fit_transform": {
  "data": {
   "lineno": 521
  },
  "type": "function"
 },
 "sklearn.decomposition.fastica_.FastICA.inverse_transform": {
  "data": {
   "lineno": 587,
   "symbols_in_volume": [
    "check_array",
    "check_is_fitted",
    "numpy.dot"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.fastica_.FastICA.transform": {
  "data": {
   "lineno": 556,
   "symbols_in_volume": [
    "DeprecationWarning",
    "check_array",
    "check_is_fitted",
    "isinstance",
    "numpy.dot",
    "sklearn.decomposition.fastica_.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.fastica_.__all__": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "sklearn.decomposition.fastica_._cube": {
  "data": {
   "lineno": 147
  },
  "type": "function"
 },
 "sklearn.decomposition.fastica_._exp": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "numpy.exp"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.fastica_._gs_decorrelation": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "numpy.dot"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.fastica_._ica_def": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "g",
    "max",
    "numpy.abs",
    "numpy.dot",
    "numpy.sqrt",
    "numpy.zeros",
    "range",
    "sklearn.decomposition.fastica_._gs_decorrelation"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.fastica_._ica_par": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "abs",
    "float",
    "g",
    "max",
    "numpy.diag",
    "numpy.dot",
    "numpy.newaxis",
    "sklearn.decomposition.fastica_._sym_decorrelation",
    "sklearn.decomposition.fastica_.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.fastica_._logcosh": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "enumerate",
    "numpy.empty",
    "numpy.tanh"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.fastica_._sym_decorrelation": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.sqrt",
    "scipy.linalg.eigh"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.fastica_.fastica": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "as_float_array",
    "callable",
    "check_array",
    "check_random_state",
    "exc",
    "fun",
    "g",
    "isinstance",
    "min",
    "numpy.asarray",
    "numpy.dot",
    "numpy.newaxis",
    "numpy.sqrt",
    "scipy.linalg.svd",
    "sklearn.decomposition.fastica_._cube",
    "sklearn.decomposition.fastica_._exp",
    "sklearn.decomposition.fastica_._ica_def",
    "sklearn.decomposition.fastica_._ica_par",
    "sklearn.decomposition.fastica_._logcosh",
    "sklearn.decomposition.fastica_.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.fastica_.fastica.g": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "fun"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.fastica_.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "sklearn.decomposition.fastica_.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.decomposition.fastica_.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.decomposition.incremental_pca": {
  "data": {},
  "type": "module"
 },
 "sklearn.decomposition.incremental_pca.IncrementalPCA": {
  "data": {
   "lineno": 16
  },
  "type": "class"
 },
 "sklearn.decomposition.incremental_pca.IncrementalPCA.__init__": {
  "data": {
   "lineno": 158
  },
  "type": "function"
 },
 "sklearn.decomposition.incremental_pca.IncrementalPCA.fit": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "check_array",
    "gen_batches",
    "numpy.float32",
    "numpy.float64"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.incremental_pca.IncrementalPCA.partial_fit": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "ValueError",
    "_incremental_mean_and_var",
    "check_array",
    "hasattr",
    "min",
    "numpy.float32",
    "numpy.float64",
    "numpy.mean",
    "numpy.repeat",
    "numpy.sqrt",
    "numpy.sum",
    "numpy.vstack",
    "scipy.linalg.svd",
    "svd_flip"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.incremental_pca.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sklearn.decomposition.incremental_pca.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "sklearn.decomposition.incremental_pca.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.decomposition.kernel_pca": {
  "data": {},
  "type": "module"
 },
 "sklearn.decomposition.kernel_pca.KernelPCA": {
  "data": {
   "lineno": 18
  },
  "type": "class"
 },
 "sklearn.decomposition.kernel_pca.KernelPCA.__init__": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.kernel_pca.KernelPCA._fit_inverse_transform": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "NotImplementedError",
    "hasattr",
    "scipy.linalg.solve"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.kernel_pca.KernelPCA._fit_transform": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "check_random_state",
    "min",
    "scipy.linalg.eigh",
    "scipy.sparse.linalg.eigsh"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.kernel_pca.KernelPCA._get_kernel": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "callable",
    "pairwise_kernels"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.kernel_pca.KernelPCA._pairwise": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.kernel_pca.KernelPCA.fit": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "KernelCenterer",
    "check_array",
    "numpy.diag",
    "numpy.dot",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.kernel_pca.KernelPCA.fit_transform": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.kernel_pca.KernelPCA.inverse_transform": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "NotFittedError",
    "numpy.dot"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.kernel_pca.KernelPCA.transform": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "check_is_fitted",
    "numpy.dot",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.kernel_pca.eigsh": {
  "data": {
   "shadows": "scipy.sparse.linalg.eigsh"
  },
  "type": "import"
 },
 "sklearn.decomposition.kernel_pca.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "sklearn.decomposition.kernel_pca.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.decomposition.online_lda": {
  "data": {
   "symbols_in_volume": [
    "numpy.finfo",
    "numpy.float"
   ]
  },
  "type": "module"
 },
 "sklearn.decomposition.online_lda.EPS": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "sklearn.decomposition.online_lda.LatentDirichletAllocation": {
  "data": {
   "lineno": 137
  },
  "type": "class"
 },
 "sklearn.decomposition.online_lda.LatentDirichletAllocation.__init__": {
  "data": {
   "lineno": 284
  },
  "type": "function"
 },
 "sklearn.decomposition.online_lda.LatentDirichletAllocation._approx_bound": {
  "data": {
   "lineno": 651,
   "symbols_in_volume": [
    "_dirichlet_expectation_2d",
    "_loglikelihood",
    "float",
    "logsumexp",
    "numpy.dot",
    "numpy.newaxis",
    "numpy.nonzero",
    "scipy.sparse.issparse",
    "xrange"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.online_lda.LatentDirichletAllocation._approx_bound._loglikelihood": {
  "data": {
   "lineno": 677,
   "symbols_in_volume": [
    "numpy.sum",
    "scipy.special.gammaln"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.online_lda.LatentDirichletAllocation._check_non_neg_array": {
  "data": {
   "lineno": 474,
   "symbols_in_volume": [
    "check_array",
    "check_non_negative"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.online_lda.LatentDirichletAllocation._check_params": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": [
    "DeprecationWarning",
    "ValueError",
    "sklearn.decomposition.online_lda.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.online_lda.LatentDirichletAllocation._e_step": {
  "data": {
   "lineno": 361,
   "symbols_in_volume": [
    "Parallel",
    "delayed",
    "effective_n_jobs",
    "gen_even_slices",
    "max",
    "numpy.vstack",
    "numpy.zeros",
    "parallel",
    "sklearn.decomposition.online_lda._update_doc_distribution",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.online_lda.LatentDirichletAllocation._em_step": {
  "data": {
   "lineno": 424,
   "symbols_in_volume": [
    "_dirichlet_expectation_2d",
    "float",
    "numpy.exp",
    "numpy.power",
    "parallel"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.online_lda.LatentDirichletAllocation._init_latent_vars": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": [
    "_dirichlet_expectation_2d",
    "check_random_state",
    "numpy.exp"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.online_lda.LatentDirichletAllocation._perplexity_precomp_distr": {
  "data": {
   "lineno": 748,
   "symbols_in_volume": [
    "NotFittedError",
    "ValueError",
    "float",
    "hasattr",
    "numpy.exp"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.online_lda.LatentDirichletAllocation._unnormalized_transform": {
  "data": {
   "lineno": 600,
   "symbols_in_volume": [
    "NotFittedError",
    "ValueError",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.online_lda.LatentDirichletAllocation.fit": {
  "data": {
   "lineno": 529,
   "symbols_in_volume": [
    "Parallel",
    "abs",
    "effective_n_jobs",
    "gen_batches",
    "max",
    "parallel",
    "print",
    "xrange"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.online_lda.LatentDirichletAllocation.partial_fit": {
  "data": {
   "lineno": 488,
   "symbols_in_volume": [
    "Parallel",
    "ValueError",
    "effective_n_jobs",
    "gen_batches",
    "hasattr",
    "max",
    "parallel"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.online_lda.LatentDirichletAllocation.perplexity": {
  "data": {
   "lineno": 798,
   "symbols_in_volume": [
    "DeprecationWarning",
    "sklearn.decomposition.online_lda.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.online_lda.LatentDirichletAllocation.score": {
  "data": {
   "lineno": 727
  },
  "type": "function"
 },
 "sklearn.decomposition.online_lda.LatentDirichletAllocation.transform": {
  "data": {
   "lineno": 631,
   "symbols_in_volume": [
    "numpy.newaxis"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.online_lda._update_doc_distribution": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "_dirichlet_expectation_1d",
    "_dirichlet_expectation_2d",
    "mean_change",
    "numpy.dot",
    "numpy.exp",
    "numpy.nonzero",
    "numpy.ones",
    "numpy.outer",
    "numpy.zeros",
    "scipy.sparse.issparse",
    "sklearn.decomposition.online_lda.EPS",
    "xrange"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.online_lda.gammaln": {
  "data": {
   "shadows": "scipy.special.gammaln"
  },
  "type": "import"
 },
 "sklearn.decomposition.online_lda.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.decomposition.online_lda.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.decomposition.online_lda.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.decomposition.pca": {
  "data": {},
  "type": "module"
 },
 "sklearn.decomposition.pca.PCA": {
  "data": {
   "lineno": 106
  },
  "type": "class"
 },
 "sklearn.decomposition.pca.PCA.__init__": {
  "data": {
   "lineno": 313
  },
  "type": "function"
 },
 "sklearn.decomposition.pca.PCA._fit": {
  "data": {
   "lineno": 371,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "check_array",
    "max",
    "min",
    "numpy.float32",
    "numpy.float64",
    "scipy.sparse.issparse"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.pca.PCA._fit_full": {
  "data": {
   "lineno": 413,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "min",
    "numpy.integer",
    "numpy.mean",
    "numpy.searchsorted",
    "scipy.linalg.svd",
    "sklearn.decomposition.pca._infer_dimension_",
    "sklearn.decomposition.pca.numbers",
    "stable_cumsum",
    "svd_flip",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.pca.PCA._fit_truncated": {
  "data": {
   "lineno": 476,
   "symbols_in_volume": [
    "ValueError",
    "check_random_state",
    "isinstance",
    "min",
    "numpy.integer",
    "numpy.mean",
    "numpy.var",
    "randomized_svd",
    "scipy.sparse.linalg.svds",
    "sklearn.decomposition.pca.numbers",
    "svd_flip",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.pca.PCA.fit": {
  "data": {
   "lineno": 324
  },
  "type": "function"
 },
 "sklearn.decomposition.pca.PCA.fit_transform": {
  "data": {
   "lineno": 343,
   "symbols_in_volume": [
    "math.sqrt"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.pca.PCA.score": {
  "data": {
   "lineno": 575,
   "symbols_in_volume": [
    "numpy.mean"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.pca.PCA.score_samples": {
  "data": {
   "lineno": 547,
   "symbols_in_volume": [
    "check_array",
    "check_is_fitted",
    "fast_logdet",
    "math.log",
    "numpy.dot",
    "numpy.pi"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.pca._assess_dimension_": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "math.log",
    "numpy.log",
    "numpy.pi",
    "numpy.sum",
    "range",
    "scipy.special.gammaln"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.pca._infer_dimension_": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "len",
    "numpy.empty",
    "range",
    "sklearn.decomposition.pca._assess_dimension_"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.pca.gammaln": {
  "data": {
   "shadows": "scipy.special.gammaln"
  },
  "type": "import"
 },
 "sklearn.decomposition.pca.issparse": {
  "data": {
   "shadows": "scipy.sparse.issparse"
  },
  "type": "import"
 },
 "sklearn.decomposition.pca.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "sklearn.decomposition.pca.log": {
  "data": {
   "shadows": "math.log"
  },
  "type": "import"
 },
 "sklearn.decomposition.pca.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.decomposition.pca.numbers": {
  "data": {
   "shadows": "numbers"
  },
  "type": "import"
 },
 "sklearn.decomposition.pca.sqrt": {
  "data": {
   "shadows": "math.sqrt"
  },
  "type": "import"
 },
 "sklearn.decomposition.pca.svds": {
  "data": {
   "shadows": "scipy.sparse.linalg.svds"
  },
  "type": "import"
 },
 "sklearn.decomposition.setup": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.distutils.core.setup",
    "sklearn.decomposition.setup.configuration"
   ]
  },
  "type": "module"
 },
 "sklearn.decomposition.setup.Configuration": {
  "data": {
   "shadows": "numpy.distutils.misc_util.Configuration"
  },
  "type": "import"
 },
 "sklearn.decomposition.setup.configuration": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "numpy.distutils.misc_util.Configuration",
    "sklearn.decomposition.setup.numpy",
    "sklearn.decomposition.setup.os"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.setup.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.decomposition.setup.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "sklearn.decomposition.setup.setup": {
  "data": {
   "shadows": "numpy.distutils.core.setup"
  },
  "type": "import"
 },
 "sklearn.decomposition.sparse_pca": {
  "data": {},
  "type": "module"
 },
 "sklearn.decomposition.sparse_pca.MiniBatchSparsePCA": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "sklearn.decomposition.sparse_pca.SparsePCA"
   ]
  },
  "type": "class"
 },
 "sklearn.decomposition.sparse_pca.MiniBatchSparsePCA.__init__": {
  "data": {
   "lineno": 364,
   "symbols_in_volume": [
    "sklearn.decomposition.sparse_pca.MiniBatchSparsePCA",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.sparse_pca.MiniBatchSparsePCA.fit": {
  "data": {
   "lineno": 378,
   "symbols_in_volume": [
    "DeprecationWarning",
    "check_array",
    "check_random_state",
    "dict_learning_online",
    "numpy.linalg.norm",
    "numpy.newaxis",
    "sklearn.decomposition.sparse_pca.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.sparse_pca.SparsePCA": {
  "data": {
   "lineno": 16
  },
  "type": "class"
 },
 "sklearn.decomposition.sparse_pca.SparsePCA.__init__": {
  "data": {
   "lineno": 126
  },
  "type": "function"
 },
 "sklearn.decomposition.sparse_pca.SparsePCA.fit": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "DeprecationWarning",
    "check_array",
    "check_random_state",
    "dict_learning",
    "numpy.linalg.norm",
    "numpy.newaxis",
    "sklearn.decomposition.sparse_pca.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.sparse_pca.SparsePCA.transform": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "DeprecationWarning",
    "check_array",
    "check_is_fitted",
    "numpy.sqrt",
    "ridge_regression",
    "sklearn.decomposition.sparse_pca.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.sparse_pca.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.decomposition.sparse_pca.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests": {
  "data": {},
  "type": "module"
 },
 "sklearn.decomposition.tests.test_dict_learning": {
  "data": {
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.decomposition.tests.test_dict_learning.rng_global"
   ]
  },
  "type": "module"
 },
 "sklearn.decomposition.tests.test_dict_learning.ConvergenceWarning": {
  "data": {
   "shadows": "sklearn.exceptions.ConvergenceWarning"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_dict_learning.DictionaryLearning": {
  "data": {
   "shadows": "sklearn.decomposition.DictionaryLearning"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_dict_learning.MiniBatchDictionaryLearning": {
  "data": {
   "shadows": "sklearn.decomposition.MiniBatchDictionaryLearning"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_dict_learning.SparseCoder": {
  "data": {
   "shadows": "sklearn.decomposition.SparseCoder"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_dict_learning.StringIO": {
  "data": {
   "shadows": "sklearn.externals.six.moves.cStringIO"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_dict_learning.TempMemmap": {
  "data": {
   "shadows": "sklearn.utils.testing.TempMemmap"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_dict_learning.X": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "sklearn.decomposition.tests.test_dict_learning.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_dict_learning.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_dict_learning.assert_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_dict_learning.assert_less": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_less"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_dict_learning.assert_raises": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_dict_learning.assert_true": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_true"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_dict_learning.check_array": {
  "data": {
   "shadows": "sklearn.utils.check_array"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_dict_learning.dict_learning_online": {
  "data": {
   "shadows": "sklearn.decomposition.dict_learning_online"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_dict_learning.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_dict_learning.ignore_warnings": {
  "data": {
   "shadows": "sklearn.utils.testing.ignore_warnings"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_dict_learning.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_dict_learning.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_dict_learning.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_dict_learning.rng_global": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "sklearn.decomposition.tests.test_dict_learning.sparse_encode": {
  "data": {
   "shadows": "sklearn.decomposition.sparse_encode"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_dict_learning.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_dict_learning.test_dict_learning_lassocd_readonly_data": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "numpy.dot",
    "sklearn.decomposition.DictionaryLearning",
    "sklearn.decomposition.tests.test_dict_learning.X",
    "sklearn.exceptions.ConvergenceWarning",
    "sklearn.utils.testing.TempMemmap",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_dict_learning.test_dict_learning_nonzero_coefs": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "len",
    "numpy.flatnonzero",
    "numpy.newaxis",
    "sklearn.decomposition.DictionaryLearning",
    "sklearn.decomposition.tests.test_dict_learning.X",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_dict_learning.test_dict_learning_online_estimator_shapes": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "sklearn.decomposition.MiniBatchDictionaryLearning",
    "sklearn.decomposition.tests.test_dict_learning.X",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_dict_learning.test_dict_learning_online_initialization": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.decomposition.MiniBatchDictionaryLearning",
    "sklearn.decomposition.tests.test_dict_learning.X",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_dict_learning.test_dict_learning_online_overcomplete": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "sklearn.decomposition.MiniBatchDictionaryLearning",
    "sklearn.decomposition.tests.test_dict_learning.X",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_dict_learning.test_dict_learning_online_partial_fit": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "len",
    "numpy.all",
    "numpy.newaxis",
    "numpy.random.RandomState",
    "numpy.sum",
    "range",
    "sklearn.decomposition.MiniBatchDictionaryLearning",
    "sklearn.decomposition.sparse_encode",
    "sklearn.decomposition.tests.test_dict_learning.X",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_dict_learning.test_dict_learning_online_positivity": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.decomposition.MiniBatchDictionaryLearning",
    "sklearn.decomposition.dict_learning_online",
    "sklearn.decomposition.tests.test_dict_learning.X",
    "sklearn.decomposition.tests.test_dict_learning.pytest",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_dict_learning.test_dict_learning_online_readonly_initialization": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.decomposition.MiniBatchDictionaryLearning",
    "sklearn.decomposition.tests.test_dict_learning.X"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_dict_learning.test_dict_learning_online_shapes": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.random.RandomState",
    "sklearn.decomposition.dict_learning_online",
    "sklearn.decomposition.tests.test_dict_learning.X",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_dict_learning.test_dict_learning_online_verbosity": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "sklearn.decomposition.MiniBatchDictionaryLearning",
    "sklearn.decomposition.dict_learning_online",
    "sklearn.decomposition.tests.test_dict_learning.X",
    "sklearn.decomposition.tests.test_dict_learning.sys",
    "sklearn.externals.six.moves.cStringIO",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_dict_learning.test_dict_learning_overcomplete": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "sklearn.decomposition.DictionaryLearning",
    "sklearn.decomposition.tests.test_dict_learning.X",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_dict_learning.test_dict_learning_positivity": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "sklearn.decomposition.DictionaryLearning",
    "sklearn.decomposition.tests.test_dict_learning.X",
    "sklearn.decomposition.tests.test_dict_learning.pytest",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_dict_learning.test_dict_learning_reconstruction": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "numpy.dot",
    "sklearn.decomposition.DictionaryLearning",
    "sklearn.decomposition.tests.test_dict_learning.X",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_dict_learning.test_dict_learning_reconstruction_parallel": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "numpy.dot",
    "sklearn.decomposition.DictionaryLearning",
    "sklearn.decomposition.tests.test_dict_learning.X",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_dict_learning.test_dict_learning_shapes": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "sklearn.decomposition.DictionaryLearning",
    "sklearn.decomposition.tests.test_dict_learning.X",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_dict_learning.test_dict_learning_split": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "sklearn.decomposition.DictionaryLearning",
    "sklearn.decomposition.tests.test_dict_learning.X",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_dict_learning.test_dict_learning_unknown_fit_algorithm": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.decomposition.DictionaryLearning",
    "sklearn.decomposition.tests.test_dict_learning.X",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_dict_learning.test_sparse_coder_estimator": {
  "data": {
   "lineno": 376,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.dot",
    "numpy.newaxis",
    "numpy.random.RandomState",
    "numpy.sqrt",
    "numpy.sum",
    "sklearn.decomposition.SparseCoder",
    "sklearn.decomposition.tests.test_dict_learning.X",
    "sklearn.utils.testing.assert_less",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_dict_learning.test_sparse_coder_parallel_mmap": {
  "data": {
   "lineno": 387,
   "symbols_in_volume": [
    "int",
    "numpy.float32",
    "numpy.random.RandomState",
    "numpy.random.rand",
    "sklearn.decomposition.SparseCoder"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_dict_learning.test_sparse_encode_error": {
  "data": {
   "lineno": 350,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.dot",
    "numpy.newaxis",
    "numpy.random.RandomState",
    "numpy.sqrt",
    "numpy.sum",
    "sklearn.decomposition.sparse_encode",
    "sklearn.decomposition.tests.test_dict_learning.X",
    "sklearn.utils.testing.assert_less",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_dict_learning.test_sparse_encode_error_default_sparsity": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.decomposition.sparse_encode",
    "sklearn.decomposition.tests.test_dict_learning.X",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_dict_learning.test_sparse_encode_input": {
  "data": {
   "lineno": 338,
   "symbols_in_volume": [
    "numpy.newaxis",
    "numpy.random.RandomState",
    "numpy.sum",
    "sklearn.decomposition.sparse_encode",
    "sklearn.decomposition.tests.test_dict_learning.X",
    "sklearn.utils.check_array",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_dict_learning.test_sparse_encode_positivity": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": [
    "ValueError",
    "numpy.newaxis",
    "numpy.random.RandomState",
    "numpy.sum",
    "sklearn.decomposition.sparse_encode",
    "sklearn.decomposition.tests.test_dict_learning.X",
    "sklearn.decomposition.tests.test_dict_learning.pytest",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_dict_learning.test_sparse_encode_shapes": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "numpy.newaxis",
    "numpy.random.RandomState",
    "numpy.sum",
    "sklearn.decomposition.sparse_encode",
    "sklearn.decomposition.tests.test_dict_learning.X",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_dict_learning.test_sparse_encode_shapes_omp": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.decomposition.sparse_encode",
    "sklearn.decomposition.tests.test_dict_learning.itertools",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_dict_learning.test_unknown_method": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": [
    "ValueError",
    "numpy.random.RandomState",
    "sklearn.decomposition.sparse_encode",
    "sklearn.decomposition.tests.test_dict_learning.X",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_factor_analysis": {
  "data": {},
  "type": "module"
 },
 "sklearn.decomposition.tests.test_factor_analysis.ConvergenceWarning": {
  "data": {
   "shadows": "sklearn.exceptions.ConvergenceWarning"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_factor_analysis.FactorAnalysis": {
  "data": {
   "shadows": "sklearn.decomposition.FactorAnalysis"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_factor_analysis.assert_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_factor_analysis.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_factor_analysis.assert_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_factor_analysis.assert_greater": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_greater"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_factor_analysis.assert_less": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_less"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_factor_analysis.assert_raises": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_factor_analysis.assert_warns": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_warns"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_factor_analysis.ignore_warnings": {
  "data": {
   "shadows": "sklearn.utils.testing.ignore_warnings"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_factor_analysis.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_factor_analysis.test_factor_analysis": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "ValueError",
    "f",
    "getattr",
    "numpy.abs",
    "numpy.all",
    "numpy.cov",
    "numpy.diff",
    "numpy.dot",
    "numpy.eye",
    "numpy.ones",
    "numpy.random.RandomState",
    "numpy.sum",
    "sklearn.decomposition.FactorAnalysis",
    "sklearn.exceptions.ConvergenceWarning",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_greater",
    "sklearn.utils.testing.assert_less",
    "sklearn.utils.testing.assert_raises",
    "sklearn.utils.testing.assert_warns",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_fastica": {
  "data": {},
  "type": "module"
 },
 "sklearn.decomposition.tests.test_fastica.ConvergenceWarning": {
  "data": {
   "shadows": "sklearn.exceptions.ConvergenceWarning"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_fastica.FastICA": {
  "data": {
   "shadows": "sklearn.decomposition.FastICA"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_fastica.PCA": {
  "data": {
   "shadows": "sklearn.decomposition.PCA"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_fastica._gs_decorrelation": {
  "data": {
   "shadows": "sklearn.decomposition.fastica_._gs_decorrelation"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_fastica.assert_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_fastica.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_fastica.assert_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_fastica.assert_less": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_less"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_fastica.assert_raises": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_fastica.assert_raises_regex": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises_regex"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_fastica.assert_true": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_true"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_fastica.assert_warns": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_warns"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_fastica.center_and_norm": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "numpy.rollaxis"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_fastica.fastica": {
  "data": {
   "shadows": "sklearn.decomposition.fastica"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_fastica.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_fastica.moves": {
  "data": {
   "shadows": "sklearn.externals.six.moves"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_fastica.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_fastica.stats": {
  "data": {
   "shadows": "scipy.stats"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_fastica.test_fastica_convergence_fail": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "numpy.c_.T",
    "numpy.ceil",
    "numpy.dot",
    "numpy.linspace",
    "numpy.pi",
    "numpy.random.RandomState",
    "numpy.sin",
    "sklearn.decomposition.FastICA",
    "sklearn.decomposition.tests.test_fastica.center_and_norm",
    "sklearn.exceptions.ConvergenceWarning",
    "sklearn.utils.testing.assert_warns"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_fastica.test_fastica_errors": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "ValueError",
    "numpy.random.RandomState",
    "sklearn.decomposition.FastICA",
    "sklearn.decomposition.fastica",
    "sklearn.utils.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_fastica.test_fastica_nowhiten": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "UserWarning",
    "hasattr",
    "sklearn.decomposition.FastICA",
    "sklearn.utils.testing.assert_true",
    "sklearn.utils.testing.assert_warns"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_fastica.test_fastica_simple": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "abs",
    "numpy.array",
    "numpy.c_.T",
    "numpy.cos",
    "numpy.dot",
    "numpy.linspace",
    "numpy.random.RandomState",
    "numpy.random.seed",
    "numpy.sign",
    "numpy.sin",
    "numpy.tanh",
    "scipy.stats.t.rvs",
    "sklearn.decomposition.FastICA",
    "sklearn.decomposition.PCA",
    "sklearn.decomposition.fastica",
    "sklearn.decomposition.tests.test_fastica.center_and_norm",
    "sklearn.decomposition.tests.test_fastica.itertools",
    "sklearn.externals.six.moves.xrange",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_fastica.test_fastica_simple.g_test": {
  "data": {
   "lineno": 80
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_fastica.test_fit_transform": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.decomposition.FastICA",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_fastica.test_gs": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.linalg.svd",
    "numpy.random.RandomState",
    "sklearn.decomposition.fastica_._gs_decorrelation",
    "sklearn.utils.testing.assert_less"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_fastica.test_inverse_transform": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.decomposition.FastICA",
    "sklearn.decomposition.tests.test_fastica.warnings",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_fastica.test_non_square_fastica": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "abs",
    "numpy.c_.T",
    "numpy.ceil",
    "numpy.dot",
    "numpy.linspace",
    "numpy.pi",
    "numpy.random.RandomState",
    "numpy.sign",
    "numpy.sin",
    "sklearn.decomposition.fastica",
    "sklearn.decomposition.tests.test_fastica.center_and_norm",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_fastica.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_incremental_pca": {
  "data": {
   "symbols_in_volume": [
    "sklearn.datasets.load_iris"
   ]
  },
  "type": "module"
 },
 "sklearn.decomposition.tests.test_incremental_pca.IncrementalPCA": {
  "data": {
   "shadows": "sklearn.decomposition.IncrementalPCA"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_incremental_pca.PCA": {
  "data": {
   "shadows": "sklearn.decomposition.PCA"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_incremental_pca.assert_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_incremental_pca.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_incremental_pca.assert_raises": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_incremental_pca.assert_raises_regex": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises_regex"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_incremental_pca.datasets": {
  "data": {
   "shadows": "sklearn.datasets"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_incremental_pca.iris": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "sklearn.decomposition.tests.test_incremental_pca.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_incremental_pca.test_explained_variances": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "sklearn.datasets.make_low_rank_matrix",
    "sklearn.decomposition.IncrementalPCA",
    "sklearn.decomposition.PCA",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_incremental_pca.test_incremental_pca": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.eye",
    "numpy.testing.assert_equal",
    "sklearn.decomposition.IncrementalPCA",
    "sklearn.decomposition.PCA",
    "sklearn.decomposition.tests.test_incremental_pca.iris",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_incremental_pca.test_incremental_pca_against_pca_iris": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "numpy.abs",
    "sklearn.decomposition.IncrementalPCA",
    "sklearn.decomposition.PCA",
    "sklearn.decomposition.tests.test_incremental_pca.iris",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_incremental_pca.test_incremental_pca_against_pca_random_data": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.random.RandomState",
    "sklearn.decomposition.IncrementalPCA",
    "sklearn.decomposition.PCA",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_incremental_pca.test_incremental_pca_batch_signs": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.random.RandomState",
    "numpy.sign",
    "sklearn.decomposition.IncrementalPCA",
    "sklearn.utils.testing.assert_almost_equal",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_incremental_pca.test_incremental_pca_batch_values": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.random.RandomState",
    "sklearn.decomposition.IncrementalPCA",
    "sklearn.utils.testing.assert_almost_equal",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_incremental_pca.test_incremental_pca_check_projection": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.array",
    "numpy.random.RandomState",
    "numpy.sqrt",
    "sklearn.decomposition.IncrementalPCA",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_incremental_pca.test_incremental_pca_inverse": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.decomposition.IncrementalPCA",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_incremental_pca.test_incremental_pca_num_features_change": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "ValueError",
    "numpy.random.RandomState",
    "sklearn.decomposition.IncrementalPCA",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_incremental_pca.test_incremental_pca_partial_fit": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.random.RandomState",
    "sklearn.decomposition.IncrementalPCA",
    "sklearn.utils.testing.assert_almost_equal",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_incremental_pca.test_incremental_pca_partial_fit_float_division": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": [
    "float",
    "numpy.random.RandomState",
    "numpy.testing.assert_allclose",
    "sklearn.decomposition.IncrementalPCA"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_incremental_pca.test_incremental_pca_set_params": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "ValueError",
    "numpy.random.RandomState",
    "sklearn.decomposition.IncrementalPCA",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_incremental_pca.test_incremental_pca_validation": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "sklearn.decomposition.IncrementalPCA",
    "sklearn.utils.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_incremental_pca.test_n_components_none": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "min",
    "numpy.random.RandomState",
    "sklearn.decomposition.IncrementalPCA"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_incremental_pca.test_singular_values": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.linalg.norm",
    "numpy.random.RandomState",
    "numpy.sqrt",
    "numpy.sum",
    "sklearn.datasets.make_low_rank_matrix",
    "sklearn.decomposition.IncrementalPCA",
    "sklearn.decomposition.PCA",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_incremental_pca.test_whitening": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "numpy.abs",
    "sklearn.datasets.make_low_rank_matrix",
    "sklearn.decomposition.IncrementalPCA",
    "sklearn.decomposition.PCA",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_kernel_pca": {
  "data": {},
  "type": "module"
 },
 "sklearn.decomposition.tests.test_kernel_pca.GridSearchCV": {
  "data": {
   "shadows": "sklearn.model_selection.GridSearchCV"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_kernel_pca.KernelPCA": {
  "data": {
   "shadows": "sklearn.decomposition.KernelPCA"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_kernel_pca.PCA": {
  "data": {
   "shadows": "sklearn.decomposition.PCA"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_kernel_pca.Perceptron": {
  "data": {
   "shadows": "sklearn.linear_model.Perceptron"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_kernel_pca.Pipeline": {
  "data": {
   "shadows": "sklearn.pipeline.Pipeline"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_kernel_pca.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_kernel_pca.assert_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_kernel_pca.assert_less": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_less"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_kernel_pca.assert_not_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_not_equal"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_kernel_pca.assert_raises": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_kernel_pca.ignore_warnings": {
  "data": {
   "shadows": "sklearn.utils.testing.ignore_warnings"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_kernel_pca.make_circles": {
  "data": {
   "shadows": "sklearn.datasets.make_circles"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_kernel_pca.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_kernel_pca.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_kernel_pca.rbf_kernel": {
  "data": {
   "shadows": "sklearn.metrics.pairwise.rbf_kernel"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_kernel_pca.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_kernel_pca.test_gridsearch_pipeline": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "dict",
    "numpy.arange",
    "sklearn.datasets.make_circles",
    "sklearn.decomposition.KernelPCA",
    "sklearn.decomposition.tests.test_kernel_pca.pytest",
    "sklearn.linear_model.Perceptron",
    "sklearn.model_selection.GridSearchCV",
    "sklearn.pipeline.Pipeline",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_kernel_pca.test_gridsearch_pipeline_precomputed": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "dict",
    "numpy.arange",
    "sklearn.datasets.make_circles",
    "sklearn.decomposition.KernelPCA",
    "sklearn.decomposition.tests.test_kernel_pca.pytest",
    "sklearn.linear_model.Perceptron",
    "sklearn.metrics.pairwise.rbf_kernel",
    "sklearn.model_selection.GridSearchCV",
    "sklearn.pipeline.Pipeline",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_kernel_pca.test_kernel_pca": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "callable",
    "numpy.abs",
    "numpy.random.RandomState",
    "sklearn.decomposition.KernelPCA",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_not_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_kernel_pca.test_kernel_pca.histogram": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "numpy.minimum",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_kernel_pca.test_kernel_pca_consistent_transform": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.decomposition.KernelPCA",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_kernel_pca.test_kernel_pca_invalid_kernel": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "ValueError",
    "numpy.random.RandomState",
    "sklearn.decomposition.KernelPCA",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_kernel_pca.test_kernel_pca_invalid_parameters": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.decomposition.KernelPCA",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_kernel_pca.test_kernel_pca_linear_kernel": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.random.RandomState",
    "sklearn.decomposition.KernelPCA",
    "sklearn.decomposition.PCA",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_kernel_pca.test_kernel_pca_n_components": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.decomposition.KernelPCA",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_kernel_pca.test_kernel_pca_precomputed": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.dot",
    "numpy.random.RandomState",
    "sklearn.decomposition.KernelPCA",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_kernel_pca.test_kernel_pca_sparse": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.random.RandomState",
    "scipy.sparse.csr_matrix",
    "sklearn.decomposition.KernelPCA",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_kernel_pca.test_nested_circles": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "sklearn.datasets.make_circles",
    "sklearn.decomposition.KernelPCA",
    "sklearn.linear_model.Perceptron",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_less"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_kernel_pca.test_remove_zero_eig": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.decomposition.KernelPCA",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_nmf": {
  "data": {},
  "type": "module"
 },
 "sklearn.decomposition.tests.test_nmf.ConvergenceWarning": {
  "data": {
   "shadows": "sklearn.exceptions.ConvergenceWarning"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_nmf.NMF": {
  "data": {
   "shadows": "sklearn.decomposition.NMF"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_nmf._beta_divergence_dense": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "isinstance",
    "numpy.array",
    "numpy.dot",
    "numpy.log",
    "numpy.maximum",
    "numpy.sum",
    "sklearn.decomposition.tests.test_nmf.numbers",
    "sklearn.utils.extmath.squared_norm"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_nmf.assert_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_nmf.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_nmf.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_nmf.assert_false": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_false"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_nmf.assert_greater": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_greater"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_nmf.assert_less": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_less"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_nmf.assert_no_warnings": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_no_warnings"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_nmf.assert_raise_message": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raise_message"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_nmf.assert_true": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_true"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_nmf.clone": {
  "data": {
   "shadows": "sklearn.base.clone"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_nmf.csc_matrix": {
  "data": {
   "shadows": "scipy.sparse.csc_matrix"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_nmf.ignore_warnings": {
  "data": {
   "shadows": "sklearn.utils.testing.ignore_warnings"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_nmf.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_nmf.nmf": {
  "data": {
   "shadows": "sklearn.decomposition.nmf"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_nmf.non_negative_factorization": {
  "data": {
   "shadows": "sklearn.decomposition.non_negative_factorization"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_nmf.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_nmf.numbers": {
  "data": {
   "shadows": "numbers"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_nmf.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_nmf.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_nmf.squared_norm": {
  "data": {
   "shadows": "sklearn.utils.extmath.squared_norm"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_nmf.test_beta_divergence": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "numpy.clip",
    "numpy.random.mtrand.RandomState",
    "scipy.sparse.csr_matrix",
    "sklearn.decomposition.nmf._beta_divergence",
    "sklearn.decomposition.nmf._initialize_nmf",
    "sklearn.decomposition.tests.test_nmf._beta_divergence_dense",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_nmf.test_initialize_close": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.dot",
    "numpy.random.mtrand.RandomState",
    "scipy.linalg.norm",
    "sklearn.decomposition.nmf._initialize_nmf",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_nmf.test_initialize_nn_output": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.random.mtrand.RandomState",
    "sklearn.decomposition.nmf._initialize_nmf",
    "sklearn.utils.testing.assert_false"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_nmf.test_initialize_variants": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.random.mtrand.RandomState",
    "sklearn.decomposition.nmf._initialize_nmf",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_nmf.test_n_components_greater_n_features": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.random.mtrand.RandomState",
    "sklearn.decomposition.NMF"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_nmf.test_nmf_decreasing": {
  "data": {
   "lineno": 448,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.random.mtrand.RandomState",
    "range",
    "sklearn.decomposition.nmf._beta_divergence",
    "sklearn.decomposition.nmf._initialize_nmf",
    "sklearn.decomposition.non_negative_factorization",
    "sklearn.exceptions.ConvergenceWarning",
    "sklearn.utils.testing.assert_greater",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_nmf.test_nmf_fit_close": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.random.mtrand.RandomState",
    "sklearn.decomposition.NMF",
    "sklearn.decomposition.tests.test_nmf.pytest",
    "sklearn.utils.testing.assert_less"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_nmf.test_nmf_fit_nn_output": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "UserWarning",
    "numpy.arange",
    "numpy.c_",
    "sklearn.decomposition.NMF",
    "sklearn.utils.testing.assert_false",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_nmf.test_nmf_inverse_transform": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.random.RandomState",
    "sklearn.decomposition.NMF",
    "sklearn.decomposition.tests.test_nmf.pytest",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_nmf.test_nmf_multiplicative_update_sparse": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.random.mtrand.RandomState",
    "scipy.sparse.csr_matrix",
    "sklearn.decomposition.nmf._initialize_nmf",
    "sklearn.decomposition.non_negative_factorization",
    "sklearn.exceptions.ConvergenceWarning",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_nmf.test_nmf_negative_beta_loss": {
  "data": {
   "lineno": 371,
   "symbols_in_volume": [
    "ValueError",
    "_assert_nmf_no_nan",
    "numpy.clip",
    "numpy.random.mtrand.RandomState",
    "scipy.sparse.csr_matrix",
    "sklearn.utils.testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_nmf.test_nmf_negative_beta_loss._assert_nmf_no_nan": {
  "data": {
   "lineno": 383,
   "symbols_in_volume": [
    "numpy.any",
    "numpy.isnan",
    "sklearn.decomposition.non_negative_factorization",
    "sklearn.utils.testing.assert_false"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_nmf.test_nmf_regularization": {
  "data": {
   "lineno": 400,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.random.mtrand.RandomState",
    "sklearn.decomposition.nmf.NMF",
    "sklearn.utils.testing.assert_greater"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_nmf.test_nmf_sparse_input": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.arange",
    "numpy.random.mtrand.RandomState",
    "scipy.sparse.csc_matrix",
    "sklearn.base.clone",
    "sklearn.decomposition.NMF",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_nmf.test_nmf_sparse_transform": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.random.mtrand.RandomState",
    "scipy.sparse.csc_matrix",
    "sklearn.decomposition.NMF",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_nmf.test_nmf_transform": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.random.mtrand.RandomState",
    "sklearn.decomposition.NMF",
    "sklearn.decomposition.tests.test_nmf.pytest",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_nmf.test_nmf_transform_custom_init": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.random.RandomState",
    "numpy.sqrt",
    "sklearn.decomposition.NMF"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_nmf.test_nmf_underflow": {
  "data": {
   "lineno": 486,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.random.RandomState",
    "sklearn.decomposition.nmf._beta_divergence",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_nmf.test_non_negative_factorization_checking": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "ValueError",
    "numpy.int64",
    "numpy.ones",
    "sklearn.decomposition.non_negative_factorization",
    "sklearn.utils.testing.assert_no_warnings",
    "sklearn.utils.testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_nmf.test_non_negative_factorization_consistency": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.arange",
    "numpy.random.mtrand.RandomState",
    "sklearn.decomposition.NMF",
    "sklearn.decomposition.non_negative_factorization",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_nmf.test_parameter_checking": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "ValueError",
    "numpy.ones",
    "sklearn.decomposition.NMF",
    "sklearn.decomposition.nmf._initialize_nmf",
    "sklearn.utils.testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_nmf.test_special_sparse_dot": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.asarray",
    "numpy.clip",
    "numpy.random.mtrand.RandomState",
    "scipy.sparse.csr_matrix",
    "sklearn.decomposition.nmf._special_sparse_dot",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_online_lda": {
  "data": {},
  "type": "module"
 },
 "sklearn.decomposition.tests.test_online_lda.LatentDirichletAllocation": {
  "data": {
   "shadows": "sklearn.decomposition.LatentDirichletAllocation"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_online_lda.NotFittedError": {
  "data": {
   "shadows": "sklearn.exceptions.NotFittedError"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_online_lda.StringIO": {
  "data": {
   "shadows": "sklearn.externals.six.StringIO"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_online_lda._build_sparse_mtx": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "numpy.full",
    "numpy.int",
    "scipy.linalg.block_diag",
    "scipy.sparse.csr_matrix"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_online_lda._dirichlet_expectation_1d": {
  "data": {
   "shadows": "sklearn.decomposition._online_lda._dirichlet_expectation_1d"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_online_lda._dirichlet_expectation_2d": {
  "data": {
   "shadows": "sklearn.decomposition._online_lda._dirichlet_expectation_2d"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_online_lda.assert_allclose": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_allclose"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_online_lda.assert_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_online_lda.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_online_lda.assert_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_online_lda.assert_greater_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_greater_equal"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_online_lda.assert_raises_regexp": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises_regexp"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_online_lda.assert_true": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_true"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_online_lda.assert_warns": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_warns"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_online_lda.block_diag": {
  "data": {
   "shadows": "scipy.linalg.block_diag"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_online_lda.check_verbosity": {
  "data": {
   "lineno": 386,
   "symbols_in_volume": [
    "sklearn.decomposition.LatentDirichletAllocation",
    "sklearn.decomposition.tests.test_online_lda._build_sparse_mtx",
    "sklearn.decomposition.tests.test_online_lda.sys",
    "sklearn.externals.six.StringIO",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_online_lda.csr_matrix": {
  "data": {
   "shadows": "scipy.sparse.csr_matrix"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_online_lda.if_safe_multiprocessing_with_blas": {
  "data": {
   "shadows": "sklearn.utils.testing.if_safe_multiprocessing_with_blas"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_online_lda.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_online_lda.psi": {
  "data": {
   "shadows": "scipy.special.psi"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_online_lda.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_online_lda.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_online_lda.test_dirichlet_expectation": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": [
    "numpy.empty_like",
    "numpy.exp",
    "numpy.logspace",
    "numpy.newaxis",
    "numpy.sum",
    "scipy.special.psi",
    "sklearn.decomposition._online_lda._dirichlet_expectation_1d",
    "sklearn.decomposition._online_lda._dirichlet_expectation_2d",
    "sklearn.utils.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_online_lda.test_doc_topic_distr_deprecation": {
  "data": {
   "lineno": 350,
   "symbols_in_volume": [
    "DeprecationWarning",
    "sklearn.decomposition.LatentDirichletAllocation",
    "sklearn.decomposition.tests.test_online_lda._build_sparse_mtx",
    "sklearn.utils.testing.assert_warns"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_online_lda.test_invalid_params": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "ValueError",
    "numpy.ones",
    "sklearn.decomposition.LatentDirichletAllocation",
    "sklearn.utils.testing.assert_raises_regexp"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_online_lda.test_lda_default_prior_params": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "sklearn.decomposition.LatentDirichletAllocation",
    "sklearn.decomposition.tests.test_online_lda._build_sparse_mtx",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_online_lda.test_lda_dense_input": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "set",
    "sklearn.decomposition.LatentDirichletAllocation",
    "sklearn.decomposition.tests.test_online_lda._build_sparse_mtx",
    "sklearn.utils.testing.assert_true",
    "sorted",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_online_lda.test_lda_empty_docs": {
  "data": {
   "lineno": 363,
   "symbols_in_volume": [
    "numpy.ones",
    "numpy.zeros",
    "scipy.sparse.csr_matrix",
    "sklearn.decomposition.LatentDirichletAllocation",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_online_lda.test_lda_fit_batch": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "set",
    "sklearn.decomposition.LatentDirichletAllocation",
    "sklearn.decomposition.tests.test_online_lda._build_sparse_mtx",
    "sklearn.utils.testing.assert_true",
    "sorted",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_online_lda.test_lda_fit_online": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "set",
    "sklearn.decomposition.LatentDirichletAllocation",
    "sklearn.decomposition.tests.test_online_lda._build_sparse_mtx",
    "sklearn.utils.testing.assert_true",
    "sorted",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_online_lda.test_lda_fit_perplexity": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": [
    "sklearn.decomposition.LatentDirichletAllocation",
    "sklearn.decomposition.tests.test_online_lda._build_sparse_mtx",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_online_lda.test_lda_fit_transform": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.decomposition.LatentDirichletAllocation",
    "sklearn.decomposition.tests.test_online_lda.pytest",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_online_lda.test_lda_multi_jobs": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "set",
    "sklearn.decomposition.LatentDirichletAllocation",
    "sklearn.decomposition.tests.test_online_lda._build_sparse_mtx",
    "sklearn.decomposition.tests.test_online_lda.pytest",
    "sklearn.utils.testing.assert_true",
    "sklearn.utils.testing.if_safe_multiprocessing_with_blas",
    "sorted",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_online_lda.test_lda_n_topics_deprecation": {
  "data": {
   "lineno": 420,
   "symbols_in_volume": [
    "DeprecationWarning",
    "sklearn.decomposition.LatentDirichletAllocation",
    "sklearn.decomposition.tests.test_online_lda._build_sparse_mtx",
    "sklearn.utils.testing.assert_warns"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_online_lda.test_lda_negative_input": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "ValueError",
    "numpy.full",
    "sklearn.decomposition.LatentDirichletAllocation",
    "sklearn.utils.testing.assert_raises_regexp"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_online_lda.test_lda_no_component_error": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.decomposition.LatentDirichletAllocation",
    "sklearn.exceptions.NotFittedError",
    "sklearn.utils.testing.assert_raises_regexp"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_online_lda.test_lda_partial_fit": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "set",
    "sklearn.decomposition.LatentDirichletAllocation",
    "sklearn.decomposition.tests.test_online_lda._build_sparse_mtx",
    "sklearn.externals.six.moves.xrange",
    "sklearn.utils.testing.assert_true",
    "sorted",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_online_lda.test_lda_partial_fit_dim_mismatch": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "ValueError",
    "numpy.random.RandomState",
    "numpy.random.randint",
    "sklearn.decomposition.LatentDirichletAllocation",
    "sklearn.utils.testing.assert_raises_regexp"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_online_lda.test_lda_partial_fit_multi_jobs": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "range",
    "set",
    "sklearn.decomposition.LatentDirichletAllocation",
    "sklearn.decomposition.tests.test_online_lda._build_sparse_mtx",
    "sklearn.utils.testing.assert_true",
    "sklearn.utils.testing.if_safe_multiprocessing_with_blas",
    "sorted",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_online_lda.test_lda_perplexity": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "sklearn.decomposition.LatentDirichletAllocation",
    "sklearn.decomposition.tests.test_online_lda._build_sparse_mtx",
    "sklearn.decomposition.tests.test_online_lda.pytest",
    "sklearn.utils.testing.assert_greater_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_online_lda.test_lda_preplexity_mismatch": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "ValueError",
    "numpy.random.RandomState",
    "numpy.random.randint",
    "sklearn.decomposition.LatentDirichletAllocation",
    "sklearn.utils.testing.assert_raises_regexp"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_online_lda.test_lda_score": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "sklearn.decomposition.LatentDirichletAllocation",
    "sklearn.decomposition.tests.test_online_lda._build_sparse_mtx",
    "sklearn.decomposition.tests.test_online_lda.pytest",
    "sklearn.utils.testing.assert_greater_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_online_lda.test_lda_score_perplexity": {
  "data": {
   "lineno": 319,
   "symbols_in_volume": [
    "numpy.exp",
    "numpy.sum",
    "sklearn.decomposition.LatentDirichletAllocation",
    "sklearn.decomposition.tests.test_online_lda._build_sparse_mtx",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_online_lda.test_lda_transform": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "numpy.ones",
    "numpy.random.RandomState",
    "numpy.sum",
    "sklearn.decomposition.LatentDirichletAllocation",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_online_lda.test_lda_transform_mismatch": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "ValueError",
    "numpy.random.RandomState",
    "sklearn.decomposition.LatentDirichletAllocation",
    "sklearn.utils.testing.assert_raises_regexp"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_online_lda.test_perplexity_input_format": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": [
    "sklearn.decomposition.LatentDirichletAllocation",
    "sklearn.decomposition.tests.test_online_lda._build_sparse_mtx",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_online_lda.test_verbosity": {
  "data": {
   "lineno": 407,
   "symbols_in_volume": [
    "sklearn.decomposition.tests.test_online_lda.check_verbosity",
    "sklearn.decomposition.tests.test_online_lda.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_online_lda.xrange": {
  "data": {
   "shadows": "sklearn.externals.six.moves.xrange"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_pca": {
  "data": {
   "symbols_in_volume": [
    "sklearn.datasets.load_iris"
   ]
  },
  "type": "module"
 },
 "sklearn.decomposition.tests.test_pca.PCA": {
  "data": {
   "shadows": "sklearn.decomposition.PCA"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_pca._assess_dimension_": {
  "data": {
   "shadows": "sklearn.decomposition.pca._assess_dimension_"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_pca._infer_dimension_": {
  "data": {
   "shadows": "sklearn.decomposition.pca._infer_dimension_"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_pca.assert_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_pca.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_pca.assert_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_pca.assert_greater": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_greater"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_pca.assert_less": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_less"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_pca.assert_no_warnings": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_no_warnings"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_pca.assert_raise_message": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raise_message"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_pca.assert_raises": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_pca.assert_raises_regex": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises_regex"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_pca.assert_true": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_true"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_pca.assert_warns_message": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_warns_message"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_pca.check_pca_float_dtype_preservation": {
  "data": {
   "lineno": 712,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.float64",
    "numpy.random.RandomState",
    "sklearn.decomposition.PCA",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_pca.check_pca_int_dtype_upcast_to_double": {
  "data": {
   "lineno": 731,
   "symbols_in_volume": [
    "numpy.float64",
    "numpy.int32",
    "numpy.int64",
    "numpy.random.RandomState",
    "sklearn.decomposition.PCA",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_pca.datasets": {
  "data": {
   "shadows": "sklearn.datasets"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_pca.ignore_warnings": {
  "data": {
   "shadows": "sklearn.utils.testing.ignore_warnings"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_pca.iris": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "sklearn.decomposition.tests.test_pca.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_pca.product": {
  "data": {
   "shadows": "itertools.product"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_pca.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_pca.solver_list": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "sklearn.decomposition.tests.test_pca.sp": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_pca.test_explained_variance": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "numpy.cov",
    "numpy.linalg.eig",
    "numpy.random.RandomState",
    "numpy.var",
    "sklearn.datasets.make_classification",
    "sklearn.decomposition.PCA",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.ignore_warnings",
    "sorted"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_pca.test_infer_dim_1": {
  "data": {
   "lineno": 497,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.random.RandomState",
    "range",
    "sklearn.decomposition.PCA",
    "sklearn.decomposition.pca._assess_dimension_",
    "sklearn.utils.testing.assert_greater"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_pca.test_infer_dim_2": {
  "data": {
   "lineno": 514,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.random.RandomState",
    "sklearn.decomposition.PCA",
    "sklearn.decomposition.pca._infer_dimension_",
    "sklearn.utils.testing.assert_greater"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_pca.test_infer_dim_3": {
  "data": {
   "lineno": 528,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.random.RandomState",
    "sklearn.decomposition.PCA",
    "sklearn.decomposition.pca._infer_dimension_",
    "sklearn.utils.testing.assert_greater"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_pca.test_infer_dim_by_explained_variance": {
  "data": {
   "lineno": 541,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.decomposition.PCA",
    "sklearn.decomposition.tests.test_pca.iris",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_pca.test_n_components_mle": {
  "data": {
   "lineno": 466,
   "symbols_in_volume": [
    "ValueError",
    "numpy.random.RandomState",
    "sklearn.decomposition.PCA",
    "sklearn.decomposition.tests.test_pca.solver_list",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_pca.test_n_components_none": {
  "data": {
   "lineno": 403,
   "symbols_in_volume": [
    "min",
    "sklearn.decomposition.PCA",
    "sklearn.decomposition.tests.test_pca.iris",
    "sklearn.decomposition.tests.test_pca.pytest",
    "sklearn.decomposition.tests.test_pca.solver_list",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_pca.test_no_empty_slice_warning": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "numpy.random.uniform",
    "sklearn.decomposition.PCA",
    "sklearn.utils.testing.assert_no_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_pca.test_pca": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.dot",
    "numpy.eye",
    "numpy.testing.assert_equal",
    "sklearn.decomposition.PCA",
    "sklearn.decomposition.tests.test_pca.iris",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_pca.test_pca_arpack_solver": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "ValueError",
    "numpy.arange",
    "numpy.dot",
    "numpy.eye",
    "numpy.testing.assert_equal",
    "sklearn.decomposition.PCA",
    "sklearn.decomposition.tests.test_pca.iris",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_pca.test_pca_bad_solver": {
  "data": {
   "lineno": 700,
   "symbols_in_volume": [
    "ValueError",
    "numpy.random.RandomState",
    "sklearn.decomposition.PCA",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_pca.test_pca_check_projection": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.array",
    "numpy.random.RandomState",
    "numpy.sqrt",
    "sklearn.decomposition.PCA",
    "sklearn.decomposition.tests.test_pca.solver_list",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_pca.test_pca_dim": {
  "data": {
   "lineno": 486,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.random.RandomState",
    "sklearn.decomposition.PCA",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_pca.test_pca_dtype_preservation": {
  "data": {
   "lineno": 706,
   "symbols_in_volume": [
    "sklearn.decomposition.tests.test_pca.check_pca_float_dtype_preservation",
    "sklearn.decomposition.tests.test_pca.check_pca_int_dtype_upcast_to_double",
    "sklearn.decomposition.tests.test_pca.pytest",
    "sklearn.decomposition.tests.test_pca.solver_list"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_pca.test_pca_inverse": {
  "data": {
   "lineno": 330,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.decomposition.PCA",
    "sklearn.decomposition.tests.test_pca.solver_list",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_pca.test_pca_randomized_solver": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "ValueError",
    "numpy.arange",
    "numpy.dot",
    "numpy.eye",
    "numpy.testing.assert_equal",
    "sklearn.decomposition.PCA",
    "sklearn.decomposition.tests.test_pca.iris",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_pca.test_pca_score": {
  "data": {
   "lineno": 561,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.exp",
    "numpy.log",
    "numpy.pi",
    "numpy.random.RandomState",
    "numpy.testing.assert_almost_equal",
    "sklearn.decomposition.PCA",
    "sklearn.decomposition.tests.test_pca.solver_list"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_pca.test_pca_score2": {
  "data": {
   "lineno": 574,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.random.RandomState",
    "sklearn.decomposition.PCA",
    "sklearn.decomposition.tests.test_pca.solver_list",
    "sklearn.utils.testing.assert_greater",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_pca.test_pca_score3": {
  "data": {
   "lineno": 593,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.random.RandomState",
    "numpy.zeros",
    "range",
    "sklearn.decomposition.PCA",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_pca.test_pca_score_with_different_solvers": {
  "data": {
   "lineno": 610,
   "symbols_in_volume": [
    "numpy.all",
    "sklearn.datasets.load_digits",
    "sklearn.decomposition.PCA",
    "sklearn.decomposition.tests.test_pca.solver_list",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_pca.test_pca_sparse_input": {
  "data": {
   "lineno": 689,
   "symbols_in_volume": [
    "TypeError",
    "numpy.random.RandomState",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.issparse",
    "sklearn.decomposition.PCA",
    "sklearn.decomposition.tests.test_pca.pytest",
    "sklearn.decomposition.tests.test_pca.solver_list",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_pca.test_pca_validation": {
  "data": {
   "lineno": 354,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "sklearn.decomposition.PCA",
    "sklearn.decomposition.tests.test_pca.pytest",
    "sklearn.decomposition.tests.test_pca.solver_list",
    "sklearn.utils.testing.assert_raise_message",
    "sklearn.utils.testing.assert_raises_regex",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_pca.test_pca_zero_noise_variance_edge_cases": {
  "data": {
   "lineno": 634,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.random.RandomState",
    "sklearn.decomposition.PCA"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_pca.test_randomized_pca_check_list": {
  "data": {
   "lineno": 432,
   "symbols_in_volume": [
    "sklearn.decomposition.PCA",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_pca.test_randomized_pca_check_projection": {
  "data": {
   "lineno": 417,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.array",
    "numpy.random.RandomState",
    "numpy.sqrt",
    "sklearn.decomposition.PCA",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_pca.test_randomized_pca_inverse": {
  "data": {
   "lineno": 442,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.random.RandomState",
    "sklearn.decomposition.PCA",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_less"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_pca.test_singular_values": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.linalg.norm",
    "numpy.random.RandomState",
    "numpy.sqrt",
    "numpy.sum",
    "sklearn.decomposition.PCA",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_pca.test_svd_solver_auto": {
  "data": {
   "lineno": 654,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.decomposition.PCA",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_pca.test_whitening": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "itertools.product",
    "numpy.diag",
    "numpy.dot",
    "numpy.linspace",
    "numpy.ones",
    "numpy.random.RandomState",
    "numpy.zeros",
    "sklearn.decomposition.PCA",
    "sklearn.decomposition.tests.test_pca.solver_list",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_greater"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_sparse_pca": {
  "data": {},
  "type": "module"
 },
 "sklearn.decomposition.tests.test_sparse_pca.MiniBatchSparsePCA": {
  "data": {
   "shadows": "sklearn.decomposition.MiniBatchSparsePCA"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_sparse_pca.PCA": {
  "data": {
   "shadows": "sklearn.decomposition.PCA"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_sparse_pca.SkipTest": {
  "data": {
   "shadows": "sklearn.utils.testing.SkipTest"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_sparse_pca.SparsePCA": {
  "data": {
   "shadows": "sklearn.decomposition.SparsePCA"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_sparse_pca.assert_allclose": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_allclose"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_sparse_pca.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_sparse_pca.assert_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_sparse_pca.assert_false": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_false"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_sparse_pca.assert_true": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_true"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_sparse_pca.assert_warns_message": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_warns_message"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_sparse_pca.check_random_state": {
  "data": {
   "shadows": "sklearn.utils.check_random_state"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_sparse_pca.generate_toy_data": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.zeros",
    "range",
    "sklearn.utils.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_sparse_pca.if_safe_multiprocessing_with_blas": {
  "data": {
   "shadows": "sklearn.utils.testing.if_safe_multiprocessing_with_blas"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_sparse_pca.joblib_par": {
  "data": {
   "shadows": "sklearn.utils._joblib.parallel"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_sparse_pca.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_sparse_pca.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_sparse_pca.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_sparse_pca.test_correct_shapes": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.decomposition.SparsePCA",
    "sklearn.decomposition.tests.test_sparse_pca.pytest",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_sparse_pca.test_fit_transform": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "DeprecationWarning",
    "numpy.random.RandomState",
    "sklearn.decomposition.SparsePCA",
    "sklearn.decomposition.tests.test_sparse_pca.generate_toy_data",
    "sklearn.decomposition.tests.test_sparse_pca.pytest",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_warns_message"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_sparse_pca.test_fit_transform_parallel": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.random.RandomState",
    "sklearn.decomposition.SparsePCA",
    "sklearn.decomposition.tests.test_sparse_pca.generate_toy_data",
    "sklearn.decomposition.tests.test_sparse_pca.pytest",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_true",
    "sklearn.utils.testing.if_safe_multiprocessing_with_blas"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_sparse_pca.test_fit_transform_tall": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.decomposition.SparsePCA",
    "sklearn.decomposition.tests.test_sparse_pca.generate_toy_data",
    "sklearn.decomposition.tests.test_sparse_pca.pytest",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_sparse_pca.test_initialization": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "numpy.linalg.norm",
    "numpy.random.RandomState",
    "sklearn.decomposition.SparsePCA",
    "sklearn.decomposition.tests.test_sparse_pca.pytest",
    "sklearn.utils.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_sparse_pca.test_mini_batch_correct_shapes": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.decomposition.MiniBatchSparsePCA",
    "sklearn.decomposition.tests.test_sparse_pca.pytest",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_sparse_pca.test_mini_batch_fit_transform": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.random.RandomState",
    "sklearn.decomposition.MiniBatchSparsePCA",
    "sklearn.decomposition.tests.test_sparse_pca.generate_toy_data",
    "sklearn.decomposition.tests.test_sparse_pca.pytest",
    "sklearn.decomposition.tests.test_sparse_pca.sys",
    "sklearn.utils._joblib.parallel.multiprocessing",
    "sklearn.utils.testing.SkipTest",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_sparse_pca.test_pca_vs_spca": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.eye",
    "numpy.random.RandomState",
    "numpy.sign",
    "sklearn.decomposition.PCA",
    "sklearn.decomposition.SparsePCA",
    "sklearn.decomposition.tests.test_sparse_pca.generate_toy_data",
    "sklearn.utils.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_sparse_pca.test_scaling_fit_transform": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.decomposition.SparsePCA",
    "sklearn.decomposition.tests.test_sparse_pca.generate_toy_data",
    "sklearn.utils.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_sparse_pca.test_spca_deprecation_warning": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "DeprecationWarning",
    "numpy.random.RandomState",
    "sklearn.decomposition.MiniBatchSparsePCA",
    "sklearn.decomposition.SparsePCA",
    "sklearn.decomposition.tests.test_sparse_pca.generate_toy_data",
    "sklearn.decomposition.tests.test_sparse_pca.pytest",
    "sklearn.utils.testing.assert_warns_message",
    "spca"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_sparse_pca.test_transform_nan": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "numpy.any",
    "numpy.isnan",
    "numpy.random.RandomState",
    "sklearn.decomposition.SparsePCA",
    "sklearn.decomposition.tests.test_sparse_pca.generate_toy_data",
    "sklearn.decomposition.tests.test_sparse_pca.pytest",
    "sklearn.utils.testing.assert_false"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_truncated_svd": {
  "data": {
   "symbols_in_volume": [
    "numpy.float64",
    "numpy.log",
    "numpy.maximum",
    "numpy.product",
    "scipy.sparse.csr_matrix",
    "sklearn.decomposition.tests.test_truncated_svd.X",
    "sklearn.decomposition.tests.test_truncated_svd.rng",
    "sklearn.decomposition.tests.test_truncated_svd.shape",
    "sklearn.utils.check_random_state"
   ]
  },
  "type": "module"
 },
 "sklearn.decomposition.tests.test_truncated_svd.PCA": {
  "data": {
   "shadows": "sklearn.decomposition.PCA"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_truncated_svd.TruncatedSVD": {
  "data": {
   "shadows": "sklearn.decomposition.TruncatedSVD"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_truncated_svd.X": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "sklearn.decomposition.tests.test_truncated_svd.Xdense": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "sklearn.decomposition.tests.test_truncated_svd.assert_allclose": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_allclose"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_truncated_svd.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_truncated_svd.assert_array_less": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_less"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_truncated_svd.assert_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_truncated_svd.assert_greater": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_greater"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_truncated_svd.assert_raises": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_truncated_svd.check_random_state": {
  "data": {
   "shadows": "sklearn.utils.check_random_state"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_truncated_svd.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_truncated_svd.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_truncated_svd.rng": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "sklearn.decomposition.tests.test_truncated_svd.shape": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "sklearn.decomposition.tests.test_truncated_svd.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_truncated_svd.test_algorithms": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "numpy.abs",
    "sklearn.decomposition.TruncatedSVD",
    "sklearn.decomposition.tests.test_truncated_svd.X",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_truncated_svd.test_attributes": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "sklearn.decomposition.TruncatedSVD",
    "sklearn.decomposition.tests.test_truncated_svd.X",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_truncated_svd.test_explained_variance": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "numpy.var",
    "sklearn.decomposition.TruncatedSVD",
    "sklearn.decomposition.tests.test_truncated_svd.X",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_array_less",
    "sklearn.utils.testing.assert_greater"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_truncated_svd.test_integers": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "numpy.int64",
    "sklearn.decomposition.TruncatedSVD",
    "sklearn.decomposition.tests.test_truncated_svd.X",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_truncated_svd.test_inverse_transform": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "sklearn.decomposition.TruncatedSVD",
    "sklearn.decomposition.tests.test_truncated_svd.X",
    "sklearn.decomposition.tests.test_truncated_svd.Xdense",
    "sklearn.decomposition.tests.test_truncated_svd.pytest",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_truncated_svd.test_singular_values": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.linalg.norm",
    "numpy.random.RandomState",
    "numpy.sqrt",
    "numpy.sum",
    "sklearn.decomposition.TruncatedSVD",
    "sklearn.decomposition.tests.test_truncated_svd.X",
    "sklearn.decomposition.tests.test_truncated_svd.rng",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_truncated_svd.test_sparse_formats": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "getattr",
    "sklearn.decomposition.TruncatedSVD",
    "sklearn.decomposition.tests.test_truncated_svd.X",
    "sklearn.decomposition.tests.test_truncated_svd.Xdense",
    "sklearn.decomposition.tests.test_truncated_svd.pytest",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_truncated_svd.test_too_many_components": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.decomposition.TruncatedSVD",
    "sklearn.decomposition.tests.test_truncated_svd.X",
    "sklearn.decomposition.tests.test_truncated_svd.pytest",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_truncated_svd.test_truncated_svd_eq_pca": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "dict",
    "sklearn.decomposition.PCA",
    "sklearn.decomposition.TruncatedSVD",
    "sklearn.decomposition.tests.test_truncated_svd.X",
    "sklearn.utils.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.truncated_svd": {
  "data": {},
  "type": "module"
 },
 "sklearn.decomposition.truncated_svd.TruncatedSVD": {
  "data": {
   "lineno": 21
  },
  "type": "class"
 },
 "sklearn.decomposition.truncated_svd.TruncatedSVD.__init__": {
  "data": {
   "lineno": 118
  },
  "type": "function"
 },
 "sklearn.decomposition.truncated_svd.TruncatedSVD.fit": {
  "data": {
   "lineno": 126
  },
  "type": "function"
 },
 "sklearn.decomposition.truncated_svd.TruncatedSVD.fit_transform": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "ValueError",
    "check_array",
    "check_random_state",
    "mean_variance_axis",
    "numpy.var",
    "randomized_svd",
    "scipy.sparse.issparse",
    "scipy.sparse.linalg.svds",
    "svd_flip"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.truncated_svd.TruncatedSVD.inverse_transform": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "check_array",
    "numpy.dot"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.truncated_svd.TruncatedSVD.transform": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "check_array",
    "safe_sparse_dot"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.truncated_svd.__all__": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "sklearn.decomposition.truncated_svd.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.decomposition.truncated_svd.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.decomposition.truncated_svd.svds": {
  "data": {
   "shadows": "scipy.sparse.linalg.svds"
  },
  "type": "import"
 },
 "sklearn.discriminant_analysis": {
  "data": {},
  "type": "module"
 },
 "sklearn.discriminant_analysis.LinearDiscriminantAnalysis": {
  "data": {
   "lineno": 130
  },
  "type": "class"
 },
 "sklearn.discriminant_analysis.LinearDiscriminantAnalysis.__init__": {
  "data": {
   "lineno": 250
  },
  "type": "function"
 },
 "sklearn.discriminant_analysis.LinearDiscriminantAnalysis._solve_eigen": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "numpy.argsort",
    "numpy.diag",
    "numpy.dot",
    "numpy.linalg.norm",
    "numpy.log",
    "numpy.sort",
    "numpy.sum",
    "scipy.linalg.eigh",
    "sklearn.discriminant_analysis._class_cov",
    "sklearn.discriminant_analysis._class_means",
    "sklearn.discriminant_analysis._cov"
   ]
  },
  "type": "function"
 },
 "sklearn.discriminant_analysis.LinearDiscriminantAnalysis._solve_lsqr": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "numpy.diag",
    "numpy.dot",
    "numpy.log",
    "scipy.linalg.lstsq",
    "sklearn.discriminant_analysis._class_cov",
    "sklearn.discriminant_analysis._class_means"
   ]
  },
  "type": "function"
 },
 "sklearn.discriminant_analysis.LinearDiscriminantAnalysis._solve_svd": {
  "data": {
   "lineno": 348,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "numpy.concatenate",
    "numpy.dot",
    "numpy.log",
    "numpy.sqrt",
    "numpy.sum",
    "scipy.linalg.svd",
    "sklearn.discriminant_analysis._class_cov",
    "sklearn.discriminant_analysis._class_means",
    "sklearn.discriminant_analysis.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.discriminant_analysis.LinearDiscriminantAnalysis.fit": {
  "data": {
   "lineno": 411,
   "symbols_in_volume": [
    "NotImplementedError",
    "UserWarning",
    "ValueError",
    "check_X_y",
    "float",
    "len",
    "min",
    "numpy.array",
    "numpy.asarray",
    "numpy.bincount",
    "numpy.isclose",
    "numpy.unique",
    "sklearn.discriminant_analysis.warnings",
    "unique_labels"
   ]
  },
  "type": "function"
 },
 "sklearn.discriminant_analysis.LinearDiscriminantAnalysis.predict_log_proba": {
  "data": {
   "lineno": 520,
   "symbols_in_volume": [
    "numpy.log"
   ]
  },
  "type": "function"
 },
 "sklearn.discriminant_analysis.LinearDiscriminantAnalysis.predict_proba": {
  "data": {
   "lineno": 495,
   "symbols_in_volume": [
    "len",
    "numpy.column_stack",
    "numpy.exp",
    "numpy.reciprocal"
   ]
  },
  "type": "function"
 },
 "sklearn.discriminant_analysis.LinearDiscriminantAnalysis.transform": {
  "data": {
   "lineno": 469,
   "symbols_in_volume": [
    "NotImplementedError",
    "any",
    "check_array",
    "check_is_fitted",
    "numpy.dot"
   ]
  },
  "type": "function"
 },
 "sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis": {
  "data": {
   "lineno": 536
  },
  "type": "class"
 },
 "sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis.__init__": {
  "data": {
   "lineno": 616,
   "symbols_in_volume": [
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis._decision_function": {
  "data": {
   "lineno": 701,
   "symbols_in_volume": [
    "check_array",
    "check_is_fitted",
    "len",
    "numpy.array",
    "numpy.asarray",
    "numpy.dot",
    "numpy.log",
    "numpy.sum",
    "range"
   ]
  },
  "type": "function"
 },
 "sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis.covariances_": {
  "data": {
   "lineno": 624,
   "symbols_in_volume": [
    "deprecated",
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis.decision_function": {
  "data": {
   "lineno": 716,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis.fit": {
  "data": {
   "lineno": 631,
   "symbols_in_volume": [
    "DeprecationWarning",
    "ValueError",
    "check_X_y",
    "check_classification_targets",
    "float",
    "len",
    "numpy.asarray",
    "numpy.bincount",
    "numpy.dot",
    "numpy.linalg.svd",
    "numpy.sum",
    "numpy.unique",
    "sklearn.discriminant_analysis.warnings",
    "str",
    "xrange"
   ]
  },
  "type": "function"
 },
 "sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis.predict": {
  "data": {
   "lineno": 737
  },
  "type": "function"
 },
 "sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis.predict_log_proba": {
  "data": {
   "lineno": 774,
   "symbols_in_volume": [
    "numpy.log"
   ]
  },
  "type": "function"
 },
 "sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis.predict_proba": {
  "data": {
   "lineno": 754,
   "symbols_in_volume": [
    "numpy.exp",
    "numpy.newaxis"
   ]
  },
  "type": "function"
 },
 "sklearn.discriminant_analysis.__all__": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "sklearn.discriminant_analysis._class_cov": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "enumerate",
    "numpy.atleast_2d",
    "numpy.unique",
    "numpy.zeros",
    "sklearn.discriminant_analysis._cov"
   ]
  },
  "type": "function"
 },
 "sklearn.discriminant_analysis._class_means": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "len",
    "numpy.add.at",
    "numpy.bincount",
    "numpy.unique",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "sklearn.discriminant_analysis._cov": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "StandardScaler",
    "TypeError",
    "ValueError",
    "empirical_covariance",
    "float",
    "int",
    "isinstance",
    "ledoit_wolf",
    "numpy.newaxis",
    "shrunk_covariance"
   ]
  },
  "type": "function"
 },
 "sklearn.discriminant_analysis.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "sklearn.discriminant_analysis.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.discriminant_analysis.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "sklearn.discriminant_analysis.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.dummy": {
  "data": {},
  "type": "module"
 },
 "sklearn.dummy.DummyClassifier": {
  "data": {
   "lineno": 22
  },
  "type": "class"
 },
 "sklearn.dummy.DummyClassifier.__init__": {
  "data": {
   "lineno": 84
  },
  "type": "function"
 },
 "sklearn.dummy.DummyClassifier.fit": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "UserWarning",
    "ValueError",
    "any",
    "check_consistent_length",
    "class_distribution",
    "numpy.atleast_1d",
    "numpy.reshape",
    "range",
    "scipy.sparse.issparse",
    "sklearn.dummy.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.dummy.DummyClassifier.predict": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "ValueError",
    "_num_samples",
    "check_is_fitted",
    "check_random_state",
    "numpy.array",
    "numpy.ravel",
    "numpy.tile",
    "numpy.vstack",
    "random_choice_csc",
    "range"
   ]
  },
  "type": "function"
 },
 "sklearn.dummy.DummyClassifier.predict_log_proba": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "numpy.log"
   ]
  },
  "type": "function"
 },
 "sklearn.dummy.DummyClassifier.predict_proba": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "_num_samples",
    "check_is_fitted",
    "check_random_state",
    "numpy.float64",
    "numpy.ones",
    "numpy.where",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "sklearn.dummy.DummyClassifier.score": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": [
    "len",
    "numpy.zeros",
    "sklearn.dummy.DummyClassifier",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.dummy.DummyRegressor": {
  "data": {
   "lineno": 355
  },
  "type": "class"
 },
 "sklearn.dummy.DummyRegressor.__init__": {
  "data": {
   "lineno": 399
  },
  "type": "function"
 },
 "sklearn.dummy.DummyRegressor.fit": {
  "data": {
   "lineno": 404,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "_weighted_percentile",
    "check_array",
    "check_consistent_length",
    "len",
    "numpy.average",
    "numpy.isscalar",
    "numpy.median",
    "numpy.percentile",
    "numpy.reshape",
    "range"
   ]
  },
  "type": "function"
 },
 "sklearn.dummy.DummyRegressor.predict": {
  "data": {
   "lineno": 481,
   "symbols_in_volume": [
    "_num_samples",
    "check_is_fitted",
    "numpy.array",
    "numpy.full",
    "numpy.ravel",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "sklearn.dummy.DummyRegressor.score": {
  "data": {
   "lineno": 515,
   "symbols_in_volume": [
    "len",
    "numpy.zeros",
    "sklearn.dummy.DummyRegressor",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.dummy.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sklearn.dummy.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.dummy.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.dummy.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.ensemble": {
  "data": {},
  "type": "module"
 },
 "sklearn.ensemble.__all__": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "sklearn.ensemble.bagging": {
  "data": {
   "symbols_in_volume": [
    "numpy.iinfo",
    "numpy.int32"
   ]
  },
  "type": "module"
 },
 "sklearn.ensemble.bagging.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "sklearn.ensemble.bagging.BaggingClassifier": {
  "data": {
   "lineno": 426,
   "symbols_in_volume": [
    "sklearn.ensemble.bagging.BaseBagging"
   ]
  },
  "type": "class"
 },
 "sklearn.ensemble.bagging.BaggingClassifier.__init__": {
  "data": {
   "lineno": 548,
   "symbols_in_volume": [
    "sklearn.ensemble.bagging.BaggingClassifier",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.bagging.BaggingClassifier._set_oob_score": {
  "data": {
   "lineno": 579,
   "symbols_in_volume": [
    "accuracy_score",
    "hasattr",
    "indices_to_mask",
    "numpy.argmax",
    "numpy.newaxis",
    "numpy.zeros",
    "range",
    "warnings.warn",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.bagging.BaggingClassifier._validate_estimator": {
  "data": {
   "lineno": 574,
   "symbols_in_volume": [
    "DecisionTreeClassifier",
    "sklearn.ensemble.bagging.BaggingClassifier",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.bagging.BaggingClassifier._validate_y": {
  "data": {
   "lineno": 617,
   "symbols_in_volume": [
    "check_classification_targets",
    "column_or_1d",
    "len",
    "numpy.unique"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.bagging.BaggingClassifier.decision_function": {
  "data": {
   "lineno": 757,
   "symbols_in_volume": [
    "Parallel",
    "ValueError",
    "_partition_estimators",
    "check_array",
    "check_is_fitted",
    "delayed",
    "if_delegate_has_method",
    "range",
    "sklearn.ensemble.bagging._parallel_decision_function",
    "sum"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.bagging.BaggingClassifier.predict": {
  "data": {
   "lineno": 625,
   "symbols_in_volume": [
    "numpy.argmax"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.bagging.BaggingClassifier.predict_log_proba": {
  "data": {
   "lineno": 699,
   "symbols_in_volume": [
    "Parallel",
    "ValueError",
    "_partition_estimators",
    "check_array",
    "check_is_fitted",
    "delayed",
    "hasattr",
    "len",
    "numpy.log",
    "numpy.logaddexp",
    "range",
    "sklearn.ensemble.bagging._parallel_predict_log_proba"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.bagging.BaggingClassifier.predict_proba": {
  "data": {
   "lineno": 647,
   "symbols_in_volume": [
    "Parallel",
    "ValueError",
    "_partition_estimators",
    "check_array",
    "check_is_fitted",
    "delayed",
    "range",
    "sklearn.ensemble.bagging._parallel_predict_proba",
    "sum"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.bagging.BaggingRegressor": {
  "data": {
   "lineno": 807,
   "symbols_in_volume": [
    "sklearn.ensemble.bagging.BaseBagging"
   ]
  },
  "type": "class"
 },
 "sklearn.ensemble.bagging.BaggingRegressor.__init__": {
  "data": {
   "lineno": 918,
   "symbols_in_volume": [
    "sklearn.ensemble.bagging.BaggingRegressor",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.bagging.BaggingRegressor._set_oob_score": {
  "data": {
   "lineno": 988,
   "symbols_in_volume": [
    "indices_to_mask",
    "numpy.zeros",
    "r2_score",
    "warnings.warn",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.bagging.BaggingRegressor._validate_estimator": {
  "data": {
   "lineno": 983,
   "symbols_in_volume": [
    "DecisionTreeRegressor",
    "sklearn.ensemble.bagging.BaggingRegressor",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.bagging.BaggingRegressor.predict": {
  "data": {
   "lineno": 943,
   "symbols_in_volume": [
    "Parallel",
    "_partition_estimators",
    "check_array",
    "check_is_fitted",
    "delayed",
    "range",
    "sklearn.ensemble.bagging._parallel_predict_regression",
    "sum"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.bagging.BaseBagging": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "abc.ABCMeta",
    "with_metaclass"
   ]
  },
  "type": "class"
 },
 "sklearn.ensemble.bagging.BaseBagging.__init__": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "sklearn.ensemble.bagging.BaseBagging",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.bagging.BaseBagging._fit": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "Parallel",
    "ValueError",
    "_partition_estimators",
    "check_X_y",
    "check_array",
    "check_consistent_length",
    "check_random_state",
    "delayed",
    "hasattr",
    "int",
    "isinstance",
    "len",
    "list",
    "numpy.integer",
    "range",
    "sklearn.ensemble.bagging.MAX_INT",
    "sklearn.ensemble.bagging._parallel_build_estimators",
    "sklearn.ensemble.bagging.itertools",
    "sklearn.ensemble.bagging.numbers",
    "sum",
    "warnings.warn"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.bagging.BaseBagging._get_estimators_indices": {
  "data": {
   "lineno": 397,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.ensemble.bagging._generate_bagging_indices"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.bagging.BaseBagging._set_oob_score": {
  "data": {
   "lineno": 387,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.bagging.BaseBagging._validate_y": {
  "data": {
   "lineno": 391,
   "symbols_in_volume": [
    "column_or_1d",
    "len"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.bagging.BaseBagging.estimators_samples_": {
  "data": {
   "lineno": 410,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.bagging.BaseBagging.fit": {
  "data": {
   "lineno": 221
  },
  "type": "function"
 },
 "sklearn.ensemble.bagging.MAX_INT": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "sklearn.ensemble.bagging.__all__": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "sklearn.ensemble.bagging._generate_bagging_indices": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "check_random_state",
    "sklearn.ensemble.bagging._generate_indices"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.bagging._generate_indices": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "sample_without_replacement"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.bagging._parallel_build_estimators": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "ValueError",
    "has_fit_parameter",
    "indices_to_mask",
    "numpy.bincount",
    "numpy.ones",
    "numpy.random.RandomState",
    "print",
    "range",
    "sklearn.ensemble.bagging._generate_bagging_indices"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.bagging._parallel_decision_function": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "sum",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.bagging._parallel_predict_log_proba": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "numpy.empty",
    "numpy.inf",
    "numpy.int",
    "numpy.logaddexp",
    "numpy.setdiff1d",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.bagging._parallel_predict_proba": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "hasattr",
    "len",
    "numpy.zeros",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.bagging._parallel_predict_regression": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "sum",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.bagging.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "sklearn.ensemble.bagging.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sklearn.ensemble.bagging.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "sklearn.ensemble.bagging.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.ensemble.bagging.numbers": {
  "data": {
   "shadows": "numbers"
  },
  "type": "import"
 },
 "sklearn.ensemble.bagging.warn": {
  "data": {
   "shadows": "warnings.warn"
  },
  "type": "import"
 },
 "sklearn.ensemble.base": {
  "data": {
   "symbols_in_volume": [
    "numpy.iinfo",
    "numpy.int32"
   ]
  },
  "type": "module"
 },
 "sklearn.ensemble.base.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "sklearn.ensemble.base.BaseEnsemble": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "abc.ABCMeta"
   ]
  },
  "type": "class"
 },
 "sklearn.ensemble.base.BaseEnsemble.__getitem__": {
  "data": {
   "lineno": 142
  },
  "type": "function"
 },
 "sklearn.ensemble.base.BaseEnsemble.__init__": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.base.BaseEnsemble.__iter__": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "iter"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.base.BaseEnsemble.__len__": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.base.BaseEnsemble._make_estimator": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "clone",
    "dict",
    "getattr",
    "sklearn.ensemble.base._set_random_states"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.base.BaseEnsemble._validate_estimator": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "numpy.integer",
    "sklearn.ensemble.base.numbers",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.base.MAX_RAND_SEED": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "sklearn.ensemble.base._partition_estimators": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "effective_n_jobs",
    "min",
    "numpy.cumsum",
    "numpy.full",
    "numpy.int"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.base._set_random_states": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "check_random_state",
    "sklearn.ensemble.base.MAX_RAND_SEED",
    "sorted"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.base.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "sklearn.ensemble.base.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.ensemble.base.numbers": {
  "data": {
   "shadows": "numbers"
  },
  "type": "import"
 },
 "sklearn.ensemble.forest": {
  "data": {
   "symbols_in_volume": [
    "numpy.iinfo",
    "numpy.int32"
   ]
  },
  "type": "module"
 },
 "sklearn.ensemble.forest.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "sklearn.ensemble.forest.BaseForest": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "abc.ABCMeta"
   ]
  },
  "type": "class"
 },
 "sklearn.ensemble.forest.BaseForest.__init__": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "sklearn.ensemble.forest.BaseForest",
    "super",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.forest.BaseForest._set_oob_score": {
  "data": {
   "lineno": 350,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.forest.BaseForest._validate_X_predict": {
  "data": {
   "lineno": 358,
   "symbols_in_volume": [
    "NotFittedError",
    "len"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.forest.BaseForest._validate_y_class_weight": {
  "data": {
   "lineno": 354
  },
  "type": "function"
 },
 "sklearn.ensemble.forest.BaseForest.apply": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "Parallel",
    "delayed",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.forest.BaseForest.decision_path": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "Parallel",
    "delayed",
    "numpy.array",
    "scipy.sparse.hstack"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.forest.BaseForest.feature_importances_": {
  "data": {
   "lineno": 366,
   "symbols_in_volume": [
    "Parallel",
    "check_is_fitted",
    "delayed",
    "getattr",
    "len",
    "property",
    "sum"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.forest.BaseForest.fit": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "FutureWarning",
    "Parallel",
    "ValueError",
    "check_array",
    "check_random_state",
    "delayed",
    "enumerate",
    "getattr",
    "hasattr",
    "len",
    "numpy.ascontiguousarray",
    "numpy.atleast_1d",
    "numpy.reshape",
    "range",
    "scipy.sparse.issparse",
    "sklearn.ensemble.forest.MAX_INT",
    "sklearn.ensemble.forest._parallel_build_trees",
    "sklearn.ensemble.forest.warnings",
    "warnings.warn"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.forest.ExtraTreesClassifier": {
  "data": {
   "lineno": 1294,
   "symbols_in_volume": [
    "sklearn.ensemble.forest.ForestClassifier"
   ]
  },
  "type": "class"
 },
 "sklearn.ensemble.forest.ExtraTreesClassifier.__init__": {
  "data": {
   "lineno": 1504,
   "symbols_in_volume": [
    "ExtraTreeClassifier",
    "sklearn.ensemble.forest.ExtraTreesClassifier",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.forest.ExtraTreesRegressor": {
  "data": {
   "lineno": 1549,
   "symbols_in_volume": [
    "sklearn.ensemble.forest.ForestRegressor"
   ]
  },
  "type": "class"
 },
 "sklearn.ensemble.forest.ExtraTreesRegressor.__init__": {
  "data": {
   "lineno": 1726,
   "symbols_in_volume": [
    "ExtraTreeRegressor",
    "sklearn.ensemble.forest.ExtraTreesRegressor",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.forest.ForestClassifier": {
  "data": {
   "lineno": 400,
   "symbols_in_volume": [
    "abc.ABCMeta",
    "sklearn.ensemble.forest.BaseForest"
   ]
  },
  "type": "class"
 },
 "sklearn.ensemble.forest.ForestClassifier.__init__": {
  "data": {
   "lineno": 408,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "sklearn.ensemble.forest.ForestClassifier",
    "super",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.forest.ForestClassifier._set_oob_score": {
  "data": {
   "lineno": 432,
   "symbols_in_volume": [
    "check_array",
    "numpy.argmax",
    "numpy.mean",
    "numpy.newaxis",
    "numpy.zeros",
    "range",
    "sklearn.ensemble.forest._generate_unsampled_indices",
    "warnings.warn"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.forest.ForestClassifier._validate_y_class_weight": {
  "data": {
   "lineno": 477,
   "symbols_in_volume": [
    "ValueError",
    "check_classification_targets",
    "compute_sample_weight",
    "isinstance",
    "numpy.copy",
    "numpy.int",
    "numpy.unique",
    "numpy.zeros",
    "range",
    "warnings.warn"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.forest.ForestClassifier.predict": {
  "data": {
   "lineno": 525,
   "symbols_in_volume": [
    "numpy.argmax",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.forest.ForestClassifier.predict_log_proba": {
  "data": {
   "lineno": 607,
   "symbols_in_volume": [
    "numpy.log",
    "range"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.forest.ForestClassifier.predict_proba": {
  "data": {
   "lineno": 561,
   "symbols_in_volume": [
    "Parallel",
    "_partition_estimators",
    "check_is_fitted",
    "delayed",
    "len",
    "numpy.atleast_1d",
    "numpy.float64",
    "numpy.zeros",
    "sklearn.ensemble.forest._accumulate_prediction",
    "sklearn.ensemble.forest.threading"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.forest.ForestRegressor": {
  "data": {
   "lineno": 640,
   "symbols_in_volume": [
    "abc.ABCMeta",
    "sklearn.ensemble.forest.BaseForest"
   ]
  },
  "type": "class"
 },
 "sklearn.ensemble.forest.ForestRegressor.__init__": {
  "data": {
   "lineno": 647,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "sklearn.ensemble.forest.ForestRegressor",
    "super",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.forest.ForestRegressor._set_oob_score": {
  "data": {
   "lineno": 710,
   "symbols_in_volume": [
    "check_array",
    "numpy.newaxis",
    "numpy.zeros",
    "r2_score",
    "range",
    "sklearn.ensemble.forest._generate_unsampled_indices",
    "warnings.warn"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.forest.ForestRegressor.predict": {
  "data": {
   "lineno": 669,
   "symbols_in_volume": [
    "Parallel",
    "_partition_estimators",
    "check_is_fitted",
    "delayed",
    "len",
    "numpy.float64",
    "numpy.zeros",
    "sklearn.ensemble.forest._accumulate_prediction",
    "sklearn.ensemble.forest.threading"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.forest.MAX_INT": {
  "data": {
   "lineno": 75
  },
  "type": "constant"
 },
 "sklearn.ensemble.forest.RandomForestClassifier": {
  "data": {
   "lineno": 753,
   "symbols_in_volume": [
    "sklearn.ensemble.forest.ForestClassifier"
   ]
  },
  "type": "class"
 },
 "sklearn.ensemble.forest.RandomForestClassifier.__init__": {
  "data": {
   "lineno": 993,
   "symbols_in_volume": [
    "DecisionTreeClassifier",
    "sklearn.ensemble.forest.RandomForestClassifier",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.forest.RandomForestRegressor": {
  "data": {
   "lineno": 1038,
   "symbols_in_volume": [
    "sklearn.ensemble.forest.ForestRegressor"
   ]
  },
  "type": "class"
 },
 "sklearn.ensemble.forest.RandomForestRegressor.__init__": {
  "data": {
   "lineno": 1251,
   "symbols_in_volume": [
    "DecisionTreeRegressor",
    "sklearn.ensemble.forest.RandomForestRegressor",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.forest.RandomTreesEmbedding": {
  "data": {
   "lineno": 1769,
   "symbols_in_volume": [
    "sklearn.ensemble.forest.BaseForest"
   ]
  },
  "type": "class"
 },
 "sklearn.ensemble.forest.RandomTreesEmbedding.__init__": {
  "data": {
   "lineno": 1900,
   "symbols_in_volume": [
    "ExtraTreeRegressor",
    "sklearn.ensemble.forest.RandomTreesEmbedding",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.forest.RandomTreesEmbedding._set_oob_score": {
  "data": {
   "lineno": 1940,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.forest.RandomTreesEmbedding.fit": {
  "data": {
   "lineno": 1943
  },
  "type": "function"
 },
 "sklearn.ensemble.forest.RandomTreesEmbedding.fit_transform": {
  "data": {
   "lineno": 1968,
   "symbols_in_volume": [
    "OneHotEncoder",
    "check_array",
    "check_random_state",
    "scipy.sparse.issparse",
    "sklearn.ensemble.forest.RandomTreesEmbedding",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.forest.RandomTreesEmbedding.transform": {
  "data": {
   "lineno": 2004
  },
  "type": "function"
 },
 "sklearn.ensemble.forest.__all__": {
  "data": {
   "lineno": 69
  },
  "type": "constant"
 },
 "sklearn.ensemble.forest._accumulate_prediction": {
  "data": {
   "lineno": 385,
   "symbols_in_volume": [
    "len",
    "predict",
    "range"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.forest._generate_sample_indices": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.forest._generate_unsampled_indices": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.bincount",
    "sklearn.ensemble.forest._generate_sample_indices"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.forest._parallel_build_trees": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "DeprecationWarning",
    "compute_sample_weight",
    "numpy.bincount",
    "numpy.float64",
    "numpy.ones",
    "print",
    "sklearn.ensemble.forest._generate_sample_indices",
    "sklearn.ensemble.forest.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.forest.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "sklearn.ensemble.forest.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sklearn.ensemble.forest.issparse": {
  "data": {
   "shadows": "scipy.sparse.issparse"
  },
  "type": "import"
 },
 "sklearn.ensemble.forest.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.ensemble.forest.sparse_hstack": {
  "data": {
   "shadows": "scipy.sparse.hstack"
  },
  "type": "import"
 },
 "sklearn.ensemble.forest.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "sklearn.ensemble.forest.warn": {
  "data": {
   "shadows": "warnings.warn"
  },
  "type": "import"
 },
 "sklearn.ensemble.forest.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.ensemble.gradient_boosting": {
  "data": {
   "symbols_in_volume": [
    "sklearn.ensemble.gradient_boosting.ExponentialLoss",
    "sklearn.ensemble.gradient_boosting.HuberLossFunction",
    "sklearn.ensemble.gradient_boosting.LeastAbsoluteError",
    "sklearn.ensemble.gradient_boosting.LeastSquaresError",
    "sklearn.ensemble.gradient_boosting.QuantileLossFunction",
    "sklearn.ensemble.gradient_boosting.ZeroEstimator"
   ]
  },
  "type": "module"
 },
 "sklearn.ensemble.gradient_boosting.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "sklearn.ensemble.gradient_boosting.BaseGradientBoosting": {
  "data": {
   "lineno": 1122,
   "symbols_in_volume": [
    "abc.ABCMeta"
   ]
  },
  "type": "class"
 },
 "sklearn.ensemble.gradient_boosting.BaseGradientBoosting.__init__": {
  "data": {
   "lineno": 1125,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.BaseGradientBoosting._check_initialized": {
  "data": {
   "lineno": 1345,
   "symbols_in_volume": [
    "check_is_fitted"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.BaseGradientBoosting._check_params": {
  "data": {
   "lineno": 1206,
   "symbols_in_volume": [
    "ValueError",
    "hasattr",
    "int",
    "isinstance",
    "len",
    "loss_class",
    "max",
    "numpy.integer",
    "numpy.log2",
    "numpy.sqrt",
    "sklearn.ensemble.gradient_boosting.BinomialDeviance",
    "sklearn.ensemble.gradient_boosting.INIT_ESTIMATORS",
    "sklearn.ensemble.gradient_boosting.LOSS_FUNCTIONS",
    "sklearn.ensemble.gradient_boosting.MultinomialDeviance",
    "sklearn.ensemble.gradient_boosting.numbers",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.BaseGradientBoosting._clear_state": {
  "data": {
   "lineno": 1309,
   "symbols_in_volume": [
    "hasattr",
    "numpy.empty",
    "numpy.object"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.BaseGradientBoosting._decision_function": {
  "data": {
   "lineno": 1583,
   "symbols_in_volume": [
    "predict_stages"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.BaseGradientBoosting._fit_stage": {
  "data": {
   "lineno": 1158,
   "symbols_in_volume": [
    "DecisionTreeRegressor",
    "numpy.array",
    "numpy.bool",
    "numpy.float64",
    "range"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.BaseGradientBoosting._fit_stages": {
  "data": {
   "lineno": 1477,
   "symbols_in_volume": [
    "_random_sample_mask",
    "int",
    "len",
    "locals",
    "loss_",
    "max",
    "monitor",
    "next",
    "numpy.any",
    "numpy.bool",
    "numpy.full",
    "numpy.inf",
    "numpy.ones",
    "numpy.sum",
    "range",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.issparse",
    "sklearn.ensemble.gradient_boosting.VerboseReporter"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.BaseGradientBoosting._init_decision_function": {
  "data": {
   "lineno": 1573,
   "symbols_in_volume": [
    "ValueError",
    "numpy.float64"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.BaseGradientBoosting._init_state": {
  "data": {
   "lineno": 1291,
   "symbols_in_volume": [
    "isinstance",
    "numpy.empty",
    "numpy.float64",
    "numpy.object",
    "numpy.zeros",
    "sklearn.ensemble.gradient_boosting.INIT_ESTIMATORS"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.BaseGradientBoosting._is_initialized": {
  "data": {
   "lineno": 1342,
   "symbols_in_volume": [
    "getattr",
    "len"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.BaseGradientBoosting._make_estimator": {
  "data": {
   "lineno": 1569,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.BaseGradientBoosting._resize_state": {
  "data": {
   "lineno": 1322,
   "symbols_in_volume": [
    "ValueError",
    "hasattr",
    "numpy.float64",
    "numpy.resize",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.BaseGradientBoosting._staged_decision_function": {
  "data": {
   "lineno": 1591,
   "symbols_in_volume": [
    "check_array",
    "predict_stage",
    "range"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.BaseGradientBoosting._validate_y": {
  "data": {
   "lineno": 1639,
   "symbols_in_volume": [
    "numpy.float64"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.BaseGradientBoosting.apply": {
  "data": {
   "lineno": 1648,
   "symbols_in_volume": [
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.BaseGradientBoosting.feature_importances_": {
  "data": {
   "lineno": 1618,
   "symbols_in_volume": [
    "len",
    "numpy.float64",
    "numpy.zeros",
    "property",
    "sum"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.BaseGradientBoosting.fit": {
  "data": {
   "lineno": 1355,
   "symbols_in_volume": [
    "ValueError",
    "check_X_y",
    "check_array",
    "check_consistent_length",
    "check_random_state",
    "column_or_1d",
    "hasattr",
    "numpy.argsort",
    "numpy.asfortranarray",
    "numpy.float32",
    "numpy.int32",
    "numpy.ones",
    "scipy.sparse.issparse",
    "train_test_split"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.BaseGradientBoosting.n_features": {
  "data": {
   "lineno": 1349,
   "symbols_in_volume": [
    "deprecated",
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.BinomialDeviance": {
  "data": {
   "lineno": 762,
   "symbols_in_volume": [
    "sklearn.ensemble.gradient_boosting.ClassificationLossFunction"
   ]
  },
  "type": "class"
 },
 "sklearn.ensemble.gradient_boosting.BinomialDeviance.__call__": {
  "data": {
   "lineno": 783,
   "symbols_in_volume": [
    "numpy.logaddexp",
    "numpy.mean",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.BinomialDeviance.__init__": {
  "data": {
   "lineno": 773,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.ensemble.gradient_boosting.BinomialDeviance",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.BinomialDeviance._score_to_decision": {
  "data": {
   "lineno": 848,
   "symbols_in_volume": [
    "numpy.argmax"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.BinomialDeviance._score_to_proba": {
  "data": {
   "lineno": 842,
   "symbols_in_volume": [
    "numpy.float64",
    "numpy.ones",
    "scipy.special.expit"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.BinomialDeviance._update_terminal_region": {
  "data": {
   "lineno": 818,
   "symbols_in_volume": [
    "abs",
    "numpy.sum",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.BinomialDeviance.init_estimator": {
  "data": {
   "lineno": 780,
   "symbols_in_volume": [
    "sklearn.ensemble.gradient_boosting.LogOddsEstimator"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.BinomialDeviance.negative_gradient": {
  "data": {
   "lineno": 805,
   "symbols_in_volume": [
    "scipy.special.expit"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.ClassificationLossFunction": {
  "data": {
   "lineno": 744,
   "symbols_in_volume": [
    "abc.ABCMeta",
    "sklearn.ensemble.gradient_boosting.LossFunction"
   ]
  },
  "type": "class"
 },
 "sklearn.ensemble.gradient_boosting.ClassificationLossFunction._score_to_decision": {
  "data": {
   "lineno": 754,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.ClassificationLossFunction._score_to_proba": {
  "data": {
   "lineno": 747,
   "symbols_in_volume": [
    "TypeError",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.ExponentialLoss": {
  "data": {
   "lineno": 948,
   "symbols_in_volume": [
    "sklearn.ensemble.gradient_boosting.ClassificationLossFunction"
   ]
  },
  "type": "class"
 },
 "sklearn.ensemble.gradient_boosting.ExponentialLoss.__call__": {
  "data": {
   "lineno": 972,
   "symbols_in_volume": [
    "numpy.exp",
    "numpy.mean",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.ExponentialLoss.__init__": {
  "data": {
   "lineno": 962,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.ensemble.gradient_boosting.ExponentialLoss",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.ExponentialLoss._score_to_decision": {
  "data": {
   "lineno": 1031,
   "symbols_in_volume": [
    "numpy.int"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.ExponentialLoss._score_to_proba": {
  "data": {
   "lineno": 1025,
   "symbols_in_volume": [
    "numpy.float64",
    "numpy.ones",
    "scipy.special.expit"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.ExponentialLoss._update_terminal_region": {
  "data": {
   "lineno": 1007,
   "symbols_in_volume": [
    "abs",
    "numpy.exp",
    "numpy.sum",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.ExponentialLoss.init_estimator": {
  "data": {
   "lineno": 969,
   "symbols_in_volume": [
    "sklearn.ensemble.gradient_boosting.ScaledLogOddsEstimator"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.ExponentialLoss.negative_gradient": {
  "data": {
   "lineno": 993,
   "symbols_in_volume": [
    "numpy.exp"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.GradientBoostingClassifier": {
  "data": {
   "lineno": 1684,
   "symbols_in_volume": [
    "sklearn.ensemble.gradient_boosting.BaseGradientBoosting"
   ]
  },
  "type": "class"
 },
 "sklearn.ensemble.gradient_boosting.GradientBoostingClassifier.__init__": {
  "data": {
   "lineno": 1935,
   "symbols_in_volume": [
    "sklearn.ensemble.gradient_boosting.GradientBoostingClassifier",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.GradientBoostingClassifier._validate_y": {
  "data": {
   "lineno": 1960,
   "symbols_in_volume": [
    "ValueError",
    "check_classification_targets",
    "len",
    "numpy.bincount",
    "numpy.count_nonzero",
    "numpy.unique"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.GradientBoostingClassifier.decision_function": {
  "data": {
   "lineno": 1972,
   "symbols_in_volume": [
    "check_array"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.GradientBoostingClassifier.predict": {
  "data": {
   "lineno": 2021
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.GradientBoostingClassifier.predict_log_proba": {
  "data": {
   "lineno": 2092,
   "symbols_in_volume": [
    "numpy.log"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.GradientBoostingClassifier.predict_proba": {
  "data": {
   "lineno": 2062,
   "symbols_in_volume": [
    "AttributeError"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.GradientBoostingClassifier.staged_decision_function": {
  "data": {
   "lineno": 1996
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.GradientBoostingClassifier.staged_predict": {
  "data": {
   "lineno": 2040
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.GradientBoostingClassifier.staged_predict_proba": {
  "data": {
   "lineno": 2116,
   "symbols_in_volume": [
    "AttributeError"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.GradientBoostingRegressor": {
  "data": {
   "lineno": 2144,
   "symbols_in_volume": [
    "sklearn.ensemble.gradient_boosting.BaseGradientBoosting"
   ]
  },
  "type": "class"
 },
 "sklearn.ensemble.gradient_boosting.GradientBoostingRegressor.__init__": {
  "data": {
   "lineno": 2389,
   "symbols_in_volume": [
    "sklearn.ensemble.gradient_boosting.GradientBoostingRegressor",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.GradientBoostingRegressor.apply": {
  "data": {
   "lineno": 2451,
   "symbols_in_volume": [
    "sklearn.ensemble.gradient_boosting.GradientBoostingRegressor",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.GradientBoostingRegressor.predict": {
  "data": {
   "lineno": 2412,
   "symbols_in_volume": [
    "check_array"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.GradientBoostingRegressor.staged_predict": {
  "data": {
   "lineno": 2430
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.HuberLossFunction": {
  "data": {
   "lineno": 564,
   "symbols_in_volume": [
    "sklearn.ensemble.gradient_boosting.RegressionLossFunction"
   ]
  },
  "type": "class"
 },
 "sklearn.ensemble.gradient_boosting.HuberLossFunction.__call__": {
  "data": {
   "lineno": 591,
   "symbols_in_volume": [
    "_weighted_percentile",
    "numpy.abs",
    "numpy.percentile",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.HuberLossFunction.__init__": {
  "data": {
   "lineno": 583,
   "symbols_in_volume": [
    "sklearn.ensemble.gradient_boosting.HuberLossFunction",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.HuberLossFunction._update_terminal_region": {
  "data": {
   "lineno": 653,
   "symbols_in_volume": [
    "_weighted_percentile",
    "numpy.abs",
    "numpy.mean",
    "numpy.minimum",
    "numpy.sign",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.HuberLossFunction.init_estimator": {
  "data": {
   "lineno": 588,
   "symbols_in_volume": [
    "sklearn.ensemble.gradient_boosting.QuantileEstimator"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.HuberLossFunction.negative_gradient": {
  "data": {
   "lineno": 626,
   "symbols_in_volume": [
    "_weighted_percentile",
    "numpy.abs",
    "numpy.float64",
    "numpy.percentile",
    "numpy.sign",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.INIT_ESTIMATORS": {
  "data": {
   "lineno": 1044
  },
  "type": "constant"
 },
 "sklearn.ensemble.gradient_boosting.LOSS_FUNCTIONS": {
  "data": {
   "lineno": 1035
  },
  "type": "constant"
 },
 "sklearn.ensemble.gradient_boosting.LeastAbsoluteError": {
  "data": {
   "lineno": 508,
   "symbols_in_volume": [
    "sklearn.ensemble.gradient_boosting.RegressionLossFunction"
   ]
  },
  "type": "class"
 },
 "sklearn.ensemble.gradient_boosting.LeastAbsoluteError.__call__": {
  "data": {
   "lineno": 519,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.LeastAbsoluteError._update_terminal_region": {
  "data": {
   "lineno": 555,
   "symbols_in_volume": [
    "_weighted_percentile",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.LeastAbsoluteError.init_estimator": {
  "data": {
   "lineno": 516,
   "symbols_in_volume": [
    "sklearn.ensemble.gradient_boosting.QuantileEstimator"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.LeastAbsoluteError.negative_gradient": {
  "data": {
   "lineno": 539
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.LeastSquaresError": {
  "data": {
   "lineno": 425,
   "symbols_in_volume": [
    "sklearn.ensemble.gradient_boosting.RegressionLossFunction"
   ]
  },
  "type": "class"
 },
 "sklearn.ensemble.gradient_boosting.LeastSquaresError.__call__": {
  "data": {
   "lineno": 438,
   "symbols_in_volume": [
    "numpy.mean",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.LeastSquaresError._update_terminal_region": {
  "data": {
   "lineno": 503
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.LeastSquaresError.init_estimator": {
  "data": {
   "lineno": 435,
   "symbols_in_volume": [
    "sklearn.ensemble.gradient_boosting.MeanEstimator"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.LeastSquaresError.negative_gradient": {
  "data": {
   "lineno": 458
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.LeastSquaresError.update_terminal_regions": {
  "data": {
   "lineno": 471
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.LogOddsEstimator": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "sklearn.ensemble.gradient_boosting.LogOddsEstimator.fit": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "ValueError",
    "numpy.log",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.LogOddsEstimator.predict": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "check_is_fitted",
    "numpy.empty",
    "numpy.float64"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.LossFunction": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "abc.ABCMeta",
    "object"
   ]
  },
  "type": "class"
 },
 "sklearn.ensemble.gradient_boosting.LossFunction.__call__": {
  "data": {
   "lineno": 328,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.LossFunction.__init__": {
  "data": {
   "lineno": 321
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.LossFunction._update_terminal_region": {
  "data": {
   "lineno": 404,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.LossFunction.init_estimator": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.LossFunction.negative_gradient": {
  "data": {
   "lineno": 344,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.LossFunction.update_terminal_regions": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.MeanEstimator": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "sklearn.ensemble.gradient_boosting.MeanEstimator.fit": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "numpy.average",
    "numpy.mean"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.MeanEstimator.predict": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "check_is_fitted",
    "numpy.empty",
    "numpy.float64"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.MultinomialDeviance": {
  "data": {
   "lineno": 853,
   "symbols_in_volume": [
    "sklearn.ensemble.gradient_boosting.ClassificationLossFunction"
   ]
  },
  "type": "class"
 },
 "sklearn.ensemble.gradient_boosting.MultinomialDeviance.__call__": {
  "data": {
   "lineno": 876,
   "symbols_in_volume": [
    "logsumexp",
    "numpy.float64",
    "numpy.sum",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.MultinomialDeviance.__init__": {
  "data": {
   "lineno": 867,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.ensemble.gradient_boosting.MultinomialDeviance",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.MultinomialDeviance._score_to_decision": {
  "data": {
   "lineno": 943,
   "symbols_in_volume": [
    "numpy.argmax"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.MultinomialDeviance._score_to_proba": {
  "data": {
   "lineno": 939,
   "symbols_in_volume": [
    "logsumexp",
    "numpy.exp",
    "numpy.nan_to_num",
    "numpy.newaxis"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.MultinomialDeviance._update_terminal_region": {
  "data": {
   "lineno": 919,
   "symbols_in_volume": [
    "abs",
    "numpy.sum",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.MultinomialDeviance.init_estimator": {
  "data": {
   "lineno": 873,
   "symbols_in_volume": [
    "sklearn.ensemble.gradient_boosting.PriorProbabilityEstimator"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.MultinomialDeviance.negative_gradient": {
  "data": {
   "lineno": 902,
   "symbols_in_volume": [
    "logsumexp",
    "numpy.exp",
    "numpy.nan_to_num"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.PriorProbabilityEstimator": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "sklearn.ensemble.gradient_boosting.PriorProbabilityEstimator.fit": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "numpy.bincount",
    "numpy.float64",
    "numpy.ones_like"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.PriorProbabilityEstimator.predict": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "check_is_fitted",
    "numpy.empty",
    "numpy.float64"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.QuantileEstimator": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "sklearn.ensemble.gradient_boosting.QuantileEstimator.__init__": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.QuantileEstimator.fit": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "_weighted_percentile",
    "numpy.percentile"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.QuantileEstimator.predict": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "check_is_fitted",
    "numpy.empty",
    "numpy.float64"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.QuantileLossFunction": {
  "data": {
   "lineno": 667,
   "symbols_in_volume": [
    "sklearn.ensemble.gradient_boosting.RegressionLossFunction"
   ]
  },
  "type": "class"
 },
 "sklearn.ensemble.gradient_boosting.QuantileLossFunction.__call__": {
  "data": {
   "lineno": 689,
   "symbols_in_volume": [
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.QuantileLossFunction.__init__": {
  "data": {
   "lineno": 681,
   "symbols_in_volume": [
    "sklearn.ensemble.gradient_boosting.QuantileLossFunction",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.QuantileLossFunction._update_terminal_region": {
  "data": {
   "lineno": 733,
   "symbols_in_volume": [
    "_weighted_percentile",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.QuantileLossFunction.init_estimator": {
  "data": {
   "lineno": 686,
   "symbols_in_volume": [
    "sklearn.ensemble.gradient_boosting.QuantileEstimator"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.QuantileLossFunction.negative_gradient": {
  "data": {
   "lineno": 717
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.RegressionLossFunction": {
  "data": {
   "lineno": 410,
   "symbols_in_volume": [
    "abc.ABCMeta",
    "sklearn.ensemble.gradient_boosting.LossFunction"
   ]
  },
  "type": "class"
 },
 "sklearn.ensemble.gradient_boosting.RegressionLossFunction.__init__": {
  "data": {
   "lineno": 418,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.ensemble.gradient_boosting.RegressionLossFunction",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.ScaledLogOddsEstimator": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "sklearn.ensemble.gradient_boosting.LogOddsEstimator"
   ]
  },
  "type": "class"
 },
 "sklearn.ensemble.gradient_boosting.VerboseReporter": {
  "data": {
   "lineno": 1047,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "sklearn.ensemble.gradient_boosting.VerboseReporter.__init__": {
  "data": {
   "lineno": 1058
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.VerboseReporter.init": {
  "data": {
   "lineno": 1061,
   "symbols_in_volume": [
    "len",
    "print",
    "time.time",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.VerboseReporter.update": {
  "data": {
   "lineno": 1092,
   "symbols_in_volume": [
    "float",
    "print",
    "time.time"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.ZeroEstimator": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "sklearn.ensemble.gradient_boosting.ZeroEstimator.fit": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "numpy.issubdtype",
    "numpy.signedinteger",
    "numpy.unique"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.ZeroEstimator.predict": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "check_is_fitted",
    "numpy.empty",
    "numpy.float64"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "sklearn.ensemble.gradient_boosting.csc_matrix": {
  "data": {
   "shadows": "scipy.sparse.csc_matrix"
  },
  "type": "import"
 },
 "sklearn.ensemble.gradient_boosting.csr_matrix": {
  "data": {
   "shadows": "scipy.sparse.csr_matrix"
  },
  "type": "import"
 },
 "sklearn.ensemble.gradient_boosting.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sklearn.ensemble.gradient_boosting.expit": {
  "data": {
   "shadows": "scipy.special.expit"
  },
  "type": "import"
 },
 "sklearn.ensemble.gradient_boosting.issparse": {
  "data": {
   "shadows": "scipy.sparse.issparse"
  },
  "type": "import"
 },
 "sklearn.ensemble.gradient_boosting.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.ensemble.gradient_boosting.numbers": {
  "data": {
   "shadows": "numbers"
  },
  "type": "import"
 },
 "sklearn.ensemble.gradient_boosting.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "sklearn.ensemble.gradient_boosting.time": {
  "data": {
   "shadows": "time.time"
  },
  "type": "import"
 },
 "sklearn.ensemble.iforest": {
  "data": {
   "symbols_in_volume": [
    "numpy.integer",
    "sklearn.ensemble.iforest.numbers"
   ]
  },
  "type": "module"
 },
 "sklearn.ensemble.iforest.INTEGER_TYPES": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "sklearn.ensemble.iforest.IsolationForest": {
  "data": {
   "lineno": 28
  },
  "type": "class"
 },
 "sklearn.ensemble.iforest.IsolationForest.__init__": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "ExtraTreeRegressor",
    "sklearn.ensemble.iforest.IsolationForest",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.iforest.IsolationForest._set_oob_score": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.iforest.IsolationForest.decision_function": {
  "data": {
   "lineno": 316
  },
  "type": "function"
 },
 "sklearn.ensemble.iforest.IsolationForest.fit": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "FutureWarning",
    "ValueError",
    "check_array",
    "check_random_state",
    "int",
    "isinstance",
    "max",
    "min",
    "numpy.ceil",
    "numpy.log2",
    "numpy.percentile",
    "scipy.sparse.issparse",
    "sklearn.ensemble.iforest.INTEGER_TYPES",
    "sklearn.ensemble.iforest.IsolationForest",
    "sklearn.ensemble.iforest.warnings",
    "super",
    "warnings.warn"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.iforest.IsolationForest.predict": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "check_array",
    "check_is_fitted",
    "int",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.iforest.IsolationForest.score_samples": {
  "data": {
   "lineno": 347,
   "symbols_in_volume": [
    "ValueError",
    "check_array",
    "check_is_fitted",
    "enumerate",
    "numpy.ravel",
    "numpy.zeros",
    "sklearn.ensemble.iforest._average_path_length",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.iforest.IsolationForest.threshold_": {
  "data": {
   "lineno": 412,
   "symbols_in_volume": [
    "AttributeError",
    "DeprecationWarning",
    "property",
    "sklearn.ensemble.iforest.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.iforest.__all__": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "sklearn.ensemble.iforest._average_path_length": {
  "data": {
   "lineno": 422,
   "symbols_in_volume": [
    "isinstance",
    "numpy.log",
    "numpy.logical_not",
    "numpy.zeros",
    "sklearn.ensemble.iforest.INTEGER_TYPES",
    "sklearn.utils.fixes.euler_gamma"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.iforest.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sklearn.ensemble.iforest.euler_gamma": {
  "data": {
   "shadows": "sklearn.utils.fixes.euler_gamma"
  },
  "type": "import"
 },
 "sklearn.ensemble.iforest.issparse": {
  "data": {
   "shadows": "scipy.sparse.issparse"
  },
  "type": "import"
 },
 "sklearn.ensemble.iforest.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.ensemble.iforest.numbers": {
  "data": {
   "shadows": "numbers"
  },
  "type": "import"
 },
 "sklearn.ensemble.iforest.warn": {
  "data": {
   "shadows": "warnings.warn"
  },
  "type": "import"
 },
 "sklearn.ensemble.iforest.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.ensemble.partial_dependence": {
  "data": {},
  "type": "module"
 },
 "sklearn.ensemble.partial_dependence.MaxNLocator": {
  "data": {
   "shadows": "matplotlib.ticker.MaxNLocator"
  },
  "type": "import"
 },
 "sklearn.ensemble.partial_dependence.ScalarFormatter": {
  "data": {
   "shadows": "matplotlib.ticker.ScalarFormatter"
  },
  "type": "import"
 },
 "sklearn.ensemble.partial_dependence._grid_from_X": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "ValueError",
    "all",
    "cartesian",
    "len",
    "numpy.linspace",
    "numpy.unique",
    "range",
    "scipy.stats.mstats.mquantiles"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.partial_dependence.count": {
  "data": {
   "shadows": "itertools.count"
  },
  "type": "import"
 },
 "sklearn.ensemble.partial_dependence.mquantiles": {
  "data": {
   "shadows": "scipy.stats.mstats.mquantiles"
  },
  "type": "import"
 },
 "sklearn.ensemble.partial_dependence.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.ensemble.partial_dependence.numbers": {
  "data": {
   "shadows": "numbers"
  },
  "type": "import"
 },
 "sklearn.ensemble.partial_dependence.partial_dependence": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "ValueError",
    "_partial_dependence_tree",
    "any",
    "check_array",
    "check_is_fitted",
    "isinstance",
    "numpy.asarray",
    "numpy.float64",
    "numpy.int32",
    "numpy.newaxis",
    "numpy.zeros",
    "range",
    "sklearn.ensemble.partial_dependence._grid_from_X"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.partial_dependence.plot_partial_dependence": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "IndexError",
    "Parallel",
    "TypeError",
    "ValueError",
    "check_array",
    "check_is_fitted",
    "convert_feature",
    "delayed",
    "float",
    "hasattr",
    "int",
    "isinstance",
    "itertools.count",
    "len",
    "list",
    "map",
    "matplotlib.pyplot.figure",
    "matplotlib.ticker.MaxNLocator",
    "matplotlib.ticker.ScalarFormatter",
    "matplotlib.transforms.blended_transform_factory",
    "max",
    "min",
    "numpy.arange",
    "numpy.array",
    "numpy.ceil",
    "numpy.int32",
    "numpy.linspace",
    "numpy.meshgrid",
    "numpy.ndarray",
    "numpy.searchsorted",
    "numpy.size",
    "range",
    "scipy.stats.mstats.mquantiles",
    "sklearn.ensemble.partial_dependence.numbers",
    "sklearn.ensemble.partial_dependence.partial_dependence",
    "str",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.partial_dependence.plot_partial_dependence.convert_feature": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "ValueError",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.partial_dependence.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "sklearn.ensemble.partial_dependence.transforms": {
  "data": {
   "shadows": "matplotlib.transforms"
  },
  "type": "import"
 },
 "sklearn.ensemble.setup": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.distutils.core.setup",
    "sklearn.ensemble.setup.configuration"
   ]
  },
  "type": "module"
 },
 "sklearn.ensemble.setup.Configuration": {
  "data": {
   "shadows": "numpy.distutils.misc_util.Configuration"
  },
  "type": "import"
 },
 "sklearn.ensemble.setup.configuration": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "numpy.distutils.misc_util.Configuration",
    "sklearn.ensemble.setup.numpy"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.setup.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.ensemble.setup.setup": {
  "data": {
   "shadows": "numpy.distutils.core.setup"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests": {
  "data": {},
  "type": "module"
 },
 "sklearn.ensemble.tests.test_bagging": {
  "data": {
   "symbols_in_volume": [
    "sklearn.datasets.load_boston",
    "sklearn.datasets.load_iris",
    "sklearn.ensemble.tests.test_bagging.boston",
    "sklearn.ensemble.tests.test_bagging.iris",
    "sklearn.ensemble.tests.test_bagging.perm",
    "sklearn.ensemble.tests.test_bagging.rng",
    "sklearn.utils.check_random_state"
   ]
  },
  "type": "module"
 },
 "sklearn.ensemble.tests.test_bagging.BaggingClassifier": {
  "data": {
   "shadows": "sklearn.ensemble.BaggingClassifier"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_bagging.BaggingRegressor": {
  "data": {
   "shadows": "sklearn.ensemble.BaggingRegressor"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_bagging.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_bagging.DecisionTreeClassifier": {
  "data": {
   "shadows": "sklearn.tree.DecisionTreeClassifier"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_bagging.DecisionTreeRegressor": {
  "data": {
   "shadows": "sklearn.tree.DecisionTreeRegressor"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_bagging.DummyClassifier": {
  "data": {
   "shadows": "sklearn.dummy.DummyClassifier"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_bagging.DummyRegressor": {
  "data": {
   "shadows": "sklearn.dummy.DummyRegressor"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_bagging.DummySizeEstimator": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator"
   ]
  },
  "type": "class"
 },
 "sklearn.ensemble.tests.test_bagging.DummySizeEstimator.fit": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "sklearn.utils.hash"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_bagging.DummyZeroEstimator": {
  "data": {
   "lineno": 597,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator"
   ]
  },
  "type": "class"
 },
 "sklearn.ensemble.tests.test_bagging.DummyZeroEstimator.fit": {
  "data": {
   "lineno": 599,
   "symbols_in_volume": [
    "numpy.unique"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_bagging.DummyZeroEstimator.predict": {
  "data": {
   "lineno": 603,
   "symbols_in_volume": [
    "int",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_bagging.FunctionTransformer": {
  "data": {
   "shadows": "sklearn.preprocessing.FunctionTransformer"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_bagging.GridSearchCV": {
  "data": {
   "shadows": "sklearn.model_selection.GridSearchCV"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_bagging.KNeighborsClassifier": {
  "data": {
   "shadows": "sklearn.neighbors.KNeighborsClassifier"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_bagging.KNeighborsRegressor": {
  "data": {
   "shadows": "sklearn.neighbors.KNeighborsRegressor"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_bagging.LogisticRegression": {
  "data": {
   "shadows": "sklearn.linear_model.LogisticRegression"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_bagging.ParameterGrid": {
  "data": {
   "shadows": "sklearn.model_selection.ParameterGrid"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_bagging.Perceptron": {
  "data": {
   "shadows": "sklearn.linear_model.Perceptron"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_bagging.SVC": {
  "data": {
   "shadows": "sklearn.svm.SVC"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_bagging.SVR": {
  "data": {
   "shadows": "sklearn.svm.SVR"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_bagging.SelectKBest": {
  "data": {
   "shadows": "sklearn.feature_selection.SelectKBest"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_bagging.SparseRandomProjection": {
  "data": {
   "shadows": "sklearn.random_projection.SparseRandomProjection"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_bagging.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_bagging.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_bagging.assert_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_bagging.assert_false": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_false"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_bagging.assert_greater": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_greater"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_bagging.assert_less": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_less"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_bagging.assert_raise_message": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raise_message"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_bagging.assert_raises": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_bagging.assert_true": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_true"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_bagging.assert_warns": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_warns"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_bagging.assert_warns_message": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_warns_message"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_bagging.boston": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "sklearn.ensemble.tests.test_bagging.check_random_state": {
  "data": {
   "shadows": "sklearn.utils.check_random_state"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_bagging.csc_matrix": {
  "data": {
   "shadows": "scipy.sparse.csc_matrix"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_bagging.csr_matrix": {
  "data": {
   "shadows": "scipy.sparse.csr_matrix"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_bagging.hash": {
  "data": {
   "shadows": "sklearn.utils.hash"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_bagging.iris": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "sklearn.ensemble.tests.test_bagging.load_boston": {
  "data": {
   "shadows": "sklearn.datasets.load_boston"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_bagging.load_iris": {
  "data": {
   "shadows": "sklearn.datasets.load_iris"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_bagging.make_hastie_10_2": {
  "data": {
   "shadows": "sklearn.datasets.make_hastie_10_2"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_bagging.make_pipeline": {
  "data": {
   "shadows": "sklearn.pipeline.make_pipeline"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_bagging.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_bagging.perm": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "sklearn.ensemble.tests.test_bagging.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_bagging.replace": {
  "data": {
   "lineno": 814,
   "symbols_in_volume": [
    "numpy.isfinite"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_bagging.rng": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "sklearn.ensemble.tests.test_bagging.test_bagging_classifier_with_missing_inputs": {
  "data": {
   "lineno": 858,
   "symbols_in_volume": [
    "ValueError",
    "numpy.NINF",
    "numpy.array",
    "numpy.inf",
    "numpy.nan",
    "sklearn.ensemble.BaggingClassifier",
    "sklearn.ensemble.tests.test_bagging.replace",
    "sklearn.pipeline.make_pipeline",
    "sklearn.preprocessing.FunctionTransformer",
    "sklearn.tree.DecisionTreeClassifier",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_bagging.test_bagging_regressor_with_missing_inputs": {
  "data": {
   "lineno": 820,
   "symbols_in_volume": [
    "ValueError",
    "numpy.NINF",
    "numpy.array",
    "numpy.inf",
    "numpy.nan",
    "sklearn.ensemble.BaggingRegressor",
    "sklearn.ensemble.tests.test_bagging.replace",
    "sklearn.pipeline.make_pipeline",
    "sklearn.preprocessing.FunctionTransformer",
    "sklearn.tree.DecisionTreeRegressor",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_bagging.test_bagging_sample_weight_unsupported_but_passed": {
  "data": {
   "lineno": 607,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.ensemble.BaggingClassifier",
    "sklearn.ensemble.tests.test_bagging.DummyZeroEstimator",
    "sklearn.ensemble.tests.test_bagging.iris",
    "sklearn.ensemble.tests.test_bagging.rng",
    "sklearn.utils.check_random_state",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_bagging.test_bagging_with_pipeline": {
  "data": {
   "lineno": 588,
   "symbols_in_volume": [
    "int",
    "isinstance",
    "sklearn.ensemble.BaggingClassifier",
    "sklearn.ensemble.tests.test_bagging.iris",
    "sklearn.feature_selection.SelectKBest",
    "sklearn.pipeline.make_pipeline",
    "sklearn.tree.DecisionTreeClassifier",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_bagging.test_base_estimator": {
  "data": {
   "lineno": 538,
   "symbols_in_volume": [
    "isinstance",
    "sklearn.ensemble.BaggingClassifier",
    "sklearn.ensemble.BaggingRegressor",
    "sklearn.ensemble.tests.test_bagging.boston",
    "sklearn.ensemble.tests.test_bagging.iris",
    "sklearn.ensemble.tests.test_bagging.rng",
    "sklearn.linear_model.Perceptron",
    "sklearn.model_selection.train_test_split",
    "sklearn.svm.SVR",
    "sklearn.tree.DecisionTreeClassifier",
    "sklearn.tree.DecisionTreeRegressor",
    "sklearn.utils.check_random_state",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_bagging.test_bootstrap_features": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "numpy.unique",
    "sklearn.ensemble.BaggingRegressor",
    "sklearn.ensemble.tests.test_bagging.boston",
    "sklearn.ensemble.tests.test_bagging.rng",
    "sklearn.model_selection.train_test_split",
    "sklearn.tree.DecisionTreeRegressor",
    "sklearn.utils.check_random_state",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_greater"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_bagging.test_bootstrap_samples": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "len",
    "set",
    "sklearn.ensemble.BaggingRegressor",
    "sklearn.ensemble.tests.test_bagging.DummySizeEstimator",
    "sklearn.ensemble.tests.test_bagging.boston",
    "sklearn.ensemble.tests.test_bagging.rng",
    "sklearn.model_selection.train_test_split",
    "sklearn.tree.DecisionTreeRegressor",
    "sklearn.utils.check_random_state",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_greater"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_bagging.test_classification": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "sklearn.dummy.DummyClassifier",
    "sklearn.ensemble.BaggingClassifier",
    "sklearn.ensemble.tests.test_bagging.iris",
    "sklearn.ensemble.tests.test_bagging.rng",
    "sklearn.linear_model.Perceptron",
    "sklearn.model_selection.ParameterGrid",
    "sklearn.model_selection.train_test_split",
    "sklearn.neighbors.KNeighborsClassifier",
    "sklearn.svm.SVC",
    "sklearn.tree.DecisionTreeClassifier",
    "sklearn.utils.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_bagging.test_error": {
  "data": {
   "lineno": 407,
   "symbols_in_volume": [
    "ValueError",
    "hasattr",
    "sklearn.ensemble.BaggingClassifier",
    "sklearn.ensemble.tests.test_bagging.iris",
    "sklearn.tree.DecisionTreeClassifier",
    "sklearn.utils.testing.assert_false",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_bagging.test_estimators_samples": {
  "data": {
   "lineno": 717,
   "symbols_in_volume": [
    "len",
    "sklearn.datasets.make_hastie_10_2",
    "sklearn.ensemble.BaggingClassifier",
    "sklearn.ensemble.tests.test_bagging.pytest",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_bagging.test_estimators_samples_deterministic": {
  "data": {
   "lineno": 755,
   "symbols_in_volume": [
    "sklearn.datasets.load_iris",
    "sklearn.ensemble.BaggingClassifier",
    "sklearn.ensemble.tests.test_bagging.iris",
    "sklearn.ensemble.tests.test_bagging.pytest",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.pipeline.make_pipeline",
    "sklearn.random_projection.SparseRandomProjection",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_bagging.test_gridsearch": {
  "data": {
   "lineno": 521,
   "symbols_in_volume": [
    "sklearn.ensemble.BaggingClassifier",
    "sklearn.ensemble.tests.test_bagging.iris",
    "sklearn.ensemble.tests.test_bagging.pytest",
    "sklearn.model_selection.GridSearchCV",
    "sklearn.svm.SVC"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_bagging.test_max_samples_consistency": {
  "data": {
   "lineno": 785,
   "symbols_in_volume": [
    "sklearn.datasets.make_hastie_10_2",
    "sklearn.ensemble.BaggingClassifier",
    "sklearn.neighbors.KNeighborsClassifier",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_bagging.test_oob_score_classification": {
  "data": {
   "lineno": 330,
   "symbols_in_volume": [
    "UserWarning",
    "abs",
    "sklearn.ensemble.BaggingClassifier",
    "sklearn.ensemble.tests.test_bagging.iris",
    "sklearn.ensemble.tests.test_bagging.rng",
    "sklearn.model_selection.train_test_split",
    "sklearn.svm.SVC",
    "sklearn.tree.DecisionTreeClassifier",
    "sklearn.utils.check_random_state",
    "sklearn.utils.testing.assert_less",
    "sklearn.utils.testing.assert_warns"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_bagging.test_oob_score_consistency": {
  "data": {
   "lineno": 707,
   "symbols_in_volume": [
    "sklearn.datasets.make_hastie_10_2",
    "sklearn.ensemble.BaggingClassifier",
    "sklearn.neighbors.KNeighborsClassifier",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_bagging.test_oob_score_regression": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": [
    "UserWarning",
    "abs",
    "sklearn.ensemble.BaggingRegressor",
    "sklearn.ensemble.tests.test_bagging.boston",
    "sklearn.ensemble.tests.test_bagging.rng",
    "sklearn.model_selection.train_test_split",
    "sklearn.tree.DecisionTreeRegressor",
    "sklearn.utils.check_random_state",
    "sklearn.utils.testing.assert_less",
    "sklearn.utils.testing.assert_warns"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_bagging.test_oob_score_removed_on_warm_start": {
  "data": {
   "lineno": 695,
   "symbols_in_volume": [
    "AttributeError",
    "getattr",
    "sklearn.datasets.make_hastie_10_2",
    "sklearn.ensemble.BaggingClassifier",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_bagging.test_parallel_classification": {
  "data": {
   "lineno": 440,
   "symbols_in_volume": [
    "ValueError",
    "numpy.hstack",
    "numpy.zeros",
    "sklearn.ensemble.BaggingClassifier",
    "sklearn.ensemble.tests.test_bagging.iris",
    "sklearn.ensemble.tests.test_bagging.rng",
    "sklearn.model_selection.train_test_split",
    "sklearn.svm.SVC",
    "sklearn.tree.DecisionTreeClassifier",
    "sklearn.utils.check_random_state",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_bagging.test_parallel_regression": {
  "data": {
   "lineno": 495,
   "symbols_in_volume": [
    "sklearn.ensemble.BaggingRegressor",
    "sklearn.ensemble.tests.test_bagging.boston",
    "sklearn.ensemble.tests.test_bagging.rng",
    "sklearn.model_selection.train_test_split",
    "sklearn.tree.DecisionTreeRegressor",
    "sklearn.utils.check_random_state",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_bagging.test_probability": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": [
    "len",
    "numpy.errstate",
    "numpy.exp",
    "numpy.ones",
    "numpy.sum",
    "sklearn.ensemble.BaggingClassifier",
    "sklearn.ensemble.tests.test_bagging.iris",
    "sklearn.ensemble.tests.test_bagging.pytest",
    "sklearn.ensemble.tests.test_bagging.rng",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.model_selection.train_test_split",
    "sklearn.tree.DecisionTreeClassifier",
    "sklearn.utils.check_random_state",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_bagging.test_regression": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "sklearn.dummy.DummyRegressor",
    "sklearn.ensemble.BaggingRegressor",
    "sklearn.ensemble.tests.test_bagging.boston",
    "sklearn.ensemble.tests.test_bagging.rng",
    "sklearn.model_selection.ParameterGrid",
    "sklearn.model_selection.train_test_split",
    "sklearn.neighbors.KNeighborsRegressor",
    "sklearn.svm.SVR",
    "sklearn.tree.DecisionTreeRegressor",
    "sklearn.utils.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_bagging.test_set_oob_score_label_encoding": {
  "data": {
   "lineno": 797,
   "symbols_in_volume": [
    "sklearn.ensemble.BaggingClassifier",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_bagging.test_single_estimator": {
  "data": {
   "lineno": 389,
   "symbols_in_volume": [
    "sklearn.ensemble.BaggingRegressor",
    "sklearn.ensemble.tests.test_bagging.boston",
    "sklearn.ensemble.tests.test_bagging.rng",
    "sklearn.model_selection.train_test_split",
    "sklearn.neighbors.KNeighborsRegressor",
    "sklearn.utils.check_random_state",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_bagging.test_sparse_classification": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "CustomSVC",
    "all",
    "getattr",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "sklearn.ensemble.BaggingClassifier",
    "sklearn.ensemble.tests.test_bagging.iris",
    "sklearn.ensemble.tests.test_bagging.rng",
    "sklearn.model_selection.train_test_split",
    "sklearn.utils.check_random_state",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sparse_format",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_bagging.test_sparse_classification.CustomSVC": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "sklearn.svm.SVC"
   ]
  },
  "type": "class"
 },
 "sklearn.ensemble.tests.test_bagging.test_sparse_classification.CustomSVC.fit": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "super",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_bagging.test_sparse_regression": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "CustomSVR",
    "all",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "sklearn.ensemble.BaggingRegressor",
    "sklearn.ensemble.tests.test_bagging.boston",
    "sklearn.ensemble.tests.test_bagging.rng",
    "sklearn.model_selection.train_test_split",
    "sklearn.utils.check_random_state",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sparse_format",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_bagging.test_sparse_regression.CustomSVR": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "sklearn.svm.SVR"
   ]
  },
  "type": "class"
 },
 "sklearn.ensemble.tests.test_bagging.test_sparse_regression.CustomSVR.fit": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "super",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_bagging.test_warm_start": {
  "data": {
   "lineno": 616,
   "symbols_in_volume": [
    "len",
    "set",
    "sklearn.datasets.make_hastie_10_2",
    "sklearn.ensemble.BaggingClassifier",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_bagging.test_warm_start_equal_n_estimators": {
  "data": {
   "lineno": 649,
   "symbols_in_volume": [
    "UserWarning",
    "sklearn.datasets.make_hastie_10_2",
    "sklearn.ensemble.BaggingClassifier",
    "sklearn.model_selection.train_test_split",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_warns_message"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_bagging.test_warm_start_equivalence": {
  "data": {
   "lineno": 667,
   "symbols_in_volume": [
    "sklearn.datasets.make_hastie_10_2",
    "sklearn.ensemble.BaggingClassifier",
    "sklearn.model_selection.train_test_split",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_bagging.test_warm_start_smaller_n_estimators": {
  "data": {
   "lineno": 640,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.datasets.make_hastie_10_2",
    "sklearn.ensemble.BaggingClassifier",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_bagging.test_warm_start_with_oob_score_fails": {
  "data": {
   "lineno": 688,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.datasets.make_hastie_10_2",
    "sklearn.ensemble.BaggingClassifier",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_bagging.train_test_split": {
  "data": {
   "shadows": "sklearn.model_selection.train_test_split"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_base": {
  "data": {},
  "type": "module"
 },
 "sklearn.ensemble.tests.test_base.BaggingClassifier": {
  "data": {
   "shadows": "sklearn.ensemble.BaggingClassifier"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_base.LinearDiscriminantAnalysis": {
  "data": {
   "shadows": "sklearn.discriminant_analysis.LinearDiscriminantAnalysis"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_base.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_base.Perceptron": {
  "data": {
   "shadows": "sklearn.linear_model.Perceptron"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_base.Pipeline": {
  "data": {
   "shadows": "sklearn.pipeline.Pipeline"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_base.SelectFromModel": {
  "data": {
   "shadows": "sklearn.feature_selection.SelectFromModel"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_base._set_random_states": {
  "data": {
   "shadows": "sklearn.ensemble.base._set_random_states"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_base.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_base.assert_not_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_not_equal"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_base.assert_raise_message": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raise_message"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_base.assert_true": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_true"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_base.load_iris": {
  "data": {
   "shadows": "sklearn.datasets.load_iris"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_base.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_base.test_base": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "int",
    "isinstance",
    "len",
    "numpy.int32",
    "numpy.random.RandomState",
    "numpy.testing.assert_equal",
    "sklearn.datasets.load_iris",
    "sklearn.ensemble.BaggingClassifier",
    "sklearn.linear_model.Perceptron",
    "sklearn.utils.testing.assert_not_equal",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_base.test_base_not_int_n_estimators": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.datasets.load_iris",
    "sklearn.ensemble.BaggingClassifier",
    "sklearn.linear_model.Perceptron",
    "sklearn.utils.testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_base.test_base_zero_n_estimators": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.datasets.load_iris",
    "sklearn.ensemble.BaggingClassifier",
    "sklearn.linear_model.Perceptron",
    "sklearn.utils.testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_base.test_set_random_states": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "cls",
    "int",
    "isinstance",
    "make_steps",
    "numpy.testing.assert_equal",
    "sklearn.discriminant_analysis.LinearDiscriminantAnalysis",
    "sklearn.ensemble.base._set_random_states",
    "sklearn.linear_model.Perceptron",
    "sklearn.pipeline.Pipeline",
    "sklearn.utils.testing.assert_not_equal",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_base.test_set_random_states.AlphaParamPipeline": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "sklearn.pipeline.Pipeline"
   ]
  },
  "type": "class"
 },
 "sklearn.ensemble.tests.test_base.test_set_random_states.AlphaParamPipeline.get_params": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "sklearn.pipeline.Pipeline.get_params",
    "sorted"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_base.test_set_random_states.RevParamPipeline": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "sklearn.pipeline.Pipeline"
   ]
  },
  "type": "class"
 },
 "sklearn.ensemble.tests.test_base.test_set_random_states.RevParamPipeline.get_params": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "sklearn.pipeline.Pipeline.get_params",
    "sorted"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_base.test_set_random_states.make_steps": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "sklearn.feature_selection.SelectFromModel",
    "sklearn.linear_model.Perceptron"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest": {
  "data": {
   "symbols_in_volume": [
    "dict",
    "numpy.float32",
    "sklearn.datasets.load_boston",
    "sklearn.datasets.load_iris",
    "sklearn.datasets.make_classification",
    "sklearn.datasets.make_hastie_10_2",
    "sklearn.ensemble.ExtraTreesClassifier",
    "sklearn.ensemble.ExtraTreesRegressor",
    "sklearn.ensemble.RandomForestClassifier",
    "sklearn.ensemble.RandomForestRegressor",
    "sklearn.ensemble.RandomTreesEmbedding",
    "sklearn.ensemble.tests.test_forest.FOREST_CLASSIFIERS",
    "sklearn.ensemble.tests.test_forest.FOREST_CLASSIFIERS_REGRESSORS",
    "sklearn.ensemble.tests.test_forest.FOREST_ESTIMATORS",
    "sklearn.ensemble.tests.test_forest.FOREST_REGRESSORS",
    "sklearn.ensemble.tests.test_forest.FOREST_TRANSFORMERS",
    "sklearn.ensemble.tests.test_forest.MyBackend",
    "sklearn.ensemble.tests.test_forest.boston",
    "sklearn.ensemble.tests.test_forest.iris",
    "sklearn.ensemble.tests.test_forest.perm",
    "sklearn.ensemble.tests.test_forest.rng",
    "sklearn.utils.register_parallel_backend",
    "sklearn.utils.validation.check_random_state"
   ]
  },
  "type": "module"
 },
 "sklearn.ensemble.tests.test_forest.ExtraTreesClassifier": {
  "data": {
   "shadows": "sklearn.ensemble.ExtraTreesClassifier"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_forest.ExtraTreesRegressor": {
  "data": {
   "shadows": "sklearn.ensemble.ExtraTreesRegressor"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_forest.FOREST_CLASSIFIERS": {
  "data": {
   "lineno": 86
  },
  "type": "constant"
 },
 "sklearn.ensemble.tests.test_forest.FOREST_CLASSIFIERS_REGRESSORS": {
  "data": {
   "lineno": 105
  },
  "type": "constant"
 },
 "sklearn.ensemble.tests.test_forest.FOREST_ESTIMATORS": {
  "data": {
   "lineno": 100
  },
  "type": "constant"
 },
 "sklearn.ensemble.tests.test_forest.FOREST_REGRESSORS": {
  "data": {
   "lineno": 91
  },
  "type": "constant"
 },
 "sklearn.ensemble.tests.test_forest.FOREST_TRANSFORMERS": {
  "data": {
   "lineno": 96
  },
  "type": "constant"
 },
 "sklearn.ensemble.tests.test_forest.GridSearchCV": {
  "data": {
   "shadows": "sklearn.model_selection.GridSearchCV"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_forest.LinearSVC": {
  "data": {
   "shadows": "sklearn.svm.LinearSVC"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_forest.LokyBackend": {
  "data": {
   "shadows": "sklearn.externals.joblib.parallel.LokyBackend"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_forest.MyBackend": {
  "data": {
   "lineno": 1272,
   "symbols_in_volume": [
    "sklearn.externals.joblib.parallel.LokyBackend"
   ]
  },
  "type": "class"
 },
 "sklearn.ensemble.tests.test_forest.MyBackend.__init__": {
  "data": {
   "lineno": 1273,
   "symbols_in_volume": [
    "sklearn.ensemble.tests.test_forest.MyBackend",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.MyBackend.start_call": {
  "data": {
   "lineno": 1277,
   "symbols_in_volume": [
    "sklearn.ensemble.tests.test_forest.MyBackend",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.RandomForestClassifier": {
  "data": {
   "shadows": "sklearn.ensemble.RandomForestClassifier"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_forest.RandomForestRegressor": {
  "data": {
   "shadows": "sklearn.ensemble.RandomForestRegressor"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_forest.RandomTreesEmbedding": {
  "data": {
   "shadows": "sklearn.ensemble.RandomTreesEmbedding"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_forest.SPARSE_SPLITTERS": {
  "data": {
   "shadows": "sklearn.tree.tree.SPARSE_SPLITTERS"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_forest.T": {
  "data": {
   "lineno": 59
  },
  "type": "constant"
 },
 "sklearn.ensemble.tests.test_forest.TruncatedSVD": {
  "data": {
   "shadows": "sklearn.decomposition.TruncatedSVD"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_forest.X": {
  "data": {
   "lineno": 57
  },
  "type": "constant"
 },
 "sklearn.ensemble.tests.test_forest.assert_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_forest.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_forest.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_forest.assert_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_forest.assert_false": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_false"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_forest.assert_greater": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_greater"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_forest.assert_greater_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_greater_equal"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_forest.assert_less": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_less"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_forest.assert_no_warnings": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_no_warnings"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_forest.assert_raises": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_forest.assert_true": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_true"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_forest.assert_warns": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_warns"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_forest.assert_warns_message": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_warns_message"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_forest.boston": {
  "data": {
   "lineno": 77
  },
  "type": "constant"
 },
 "sklearn.ensemble.tests.test_forest.check_1d_input": {
  "data": {
   "lineno": 923,
   "symbols_in_volume": [
    "ForestEstimator",
    "ValueError",
    "sklearn.ensemble.tests.test_forest.FOREST_CLASSIFIERS",
    "sklearn.ensemble.tests.test_forest.FOREST_ESTIMATORS",
    "sklearn.ensemble.tests.test_forest.FOREST_REGRESSORS",
    "sklearn.ensemble.tests.test_forest.X",
    "sklearn.ensemble.tests.test_forest.y",
    "sklearn.utils.testing.assert_raises",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.check_boston_criterion": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "ForestRegressor",
    "sklearn.ensemble.tests.test_forest.FOREST_REGRESSORS",
    "sklearn.ensemble.tests.test_forest.boston",
    "sklearn.utils.testing.assert_greater"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.check_class_weight_balanced_and_bootstrap_multi_output": {
  "data": {
   "lineno": 1001,
   "symbols_in_volume": [
    "ForestClassifier",
    "numpy.array",
    "numpy.vstack",
    "sklearn.ensemble.tests.test_forest.FOREST_CLASSIFIERS",
    "sklearn.ensemble.tests.test_forest.X",
    "sklearn.ensemble.tests.test_forest.y"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.check_class_weight_errors": {
  "data": {
   "lineno": 1021,
   "symbols_in_volume": [
    "ForestClassifier",
    "UserWarning",
    "ValueError",
    "numpy.array",
    "numpy.vstack",
    "sklearn.ensemble.tests.test_forest.FOREST_CLASSIFIERS",
    "sklearn.ensemble.tests.test_forest.X",
    "sklearn.ensemble.tests.test_forest.y",
    "sklearn.utils.testing.assert_raises",
    "sklearn.utils.testing.assert_warns"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.check_class_weights": {
  "data": {
   "lineno": 946,
   "symbols_in_volume": [
    "ForestClassifier",
    "len",
    "numpy.ones",
    "numpy.vstack",
    "sklearn.ensemble.tests.test_forest.FOREST_CLASSIFIERS",
    "sklearn.ensemble.tests.test_forest.iris",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.check_classes_shape": {
  "data": {
   "lineno": 544,
   "symbols_in_volume": [
    "ForestClassifier",
    "numpy.array",
    "numpy.vstack",
    "sklearn.ensemble.tests.test_forest.FOREST_CLASSIFIERS",
    "sklearn.ensemble.tests.test_forest.X",
    "sklearn.ensemble.tests.test_forest.y",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.check_classification_toy": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "ForestClassifier",
    "len",
    "sklearn.ensemble.tests.test_forest.FOREST_CLASSIFIERS",
    "sklearn.ensemble.tests.test_forest.T",
    "sklearn.ensemble.tests.test_forest.X",
    "sklearn.ensemble.tests.test_forest.true_result",
    "sklearn.ensemble.tests.test_forest.y",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.check_decision_path": {
  "data": {
   "lineno": 1196,
   "symbols_in_volume": [
    "ForestEstimator",
    "enumerate",
    "numpy.diff",
    "numpy.ones",
    "range",
    "sklearn.ensemble.tests.test_forest.FOREST_ESTIMATORS",
    "sklearn.ensemble.tests.test_forest.X",
    "sklearn.ensemble.tests.test_forest.hastie_X",
    "sklearn.ensemble.tests.test_forest.y",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.check_gridsearch": {
  "data": {
   "lineno": 446,
   "symbols_in_volume": [
    "sklearn.ensemble.tests.test_forest.FOREST_CLASSIFIERS",
    "sklearn.ensemble.tests.test_forest.iris",
    "sklearn.model_selection.GridSearchCV"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.check_importances": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "ForestEstimator",
    "len",
    "numpy.abs",
    "numpy.all",
    "numpy.sum",
    "sklearn.ensemble.tests.test_forest.FOREST_ESTIMATORS",
    "sklearn.ensemble.tests.test_forest.X",
    "sklearn.ensemble.tests.test_forest.y",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_less",
    "sklearn.utils.testing.assert_true",
    "sklearn.utils.validation.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.check_iris_criterion": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "ForestClassifier",
    "sklearn.ensemble.tests.test_forest.FOREST_CLASSIFIERS",
    "sklearn.ensemble.tests.test_forest.iris",
    "sklearn.utils.testing.assert_greater"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.check_max_leaf_nodes_max_depth": {
  "data": {
   "lineno": 704,
   "symbols_in_volume": [
    "ForestEstimator",
    "sklearn.ensemble.tests.test_forest.FOREST_ESTIMATORS",
    "sklearn.ensemble.tests.test_forest.X",
    "sklearn.ensemble.tests.test_forest.hastie_X",
    "sklearn.ensemble.tests.test_forest.y",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_greater"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.check_memory_layout": {
  "data": {
   "lineno": 869,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.ascontiguousarray",
    "scipy.sparse.coo_matrix",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "sklearn.ensemble.tests.test_forest.FOREST_ESTIMATORS",
    "sklearn.ensemble.tests.test_forest.X",
    "sklearn.ensemble.tests.test_forest.iris",
    "sklearn.ensemble.tests.test_forest.y",
    "sklearn.tree.tree.SPARSE_SPLITTERS",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.check_min_samples_leaf": {
  "data": {
   "lineno": 758,
   "symbols_in_volume": [
    "ForestEstimator",
    "ValueError",
    "len",
    "numpy.bincount",
    "numpy.min",
    "sklearn.ensemble.tests.test_forest.FOREST_ESTIMATORS",
    "sklearn.ensemble.tests.test_forest.X",
    "sklearn.ensemble.tests.test_forest.hastie_X",
    "sklearn.ensemble.tests.test_forest.y",
    "sklearn.utils.testing.assert_greater",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.check_min_samples_split": {
  "data": {
   "lineno": 723,
   "symbols_in_volume": [
    "ForestEstimator",
    "ValueError",
    "len",
    "numpy.min",
    "sklearn.ensemble.tests.test_forest.FOREST_ESTIMATORS",
    "sklearn.ensemble.tests.test_forest.X",
    "sklearn.ensemble.tests.test_forest.hastie_X",
    "sklearn.ensemble.tests.test_forest.y",
    "sklearn.utils.testing.assert_greater",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.check_min_weight_fraction_leaf": {
  "data": {
   "lineno": 796,
   "symbols_in_volume": [
    "ForestEstimator",
    "numpy.bincount",
    "numpy.linspace",
    "numpy.min",
    "numpy.random.RandomState",
    "numpy.sum",
    "sklearn.ensemble.tests.test_forest.FOREST_ESTIMATORS",
    "sklearn.ensemble.tests.test_forest.X",
    "sklearn.ensemble.tests.test_forest.hastie_X",
    "sklearn.ensemble.tests.test_forest.rng",
    "sklearn.ensemble.tests.test_forest.y",
    "sklearn.utils.testing.assert_greater_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.check_multioutput": {
  "data": {
   "lineno": 511,
   "symbols_in_volume": [
    "len",
    "numpy.errstate",
    "sklearn.ensemble.tests.test_forest.FOREST_CLASSIFIERS",
    "sklearn.ensemble.tests.test_forest.FOREST_ESTIMATORS",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.check_oob_score": {
  "data": {
   "lineno": 375,
   "symbols_in_volume": [
    "UserWarning",
    "abs",
    "numpy.errstate",
    "sklearn.ensemble.tests.test_forest.FOREST_CLASSIFIERS",
    "sklearn.ensemble.tests.test_forest.FOREST_ESTIMATORS",
    "sklearn.ensemble.tests.test_forest.X",
    "sklearn.ensemble.tests.test_forest.y",
    "sklearn.utils.testing.assert_greater",
    "sklearn.utils.testing.assert_less",
    "sklearn.utils.testing.assert_warns"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.check_oob_score_raise_error": {
  "data": {
   "lineno": 418,
   "symbols_in_volume": [
    "ForestEstimator",
    "NotImplementedError",
    "TypeError",
    "ValueError",
    "hasattr",
    "sklearn.ensemble.tests.test_forest.FOREST_ESTIMATORS",
    "sklearn.ensemble.tests.test_forest.FOREST_TRANSFORMERS",
    "sklearn.ensemble.tests.test_forest.X",
    "sklearn.ensemble.tests.test_forest.y",
    "sklearn.utils.testing.assert_false",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.check_parallel": {
  "data": {
   "lineno": 460,
   "symbols_in_volume": [
    "ForestEstimator",
    "len",
    "sklearn.ensemble.tests.test_forest.FOREST_ESTIMATORS",
    "sklearn.ensemble.tests.test_forest.X",
    "sklearn.ensemble.tests.test_forest.y",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.check_pickle": {
  "data": {
   "lineno": 485,
   "symbols_in_volume": [
    "ForestEstimator",
    "sklearn.ensemble.tests.test_forest.FOREST_ESTIMATORS",
    "sklearn.ensemble.tests.test_forest.X",
    "sklearn.ensemble.tests.test_forest.pickle",
    "sklearn.ensemble.tests.test_forest.y",
    "sklearn.utils.testing.assert_equal",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.check_probability": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "ForestClassifier",
    "numpy.errstate",
    "numpy.exp",
    "numpy.ones",
    "numpy.sum",
    "sklearn.ensemble.tests.test_forest.FOREST_CLASSIFIERS",
    "sklearn.ensemble.tests.test_forest.iris",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.check_random_state": {
  "data": {
   "shadows": "sklearn.utils.validation.check_random_state"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_forest.check_regressor_attributes": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "hasattr",
    "sklearn.ensemble.tests.test_forest.FOREST_REGRESSORS",
    "sklearn.utils.testing.assert_false"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.check_sparse_input": {
  "data": {
   "lineno": 832,
   "symbols_in_volume": [
    "ForestEstimator",
    "sklearn.ensemble.tests.test_forest.FOREST_CLASSIFIERS",
    "sklearn.ensemble.tests.test_forest.FOREST_ESTIMATORS",
    "sklearn.ensemble.tests.test_forest.FOREST_REGRESSORS",
    "sklearn.ensemble.tests.test_forest.FOREST_TRANSFORMERS",
    "sklearn.ensemble.tests.test_forest.X",
    "sklearn.ensemble.tests.test_forest.y",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.check_unfitted_feature_importances": {
  "data": {
   "lineno": 365,
   "symbols_in_volume": [
    "ValueError",
    "getattr",
    "sklearn.ensemble.tests.test_forest.FOREST_ESTIMATORS",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.check_warm_start": {
  "data": {
   "lineno": 1052,
   "symbols_in_volume": [
    "ForestEstimator",
    "len",
    "set",
    "sklearn.ensemble.tests.test_forest.FOREST_ESTIMATORS",
    "sklearn.ensemble.tests.test_forest.X",
    "sklearn.ensemble.tests.test_forest.hastie_X",
    "sklearn.ensemble.tests.test_forest.y",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.check_warm_start_clear": {
  "data": {
   "lineno": 1084,
   "symbols_in_volume": [
    "ForestEstimator",
    "sklearn.ensemble.tests.test_forest.FOREST_ESTIMATORS",
    "sklearn.ensemble.tests.test_forest.X",
    "sklearn.ensemble.tests.test_forest.hastie_X",
    "sklearn.ensemble.tests.test_forest.y",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.check_warm_start_equal_n_estimators": {
  "data": {
   "lineno": 1121,
   "symbols_in_volume": [
    "ForestEstimator",
    "UserWarning",
    "sklearn.ensemble.tests.test_forest.FOREST_ESTIMATORS",
    "sklearn.ensemble.tests.test_forest.X",
    "sklearn.ensemble.tests.test_forest.hastie_X",
    "sklearn.ensemble.tests.test_forest.y",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_warns"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.check_warm_start_oob": {
  "data": {
   "lineno": 1147,
   "symbols_in_volume": [
    "ForestEstimator",
    "hasattr",
    "sklearn.ensemble.tests.test_forest.FOREST_ESTIMATORS",
    "sklearn.ensemble.tests.test_forest.X",
    "sklearn.ensemble.tests.test_forest.hastie_X",
    "sklearn.ensemble.tests.test_forest.y",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_true",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.check_warm_start_smaller_n_estimators": {
  "data": {
   "lineno": 1106,
   "symbols_in_volume": [
    "ForestEstimator",
    "ValueError",
    "sklearn.ensemble.tests.test_forest.FOREST_ESTIMATORS",
    "sklearn.ensemble.tests.test_forest.X",
    "sklearn.ensemble.tests.test_forest.hastie_X",
    "sklearn.ensemble.tests.test_forest.y",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.comb": {
  "data": {
   "shadows": "sklearn.utils.fixes.comb"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_forest.combinations": {
  "data": {
   "shadows": "itertools.combinations"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_forest.coo_matrix": {
  "data": {
   "shadows": "scipy.sparse.coo_matrix"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_forest.csc_matrix": {
  "data": {
   "shadows": "scipy.sparse.csc_matrix"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_forest.csr_matrix": {
  "data": {
   "shadows": "scipy.sparse.csr_matrix"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_forest.datasets": {
  "data": {
   "shadows": "sklearn.datasets"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_forest.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_forest.hastie_X": {
  "data": {
   "lineno": 84
  },
  "type": "constant"
 },
 "sklearn.ensemble.tests.test_forest.ignore_warnings": {
  "data": {
   "shadows": "sklearn.utils.testing.ignore_warnings"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_forest.iris": {
  "data": {
   "lineno": 69
  },
  "type": "constant"
 },
 "sklearn.ensemble.tests.test_forest.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_forest.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_forest.parallel_backend": {
  "data": {
   "shadows": "sklearn.utils.parallel_backend"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_forest.perm": {
  "data": {
   "lineno": 78
  },
  "type": "constant"
 },
 "sklearn.ensemble.tests.test_forest.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_forest.product": {
  "data": {
   "shadows": "itertools.product"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_forest.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_forest.register_parallel_backend": {
  "data": {
   "shadows": "sklearn.utils.register_parallel_backend"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_forest.rng": {
  "data": {
   "lineno": 70
  },
  "type": "constant"
 },
 "sklearn.ensemble.tests.test_forest.test_1d_input": {
  "data": {
   "lineno": 936,
   "symbols_in_volume": [
    "sklearn.ensemble.tests.test_forest.FOREST_ESTIMATORS",
    "sklearn.ensemble.tests.test_forest.X",
    "sklearn.ensemble.tests.test_forest.check_1d_input",
    "sklearn.ensemble.tests.test_forest.iris",
    "sklearn.ensemble.tests.test_forest.pytest",
    "sklearn.ensemble.tests.test_forest.y",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_backend_respected": {
  "data": {
   "lineno": 1285,
   "symbols_in_volume": [
    "sklearn.ensemble.RandomForestClassifier",
    "sklearn.ensemble.tests.test_forest.X",
    "sklearn.ensemble.tests.test_forest.y",
    "sklearn.utils.parallel_backend"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_boston": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "sklearn.ensemble.tests.test_forest.FOREST_REGRESSORS",
    "sklearn.ensemble.tests.test_forest.check_boston_criterion",
    "sklearn.ensemble.tests.test_forest.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_class_weight_balanced_and_bootstrap_multi_output": {
  "data": {
   "lineno": 1015,
   "symbols_in_volume": [
    "sklearn.ensemble.tests.test_forest.FOREST_CLASSIFIERS",
    "sklearn.ensemble.tests.test_forest.check_class_weight_balanced_and_bootstrap_multi_output",
    "sklearn.ensemble.tests.test_forest.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_class_weight_errors": {
  "data": {
   "lineno": 1046,
   "symbols_in_volume": [
    "sklearn.ensemble.tests.test_forest.FOREST_CLASSIFIERS",
    "sklearn.ensemble.tests.test_forest.check_class_weight_errors",
    "sklearn.ensemble.tests.test_forest.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_class_weights": {
  "data": {
   "lineno": 995,
   "symbols_in_volume": [
    "sklearn.ensemble.tests.test_forest.FOREST_CLASSIFIERS",
    "sklearn.ensemble.tests.test_forest.check_class_weights",
    "sklearn.ensemble.tests.test_forest.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_classes_shape": {
  "data": {
   "lineno": 562,
   "symbols_in_volume": [
    "sklearn.ensemble.tests.test_forest.FOREST_CLASSIFIERS",
    "sklearn.ensemble.tests.test_forest.check_classes_shape",
    "sklearn.ensemble.tests.test_forest.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_classification_toy": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "sklearn.ensemble.tests.test_forest.FOREST_CLASSIFIERS",
    "sklearn.ensemble.tests.test_forest.check_classification_toy",
    "sklearn.ensemble.tests.test_forest.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_decision_path": {
  "data": {
   "lineno": 1218,
   "symbols_in_volume": [
    "sklearn.ensemble.tests.test_forest.FOREST_CLASSIFIERS_REGRESSORS",
    "sklearn.ensemble.tests.test_forest.check_decision_path",
    "sklearn.ensemble.tests.test_forest.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_distribution": {
  "data": {
   "lineno": 650,
   "symbols_in_volume": [
    "collections.defaultdict",
    "int",
    "len",
    "numpy.empty",
    "numpy.random.randint",
    "sklearn.ensemble.ExtraTreesRegressor",
    "sklearn.ensemble.tests.test_forest.X",
    "sklearn.ensemble.tests.test_forest.rng",
    "sklearn.ensemble.tests.test_forest.y",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_greater",
    "sklearn.utils.validation.check_random_state",
    "sorted",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_dtype_convert": {
  "data": {
   "lineno": 1184,
   "symbols_in_volume": [
    "numpy.eye",
    "sklearn.ensemble.RandomForestClassifier",
    "sklearn.ensemble.tests.test_forest.X",
    "sklearn.ensemble.tests.test_forest.pytest",
    "sklearn.ensemble.tests.test_forest.y",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_gridsearch": {
  "data": {
   "lineno": 452,
   "symbols_in_volume": [
    "sklearn.ensemble.tests.test_forest.FOREST_CLASSIFIERS",
    "sklearn.ensemble.tests.test_forest.check_gridsearch",
    "sklearn.ensemble.tests.test_forest.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_importances": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "itertools.product",
    "numpy.float32",
    "numpy.float64",
    "sklearn.ensemble.tests.test_forest.FOREST_CLASSIFIERS",
    "sklearn.ensemble.tests.test_forest.FOREST_REGRESSORS",
    "sklearn.ensemble.tests.test_forest.check_importances",
    "sklearn.ensemble.tests.test_forest.itertools",
    "sklearn.ensemble.tests.test_forest.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_importances_asymptotic": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "entropy",
    "mdi_importance",
    "numpy.abs",
    "numpy.array",
    "numpy.bool",
    "numpy.zeros",
    "range",
    "sklearn.ensemble.ExtraTreesClassifier",
    "sklearn.ensemble.tests.test_forest.X",
    "sklearn.ensemble.tests.test_forest.y",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_less",
    "sum"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_importances_asymptotic.binomial": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "int",
    "sklearn.utils.fixes.comb"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_importances_asymptotic.entropy": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "len",
    "numpy.bincount",
    "numpy.log2"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_importances_asymptotic.mdi_importance": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "binomial",
    "entropy",
    "itertools.combinations",
    "itertools.product",
    "len",
    "list",
    "numpy.bool",
    "numpy.ones",
    "numpy.unique",
    "range",
    "sklearn.ensemble.tests.test_forest.X",
    "sklearn.ensemble.tests.test_forest.y",
    "sum"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_iris": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "sklearn.ensemble.tests.test_forest.FOREST_CLASSIFIERS",
    "sklearn.ensemble.tests.test_forest.check_iris_criterion",
    "sklearn.ensemble.tests.test_forest.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_max_leaf_nodes_max_depth": {
  "data": {
   "lineno": 718,
   "symbols_in_volume": [
    "sklearn.ensemble.tests.test_forest.FOREST_ESTIMATORS",
    "sklearn.ensemble.tests.test_forest.check_max_leaf_nodes_max_depth",
    "sklearn.ensemble.tests.test_forest.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_memory_layout": {
  "data": {
   "lineno": 916,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.float64",
    "sklearn.ensemble.tests.test_forest.FOREST_CLASSIFIERS_REGRESSORS",
    "sklearn.ensemble.tests.test_forest.check_memory_layout",
    "sklearn.ensemble.tests.test_forest.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_min_impurity_decrease": {
  "data": {
   "lineno": 1239,
   "symbols_in_volume": [
    "Estimator",
    "sklearn.datasets.make_hastie_10_2",
    "sklearn.ensemble.ExtraTreesClassifier",
    "sklearn.ensemble.ExtraTreesRegressor",
    "sklearn.ensemble.RandomForestClassifier",
    "sklearn.ensemble.RandomForestRegressor",
    "sklearn.ensemble.tests.test_forest.X",
    "sklearn.ensemble.tests.test_forest.pytest",
    "sklearn.ensemble.tests.test_forest.y",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_min_impurity_split": {
  "data": {
   "lineno": 1223,
   "symbols_in_volume": [
    "DeprecationWarning",
    "Estimator",
    "sklearn.datasets.make_hastie_10_2",
    "sklearn.ensemble.ExtraTreesClassifier",
    "sklearn.ensemble.ExtraTreesRegressor",
    "sklearn.ensemble.RandomForestClassifier",
    "sklearn.ensemble.RandomForestRegressor",
    "sklearn.ensemble.tests.test_forest.X",
    "sklearn.ensemble.tests.test_forest.pytest",
    "sklearn.ensemble.tests.test_forest.y",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_warns_message"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_min_samples_leaf": {
  "data": {
   "lineno": 790,
   "symbols_in_volume": [
    "sklearn.ensemble.tests.test_forest.FOREST_ESTIMATORS",
    "sklearn.ensemble.tests.test_forest.check_min_samples_leaf",
    "sklearn.ensemble.tests.test_forest.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_min_samples_split": {
  "data": {
   "lineno": 752,
   "symbols_in_volume": [
    "sklearn.ensemble.tests.test_forest.FOREST_ESTIMATORS",
    "sklearn.ensemble.tests.test_forest.check_min_samples_split",
    "sklearn.ensemble.tests.test_forest.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_min_weight_fraction_leaf": {
  "data": {
   "lineno": 827,
   "symbols_in_volume": [
    "sklearn.ensemble.tests.test_forest.FOREST_ESTIMATORS",
    "sklearn.ensemble.tests.test_forest.check_min_weight_fraction_leaf",
    "sklearn.ensemble.tests.test_forest.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_multioutput": {
  "data": {
   "lineno": 538,
   "symbols_in_volume": [
    "sklearn.ensemble.tests.test_forest.FOREST_CLASSIFIERS_REGRESSORS",
    "sklearn.ensemble.tests.test_forest.check_multioutput",
    "sklearn.ensemble.tests.test_forest.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_nestimators_future_warning": {
  "data": {
   "lineno": 1254,
   "symbols_in_volume": [
    "FutureWarning",
    "forest",
    "sklearn.ensemble.ExtraTreesClassifier",
    "sklearn.ensemble.ExtraTreesRegressor",
    "sklearn.ensemble.RandomForestClassifier",
    "sklearn.ensemble.RandomForestRegressor",
    "sklearn.ensemble.RandomTreesEmbedding",
    "sklearn.ensemble.tests.test_forest.X",
    "sklearn.ensemble.tests.test_forest.pytest",
    "sklearn.ensemble.tests.test_forest.y",
    "sklearn.utils.testing.assert_no_warnings",
    "sklearn.utils.testing.assert_warns_message"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_oob_score_classifiers": {
  "data": {
   "lineno": 399,
   "symbols_in_volume": [
    "scipy.sparse.csc_matrix",
    "sklearn.ensemble.tests.test_forest.FOREST_CLASSIFIERS",
    "sklearn.ensemble.tests.test_forest.check_oob_score",
    "sklearn.ensemble.tests.test_forest.iris",
    "sklearn.ensemble.tests.test_forest.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_oob_score_raise_error": {
  "data": {
   "lineno": 441,
   "symbols_in_volume": [
    "sklearn.ensemble.tests.test_forest.FOREST_ESTIMATORS",
    "sklearn.ensemble.tests.test_forest.check_oob_score_raise_error",
    "sklearn.ensemble.tests.test_forest.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_oob_score_regressors": {
  "data": {
   "lineno": 410,
   "symbols_in_volume": [
    "scipy.sparse.csc_matrix",
    "sklearn.ensemble.tests.test_forest.FOREST_REGRESSORS",
    "sklearn.ensemble.tests.test_forest.boston",
    "sklearn.ensemble.tests.test_forest.check_oob_score",
    "sklearn.ensemble.tests.test_forest.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_parallel": {
  "data": {
   "lineno": 475,
   "symbols_in_volume": [
    "sklearn.ensemble.tests.test_forest.FOREST_CLASSIFIERS",
    "sklearn.ensemble.tests.test_forest.FOREST_CLASSIFIERS_REGRESSORS",
    "sklearn.ensemble.tests.test_forest.FOREST_REGRESSORS",
    "sklearn.ensemble.tests.test_forest.boston",
    "sklearn.ensemble.tests.test_forest.check_parallel",
    "sklearn.ensemble.tests.test_forest.iris",
    "sklearn.ensemble.tests.test_forest.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_parallel_train": {
  "data": {
   "lineno": 632,
   "symbols_in_volume": [
    "sklearn.ensemble.RandomForestClassifier",
    "sklearn.ensemble.tests.test_forest.rng",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.validation.check_random_state",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_pickle": {
  "data": {
   "lineno": 500,
   "symbols_in_volume": [
    "sklearn.ensemble.tests.test_forest.FOREST_CLASSIFIERS",
    "sklearn.ensemble.tests.test_forest.FOREST_CLASSIFIERS_REGRESSORS",
    "sklearn.ensemble.tests.test_forest.FOREST_REGRESSORS",
    "sklearn.ensemble.tests.test_forest.boston",
    "sklearn.ensemble.tests.test_forest.check_pickle",
    "sklearn.ensemble.tests.test_forest.iris",
    "sklearn.ensemble.tests.test_forest.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_probability": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "sklearn.ensemble.tests.test_forest.FOREST_CLASSIFIERS",
    "sklearn.ensemble.tests.test_forest.check_probability",
    "sklearn.ensemble.tests.test_forest.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_random_hasher": {
  "data": {
   "lineno": 599,
   "symbols_in_volume": [
    "sklearn.datasets.make_circles",
    "sklearn.decomposition.TruncatedSVD",
    "sklearn.ensemble.RandomTreesEmbedding",
    "sklearn.ensemble.tests.test_forest.X",
    "sklearn.ensemble.tests.test_forest.y",
    "sklearn.svm.LinearSVC",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_random_hasher_sparse_data": {
  "data": {
   "lineno": 624,
   "symbols_in_volume": [
    "scipy.sparse.csc_matrix",
    "sklearn.datasets.make_multilabel_classification",
    "sklearn.ensemble.RandomTreesEmbedding",
    "sklearn.ensemble.tests.test_forest.X",
    "sklearn.ensemble.tests.test_forest.y",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_random_trees_dense_equal": {
  "data": {
   "lineno": 581,
   "symbols_in_volume": [
    "sklearn.datasets.make_circles",
    "sklearn.ensemble.RandomTreesEmbedding",
    "sklearn.ensemble.tests.test_forest.X",
    "sklearn.ensemble.tests.test_forest.y",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_random_trees_dense_type": {
  "data": {
   "lineno": 568,
   "symbols_in_volume": [
    "numpy.ndarray",
    "sklearn.datasets.make_circles",
    "sklearn.ensemble.RandomTreesEmbedding",
    "sklearn.ensemble.tests.test_forest.X",
    "sklearn.ensemble.tests.test_forest.y",
    "sklearn.utils.testing.assert_equal",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_regressor_attributes": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "sklearn.ensemble.tests.test_forest.FOREST_REGRESSORS",
    "sklearn.ensemble.tests.test_forest.check_regressor_attributes",
    "sklearn.ensemble.tests.test_forest.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_sparse_input": {
  "data": {
   "lineno": 858,
   "symbols_in_volume": [
    "scipy.sparse.coo_matrix",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "sklearn.datasets.make_multilabel_classification",
    "sklearn.ensemble.tests.test_forest.FOREST_ESTIMATORS",
    "sklearn.ensemble.tests.test_forest.X",
    "sklearn.ensemble.tests.test_forest.check_sparse_input",
    "sklearn.ensemble.tests.test_forest.pytest",
    "sklearn.ensemble.tests.test_forest.y",
    "sparse_matrix"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_unfitted_feature_importances": {
  "data": {
   "lineno": 370,
   "symbols_in_volume": [
    "sklearn.ensemble.tests.test_forest.FOREST_ESTIMATORS",
    "sklearn.ensemble.tests.test_forest.check_unfitted_feature_importances",
    "sklearn.ensemble.tests.test_forest.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_warm_start": {
  "data": {
   "lineno": 1079,
   "symbols_in_volume": [
    "sklearn.ensemble.tests.test_forest.FOREST_ESTIMATORS",
    "sklearn.ensemble.tests.test_forest.check_warm_start",
    "sklearn.ensemble.tests.test_forest.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_warm_start_clear": {
  "data": {
   "lineno": 1101,
   "symbols_in_volume": [
    "sklearn.ensemble.tests.test_forest.FOREST_ESTIMATORS",
    "sklearn.ensemble.tests.test_forest.check_warm_start_clear",
    "sklearn.ensemble.tests.test_forest.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_warm_start_equal_n_estimators": {
  "data": {
   "lineno": 1142,
   "symbols_in_volume": [
    "sklearn.ensemble.tests.test_forest.FOREST_ESTIMATORS",
    "sklearn.ensemble.tests.test_forest.check_warm_start_equal_n_estimators",
    "sklearn.ensemble.tests.test_forest.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_warm_start_oob": {
  "data": {
   "lineno": 1179,
   "symbols_in_volume": [
    "sklearn.ensemble.tests.test_forest.FOREST_CLASSIFIERS_REGRESSORS",
    "sklearn.ensemble.tests.test_forest.check_warm_start_oob",
    "sklearn.ensemble.tests.test_forest.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_warm_start_smaller_n_estimators": {
  "data": {
   "lineno": 1116,
   "symbols_in_volume": [
    "sklearn.ensemble.tests.test_forest.FOREST_ESTIMATORS",
    "sklearn.ensemble.tests.test_forest.check_warm_start_smaller_n_estimators",
    "sklearn.ensemble.tests.test_forest.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.true_result": {
  "data": {
   "lineno": 60
  },
  "type": "constant"
 },
 "sklearn.ensemble.tests.test_forest.y": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "sklearn.ensemble.tests.test_gradient_boosting": {
  "data": {
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.datasets.load_boston",
    "sklearn.datasets.load_iris",
    "sklearn.ensemble.GradientBoostingClassifier",
    "sklearn.ensemble.GradientBoostingRegressor",
    "sklearn.ensemble.tests.test_gradient_boosting.boston",
    "sklearn.ensemble.tests.test_gradient_boosting.iris",
    "sklearn.ensemble.tests.test_gradient_boosting.perm",
    "sklearn.ensemble.tests.test_gradient_boosting.rng"
   ]
  },
  "type": "module"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.DataConversionWarning": {
  "data": {
   "shadows": "sklearn.exceptions.DataConversionWarning"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.GRADIENT_BOOSTING_ESTIMATORS": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.GradientBoostingClassifier": {
  "data": {
   "shadows": "sklearn.ensemble.GradientBoostingClassifier"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.GradientBoostingRegressor": {
  "data": {
   "shadows": "sklearn.ensemble.GradientBoostingRegressor"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.NotFittedError": {
  "data": {
   "shadows": "sklearn.exceptions.NotFittedError"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.StringIO": {
  "data": {
   "shadows": "sklearn.externals.six.moves.cStringIO"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.T": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.TREE_LEAF": {
  "data": {
   "shadows": "sklearn.tree._tree.TREE_LEAF"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.X": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.ZeroEstimator": {
  "data": {
   "shadows": "sklearn.ensemble.gradient_boosting.ZeroEstimator"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.assert_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.assert_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.assert_greater": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_greater"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.assert_less": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_less"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.assert_raise_message": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raise_message"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.assert_raises": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.assert_true": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_true"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.assert_warns": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_warns"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.assert_warns_message": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_warns_message"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.boston": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.check_boston": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.ones",
    "sklearn.ensemble.GradientBoostingRegressor",
    "sklearn.ensemble.tests.test_gradient_boosting.boston",
    "sklearn.metrics.mean_squared_error",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_less",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.check_classification_synthetic": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "sklearn.datasets.make_hastie_10_2",
    "sklearn.ensemble.GradientBoostingClassifier",
    "sklearn.ensemble.tests.test_gradient_boosting.X",
    "sklearn.ensemble.tests.test_gradient_boosting.y",
    "sklearn.utils.testing.assert_less"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.check_classification_toy": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.any",
    "sklearn.ensemble.GradientBoostingClassifier",
    "sklearn.ensemble.tests.test_gradient_boosting.T",
    "sklearn.ensemble.tests.test_gradient_boosting.X",
    "sklearn.ensemble.tests.test_gradient_boosting.true_result",
    "sklearn.ensemble.tests.test_gradient_boosting.y",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_raises",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.check_iris": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "sklearn.ensemble.GradientBoostingClassifier",
    "sklearn.ensemble.tests.test_gradient_boosting.iris",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_greater"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.check_random_state": {
  "data": {
   "shadows": "sklearn.utils.check_random_state"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.check_sparse_input": {
  "data": {
   "lineno": 1201,
   "symbols_in_volume": [
    "EstimatorClass",
    "isinstance",
    "numpy.array",
    "sklearn.ensemble.GradientBoostingClassifier",
    "sklearn.ensemble.tests.test_gradient_boosting.X",
    "sklearn.ensemble.tests.test_gradient_boosting.y",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.clone": {
  "data": {
   "shadows": "sklearn.base.clone"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.coo_matrix": {
  "data": {
   "shadows": "scipy.sparse.coo_matrix"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.csc_matrix": {
  "data": {
   "shadows": "scipy.sparse.csc_matrix"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.csr_matrix": {
  "data": {
   "shadows": "scipy.sparse.csr_matrix"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.datasets": {
  "data": {
   "shadows": "sklearn.datasets"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.early_stopping_monitor": {
  "data": {
   "lineno": 973
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.fetch_california_housing": {
  "data": {
   "shadows": "sklearn.datasets.fetch_california_housing"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.iris": {
  "data": {
   "lineno": 57
  },
  "type": "constant"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.make_classification": {
  "data": {
   "shadows": "sklearn.datasets.make_classification"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.mean_squared_error": {
  "data": {
   "shadows": "sklearn.metrics.mean_squared_error"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.perm": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.predict_stages": {
  "data": {
   "shadows": "sklearn.ensemble._gradient_boosting.predict_stages"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.rng": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.skip_if_32bit": {
  "data": {
   "shadows": "sklearn.utils.testing.skip_if_32bit"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_boston": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "sklearn.ensemble.tests.test_gradient_boosting.check_boston",
    "sklearn.ensemble.tests.test_gradient_boosting.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_check_inputs": {
  "data": {
   "lineno": 363,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "sklearn.ensemble.GradientBoostingClassifier",
    "sklearn.ensemble.tests.test_gradient_boosting.X",
    "sklearn.ensemble.tests.test_gradient_boosting.y",
    "sklearn.utils.testing.assert_raise_message",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_check_inputs_predict": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.array",
    "numpy.newaxis",
    "sklearn.ensemble.GradientBoostingClassifier",
    "sklearn.ensemble.GradientBoostingRegressor",
    "sklearn.ensemble.tests.test_gradient_boosting.X",
    "sklearn.ensemble.tests.test_gradient_boosting.rng",
    "sklearn.ensemble.tests.test_gradient_boosting.y",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_check_inputs_predict_stages": {
  "data": {
   "lineno": 406,
   "symbols_in_volume": [
    "ValueError",
    "numpy.asfortranarray",
    "numpy.zeros",
    "scipy.sparse.csc_matrix",
    "sklearn.datasets.make_hastie_10_2",
    "sklearn.ensemble.GradientBoostingClassifier",
    "sklearn.ensemble._gradient_boosting.predict_stages",
    "sklearn.ensemble.tests.test_gradient_boosting.y",
    "sklearn.utils.testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_check_max_features": {
  "data": {
   "lineno": 425,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "sklearn.ensemble.GradientBoostingRegressor",
    "sklearn.ensemble.tests.test_gradient_boosting.X",
    "sklearn.ensemble.tests.test_gradient_boosting.y",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_classification_synthetic": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "sklearn.ensemble.tests.test_gradient_boosting.check_classification_synthetic",
    "sklearn.ensemble.tests.test_gradient_boosting.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_classification_toy": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "sklearn.ensemble.tests.test_gradient_boosting.check_classification_toy",
    "sklearn.ensemble.tests.test_gradient_boosting.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_classifier_parameter_checks": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.ensemble.GradientBoostingClassifier",
    "sklearn.ensemble.tests.test_gradient_boosting.X",
    "sklearn.ensemble.tests.test_gradient_boosting.y",
    "sklearn.utils.testing.assert_raise_message",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_complete_classification": {
  "data": {
   "lineno": 1017,
   "symbols_in_volume": [
    "sklearn.datasets.make_hastie_10_2",
    "sklearn.ensemble.GradientBoostingClassifier",
    "sklearn.ensemble.tests.test_gradient_boosting.X",
    "sklearn.ensemble.tests.test_gradient_boosting.y",
    "sklearn.tree._tree.TREE_LEAF.shape",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_complete_regression": {
  "data": {
   "lineno": 1033,
   "symbols_in_volume": [
    "sklearn.ensemble.GradientBoostingRegressor",
    "sklearn.ensemble.tests.test_gradient_boosting.boston",
    "sklearn.tree._tree.TREE_LEAF.shape",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_degenerate_targets": {
  "data": {
   "lineno": 607,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.float64",
    "numpy.ones",
    "sklearn.ensemble.GradientBoostingClassifier",
    "sklearn.ensemble.GradientBoostingRegressor",
    "sklearn.ensemble.tests.test_gradient_boosting.X",
    "sklearn.ensemble.tests.test_gradient_boosting.rng",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_feature_importance_regression": {
  "data": {
   "lineno": 455,
   "symbols_in_volume": [
    "numpy.argsort",
    "set",
    "sklearn.datasets.fetch_california_housing",
    "sklearn.ensemble.GradientBoostingRegressor",
    "sklearn.ensemble.tests.test_gradient_boosting.X",
    "sklearn.ensemble.tests.test_gradient_boosting.pytest",
    "sklearn.ensemble.tests.test_gradient_boosting.y",
    "sklearn.model_selection.train_test_split"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_feature_importances": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": [
    "hasattr",
    "numpy.array",
    "numpy.float32",
    "sklearn.ensemble.GradientBoostingRegressor",
    "sklearn.ensemble.tests.test_gradient_boosting.X",
    "sklearn.ensemble.tests.test_gradient_boosting.boston",
    "sklearn.ensemble.tests.test_gradient_boosting.y",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_float_class_labels": {
  "data": {
   "lineno": 649,
   "symbols_in_volume": [
    "len",
    "numpy.asarray",
    "numpy.float32",
    "sklearn.ensemble.GradientBoostingClassifier",
    "sklearn.ensemble.tests.test_gradient_boosting.T",
    "sklearn.ensemble.tests.test_gradient_boosting.X",
    "sklearn.ensemble.tests.test_gradient_boosting.true_result",
    "sklearn.ensemble.tests.test_gradient_boosting.y",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_gradient_boosting_early_stopping": {
  "data": {
   "lineno": 1258,
   "symbols_in_volume": [
    "sklearn.datasets.make_classification",
    "sklearn.ensemble.GradientBoostingClassifier",
    "sklearn.ensemble.GradientBoostingRegressor",
    "sklearn.ensemble.tests.test_gradient_boosting.X",
    "sklearn.ensemble.tests.test_gradient_boosting.y",
    "sklearn.model_selection.train_test_split",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_gradient_boosting_validation_fraction": {
  "data": {
   "lineno": 1293,
   "symbols_in_volume": [
    "sklearn.base.clone",
    "sklearn.datasets.make_classification",
    "sklearn.ensemble.GradientBoostingClassifier",
    "sklearn.ensemble.GradientBoostingRegressor",
    "sklearn.ensemble.tests.test_gradient_boosting.X",
    "sklearn.ensemble.tests.test_gradient_boosting.y",
    "sklearn.model_selection.train_test_split"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_iris": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "len",
    "numpy.ones",
    "sklearn.ensemble.tests.test_gradient_boosting.check_iris",
    "sklearn.ensemble.tests.test_gradient_boosting.iris",
    "sklearn.ensemble.tests.test_gradient_boosting.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_loss_function": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.ensemble.GradientBoostingClassifier",
    "sklearn.ensemble.GradientBoostingRegressor",
    "sklearn.ensemble.tests.test_gradient_boosting.X",
    "sklearn.ensemble.tests.test_gradient_boosting.y",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_max_feature_auto": {
  "data": {
   "lineno": 484,
   "symbols_in_volume": [
    "int",
    "numpy.log2",
    "numpy.sqrt",
    "sklearn.datasets.make_hastie_10_2",
    "sklearn.ensemble.GradientBoostingClassifier",
    "sklearn.ensemble.GradientBoostingRegressor",
    "sklearn.ensemble.tests.test_gradient_boosting.X",
    "sklearn.ensemble.tests.test_gradient_boosting.y",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_max_feature_regression": {
  "data": {
   "lineno": 440,
   "symbols_in_volume": [
    "sklearn.datasets.make_hastie_10_2",
    "sklearn.ensemble.GradientBoostingClassifier",
    "sklearn.ensemble.tests.test_gradient_boosting.X",
    "sklearn.ensemble.tests.test_gradient_boosting.y",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_max_leaf_nodes_max_depth": {
  "data": {
   "lineno": 1098,
   "symbols_in_volume": [
    "GBEstimator",
    "sklearn.datasets.make_hastie_10_2",
    "sklearn.ensemble.tests.test_gradient_boosting.GRADIENT_BOOSTING_ESTIMATORS",
    "sklearn.ensemble.tests.test_gradient_boosting.X",
    "sklearn.ensemble.tests.test_gradient_boosting.pytest",
    "sklearn.ensemble.tests.test_gradient_boosting.y",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_greater"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_mem_layout": {
  "data": {
   "lineno": 676,
   "symbols_in_volume": [
    "len",
    "numpy.asarray",
    "numpy.ascontiguousarray",
    "numpy.asfortranarray",
    "numpy.int32",
    "sklearn.ensemble.GradientBoostingClassifier",
    "sklearn.ensemble.tests.test_gradient_boosting.T",
    "sklearn.ensemble.tests.test_gradient_boosting.X",
    "sklearn.ensemble.tests.test_gradient_boosting.true_result",
    "sklearn.ensemble.tests.test_gradient_boosting.y",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_min_impurity_decrease": {
  "data": {
   "lineno": 1127,
   "symbols_in_volume": [
    "GBEstimator",
    "sklearn.datasets.make_hastie_10_2",
    "sklearn.ensemble.tests.test_gradient_boosting.GRADIENT_BOOSTING_ESTIMATORS",
    "sklearn.ensemble.tests.test_gradient_boosting.X",
    "sklearn.ensemble.tests.test_gradient_boosting.pytest",
    "sklearn.ensemble.tests.test_gradient_boosting.y",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_min_impurity_split": {
  "data": {
   "lineno": 1114,
   "symbols_in_volume": [
    "DeprecationWarning",
    "GBEstimator",
    "sklearn.datasets.make_hastie_10_2",
    "sklearn.ensemble.tests.test_gradient_boosting.GRADIENT_BOOSTING_ESTIMATORS",
    "sklearn.ensemble.tests.test_gradient_boosting.X",
    "sklearn.ensemble.tests.test_gradient_boosting.pytest",
    "sklearn.ensemble.tests.test_gradient_boosting.y",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_warns_message"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_monitor_early_stopping": {
  "data": {
   "lineno": 981,
   "symbols_in_volume": [
    "Cls",
    "sklearn.datasets.make_hastie_10_2",
    "sklearn.ensemble.tests.test_gradient_boosting.GRADIENT_BOOSTING_ESTIMATORS",
    "sklearn.ensemble.tests.test_gradient_boosting.X",
    "sklearn.ensemble.tests.test_gradient_boosting.early_stopping_monitor",
    "sklearn.ensemble.tests.test_gradient_boosting.pytest",
    "sklearn.ensemble.tests.test_gradient_boosting.y",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_more_verbose_output": {
  "data": {
   "lineno": 765,
   "symbols_in_volume": [
    "sklearn.ensemble.GradientBoostingClassifier",
    "sklearn.ensemble.tests.test_gradient_boosting.X",
    "sklearn.ensemble.tests.test_gradient_boosting.sys",
    "sklearn.ensemble.tests.test_gradient_boosting.y",
    "sklearn.externals.six.moves.cStringIO",
    "sklearn.utils.testing.assert_equal",
    "sum"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_non_uniform_weights_toy_edge_case_clf": {
  "data": {
   "lineno": 1187,
   "symbols_in_volume": [
    "sklearn.ensemble.GradientBoostingClassifier",
    "sklearn.ensemble.tests.test_gradient_boosting.X",
    "sklearn.ensemble.tests.test_gradient_boosting.y",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_non_uniform_weights_toy_edge_case_reg": {
  "data": {
   "lineno": 1172,
   "symbols_in_volume": [
    "sklearn.ensemble.GradientBoostingRegressor",
    "sklearn.ensemble.tests.test_gradient_boosting.X",
    "sklearn.ensemble.tests.test_gradient_boosting.y",
    "sklearn.utils.testing.assert_greater"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_oob_improvement": {
  "data": {
   "lineno": 705,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.ensemble.GradientBoostingClassifier",
    "sklearn.ensemble.tests.test_gradient_boosting.X",
    "sklearn.ensemble.tests.test_gradient_boosting.y",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_oob_improvement_raise": {
  "data": {
   "lineno": 717,
   "symbols_in_volume": [
    "AttributeError",
    "sklearn.ensemble.GradientBoostingClassifier",
    "sklearn.ensemble.tests.test_gradient_boosting.X",
    "sklearn.ensemble.tests.test_gradient_boosting.y",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_oob_multilcass_iris": {
  "data": {
   "lineno": 725,
   "symbols_in_volume": [
    "sklearn.ensemble.GradientBoostingClassifier",
    "sklearn.ensemble.tests.test_gradient_boosting.iris",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_greater"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_probability_exponential": {
  "data": {
   "lineno": 1149,
   "symbols_in_volume": [
    "ValueError",
    "numpy.all",
    "numpy.exp",
    "sklearn.ensemble.GradientBoostingClassifier",
    "sklearn.ensemble.tests.test_gradient_boosting.T",
    "sklearn.ensemble.tests.test_gradient_boosting.X",
    "sklearn.ensemble.tests.test_gradient_boosting.true_result",
    "sklearn.ensemble.tests.test_gradient_boosting.y",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_raises",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_probability_log": {
  "data": {
   "lineno": 344,
   "symbols_in_volume": [
    "ValueError",
    "numpy.all",
    "sklearn.ensemble.GradientBoostingClassifier",
    "sklearn.ensemble.tests.test_gradient_boosting.T",
    "sklearn.ensemble.tests.test_gradient_boosting.X",
    "sklearn.ensemble.tests.test_gradient_boosting.true_result",
    "sklearn.ensemble.tests.test_gradient_boosting.y",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_raises",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_quantile_loss": {
  "data": {
   "lineno": 621,
   "symbols_in_volume": [
    "sklearn.ensemble.GradientBoostingRegressor",
    "sklearn.ensemble.tests.test_gradient_boosting.boston",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_regression_synthetic": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "sklearn.datasets.make_friedman1",
    "sklearn.datasets.make_friedman2",
    "sklearn.datasets.make_friedman3",
    "sklearn.ensemble.GradientBoostingRegressor",
    "sklearn.ensemble.tests.test_gradient_boosting.X",
    "sklearn.ensemble.tests.test_gradient_boosting.y",
    "sklearn.metrics.mean_squared_error",
    "sklearn.utils.check_random_state",
    "sklearn.utils.testing.assert_less"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_regressor_parameter_checks": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.ensemble.GradientBoostingRegressor",
    "sklearn.ensemble.tests.test_gradient_boosting.X",
    "sklearn.ensemble.tests.test_gradient_boosting.y",
    "sklearn.utils.testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_serialization": {
  "data": {
   "lineno": 587,
   "symbols_in_volume": [
    "ImportError",
    "cPickle.HIGHEST_PROTOCOL",
    "cPickle.dumps",
    "cPickle.loads",
    "len",
    "sklearn.ensemble.GradientBoostingClassifier",
    "sklearn.ensemble.tests.test_gradient_boosting.T",
    "sklearn.ensemble.tests.test_gradient_boosting.X",
    "sklearn.ensemble.tests.test_gradient_boosting.true_result",
    "sklearn.ensemble.tests.test_gradient_boosting.y",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_shape_y": {
  "data": {
   "lineno": 661,
   "symbols_in_volume": [
    "len",
    "numpy.asarray",
    "numpy.int32",
    "numpy.newaxis",
    "sklearn.ensemble.GradientBoostingClassifier",
    "sklearn.ensemble.tests.test_gradient_boosting.T",
    "sklearn.ensemble.tests.test_gradient_boosting.X",
    "sklearn.ensemble.tests.test_gradient_boosting.true_result",
    "sklearn.ensemble.tests.test_gradient_boosting.y",
    "sklearn.exceptions.DataConversionWarning",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_warns"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_sparse_input": {
  "data": {
   "lineno": 1243,
   "symbols_in_volume": [
    "EstimatorClass",
    "scipy.sparse.coo_matrix",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "sklearn.datasets.make_multilabel_classification",
    "sklearn.ensemble.GradientBoostingClassifier",
    "sklearn.ensemble.GradientBoostingRegressor",
    "sklearn.ensemble.tests.test_gradient_boosting.X",
    "sklearn.ensemble.tests.test_gradient_boosting.check_sparse_input",
    "sklearn.ensemble.tests.test_gradient_boosting.pytest",
    "sklearn.ensemble.tests.test_gradient_boosting.y",
    "sklearn.utils.testing.skip_if_32bit",
    "sparse_matrix"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_staged_functions_defensive": {
  "data": {
   "lineno": 568,
   "symbols_in_volume": [
    "Estimator",
    "getattr",
    "list",
    "numpy.all",
    "numpy.int",
    "numpy.random.RandomState",
    "sklearn.ensemble.tests.test_gradient_boosting.GRADIENT_BOOSTING_ESTIMATORS",
    "sklearn.ensemble.tests.test_gradient_boosting.X",
    "sklearn.ensemble.tests.test_gradient_boosting.pytest",
    "sklearn.ensemble.tests.test_gradient_boosting.rng",
    "sklearn.ensemble.tests.test_gradient_boosting.warnings",
    "sklearn.ensemble.tests.test_gradient_boosting.y",
    "sklearn.utils.testing.assert_true",
    "staged_func"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_staged_predict": {
  "data": {
   "lineno": 518,
   "symbols_in_volume": [
    "ValueError",
    "numpy.float64",
    "numpy.fromiter",
    "sklearn.datasets.make_friedman1",
    "sklearn.ensemble.GradientBoostingRegressor",
    "sklearn.ensemble.tests.test_gradient_boosting.X",
    "sklearn.ensemble.tests.test_gradient_boosting.y",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_staged_predict_proba": {
  "data": {
   "lineno": 540,
   "symbols_in_volume": [
    "numpy.float64",
    "numpy.fromiter",
    "sklearn.datasets.make_hastie_10_2",
    "sklearn.ensemble.GradientBoostingClassifier",
    "sklearn.ensemble.tests.test_gradient_boosting.X",
    "sklearn.ensemble.tests.test_gradient_boosting.y",
    "sklearn.exceptions.NotFittedError",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_symbol_labels": {
  "data": {
   "lineno": 638,
   "symbols_in_volume": [
    "len",
    "map",
    "sklearn.ensemble.GradientBoostingClassifier",
    "sklearn.ensemble.tests.test_gradient_boosting.T",
    "sklearn.ensemble.tests.test_gradient_boosting.X",
    "sklearn.ensemble.tests.test_gradient_boosting.true_result",
    "sklearn.ensemble.tests.test_gradient_boosting.y",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.tosequence",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_verbose_output": {
  "data": {
   "lineno": 740,
   "symbols_in_volume": [
    "sklearn.ensemble.GradientBoostingClassifier",
    "sklearn.ensemble.tests.test_gradient_boosting.X",
    "sklearn.ensemble.tests.test_gradient_boosting.sys",
    "sklearn.ensemble.tests.test_gradient_boosting.y",
    "sklearn.externals.six.moves.cStringIO",
    "sklearn.utils.testing.assert_equal",
    "sum"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_warm_start": {
  "data": {
   "lineno": 790,
   "symbols_in_volume": [
    "Cls",
    "sklearn.datasets.make_hastie_10_2",
    "sklearn.ensemble.GradientBoostingRegressor",
    "sklearn.ensemble.tests.test_gradient_boosting.GRADIENT_BOOSTING_ESTIMATORS",
    "sklearn.ensemble.tests.test_gradient_boosting.X",
    "sklearn.ensemble.tests.test_gradient_boosting.pytest",
    "sklearn.ensemble.tests.test_gradient_boosting.y",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_warm_start_clear": {
  "data": {
   "lineno": 842,
   "symbols_in_volume": [
    "Cls",
    "sklearn.datasets.make_hastie_10_2",
    "sklearn.ensemble.tests.test_gradient_boosting.GRADIENT_BOOSTING_ESTIMATORS",
    "sklearn.ensemble.tests.test_gradient_boosting.X",
    "sklearn.ensemble.tests.test_gradient_boosting.pytest",
    "sklearn.ensemble.tests.test_gradient_boosting.y",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_warm_start_equal_n_estimators": {
  "data": {
   "lineno": 877,
   "symbols_in_volume": [
    "Cls",
    "sklearn.base.clone",
    "sklearn.datasets.make_hastie_10_2",
    "sklearn.ensemble.tests.test_gradient_boosting.GRADIENT_BOOSTING_ESTIMATORS",
    "sklearn.ensemble.tests.test_gradient_boosting.X",
    "sklearn.ensemble.tests.test_gradient_boosting.pytest",
    "sklearn.ensemble.tests.test_gradient_boosting.y",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_warm_start_fortran": {
  "data": {
   "lineno": 953,
   "symbols_in_volume": [
    "Cls",
    "numpy.asfortranarray",
    "sklearn.datasets.make_hastie_10_2",
    "sklearn.ensemble.tests.test_gradient_boosting.GRADIENT_BOOSTING_ESTIMATORS",
    "sklearn.ensemble.tests.test_gradient_boosting.X",
    "sklearn.ensemble.tests.test_gradient_boosting.pytest",
    "sklearn.ensemble.tests.test_gradient_boosting.y",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_warm_start_max_depth": {
  "data": {
   "lineno": 827,
   "symbols_in_volume": [
    "Cls",
    "range",
    "sklearn.datasets.make_hastie_10_2",
    "sklearn.ensemble.tests.test_gradient_boosting.GRADIENT_BOOSTING_ESTIMATORS",
    "sklearn.ensemble.tests.test_gradient_boosting.X",
    "sklearn.ensemble.tests.test_gradient_boosting.pytest",
    "sklearn.ensemble.tests.test_gradient_boosting.y",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_warm_start_n_estimators": {
  "data": {
   "lineno": 812,
   "symbols_in_volume": [
    "Cls",
    "sklearn.datasets.make_hastie_10_2",
    "sklearn.ensemble.tests.test_gradient_boosting.GRADIENT_BOOSTING_ESTIMATORS",
    "sklearn.ensemble.tests.test_gradient_boosting.X",
    "sklearn.ensemble.tests.test_gradient_boosting.pytest",
    "sklearn.ensemble.tests.test_gradient_boosting.y",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_warm_start_oob": {
  "data": {
   "lineno": 906,
   "symbols_in_volume": [
    "Cls",
    "sklearn.datasets.make_hastie_10_2",
    "sklearn.ensemble.tests.test_gradient_boosting.GRADIENT_BOOSTING_ESTIMATORS",
    "sklearn.ensemble.tests.test_gradient_boosting.X",
    "sklearn.ensemble.tests.test_gradient_boosting.pytest",
    "sklearn.ensemble.tests.test_gradient_boosting.y",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_warm_start_oob_switch": {
  "data": {
   "lineno": 891,
   "symbols_in_volume": [
    "Cls",
    "numpy.bool",
    "numpy.zeros",
    "sklearn.datasets.make_hastie_10_2",
    "sklearn.ensemble.tests.test_gradient_boosting.GRADIENT_BOOSTING_ESTIMATORS",
    "sklearn.ensemble.tests.test_gradient_boosting.X",
    "sklearn.ensemble.tests.test_gradient_boosting.pytest",
    "sklearn.ensemble.tests.test_gradient_boosting.y",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_warm_start_smaller_n_estimators": {
  "data": {
   "lineno": 867,
   "symbols_in_volume": [
    "Cls",
    "ValueError",
    "sklearn.datasets.make_hastie_10_2",
    "sklearn.ensemble.tests.test_gradient_boosting.GRADIENT_BOOSTING_ESTIMATORS",
    "sklearn.ensemble.tests.test_gradient_boosting.X",
    "sklearn.ensemble.tests.test_gradient_boosting.pytest",
    "sklearn.ensemble.tests.test_gradient_boosting.y",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_warm_start_sparse": {
  "data": {
   "lineno": 924,
   "symbols_in_volume": [
    "Cls",
    "scipy.sparse.coo_matrix",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "sklearn.datasets.make_hastie_10_2",
    "sklearn.ensemble.tests.test_gradient_boosting.GRADIENT_BOOSTING_ESTIMATORS",
    "sklearn.ensemble.tests.test_gradient_boosting.X",
    "sklearn.ensemble.tests.test_gradient_boosting.pytest",
    "sklearn.ensemble.tests.test_gradient_boosting.y",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sparse_constructor"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_warm_start_wo_nestimators_change": {
  "data": {
   "lineno": 1139,
   "symbols_in_volume": [
    "sklearn.ensemble.GradientBoostingClassifier",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_warm_start_zero_n_estimators": {
  "data": {
   "lineno": 857,
   "symbols_in_volume": [
    "Cls",
    "ValueError",
    "sklearn.datasets.make_hastie_10_2",
    "sklearn.ensemble.tests.test_gradient_boosting.GRADIENT_BOOSTING_ESTIMATORS",
    "sklearn.ensemble.tests.test_gradient_boosting.X",
    "sklearn.ensemble.tests.test_gradient_boosting.pytest",
    "sklearn.ensemble.tests.test_gradient_boosting.y",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_zero_estimator_clf": {
  "data": {
   "lineno": 1068,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "sklearn.ensemble.GradientBoostingClassifier",
    "sklearn.ensemble.gradient_boosting.ZeroEstimator",
    "sklearn.ensemble.tests.test_gradient_boosting.X",
    "sklearn.ensemble.tests.test_gradient_boosting.iris",
    "sklearn.ensemble.tests.test_gradient_boosting.y",
    "sklearn.utils.testing.assert_greater",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_zero_estimator_reg": {
  "data": {
   "lineno": 1047,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.ensemble.GradientBoostingRegressor",
    "sklearn.ensemble.gradient_boosting.ZeroEstimator",
    "sklearn.ensemble.tests.test_gradient_boosting.boston",
    "sklearn.metrics.mean_squared_error",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.tosequence": {
  "data": {
   "shadows": "sklearn.utils.tosequence"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.train_test_split": {
  "data": {
   "shadows": "sklearn.model_selection.train_test_split"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.true_result": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.y": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "sklearn.ensemble.tests.test_gradient_boosting_loss_functions": {
  "data": {},
  "type": "module"
 },
 "sklearn.ensemble.tests.test_gradient_boosting_loss_functions.BinomialDeviance": {
  "data": {
   "shadows": "sklearn.ensemble.gradient_boosting.BinomialDeviance"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_gradient_boosting_loss_functions.LOSS_FUNCTIONS": {
  "data": {
   "shadows": "sklearn.ensemble.gradient_boosting.LOSS_FUNCTIONS"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_gradient_boosting_loss_functions.LeastSquaresError": {
  "data": {
   "shadows": "sklearn.ensemble.gradient_boosting.LeastSquaresError"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_gradient_boosting_loss_functions.LogOddsEstimator": {
  "data": {
   "shadows": "sklearn.ensemble.gradient_boosting.LogOddsEstimator"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_gradient_boosting_loss_functions.QuantileLossFunction": {
  "data": {
   "shadows": "sklearn.ensemble.gradient_boosting.QuantileLossFunction"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_gradient_boosting_loss_functions.RegressionLossFunction": {
  "data": {
   "shadows": "sklearn.ensemble.gradient_boosting.RegressionLossFunction"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_gradient_boosting_loss_functions._weighted_percentile": {
  "data": {
   "shadows": "sklearn.ensemble.gradient_boosting._weighted_percentile"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_gradient_boosting_loss_functions.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_gradient_boosting_loss_functions.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_gradient_boosting_loss_functions.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_gradient_boosting_loss_functions.assert_raises": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_gradient_boosting_loss_functions.check_random_state": {
  "data": {
   "shadows": "sklearn.utils.check_random_state"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_gradient_boosting_loss_functions.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_gradient_boosting_loss_functions.test_binomial_deviance": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "alt_dev",
    "alt_ng",
    "bd",
    "bd.negative_gradient",
    "numpy.array",
    "numpy.exp",
    "numpy.logaddexp",
    "numpy.mean",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_equal",
    "sklearn.ensemble.gradient_boosting.BinomialDeviance"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting_loss_functions.test_log_odds_estimator": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "sklearn.ensemble.gradient_boosting.LogOddsEstimator",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting_loss_functions.test_quantile_loss_function": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.testing.assert_allclose",
    "numpy.zeros_like",
    "sklearn.ensemble.gradient_boosting.QuantileLossFunction"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting_loss_functions.test_sample_weight_deviance": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "Loss",
    "Loss.is_multi_class",
    "issubclass",
    "loss",
    "numpy.float64",
    "numpy.ones",
    "numpy.zeros",
    "range",
    "sklearn.ensemble.gradient_boosting.LOSS_FUNCTIONS.values",
    "sklearn.ensemble.gradient_boosting.RegressionLossFunction",
    "sklearn.utils.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting_loss_functions.test_sample_weight_init_estimators": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "Loss",
    "issubclass",
    "loss",
    "loss.init_estimator",
    "numpy.ones",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "sklearn.ensemble.gradient_boosting.LOSS_FUNCTIONS.values",
    "sklearn.ensemble.gradient_boosting.RegressionLossFunction",
    "sklearn.utils.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting_loss_functions.test_sample_weight_smoke": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "loss",
    "numpy.float32",
    "numpy.ones",
    "numpy.testing.assert_almost_equal",
    "sklearn.ensemble.gradient_boosting.LeastSquaresError",
    "sklearn.utils.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting_loss_functions.test_weighted_percentile": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "numpy.empty",
    "numpy.float64",
    "numpy.ones",
    "sklearn.ensemble.gradient_boosting._weighted_percentile"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting_loss_functions.test_weighted_percentile_equal": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "numpy.empty",
    "numpy.float64",
    "numpy.ones",
    "sklearn.ensemble.gradient_boosting._weighted_percentile"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting_loss_functions.test_weighted_percentile_zero_weight": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "numpy.empty",
    "numpy.float64",
    "numpy.ones",
    "sklearn.ensemble.gradient_boosting._weighted_percentile"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_iforest": {
  "data": {
   "symbols_in_volume": [
    "sklearn.datasets.load_boston",
    "sklearn.datasets.load_iris",
    "sklearn.ensemble.tests.test_iforest.boston",
    "sklearn.ensemble.tests.test_iforest.iris",
    "sklearn.ensemble.tests.test_iforest.perm",
    "sklearn.ensemble.tests.test_iforest.rng",
    "sklearn.utils.check_random_state"
   ]
  },
  "type": "module"
 },
 "sklearn.ensemble.tests.test_iforest.IsolationForest": {
  "data": {
   "shadows": "sklearn.ensemble.IsolationForest"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_iforest.ParameterGrid": {
  "data": {
   "shadows": "sklearn.model_selection.ParameterGrid"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_iforest._average_path_length": {
  "data": {
   "shadows": "sklearn.ensemble.iforest._average_path_length"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_iforest.assert_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_iforest.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_iforest.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_iforest.assert_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_iforest.assert_greater": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_greater"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_iforest.assert_raises": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_iforest.assert_raises_regex": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises_regex"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_iforest.assert_warns_message": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_warns_message"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_iforest.boston": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "sklearn.ensemble.tests.test_iforest.check_random_state": {
  "data": {
   "shadows": "sklearn.utils.check_random_state"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_iforest.csc_matrix": {
  "data": {
   "shadows": "scipy.sparse.csc_matrix"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_iforest.csr_matrix": {
  "data": {
   "shadows": "scipy.sparse.csr_matrix"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_iforest.euler_gamma": {
  "data": {
   "shadows": "sklearn.utils.fixes.euler_gamma"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_iforest.ignore_warnings": {
  "data": {
   "shadows": "sklearn.utils.testing.ignore_warnings"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_iforest.iris": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "sklearn.ensemble.tests.test_iforest.load_boston": {
  "data": {
   "shadows": "sklearn.datasets.load_boston"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_iforest.load_iris": {
  "data": {
   "shadows": "sklearn.datasets.load_iris"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_iforest.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_iforest.perm": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "sklearn.ensemble.tests.test_iforest.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_iforest.rng": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "sklearn.ensemble.tests.test_iforest.roc_auc_score": {
  "data": {
   "shadows": "sklearn.metrics.roc_auc_score"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_iforest.test_behaviour_param": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": [
    "sklearn.ensemble.IsolationForest",
    "sklearn.ensemble.tests.test_iforest.pytest",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_iforest.test_deprecation": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "DeprecationWarning",
    "FutureWarning",
    "getattr",
    "sklearn.ensemble.IsolationForest",
    "sklearn.ensemble.tests.test_iforest.pytest",
    "sklearn.utils.testing.assert_warns_message"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_iforest.test_iforest": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.ensemble.IsolationForest",
    "sklearn.ensemble.tests.test_iforest.pytest",
    "sklearn.ensemble.tests.test_iforest.rng",
    "sklearn.model_selection.ParameterGrid",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_iforest.test_iforest_average_path_length": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.log",
    "sklearn.ensemble.iforest._average_path_length",
    "sklearn.utils.fixes.euler_gamma",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_iforest.test_iforest_error": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "AttributeError",
    "UserWarning",
    "ValueError",
    "getattr",
    "issubclass",
    "len",
    "numpy.int64",
    "sklearn.ensemble.IsolationForest",
    "sklearn.ensemble.tests.test_iforest.iris",
    "sklearn.ensemble.tests.test_iforest.pytest",
    "sklearn.utils.testing.assert_raises",
    "sklearn.utils.testing.assert_raises_regex",
    "sklearn.utils.testing.assert_warns_message"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_iforest.test_iforest_parallel_regression": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "sklearn.ensemble.IsolationForest",
    "sklearn.ensemble.tests.test_iforest.boston",
    "sklearn.ensemble.tests.test_iforest.pytest",
    "sklearn.ensemble.tests.test_iforest.rng",
    "sklearn.model_selection.train_test_split",
    "sklearn.utils.check_random_state",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_iforest.test_iforest_performance": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.r_",
    "sklearn.ensemble.IsolationForest",
    "sklearn.ensemble.tests.test_iforest.pytest",
    "sklearn.ensemble.tests.test_iforest.rng",
    "sklearn.metrics.roc_auc_score",
    "sklearn.utils.check_random_state",
    "sklearn.utils.testing.assert_greater"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_iforest.test_iforest_sparse": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "sklearn.ensemble.IsolationForest",
    "sklearn.ensemble.tests.test_iforest.boston",
    "sklearn.ensemble.tests.test_iforest.pytest",
    "sklearn.ensemble.tests.test_iforest.rng",
    "sklearn.model_selection.ParameterGrid",
    "sklearn.model_selection.train_test_split",
    "sklearn.utils.check_random_state",
    "sklearn.utils.testing.assert_array_equal",
    "sparse_format"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_iforest.test_iforest_subsampled_features": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "sklearn.ensemble.IsolationForest",
    "sklearn.ensemble.tests.test_iforest.boston",
    "sklearn.ensemble.tests.test_iforest.pytest",
    "sklearn.ensemble.tests.test_iforest.rng",
    "sklearn.model_selection.train_test_split",
    "sklearn.utils.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_iforest.test_iforest_works": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "numpy.max",
    "numpy.min",
    "sklearn.ensemble.IsolationForest",
    "sklearn.ensemble.tests.test_iforest.pytest",
    "sklearn.ensemble.tests.test_iforest.rng",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_greater"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_iforest.test_max_samples_attribute": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "UserWarning",
    "sklearn.ensemble.IsolationForest",
    "sklearn.ensemble.tests.test_iforest.iris",
    "sklearn.ensemble.tests.test_iforest.pytest",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_warns_message"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_iforest.test_max_samples_consistency": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "sklearn.ensemble.IsolationForest",
    "sklearn.ensemble.tests.test_iforest.iris",
    "sklearn.ensemble.tests.test_iforest.pytest",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_iforest.test_recalculate_max_depth": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "int",
    "numpy.ceil",
    "numpy.log2",
    "sklearn.ensemble.IsolationForest",
    "sklearn.ensemble.tests.test_iforest.iris",
    "sklearn.ensemble.tests.test_iforest.pytest",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_iforest.test_score_samples": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": [
    "sklearn.ensemble.IsolationForest",
    "sklearn.ensemble.tests.test_iforest.pytest",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_iforest.train_test_split": {
  "data": {
   "shadows": "sklearn.model_selection.train_test_split"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_partial_dependence": {
  "data": {
   "symbols_in_volume": [
    "sklearn.datasets.load_boston",
    "sklearn.datasets.load_iris"
   ]
  },
  "type": "module"
 },
 "sklearn.ensemble.tests.test_partial_dependence.GradientBoostingClassifier": {
  "data": {
   "shadows": "sklearn.ensemble.GradientBoostingClassifier"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_partial_dependence.GradientBoostingRegressor": {
  "data": {
   "shadows": "sklearn.ensemble.GradientBoostingRegressor"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_partial_dependence.T": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "sklearn.ensemble.tests.test_partial_dependence.X": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "sklearn.ensemble.tests.test_partial_dependence.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_partial_dependence.assert_raises": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_partial_dependence.boston": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "sklearn.ensemble.tests.test_partial_dependence.datasets": {
  "data": {
   "shadows": "sklearn.datasets"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_partial_dependence.if_matplotlib": {
  "data": {
   "shadows": "sklearn.utils.testing.if_matplotlib"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_partial_dependence.iris": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "sklearn.ensemble.tests.test_partial_dependence.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_partial_dependence.partial_dependence": {
  "data": {
   "shadows": "sklearn.ensemble.partial_dependence.partial_dependence"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_partial_dependence.plot_partial_dependence": {
  "data": {
   "shadows": "sklearn.ensemble.partial_dependence.plot_partial_dependence"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_partial_dependence.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_partial_dependence.test_partial_dependecy_input": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "ValueError",
    "numpy.random.rand",
    "sklearn.ensemble.GradientBoostingClassifier",
    "sklearn.ensemble.partial_dependence.partial_dependence",
    "sklearn.ensemble.tests.test_partial_dependence.X",
    "sklearn.ensemble.tests.test_partial_dependence.y",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_partial_dependence.test_partial_dependence_classifier": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.testing.assert_array_equal",
    "numpy.unique",
    "sklearn.ensemble.GradientBoostingClassifier",
    "sklearn.ensemble.partial_dependence.partial_dependence",
    "sklearn.ensemble.tests.test_partial_dependence.X",
    "sklearn.ensemble.tests.test_partial_dependence.y"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_partial_dependence.test_partial_dependence_multiclass": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "len",
    "sklearn.ensemble.GradientBoostingClassifier",
    "sklearn.ensemble.partial_dependence.partial_dependence",
    "sklearn.ensemble.tests.test_partial_dependence.iris"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_partial_dependence.test_partial_dependence_regressor": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "sklearn.ensemble.GradientBoostingRegressor",
    "sklearn.ensemble.partial_dependence.partial_dependence",
    "sklearn.ensemble.tests.test_partial_dependence.boston"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_partial_dependence.test_plot_partial_dependence": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "all",
    "len",
    "sklearn.ensemble.GradientBoostingRegressor",
    "sklearn.ensemble.partial_dependence.plot_partial_dependence",
    "sklearn.ensemble.tests.test_partial_dependence.boston",
    "sklearn.ensemble.tests.test_partial_dependence.pytest",
    "sklearn.utils.testing.if_matplotlib"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_partial_dependence.test_plot_partial_dependence_input": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "sklearn.ensemble.GradientBoostingClassifier",
    "sklearn.ensemble.partial_dependence.plot_partial_dependence",
    "sklearn.ensemble.tests.test_partial_dependence.X",
    "sklearn.ensemble.tests.test_partial_dependence.pytest",
    "sklearn.ensemble.tests.test_partial_dependence.y",
    "sklearn.utils.testing.assert_raises",
    "sklearn.utils.testing.if_matplotlib"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_partial_dependence.test_plot_partial_dependence_multiclass": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "ValueError",
    "all",
    "len",
    "sklearn.ensemble.GradientBoostingClassifier",
    "sklearn.ensemble.partial_dependence.plot_partial_dependence",
    "sklearn.ensemble.tests.test_partial_dependence.iris",
    "sklearn.ensemble.tests.test_partial_dependence.pytest",
    "sklearn.utils.testing.assert_raises",
    "sklearn.utils.testing.if_matplotlib"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_partial_dependence.true_result": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "sklearn.ensemble.tests.test_partial_dependence.y": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "sklearn.ensemble.tests.test_voting_classifier": {
  "data": {
   "symbols_in_volume": [
    "sklearn.datasets.load_iris",
    "sklearn.ensemble.tests.test_voting_classifier.iris"
   ]
  },
  "type": "module"
 },
 "sklearn.ensemble.tests.test_voting_classifier.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_voting_classifier.ClassifierMixin": {
  "data": {
   "shadows": "sklearn.base.ClassifierMixin"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_voting_classifier.GaussianNB": {
  "data": {
   "shadows": "sklearn.naive_bayes.GaussianNB"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_voting_classifier.GridSearchCV": {
  "data": {
   "shadows": "sklearn.model_selection.GridSearchCV"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_voting_classifier.KNeighborsClassifier": {
  "data": {
   "shadows": "sklearn.neighbors.KNeighborsClassifier"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_voting_classifier.LogisticRegression": {
  "data": {
   "shadows": "sklearn.linear_model.LogisticRegression"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_voting_classifier.NotFittedError": {
  "data": {
   "shadows": "sklearn.exceptions.NotFittedError"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_voting_classifier.OneVsRestClassifier": {
  "data": {
   "shadows": "sklearn.multiclass.OneVsRestClassifier"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_voting_classifier.RandomForestClassifier": {
  "data": {
   "shadows": "sklearn.ensemble.RandomForestClassifier"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_voting_classifier.SVC": {
  "data": {
   "shadows": "sklearn.svm.SVC"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_voting_classifier.VotingClassifier": {
  "data": {
   "shadows": "sklearn.ensemble.VotingClassifier"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_voting_classifier.assert_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_voting_classifier.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_voting_classifier.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_voting_classifier.assert_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_voting_classifier.assert_false": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_false"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_voting_classifier.assert_raise_message": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raise_message"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_voting_classifier.assert_true": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_true"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_voting_classifier.assert_warns_message": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_warns_message"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_voting_classifier.cross_val_score": {
  "data": {
   "shadows": "sklearn.model_selection.cross_val_score"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_voting_classifier.datasets": {
  "data": {
   "shadows": "sklearn.datasets"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_voting_classifier.iris": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "sklearn.ensemble.tests.test_voting_classifier.make_multilabel_classification": {
  "data": {
   "shadows": "sklearn.datasets.make_multilabel_classification"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_voting_classifier.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_voting_classifier.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_voting_classifier.test_estimator_init": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "AttributeError",
    "ValueError",
    "sklearn.ensemble.VotingClassifier",
    "sklearn.ensemble.tests.test_voting_classifier.pytest",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.utils.testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_voting_classifier.test_estimator_weights_format": {
  "data": {
   "lineno": 414,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.ensemble.RandomForestClassifier",
    "sklearn.ensemble.VotingClassifier",
    "sklearn.ensemble.tests.test_voting_classifier.pytest",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_voting_classifier.test_gridsearch": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "sklearn.ensemble.RandomForestClassifier",
    "sklearn.ensemble.VotingClassifier",
    "sklearn.ensemble.tests.test_voting_classifier.iris",
    "sklearn.ensemble.tests.test_voting_classifier.pytest",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.model_selection.GridSearchCV",
    "sklearn.naive_bayes.GaussianNB"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_voting_classifier.test_majority_label_iris": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "sklearn.ensemble.RandomForestClassifier",
    "sklearn.ensemble.VotingClassifier",
    "sklearn.ensemble.tests.test_voting_classifier.pytest",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.model_selection.cross_val_score",
    "sklearn.naive_bayes.GaussianNB",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_voting_classifier.test_multilabel": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "NotImplementedError",
    "sklearn.datasets.make_multilabel_classification",
    "sklearn.ensemble.VotingClassifier",
    "sklearn.multiclass.OneVsRestClassifier",
    "sklearn.svm.SVC"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_voting_classifier.test_notfitted": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "sklearn.ensemble.VotingClassifier",
    "sklearn.ensemble.tests.test_voting_classifier.pytest",
    "sklearn.exceptions.NotFittedError",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.utils.testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_voting_classifier.test_parallel_fit": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.ensemble.RandomForestClassifier",
    "sklearn.ensemble.VotingClassifier",
    "sklearn.ensemble.tests.test_voting_classifier.pytest",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.naive_bayes.GaussianNB",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_voting_classifier.test_predict_on_toy_problem": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "all",
    "numpy.array",
    "sklearn.ensemble.RandomForestClassifier",
    "sklearn.ensemble.VotingClassifier",
    "sklearn.ensemble.tests.test_voting_classifier.pytest",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.naive_bayes.GaussianNB",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_voting_classifier.test_predict_proba_on_toy_problem": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "AttributeError",
    "numpy.array",
    "sklearn.ensemble.RandomForestClassifier",
    "sklearn.ensemble.VotingClassifier",
    "sklearn.ensemble.tests.test_voting_classifier.pytest",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.naive_bayes.GaussianNB",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_voting_classifier.test_predictproba_hardvoting": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "AttributeError",
    "sklearn.ensemble.VotingClassifier",
    "sklearn.ensemble.tests.test_voting_classifier.pytest",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.utils.testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_voting_classifier.test_sample_weight": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.ones",
    "numpy.random.RandomState",
    "sklearn.ensemble.RandomForestClassifier",
    "sklearn.ensemble.VotingClassifier",
    "sklearn.ensemble.tests.test_voting_classifier.pytest",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.neighbors.KNeighborsClassifier",
    "sklearn.svm.SVC",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_voting_classifier.test_sample_weight_kwargs": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": [
    "MockClassifier",
    "len",
    "numpy.ones",
    "sklearn.ensemble.VotingClassifier"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_voting_classifier.test_sample_weight_kwargs.MockClassifier": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator",
    "sklearn.base.ClassifierMixin"
   ]
  },
  "type": "class"
 },
 "sklearn.ensemble.tests.test_voting_classifier.test_sample_weight_kwargs.MockClassifier.fit": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": [
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_voting_classifier.test_set_estimator_none": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "ValueError",
    "all",
    "dict",
    "isinstance",
    "len",
    "numpy.array",
    "sklearn.ensemble.RandomForestClassifier",
    "sklearn.ensemble.VotingClassifier",
    "sklearn.ensemble.tests.test_voting_classifier.pytest",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.naive_bayes.GaussianNB",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_raise_message",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_voting_classifier.test_set_params": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": [
    "hasattr",
    "sklearn.ensemble.RandomForestClassifier",
    "sklearn.ensemble.VotingClassifier",
    "sklearn.ensemble.tests.test_voting_classifier.pytest",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.naive_bayes.GaussianNB",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_false",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_voting_classifier.test_tie_situation": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "sklearn.ensemble.RandomForestClassifier",
    "sklearn.ensemble.VotingClassifier",
    "sklearn.ensemble.tests.test_voting_classifier.pytest",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_voting_classifier.test_transform": {
  "data": {
   "lineno": 434,
   "symbols_in_volume": [
    "DeprecationWarning",
    "numpy.array",
    "sklearn.ensemble.RandomForestClassifier",
    "sklearn.ensemble.VotingClassifier",
    "sklearn.ensemble.tests.test_voting_classifier.pytest",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.naive_bayes.GaussianNB",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_warns_message"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_voting_classifier.test_weights_iris": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "sklearn.ensemble.RandomForestClassifier",
    "sklearn.ensemble.VotingClassifier",
    "sklearn.ensemble.tests.test_voting_classifier.pytest",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.model_selection.cross_val_score",
    "sklearn.naive_bayes.GaussianNB",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_weight_boosting": {
  "data": {
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.datasets.load_boston",
    "sklearn.datasets.load_iris",
    "sklearn.ensemble.tests.test_weight_boosting.boston",
    "sklearn.ensemble.tests.test_weight_boosting.iris",
    "sklearn.ensemble.tests.test_weight_boosting.rng",
    "sklearn.utils.shuffle"
   ]
  },
  "type": "module"
 },
 "sklearn.ensemble.tests.test_weight_boosting.AdaBoostClassifier": {
  "data": {
   "shadows": "sklearn.ensemble.AdaBoostClassifier"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_weight_boosting.AdaBoostRegressor": {
  "data": {
   "shadows": "sklearn.ensemble.AdaBoostRegressor"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_weight_boosting.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_weight_boosting.DecisionTreeClassifier": {
  "data": {
   "shadows": "sklearn.tree.DecisionTreeClassifier"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_weight_boosting.DecisionTreeRegressor": {
  "data": {
   "shadows": "sklearn.tree.DecisionTreeRegressor"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_weight_boosting.GridSearchCV": {
  "data": {
   "shadows": "sklearn.model_selection.GridSearchCV"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_weight_boosting.KMeans": {
  "data": {
   "shadows": "sklearn.cluster.KMeans"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_weight_boosting.RandomForestClassifier": {
  "data": {
   "shadows": "sklearn.ensemble.RandomForestClassifier"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_weight_boosting.RandomForestRegressor": {
  "data": {
   "shadows": "sklearn.ensemble.RandomForestRegressor"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_weight_boosting.SVC": {
  "data": {
   "shadows": "sklearn.svm.SVC"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_weight_boosting.SVR": {
  "data": {
   "shadows": "sklearn.svm.SVR"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_weight_boosting.T": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "sklearn.ensemble.tests.test_weight_boosting.X": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "sklearn.ensemble.tests.test_weight_boosting.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_weight_boosting.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_weight_boosting.assert_array_less": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_less"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_weight_boosting.assert_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_weight_boosting.assert_greater": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_greater"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_weight_boosting.assert_raises": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_weight_boosting.assert_raises_regexp": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises_regexp"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_weight_boosting.assert_true": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_true"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_weight_boosting.boston": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "sklearn.ensemble.tests.test_weight_boosting.coo_matrix": {
  "data": {
   "shadows": "scipy.sparse.coo_matrix"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_weight_boosting.csc_matrix": {
  "data": {
   "shadows": "scipy.sparse.csc_matrix"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_weight_boosting.csr_matrix": {
  "data": {
   "shadows": "scipy.sparse.csr_matrix"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_weight_boosting.datasets": {
  "data": {
   "shadows": "sklearn.datasets"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_weight_boosting.dok_matrix": {
  "data": {
   "shadows": "scipy.sparse.dok_matrix"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_weight_boosting.iris": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "sklearn.ensemble.tests.test_weight_boosting.lil_matrix": {
  "data": {
   "shadows": "scipy.sparse.lil_matrix"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_weight_boosting.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_weight_boosting.perm": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "sklearn.ensemble.tests.test_weight_boosting.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_weight_boosting.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_weight_boosting.rng": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "sklearn.ensemble.tests.test_weight_boosting.shuffle": {
  "data": {
   "shadows": "sklearn.utils.shuffle"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_weight_boosting.test_base_estimator": {
  "data": {
   "lineno": 284,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.ensemble.AdaBoostClassifier",
    "sklearn.ensemble.AdaBoostRegressor",
    "sklearn.ensemble.RandomForestClassifier",
    "sklearn.ensemble.RandomForestRegressor",
    "sklearn.ensemble.tests.test_weight_boosting.X",
    "sklearn.ensemble.tests.test_weight_boosting.pytest",
    "sklearn.ensemble.tests.test_weight_boosting.y_class",
    "sklearn.ensemble.tests.test_weight_boosting.y_regr",
    "sklearn.svm.SVC",
    "sklearn.svm.SVR",
    "sklearn.utils.testing.assert_raises_regexp"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_weight_boosting.test_boston": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "len",
    "set",
    "sklearn.ensemble.AdaBoostRegressor",
    "sklearn.ensemble.tests.test_weight_boosting.boston",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_weight_boosting.test_classification_toy": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "len",
    "numpy.asarray",
    "numpy.unique",
    "sklearn.ensemble.AdaBoostClassifier",
    "sklearn.ensemble.tests.test_weight_boosting.T",
    "sklearn.ensemble.tests.test_weight_boosting.X",
    "sklearn.ensemble.tests.test_weight_boosting.y_class",
    "sklearn.ensemble.tests.test_weight_boosting.y_t_class",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_weight_boosting.test_error": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "ValueError",
    "numpy.asarray",
    "sklearn.ensemble.AdaBoostClassifier",
    "sklearn.ensemble.tests.test_weight_boosting.X",
    "sklearn.ensemble.tests.test_weight_boosting.y_class",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_weight_boosting.test_gridsearch": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "sklearn.ensemble.AdaBoostClassifier",
    "sklearn.ensemble.AdaBoostRegressor",
    "sklearn.ensemble.tests.test_weight_boosting.boston",
    "sklearn.ensemble.tests.test_weight_boosting.iris",
    "sklearn.ensemble.tests.test_weight_boosting.pytest",
    "sklearn.model_selection.GridSearchCV",
    "sklearn.tree.DecisionTreeClassifier",
    "sklearn.tree.DecisionTreeRegressor"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_weight_boosting.test_importances": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "numpy.newaxis.all",
    "sklearn.datasets.make_classification",
    "sklearn.ensemble.AdaBoostClassifier",
    "sklearn.ensemble.tests.test_weight_boosting.X",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_weight_boosting.test_iris": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "len",
    "numpy.abs",
    "numpy.unique",
    "set",
    "sklearn.ensemble.AdaBoostClassifier",
    "sklearn.ensemble.tests.test_weight_boosting.iris",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_array_less",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_greater"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_weight_boosting.test_oneclass_adaboost_proba": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "len",
    "numpy.ones",
    "sklearn.ensemble.AdaBoostClassifier",
    "sklearn.ensemble.tests.test_weight_boosting.X",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_weight_boosting.test_pickle": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "sklearn.ensemble.AdaBoostClassifier",
    "sklearn.ensemble.AdaBoostRegressor",
    "sklearn.ensemble.tests.test_weight_boosting.boston",
    "sklearn.ensemble.tests.test_weight_boosting.iris",
    "sklearn.ensemble.tests.test_weight_boosting.pickle",
    "sklearn.utils.testing.assert_equal",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_weight_boosting.test_regression_toy": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "sklearn.ensemble.AdaBoostRegressor",
    "sklearn.ensemble.tests.test_weight_boosting.T",
    "sklearn.ensemble.tests.test_weight_boosting.X",
    "sklearn.ensemble.tests.test_weight_boosting.y_regr",
    "sklearn.ensemble.tests.test_weight_boosting.y_t_regr",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_weight_boosting.test_samme_proba": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "MockEstimator",
    "numpy.abs",
    "numpy.argmax",
    "numpy.argmin",
    "numpy.array",
    "numpy.isfinite",
    "numpy.newaxis",
    "numpy.ones_like",
    "sklearn.ensemble.weight_boosting._samme_proba",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_weight_boosting.test_samme_proba.MockEstimator": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "sklearn.ensemble.tests.test_weight_boosting.test_samme_proba.MockEstimator.predict_proba": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "sklearn.ensemble.tests.test_weight_boosting.X",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_weight_boosting.test_sample_weight_adaboost_regressor": {
  "data": {
   "lineno": 471,
   "symbols_in_volume": [
    "DummyEstimator",
    "len",
    "sklearn.ensemble.AdaBoostRegressor",
    "sklearn.ensemble.tests.test_weight_boosting.X",
    "sklearn.ensemble.tests.test_weight_boosting.y_regr",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_weight_boosting.test_sample_weight_adaboost_regressor.DummyEstimator": {
  "data": {
   "lineno": 478,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator"
   ]
  },
  "type": "class"
 },
 "sklearn.ensemble.tests.test_weight_boosting.test_sample_weight_adaboost_regressor.DummyEstimator.fit": {
  "data": {
   "lineno": 480
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_weight_boosting.test_sample_weight_adaboost_regressor.DummyEstimator.predict": {
  "data": {
   "lineno": 483,
   "symbols_in_volume": [
    "numpy.zeros",
    "sklearn.ensemble.tests.test_weight_boosting.X"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_weight_boosting.test_sample_weight_missing": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.cluster.KMeans",
    "sklearn.ensemble.AdaBoostClassifier",
    "sklearn.ensemble.AdaBoostRegressor",
    "sklearn.ensemble.tests.test_weight_boosting.X",
    "sklearn.ensemble.tests.test_weight_boosting.y_regr",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_weight_boosting.test_sparse_classification": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": [
    "CustomSVC",
    "all",
    "numpy.ravel",
    "scipy.sparse.coo_matrix",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.dok_matrix",
    "scipy.sparse.lil_matrix",
    "sklearn.datasets.make_multilabel_classification",
    "sklearn.ensemble.AdaBoostClassifier",
    "sklearn.ensemble.tests.test_weight_boosting.X",
    "sklearn.model_selection.train_test_split",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_array_equal",
    "sparse_format",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_weight_boosting.test_sparse_classification.CustomSVC": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": [
    "sklearn.svm.SVC"
   ]
  },
  "type": "class"
 },
 "sklearn.ensemble.tests.test_weight_boosting.test_sparse_classification.CustomSVC.fit": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": [
    "sklearn.ensemble.tests.test_weight_boosting.X",
    "super",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_weight_boosting.test_sparse_regression": {
  "data": {
   "lineno": 420,
   "symbols_in_volume": [
    "CustomSVR",
    "all",
    "scipy.sparse.coo_matrix",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.dok_matrix",
    "scipy.sparse.lil_matrix",
    "sklearn.datasets.make_regression",
    "sklearn.ensemble.AdaBoostRegressor",
    "sklearn.ensemble.tests.test_weight_boosting.X",
    "sklearn.model_selection.train_test_split",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sparse_format",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_weight_boosting.test_sparse_regression.CustomSVR": {
  "data": {
   "lineno": 423,
   "symbols_in_volume": [
    "sklearn.svm.SVR"
   ]
  },
  "type": "class"
 },
 "sklearn.ensemble.tests.test_weight_boosting.test_sparse_regression.CustomSVR.fit": {
  "data": {
   "lineno": 426,
   "symbols_in_volume": [
    "sklearn.ensemble.tests.test_weight_boosting.X",
    "super",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_weight_boosting.test_staged_predict": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "len",
    "numpy.random.RandomState",
    "sklearn.ensemble.AdaBoostClassifier",
    "sklearn.ensemble.AdaBoostRegressor",
    "sklearn.ensemble.tests.test_weight_boosting.boston",
    "sklearn.ensemble.tests.test_weight_boosting.iris",
    "sklearn.ensemble.tests.test_weight_boosting.rng",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_weight_boosting.train_test_split": {
  "data": {
   "shadows": "sklearn.model_selection.train_test_split"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_weight_boosting.weight_boosting": {
  "data": {
   "shadows": "sklearn.ensemble.weight_boosting"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_weight_boosting.y_class": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "sklearn.ensemble.tests.test_weight_boosting.y_regr": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "sklearn.ensemble.tests.test_weight_boosting.y_t_class": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "sklearn.ensemble.tests.test_weight_boosting.y_t_regr": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "sklearn.ensemble.voting_classifier": {
  "data": {},
  "type": "module"
 },
 "sklearn.ensemble.voting_classifier.VotingClassifier": {
  "data": {
   "lineno": 36
  },
  "type": "class"
 },
 "sklearn.ensemble.voting_classifier.VotingClassifier.__init__": {
  "data": {
   "lineno": 127
  },
  "type": "function"
 },
 "sklearn.ensemble.voting_classifier.VotingClassifier._collect_probas": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.voting_classifier.VotingClassifier._predict": {
  "data": {
   "lineno": 355,
   "symbols_in_volume": [
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.voting_classifier.VotingClassifier._predict_proba": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "AttributeError",
    "check_is_fitted",
    "numpy.average"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.voting_classifier.VotingClassifier._weights_not_none": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "property",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.voting_classifier.VotingClassifier.fit": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "AttributeError",
    "Bunch",
    "LabelEncoder",
    "NotImplementedError",
    "Parallel",
    "ValueError",
    "clone",
    "delayed",
    "dict",
    "has_fit_parameter",
    "isinstance",
    "len",
    "numpy.ndarray",
    "numpy.sum",
    "sklearn.ensemble.voting_classifier._parallel_fit_estimator",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.voting_classifier.VotingClassifier.get_params": {
  "data": {
   "lineno": 343,
   "symbols_in_volume": [
    "sklearn.ensemble.voting_classifier.VotingClassifier",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.voting_classifier.VotingClassifier.named_estimators": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "Bunch",
    "dict",
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.voting_classifier.VotingClassifier.predict": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "check_is_fitted",
    "numpy.apply_along_axis",
    "numpy.argmax",
    "numpy.bincount"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.voting_classifier.VotingClassifier.predict_proba": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.voting_classifier.VotingClassifier.set_params": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": [
    "sklearn.ensemble.voting_classifier.VotingClassifier",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.voting_classifier.VotingClassifier.transform": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "DeprecationWarning",
    "check_is_fitted",
    "numpy.hstack",
    "sklearn.ensemble.voting_classifier.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.voting_classifier._parallel_fit_estimator": {
  "data": {
   "lineno": 27
  },
  "type": "function"
 },
 "sklearn.ensemble.voting_classifier.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.ensemble.voting_classifier.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.ensemble.weight_boosting": {
  "data": {},
  "type": "module"
 },
 "sklearn.ensemble.weight_boosting.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "sklearn.ensemble.weight_boosting.AdaBoostClassifier": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": [
    "sklearn.ensemble.weight_boosting.BaseWeightBoosting"
   ]
  },
  "type": "class"
 },
 "sklearn.ensemble.weight_boosting.AdaBoostClassifier.__init__": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": [
    "sklearn.ensemble.weight_boosting.AdaBoostClassifier",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.weight_boosting.AdaBoostClassifier._boost": {
  "data": {
   "lineno": 432
  },
  "type": "function"
 },
 "sklearn.ensemble.weight_boosting.AdaBoostClassifier._boost_discrete": {
  "data": {
   "lineno": 536,
   "symbols_in_volume": [
    "ValueError",
    "getattr",
    "len",
    "numpy.average",
    "numpy.exp",
    "numpy.log",
    "numpy.mean"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.weight_boosting.AdaBoostClassifier._boost_real": {
  "data": {
   "lineno": 478,
   "symbols_in_volume": [
    "getattr",
    "len",
    "numpy.argmax",
    "numpy.array",
    "numpy.average",
    "numpy.clip",
    "numpy.exp",
    "numpy.finfo",
    "numpy.log",
    "numpy.mean",
    "numpy.newaxis"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.weight_boosting.AdaBoostClassifier._validate_estimator": {
  "data": {
   "lineno": 414,
   "symbols_in_volume": [
    "DecisionTreeClassifier",
    "TypeError",
    "ValueError",
    "hasattr",
    "sklearn.ensemble.weight_boosting.AdaBoostClassifier",
    "sklearn.utils.validation.has_fit_parameter",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.weight_boosting.AdaBoostClassifier.decision_function": {
  "data": {
   "lineno": 640,
   "symbols_in_volume": [
    "numpy.newaxis",
    "sklearn.ensemble.weight_boosting._samme_proba",
    "sklearn.utils.validation.check_is_fitted",
    "sum",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.weight_boosting.AdaBoostClassifier.fit": {
  "data": {
   "lineno": 387,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.ensemble.weight_boosting.AdaBoostClassifier",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.weight_boosting.AdaBoostClassifier.predict": {
  "data": {
   "lineno": 584,
   "symbols_in_volume": [
    "numpy.argmax"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.weight_boosting.AdaBoostClassifier.predict_log_proba": {
  "data": {
   "lineno": 830,
   "symbols_in_volume": [
    "numpy.log"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.weight_boosting.AdaBoostClassifier.predict_proba": {
  "data": {
   "lineno": 734,
   "symbols_in_volume": [
    "numpy.exp",
    "numpy.newaxis",
    "numpy.ones",
    "sklearn.ensemble.weight_boosting._samme_proba",
    "sklearn.utils.validation.check_is_fitted",
    "sum",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.weight_boosting.AdaBoostClassifier.staged_decision_function": {
  "data": {
   "lineno": 681,
   "symbols_in_volume": [
    "numpy.copy",
    "numpy.newaxis",
    "sklearn.ensemble.weight_boosting._samme_proba",
    "sklearn.utils.validation.check_is_fitted",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.weight_boosting.AdaBoostClassifier.staged_predict": {
  "data": {
   "lineno": 608,
   "symbols_in_volume": [
    "numpy.argmax",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.weight_boosting.AdaBoostClassifier.staged_predict_proba": {
  "data": {
   "lineno": 778,
   "symbols_in_volume": [
    "numpy.exp",
    "numpy.newaxis",
    "sklearn.ensemble.weight_boosting._samme_proba",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.weight_boosting.AdaBoostRegressor": {
  "data": {
   "lineno": 852,
   "symbols_in_volume": [
    "sklearn.ensemble.weight_boosting.BaseWeightBoosting"
   ]
  },
  "type": "class"
 },
 "sklearn.ensemble.weight_boosting.AdaBoostRegressor.__init__": {
  "data": {
   "lineno": 918,
   "symbols_in_volume": [
    "sklearn.ensemble.weight_boosting.AdaBoostRegressor",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.weight_boosting.AdaBoostRegressor._boost": {
  "data": {
   "lineno": 967,
   "symbols_in_volume": [
    "len",
    "numpy.abs",
    "numpy.array",
    "numpy.exp",
    "numpy.log",
    "numpy.power",
    "stable_cumsum"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.weight_boosting.AdaBoostRegressor._get_median_predict": {
  "data": {
   "lineno": 1058,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.argsort",
    "numpy.array",
    "numpy.newaxis",
    "stable_cumsum"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.weight_boosting.AdaBoostRegressor._validate_estimator": {
  "data": {
   "lineno": 962,
   "symbols_in_volume": [
    "DecisionTreeRegressor",
    "sklearn.ensemble.weight_boosting.AdaBoostRegressor",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.weight_boosting.AdaBoostRegressor.fit": {
  "data": {
   "lineno": 934,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.ensemble.weight_boosting.AdaBoostRegressor",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.weight_boosting.AdaBoostRegressor.predict": {
  "data": {
   "lineno": 1076,
   "symbols_in_volume": [
    "len",
    "sklearn.utils.validation.check_is_fitted"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.weight_boosting.AdaBoostRegressor.staged_predict": {
  "data": {
   "lineno": 1098,
   "symbols_in_volume": [
    "enumerate",
    "sklearn.utils.validation.check_is_fitted"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.weight_boosting.BaseWeightBoosting": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "abc.ABCMeta"
   ]
  },
  "type": "class"
 },
 "sklearn.ensemble.weight_boosting.BaseWeightBoosting.__init__": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "sklearn.ensemble.weight_boosting.BaseWeightBoosting",
    "super",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.weight_boosting.BaseWeightBoosting._boost": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.weight_boosting.BaseWeightBoosting._validate_X_predict": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "check_array",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.weight_boosting.BaseWeightBoosting.feature_importances_": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "AttributeError",
    "ValueError",
    "len",
    "property",
    "sum",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.weight_boosting.BaseWeightBoosting.fit": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "ValueError",
    "check_X_y",
    "check_array",
    "check_random_state",
    "is_regressor",
    "isinstance",
    "numpy.empty",
    "numpy.float64",
    "numpy.ones",
    "numpy.sum",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.weight_boosting.BaseWeightBoosting.staged_score": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "accuracy_score",
    "is_classifier",
    "r2_score"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.weight_boosting.__all__": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "sklearn.ensemble.weight_boosting._samme_proba": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "numpy.clip",
    "numpy.finfo",
    "numpy.log",
    "numpy.newaxis"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.weight_boosting.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "sklearn.ensemble.weight_boosting.check_is_fitted": {
  "data": {
   "shadows": "sklearn.utils.validation.check_is_fitted"
  },
  "type": "import"
 },
 "sklearn.ensemble.weight_boosting.has_fit_parameter": {
  "data": {
   "shadows": "sklearn.utils.validation.has_fit_parameter"
  },
  "type": "import"
 },
 "sklearn.ensemble.weight_boosting.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.ensemble.weight_boosting.range": {
  "data": {
   "shadows": "xrange"
  },
  "type": "import"
 },
 "sklearn.exceptions": {
  "data": {},
  "type": "module"
 },
 "sklearn.exceptions.ChangedBehaviorWarning": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "UserWarning"
   ]
  },
  "type": "class"
 },
 "sklearn.exceptions.ConvergenceWarning": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "UserWarning"
   ]
  },
  "type": "class"
 },
 "sklearn.exceptions.DataConversionWarning": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "UserWarning"
   ]
  },
  "type": "class"
 },
 "sklearn.exceptions.DataDimensionalityWarning": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "UserWarning"
   ]
  },
  "type": "class"
 },
 "sklearn.exceptions.EfficiencyWarning": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "UserWarning"
   ]
  },
  "type": "class"
 },
 "sklearn.exceptions.FitFailedWarning": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "RuntimeWarning"
   ]
  },
  "type": "class"
 },
 "sklearn.exceptions.NonBLASDotWarning": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "sklearn.exceptions.EfficiencyWarning"
   ]
  },
  "type": "class"
 },
 "sklearn.exceptions.NotFittedError": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "AttributeError",
    "ValueError"
   ]
  },
  "type": "class"
 },
 "sklearn.exceptions.SkipTestWarning": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "UserWarning"
   ]
  },
  "type": "class"
 },
 "sklearn.exceptions.UndefinedMetricWarning": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "UserWarning"
   ]
  },
  "type": "class"
 },
 "sklearn.exceptions.__all__": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "sklearn.externals": {
  "data": {},
  "type": "module"
 },
 "sklearn.externals._pilutil": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "PIL.Image",
    "PIL.Image.frombytes",
    "PIL.Image.fromstring",
    "hasattr"
   ]
  },
  "type": "module"
 },
 "sklearn.externals._pilutil.Image": {
  "data": {
   "shadows": "Image"
  },
  "type": "import"
 },
 "sklearn.externals._pilutil.__all__": {
  "data": {
   "lineno": 66
  },
  "type": "constant"
 },
 "sklearn.externals._pilutil._errstr": {
  "data": {
   "lineno": 315
  },
  "type": "constant"
 },
 "sklearn.externals._pilutil.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "sklearn.externals._pilutil.amax": {
  "data": {
   "shadows": "numpy.amax"
  },
  "type": "import"
 },
 "sklearn.externals._pilutil.amin": {
  "data": {
   "shadows": "numpy.amin"
  },
  "type": "import"
 },
 "sklearn.externals._pilutil.arange": {
  "data": {
   "shadows": "numpy.arange"
  },
  "type": "import"
 },
 "sklearn.externals._pilutil.array": {
  "data": {
   "shadows": "numpy.array"
  },
  "type": "import"
 },
 "sklearn.externals._pilutil.asarray": {
  "data": {
   "shadows": "numpy.asarray"
  },
  "type": "import"
 },
 "sklearn.externals._pilutil.bytescale": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "numpy.uint8"
   ]
  },
  "type": "function"
 },
 "sklearn.externals._pilutil.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sklearn.externals._pilutil.fromimage": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "ImportError",
    "PIL.Image.isImageType",
    "TypeError",
    "numpy.array",
    "sklearn.externals._pilutil.pillow_installed"
   ]
  },
  "type": "function"
 },
 "sklearn.externals._pilutil.imread": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "ImportError",
    "PIL.Image.open",
    "sklearn.externals._pilutil.fromimage",
    "sklearn.externals._pilutil.pillow_installed"
   ]
  },
  "type": "function"
 },
 "sklearn.externals._pilutil.imresize": {
  "data": {
   "lineno": 445,
   "symbols_in_volume": [
    "int",
    "numpy.array",
    "numpy.issubdtype",
    "sklearn.externals._pilutil.fromimage",
    "sklearn.externals._pilutil.numpy",
    "sklearn.externals._pilutil.toimage",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.externals._pilutil.imsave": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "format",
    "sklearn.externals._pilutil.toimage"
   ]
  },
  "type": "function"
 },
 "sklearn.externals._pilutil.iscomplexobj": {
  "data": {
   "shadows": "numpy.iscomplexobj"
  },
  "type": "import"
 },
 "sklearn.externals._pilutil.issubdtype": {
  "data": {
   "shadows": "numpy.issubdtype"
  },
  "type": "import"
 },
 "sklearn.externals._pilutil.newaxis": {
  "data": {
   "shadows": "numpy.newaxis"
  },
  "type": "import"
 },
 "sklearn.externals._pilutil.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.externals._pilutil.ones": {
  "data": {
   "shadows": "numpy.ones"
  },
  "type": "import"
 },
 "sklearn.externals._pilutil.pillow_installed": {
  "data": {
   "lineno": 64
  },
  "type": "constant"
 },
 "sklearn.externals._pilutil.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "sklearn.externals._pilutil.ravel": {
  "data": {
   "shadows": "numpy.ravel"
  },
  "type": "import"
 },
 "sklearn.externals._pilutil.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "sklearn.externals._pilutil.toimage": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": [
    "ImportError",
    "PIL.Image.frombytes",
    "ValueError",
    "len",
    "list",
    "numpy.amax",
    "numpy.amin",
    "numpy.arange",
    "numpy.asarray",
    "numpy.iscomplexobj",
    "numpy.newaxis",
    "numpy.ones",
    "numpy.ravel",
    "numpy.transpose",
    "numpy.uint8",
    "sklearn.externals._pilutil._errstr",
    "sklearn.externals._pilutil.bytescale",
    "sklearn.externals._pilutil.numpy",
    "sklearn.externals._pilutil.pillow_installed"
   ]
  },
  "type": "function"
 },
 "sklearn.externals._pilutil.transpose": {
  "data": {
   "shadows": "numpy.transpose"
  },
  "type": "import"
 },
 "sklearn.externals._pilutil.uint8": {
  "data": {
   "shadows": "numpy.uint8"
  },
  "type": "import"
 },
 "sklearn.externals.conftest": {
  "data": {},
  "type": "module"
 },
 "sklearn.externals.conftest.pytest_ignore_collect": {
  "data": {
   "lineno": 5
  },
  "type": "function"
 },
 "sklearn.externals.funcsigs": {
  "data": {
   "symbols_in_volume": [
    "all.__call__",
    "sklearn.externals.funcsigs._MethodWrapper",
    "sklearn.externals.funcsigs._ParameterKind",
    "sklearn.externals.funcsigs._WrapperDescriptor",
    "sklearn.externals.funcsigs.types",
    "type",
    "type.__call__"
   ]
  },
  "type": "module"
 },
 "sklearn.externals.funcsigs.BoundArguments": {
  "data": {
   "lineno": 344,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "sklearn.externals.funcsigs.BoundArguments.__eq__": {
  "data": {
   "lineno": 432,
   "symbols_in_volume": [
    "issubclass",
    "sklearn.externals.funcsigs.BoundArguments"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.funcsigs.BoundArguments.__hash__": {
  "data": {
   "lineno": 428,
   "symbols_in_volume": [
    "TypeError"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.funcsigs.BoundArguments.__init__": {
  "data": {
   "lineno": 361,
   "symbols_in_volume": [
    "sklearn.externals.funcsigs.signature"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.funcsigs.BoundArguments.__ne__": {
  "data": {
   "lineno": 437
  },
  "type": "function"
 },
 "sklearn.externals.funcsigs.BoundArguments.args": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": [
    "KeyError",
    "property",
    "sklearn.externals.funcsigs._KEYWORD_ONLY",
    "sklearn.externals.funcsigs._VAR_KEYWORD",
    "sklearn.externals.funcsigs._VAR_POSITIONAL",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.funcsigs.BoundArguments.kwargs": {
  "data": {
   "lineno": 397,
   "symbols_in_volume": [
    "KeyError",
    "property",
    "sklearn.externals.funcsigs._KEYWORD_ONLY",
    "sklearn.externals.funcsigs._VAR_KEYWORD"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.funcsigs.BoundArguments.signature": {
  "data": {
   "lineno": 365,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.funcsigs.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "sklearn.externals.funcsigs.Parameter": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "object",
    "sklearn.externals.funcsigs._KEYWORD_ONLY",
    "sklearn.externals.funcsigs._POSITIONAL_ONLY",
    "sklearn.externals.funcsigs._POSITIONAL_OR_KEYWORD",
    "sklearn.externals.funcsigs._VAR_KEYWORD",
    "sklearn.externals.funcsigs._VAR_POSITIONAL",
    "sklearn.externals.funcsigs._empty"
   ]
  },
  "type": "class"
 },
 "sklearn.externals.funcsigs.Parameter.__eq__": {
  "data": {
   "lineno": 333,
   "symbols_in_volume": [
    "issubclass",
    "sklearn.externals.funcsigs.Parameter"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.funcsigs.Parameter.__hash__": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": [
    "TypeError"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.funcsigs.Parameter.__init__": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.externals.funcsigs._KEYWORD_ONLY",
    "sklearn.externals.funcsigs._POSITIONAL_ONLY",
    "sklearn.externals.funcsigs._POSITIONAL_OR_KEYWORD",
    "sklearn.externals.funcsigs._VAR_KEYWORD",
    "sklearn.externals.funcsigs._VAR_POSITIONAL",
    "sklearn.externals.funcsigs._empty",
    "sklearn.externals.funcsigs.re",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.funcsigs.Parameter.__ne__": {
  "data": {
   "lineno": 340
  },
  "type": "function"
 },
 "sklearn.externals.funcsigs.Parameter.__repr__": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": [
    "id"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.funcsigs.Parameter.__str__": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "repr",
    "sklearn.externals.funcsigs._POSITIONAL_ONLY",
    "sklearn.externals.funcsigs._VAR_KEYWORD",
    "sklearn.externals.funcsigs._VAR_POSITIONAL",
    "sklearn.externals.funcsigs._empty",
    "sklearn.externals.funcsigs.formatannotation"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.funcsigs.Parameter.annotation": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.funcsigs.Parameter.default": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.funcsigs.Parameter.kind": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.funcsigs.Parameter.name": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.funcsigs.Parameter.replace": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": [
    "sklearn.externals.funcsigs._void",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.funcsigs.Signature": {
  "data": {
   "lineno": 441,
   "symbols_in_volume": [
    "object",
    "sklearn.externals.funcsigs.BoundArguments",
    "sklearn.externals.funcsigs.Parameter",
    "sklearn.externals.funcsigs._empty"
   ]
  },
  "type": "class"
 },
 "sklearn.externals.funcsigs.Signature.__eq__": {
  "data": {
   "lineno": 612,
   "symbols_in_volume": [
    "KeyError",
    "dict",
    "enumerate",
    "issubclass",
    "len",
    "sklearn.externals.funcsigs.Signature",
    "sklearn.externals.funcsigs._KEYWORD_ONLY",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.funcsigs.Signature.__hash__": {
  "data": {
   "lineno": 608,
   "symbols_in_volume": [
    "TypeError"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.funcsigs.Signature.__init__": {
  "data": {
   "lineno": 471,
   "symbols_in_volume": [
    "ValueError",
    "collections.OrderedDict",
    "enumerate",
    "sklearn.externals.funcsigs._POSITIONAL_ONLY",
    "sklearn.externals.funcsigs._empty",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.funcsigs.Signature.__ne__": {
  "data": {
   "lineno": 642
  },
  "type": "function"
 },
 "sklearn.externals.funcsigs.Signature.__str__": {
  "data": {
   "lineno": 787,
   "symbols_in_volume": [
    "enumerate",
    "sklearn.externals.funcsigs._KEYWORD_ONLY",
    "sklearn.externals.funcsigs._VAR_POSITIONAL",
    "sklearn.externals.funcsigs._empty",
    "sklearn.externals.funcsigs.formatannotation",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.funcsigs.Signature._bind": {
  "data": {
   "lineno": 645,
   "symbols_in_volume": [
    "KeyError",
    "StopIteration",
    "TypeError",
    "collections.OrderedDict",
    "iter",
    "next",
    "sklearn.externals.funcsigs._KEYWORD_ONLY",
    "sklearn.externals.funcsigs._POSITIONAL_ONLY",
    "sklearn.externals.funcsigs._VAR_KEYWORD",
    "sklearn.externals.funcsigs._VAR_POSITIONAL",
    "sklearn.externals.funcsigs._empty",
    "sklearn.externals.funcsigs.itertools",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.funcsigs.Signature.bind": {
  "data": {
   "lineno": 773
  },
  "type": "function"
 },
 "sklearn.externals.funcsigs.Signature.bind_partial": {
  "data": {
   "lineno": 780
  },
  "type": "function"
 },
 "sklearn.externals.funcsigs.Signature.from_function": {
  "data": {
   "lineno": 509,
   "symbols_in_volume": [
    "TypeError",
    "classmethod",
    "cls",
    "enumerate",
    "getattr",
    "isinstance",
    "len",
    "sklearn.externals.funcsigs.Parameter",
    "sklearn.externals.funcsigs._KEYWORD_ONLY",
    "sklearn.externals.funcsigs._POSITIONAL_OR_KEYWORD",
    "sklearn.externals.funcsigs._VAR_KEYWORD",
    "sklearn.externals.funcsigs._VAR_POSITIONAL",
    "sklearn.externals.funcsigs._empty",
    "sklearn.externals.funcsigs.types",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.funcsigs.Signature.parameters": {
  "data": {
   "lineno": 582,
   "symbols_in_volume": [
    "AttributeError",
    "collections.OrderedDict",
    "property",
    "sklearn.externals.funcsigs.types"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.funcsigs.Signature.replace": {
  "data": {
   "lineno": 593,
   "symbols_in_volume": [
    "sklearn.externals.funcsigs._void",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.funcsigs.Signature.return_annotation": {
  "data": {
   "lineno": 589,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.funcsigs._KEYWORD_ONLY": {
  "data": {
   "lineno": 200
  },
  "type": "constant"
 },
 "sklearn.externals.funcsigs._MethodWrapper": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "sklearn.externals.funcsigs._NonUserDefinedCallables": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "sklearn.externals.funcsigs._POSITIONAL_ONLY": {
  "data": {
   "lineno": 197
  },
  "type": "constant"
 },
 "sklearn.externals.funcsigs._POSITIONAL_OR_KEYWORD": {
  "data": {
   "lineno": 198
  },
  "type": "constant"
 },
 "sklearn.externals.funcsigs._ParameterKind": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "class"
 },
 "sklearn.externals.funcsigs._ParameterKind.__new__": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "int.__new__"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.funcsigs._ParameterKind.__repr__": {
  "data": {
   "lineno": 193
  },
  "type": "function"
 },
 "sklearn.externals.funcsigs._ParameterKind.__str__": {
  "data": {
   "lineno": 190
  },
  "type": "function"
 },
 "sklearn.externals.funcsigs._VAR_KEYWORD": {
  "data": {
   "lineno": 201
  },
  "type": "constant"
 },
 "sklearn.externals.funcsigs._VAR_POSITIONAL": {
  "data": {
   "lineno": 199
  },
  "type": "constant"
 },
 "sklearn.externals.funcsigs._WrapperDescriptor": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "sklearn.externals.funcsigs.__all__": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "sklearn.externals.funcsigs.__version__": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "sklearn.externals.funcsigs._empty": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "sklearn.externals.funcsigs._get_user_defined_method": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "AttributeError",
    "getattr",
    "isinstance",
    "sklearn.externals.funcsigs._NonUserDefinedCallables",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.funcsigs._void": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "sklearn.externals.funcsigs.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "sklearn.externals.funcsigs.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sklearn.externals.funcsigs.formatannotation": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "isinstance",
    "repr",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.funcsigs.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "sklearn.externals.funcsigs.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "sklearn.externals.funcsigs.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "sklearn.externals.funcsigs.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "sklearn.externals.funcsigs.signature": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "AttributeError",
    "TypeError",
    "ValueError",
    "callable",
    "collections.OrderedDict",
    "isinstance",
    "sklearn.externals.funcsigs._NonUserDefinedCallables",
    "sklearn.externals.funcsigs._get_user_defined_method",
    "sklearn.externals.funcsigs.functools",
    "sklearn.externals.funcsigs.types",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.funcsigs.types": {
  "data": {
   "shadows": "types"
  },
  "type": "import"
 },
 "sklearn.externals.joblib": {
  "data": {},
  "type": "module"
 },
 "sklearn.externals.joblib.__all__": {
  "data": {
   "lineno": 127
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.__version__": {
  "data": {
   "lineno": 109
  },
  "type": "constant"
 },
 "sklearn.externals.joblib._compat": {
  "data": {
   "symbols_in_volume": [
    "NameError",
    "bytes",
    "sklearn.externals.joblib._compat.sys",
    "str"
   ]
  },
  "type": "module"
 },
 "sklearn.externals.joblib._compat.PY27": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "sklearn.externals.joblib._compat.PY3_OR_LATER": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "sklearn.externals.joblib._compat._basestring": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "sklearn.externals.joblib._compat._bytes_or_unicode": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "sklearn.externals.joblib._compat.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "sklearn.externals.joblib._compat.with_metaclass": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "meta"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib._dask": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "sklearn.externals.joblib._dask.distributed"
   ]
  },
  "type": "module"
 },
 "sklearn.externals.joblib._dask.Batch": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "sklearn.externals.joblib._dask.Batch.__call__": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "a",
    "distributed.utils.itemgetter",
    "func",
    "isinstance",
    "parallel_backend",
    "v"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib._dask.Batch.__init__": {
  "data": {
   "lineno": 87
  },
  "type": "function"
 },
 "sklearn.externals.joblib._dask.Batch.__reduce__": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "sklearn.externals.joblib._dask.Batch"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib._dask.Client": {
  "data": {
   "shadows": "distributed.client.Client"
  },
  "type": "import"
 },
 "sklearn.externals.joblib._dask.DaskDistributedBackend": {
  "data": {
   "lineno": 105
  },
  "type": "class"
 },
 "sklearn.externals.joblib._dask.DaskDistributedBackend.__init__": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "distributed.client.Client",
    "distributed.get_client",
    "id",
    "isinstance",
    "len",
    "list",
    "set",
    "tuple",
    "type",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib._dask.DaskDistributedBackend.__reduce__": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "sklearn.externals.joblib._dask.DaskDistributedBackend"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib._dask.DaskDistributedBackend._to_func_args": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "dict",
    "func",
    "func.items",
    "getattr",
    "list",
    "maybe_to_futures",
    "sklearn.externals.joblib._dask.Batch",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib._dask.DaskDistributedBackend._to_func_args.maybe_to_futures": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "KeyError",
    "distributed.sizeof.sizeof",
    "distributed.utils.itemgetter",
    "id",
    "len",
    "sklearn.externals.joblib._dask.is_weakrefable"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib._dask.DaskDistributedBackend.abort_everything": {
  "data": {
   "lineno": 235
  },
  "type": "function"
 },
 "sklearn.externals.joblib._dask.DaskDistributedBackend.apply_async": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "func",
    "ref",
    "sklearn.externals.joblib._dask._funcname",
    "sklearn.externals.joblib._dask.weakref",
    "uuid.uuid4"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib._dask.DaskDistributedBackend.apply_async.callback_wrapper": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "callback",
    "distributed.client._wait",
    "tornado.gen.coroutine"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib._dask.DaskDistributedBackend.apply_async.get": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "ref"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib._dask.DaskDistributedBackend.configure": {
  "data": {
   "lineno": 150
  },
  "type": "function"
 },
 "sklearn.externals.joblib._dask.DaskDistributedBackend.effective_n_jobs": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "sum"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib._dask.DaskDistributedBackend.get_nested_backend": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "sklearn.externals.joblib._dask.DaskDistributedBackend"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib._dask.DaskDistributedBackend.retrieval_context": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "distributed.rejoin",
    "distributed.secede",
    "distributed.worker.thread_state",
    "hasattr",
    "sklearn.externals.joblib._dask.contextlib"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib._dask.DaskDistributedBackend.start_call": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "sklearn.externals.joblib._dask._WeakKeyDictionary"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib._dask.DaskDistributedBackend.stop_call": {
  "data": {
   "lineno": 156
  },
  "type": "function"
 },
 "sklearn.externals.joblib._dask._WeakKeyDictionary": {
  "data": {
   "lineno": 33
  },
  "type": "class"
 },
 "sklearn.externals.joblib._dask._WeakKeyDictionary.__getitem__": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "KeyError",
    "id",
    "ref"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib._dask._WeakKeyDictionary.__init__": {
  "data": {
   "lineno": 44
  },
  "type": "function"
 },
 "sklearn.externals.joblib._dask._WeakKeyDictionary.__len__": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib._dask._WeakKeyDictionary.__setitem__": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "KeyError",
    "id",
    "ref",
    "sklearn.externals.joblib._dask.weakref"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib._dask._WeakKeyDictionary.__setitem__.on_destroy": {
  "data": {
   "lineno": 65
  },
  "type": "function"
 },
 "sklearn.externals.joblib._dask._WeakKeyDictionary.clear": {
  "data": {
   "lineno": 73
  },
  "type": "function"
 },
 "sklearn.externals.joblib._dask._funcname": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "Exception",
    "distributed.utils.funcname",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib._dask._wait": {
  "data": {
   "shadows": "distributed.client._wait"
  },
  "type": "import"
 },
 "sklearn.externals.joblib._dask.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "sklearn.externals.joblib._dask.contextlib": {
  "data": {
   "shadows": "contextlib"
  },
  "type": "import"
 },
 "sklearn.externals.joblib._dask.distributed": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "sklearn.externals.joblib._dask.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sklearn.externals.joblib._dask.funcname": {
  "data": {
   "shadows": "distributed.utils.funcname"
  },
  "type": "import"
 },
 "sklearn.externals.joblib._dask.gen": {
  "data": {
   "shadows": "tornado.gen"
  },
  "type": "import"
 },
 "sklearn.externals.joblib._dask.get_client": {
  "data": {
   "shadows": "distributed.get_client"
  },
  "type": "import"
 },
 "sklearn.externals.joblib._dask.is_weakrefable": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "TypeError",
    "sklearn.externals.joblib._dask.weakref"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib._dask.itemgetter": {
  "data": {
   "shadows": "distributed.utils.itemgetter"
  },
  "type": "import"
 },
 "sklearn.externals.joblib._dask.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "sklearn.externals.joblib._dask.rejoin": {
  "data": {
   "shadows": "distributed.rejoin"
  },
  "type": "import"
 },
 "sklearn.externals.joblib._dask.secede": {
  "data": {
   "shadows": "distributed.secede"
  },
  "type": "import"
 },
 "sklearn.externals.joblib._dask.sizeof": {
  "data": {
   "shadows": "distributed.sizeof.sizeof"
  },
  "type": "import"
 },
 "sklearn.externals.joblib._dask.thread_state": {
  "data": {
   "shadows": "distributed.worker.thread_state"
  },
  "type": "import"
 },
 "sklearn.externals.joblib._dask.uuid4": {
  "data": {
   "shadows": "uuid.uuid4"
  },
  "type": "import"
 },
 "sklearn.externals.joblib._dask.weakref": {
  "data": {
   "shadows": "weakref"
  },
  "type": "import"
 },
 "sklearn.externals.joblib._memmapping_reducer": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "NameError",
    "int",
    "numpy",
    "sklearn.externals.joblib._memmapping_reducer.stat",
    "type"
   ]
  },
  "type": "module"
 },
 "sklearn.externals.joblib._memmapping_reducer.ArrayMemmapReducer": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "sklearn.externals.joblib._memmapping_reducer.ArrayMemmapReducer.__call__": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "KeyError",
    "OSError",
    "dump",
    "id",
    "load",
    "pickle.HIGHEST_PROTOCOL",
    "pickle.dumps",
    "pickle.loads",
    "print",
    "sklearn.externals.joblib._memmapping_reducer.FILE_PERMISSIONS",
    "sklearn.externals.joblib._memmapping_reducer.FOLDER_PERMISSIONS",
    "sklearn.externals.joblib._memmapping_reducer._get_backing_memmap",
    "sklearn.externals.joblib._memmapping_reducer._reduce_memmap_backed",
    "sklearn.externals.joblib._memmapping_reducer.errno",
    "sklearn.externals.joblib._memmapping_reducer.os",
    "sklearn.externals.joblib._memmapping_reducer.threading",
    "uuid.uuid4"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib._memmapping_reducer.ArrayMemmapReducer.__init__": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": [
    "int",
    "sklearn.externals.joblib._memmapping_reducer._WeakArrayKeyMap"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib._memmapping_reducer.ArrayMemmapReducer.__reduce__": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "sklearn.externals.joblib._memmapping_reducer.ArrayMemmapReducer"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib._memmapping_reducer.FILE_PERMISSIONS": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "sklearn.externals.joblib._memmapping_reducer.FOLDER_PERMISSIONS": {
  "data": {
   "lineno": 57
  },
  "type": "constant"
 },
 "sklearn.externals.joblib._memmapping_reducer.HIGHEST_PROTOCOL": {
  "data": {
   "shadows": "pickle.HIGHEST_PROTOCOL"
  },
  "type": "import"
 },
 "sklearn.externals.joblib._memmapping_reducer.PicklingError": {
  "data": {
   "shadows": "pickle.PicklingError"
  },
  "type": "import"
 },
 "sklearn.externals.joblib._memmapping_reducer.SYSTEM_SHARED_MEM_FS": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "sklearn.externals.joblib._memmapping_reducer.SYSTEM_SHARED_MEM_FS_MIN_SIZE": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "sklearn.externals.joblib._memmapping_reducer.WindowsError": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "sklearn.externals.joblib._memmapping_reducer._WeakArrayKeyMap": {
  "data": {
   "lineno": 61
  },
  "type": "class"
 },
 "sklearn.externals.joblib._memmapping_reducer._WeakArrayKeyMap.__getstate__": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "pickle.PicklingError"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib._memmapping_reducer._WeakArrayKeyMap.__init__": {
  "data": {
   "lineno": 69
  },
  "type": "function"
 },
 "sklearn.externals.joblib._memmapping_reducer._WeakArrayKeyMap.get": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "KeyError",
    "id",
    "ref"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib._memmapping_reducer._WeakArrayKeyMap.set": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "KeyError",
    "id",
    "ref",
    "sklearn.externals.joblib._memmapping_reducer.weakref"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib._memmapping_reducer._WeakArrayKeyMap.set.on_destroy": {
  "data": {
   "lineno": 92
  },
  "type": "function"
 },
 "sklearn.externals.joblib._memmapping_reducer._get_backing_memmap": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "getattr",
    "isinstance",
    "mmap.mmap"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib._memmapping_reducer._get_temp_dir": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "IOError",
    "OSError",
    "sklearn.externals.joblib._memmapping_reducer.SYSTEM_SHARED_MEM_FS",
    "sklearn.externals.joblib._memmapping_reducer.SYSTEM_SHARED_MEM_FS_MIN_SIZE",
    "sklearn.externals.joblib._memmapping_reducer.os",
    "sklearn.externals.joblib._memmapping_reducer.tempfile"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib._memmapping_reducer._reduce_memmap_backed": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "numpy.byte_bounds",
    "sklearn.externals.joblib._memmapping_reducer._strided_from_memmap"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib._memmapping_reducer._strided_from_memmap": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "make_memmap",
    "numpy.lib.stride_tricks.as_strided"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib._memmapping_reducer.as_strided": {
  "data": {
   "shadows": "numpy.lib.stride_tricks.as_strided"
  },
  "type": "import"
 },
 "sklearn.externals.joblib._memmapping_reducer.atexit": {
  "data": {
   "shadows": "atexit"
  },
  "type": "import"
 },
 "sklearn.externals.joblib._memmapping_reducer.dumps": {
  "data": {
   "shadows": "pickle.dumps"
  },
  "type": "import"
 },
 "sklearn.externals.joblib._memmapping_reducer.errno": {
  "data": {
   "shadows": "errno"
  },
  "type": "import"
 },
 "sklearn.externals.joblib._memmapping_reducer.get_memmapping_reducers": {
  "data": {
   "lineno": 364,
   "symbols_in_volume": [
    "dict",
    "numpy",
    "numpy.memmap",
    "numpy.ndarray",
    "pickle.whichmodule",
    "sklearn.externals.joblib._memmapping_reducer.ArrayMemmapReducer",
    "sklearn.externals.joblib._memmapping_reducer._get_temp_dir",
    "sklearn.externals.joblib._memmapping_reducer.atexit",
    "sklearn.externals.joblib._memmapping_reducer.os",
    "sklearn.externals.joblib._memmapping_reducer.reduce_memmap"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib._memmapping_reducer.get_memmapping_reducers._cleanup": {
  "data": {
   "lineno": 394,
   "symbols_in_volume": [
    "__import__",
    "delete_folder",
    "sklearn.externals.joblib._memmapping_reducer.WindowsError",
    "sklearn.externals.joblib._memmapping_reducer.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib._memmapping_reducer.has_shareable_memory": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "sklearn.externals.joblib._memmapping_reducer._get_backing_memmap"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib._memmapping_reducer.loads": {
  "data": {
   "shadows": "pickle.loads"
  },
  "type": "import"
 },
 "sklearn.externals.joblib._memmapping_reducer.mmap": {
  "data": {
   "shadows": "mmap.mmap"
  },
  "type": "import"
 },
 "sklearn.externals.joblib._memmapping_reducer.np": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "sklearn.externals.joblib._memmapping_reducer.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "sklearn.externals.joblib._memmapping_reducer.reduce_memmap": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "numpy.asarray",
    "pickle.HIGHEST_PROTOCOL",
    "pickle.dumps",
    "pickle.loads",
    "sklearn.externals.joblib._memmapping_reducer._get_backing_memmap",
    "sklearn.externals.joblib._memmapping_reducer._reduce_memmap_backed"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib._memmapping_reducer.stat": {
  "data": {
   "shadows": "stat"
  },
  "type": "import"
 },
 "sklearn.externals.joblib._memmapping_reducer.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "sklearn.externals.joblib._memmapping_reducer.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "sklearn.externals.joblib._memmapping_reducer.uuid4": {
  "data": {
   "shadows": "uuid.uuid4"
  },
  "type": "import"
 },
 "sklearn.externals.joblib._memmapping_reducer.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.externals.joblib._memmapping_reducer.weakref": {
  "data": {
   "shadows": "weakref"
  },
  "type": "import"
 },
 "sklearn.externals.joblib._memmapping_reducer.whichmodule": {
  "data": {
   "shadows": "pickle.whichmodule"
  },
  "type": "import"
 },
 "sklearn.externals.joblib._memory_helpers": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "sklearn.externals.joblib._memory_helpers.re"
   ]
  },
  "type": "module"
 },
 "sklearn.externals.joblib._memory_helpers.BOM_UTF8": {
  "data": {
   "shadows": "codecs.BOM_UTF8"
  },
  "type": "import"
 },
 "sklearn.externals.joblib._memory_helpers.TextIOWrapper": {
  "data": {
   "shadows": "io.TextIOWrapper"
  },
  "type": "import"
 },
 "sklearn.externals.joblib._memory_helpers._detect_encoding": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "codecs.BOM_UTF8",
    "find_cookie",
    "read_or_stop"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib._memory_helpers._detect_encoding.find_cookie": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "LookupError",
    "SyntaxError",
    "UnicodeDecodeError",
    "codecs.lookup",
    "sklearn.externals.joblib._memory_helpers._get_normal_name",
    "sklearn.externals.joblib._memory_helpers.cookie_re"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib._memory_helpers._detect_encoding.read_or_stop": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "StopIteration",
    "readline"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib._memory_helpers._get_normal_name": {
  "data": {
   "lineno": 12
  },
  "type": "function"
 },
 "sklearn.externals.joblib._memory_helpers.cookie_re": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "sklearn.externals.joblib._memory_helpers.lookup": {
  "data": {
   "shadows": "codecs.lookup"
  },
  "type": "import"
 },
 "sklearn.externals.joblib._memory_helpers.open": {
  "data": {
   "shadows": "io.open"
  },
  "type": "import"
 },
 "sklearn.externals.joblib._memory_helpers.open_py_source": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "io.TextIOWrapper",
    "io.open",
    "sklearn.externals.joblib._memory_helpers._detect_encoding"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib._memory_helpers.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "sklearn.externals.joblib._multiprocessing_helpers": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "OSError",
    "int",
    "multiprocessing",
    "multiprocessing.Semaphore",
    "multiprocessing.forking.assert_spawning",
    "multiprocessing.get_context",
    "sklearn.externals.joblib._multiprocessing_helpers.Semaphore",
    "sklearn.externals.joblib._multiprocessing_helpers._sem",
    "sklearn.externals.joblib._multiprocessing_helpers.ctx",
    "sklearn.externals.joblib._multiprocessing_helpers.mp",
    "sklearn.externals.joblib._multiprocessing_helpers.os",
    "sklearn.externals.joblib._multiprocessing_helpers.sys",
    "sklearn.externals.joblib._multiprocessing_helpers.warnings"
   ]
  },
  "type": "module"
 },
 "sklearn.externals.joblib._multiprocessing_helpers.Semaphore": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "sklearn.externals.joblib._multiprocessing_helpers._sem": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "sklearn.externals.joblib._multiprocessing_helpers.assert_spawning": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "sklearn.externals.joblib._multiprocessing_helpers.ctx": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "sklearn.externals.joblib._multiprocessing_helpers.mp": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "sklearn.externals.joblib._multiprocessing_helpers.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "sklearn.externals.joblib._multiprocessing_helpers.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "sklearn.externals.joblib._multiprocessing_helpers.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.externals.joblib._store_backends": {
  "data": {
   "symbols_in_volume": [
    "sklearn.externals.joblib._store_backends.collections"
   ]
  },
  "type": "module"
 },
 "sklearn.externals.joblib._store_backends.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "sklearn.externals.joblib._store_backends.CacheItemInfo": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "sklearn.externals.joblib._store_backends.FileSystemStoreBackend": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": [
    "open",
    "sklearn.externals.joblib._store_backends.StoreBackendBase",
    "sklearn.externals.joblib._store_backends.StoreBackendMixin",
    "sklearn.externals.joblib._store_backends.os",
    "staticmethod"
   ]
  },
  "type": "class"
 },
 "sklearn.externals.joblib._store_backends.FileSystemStoreBackend.clear_location": {
  "data": {
   "lineno": 343,
   "symbols_in_volume": [
    "rm_subdirs",
    "sklearn.externals.joblib._store_backends.shutil"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib._store_backends.FileSystemStoreBackend.configure": {
  "data": {
   "lineno": 390,
   "symbols_in_volume": [
    "mkdirp",
    "sklearn.externals.joblib._store_backends.os",
    "sklearn.externals.joblib._store_backends.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib._store_backends.FileSystemStoreBackend.create_location": {
  "data": {
   "lineno": 350,
   "symbols_in_volume": [
    "mkdirp"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib._store_backends.FileSystemStoreBackend.get_items": {
  "data": {
   "lineno": 354,
   "symbols_in_volume": [
    "OSError",
    "sklearn.externals.joblib._store_backends.CacheItemInfo",
    "sklearn.externals.joblib._store_backends.datetime",
    "sklearn.externals.joblib._store_backends.os",
    "sklearn.externals.joblib._store_backends.re",
    "sum"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib._store_backends.StoreBackendBase": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "abc.ABCMeta",
    "with_metaclass"
   ]
  },
  "type": "class"
 },
 "sklearn.externals.joblib._store_backends.StoreBackendBase._item_exists": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib._store_backends.StoreBackendBase._move_item": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib._store_backends.StoreBackendBase._open_item": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib._store_backends.StoreBackendBase.clear_location": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib._store_backends.StoreBackendBase.configure": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "dict"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib._store_backends.StoreBackendBase.create_location": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib._store_backends.StoreBackendBase.get_items": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib._store_backends.StoreBackendMixin": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "sklearn.externals.joblib._store_backends.StoreBackendMixin.__repr__": {
  "data": {
   "lineno": 330
  },
  "type": "function"
 },
 "sklearn.externals.joblib._store_backends.StoreBackendMixin._concurrency_safe_write": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": [
    "sklearn.externals.joblib._store_backends.concurrency_safe_write",
    "write_func"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib._store_backends.StoreBackendMixin._get_items_to_delete": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": [
    "isinstance",
    "memstr_to_bytes",
    "sklearn.externals.joblib._store_backends.operator",
    "sum"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib._store_backends.StoreBackendMixin.clear": {
  "data": {
   "lineno": 276
  },
  "type": "function"
 },
 "sklearn.externals.joblib._store_backends.StoreBackendMixin.clear_item": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "sklearn.externals.joblib._store_backends.os"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib._store_backends.StoreBackendMixin.clear_path": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "sklearn.externals.joblib._store_backends.os"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib._store_backends.StoreBackendMixin.contains_item": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "sklearn.externals.joblib._store_backends.os"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib._store_backends.StoreBackendMixin.contains_path": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "sklearn.externals.joblib._store_backends.os"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib._store_backends.StoreBackendMixin.dump_item": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "print",
    "sklearn.externals.joblib._store_backends.os",
    "write_func"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib._store_backends.StoreBackendMixin.dump_item.write_func": {
  "data": {
   "lineno": 187
  },
  "type": "function"
 },
 "sklearn.externals.joblib._store_backends.StoreBackendMixin.get_cached_func_code": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "sklearn.externals.joblib._store_backends.os"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib._store_backends.StoreBackendMixin.get_cached_func_info": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "sklearn.externals.joblib._store_backends.os"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib._store_backends.StoreBackendMixin.get_item_info": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "sklearn.externals.joblib._store_backends.os"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib._store_backends.StoreBackendMixin.get_metadata": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "sklearn.externals.joblib._store_backends.json",
    "sklearn.externals.joblib._store_backends.os"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib._store_backends.StoreBackendMixin.load_item": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "KeyError",
    "hasattr",
    "print",
    "sklearn.externals.joblib._store_backends.os"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib._store_backends.StoreBackendMixin.reduce_store_size": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "OSError",
    "print"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib._store_backends.StoreBackendMixin.store_cached_func_code": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "sklearn.externals.joblib._store_backends.os"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib._store_backends.StoreBackendMixin.store_metadata": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "sklearn.externals.joblib._store_backends.os",
    "write_func"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib._store_backends.StoreBackendMixin.store_metadata.write_func": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "sklearn.externals.joblib._store_backends.json"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib._store_backends.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "sklearn.externals.joblib._store_backends.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "sklearn.externals.joblib._store_backends.concurrency_safe_write": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "id",
    "sklearn.externals.joblib._store_backends.os",
    "sklearn.externals.joblib._store_backends.threading",
    "write_func"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib._store_backends.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "sklearn.externals.joblib._store_backends.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "sklearn.externals.joblib._store_backends.operator": {
  "data": {
   "shadows": "operator"
  },
  "type": "import"
 },
 "sklearn.externals.joblib._store_backends.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "sklearn.externals.joblib._store_backends.os.path": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "sklearn.externals.joblib._store_backends.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "sklearn.externals.joblib._store_backends.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "sklearn.externals.joblib._store_backends.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "sklearn.externals.joblib._store_backends.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.backports": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "sklearn.externals.joblib.backports.os"
   ]
  },
  "type": "module"
 },
 "sklearn.externals.joblib.backports.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.backports.access_denied_errors": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.backports.concurrency_safe_rename": {
  "data": {
   "shadows": "os.rename"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.backports.ctypes": {
  "data": {
   "shadows": "ctypes"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.backports.make_memmap": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.backports.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.backports.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.backports.replace": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "isinstance",
    "sklearn.externals.joblib.backports.ctypes",
    "sklearn.externals.joblib.backports.sys",
    "unicode"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.backports.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.backports.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.compressor": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "sklearn.externals.joblib.compressor.BZ2CompressorWrapper": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "sklearn.externals.joblib.compressor.CompressorWrapper",
    "sklearn.externals.joblib.compressor._BZ2_PREFIX"
   ]
  },
  "type": "class"
 },
 "sklearn.externals.joblib.compressor.BZ2CompressorWrapper.__init__": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "sklearn.externals.joblib.compressor.bz2"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.compressor.BZ2CompressorWrapper._check_versions": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.externals.joblib.compressor.bz2"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.compressor.BZ2CompressorWrapper.compressor_file": {
  "data": {
   "lineno": 134
  },
  "type": "function"
 },
 "sklearn.externals.joblib.compressor.BZ2CompressorWrapper.decompressor_file": {
  "data": {
   "lineno": 143
  },
  "type": "function"
 },
 "sklearn.externals.joblib.compressor.BinaryGzipFile": {
  "data": {
   "lineno": 573,
   "symbols_in_volume": [
    "sklearn.externals.joblib.compressor.BinaryZlibFile"
   ]
  },
  "type": "class"
 },
 "sklearn.externals.joblib.compressor.BinaryZlibFile": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "sklearn.externals.joblib.compressor.io",
    "sklearn.externals.joblib.compressor.zlib"
   ]
  },
  "type": "class"
 },
 "sklearn.externals.joblib.compressor.BinaryZlibFile.__init__": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "dummy_threading.RLock",
    "hasattr",
    "int",
    "isinstance",
    "sklearn.externals.joblib.compressor._MODE_CLOSED",
    "sklearn.externals.joblib.compressor._MODE_READ",
    "sklearn.externals.joblib.compressor._MODE_WRITE",
    "sklearn.externals.joblib.compressor.io",
    "sklearn.externals.joblib.compressor.zlib"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.compressor.BinaryZlibFile._check_can_read": {
  "data": {
   "lineno": 380,
   "symbols_in_volume": [
    "sklearn.externals.joblib.compressor._MODE_READ",
    "sklearn.externals.joblib.compressor._MODE_READ_EOF",
    "sklearn.externals.joblib.compressor.io"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.compressor.BinaryZlibFile._check_can_seek": {
  "data": {
   "lineno": 390,
   "symbols_in_volume": [
    "sklearn.externals.joblib.compressor._MODE_READ",
    "sklearn.externals.joblib.compressor._MODE_READ_EOF",
    "sklearn.externals.joblib.compressor.io"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.compressor.BinaryZlibFile._check_can_write": {
  "data": {
   "lineno": 385,
   "symbols_in_volume": [
    "sklearn.externals.joblib.compressor._MODE_WRITE",
    "sklearn.externals.joblib.compressor.io"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.compressor.BinaryZlibFile._check_not_closed": {
  "data": {
   "lineno": 371,
   "symbols_in_volume": [
    "ValueError",
    "getattr"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.compressor.BinaryZlibFile._fill_buffer": {
  "data": {
   "lineno": 400,
   "symbols_in_volume": [
    "EOFError",
    "len",
    "sklearn.externals.joblib.compressor._BUFFER_SIZE",
    "sklearn.externals.joblib.compressor._MODE_READ_EOF"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.compressor.BinaryZlibFile._read_all": {
  "data": {
   "lineno": 423,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.compressor.BinaryZlibFile._read_block": {
  "data": {
   "lineno": 439,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.compressor.BinaryZlibFile._rewind": {
  "data": {
   "lineno": 509,
   "symbols_in_volume": [
    "sklearn.externals.joblib.compressor._MODE_READ",
    "sklearn.externals.joblib.compressor.zlib"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.compressor.BinaryZlibFile.close": {
  "data": {
   "lineno": 319,
   "symbols_in_volume": [
    "sklearn.externals.joblib.compressor._MODE_CLOSED",
    "sklearn.externals.joblib.compressor._MODE_READ",
    "sklearn.externals.joblib.compressor._MODE_READ_EOF",
    "sklearn.externals.joblib.compressor._MODE_WRITE"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.compressor.BinaryZlibFile.closed": {
  "data": {
   "lineno": 345,
   "symbols_in_volume": [
    "property",
    "sklearn.externals.joblib.compressor._MODE_CLOSED"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.compressor.BinaryZlibFile.fileno": {
  "data": {
   "lineno": 350
  },
  "type": "function"
 },
 "sklearn.externals.joblib.compressor.BinaryZlibFile.read": {
  "data": {
   "lineno": 467
  },
  "type": "function"
 },
 "sklearn.externals.joblib.compressor.BinaryZlibFile.readable": {
  "data": {
   "lineno": 359,
   "symbols_in_volume": [
    "sklearn.externals.joblib.compressor._MODE_READ",
    "sklearn.externals.joblib.compressor._MODE_READ_EOF"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.compressor.BinaryZlibFile.readinto": {
  "data": {
   "lineno": 482,
   "symbols_in_volume": [
    "sklearn.externals.joblib.compressor.io"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.compressor.BinaryZlibFile.seek": {
  "data": {
   "lineno": 517,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.compressor.BinaryZlibFile.seekable": {
  "data": {
   "lineno": 355
  },
  "type": "function"
 },
 "sklearn.externals.joblib.compressor.BinaryZlibFile.tell": {
  "data": {
   "lineno": 559
  },
  "type": "function"
 },
 "sklearn.externals.joblib.compressor.BinaryZlibFile.writable": {
  "data": {
   "lineno": 364,
   "symbols_in_volume": [
    "sklearn.externals.joblib.compressor._MODE_WRITE"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.compressor.BinaryZlibFile.write": {
  "data": {
   "lineno": 490,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "memoryview"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.compressor.CompressorWrapper": {
  "data": {
   "lineno": 84
  },
  "type": "class"
 },
 "sklearn.externals.joblib.compressor.CompressorWrapper.__init__": {
  "data": {
   "lineno": 100
  },
  "type": "function"
 },
 "sklearn.externals.joblib.compressor.CompressorWrapper.compressor_file": {
  "data": {
   "lineno": 105
  },
  "type": "function"
 },
 "sklearn.externals.joblib.compressor.CompressorWrapper.decompressor_file": {
  "data": {
   "lineno": 113
  },
  "type": "function"
 },
 "sklearn.externals.joblib.compressor.GzipCompressorWrapper": {
  "data": {
   "lineno": 590,
   "symbols_in_volume": [
    "sklearn.externals.joblib.compressor.CompressorWrapper"
   ]
  },
  "type": "class"
 },
 "sklearn.externals.joblib.compressor.GzipCompressorWrapper.__init__": {
  "data": {
   "lineno": 592,
   "symbols_in_volume": [
    "sklearn.externals.joblib.compressor.BinaryGzipFile",
    "sklearn.externals.joblib.compressor.CompressorWrapper",
    "sklearn.externals.joblib.compressor._GZIP_PREFIX"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.compressor.LZ4CompressorWrapper": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "sklearn.externals.joblib.compressor.CompressorWrapper",
    "sklearn.externals.joblib.compressor._LZ4_PREFIX"
   ]
  },
  "type": "class"
 },
 "sklearn.externals.joblib.compressor.LZ4CompressorWrapper.__init__": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "lz4.frame.LZ4FrameFile",
    "sklearn.externals.joblib.compressor.lz4"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.compressor.LZ4CompressorWrapper._check_versions": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "ValueError",
    "distutils.version.LooseVersion",
    "sklearn.externals.joblib.compressor.LZ4_NOT_INSTALLED_ERROR",
    "sklearn.externals.joblib.compressor.lz4"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.compressor.LZ4CompressorWrapper.compressor_file": {
  "data": {
   "lineno": 232
  },
  "type": "function"
 },
 "sklearn.externals.joblib.compressor.LZ4CompressorWrapper.decompressor_file": {
  "data": {
   "lineno": 241
  },
  "type": "function"
 },
 "sklearn.externals.joblib.compressor.LZ4FrameFile": {
  "data": {
   "shadows": "lz4.frame.LZ4FrameFile"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.compressor.LZ4_NOT_INSTALLED_ERROR": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.compressor.LZMACompressorWrapper": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "sklearn.externals.joblib.compressor.CompressorWrapper",
    "sklearn.externals.joblib.compressor._LZMA_PREFIX"
   ]
  },
  "type": "class"
 },
 "sklearn.externals.joblib.compressor.LZMACompressorWrapper.__init__": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "sklearn.externals.joblib.compressor.lzma"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.compressor.LZMACompressorWrapper.compressor_file": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "sklearn.externals.joblib.compressor.lzma"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.compressor.LZMACompressorWrapper.decompressor_file": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "NotImplementedError",
    "sklearn.externals.joblib.compressor.lzma",
    "sklearn.externals.joblib.compressor.sys"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.compressor.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.compressor.RLock": {
  "data": {
   "shadows": "dummy_threading.RLock"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.compressor.XZCompressorWrapper": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "sklearn.externals.joblib.compressor.LZMACompressorWrapper",
    "sklearn.externals.joblib.compressor._XZ_PREFIX"
   ]
  },
  "type": "class"
 },
 "sklearn.externals.joblib.compressor.XZCompressorWrapper.__init__": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "sklearn.externals.joblib.compressor.lzma"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.compressor.XZCompressorWrapper.compressor_file": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "sklearn.externals.joblib.compressor.lzma"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.compressor.ZlibCompressorWrapper": {
  "data": {
   "lineno": 566,
   "symbols_in_volume": [
    "sklearn.externals.joblib.compressor.CompressorWrapper"
   ]
  },
  "type": "class"
 },
 "sklearn.externals.joblib.compressor.ZlibCompressorWrapper.__init__": {
  "data": {
   "lineno": 568,
   "symbols_in_volume": [
    "sklearn.externals.joblib.compressor.BinaryZlibFile",
    "sklearn.externals.joblib.compressor.CompressorWrapper",
    "sklearn.externals.joblib.compressor._ZLIB_PREFIX"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.compressor._BUFFER_SIZE": {
  "data": {
   "lineno": 253
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.compressor._BZ2_PREFIX": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.compressor._COMPRESSORS": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.compressor._GZIP_PREFIX": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.compressor._LZ4_PREFIX": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.compressor._LZMA_PREFIX": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.compressor._MODE_CLOSED": {
  "data": {
   "lineno": 249
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.compressor._MODE_READ": {
  "data": {
   "lineno": 250
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.compressor._MODE_READ_EOF": {
  "data": {
   "lineno": 251
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.compressor._MODE_WRITE": {
  "data": {
   "lineno": 252
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.compressor._XZ_PREFIX": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.compressor._ZFILE_PREFIX": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.compressor._ZLIB_PREFIX": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.compressor.bz2": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.compressor.io": {
  "data": {
   "shadows": "io"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.compressor.lz4": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.compressor.lzma": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.compressor.register_compressor": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "ValueError",
    "hasattr",
    "isinstance",
    "sklearn.externals.joblib.compressor._COMPRESSORS"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.compressor.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.compressor.zlib": {
  "data": {
   "shadows": "zlib"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.disk": {
  "data": {
   "symbols_in_volume": [
    "NameError",
    "OSError"
   ]
  },
  "type": "module"
 },
 "sklearn.externals.joblib.disk.RM_SUBDIRS_N_RETRY": {
  "data": {
   "lineno": 71
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.disk.RM_SUBDIRS_RETRY_TIME": {
  "data": {
   "lineno": 70
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.disk.WindowsError": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.disk.delete_folder": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "OSError",
    "onerror",
    "sklearn.externals.joblib.disk.RM_SUBDIRS_N_RETRY",
    "sklearn.externals.joblib.disk.RM_SUBDIRS_RETRY_TIME",
    "sklearn.externals.joblib.disk.WindowsError",
    "sklearn.externals.joblib.disk.os",
    "sklearn.externals.joblib.disk.shutil",
    "sklearn.externals.joblib.disk.time",
    "sklearn.externals.joblib.disk.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.disk.disk_used": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "hasattr",
    "int",
    "sklearn.externals.joblib.disk.os"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.disk.errno": {
  "data": {
   "shadows": "errno"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.disk.memstr_to_bytes": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "dict",
    "float",
    "int",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.disk.mkdirp": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "OSError",
    "sklearn.externals.joblib.disk.errno",
    "sklearn.externals.joblib.disk.os"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.disk.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.disk.rm_subdirs": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "onerror",
    "sklearn.externals.joblib.disk.delete_folder",
    "sklearn.externals.joblib.disk.os",
    "sklearn.externals.joblib.disk.sys"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.disk.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.disk.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.disk.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.disk.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.executor": {
  "data": {},
  "type": "module"
 },
 "sklearn.externals.joblib.executor._TestingMemmappingExecutor": {
  "data": {
   "lineno": 47
  },
  "type": "class"
 },
 "sklearn.externals.joblib.executor._TestingMemmappingExecutor.__init__": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "sklearn.externals.joblib.executor.get_memmapping_executor"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.executor._TestingMemmappingExecutor.apply_async": {
  "data": {
   "lineno": 55
  },
  "type": "function"
 },
 "sklearn.externals.joblib.executor._TestingMemmappingExecutor.map": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.executor._TestingMemmappingExecutor.terminate": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "delete_folder"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.executor._backend_args": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.executor.get_memmapping_executor": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "delete_folder",
    "get_memmapping_reducers",
    "get_reusable_executor",
    "hasattr",
    "int",
    "sklearn.externals.joblib.executor._backend_args",
    "sklearn.externals.joblib.executor.random"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.executor.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals": {
  "data": {},
  "type": "module"
 },
 "sklearn.externals.joblib.externals.cloudpickle": {
  "data": {},
  "type": "module"
 },
 "sklearn.externals.joblib.externals.cloudpickle.__version__": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.externals.cloudpickle.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.cloudpickle.cloudpickle": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "copy_reg.pickle",
    "dict",
    "dict.__new__",
    "frozenset",
    "frozenset.__new__",
    "list",
    "list.__new__",
    "object",
    "object.__new__",
    "set",
    "set.__new__",
    "sklearn.externals.joblib.externals.cloudpickle.cloudpickle.DELETE_GLOBAL",
    "sklearn.externals.joblib.externals.cloudpickle.cloudpickle.LOAD_GLOBAL",
    "sklearn.externals.joblib.externals.cloudpickle.cloudpickle.STORE_GLOBAL",
    "sklearn.externals.joblib.externals.cloudpickle.cloudpickle._BUILTIN_TYPE_NAMES",
    "sklearn.externals.joblib.externals.cloudpickle.cloudpickle._get_dict_new",
    "sklearn.externals.joblib.externals.cloudpickle.cloudpickle._get_frozenset_new",
    "sklearn.externals.joblib.externals.cloudpickle.cloudpickle._get_list_new",
    "sklearn.externals.joblib.externals.cloudpickle.cloudpickle._get_object_new",
    "sklearn.externals.joblib.externals.cloudpickle.cloudpickle._get_set_new",
    "sklearn.externals.joblib.externals.cloudpickle.cloudpickle._get_tuple_new",
    "sklearn.externals.joblib.externals.cloudpickle.cloudpickle._make__new__factory",
    "sklearn.externals.joblib.externals.cloudpickle.cloudpickle._make_cell_set_template_code",
    "sklearn.externals.joblib.externals.cloudpickle.cloudpickle._reduce_method_descriptor",
    "sklearn.externals.joblib.externals.cloudpickle.cloudpickle.dis",
    "sklearn.externals.joblib.externals.cloudpickle.cloudpickle.method_descriptor",
    "sklearn.externals.joblib.externals.cloudpickle.cloudpickle.opcode",
    "sklearn.externals.joblib.externals.cloudpickle.cloudpickle.pickle",
    "sklearn.externals.joblib.externals.cloudpickle.cloudpickle.sys",
    "sklearn.externals.joblib.externals.cloudpickle.cloudpickle.types",
    "str.upper",
    "tuple",
    "tuple.__new__",
    "type"
   ]
  },
  "type": "module"
 },
 "sklearn.externals.joblib.externals.cloudpickle.cloudpickle.CloudPickler": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "Ellipsis",
    "NameError",
    "NotImplemented",
    "classmethod",
    "hasattr",
    "memoryview",
    "pickle._Pickler",
    "pickle._Pickler.dispatch.copy",
    "property",
    "sklearn.externals.joblib.externals.cloudpickle.cloudpickle.PY3",
    "sklearn.externals.joblib.externals.cloudpickle.cloudpickle.io",
    "sklearn.externals.joblib.externals.cloudpickle.cloudpickle.logging",
    "sklearn.externals.joblib.externals.cloudpickle.cloudpickle.operator",
    "sklearn.externals.joblib.externals.cloudpickle.cloudpickle.sys",
    "sklearn.externals.joblib.externals.cloudpickle.cloudpickle.types",
    "sklearn.externals.joblib.externals.cloudpickle.cloudpickle.weakref",
    "staticmethod",
    "type"
   ]
  },
  "type": "class"
 },
 "sklearn.externals.joblib.externals.cloudpickle.cloudpickle.CloudPickler.__init__": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "pickle._Pickler.__init__",
    "set",
    "sklearn.externals.joblib.externals.cloudpickle.cloudpickle.DEFAULT_PROTOCOL"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.cloudpickle.cloudpickle.CloudPickler._save_subimports": {
  "data": {
   "lineno": 429,
   "symbols_in_volume": [
    "hasattr",
    "isinstance",
    "len",
    "list",
    "set",
    "sklearn.externals.joblib.externals.cloudpickle.cloudpickle.pickle",
    "sklearn.externals.joblib.externals.cloudpickle.cloudpickle.sys",
    "sklearn.externals.joblib.externals.cloudpickle.cloudpickle.types"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.cloudpickle.cloudpickle.CloudPickler.dump": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "RuntimeError",
    "pickle._Pickler.dump",
    "sklearn.externals.joblib.externals.cloudpickle.cloudpickle.pickle"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.cloudpickle.cloudpickle.CloudPickler.extract_code_globals": {
  "data": {
   "lineno": 582,
   "symbols_in_volume": [
    "AttributeError",
    "classmethod",
    "set",
    "sklearn.externals.joblib.externals.cloudpickle.cloudpickle._walk_global_ops",
    "sklearn.externals.joblib.externals.cloudpickle.cloudpickle.types",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.cloudpickle.cloudpickle.CloudPickler.extract_func_data": {
  "data": {
   "lineno": 607,
   "symbols_in_volume": [
    "hasattr",
    "id",
    "list",
    "map"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.cloudpickle.cloudpickle.CloudPickler.inject_addons": {
  "data": {
   "lineno": 864
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.cloudpickle.cloudpickle.CloudPickler.save_attrgetter": {
  "data": {
   "lineno": 771,
   "symbols_in_volume": [
    "Dummy",
    "obj",
    "sklearn.externals.joblib.externals.cloudpickle.cloudpickle.operator",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.cloudpickle.cloudpickle.CloudPickler.save_attrgetter.Dummy": {
  "data": {
   "lineno": 773,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "sklearn.externals.joblib.externals.cloudpickle.cloudpickle.CloudPickler.save_attrgetter.Dummy.__getattribute__": {
  "data": {
   "lineno": 777,
   "symbols_in_volume": [
    "len",
    "object.__getattribute__",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.cloudpickle.cloudpickle.CloudPickler.save_attrgetter.Dummy.__init__": {
  "data": {
   "lineno": 774
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.cloudpickle.cloudpickle.CloudPickler.save_buffer": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.cloudpickle.cloudpickle.CloudPickler.save_builtin_function": {
  "data": {
   "lineno": 650
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.cloudpickle.cloudpickle.CloudPickler.save_classmethod": {
  "data": {
   "lineno": 751,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.cloudpickle.cloudpickle.CloudPickler.save_codeobject": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": [
    "sklearn.externals.joblib.externals.cloudpickle.cloudpickle.PY3",
    "sklearn.externals.joblib.externals.cloudpickle.cloudpickle.types"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.cloudpickle.cloudpickle.CloudPickler.save_dynamic_class": {
  "data": {
   "lineno": 453,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "property",
    "save",
    "sklearn.externals.joblib.externals.cloudpickle.cloudpickle.abc",
    "sklearn.externals.joblib.externals.cloudpickle.cloudpickle.pickle",
    "subclass_weakref",
    "type",
    "write"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.cloudpickle.cloudpickle.CloudPickler.save_ellipsis": {
  "data": {
   "lineno": 834
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.cloudpickle.cloudpickle.CloudPickler.save_file": {
  "data": {
   "lineno": 793,
   "symbols_in_volume": [
    "IOError",
    "ImportError",
    "getattr",
    "hasattr",
    "obj",
    "obj.closed",
    "obj.isatty",
    "obj.mode",
    "obj.name",
    "obj.read",
    "obj.seek",
    "obj.tell",
    "sklearn.externals.joblib.externals.cloudpickle.cloudpickle.io",
    "sklearn.externals.joblib.externals.cloudpickle.cloudpickle.pickle",
    "sklearn.externals.joblib.externals.cloudpickle.cloudpickle.sys"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.cloudpickle.cloudpickle.CloudPickler.save_function": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": [
    "Exception",
    "KeyError",
    "TypeError",
    "getattr",
    "hasattr",
    "sklearn.externals.joblib.externals.cloudpickle.cloudpickle.PY3",
    "sklearn.externals.joblib.externals.cloudpickle.cloudpickle._BUILTIN_TYPE_CONSTRUCTORS",
    "sklearn.externals.joblib.externals.cloudpickle.cloudpickle.islambda",
    "sklearn.externals.joblib.externals.cloudpickle.cloudpickle.pickle",
    "sklearn.externals.joblib.externals.cloudpickle.cloudpickle.sys",
    "write"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.cloudpickle.cloudpickle.CloudPickler.save_function_tuple": {
  "data": {
   "lineno": 519,
   "symbols_in_volume": [
    "hasattr",
    "len",
    "save",
    "sklearn.externals.joblib.externals.cloudpickle.cloudpickle.is_tornado_coroutine",
    "sklearn.externals.joblib.externals.cloudpickle.cloudpickle.itertools",
    "sklearn.externals.joblib.externals.cloudpickle.cloudpickle.pickle",
    "write"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.cloudpickle.cloudpickle.CloudPickler.save_global": {
  "data": {
   "lineno": 657,
   "symbols_in_volume": [
    "Exception",
    "isinstance",
    "pickle._Pickler.save_global",
    "sklearn.externals.joblib.externals.cloudpickle.cloudpickle._BUILTIN_TYPE_NAMES",
    "sklearn.externals.joblib.externals.cloudpickle.cloudpickle._builtin_type",
    "sklearn.externals.joblib.externals.cloudpickle.cloudpickle.struct",
    "sklearn.externals.joblib.externals.cloudpickle.cloudpickle.types",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.cloudpickle.cloudpickle.CloudPickler.save_inst": {
  "data": {
   "lineno": 697,
   "symbols_in_volume": [
    "AttributeError",
    "f",
    "getstate",
    "hasattr",
    "len",
    "save",
    "sklearn.externals.joblib.externals.cloudpickle.cloudpickle.pickle",
    "write"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.cloudpickle.cloudpickle.CloudPickler.save_instancemethod": {
  "data": {
   "lineno": 684,
   "symbols_in_volume": [
    "getattr",
    "sklearn.externals.joblib.externals.cloudpickle.cloudpickle.PY3",
    "sklearn.externals.joblib.externals.cloudpickle.cloudpickle.types"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.cloudpickle.cloudpickle.CloudPickler.save_itemgetter": {
  "data": {
   "lineno": 758,
   "symbols_in_volume": [
    "Dummy",
    "isinstance",
    "obj",
    "sklearn.externals.joblib.externals.cloudpickle.cloudpickle.operator",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.cloudpickle.cloudpickle.CloudPickler.save_itemgetter.Dummy": {
  "data": {
   "lineno": 760
  },
  "type": "class"
 },
 "sklearn.externals.joblib.externals.cloudpickle.cloudpickle.CloudPickler.save_itemgetter.Dummy.__getitem__": {
  "data": {
   "lineno": 761
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.cloudpickle.cloudpickle.CloudPickler.save_logger": {
  "data": {
   "lineno": 853,
   "symbols_in_volume": [
    "obj",
    "obj.name",
    "sklearn.externals.joblib.externals.cloudpickle.cloudpickle.logging"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.cloudpickle.cloudpickle.CloudPickler.save_memoryview": {
  "data": {
   "lineno": 276
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.cloudpickle.cloudpickle.CloudPickler.save_module": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "ImportError",
    "hasattr",
    "sklearn.externals.joblib.externals.cloudpickle.cloudpickle._find_module",
    "vars"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.cloudpickle.cloudpickle.CloudPickler.save_not_implemented": {
  "data": {
   "lineno": 837
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.cloudpickle.cloudpickle.CloudPickler.save_property": {
  "data": {
   "lineno": 745,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.cloudpickle.cloudpickle.CloudPickler.save_root_logger": {
  "data": {
   "lineno": 858,
   "symbols_in_volume": [
    "obj",
    "sklearn.externals.joblib.externals.cloudpickle.cloudpickle.logging"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.cloudpickle.cloudpickle.CloudPickler.save_weakset": {
  "data": {
   "lineno": 848,
   "symbols_in_volume": [
    "list",
    "obj",
    "sklearn.externals.joblib.externals.cloudpickle.cloudpickle.weakref"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.cloudpickle.cloudpickle.DEFAULT_PROTOCOL": {
  "data": {
   "lineno": 64
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.externals.cloudpickle.cloudpickle.DELETE_GLOBAL": {
  "data": {
   "lineno": 168
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.externals.cloudpickle.cloudpickle.EXTENDED_ARG": {
  "data": {
   "lineno": 172
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.externals.cloudpickle.cloudpickle.GLOBAL_OPS": {
  "data": {
   "lineno": 170
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.externals.cloudpickle.cloudpickle.HAVE_ARGUMENT": {
  "data": {
   "lineno": 171
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.externals.cloudpickle.cloudpickle.LOAD_GLOBAL": {
  "data": {
   "lineno": 169
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.externals.cloudpickle.cloudpickle.PY3": {
  "data": {
   "lineno": 78
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.externals.cloudpickle.cloudpickle.Pickler": {
  "data": {
   "shadows": "pickle._Pickler"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.cloudpickle.cloudpickle.STORE_GLOBAL": {
  "data": {
   "lineno": 167
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.externals.cloudpickle.cloudpickle.StringIO": {
  "data": {
   "shadows": "io.BytesIO"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.cloudpickle.cloudpickle._BUILTIN_TYPE_CONSTRUCTORS": {
  "data": {
   "lineno": 205
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.externals.cloudpickle.cloudpickle._BUILTIN_TYPE_NAMES": {
  "data": {
   "lineno": 179
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.externals.cloudpickle.cloudpickle._builtin_type": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "getattr",
    "sklearn.externals.joblib.externals.cloudpickle.cloudpickle.types"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.cloudpickle.cloudpickle._cell_set_template_code": {
  "data": {
   "lineno": 151
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.externals.cloudpickle.cloudpickle._empty_cell_value": {
  "data": {
   "lineno": 1017,
   "symbols_in_volume": [
    "object",
    "sklearn.externals.joblib.externals.cloudpickle.cloudpickle.instance"
   ]
  },
  "type": "class"
 },
 "sklearn.externals.joblib.externals.cloudpickle.cloudpickle._empty_cell_value.__reduce__": {
  "data": {
   "lineno": 1021,
   "symbols_in_volume": [
    "classmethod",
    "cls.__name__"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.cloudpickle.cloudpickle._fill_function": {
  "data": {
   "lineno": 1026,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "len",
    "sklearn.externals.joblib.externals.cloudpickle.cloudpickle._empty_cell_value",
    "sklearn.externals.joblib.externals.cloudpickle.cloudpickle.cell_set",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.cloudpickle.cloudpickle._find_module": {
  "data": {
   "lineno": 1128,
   "symbols_in_volume": [
    "sklearn.externals.joblib.externals.cloudpickle.cloudpickle.imp"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.cloudpickle.cloudpickle._gen_ellipsis": {
  "data": {
   "lineno": 985,
   "symbols_in_volume": [
    "Ellipsis"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.cloudpickle.cloudpickle._gen_not_implemented": {
  "data": {
   "lineno": 989,
   "symbols_in_volume": [
    "NotImplemented"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.cloudpickle.cloudpickle._genpartial": {
  "data": {
   "lineno": 977,
   "symbols_in_volume": [
    "functools.partial"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.cloudpickle.cloudpickle._get_cell_contents": {
  "data": {
   "lineno": 993,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.cloudpickle.cloudpickle._get_dict_new": {
  "data": {
   "lineno": 196
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.externals.cloudpickle.cloudpickle._get_frozenset_new": {
  "data": {
   "lineno": 197
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.externals.cloudpickle.cloudpickle._get_list_new": {
  "data": {
   "lineno": 198
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.externals.cloudpickle.cloudpickle._get_module_builtins": {
  "data": {
   "lineno": 948,
   "symbols_in_volume": [
    "sklearn.externals.joblib.externals.cloudpickle.cloudpickle.pickle"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.cloudpickle.cloudpickle._get_object_new": {
  "data": {
   "lineno": 201
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.externals.cloudpickle.cloudpickle._get_set_new": {
  "data": {
   "lineno": 199
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.externals.cloudpickle.cloudpickle._get_tuple_new": {
  "data": {
   "lineno": 200
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.externals.cloudpickle.cloudpickle._getobject": {
  "data": {
   "lineno": 1147,
   "symbols_in_volume": [
    "__import__"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.cloudpickle.cloudpickle._make__new__factory": {
  "data": {
   "lineno": 189
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.cloudpickle.cloudpickle._make__new__factory._factory": {
  "data": {
   "lineno": 190
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.cloudpickle.cloudpickle._make_cell_set_template_code": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "sklearn.externals.joblib.externals.cloudpickle.cloudpickle.PY3",
    "sklearn.externals.joblib.externals.cloudpickle.cloudpickle.types"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.cloudpickle.cloudpickle._make_cell_set_template_code.inner": {
  "data": {
   "lineno": 105
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.cloudpickle.cloudpickle._make_empty_cell": {
  "data": {
   "lineno": 1076,
   "symbols_in_volume": [
    "AssertionError"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.cloudpickle.cloudpickle._make_skel_func": {
  "data": {
   "lineno": 1085,
   "symbols_in_volume": [
    "isinstance",
    "range",
    "sklearn.externals.joblib.externals.cloudpickle.cloudpickle._make_empty_cell",
    "sklearn.externals.joblib.externals.cloudpickle.cloudpickle.sys",
    "sklearn.externals.joblib.externals.cloudpickle.cloudpickle.types",
    "str",
    "tuple",
    "vars"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.cloudpickle.cloudpickle._modules_to_main": {
  "data": {
   "lineno": 957,
   "symbols_in_volume": [
    "Exception",
    "__import__",
    "setattr",
    "sklearn.externals.joblib.externals.cloudpickle.cloudpickle.print_exec",
    "sklearn.externals.joblib.externals.cloudpickle.cloudpickle.sys",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.cloudpickle.cloudpickle._rebuild_tornado_coroutine": {
  "data": {
   "lineno": 885,
   "symbols_in_volume": [
    "tornado.gen.coroutine"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.cloudpickle.cloudpickle._reduce_method_descriptor": {
  "data": {
   "lineno": 1157,
   "symbols_in_volume": [
    "getattr",
    "obj.__name__",
    "obj.__objclass__"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.cloudpickle.cloudpickle._rehydrate_skeleton_class": {
  "data": {
   "lineno": 1110,
   "symbols_in_volume": [
    "setattr"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.cloudpickle.cloudpickle._restore_attr": {
  "data": {
   "lineno": 942,
   "symbols_in_volume": [
    "obj",
    "setattr"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.cloudpickle.cloudpickle._walk_global_ops": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "sklearn.externals.joblib.externals.cloudpickle.cloudpickle.GLOBAL_OPS",
    "sklearn.externals.joblib.externals.cloudpickle.cloudpickle.dis"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.cloudpickle.cloudpickle.abc": {
  "data": {
   "shadows": "abc"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.cloudpickle.cloudpickle.cell_set": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "sklearn.externals.joblib.externals.cloudpickle.cloudpickle._cell_set_template_code",
    "sklearn.externals.joblib.externals.cloudpickle.cloudpickle.types"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.cloudpickle.cloudpickle.copyreg": {
  "data": {
   "shadows": "copyreg"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.cloudpickle.cloudpickle.dis": {
  "data": {
   "shadows": "dis"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.cloudpickle.cloudpickle.dump": {
  "data": {
   "lineno": 892,
   "symbols_in_volume": [
    "obj",
    "sklearn.externals.joblib.externals.cloudpickle.cloudpickle.CloudPickler"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.cloudpickle.cloudpickle.dumps": {
  "data": {
   "lineno": 905,
   "symbols_in_volume": [
    "io.BytesIO",
    "obj",
    "sklearn.externals.joblib.externals.cloudpickle.cloudpickle.CloudPickler"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.cloudpickle.cloudpickle.dynamic_subimport": {
  "data": {
   "lineno": 935,
   "symbols_in_volume": [
    "sklearn.externals.joblib.externals.cloudpickle.cloudpickle.imp",
    "vars"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.cloudpickle.cloudpickle.gen": {
  "data": {
   "shadows": "tornado.gen"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.cloudpickle.cloudpickle.imp": {
  "data": {
   "shadows": "imp"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.cloudpickle.cloudpickle.instance": {
  "data": {
   "lineno": 1001,
   "symbols_in_volume": [
    "cls"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.cloudpickle.cloudpickle.io": {
  "data": {
   "shadows": "io"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.cloudpickle.cloudpickle.is_tornado_coroutine": {
  "data": {
   "lineno": 871,
   "symbols_in_volume": [
    "hasattr",
    "sklearn.externals.joblib.externals.cloudpickle.cloudpickle.sys"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.cloudpickle.cloudpickle.islambda": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.cloudpickle.cloudpickle.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.cloudpickle.cloudpickle.load": {
  "data": {
   "lineno": 925
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.externals.cloudpickle.cloudpickle.loads": {
  "data": {
   "lineno": 926
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.externals.cloudpickle.cloudpickle.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.cloudpickle.cloudpickle.method_descriptor": {
  "data": {
   "lineno": 1155
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.externals.cloudpickle.cloudpickle.opcode": {
  "data": {
   "shadows": "opcode"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.cloudpickle.cloudpickle.operator": {
  "data": {
   "shadows": "operator"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.cloudpickle.cloudpickle.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.cloudpickle.cloudpickle.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.cloudpickle.cloudpickle.print_exec": {
  "data": {
   "lineno": 952,
   "symbols_in_volume": [
    "sklearn.externals.joblib.externals.cloudpickle.cloudpickle.sys",
    "sklearn.externals.joblib.externals.cloudpickle.cloudpickle.traceback"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.cloudpickle.cloudpickle.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.cloudpickle.cloudpickle.pystringIO": {
  "data": {
   "shadows": "io"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.cloudpickle.cloudpickle.struct": {
  "data": {
   "shadows": "struct"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.cloudpickle.cloudpickle.subimport": {
  "data": {
   "lineno": 930,
   "symbols_in_volume": [
    "__import__",
    "sklearn.externals.joblib.externals.cloudpickle.cloudpickle.sys"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.cloudpickle.cloudpickle.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.cloudpickle.cloudpickle.traceback": {
  "data": {
   "shadows": "traceback"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.cloudpickle.cloudpickle.types": {
  "data": {
   "shadows": "types"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.cloudpickle.cloudpickle.weakref": {
  "data": {
   "shadows": "weakref"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.loky": {
  "data": {},
  "type": "module"
 },
 "sklearn.externals.joblib.externals.loky.__all__": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.externals.loky.__version__": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.externals.loky._base": {
  "data": {
   "symbols_in_volume": [
    "concurrent.futures.ALL_COMPLETED",
    "concurrent.futures.FIRST_COMPLETED",
    "concurrent.futures.FIRST_EXCEPTION",
    "concurrent.futures._base.CANCELLED",
    "concurrent.futures._base.CANCELLED_AND_NOTIFIED",
    "concurrent.futures._base.FINISHED",
    "concurrent.futures._base.LOGGER",
    "concurrent.futures._base.PENDING",
    "concurrent.futures._base.RUNNING",
    "sklearn.externals.joblib.externals.loky._base.collections",
    "sklearn.externals.joblib.externals.loky._base.logging",
    "sklearn.externals.joblib.externals.loky._base.sys"
   ]
  },
  "type": "module"
 },
 "sklearn.externals.joblib.externals.loky._base.ALL_COMPLETED": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.externals.loky._base.CANCELLED": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.externals.loky._base.CANCELLED_AND_NOTIFIED": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.externals.loky._base.CancelledError": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "sklearn.externals.joblib.externals.loky._base.Error"
   ]
  },
  "type": "class"
 },
 "sklearn.externals.joblib.externals.loky._base.DoneAndNotDoneFutures": {
  "data": {
   "lineno": 258
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.externals.loky._base.Error": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "sklearn.externals.joblib.externals.loky._base.Executor": {
  "data": {
   "lineno": 539,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "sklearn.externals.joblib.externals.loky._base.Executor.__enter__": {
  "data": {
   "lineno": 610
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky._base.Executor.__exit__": {
  "data": {
   "lineno": 613
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky._base.Executor.map": {
  "data": {
   "lineno": 555,
   "symbols_in_volume": [
    "fn",
    "result_iterator",
    "sklearn.externals.joblib.externals.loky._base.time",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky._base.Executor.map.result_iterator": {
  "data": {
   "lineno": 585,
   "symbols_in_volume": [
    "sklearn.externals.joblib.externals.loky._base.time"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky._base.Executor.shutdown": {
  "data": {
   "lineno": 597
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky._base.Executor.submit": {
  "data": {
   "lineno": 543,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky._base.FINISHED": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.externals.loky._base.FIRST_COMPLETED": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.externals.loky._base.FIRST_EXCEPTION": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.externals.loky._base.Future": {
  "data": {
   "lineno": 621,
   "symbols_in_volume": [
    "concurrent.futures.Future"
   ]
  },
  "type": "class"
 },
 "sklearn.externals.joblib.externals.loky._base.Future._invoke_callbacks": {
  "data": {
   "lineno": 622,
   "symbols_in_volume": [
    "BaseException",
    "callback",
    "concurrent.futures._base.LOGGER.exception"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky._base.LOGGER": {
  "data": {
   "lineno": 65
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.externals.loky._base.PENDING": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.externals.loky._base.RUNNING": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.externals.loky._base.TimeoutError": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "sklearn.externals.joblib.externals.loky._base.Error"
   ]
  },
  "type": "class"
 },
 "sklearn.externals.joblib.externals.loky._base._AS_COMPLETED": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.externals.loky._base._AcquireFutures": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "sklearn.externals.joblib.externals.loky._base._AcquireFutures.__enter__": {
  "data": {
   "lineno": 168
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky._base._AcquireFutures.__exit__": {
  "data": {
   "lineno": 172
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky._base._AcquireFutures.__init__": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "id",
    "sorted"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky._base._AllCompletedWaiter": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "sklearn.externals.joblib.externals.loky._base._Waiter"
   ]
  },
  "type": "class"
 },
 "sklearn.externals.joblib.externals.loky._base._AllCompletedWaiter.__init__": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "sklearn.externals.joblib.externals.loky._base._AllCompletedWaiter",
    "sklearn.externals.joblib.externals.loky._base.threading",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky._base._AllCompletedWaiter._decrement_pending_calls": {
  "data": {
   "lineno": 140
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky._base._AllCompletedWaiter.add_cancelled": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "sklearn.externals.joblib.externals.loky._base._AllCompletedWaiter",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky._base._AllCompletedWaiter.add_exception": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "sklearn.externals.joblib.externals.loky._base._AllCompletedWaiter",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky._base._AllCompletedWaiter.add_result": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "sklearn.externals.joblib.externals.loky._base._AllCompletedWaiter",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky._base._AsCompletedWaiter": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "sklearn.externals.joblib.externals.loky._base._Waiter"
   ]
  },
  "type": "class"
 },
 "sklearn.externals.joblib.externals.loky._base._AsCompletedWaiter.__init__": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "sklearn.externals.joblib.externals.loky._base._AsCompletedWaiter",
    "sklearn.externals.joblib.externals.loky._base.threading",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky._base._AsCompletedWaiter.add_cancelled": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "sklearn.externals.joblib.externals.loky._base._AsCompletedWaiter",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky._base._AsCompletedWaiter.add_exception": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "sklearn.externals.joblib.externals.loky._base._AsCompletedWaiter",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky._base._AsCompletedWaiter.add_result": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "sklearn.externals.joblib.externals.loky._base._AsCompletedWaiter",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky._base._BaseFuture": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "sklearn.externals.joblib.externals.loky._base._BaseFuture.__get_result": {
  "data": {
   "lineno": 379
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky._base._BaseFuture.__init__": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": [
    "concurrent.futures._base.PENDING",
    "sklearn.externals.joblib.externals.loky._base.threading"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky._base._BaseFuture.__repr__": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": [
    "concurrent.futures._base.FINISHED",
    "id",
    "sklearn.externals.joblib.externals.loky._base._STATE_TO_DESCRIPTION_MAP"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky._base._BaseFuture.add_done_callback": {
  "data": {
   "lineno": 385,
   "symbols_in_volume": [
    "concurrent.futures._base.CANCELLED",
    "concurrent.futures._base.CANCELLED_AND_NOTIFIED",
    "concurrent.futures._base.FINISHED",
    "fn"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky._base._BaseFuture.cancel": {
  "data": {
   "lineno": 343,
   "symbols_in_volume": [
    "concurrent.futures._base.CANCELLED",
    "concurrent.futures._base.CANCELLED_AND_NOTIFIED",
    "concurrent.futures._base.FINISHED",
    "concurrent.futures._base.RUNNING"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky._base._BaseFuture.cancelled": {
  "data": {
   "lineno": 362,
   "symbols_in_volume": [
    "concurrent.futures._base.CANCELLED",
    "concurrent.futures._base.CANCELLED_AND_NOTIFIED"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky._base._BaseFuture.done": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": [
    "concurrent.futures._base.CANCELLED",
    "concurrent.futures._base.CANCELLED_AND_NOTIFIED",
    "concurrent.futures._base.FINISHED"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky._base._BaseFuture.exception": {
  "data": {
   "lineno": 437,
   "symbols_in_volume": [
    "concurrent.futures.CancelledError",
    "concurrent.futures.TimeoutError",
    "concurrent.futures._base.CANCELLED",
    "concurrent.futures._base.CANCELLED_AND_NOTIFIED",
    "concurrent.futures._base.FINISHED"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky._base._BaseFuture.result": {
  "data": {
   "lineno": 404,
   "symbols_in_volume": [
    "concurrent.futures.CancelledError",
    "concurrent.futures.TimeoutError",
    "concurrent.futures._base.CANCELLED",
    "concurrent.futures._base.CANCELLED_AND_NOTIFIED",
    "concurrent.futures._base.FINISHED"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky._base._BaseFuture.running": {
  "data": {
   "lineno": 367,
   "symbols_in_volume": [
    "concurrent.futures._base.RUNNING"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky._base._BaseFuture.set_exception": {
  "data": {
   "lineno": 526,
   "symbols_in_volume": [
    "concurrent.futures._base.FINISHED"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky._base._BaseFuture.set_result": {
  "data": {
   "lineno": 513,
   "symbols_in_volume": [
    "concurrent.futures._base.FINISHED"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky._base._BaseFuture.set_running_or_notify_cancel": {
  "data": {
   "lineno": 472,
   "symbols_in_volume": [
    "RuntimeError",
    "concurrent.futures._base.CANCELLED",
    "concurrent.futures._base.CANCELLED_AND_NOTIFIED",
    "concurrent.futures._base.LOGGER.critical",
    "concurrent.futures._base.PENDING",
    "concurrent.futures._base.RUNNING",
    "id"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky._base._FUTURE_STATES": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.externals.loky._base._FirstCompletedWaiter": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "sklearn.externals.joblib.externals.loky._base._Waiter"
   ]
  },
  "type": "class"
 },
 "sklearn.externals.joblib.externals.loky._base._FirstCompletedWaiter.add_cancelled": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "sklearn.externals.joblib.externals.loky._base._FirstCompletedWaiter",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky._base._FirstCompletedWaiter.add_exception": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "sklearn.externals.joblib.externals.loky._base._FirstCompletedWaiter",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky._base._FirstCompletedWaiter.add_result": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "sklearn.externals.joblib.externals.loky._base._FirstCompletedWaiter",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky._base._STATE_TO_DESCRIPTION_MAP": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.externals.loky._base._Waiter": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "sklearn.externals.joblib.externals.loky._base._Waiter.__init__": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "sklearn.externals.joblib.externals.loky._base.threading"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky._base._Waiter.add_cancelled": {
  "data": {
   "lineno": 91
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky._base._Waiter.add_exception": {
  "data": {
   "lineno": 88
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky._base._Waiter.add_result": {
  "data": {
   "lineno": 85
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky._base._create_and_install_waiters": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "ValueError",
    "concurrent.futures.ALL_COMPLETED",
    "concurrent.futures.FIRST_COMPLETED",
    "concurrent.futures.FIRST_EXCEPTION",
    "concurrent.futures._base.CANCELLED_AND_NOTIFIED",
    "concurrent.futures._base.FINISHED",
    "sklearn.externals.joblib.externals.loky._base._AS_COMPLETED",
    "sklearn.externals.joblib.externals.loky._base._AllCompletedWaiter",
    "sklearn.externals.joblib.externals.loky._base._AsCompletedWaiter",
    "sklearn.externals.joblib.externals.loky._base._FirstCompletedWaiter",
    "sum"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky._base.as_completed": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "concurrent.futures.TimeoutError",
    "concurrent.futures._base.CANCELLED_AND_NOTIFIED",
    "concurrent.futures._base.FINISHED",
    "len",
    "set",
    "sklearn.externals.joblib.externals.loky._base._AS_COMPLETED",
    "sklearn.externals.joblib.externals.loky._base._AcquireFutures",
    "sklearn.externals.joblib.externals.loky._base._create_and_install_waiters",
    "sklearn.externals.joblib.externals.loky._base.time"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky._base.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.loky._base.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.loky._base.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.loky._base.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.loky._base.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.loky._base.wait": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "any",
    "concurrent.futures.ALL_COMPLETED",
    "concurrent.futures.FIRST_COMPLETED",
    "concurrent.futures.FIRST_EXCEPTION",
    "concurrent.futures._base.CANCELLED_AND_NOTIFIED",
    "concurrent.futures._base.FINISHED",
    "len",
    "set",
    "sklearn.externals.joblib.externals.loky._base.DoneAndNotDoneFutures",
    "sklearn.externals.joblib.externals.loky._base._AcquireFutures",
    "sklearn.externals.joblib.externals.loky._base._create_and_install_waiters"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.backend": {
  "data": {
   "symbols_in_volume": [
    "multiprocessing.synchronize.SemLock._make_name",
    "sklearn.externals.joblib.externals.loky.backend._make_name",
    "sklearn.externals.joblib.externals.loky.backend.os",
    "sklearn.externals.joblib.externals.loky.backend.sys",
    "staticmethod"
   ]
  },
  "type": "module"
 },
 "sklearn.externals.joblib.externals.loky.backend.LOKY_PICKLER": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.externals.loky.backend.__all__": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.externals.loky.backend._make_name": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "next",
    "sklearn.externals.joblib.externals.loky.backend.os"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.backend._posix_reduction": {
  "data": {
   "symbols_in_volume": [
    "_multiprocessing.Connection",
    "hasattr",
    "multiprocessing.reduction.reduce_connection",
    "multiprocessing.reduction.reduce_socket",
    "register",
    "sklearn.externals.joblib.externals.loky.backend._posix_reduction._socket",
    "sklearn.externals.joblib.externals.loky.backend._posix_reduction.socket",
    "sklearn.externals.joblib.externals.loky.backend._posix_reduction.sys"
   ]
  },
  "type": "module"
 },
 "sklearn.externals.joblib.externals.loky.backend._posix_reduction.Connection": {
  "data": {
   "shadows": "_multiprocessing.Connection"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.loky.backend._posix_reduction.DupFd": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "TypeError",
    "get_spawning_popen",
    "multiprocessing.resource_sharer.DupFd",
    "sklearn.externals.joblib.externals.loky.backend._posix_reduction.HAVE_SEND_HANDLE",
    "sklearn.externals.joblib.externals.loky.backend._posix_reduction.sys"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.backend._posix_reduction.HAVE_SEND_HANDLE": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.externals.loky.backend._posix_reduction._mk_inheritable": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "sklearn.externals.joblib.externals.loky.backend._posix_reduction.os",
    "sklearn.externals.joblib.externals.loky.backend._posix_reduction.sys"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.backend._posix_reduction._rebuild_socket": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "sklearn.externals.joblib.externals.loky.backend._posix_reduction.socket",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.backend._posix_reduction._reduce_socket": {
  "data": {
   "shadows": "multiprocessing.reduction.reduce_socket"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.loky.backend._posix_reduction._socket": {
  "data": {
   "shadows": "_socket"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.loky.backend._posix_reduction.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.loky.backend._posix_reduction.rebuild_connection": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "_multiprocessing.Connection"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.backend._posix_reduction.reduce_connection": {
  "data": {
   "shadows": "multiprocessing.reduction.reduce_connection"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.loky.backend._posix_reduction.resource_sharer": {
  "data": {
   "shadows": "multiprocessing.resource_sharer"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.loky.backend._posix_reduction.socket": {
  "data": {
   "shadows": "socket"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.loky.backend._posix_reduction.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.loky.backend._posix_wait": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "ctypes.util.find_library",
    "hasattr",
    "sklearn.externals.joblib.externals.loky.backend._posix_wait.CoreServices",
    "sklearn.externals.joblib.externals.loky.backend._posix_wait.SYSTEM",
    "sklearn.externals.joblib.externals.loky.backend._posix_wait.absolute_to_nanoseconds",
    "sklearn.externals.joblib.externals.loky.backend._posix_wait.clock_gettime",
    "sklearn.externals.joblib.externals.loky.backend._posix_wait.ctypes",
    "sklearn.externals.joblib.externals.loky.backend._posix_wait.libSystem",
    "sklearn.externals.joblib.externals.loky.backend._posix_wait.librt",
    "sklearn.externals.joblib.externals.loky.backend._posix_wait.mach_absolute_time",
    "sklearn.externals.joblib.externals.loky.backend._posix_wait.platform",
    "sklearn.externals.joblib.externals.loky.backend._posix_wait.select",
    "sklearn.externals.joblib.externals.loky.backend._posix_wait.timespec"
   ]
  },
  "type": "module"
 },
 "sklearn.externals.joblib.externals.loky.backend._posix_wait.CLOCK_MONOTONIC": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.externals.loky.backend._posix_wait.CoreServices": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.externals.loky.backend._posix_wait.SYSTEM": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.externals.loky.backend._posix_wait._poll": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "sklearn.externals.joblib.externals.loky.backend._posix_wait.select"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.backend._posix_wait.absolute_to_nanoseconds": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.externals.loky.backend._posix_wait.clock_gettime": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.externals.loky.backend._posix_wait.ctypes": {
  "data": {
   "shadows": "ctypes"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.loky.backend._posix_wait.errno": {
  "data": {
   "shadows": "errno"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.loky.backend._posix_wait.find_library": {
  "data": {
   "shadows": "ctypes.util.find_library"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.loky.backend._posix_wait.libSystem": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.externals.loky.backend._posix_wait.librt": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.externals.loky.backend._posix_wait.mach_absolute_time": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.externals.loky.backend._posix_wait.monotonic": {
  "data": {
   "shadows": "time.time"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.loky.backend._posix_wait.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.loky.backend._posix_wait.platform": {
  "data": {
   "shadows": "platform"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.loky.backend._posix_wait.select": {
  "data": {
   "shadows": "select"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.loky.backend._posix_wait.socket": {
  "data": {
   "shadows": "socket"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.loky.backend._posix_wait.timespec": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "sklearn.externals.joblib.externals.loky.backend._posix_wait.ctypes"
   ]
  },
  "type": "class"
 },
 "sklearn.externals.joblib.externals.loky.backend._posix_wait.wait": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "IOError",
    "OSError",
    "sklearn.externals.joblib.externals.loky.backend._posix_wait._poll",
    "sklearn.externals.joblib.externals.loky.backend._posix_wait.errno",
    "sklearn.externals.joblib.externals.loky.backend._posix_wait.socket",
    "time.time"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.backend._win_reduction": {
  "data": {
   "symbols_in_volume": [
    "_multiprocessing.win32.CloseHandle",
    "multiprocessing.connection.PipeConnection",
    "multiprocessing.reduction._reduce_socket",
    "multiprocessing.reduction.reduce_pipe_connection",
    "multiprocessing.reduction.reduce_socket",
    "register",
    "sklearn.externals.joblib.externals.loky.backend._win_reduction.reduce_pipe_connection",
    "sklearn.externals.joblib.externals.loky.backend._win_reduction.reduce_socket",
    "sklearn.externals.joblib.externals.loky.backend._win_reduction.socket",
    "sklearn.externals.joblib.externals.loky.backend._win_reduction.sys"
   ]
  },
  "type": "module"
 },
 "sklearn.externals.joblib.externals.loky.backend._win_reduction.DupHandle": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "sklearn.externals.joblib.externals.loky.backend._win_reduction.DupHandle.__init__": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "sklearn.externals.joblib.externals.loky.backend._win_reduction._winapi",
    "sklearn.externals.joblib.externals.loky.backend._win_reduction.os"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.backend._win_reduction.DupHandle.detach": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "sklearn.externals.joblib.externals.loky.backend._win_reduction._winapi",
    "sklearn.externals.joblib.externals.loky.backend._win_reduction.os"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.backend._win_reduction.PipeConnection": {
  "data": {
   "shadows": "multiprocessing.connection.PipeConnection"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.loky.backend._win_reduction._rebuild_socket": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "multiprocessing.reduction.rebuild_handle",
    "sklearn.externals.joblib.externals.loky.backend._win_reduction.close",
    "sklearn.externals.joblib.externals.loky.backend._win_reduction.fromfd"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.backend._win_reduction._reduce_socket": {
  "data": {
   "shadows": "multiprocessing.reduction._reduce_socket"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.loky.backend._win_reduction._winapi": {
  "data": {
   "shadows": "_winapi"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.loky.backend._win_reduction.close": {
  "data": {
   "lineno": 73
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.externals.loky.backend._win_reduction.fromfd": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "sklearn.externals.joblib.externals.loky.backend._win_reduction.socket"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.backend._win_reduction.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.loky.backend._win_reduction.rebuild_handle": {
  "data": {
   "shadows": "multiprocessing.reduction.rebuild_handle"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.loky.backend._win_reduction.rebuild_pipe_connection": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "multiprocessing.connection.PipeConnection"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.backend._win_reduction.reduce_handle": {
  "data": {
   "shadows": "multiprocessing.reduction.reduce_handle"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.loky.backend._win_reduction.reduce_pipe_connection": {
  "data": {
   "shadows": "multiprocessing.reduction.reduce_pipe_connection"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.loky.backend._win_reduction.reduce_socket": {
  "data": {
   "shadows": "multiprocessing.reduction.reduce_socket"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.loky.backend._win_reduction.socket": {
  "data": {
   "shadows": "socket"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.loky.backend._win_reduction.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.loky.backend._win_reduction.win32": {
  "data": {
   "shadows": "_multiprocessing.win32"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.loky.backend._win_wait": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "sklearn.externals.joblib.externals.loky.backend._win_wait.GetTickCount64",
    "sklearn.externals.joblib.externals.loky.backend._win_wait.ctypes",
    "sklearn.externals.joblib.externals.loky.backend._win_wait.sys"
   ]
  },
  "type": "module"
 },
 "sklearn.externals.joblib.externals.loky.backend._win_wait.GetTickCount64": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.externals.loky.backend._win_wait.WAIT_OBJECT_0": {
  "data": {
   "shadows": "_subprocess.WAIT_OBJECT_0"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.loky.backend._win_wait.WaitForSingleObject": {
  "data": {
   "shadows": "_subprocess.WaitForSingleObject"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.loky.backend._win_wait.ctypes": {
  "data": {
   "shadows": "ctypes"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.loky.backend._win_wait.monotonic": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "sklearn.externals.joblib.externals.loky.backend._win_wait.GetTickCount64"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.backend._win_wait.sleep": {
  "data": {
   "shadows": "time.sleep"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.loky.backend._win_wait.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.loky.backend._win_wait.wait": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "_subprocess.WAIT_OBJECT_0",
    "_subprocess.WaitForSingleObject",
    "int",
    "len",
    "time.monotonic",
    "time.sleep",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.backend.compat": {
  "data": {
   "symbols_in_volume": [
    "sklearn.externals.joblib.externals.loky.backend.compat.sys"
   ]
  },
  "type": "module"
 },
 "sklearn.externals.joblib.externals.loky.backend.compat.BaseProcess": {
  "data": {
   "shadows": "multiprocessing.process.Process"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.loky.backend.compat.PicklingError": {
  "data": {
   "shadows": "pickle.PicklingError"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.loky.backend.compat.queue": {
  "data": {
   "shadows": "Queue"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.loky.backend.compat.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.loky.backend.compat_posix": {
  "data": {
   "symbols_in_volume": [
    "sklearn.externals.joblib.externals.loky.backend.compat_posix.sys"
   ]
  },
  "type": "module"
 },
 "sklearn.externals.joblib.externals.loky.backend.compat_posix.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.loky.backend.compat_posix.wait": {
  "data": {
   "shadows": "multiprocessing.connection.wait"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.loky.backend.compat_win32": {
  "data": {
   "symbols_in_volume": [
    "sklearn.externals.joblib.externals.loky.backend.compat_win32.sys"
   ]
  },
  "type": "module"
 },
 "sklearn.externals.joblib.externals.loky.backend.compat_win32.Popen": {
  "data": {
   "shadows": "multiprocessing.forking.Popen"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.loky.backend.compat_win32._winapi": {
  "data": {
   "lineno": 33
  },
  "type": "class"
 },
 "sklearn.externals.joblib.externals.loky.backend.compat_win32._winapi.CloseHandle": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "_multiprocessing.win32.CloseHandle",
    "int",
    "isinstance",
    "sklearn.externals.joblib.externals.loky.backend.compat_win32._winapi",
    "sklearn.externals.joblib.externals.loky.backend.compat_win32.numbers",
    "sklearn.externals.joblib.externals.loky.backend.compat_win32.sys",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.backend.compat_win32._winapi.CreatePipe": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "sklearn.externals.joblib.externals.loky.backend.compat_win32._winapi",
    "sklearn.externals.joblib.externals.loky.backend.compat_win32.msvcrt",
    "sklearn.externals.joblib.externals.loky.backend.compat_win32.os",
    "sklearn.externals.joblib.externals.loky.backend.compat_win32.sys",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.backend.compat_win32.msvcrt": {
  "data": {
   "shadows": "msvcrt"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.loky.backend.compat_win32.numbers": {
  "data": {
   "shadows": "numbers"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.loky.backend.compat_win32.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.loky.backend.compat_win32.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.loky.backend.compat_win32.wait": {
  "data": {
   "shadows": "multiprocessing.connection.wait"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.loky.backend.compat_win32.win32": {
  "data": {
   "shadows": "_multiprocessing.win32"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.loky.backend.compat_win32.win_api": {
  "data": {
   "shadows": "_winapi"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.loky.backend.context": {
  "data": {
   "symbols_in_volume": [
    "multiprocessing.context.BaseContext",
    "multiprocessing.context._concrete_contexts",
    "multiprocessing.forking.Popen._tls",
    "object",
    "sklearn.externals.joblib.externals.loky.backend.context.LokyContext",
    "sklearn.externals.joblib.externals.loky.backend.context.LokyInitMainContext",
    "sklearn.externals.joblib.externals.loky.backend.context.START_METHODS",
    "sklearn.externals.joblib.externals.loky.backend.context.ctx_loky",
    "sklearn.externals.joblib.externals.loky.backend.context.sys",
    "sklearn.externals.joblib.externals.loky.backend.context.threading"
   ]
  },
  "type": "module"
 },
 "sklearn.externals.joblib.externals.loky.backend.context.BaseContext": {
  "data": {
   "lineno": 63
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.externals.loky.backend.context.LokyContext": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "multiprocessing.Manager",
    "multiprocessing.context.BaseContext",
    "multiprocessing.synchronize.BoundedSemaphore",
    "multiprocessing.synchronize.Condition",
    "multiprocessing.synchronize.Event",
    "multiprocessing.synchronize.Lock",
    "multiprocessing.synchronize.RLock",
    "multiprocessing.synchronize.Semaphore",
    "sklearn.externals.joblib.externals.loky.backend.context.cpu_count",
    "sklearn.externals.joblib.externals.loky.backend.context.sys",
    "staticmethod"
   ]
  },
  "type": "class"
 },
 "sklearn.externals.joblib.externals.loky.backend.context.LokyContext.BoundedSemaphore": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "BoundedSemaphore"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.backend.context.LokyContext.Condition": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "Condition"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.backend.context.LokyContext.Event": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "Event"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.backend.context.LokyContext.Lock": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "Lock"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.backend.context.LokyContext.Manager": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "LokyManager"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.backend.context.LokyContext.Pipe": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "multiprocessing.Pipe"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.backend.context.LokyContext.Queue": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "Queue"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.backend.context.LokyContext.RLock": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "RLock"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.backend.context.LokyContext.Semaphore": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "multiprocessing.synchronize.Semaphore"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.backend.context.LokyContext.SimpleQueue": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "SimpleQueue"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.backend.context.LokyContext.get_context": {
  "data": {
   "lineno": 175
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.backend.context.LokyContext.get_start_method": {
  "data": {
   "lineno": 178
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.backend.context.LokyInitMainContext": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "sklearn.externals.joblib.externals.loky.backend.context.LokyContext"
   ]
  },
  "type": "class"
 },
 "sklearn.externals.joblib.externals.loky.backend.context.Popen": {
  "data": {
   "shadows": "multiprocessing.forking.Popen"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.loky.backend.context.START_METHODS": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.externals.loky.backend.context._DEFAULT_START_METHOD": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.externals.loky.backend.context._tls": {
  "data": {
   "lineno": 60
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.externals.loky.backend.context.assert_spawning": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "RuntimeError",
    "multiprocessing.context.get_spawning_popen",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.backend.context.cpu_count": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "NotImplementedError",
    "hasattr",
    "int",
    "len",
    "max",
    "min",
    "multiprocessing.cpu_count",
    "open",
    "sklearn.externals.joblib.externals.loky.backend.context.math",
    "sklearn.externals.joblib.externals.loky.backend.context.os"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.backend.context.ctx_loky": {
  "data": {
   "lineno": 263
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.externals.loky.backend.context.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.loky.backend.context.get_context": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.externals.joblib.externals.loky.backend.context.LokyContext",
    "sklearn.externals.joblib.externals.loky.backend.context.LokyInitMainContext",
    "sklearn.externals.joblib.externals.loky.backend.context.START_METHODS",
    "sklearn.externals.joblib.externals.loky.backend.context._DEFAULT_START_METHOD"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.backend.context.get_spawning_popen": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "getattr",
    "sklearn.externals.joblib.externals.loky.backend.context._tls",
    "sklearn.externals.joblib.externals.loky.backend.context.popen_attr"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.backend.context.get_start_method": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "sklearn.externals.joblib.externals.loky.backend.context._DEFAULT_START_METHOD"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.backend.context.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.loky.backend.context.mp": {
  "data": {
   "shadows": "multiprocessing"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.loky.backend.context.mp_get_context": {
  "data": {
   "shadows": "multiprocessing.get_context"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.loky.backend.context.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.loky.backend.context.popen_attr": {
  "data": {
   "lineno": 61
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.externals.loky.backend.context.set_spawning_popen": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "setattr",
    "sklearn.externals.joblib.externals.loky.backend.context._tls",
    "sklearn.externals.joblib.externals.loky.backend.context.popen_attr"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.backend.context.set_start_method": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "RuntimeError",
    "sklearn.externals.joblib.externals.loky.backend.context.START_METHODS",
    "sklearn.externals.joblib.externals.loky.backend.context._DEFAULT_START_METHOD"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.backend.context.synchronize": {
  "data": {
   "shadows": "multiprocessing.synchronize"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.loky.backend.context.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.loky.backend.context.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.loky.backend.context.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.loky.backend.fork_exec": {
  "data": {
   "symbols_in_volume": [
    "OSError",
    "sklearn.externals.joblib.externals.loky.backend.fork_exec.sys"
   ]
  },
  "type": "module"
 },
 "sklearn.externals.joblib.externals.loky.backend.fork_exec.FileNotFoundError": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.externals.loky.backend.fork_exec.close_fds": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "OSError",
    "int",
    "range",
    "set",
    "sklearn.externals.joblib.externals.loky.backend.fork_exec.FileNotFoundError",
    "sklearn.externals.joblib.externals.loky.backend.fork_exec.os",
    "sklearn.externals.joblib.externals.loky.backend.fork_exec.resource"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.backend.fork_exec.fork_exec": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "sklearn.externals.joblib.externals.loky.backend.fork_exec.close_fds",
    "sklearn.externals.joblib.externals.loky.backend.fork_exec.os",
    "sklearn.externals.joblib.externals.loky.backend.fork_exec.sys"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.backend.fork_exec.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.loky.backend.fork_exec.resource": {
  "data": {
   "shadows": "resource"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.loky.backend.fork_exec.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.loky.backend.managers": {
  "data": {},
  "type": "module"
 },
 "sklearn.externals.joblib.externals.loky.backend.managers.LokyManager": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "multiprocessing.managers.SyncManager"
   ]
  },
  "type": "class"
 },
 "sklearn.externals.joblib.externals.loky.backend.managers.LokyManager.start": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "TypeError",
    "bytes",
    "hasattr",
    "multiprocessing.Pipe",
    "multiprocessing.managers.State.INITIAL",
    "multiprocessing.managers.State.STARTED",
    "multiprocessing.util.Finalize",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.backend.managers.Process": {
  "data": {
   "shadows": "LokyProcess"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.loky.backend.managers.State": {
  "data": {
   "shadows": "multiprocessing.managers.State"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.loky.backend.managers.SyncManager": {
  "data": {
   "shadows": "multiprocessing.managers.SyncManager"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.loky.backend.managers.mp": {
  "data": {
   "shadows": "multiprocessing"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.loky.backend.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.loky.backend.popen_loky_posix": {
  "data": {
   "symbols_in_volume": [
    "Exception",
    "OSError",
    "__name__",
    "dict",
    "int",
    "multiprocessing.process.current_process",
    "print",
    "sklearn.externals.joblib.externals.loky.backend.popen_loky_posix.__all__",
    "sklearn.externals.joblib.externals.loky.backend.popen_loky_posix.argparse",
    "sklearn.externals.joblib.externals.loky.backend.popen_loky_posix.args",
    "sklearn.externals.joblib.externals.loky.backend.popen_loky_posix.exitcode",
    "sklearn.externals.joblib.externals.loky.backend.popen_loky_posix.os",
    "sklearn.externals.joblib.externals.loky.backend.popen_loky_posix.parser",
    "sklearn.externals.joblib.externals.loky.backend.popen_loky_posix.pickle",
    "sklearn.externals.joblib.externals.loky.backend.popen_loky_posix.prep_data",
    "sklearn.externals.joblib.externals.loky.backend.popen_loky_posix.process_obj",
    "sklearn.externals.joblib.externals.loky.backend.popen_loky_posix.sys",
    "sklearn.externals.joblib.externals.loky.backend.popen_loky_posix.traceback",
    "str"
   ]
  },
  "type": "module"
 },
 "sklearn.externals.joblib.externals.loky.backend.popen_loky_posix.BytesIO": {
  "data": {
   "shadows": "io.BytesIO"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.loky.backend.popen_loky_posix.Popen": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "object",
    "sklearn.externals.joblib.externals.loky.backend.popen_loky_posix._DupFd",
    "sklearn.externals.joblib.externals.loky.backend.popen_loky_posix.sys"
   ]
  },
  "type": "class"
 },
 "sklearn.externals.joblib.externals.loky.backend.popen_loky_posix.Popen.__init__": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "sklearn.externals.joblib.externals.loky.backend.popen_loky_posix.sys"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.backend.popen_loky_posix.Popen._launch": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "fork_exec",
    "getattr",
    "hasattr",
    "io.BytesIO",
    "multiprocessing.util.Finalize",
    "multiprocessing.util.debug",
    "set_spawning_popen",
    "sklearn.externals.joblib.externals.loky.backend.popen_loky_posix.os",
    "sklearn.externals.joblib.externals.loky.backend.popen_loky_posix.sys",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.backend.popen_loky_posix.Popen.duplicate_for_child": {
  "data": {
   "lineno": 62
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.backend.popen_loky_posix.Popen.poll": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "OSError",
    "sklearn.externals.joblib.externals.loky.backend.popen_loky_posix.os"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.backend.popen_loky_posix.Popen.terminate": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "OSError",
    "sklearn.externals.joblib.externals.loky.backend.popen_loky_posix.ProcessLookupError",
    "sklearn.externals.joblib.externals.loky.backend.popen_loky_posix.os",
    "sklearn.externals.joblib.externals.loky.backend.popen_loky_posix.signal"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.backend.popen_loky_posix.Popen.thread_is_spawning": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.backend.popen_loky_posix.Popen.wait": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "min",
    "multiprocessing.connection.wait",
    "sklearn.externals.joblib.externals.loky.backend.popen_loky_posix.os",
    "sklearn.externals.joblib.externals.loky.backend.popen_loky_posix.sys",
    "sklearn.externals.joblib.externals.loky.backend.popen_loky_posix.time"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.backend.popen_loky_posix.ProcessLookupError": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.externals.loky.backend.popen_loky_posix._DupFd": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "sklearn.externals.joblib.externals.loky.backend.popen_loky_posix._DupFd.__init__": {
  "data": {
   "lineno": 31
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.backend.popen_loky_posix._DupFd.detach": {
  "data": {
   "lineno": 34
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.backend.popen_loky_posix.__all__": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.externals.loky.backend.popen_loky_posix.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.loky.backend.popen_loky_posix.args": {
  "data": {
   "lineno": 188
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.externals.loky.backend.popen_loky_posix.exitcode": {
  "data": {
   "lineno": 204
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.externals.loky.backend.popen_loky_posix.info": {
  "data": {
   "lineno": 190
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.externals.loky.backend.popen_loky_posix.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.loky.backend.popen_loky_posix.parser": {
  "data": {
   "lineno": 180
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.externals.loky.backend.popen_loky_posix.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.loky.backend.popen_loky_posix.prep_data": {
  "data": {
   "lineno": 198
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.externals.loky.backend.popen_loky_posix.process": {
  "data": {
   "shadows": "multiprocessing.process"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.loky.backend.popen_loky_posix.process_obj": {
  "data": {
   "lineno": 200
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.externals.loky.backend.popen_loky_posix.signal": {
  "data": {
   "shadows": "signal"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.loky.backend.popen_loky_posix.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.loky.backend.popen_loky_posix.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.loky.backend.popen_loky_posix.traceback": {
  "data": {
   "shadows": "traceback"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.loky.backend.popen_loky_posix.util": {
  "data": {
   "shadows": "multiprocessing.util"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.loky.backend.popen_loky_posix.wait": {
  "data": {
   "shadows": "multiprocessing.connection.wait"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.loky.backend.popen_loky_win32": {
  "data": {
   "symbols_in_volume": [
    "getattr",
    "object",
    "sklearn.externals.joblib.externals.loky.backend.popen_loky_win32.sys"
   ]
  },
  "type": "module"
 },
 "sklearn.externals.joblib.externals.loky.backend.popen_loky_win32.Popen": {
  "data": {
   "lineno": 38
  },
  "type": "class"
 },
 "sklearn.externals.joblib.externals.loky.backend.popen_loky_win32.Popen.__init__": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "BaseException",
    "IOError",
    "getattr",
    "int",
    "multiprocessing.util.Finalize",
    "multiprocessing.util.debug",
    "os.fdopen",
    "set_spawning_popen",
    "sklearn.externals.joblib.externals.loky.backend.popen_loky_win32.Popen",
    "sklearn.externals.joblib.externals.loky.backend.popen_loky_win32.get_command_line",
    "sklearn.externals.joblib.externals.loky.backend.popen_loky_win32.msvcrt",
    "sklearn.externals.joblib.externals.loky.backend.popen_loky_win32.os",
    "sklearn.externals.joblib.externals.loky.backend.popen_loky_win32.sys"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.backend.popen_loky_win32.Popen.duplicate_for_child": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "get_spawning_popen"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.backend.popen_loky_win32.TERMINATE": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.externals.loky.backend.popen_loky_win32.WINEXE": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.externals.loky.backend.popen_loky_win32.WINSERVICE": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.externals.loky.backend.popen_loky_win32._Popen": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.externals.loky.backend.popen_loky_win32.__all__": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.externals.loky.backend.popen_loky_win32.get_command_line": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "getattr",
    "multiprocessing.util._args_from_interpreter_flags",
    "sklearn.externals.joblib.externals.loky.backend.popen_loky_win32.sys"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.backend.popen_loky_win32.is_forking": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.backend.popen_loky_win32.load": {
  "data": {
   "shadows": "pickle.load"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.loky.backend.popen_loky_win32.main": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "exit",
    "int",
    "multiprocessing.process.current_process",
    "pickle.load",
    "sklearn.externals.joblib.externals.loky.backend.popen_loky_win32.is_forking",
    "sklearn.externals.joblib.externals.loky.backend.popen_loky_win32.msvcrt",
    "sklearn.externals.joblib.externals.loky.backend.popen_loky_win32.os",
    "sklearn.externals.joblib.externals.loky.backend.popen_loky_win32.sys"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.backend.popen_loky_win32.msvcrt": {
  "data": {
   "shadows": "msvcrt"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.loky.backend.popen_loky_win32.open": {
  "data": {
   "shadows": "os.fdopen"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.loky.backend.popen_loky_win32.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.loky.backend.popen_loky_win32.process": {
  "data": {
   "shadows": "multiprocessing.process"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.loky.backend.popen_loky_win32.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.loky.backend.popen_loky_win32.util": {
  "data": {
   "shadows": "multiprocessing.util"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.loky.backend.process": {
  "data": {},
  "type": "module"
 },
 "sklearn.externals.joblib.externals.loky.backend.process.AuthenticationKey": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "bytes"
   ]
  },
  "type": "class"
 },
 "sklearn.externals.joblib.externals.loky.backend.process.AuthenticationKey.__reduce__": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "RuntimeError",
    "TypeError",
    "assert_spawning",
    "bytes",
    "sklearn.externals.joblib.externals.loky.backend.process.AuthenticationKey"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.backend.process.LokyInitMainProcess": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "sklearn.externals.joblib.externals.loky.backend.process.LokyProcess"
   ]
  },
  "type": "class"
 },
 "sklearn.externals.joblib.externals.loky.backend.process.LokyInitMainProcess.__init__": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "sklearn.externals.joblib.externals.loky.backend.process.LokyInitMainProcess",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.backend.process.LokyProcess": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "sklearn.externals.joblib.externals.loky.backend.process.sys"
   ]
  },
  "type": "class"
 },
 "sklearn.externals.joblib.externals.loky.backend.process.LokyProcess._Popen": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "Popen",
    "sklearn.externals.joblib.externals.loky.backend.process.sys",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.backend.process.LokyProcess.__init__": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "sklearn.externals.joblib.externals.loky.backend.process.LokyProcess",
    "sklearn.externals.joblib.externals.loky.backend.process.sys",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.backend.process.LokyProcess._bootstrap": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "set_start_method",
    "sklearn.externals.joblib.externals.loky.backend.process.LokyProcess",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.backend.process.LokyProcess.authkey": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "sklearn.externals.joblib.externals.loky.backend.process.AuthenticationKey"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.backend.process.LokyProcess.sentinel": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "AttributeError",
    "ValueError",
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.backend.process.LokyProcess.start": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "multiprocessing.process._cleanup",
    "multiprocessing.process._current_process._children.add",
    "sklearn.externals.joblib.externals.loky.backend.process.os"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.backend.process._cleanup": {
  "data": {
   "shadows": "multiprocessing.process._cleanup"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.loky.backend.process._current_process": {
  "data": {
   "shadows": "multiprocessing.process._current_process"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.loky.backend.process.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.loky.backend.process.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.loky.backend.queues": {
  "data": {},
  "type": "module"
 },
 "sklearn.externals.joblib.externals.loky.backend.queues.Full": {
  "data": {
   "shadows": "multiprocessing.queues.Full"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.loky.backend.queues.Queue": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "multiprocessing.queues.Queue",
    "sklearn.externals.joblib.externals.loky.backend.queues.sys"
   ]
  },
  "type": "class"
 },
 "sklearn.externals.joblib.externals.loky.backend.queues.Queue.__getstate__": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "assert_spawning"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.backend.queues.Queue.__init__": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "get_context",
    "multiprocessing.connection.Pipe",
    "multiprocessing.queues.Queue._after_fork",
    "multiprocessing.synchronize.SEM_VALUE_MAX",
    "multiprocessing.util.register_after_fork",
    "sklearn.externals.joblib.externals.loky.backend.queues.os",
    "sklearn.externals.joblib.externals.loky.backend.queues.sys",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.backend.queues.Queue.__setstate__": {
  "data": {
   "lineno": 71
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.backend.queues.Queue._after_fork": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "multiprocessing.queues.Queue",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.backend.queues.Queue._feed": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "BaseException",
    "IndexError",
    "bpopleft",
    "close",
    "getattr",
    "multiprocessing.queues._sentinel",
    "multiprocessing.util.debug",
    "multiprocessing.util.info",
    "multiprocessing.util.is_exiting",
    "nacquire",
    "nrelease",
    "nwait",
    "onerror",
    "send_bytes",
    "sklearn.externals.joblib.externals.loky.backend.queues.errno",
    "sklearn.externals.joblib.externals.loky.backend.queues.sys",
    "staticmethod",
    "wacquire",
    "wrelease"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.backend.queues.Queue._on_queue_feeder_error": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "sklearn.externals.joblib.externals.loky.backend.queues.traceback"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.backend.queues.Queue._start_thread": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "multiprocessing.queues.Queue._feed",
    "multiprocessing.queues.Queue._finalize_close",
    "multiprocessing.queues.Queue._finalize_join",
    "multiprocessing.util.Finalize",
    "multiprocessing.util.debug",
    "sklearn.externals.joblib.externals.loky.backend.queues.os",
    "sklearn.externals.joblib.externals.loky.backend.queues.threading",
    "sklearn.externals.joblib.externals.loky.backend.queues.weakref"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.backend.queues.SEM_VALUE_MAX": {
  "data": {
   "shadows": "multiprocessing.synchronize.SEM_VALUE_MAX"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.loky.backend.queues.SimpleQueue": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "multiprocessing.queues.SimpleQueue",
    "sklearn.externals.joblib.externals.loky.backend.queues.sys"
   ]
  },
  "type": "class"
 },
 "sklearn.externals.joblib.externals.loky.backend.queues.SimpleQueue.__getstate__": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "assert_spawning"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.backend.queues.SimpleQueue.__init__": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "get_context",
    "multiprocessing.connection.Pipe",
    "sklearn.externals.joblib.externals.loky.backend.queues.sys",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.backend.queues.SimpleQueue.__setstate__": {
  "data": {
   "lineno": 219
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.backend.queues.SimpleQueue.get": {
  "data": {
   "lineno": 226
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.backend.queues.SimpleQueue.put": {
  "data": {
   "lineno": 233
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.backend.queues.__all__": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.externals.loky.backend.queues._sentinel": {
  "data": {
   "shadows": "multiprocessing.queues._sentinel"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.loky.backend.queues.connection": {
  "data": {
   "shadows": "multiprocessing.connection"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.loky.backend.queues.errno": {
  "data": {
   "shadows": "errno"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.loky.backend.queues.mp_Queue": {
  "data": {
   "shadows": "multiprocessing.queues.Queue"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.loky.backend.queues.mp_SimpleQueue": {
  "data": {
   "shadows": "multiprocessing.queues.SimpleQueue"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.loky.backend.queues.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.loky.backend.queues.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.loky.backend.queues.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.loky.backend.queues.traceback": {
  "data": {
   "shadows": "traceback"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.loky.backend.queues.util": {
  "data": {
   "shadows": "multiprocessing.util"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.loky.backend.queues.weakref": {
  "data": {
   "shadows": "weakref"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.loky.backend.reduction": {
  "data": {
   "symbols_in_volume": [
    "AttributeError",
    "ImportError",
    "dill.Pickler",
    "hasattr",
    "importlib.import_module",
    "int.__add__",
    "list.append",
    "multiprocessing.util.debug",
    "sklearn.externals.joblib.externals.loky.backend.reduction._C",
    "sklearn.externals.joblib.externals.loky.backend.reduction._LokyPickler",
    "sklearn.externals.joblib.externals.loky.backend.reduction._reduce_method",
    "sklearn.externals.joblib.externals.loky.backend.reduction._reduce_method_descriptor",
    "sklearn.externals.joblib.externals.loky.backend.reduction._reduce_partial",
    "sklearn.externals.joblib.externals.loky.backend.reduction.functools",
    "sklearn.externals.joblib.externals.loky.backend.reduction.mpickle",
    "sklearn.externals.joblib.externals.loky.backend.reduction.register",
    "sklearn.externals.joblib.externals.loky.backend.reduction.sys",
    "sklearn.externals.joblib.externals.loky.backend.reduction.warnings",
    "type"
   ]
  },
  "type": "module"
 },
 "sklearn.externals.joblib.externals.loky.backend.reduction.CustomizableLokyPickler": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "pickle.Pickler"
   ]
  },
  "type": "class"
 },
 "sklearn.externals.joblib.externals.loky.backend.reduction.CustomizableLokyPickler.__init__": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "hasattr",
    "pickle.HIGHEST_PROTOCOL",
    "pickle.Pickler",
    "pickle.Pickler.__init__",
    "reduce_func",
    "sklearn.externals.joblib.externals.loky.backend.reduction._LokyPickler",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.backend.reduction.CustomizableLokyPickler.dumps": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "classmethod",
    "cls",
    "sklearn.externals.joblib.externals.loky.backend.reduction.io",
    "sklearn.externals.joblib.externals.loky.backend.reduction.sys"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.backend.reduction.CustomizableLokyPickler.loads": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "classmethod",
    "isinstance",
    "pickle.loads",
    "sklearn.externals.joblib.externals.loky.backend.reduction.io",
    "sklearn.externals.joblib.externals.loky.backend.reduction.sys"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.backend.reduction.CustomizableLokyPickler.register": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "hasattr",
    "pickle.Pickler",
    "reduce_func",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.backend.reduction.CustomizableLokyPickler.register.dispatcher": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "reduce_func"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.backend.reduction.HIGHEST_PROTOCOL": {
  "data": {
   "shadows": "pickle.HIGHEST_PROTOCOL"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.loky.backend.reduction.Pickler": {
  "data": {
   "shadows": "pickle.Pickler"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.loky.backend.reduction._C": {
  "data": {
   "lineno": 171
  },
  "type": "class"
 },
 "sklearn.externals.joblib.externals.loky.backend.reduction._C.f": {
  "data": {
   "lineno": 172
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.backend.reduction._C.h": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.backend.reduction._LokyPickler": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "hasattr",
    "pickle.Pickler",
    "pickle.Pickler.dispatch.copy",
    "sklearn.externals.joblib.externals.loky.backend.reduction.copyreg"
   ]
  },
  "type": "class"
 },
 "sklearn.externals.joblib.externals.loky.backend.reduction._LokyPickler.register": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "classmethod",
    "hasattr",
    "pickle.Pickler",
    "reduce_func",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.backend.reduction._LokyPickler.register.dispatcher": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "reduce_func"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.backend.reduction._rebuild_partial": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "sklearn.externals.joblib.externals.loky.backend.reduction.functools"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.backend.reduction._reduce_method": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.backend.reduction._reduce_method_descriptor": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.backend.reduction._reduce_partial": {
  "data": {
   "lineno": 194
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.backend.reduction.copyreg": {
  "data": {
   "shadows": "copyreg"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.loky.backend.reduction.dump": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "sklearn.externals.joblib.externals.loky.backend.reduction.CustomizableLokyPickler"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.backend.reduction.duplicate": {
  "data": {
   "shadows": "multiprocessing.forking.duplicate"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.loky.backend.reduction.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.loky.backend.reduction.import_module": {
  "data": {
   "shadows": "importlib.import_module"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.loky.backend.reduction.io": {
  "data": {
   "shadows": "io"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.loky.backend.reduction.loads": {
  "data": {
   "shadows": "pickle.loads"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.loky.backend.reduction.mpickle": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.externals.loky.backend.reduction.register": {
  "data": {
   "lineno": 160
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.externals.loky.backend.reduction.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.loky.backend.reduction.util": {
  "data": {
   "shadows": "multiprocessing.util"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.loky.backend.reduction.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.loky.backend.semaphore_tracker": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "sklearn.externals.joblib.externals.loky.backend.semaphore_tracker.SemaphoreTracker",
    "sklearn.externals.joblib.externals.loky.backend.semaphore_tracker._semaphore_tracker"
   ]
  },
  "type": "module"
 },
 "sklearn.externals.joblib.externals.loky.backend.semaphore_tracker.SemaphoreTracker": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "sklearn.externals.joblib.externals.loky.backend.semaphore_tracker.SemaphoreTracker.__init__": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "sklearn.externals.joblib.externals.loky.backend.semaphore_tracker.threading"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.backend.semaphore_tracker.SemaphoreTracker._check_alive": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "BrokenPipeError"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.backend.semaphore_tracker.SemaphoreTracker._send": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "sklearn.externals.joblib.externals.loky.backend.semaphore_tracker.os"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.backend.semaphore_tracker.SemaphoreTracker.ensure_running": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "BaseException",
    "Exception",
    "len",
    "multiprocessing.util._args_from_interpreter_flags",
    "multiprocessing.util.debug",
    "range",
    "sklearn.externals.joblib.externals.loky.backend.semaphore_tracker.os",
    "sklearn.externals.joblib.externals.loky.backend.semaphore_tracker.re",
    "sklearn.externals.joblib.externals.loky.backend.semaphore_tracker.spawnv_passfds",
    "sklearn.externals.joblib.externals.loky.backend.semaphore_tracker.sys",
    "sklearn.externals.joblib.externals.loky.backend.semaphore_tracker.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.backend.semaphore_tracker.SemaphoreTracker.getfd": {
  "data": {
   "lineno": 51
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.backend.semaphore_tracker.SemaphoreTracker.register": {
  "data": {
   "lineno": 115
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.backend.semaphore_tracker.SemaphoreTracker.unregister": {
  "data": {
   "lineno": 120
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.backend.semaphore_tracker.VERBOSE": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.externals.loky.backend.semaphore_tracker.__all__": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.externals.loky.backend.semaphore_tracker._semaphore_tracker": {
  "data": {
   "lineno": 135
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.externals.loky.backend.semaphore_tracker.ensure_running": {
  "data": {
   "lineno": 136
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.externals.loky.backend.semaphore_tracker.getfd": {
  "data": {
   "lineno": 139
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.externals.loky.backend.semaphore_tracker.main": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "BaseException",
    "Exception",
    "RuntimeError",
    "_multiprocessing.sem_unlink",
    "len",
    "set",
    "sklearn.externals.joblib.externals.loky.backend.semaphore_tracker.VERBOSE",
    "sklearn.externals.joblib.externals.loky.backend.semaphore_tracker.os",
    "sklearn.externals.joblib.externals.loky.backend.semaphore_tracker.signal",
    "sklearn.externals.joblib.externals.loky.backend.semaphore_tracker.sys",
    "sklearn.externals.joblib.externals.loky.backend.semaphore_tracker.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.backend.semaphore_tracker.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.loky.backend.semaphore_tracker.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.loky.backend.semaphore_tracker.register": {
  "data": {
   "lineno": 137
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.externals.loky.backend.semaphore_tracker.sem_unlink": {
  "data": {
   "shadows": "_multiprocessing.sem_unlink"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.loky.backend.semaphore_tracker.signal": {
  "data": {
   "shadows": "signal"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.loky.backend.semaphore_tracker.spawnv_passfds": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "_mk_inheritable",
    "fork_exec",
    "sklearn.externals.joblib.externals.loky.backend.semaphore_tracker.os",
    "sorted"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.backend.semaphore_tracker.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.loky.backend.semaphore_tracker.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.loky.backend.semaphore_tracker.unregister": {
  "data": {
   "lineno": 138
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.externals.loky.backend.semaphore_tracker.util": {
  "data": {
   "shadows": "multiprocessing.util"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.loky.backend.semaphore_tracker.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.loky.backend.spawn": {
  "data": {
   "symbols_in_volume": [
    "getattr",
    "sklearn.externals.joblib.externals.loky.backend.spawn.WINSERVICE",
    "sklearn.externals.joblib.externals.loky.backend.spawn.os",
    "sklearn.externals.joblib.externals.loky.backend.spawn.sys"
   ]
  },
  "type": "module"
 },
 "sklearn.externals.joblib.externals.loky.backend.spawn.WINEXE": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.externals.loky.backend.spawn.WINSERVICE": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.externals.loky.backend.spawn._check_not_importing_main": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "RuntimeError",
    "getattr",
    "multiprocessing.process.current_process"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.backend.spawn._fixup_main_from_name": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "getattr",
    "sklearn.externals.joblib.externals.loky.backend.spawn.old_main_modules",
    "sklearn.externals.joblib.externals.loky.backend.spawn.runpy",
    "sklearn.externals.joblib.externals.loky.backend.spawn.sys",
    "sklearn.externals.joblib.externals.loky.backend.spawn.types"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.backend.spawn._fixup_main_from_path": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "getattr",
    "sklearn.externals.joblib.externals.loky.backend.spawn.old_main_modules",
    "sklearn.externals.joblib.externals.loky.backend.spawn.os",
    "sklearn.externals.joblib.externals.loky.backend.spawn.runpy",
    "sklearn.externals.joblib.externals.loky.backend.spawn.sys",
    "sklearn.externals.joblib.externals.loky.backend.spawn.types"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.backend.spawn._python_exe": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.externals.loky.backend.spawn.context": {
  "data": {
   "shadows": "sklearn.externals.joblib.externals.loky.backend.context"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.loky.backend.spawn.get_executable": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "sklearn.externals.joblib.externals.loky.backend.spawn._python_exe"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.backend.spawn.get_preparation_data": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "BaseException",
    "ValueError",
    "bytes",
    "dict",
    "getattr",
    "len",
    "multiprocessing.process.ORIGINAL_DIR",
    "multiprocessing.process.current_process",
    "multiprocessing.util._log_to_stderr",
    "multiprocessing.util._logger",
    "multiprocessing.util._logger.getEffectiveLevel",
    "multiprocessing.util._logger.handlers",
    "sklearn.externals.joblib.externals.loky.backend.spawn.WINEXE",
    "sklearn.externals.joblib.externals.loky.backend.spawn.WINSERVICE",
    "sklearn.externals.joblib.externals.loky.backend.spawn._check_not_importing_main",
    "sklearn.externals.joblib.externals.loky.backend.spawn.os",
    "sklearn.externals.joblib.externals.loky.backend.spawn.sys"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.backend.spawn.import_main_path": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "sklearn.externals.joblib.externals.loky.backend.spawn._fixup_main_from_path"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.backend.spawn.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.loky.backend.spawn.old_main_modules": {
  "data": {
   "lineno": 117
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.externals.loky.backend.spawn.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.loky.backend.spawn.prepare": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "multiprocessing.process.ORIGINAL_DIR",
    "multiprocessing.process.current_process",
    "multiprocessing.util.get_logger",
    "multiprocessing.util.log_to_stderr",
    "sklearn.externals.joblib.externals.loky.backend.spawn._fixup_main_from_name",
    "sklearn.externals.joblib.externals.loky.backend.spawn._fixup_main_from_path",
    "sklearn.externals.joblib.externals.loky.backend.spawn.logging",
    "sklearn.externals.joblib.externals.loky.backend.spawn.os",
    "sklearn.externals.joblib.externals.loky.backend.spawn.sys"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.backend.spawn.process": {
  "data": {
   "shadows": "multiprocessing.process"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.loky.backend.spawn.runpy": {
  "data": {
   "shadows": "runpy"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.loky.backend.spawn.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.loky.backend.spawn.types": {
  "data": {
   "shadows": "types"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.loky.backend.spawn.util": {
  "data": {
   "shadows": "multiprocessing.util"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.loky.backend.synchronize": {
  "data": {
   "shadows": "multiprocessing.synchronize"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.loky.backend.synchronize.BoundedSemaphore": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "sklearn.externals.joblib.externals.loky.backend.synchronize.Semaphore"
   ]
  },
  "type": "class"
 },
 "sklearn.externals.joblib.externals.loky.backend.synchronize.BoundedSemaphore.__init__": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "_multiprocessing.SemLock.__init__"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.backend.synchronize.BoundedSemaphore.__repr__": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.backend.synchronize.Condition": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "sklearn.externals.joblib.externals.loky.backend.synchronize.Condition.__enter__": {
  "data": {
   "lineno": 243
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.backend.synchronize.Condition.__exit__": {
  "data": {
   "lineno": 246
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.backend.synchronize.Condition.__getstate__": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "assert_spawning"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.backend.synchronize.Condition.__init__": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "sklearn.externals.joblib.externals.loky.backend.synchronize.RLock",
    "sklearn.externals.joblib.externals.loky.backend.synchronize.Semaphore"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.backend.synchronize.Condition.__repr__": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.backend.synchronize.Condition.__setstate__": {
  "data": {
   "lineno": 238
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.backend.synchronize.Condition._make_methods": {
  "data": {
   "lineno": 249
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.backend.synchronize.Condition.notify": {
  "data": {
   "lineno": 285
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.backend.synchronize.Condition.notify_all": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "range"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.backend.synchronize.Condition.wait": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "range"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.backend.synchronize.Condition.wait_for": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": [
    "predicate",
    "time.time"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.backend.synchronize.Event": {
  "data": {
   "lineno": 348,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "sklearn.externals.joblib.externals.loky.backend.synchronize.Event.__init__": {
  "data": {
   "lineno": 350,
   "symbols_in_volume": [
    "sklearn.externals.joblib.externals.loky.backend.synchronize.Condition",
    "sklearn.externals.joblib.externals.loky.backend.synchronize.Lock",
    "sklearn.externals.joblib.externals.loky.backend.synchronize.Semaphore"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.backend.synchronize.Event.clear": {
  "data": {
   "lineno": 367
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.backend.synchronize.Event.is_set": {
  "data": {
   "lineno": 354
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.backend.synchronize.Event.set": {
  "data": {
   "lineno": 361
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.backend.synchronize.Event.wait": {
  "data": {
   "lineno": 371
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.backend.synchronize.FileExistsError": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.externals.loky.backend.synchronize.Lock": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "_multiprocessing.SemLock"
   ]
  },
  "type": "class"
 },
 "sklearn.externals.joblib.externals.loky.backend.synchronize.Lock.__init__": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "sklearn.externals.joblib.externals.loky.backend.synchronize.Lock",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.backend.synchronize.Lock.__repr__": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "Exception",
    "multiprocessing.process.current_process",
    "sklearn.externals.joblib.externals.loky.backend.synchronize.threading"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.backend.synchronize.RLock": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "_multiprocessing.SemLock"
   ]
  },
  "type": "class"
 },
 "sklearn.externals.joblib.externals.loky.backend.synchronize.RLock.__init__": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "sklearn.externals.joblib.externals.loky.backend.synchronize.RLock",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.backend.synchronize.RLock.__repr__": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "Exception",
    "multiprocessing.process.current_process",
    "sklearn.externals.joblib.externals.loky.backend.synchronize.threading"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.backend.synchronize.SEM_VALUE_MAX": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.externals.loky.backend.synchronize.SemLock": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "object",
    "sklearn.externals.joblib.externals.loky.backend.synchronize.tempfile"
   ]
  },
  "type": "class"
 },
 "sklearn.externals.joblib.externals.loky.backend.synchronize.SemLock.__enter__": {
  "data": {
   "lineno": 103
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.backend.synchronize.SemLock.__exit__": {
  "data": {
   "lineno": 106
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.backend.synchronize.SemLock.__getstate__": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "assert_spawning"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.backend.synchronize.SemLock.__init__": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "_multiprocessing.SemLock",
    "_multiprocessing.SemLock._cleanup",
    "_multiprocessing.SemLock._make_name",
    "multiprocessing.util.Finalize",
    "multiprocessing.util.debug",
    "multiprocessing.util.register_after_fork",
    "range",
    "sklearn.externals.joblib.externals.loky.backend.synchronize.FileExistsError"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.backend.synchronize.SemLock.__init__._after_fork": {
  "data": {
   "lineno": 83
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.backend.synchronize.SemLock.__setstate__": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "_multiprocessing.SemLock._rebuild",
    "multiprocessing.util.debug"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.backend.synchronize.SemLock._cleanup": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "_multiprocessing.sem_unlink",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.backend.synchronize.SemLock._make_methods": {
  "data": {
   "lineno": 99
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.backend.synchronize.SemLock._make_name": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "_multiprocessing.SemLock._rand",
    "next",
    "sklearn.externals.joblib.externals.loky.backend.synchronize.os",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.backend.synchronize.Semaphore": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "_multiprocessing.SemLock"
   ]
  },
  "type": "class"
 },
 "sklearn.externals.joblib.externals.loky.backend.synchronize.Semaphore.__init__": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "_multiprocessing.SemLock.__init__",
    "sklearn.externals.joblib.externals.loky.backend.synchronize.SEM_VALUE_MAX"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.backend.synchronize.Semaphore.__repr__": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.backend.synchronize.Semaphore.get_value": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "NotImplementedError",
    "sklearn.externals.joblib.externals.loky.backend.synchronize.sys"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.backend.synchronize._SemLock": {
  "data": {
   "shadows": "_multiprocessing.SemLock"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.loky.backend.synchronize.__all__": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.externals.loky.backend.synchronize._multiprocessing": {
  "data": {
   "shadows": "_multiprocessing"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.loky.backend.synchronize._time": {
  "data": {
   "shadows": "time.time"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.loky.backend.synchronize.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.loky.backend.synchronize.process": {
  "data": {
   "shadows": "multiprocessing.process"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.loky.backend.synchronize.sem_unlink": {
  "data": {
   "shadows": "_multiprocessing.sem_unlink"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.loky.backend.synchronize.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.loky.backend.synchronize.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.loky.backend.synchronize.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.loky.backend.synchronize.util": {
  "data": {
   "shadows": "multiprocessing.util"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.loky.backend.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.loky.backend.utils": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "sklearn.externals.joblib.externals.loky.backend.utils._flag_current_thread_clean_exit": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "sklearn.externals.joblib.externals.loky.backend.utils.threading"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.backend.utils._recursive_terminate": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "OSError",
    "int",
    "sklearn.externals.joblib.externals.loky.backend.utils.errno",
    "sklearn.externals.joblib.externals.loky.backend.utils.os",
    "sklearn.externals.joblib.externals.loky.backend.utils.signal",
    "sklearn.externals.joblib.externals.loky.backend.utils.subprocess",
    "sklearn.externals.joblib.externals.loky.backend.utils.sys",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.backend.utils._recursive_terminate_with_psutil": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "sklearn.externals.joblib.externals.loky.backend.utils.psutil"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.backend.utils._recursive_terminate_without_psutil": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "OSError",
    "sklearn.externals.joblib.externals.loky.backend.utils._recursive_terminate",
    "sklearn.externals.joblib.externals.loky.backend.utils.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.backend.utils.errno": {
  "data": {
   "shadows": "errno"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.loky.backend.utils.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.loky.backend.utils.psutil": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.externals.loky.backend.utils.recursive_terminate": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "sklearn.externals.joblib.externals.loky.backend.utils._recursive_terminate_with_psutil",
    "sklearn.externals.joblib.externals.loky.backend.utils._recursive_terminate_without_psutil",
    "sklearn.externals.joblib.externals.loky.backend.utils.psutil"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.backend.utils.signal": {
  "data": {
   "shadows": "signal"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.loky.backend.utils.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.loky.backend.utils.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.loky.backend.utils.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.loky.backend.utils.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.loky.cloudpickle_wrapper": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "dict",
    "sklearn.externals.joblib.externals.loky.cloudpickle_wrapper.cloudpickle"
   ]
  },
  "type": "module"
 },
 "sklearn.externals.joblib.externals.loky.cloudpickle_wrapper.CloudpickledObjectWrapper": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "sklearn.externals.joblib.externals.loky.cloudpickle_wrapper.CloudpickledObjectWrapper.__init__": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "cloudpickle.dumps"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.cloudpickle_wrapper.CloudpickledObjectWrapper.__reduce__": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "cloudpickle.loads"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.cloudpickle_wrapper._wrap_non_picklable_objects": {
  "data": {
   "lineno": 52
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.cloudpickle_wrapper.cloudpickle": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.externals.loky.cloudpickle_wrapper.dumps": {
  "data": {
   "shadows": "cloudpickle.dumps"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.loky.cloudpickle_wrapper.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.loky.cloudpickle_wrapper.loads": {
  "data": {
   "shadows": "cloudpickle.loads"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.loky.cloudpickle_wrapper.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.loky.cloudpickle_wrapper.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.loky.cloudpickle_wrapper.wrap_cache": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.externals.loky.process_executor": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "OSError",
    "RuntimeError",
    "concurrent.futures.process.BrokenProcessPool",
    "int",
    "sklearn.externals.joblib.externals.loky.process_executor.os",
    "sklearn.externals.joblib.externals.loky.process_executor.sys",
    "sklearn.externals.joblib.externals.loky.process_executor.weakref"
   ]
  },
  "type": "module"
 },
 "sklearn.externals.joblib.externals.loky.process_executor.BrokenExecutor": {
  "data": {
   "lineno": 833
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.externals.loky.process_executor.BrokenProcessPool": {
  "data": {
   "lineno": 815,
   "symbols_in_volume": [
    "concurrent.futures.process.BrokenProcessPool"
   ]
  },
  "type": "class"
 },
 "sklearn.externals.joblib.externals.loky.process_executor.EXTRA_QUEUED_CALLS": {
  "data": {
   "lineno": 206
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.externals.loky.process_executor.LokyRecursionError": {
  "data": {
   "lineno": 810,
   "symbols_in_volume": [
    "RuntimeError"
   ]
  },
  "type": "class"
 },
 "sklearn.externals.joblib.externals.loky.process_executor.MAX_DEPTH": {
  "data": {
   "lineno": 116
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.externals.loky.process_executor.PicklingError": {
  "data": {
   "shadows": "pickle.PicklingError"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.loky.process_executor.Process": {
  "data": {
   "shadows": "psutil.Process"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.loky.process_executor.ProcessLookupError": {
  "data": {
   "lineno": 93
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.externals.loky.process_executor.ProcessPoolExecutor": {
  "data": {
   "lineno": 844
  },
  "type": "class"
 },
 "sklearn.externals.joblib.externals.loky.process_executor.ProcessPoolExecutor.__init__": {
  "data": {
   "lineno": 848,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "_wrap_non_picklable_objects",
    "callable",
    "cpu_count",
    "get_context",
    "initializer",
    "multiprocessing.util.debug",
    "sklearn.externals.joblib.externals.loky.process_executor._ExecutorFlags",
    "sklearn.externals.joblib.externals.loky.process_executor._ThreadWakeup",
    "sklearn.externals.joblib.externals.loky.process_executor._check_max_depth",
    "sklearn.externals.joblib.externals.loky.process_executor._check_system_limits"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.process_executor.ProcessPoolExecutor._adjust_process_count": {
  "data": {
   "lineno": 986,
   "symbols_in_volume": [
    "len",
    "multiprocessing.util.debug",
    "range",
    "sklearn.externals.joblib.externals.loky.process_executor._CURRENT_DEPTH",
    "sklearn.externals.joblib.externals.loky.process_executor._process_worker"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.process_executor.ProcessPoolExecutor._ensure_executor_running": {
  "data": {
   "lineno": 1005,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.process_executor.ProcessPoolExecutor._setup_queues": {
  "data": {
   "lineno": 924,
   "symbols_in_volume": [
    "SimpleQueue",
    "sklearn.externals.joblib.externals.loky.process_executor.EXTRA_QUEUED_CALLS",
    "sklearn.externals.joblib.externals.loky.process_executor._SafeQueue"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.process_executor.ProcessPoolExecutor._start_queue_management_thread": {
  "data": {
   "lineno": 943,
   "symbols_in_volume": [
    "multiprocessing.util.Finalize",
    "multiprocessing.util.debug",
    "sklearn.externals.joblib.externals.loky.process_executor._python_exit",
    "sklearn.externals.joblib.externals.loky.process_executor._queue_management_worker",
    "sklearn.externals.joblib.externals.loky.process_executor._threads_wakeups",
    "sklearn.externals.joblib.externals.loky.process_executor.process_pool_executor_at_exit",
    "sklearn.externals.joblib.externals.loky.process_executor.threading",
    "sklearn.externals.joblib.externals.loky.process_executor.weakref"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.process_executor.ProcessPoolExecutor._start_queue_management_thread.weakref_cb": {
  "data": {
   "lineno": 950,
   "symbols_in_volume": [
    "multiprocessing.util.debug"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.process_executor.ProcessPoolExecutor.map": {
  "data": {
   "lineno": 1040,
   "symbols_in_volume": [
    "ValueError",
    "fn",
    "functools.partial",
    "sklearn.externals.joblib.externals.loky.process_executor.ProcessPoolExecutor",
    "sklearn.externals.joblib.externals.loky.process_executor._chain_from_iterable_of_lists",
    "sklearn.externals.joblib.externals.loky.process_executor._get_chunks",
    "sklearn.externals.joblib.externals.loky.process_executor._process_chunk",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.process_executor.ProcessPoolExecutor.shutdown": {
  "data": {
   "lineno": 1072,
   "symbols_in_volume": [
    "OSError",
    "multiprocessing.util.debug",
    "wait"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.process_executor.ProcessPoolExecutor.submit": {
  "data": {
   "lineno": 1013,
   "symbols_in_volume": [
    "RuntimeError",
    "fn",
    "sklearn.externals.joblib.externals.loky.process_executor.ShutdownExecutorError",
    "sklearn.externals.joblib.externals.loky.process_executor._WorkItem",
    "sklearn.externals.joblib.externals.loky.process_executor._global_shutdown"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.process_executor.ShutdownExecutorError": {
  "data": {
   "lineno": 836,
   "symbols_in_volume": [
    "RuntimeError"
   ]
  },
  "type": "class"
 },
 "sklearn.externals.joblib.externals.loky.process_executor.TerminatedWorkerError": {
  "data": {
   "lineno": 824,
   "symbols_in_volume": [
    "concurrent.futures.process.BrokenProcessPool"
   ]
  },
  "type": "class"
 },
 "sklearn.externals.joblib.externals.loky.process_executor._BPPException": {
  "data": {
   "lineno": 88
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.externals.loky.process_executor._CURRENT_DEPTH": {
  "data": {
   "lineno": 117
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.externals.loky.process_executor._CallItem": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "sklearn.externals.joblib.externals.loky.process_executor._CallItem.__getstate__": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "_wrap_non_picklable_objects"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.process_executor._CallItem.__init__": {
  "data": {
   "lineno": 259
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.process_executor._CallItem.__repr__": {
  "data": {
   "lineno": 265
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.process_executor._CallItem.__setstate__": {
  "data": {
   "lineno": 277
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.process_executor._ExceptionWithTraceback": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "BaseException"
   ]
  },
  "type": "class"
 },
 "sklearn.externals.joblib.externals.loky.process_executor._ExceptionWithTraceback.__init__": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "sklearn.externals.joblib.externals.loky.process_executor.sys",
    "sklearn.externals.joblib.externals.loky.process_executor.traceback",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.process_executor._ExceptionWithTraceback.__reduce__": {
  "data": {
   "lineno": 229
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.process_executor._ExecutorFlags": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "sklearn.externals.joblib.externals.loky.process_executor._ExecutorFlags.__init__": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "sklearn.externals.joblib.externals.loky.process_executor.threading"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.process_executor._ExecutorFlags.flag_as_broken": {
  "data": {
   "lineno": 180
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.process_executor._ExecutorFlags.flag_as_shutting_down": {
  "data": {
   "lineno": 175
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.process_executor._MAX_MEMORY_LEAK_SIZE": {
  "data": {
   "lineno": 123
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.externals.loky.process_executor._MEMORY_LEAK_CHECK_DELAY": {
  "data": {
   "lineno": 120
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.externals.loky.process_executor._RemoteTraceback": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "sklearn.externals.joblib.externals.loky.process_executor._RemoteTraceback.__init__": {
  "data": {
   "lineno": 212
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.process_executor._RemoteTraceback.__str__": {
  "data": {
   "lineno": 215
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.process_executor._ResultItem": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "sklearn.externals.joblib.externals.loky.process_executor._ResultItem.__init__": {
  "data": {
   "lineno": 251
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.process_executor._SafeQueue": {
  "data": {
   "lineno": 281
  },
  "type": "class"
 },
 "sklearn.externals.joblib.externals.loky.process_executor._SafeQueue.__init__": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "sklearn.externals.joblib.externals.loky.process_executor._SafeQueue",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.process_executor._SafeQueue._on_queue_feeder_error": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "RuntimeError",
    "getattr",
    "isinstance",
    "pickle.PicklingError",
    "sklearn.externals.joblib.externals.loky.process_executor._CallItem",
    "sklearn.externals.joblib.externals.loky.process_executor._RemoteTraceback",
    "sklearn.externals.joblib.externals.loky.process_executor.struct",
    "sklearn.externals.joblib.externals.loky.process_executor.traceback",
    "super",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.process_executor._ThreadWakeup": {
  "data": {
   "lineno": 140
  },
  "type": "class"
 },
 "sklearn.externals.joblib.externals.loky.process_executor._ThreadWakeup.__init__": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "multiprocessing.Pipe"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.process_executor._ThreadWakeup.clear": {
  "data": {
   "lineno": 156
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.process_executor._ThreadWakeup.close": {
  "data": {
   "lineno": 144
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.process_executor._ThreadWakeup.wakeup": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "sklearn.externals.joblib.externals.loky.process_executor.sys"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.process_executor._USE_PSUTIL": {
  "data": {
   "lineno": 137
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.externals.loky.process_executor._WorkItem": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "sklearn.externals.joblib.externals.loky.process_executor._WorkItem.__init__": {
  "data": {
   "lineno": 242
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.process_executor.__author__": {
  "data": {
   "lineno": 59
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.externals.loky.process_executor._add_call_item_to_queue": {
  "data": {
   "lineno": 470,
   "symbols_in_volume": [
    "sklearn.externals.joblib.externals.loky.process_executor._CallItem"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.process_executor._chain_from_iterable_of_lists": {
  "data": {
   "lineno": 782
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.process_executor._check_max_depth": {
  "data": {
   "lineno": 794,
   "symbols_in_volume": [
    "sklearn.externals.joblib.externals.loky.process_executor.LokyRecursionError",
    "sklearn.externals.joblib.externals.loky.process_executor.MAX_DEPTH",
    "sklearn.externals.joblib.externals.loky.process_executor._CURRENT_DEPTH"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.process_executor._check_system_limits": {
  "data": {
   "lineno": 758,
   "symbols_in_volume": [
    "AttributeError",
    "NotImplementedError",
    "ValueError",
    "sklearn.externals.joblib.externals.loky.process_executor._system_limited",
    "sklearn.externals.joblib.externals.loky.process_executor._system_limits_checked",
    "sklearn.externals.joblib.externals.loky.process_executor.os"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.process_executor._get_chunks": {
  "data": {
   "lineno": 317,
   "symbols_in_volume": [
    "sklearn.externals.joblib.externals.loky.process_executor.itertools",
    "sklearn.externals.joblib.externals.loky.process_executor.sys",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.process_executor._get_memory_usage": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "psutil.Process",
    "sklearn.externals.joblib.externals.loky.process_executor.gc"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.process_executor._global_shutdown": {
  "data": {
   "lineno": 111
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.externals.loky.process_executor._process_chunk": {
  "data": {
   "lineno": 330,
   "symbols_in_volume": [
    "fn"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.process_executor._process_worker": {
  "data": {
   "lineno": 352,
   "symbols_in_volume": [
    "BaseException",
    "getattr",
    "initializer",
    "multiprocessing.util.debug",
    "multiprocessing.util.info",
    "print",
    "sklearn.externals.joblib.externals.loky.process_executor._CURRENT_DEPTH",
    "sklearn.externals.joblib.externals.loky.process_executor._ExceptionWithTraceback",
    "sklearn.externals.joblib.externals.loky.process_executor._MAX_MEMORY_LEAK_SIZE",
    "sklearn.externals.joblib.externals.loky.process_executor._MEMORY_LEAK_CHECK_DELAY",
    "sklearn.externals.joblib.externals.loky.process_executor._RemoteTraceback",
    "sklearn.externals.joblib.externals.loky.process_executor._ResultItem",
    "sklearn.externals.joblib.externals.loky.process_executor._USE_PSUTIL",
    "sklearn.externals.joblib.externals.loky.process_executor._get_memory_usage",
    "sklearn.externals.joblib.externals.loky.process_executor._sendback_result",
    "sklearn.externals.joblib.externals.loky.process_executor.gc",
    "sklearn.externals.joblib.externals.loky.process_executor.os",
    "sklearn.externals.joblib.externals.loky.process_executor.sys",
    "sklearn.externals.joblib.externals.loky.process_executor.traceback",
    "time.time"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.process_executor._python_exit": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "list",
    "multiprocessing.util.debug",
    "sklearn.externals.joblib.externals.loky.process_executor._global_shutdown",
    "sklearn.externals.joblib.externals.loky.process_executor._threads_wakeups"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.process_executor._queue_management_worker": {
  "data": {
   "lineno": 510,
   "symbols_in_volume": [
    "BaseException",
    "UserWarning",
    "concurrent.futures.process.BrokenProcessPool",
    "exc_type",
    "executor_reference",
    "getattr",
    "int",
    "is_shutting_down",
    "isinstance",
    "len",
    "multiprocessing.util.debug",
    "recursive_terminate",
    "shutdown_all_workers",
    "sklearn.externals.joblib.externals.loky.process_executor.ProcessLookupError",
    "sklearn.externals.joblib.externals.loky.process_executor.ShutdownExecutorError",
    "sklearn.externals.joblib.externals.loky.process_executor._RemoteTraceback",
    "sklearn.externals.joblib.externals.loky.process_executor._add_call_item_to_queue",
    "sklearn.externals.joblib.externals.loky.process_executor.sys",
    "sklearn.externals.joblib.externals.loky.process_executor.traceback",
    "sklearn.externals.joblib.externals.loky.process_executor.warnings",
    "type",
    "wait"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.process_executor._queue_management_worker.is_shutting_down": {
  "data": {
   "lineno": 546,
   "symbols_in_volume": [
    "sklearn.externals.joblib.externals.loky.process_executor._global_shutdown"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.process_executor._queue_management_worker.shutdown_all_workers": {
  "data": {
   "lineno": 557,
   "symbols_in_volume": [
    "list",
    "multiprocessing.util.debug",
    "range",
    "sum"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.process_executor._rebuild_exc": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "sklearn.externals.joblib.externals.loky.process_executor._RemoteTraceback"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.process_executor._sendback_result": {
  "data": {
   "lineno": 342,
   "symbols_in_volume": [
    "BaseException",
    "getattr",
    "sklearn.externals.joblib.externals.loky.process_executor._ExceptionWithTraceback",
    "sklearn.externals.joblib.externals.loky.process_executor._ResultItem"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.process_executor._system_limited": {
  "data": {
   "lineno": 755
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.externals.loky.process_executor._system_limits_checked": {
  "data": {
   "lineno": 754
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.externals.loky.process_executor._threads_wakeups": {
  "data": {
   "lineno": 110
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.externals.loky.process_executor.gc": {
  "data": {
   "shadows": "gc"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.loky.process_executor.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.loky.process_executor.mp": {
  "data": {
   "shadows": "multiprocessing"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.loky.process_executor.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.loky.process_executor.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.loky.process_executor.process_pool_executor_at_exit": {
  "data": {
   "lineno": 200
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.externals.loky.process_executor.struct": {
  "data": {
   "shadows": "struct"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.loky.process_executor.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.loky.process_executor.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.loky.process_executor.time": {
  "data": {
   "shadows": "time.time"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.loky.process_executor.traceback": {
  "data": {
   "shadows": "traceback"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.loky.process_executor.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.loky.process_executor.weakref": {
  "data": {
   "shadows": "weakref"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.loky.reusable_executor": {
  "data": {
   "symbols_in_volume": [
    "sklearn.externals.joblib.externals.loky.reusable_executor.threading",
    "type"
   ]
  },
  "type": "module"
 },
 "sklearn.externals.joblib.externals.loky.reusable_executor.STRING_TYPE": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.externals.loky.reusable_executor._ReusablePoolExecutor": {
  "data": {
   "lineno": 137
  },
  "type": "class"
 },
 "sklearn.externals.joblib.externals.loky.reusable_executor._ReusablePoolExecutor.__init__": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "sklearn.externals.joblib.externals.loky.reusable_executor._ReusablePoolExecutor",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.reusable_executor._ReusablePoolExecutor._resize": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "ValueError",
    "all",
    "len",
    "list",
    "range",
    "sklearn.externals.joblib.externals.loky.reusable_executor.time",
    "sum"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.reusable_executor._ReusablePoolExecutor._setup_queues": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "cpu_count",
    "sklearn.externals.joblib.externals.loky.reusable_executor._ReusablePoolExecutor",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.reusable_executor._ReusablePoolExecutor._wait_job_completion": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "UserWarning",
    "len",
    "multiprocessing.util.debug",
    "sklearn.externals.joblib.externals.loky.reusable_executor.time",
    "sklearn.externals.joblib.externals.loky.reusable_executor.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.reusable_executor._ReusablePoolExecutor.submit": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "sklearn.externals.joblib.externals.loky.reusable_executor._ReusablePoolExecutor",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.reusable_executor.__all__": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.externals.loky.reusable_executor._executor": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.externals.loky.reusable_executor._executor_args": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.externals.loky.reusable_executor._executor_lock": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.externals.loky.reusable_executor._get_next_executor_id": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "sklearn.externals.joblib.externals.loky.reusable_executor._executor_lock",
    "sklearn.externals.joblib.externals.loky.reusable_executor._next_executor_id"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.reusable_executor._next_executor_id": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.externals.loky.reusable_executor.get_reusable_executor": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "ValueError",
    "cpu_count",
    "dict",
    "get_context",
    "isinstance",
    "multiprocessing.util.debug",
    "sklearn.externals.joblib.externals.loky.reusable_executor.STRING_TYPE",
    "sklearn.externals.joblib.externals.loky.reusable_executor._ReusablePoolExecutor",
    "sklearn.externals.joblib.externals.loky.reusable_executor._executor",
    "sklearn.externals.joblib.externals.loky.reusable_executor._executor_lock",
    "sklearn.externals.joblib.externals.loky.reusable_executor._get_next_executor_id"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.externals.loky.reusable_executor.mp": {
  "data": {
   "shadows": "multiprocessing"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.loky.reusable_executor.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.loky.reusable_executor.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.externals.loky.reusable_executor.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.format_stack": {
  "data": {
   "symbols_in_volume": [
    "AttributeError",
    "sklearn.externals.joblib.format_stack.tokenize"
   ]
  },
  "type": "module"
 },
 "sklearn.externals.joblib.format_stack.INDENT": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.format_stack._fixed_getframes": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "IndexError",
    "enumerate",
    "len",
    "list",
    "max",
    "sklearn.externals.joblib.format_stack.fix_frame_records_filenames",
    "sklearn.externals.joblib.format_stack.inspect",
    "sklearn.externals.joblib.format_stack.linecache",
    "sklearn.externals.joblib.format_stack.traceback",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.format_stack._format_traceback_lines": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.format_stack.eq_repr": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "repr",
    "sklearn.externals.joblib.format_stack.safe_repr"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.format_stack.fix_frame_records_filenames": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.format_stack.format_exc": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": [
    "AttributeError",
    "BaseException",
    "len",
    "map",
    "sklearn.externals.joblib.format_stack._fixed_getframes",
    "sklearn.externals.joblib.format_stack.format_records",
    "sklearn.externals.joblib.format_stack.os",
    "sklearn.externals.joblib.format_stack.sys",
    "sklearn.externals.joblib.format_stack.time",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.format_stack.format_outer_frames": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": [
    "enumerate",
    "isinstance",
    "list",
    "max",
    "sklearn.externals.joblib.format_stack.format_records",
    "sklearn.externals.joblib.format_stack.inspect",
    "sklearn.externals.joblib.format_stack.linecache",
    "sklearn.externals.joblib.format_stack.os",
    "str",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.format_stack.format_records": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "IndexError",
    "KeyError",
    "OSError",
    "SyntaxError",
    "UnicodeDecodeError",
    "abspath",
    "eval",
    "locals",
    "locals.keys",
    "print",
    "sklearn.externals.joblib.format_stack.INDENT",
    "sklearn.externals.joblib.format_stack._format_traceback_lines",
    "sklearn.externals.joblib.format_stack.eq_repr",
    "sklearn.externals.joblib.format_stack.generate_tokens",
    "sklearn.externals.joblib.format_stack.inspect",
    "sklearn.externals.joblib.format_stack.os",
    "sklearn.externals.joblib.format_stack.safe_repr",
    "sklearn.externals.joblib.format_stack.tokenize",
    "sklearn.externals.joblib.format_stack.uniq_stable",
    "tokeneater"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.format_stack.format_records.linereader": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "getline",
    "sklearn.externals.joblib.format_stack.linecache"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.format_stack.format_records.tokeneater": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "IndexError",
    "sklearn.externals.joblib.format_stack.keyword",
    "sklearn.externals.joblib.format_stack.tokenize"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.format_stack.generate_tokens": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.format_stack.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.format_stack.keyword": {
  "data": {
   "shadows": "keyword"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.format_stack.linecache": {
  "data": {
   "shadows": "linecache"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.format_stack.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.format_stack.pydoc": {
  "data": {
   "shadows": "pydoc"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.format_stack.safe_repr": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "KeyboardInterrupt",
    "getattr",
    "repr",
    "sklearn.externals.joblib.format_stack.pydoc"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.format_stack.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.format_stack.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.format_stack.tokenize": {
  "data": {
   "shadows": "tokenize"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.format_stack.traceback": {
  "data": {
   "shadows": "traceback"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.format_stack.uniq_stable": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.func_inspect": {
  "data": {
   "symbols_in_volume": [
    "sklearn.externals.joblib.func_inspect.collections",
    "sklearn.externals.joblib.func_inspect.full_argspec_fields"
   ]
  },
  "type": "module"
 },
 "sklearn.externals.joblib.func_inspect._clean_win_chars": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "hasattr",
    "quote",
    "sklearn.externals.joblib.func_inspect.urllib"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.func_inspect._format_arg": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "len",
    "pformat"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.func_inspect._function_called_str": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "repr"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.func_inspect._signature_str": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "sklearn.externals.joblib.func_inspect.inspect"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.func_inspect.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.func_inspect.filter_args": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "IndexError",
    "KeyError",
    "TypeError",
    "ValueError",
    "dict",
    "enumerate",
    "isinstance",
    "len",
    "list",
    "sklearn.externals.joblib.func_inspect._function_called_str",
    "sklearn.externals.joblib.func_inspect._signature_str",
    "sklearn.externals.joblib.func_inspect.get_func_name",
    "sklearn.externals.joblib.func_inspect.getfullargspec",
    "sklearn.externals.joblib.func_inspect.inspect",
    "sklearn.externals.joblib.func_inspect.warnings",
    "sorted",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.func_inspect.format_call": {
  "data": {
   "lineno": 352,
   "symbols_in_volume": [
    "sklearn.externals.joblib.func_inspect.format_signature"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.func_inspect.format_signature": {
  "data": {
   "lineno": 328,
   "symbols_in_volume": [
    "len",
    "list",
    "sklearn.externals.joblib.func_inspect._format_arg",
    "sklearn.externals.joblib.func_inspect.get_func_name"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.func_inspect.full_argspec_fields": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.func_inspect.full_argspec_type": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.func_inspect.get_func_code": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "hasattr",
    "int",
    "itertools.islice",
    "list",
    "open_py_source",
    "repr",
    "sklearn.externals.joblib.func_inspect.inspect",
    "sklearn.externals.joblib.func_inspect.os",
    "sklearn.externals.joblib.func_inspect.re",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.func_inspect.get_func_name": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "TypeError",
    "hasattr",
    "sklearn.externals.joblib.func_inspect._clean_win_chars",
    "sklearn.externals.joblib.func_inspect.inspect",
    "sklearn.externals.joblib.func_inspect.os"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.func_inspect.getfullargspec": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "AttributeError",
    "sklearn.externals.joblib.func_inspect.full_argspec_type",
    "sklearn.externals.joblib.func_inspect.inspect"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.func_inspect.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.func_inspect.islice": {
  "data": {
   "shadows": "itertools.islice"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.func_inspect.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.func_inspect.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.func_inspect.urllib": {
  "data": {
   "shadows": "urllib"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.func_inspect.urllib.parse": {
  "data": {
   "shadows": "urllib.parse"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.func_inspect.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.logger": {
  "data": {},
  "type": "module"
 },
 "sklearn.externals.joblib.logger.Logger": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "sklearn.externals.joblib.logger.Logger.__init__": {
  "data": {
   "lineno": 67
  },
  "type": "function"
 },
 "sklearn.externals.joblib.logger.Logger.debug": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "sklearn.externals.joblib.logger.logging"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.logger.Logger.format": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "sklearn.externals.joblib.logger.pformat"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.logger.Logger.warn": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "sklearn.externals.joblib.logger.logging"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.logger.PrintTime": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "sklearn.externals.joblib.logger.PrintTime.__call__": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "open",
    "print",
    "sklearn.externals.joblib.logger.format_time",
    "sklearn.externals.joblib.logger.sys",
    "sklearn.externals.joblib.logger.time"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.logger.PrintTime.__init__": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "ValueError",
    "mkdirp",
    "open",
    "range",
    "sklearn.externals.joblib.logger.os",
    "sklearn.externals.joblib.logger.shutil",
    "sklearn.externals.joblib.logger.time"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.logger._squeeze_time": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "max",
    "sklearn.externals.joblib.logger.sys"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.logger.format_time": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "sklearn.externals.joblib.logger._squeeze_time"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.logger.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.logger.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.logger.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.logger.pformat": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "numpy.get_printoptions",
    "numpy.set_printoptions",
    "sklearn.externals.joblib.logger.pprint",
    "sklearn.externals.joblib.logger.sys"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.logger.pprint": {
  "data": {
   "shadows": "pprint"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.logger.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.logger.short_format_time": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "sklearn.externals.joblib.logger._squeeze_time"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.logger.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.logger.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.logger.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.memory": {
  "data": {
   "symbols_in_volume": [
    "sklearn.externals.joblib.memory.weakref"
   ]
  },
  "type": "module"
 },
 "sklearn.externals.joblib.memory.FIRST_LINE_TEXT": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.memory.JobLibCollisionWarning": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "UserWarning"
   ]
  },
  "type": "class"
 },
 "sklearn.externals.joblib.memory.MemorizedFunc": {
  "data": {
   "lineno": 345
  },
  "type": "class"
 },
 "sklearn.externals.joblib.memory.MemorizedFunc.__call__": {
  "data": {
   "lineno": 541
  },
  "type": "function"
 },
 "sklearn.externals.joblib.memory.MemorizedFunc.__getstate__": {
  "data": {
   "lineno": 544
  },
  "type": "function"
 },
 "sklearn.externals.joblib.memory.MemorizedFunc.__init__": {
  "data": {
   "lineno": 387,
   "symbols_in_volume": [
    "dict",
    "sklearn.externals.joblib.memory._build_func_identifier",
    "sklearn.externals.joblib.memory._store_backend_factory",
    "sklearn.externals.joblib.memory.functools",
    "sklearn.externals.joblib.memory.inspect",
    "sklearn.externals.joblib.memory.pydoc",
    "sklearn.externals.joblib.memory.re",
    "sklearn.externals.joblib.memory.time"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.memory.MemorizedFunc.__repr__": {
  "data": {
   "lineno": 777
  },
  "type": "function"
 },
 "sklearn.externals.joblib.memory.MemorizedFunc._cached_call": {
  "data": {
   "lineno": 429,
   "symbols_in_volume": [
    "Exception",
    "format_signature",
    "format_time",
    "get_func_name",
    "len",
    "max",
    "print",
    "sklearn.externals.joblib.memory._format_load_msg",
    "sklearn.externals.joblib.memory.time",
    "sklearn.externals.joblib.memory.traceback"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.memory.MemorizedFunc._check_previous_func_code": {
  "data": {
   "lineno": 601,
   "symbols_in_volume": [
    "IOError",
    "OSError",
    "TypeError",
    "get_func_code",
    "get_func_name",
    "len",
    "open_py_source",
    "sklearn.externals.joblib.memory.JobLibCollisionWarning",
    "sklearn.externals.joblib.memory._FUNCTION_HASHES",
    "sklearn.externals.joblib.memory._build_func_identifier",
    "sklearn.externals.joblib.memory.extract_first_line",
    "sklearn.externals.joblib.memory.os",
    "sklearn.externals.joblib.memory.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.memory.MemorizedFunc._get_argument_hash": {
  "data": {
   "lineno": 556,
   "symbols_in_volume": [
    "filter_args"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.memory.MemorizedFunc._get_output_identifiers": {
  "data": {
   "lineno": 560,
   "symbols_in_volume": [
    "sklearn.externals.joblib.memory._build_func_identifier"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.memory.MemorizedFunc._hash_func": {
  "data": {
   "lineno": 566,
   "symbols_in_volume": [
    "getattr",
    "hash",
    "id"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.memory.MemorizedFunc._persist_input": {
  "data": {
   "lineno": 721,
   "symbols_in_volume": [
    "dict",
    "filter_args",
    "repr",
    "sklearn.externals.joblib.memory.time",
    "sklearn.externals.joblib.memory.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.memory.MemorizedFunc._write_func_code": {
  "data": {
   "lineno": 571,
   "symbols_in_volume": [
    "TypeError",
    "hasattr",
    "sklearn.externals.joblib.memory.FIRST_LINE_TEXT",
    "sklearn.externals.joblib.memory._FUNCTION_HASHES",
    "sklearn.externals.joblib.memory._build_func_identifier"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.memory.MemorizedFunc.call": {
  "data": {
   "lineno": 700,
   "symbols_in_volume": [
    "format_call",
    "format_time",
    "get_func_name",
    "len",
    "max",
    "print",
    "sklearn.externals.joblib.memory.time"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.memory.MemorizedFunc.call_and_shelve": {
  "data": {
   "lineno": 521,
   "symbols_in_volume": [
    "sklearn.externals.joblib.memory.MemorizedResult"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.memory.MemorizedFunc.clear": {
  "data": {
   "lineno": 689,
   "symbols_in_volume": [
    "get_func_code",
    "sklearn.externals.joblib.memory._build_func_identifier"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.memory.MemorizedResult": {
  "data": {
   "lineno": 180
  },
  "type": "class"
 },
 "sklearn.externals.joblib.memory.MemorizedResult.__getstate__": {
  "data": {
   "lineno": 266
  },
  "type": "function"
 },
 "sklearn.externals.joblib.memory.MemorizedResult.__init__": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "isinstance",
    "sklearn.externals.joblib.memory._build_func_identifier",
    "sklearn.externals.joblib.memory._store_backend_factory"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.memory.MemorizedResult.__repr__": {
  "data": {
   "lineno": 257
  },
  "type": "function"
 },
 "sklearn.externals.joblib.memory.MemorizedResult.argument_hash": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "DeprecationWarning",
    "property",
    "sklearn.externals.joblib.memory.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.memory.MemorizedResult.clear": {
  "data": {
   "lineno": 253
  },
  "type": "function"
 },
 "sklearn.externals.joblib.memory.MemorizedResult.get": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "sklearn.externals.joblib.memory._format_load_msg"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.memory.Memory": {
  "data": {
   "lineno": 787
  },
  "type": "class"
 },
 "sklearn.externals.joblib.memory.Memory.__getstate__": {
  "data": {
   "lineno": 978
  },
  "type": "function"
 },
 "sklearn.externals.joblib.memory.Memory.__init__": {
  "data": {
   "lineno": 842,
   "symbols_in_volume": [
    "DeprecationWarning",
    "ValueError",
    "dict",
    "isinstance",
    "sklearn.externals.joblib.memory._store_backend_factory",
    "sklearn.externals.joblib.memory.os",
    "sklearn.externals.joblib.memory.time",
    "sklearn.externals.joblib.memory.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.memory.Memory.__repr__": {
  "data": {
   "lineno": 972
  },
  "type": "function"
 },
 "sklearn.externals.joblib.memory.Memory.cache": {
  "data": {
   "lineno": 897,
   "symbols_in_volume": [
    "isinstance",
    "sklearn.externals.joblib.memory.MemorizedFunc",
    "sklearn.externals.joblib.memory.NotMemorizedFunc",
    "sklearn.externals.joblib.memory.functools"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.memory.Memory.cachedir": {
  "data": {
   "lineno": 886,
   "symbols_in_volume": [
    "DeprecationWarning",
    "property",
    "sklearn.externals.joblib.memory.os",
    "sklearn.externals.joblib.memory.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.memory.Memory.clear": {
  "data": {
   "lineno": 942
  },
  "type": "function"
 },
 "sklearn.externals.joblib.memory.Memory.eval": {
  "data": {
   "lineno": 955,
   "symbols_in_volume": [
    "func"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.memory.Memory.reduce_size": {
  "data": {
   "lineno": 950
  },
  "type": "function"
 },
 "sklearn.externals.joblib.memory.NotMemorizedFunc": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "sklearn.externals.joblib.memory.NotMemorizedFunc.__call__": {
  "data": {
   "lineno": 328
  },
  "type": "function"
 },
 "sklearn.externals.joblib.memory.NotMemorizedFunc.__init__": {
  "data": {
   "lineno": 325
  },
  "type": "function"
 },
 "sklearn.externals.joblib.memory.NotMemorizedFunc.__repr__": {
  "data": {
   "lineno": 334
  },
  "type": "function"
 },
 "sklearn.externals.joblib.memory.NotMemorizedFunc.call_and_shelve": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": [
    "sklearn.externals.joblib.memory.NotMemorizedResult"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.memory.NotMemorizedFunc.clear": {
  "data": {
   "lineno": 337
  },
  "type": "function"
 },
 "sklearn.externals.joblib.memory.NotMemorizedResult": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "sklearn.externals.joblib.memory.NotMemorizedResult.__getstate__": {
  "data": {
   "lineno": 302
  },
  "type": "function"
 },
 "sklearn.externals.joblib.memory.NotMemorizedResult.__init__": {
  "data": {
   "lineno": 279
  },
  "type": "function"
 },
 "sklearn.externals.joblib.memory.NotMemorizedResult.__repr__": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "pformat"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.memory.NotMemorizedResult.__setstate__": {
  "data": {
   "lineno": 305
  },
  "type": "function"
 },
 "sklearn.externals.joblib.memory.NotMemorizedResult.clear": {
  "data": {
   "lineno": 289
  },
  "type": "function"
 },
 "sklearn.externals.joblib.memory.NotMemorizedResult.get": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "KeyError"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.memory._FUNCTION_HASHES": {
  "data": {
   "lineno": 174
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.memory._STORE_BACKENDS": {
  "data": {
   "lineno": 67
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.memory._build_func_identifier": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "isinstance",
    "sklearn.externals.joblib.memory._get_func_fullname",
    "sklearn.externals.joblib.memory.os"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.memory._format_load_msg": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "KeyError",
    "format_time",
    "sklearn.externals.joblib.memory.os",
    "sklearn.externals.joblib.memory.time",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.memory._get_func_fullname": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "get_func_name",
    "sklearn.externals.joblib.memory.os"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.memory._store_backend_factory": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "TypeError",
    "backend_obj",
    "isinstance",
    "sklearn.externals.joblib.memory._STORE_BACKENDS",
    "sklearn.externals.joblib.memory.os"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.memory.extract_first_line": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "int",
    "len",
    "sklearn.externals.joblib.memory.FIRST_LINE_TEXT"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.memory.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.memory.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.memory.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.memory.pydoc": {
  "data": {
   "shadows": "pydoc"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.memory.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.memory.register_store_backend": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "issubclass",
    "sklearn.externals.joblib.memory._STORE_BACKENDS"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.memory.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.memory.traceback": {
  "data": {
   "shadows": "traceback"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.memory.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.memory.weakref": {
  "data": {
   "shadows": "weakref"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.memory.with_statement": {
  "data": {
   "shadows": "__future__.with_statement"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.my_exceptions": {
  "data": {
   "symbols_in_volume": [
    "dict",
    "locals",
    "sklearn.externals.joblib.my_exceptions._mk_common_exceptions"
   ]
  },
  "type": "module"
 },
 "sklearn.externals.joblib.my_exceptions.JoblibException": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "sklearn.externals.joblib.my_exceptions.JoblibException.__init__": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "Exception.__init__"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.my_exceptions.JoblibException.__repr__": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "hasattr",
    "len"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.my_exceptions.TransportableException": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "sklearn.externals.joblib.my_exceptions.JoblibException"
   ]
  },
  "type": "class"
 },
 "sklearn.externals.joblib.my_exceptions.TransportableException.__init__": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "sklearn.externals.joblib.my_exceptions.JoblibException"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.my_exceptions.TransportableException.unwrap": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "exception_type",
    "sklearn.externals.joblib.my_exceptions._mk_exception"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.my_exceptions.WorkerInterrupt": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "sklearn.externals.joblib.my_exceptions._builtin_exceptions": {
  "data": {
   "shadows": "exceptions"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.my_exceptions._exception_mapping": {
  "data": {
   "lineno": 69
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.my_exceptions._mk_common_exceptions": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "BaseException",
    "builtins",
    "dict",
    "dir",
    "exceptions",
    "filter",
    "getattr",
    "isinstance",
    "issubclass",
    "sklearn.externals.joblib.my_exceptions._mk_exception",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.my_exceptions._mk_exception": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "Exception",
    "TypeError",
    "issubclass",
    "sklearn.externals.joblib.my_exceptions.JoblibException",
    "sklearn.externals.joblib.my_exceptions._exception_mapping",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.numpy_pickle": {
  "data": {
   "symbols_in_volume": [
    "BZ2CompressorWrapper",
    "GzipCompressorWrapper",
    "ImportError",
    "LZ4CompressorWrapper",
    "LZMACompressorWrapper",
    "XZCompressorWrapper",
    "ZlibCompressorWrapper",
    "pathlib.Path",
    "register_compressor"
   ]
  },
  "type": "module"
 },
 "sklearn.externals.joblib.numpy_pickle.NumpyArrayWrapper": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "sklearn.externals.joblib.numpy_pickle.NumpyArrayWrapper.__init__": {
  "data": {
   "lineno": 76
  },
  "type": "function"
 },
 "sklearn.externals.joblib.numpy_pickle.NumpyArrayWrapper.read": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.numpy_pickle.NumpyArrayWrapper.read_array": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "_read_bytes",
    "int",
    "len",
    "min",
    "range",
    "sklearn.externals.joblib.numpy_pickle.pickle"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.numpy_pickle.NumpyArrayWrapper.read_mmap": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "make_memmap"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.numpy_pickle.NumpyArrayWrapper.write_array": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "max",
    "sklearn.externals.joblib.numpy_pickle.pickle"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.numpy_pickle.NumpyPickler": {
  "data": {
   "lineno": 212
  },
  "type": "class"
 },
 "sklearn.externals.joblib.numpy_pickle.NumpyPickler.__init__": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "ImportError",
    "isinstance",
    "numpy",
    "sklearn.externals.joblib.numpy_pickle.pickle"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.numpy_pickle.NumpyPickler._create_array_wrapper": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "sklearn.externals.joblib.numpy_pickle.NumpyArrayWrapper",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.numpy_pickle.NumpyPickler.save": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.numpy_pickle.NumpyUnpickler": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": [
    "sklearn.externals.joblib.numpy_pickle.pickle"
   ]
  },
  "type": "class"
 },
 "sklearn.externals.joblib.numpy_pickle.NumpyUnpickler.__init__": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": [
    "ImportError",
    "numpy",
    "sklearn.externals.joblib.numpy_pickle.os"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.numpy_pickle.NumpyUnpickler.load_build": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": [
    "ImportError",
    "isinstance",
    "sklearn.externals.joblib.numpy_pickle.NumpyArrayWrapper"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.numpy_pickle.Path": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.numpy_pickle._unpickle": {
  "data": {
   "lineno": 515,
   "symbols_in_volume": [
    "DeprecationWarning",
    "UnicodeDecodeError",
    "ValueError",
    "sklearn.externals.joblib.numpy_pickle.NumpyUnpickler",
    "sklearn.externals.joblib.numpy_pickle.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.numpy_pickle.dump": {
  "data": {
   "lineno": 364,
   "symbols_in_volume": [
    "DeprecationWarning",
    "NotImplementedError",
    "ValueError",
    "_write_fileobject",
    "hasattr",
    "isinstance",
    "len",
    "list",
    "open",
    "pathlib.Path",
    "range",
    "sklearn.externals.joblib.numpy_pickle.NumpyPickler",
    "sklearn.externals.joblib.numpy_pickle.sys",
    "sklearn.externals.joblib.numpy_pickle.warnings",
    "str",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.numpy_pickle.load": {
  "data": {
   "lineno": 548,
   "symbols_in_volume": [
    "_read_fileobject",
    "getattr",
    "hasattr",
    "isinstance",
    "load_compatibility",
    "open",
    "pathlib.Path",
    "sklearn.externals.joblib.numpy_pickle._unpickle",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.numpy_pickle.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.numpy_pickle.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.numpy_pickle.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.numpy_pickle.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.numpy_pickle.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.numpy_pickle_compat": {
  "data": {
   "symbols_in_volume": [
    "len",
    "sklearn.externals.joblib.numpy_pickle_compat.hex_str",
    "str"
   ]
  },
  "type": "module"
 },
 "sklearn.externals.joblib.numpy_pickle_compat.BytesIO": {
  "data": {
   "shadows": "io.BytesIO"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.numpy_pickle_compat.NDArrayWrapper": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "sklearn.externals.joblib.numpy_pickle_compat.NDArrayWrapper.__init__": {
  "data": {
   "lineno": 86
  },
  "type": "function"
 },
 "sklearn.externals.joblib.numpy_pickle_compat.NDArrayWrapper.read": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "getattr",
    "hasattr",
    "sklearn.externals.joblib.numpy_pickle_compat.os"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.numpy_pickle_compat.ZNDArrayWrapper": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "sklearn.externals.joblib.numpy_pickle_compat.NDArrayWrapper"
   ]
  },
  "type": "class"
 },
 "sklearn.externals.joblib.numpy_pickle_compat.ZNDArrayWrapper.__init__": {
  "data": {
   "lineno": 130
  },
  "type": "function"
 },
 "sklearn.externals.joblib.numpy_pickle_compat.ZNDArrayWrapper.read": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "open",
    "sklearn.externals.joblib.numpy_pickle_compat.os",
    "sklearn.externals.joblib.numpy_pickle_compat.read_zfile"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.numpy_pickle_compat.ZipNumpyUnpickler": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "sklearn.externals.joblib.numpy_pickle_compat.pickle"
   ]
  },
  "type": "class"
 },
 "sklearn.externals.joblib.numpy_pickle_compat.ZipNumpyUnpickler.__init__": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "ImportError",
    "numpy",
    "sklearn.externals.joblib.numpy_pickle_compat.os"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.numpy_pickle_compat.ZipNumpyUnpickler._open_pickle": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "io.BytesIO",
    "sklearn.externals.joblib.numpy_pickle_compat.read_zfile"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.numpy_pickle_compat.ZipNumpyUnpickler.load_build": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "ImportError",
    "isinstance",
    "sklearn.externals.joblib.numpy_pickle_compat.NDArrayWrapper"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.numpy_pickle_compat._CHUNK_SIZE": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.numpy_pickle_compat._MAX_LEN": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.numpy_pickle_compat.asbytes": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.numpy_pickle_compat.hex_str": {
  "data": {
   "lineno": 13
  },
  "type": "function"
 },
 "sklearn.externals.joblib.numpy_pickle_compat.load_compatibility": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "UnicodeDecodeError",
    "ValueError",
    "hasattr",
    "open",
    "sklearn.externals.joblib.numpy_pickle_compat.ZipNumpyUnpickler"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.numpy_pickle_compat.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.numpy_pickle_compat.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.numpy_pickle_compat.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.numpy_pickle_compat.read_zfile": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "int",
    "len",
    "sklearn.externals.joblib.numpy_pickle_compat._MAX_LEN",
    "sklearn.externals.joblib.numpy_pickle_compat.zlib"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.numpy_pickle_compat.write_zfile": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "len",
    "sklearn.externals.joblib.numpy_pickle_compat._MAX_LEN",
    "sklearn.externals.joblib.numpy_pickle_compat.asbytes",
    "sklearn.externals.joblib.numpy_pickle_compat.hex_str",
    "sklearn.externals.joblib.numpy_pickle_compat.zlib"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.numpy_pickle_compat.zlib": {
  "data": {
   "shadows": "zlib"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.numpy_pickle_utils": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "numpy",
    "range",
    "sklearn.externals.joblib.numpy_pickle_utils.pickle"
   ]
  },
  "type": "module"
 },
 "sklearn.externals.joblib.numpy_pickle_utils.BUFFER_SIZE": {
  "data": {
   "lineno": 203
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.numpy_pickle_utils.Pickler": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.numpy_pickle_utils.Unpickler": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.numpy_pickle_utils._IO_BUFFER_SIZE": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.numpy_pickle_utils._buffered_read_file": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "isinstance",
    "sklearn.externals.joblib.numpy_pickle_utils._IO_BUFFER_SIZE",
    "sklearn.externals.joblib.numpy_pickle_utils.bz2",
    "sklearn.externals.joblib.numpy_pickle_utils.io"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.numpy_pickle_utils._buffered_write_file": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "contextlib.closing",
    "isinstance",
    "sklearn.externals.joblib.numpy_pickle_utils._IO_BUFFER_SIZE",
    "sklearn.externals.joblib.numpy_pickle_utils.bz2",
    "sklearn.externals.joblib.numpy_pickle_utils.io"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.numpy_pickle_utils._detect_compressor": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "hasattr",
    "sklearn.externals.joblib.numpy_pickle_utils._get_prefixes_max_len"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.numpy_pickle_utils._get_prefixes_max_len": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "len",
    "max"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.numpy_pickle_utils._is_raw_file": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "getattr",
    "isinstance",
    "sklearn.externals.joblib.numpy_pickle_utils.io"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.numpy_pickle_utils._read_bytes": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "ValueError",
    "bytes",
    "len",
    "sklearn.externals.joblib.numpy_pickle_utils.io"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.numpy_pickle_utils._read_fileobject": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "DeprecationWarning",
    "isinstance",
    "locals",
    "sklearn.externals.joblib.numpy_pickle_utils._buffered_read_file",
    "sklearn.externals.joblib.numpy_pickle_utils._detect_compressor",
    "sklearn.externals.joblib.numpy_pickle_utils._is_raw_file",
    "sklearn.externals.joblib.numpy_pickle_utils.contextlib",
    "sklearn.externals.joblib.numpy_pickle_utils.io",
    "sklearn.externals.joblib.numpy_pickle_utils.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.numpy_pickle_utils._write_fileobject": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "sklearn.externals.joblib.numpy_pickle_utils._buffered_write_file"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.numpy_pickle_utils.bz2": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.numpy_pickle_utils.closing": {
  "data": {
   "shadows": "contextlib.closing"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.numpy_pickle_utils.contextlib": {
  "data": {
   "shadows": "contextlib"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.numpy_pickle_utils.io": {
  "data": {
   "shadows": "io"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.numpy_pickle_utils.np": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.numpy_pickle_utils.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.numpy_pickle_utils.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.numpy_pickle_utils.xrange": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.parallel": {
  "data": {
   "symbols_in_volume": [
    "hasattr",
    "sklearn.externals.joblib.parallel._register_dask",
    "sklearn.externals.joblib.parallel.method",
    "sklearn.externals.joblib.parallel.os",
    "sklearn.externals.joblib.parallel.threading"
   ]
  },
  "type": "module"
 },
 "sklearn.externals.joblib.parallel.BACKENDS": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.parallel.BatchCompletionCallBack": {
  "data": {
   "lineno": 350,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "sklearn.externals.joblib.parallel.BatchCompletionCallBack.__call__": {
  "data": {
   "lineno": 366,
   "symbols_in_volume": [
    "sklearn.externals.joblib.parallel.time"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.parallel.BatchCompletionCallBack.__init__": {
  "data": {
   "lineno": 361
  },
  "type": "function"
 },
 "sklearn.externals.joblib.parallel.BatchedCalls": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "sklearn.externals.joblib.parallel.BatchedCalls.__call__": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "func",
    "sklearn.externals.joblib.parallel.parallel_backend"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.parallel.BatchedCalls.__getstate__": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "func"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.parallel.BatchedCalls.__init__": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "len",
    "list"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.parallel.BatchedCalls.__len__": {
  "data": {
   "lineno": 263
  },
  "type": "function"
 },
 "sklearn.externals.joblib.parallel.BatchedCalls.__setstate__": {
  "data": {
   "lineno": 293
  },
  "type": "function"
 },
 "sklearn.externals.joblib.parallel.BatchedCalls._wrap_non_picklable_objects": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "TypeError",
    "sklearn.externals.joblib.parallel.CloudpickledObjectWrapper",
    "sklearn.externals.joblib.parallel._need_pickle_wrapping",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.parallel.CloudpickledObjectWrapper": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "sklearn.externals.joblib.parallel.CloudpickledObjectWrapper.__init__": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "dumps"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.parallel.CloudpickledObjectWrapper.__reduce__": {
  "data": {
   "lineno": 210
  },
  "type": "function"
 },
 "sklearn.externals.joblib.parallel.DEFAULT_BACKEND": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.parallel.DEFAULT_MP_CONTEXT": {
  "data": {
   "lineno": 203
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.parallel.DEFAULT_N_JOBS": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.parallel.DEFAULT_THREAD_BACKEND": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.parallel.EXTERNAL_BACKENDS": {
  "data": {
   "lineno": 73
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.parallel.Integral": {
  "data": {
   "shadows": "numbers.Integral"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.parallel.Parallel": {
  "data": {
   "lineno": 428
  },
  "type": "class"
 },
 "sklearn.externals.joblib.parallel.Parallel.__call__": {
  "data": {
   "lineno": 932,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "eval",
    "hasattr",
    "int",
    "iter",
    "len",
    "list",
    "short_format_time",
    "sklearn.externals.joblib.parallel.itertools",
    "sklearn.externals.joblib.parallel.time"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.parallel.Parallel.__enter__": {
  "data": {
   "lineno": 726
  },
  "type": "function"
 },
 "sklearn.externals.joblib.parallel.Parallel.__exit__": {
  "data": {
   "lineno": 731
  },
  "type": "function"
 },
 "sklearn.externals.joblib.parallel.Parallel.__init__": {
  "data": {
   "lineno": 650,
   "symbols_in_volume": [
    "KeyError",
    "MultiprocessingBackend",
    "ValueError",
    "backend_factory",
    "dict",
    "getattr",
    "hasattr",
    "isinstance",
    "list",
    "max",
    "memstr_to_bytes",
    "numbers.Integral",
    "sklearn.externals.joblib.parallel.BACKENDS",
    "sklearn.externals.joblib.parallel.DEFAULT_MP_CONTEXT",
    "sklearn.externals.joblib.parallel.get_active_backend",
    "sklearn.externals.joblib.parallel.threading",
    "sorted"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.parallel.Parallel.__repr__": {
  "data": {
   "lineno": 1013
  },
  "type": "function"
 },
 "sklearn.externals.joblib.parallel.Parallel._dispatch": {
  "data": {
   "lineno": 764,
   "symbols_in_volume": [
    "len",
    "sklearn.externals.joblib.parallel.BatchCompletionCallBack",
    "sklearn.externals.joblib.parallel.time"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.parallel.Parallel._effective_n_jobs": {
  "data": {
   "lineno": 755
  },
  "type": "function"
 },
 "sklearn.externals.joblib.parallel.Parallel._initialize_backend": {
  "data": {
   "lineno": 735,
   "symbols_in_volume": [
    "sklearn.externals.joblib.parallel.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.parallel.Parallel._print": {
  "data": {
   "lineno": 828,
   "symbols_in_volume": [
    "sklearn.externals.joblib.parallel.sys",
    "writer"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.parallel.Parallel._terminate_backend": {
  "data": {
   "lineno": 760
  },
  "type": "function"
 },
 "sklearn.externals.joblib.parallel.Parallel.dispatch_next": {
  "data": {
   "lineno": 789
  },
  "type": "function"
 },
 "sklearn.externals.joblib.parallel.Parallel.dispatch_one_batch": {
  "data": {
   "lineno": 801,
   "symbols_in_volume": [
    "len",
    "sklearn.externals.joblib.parallel.BatchedCalls",
    "sklearn.externals.joblib.parallel.itertools"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.parallel.Parallel.print_progress": {
  "data": {
   "lineno": 841,
   "symbols_in_volume": [
    "short_format_time",
    "sklearn.externals.joblib.parallel._verbosity_filter",
    "sklearn.externals.joblib.parallel.time"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.parallel.Parallel.retrieve": {
  "data": {
   "lineno": 884,
   "symbols_in_volume": [
    "BaseException",
    "format_outer_frames",
    "getattr",
    "hasattr",
    "isinstance",
    "len",
    "list",
    "sklearn.externals.joblib.parallel.time"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.parallel.VALID_BACKEND_CONSTRAINTS": {
  "data": {
   "lineno": 57
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.parallel.VALID_BACKEND_HINTS": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.parallel._backend": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.parallel._need_pickle_wrapping": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "callable",
    "dict",
    "functools.partial",
    "getattr",
    "isinstance",
    "iter",
    "len",
    "list",
    "next",
    "sklearn.externals.joblib.parallel.inspect"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.parallel._register_dask": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "ImportError",
    "sklearn.externals.joblib.parallel.register_parallel_backend"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.parallel._verbosity_filter": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "int",
    "math.sqrt"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.parallel.cpu_count": {
  "data": {
   "lineno": 300
  },
  "type": "function"
 },
 "sklearn.externals.joblib.parallel.delayed": {
  "data": {
   "lineno": 330,
   "symbols_in_volume": [
    "AttributeError",
    "DeprecationWarning",
    "dumps",
    "sklearn.externals.joblib.parallel.functools",
    "sklearn.externals.joblib.parallel.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.parallel.delayed.delayed_function": {
  "data": {
   "lineno": 340
  },
  "type": "function"
 },
 "sklearn.externals.joblib.parallel.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.parallel.effective_n_jobs": {
  "data": {
   "lineno": 401,
   "symbols_in_volume": [
    "sklearn.externals.joblib.parallel.get_active_backend"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.parallel.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.parallel.get_active_backend": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "ValueError",
    "getattr",
    "print",
    "sklearn.externals.joblib.parallel.BACKENDS",
    "sklearn.externals.joblib.parallel.DEFAULT_BACKEND",
    "sklearn.externals.joblib.parallel.DEFAULT_N_JOBS",
    "sklearn.externals.joblib.parallel.DEFAULT_THREAD_BACKEND",
    "sklearn.externals.joblib.parallel.VALID_BACKEND_CONSTRAINTS",
    "sklearn.externals.joblib.parallel.VALID_BACKEND_HINTS",
    "sklearn.externals.joblib.parallel._backend"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.parallel.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.parallel.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.parallel.method": {
  "data": {
   "lineno": 201
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.parallel.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.parallel.parallel_backend": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "sklearn.externals.joblib.parallel.parallel_backend.__enter__": {
  "data": {
   "lineno": 180
  },
  "type": "function"
 },
 "sklearn.externals.joblib.parallel.parallel_backend.__exit__": {
  "data": {
   "lineno": 183
  },
  "type": "function"
 },
 "sklearn.externals.joblib.parallel.parallel_backend.__init__": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "getattr",
    "isinstance",
    "register",
    "sklearn.externals.joblib.parallel.BACKENDS",
    "sklearn.externals.joblib.parallel.EXTERNAL_BACKENDS",
    "sklearn.externals.joblib.parallel._backend"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.parallel.parallel_backend.unregister": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "getattr",
    "sklearn.externals.joblib.parallel._backend"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.parallel.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.parallel.register_parallel_backend": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": [
    "sklearn.externals.joblib.parallel.BACKENDS",
    "sklearn.externals.joblib.parallel.DEFAULT_BACKEND"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.parallel.sqrt": {
  "data": {
   "shadows": "math.sqrt"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.parallel.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.parallel.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.parallel.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.parallel.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.pool": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "NameError",
    "numpy",
    "sklearn.externals.joblib.pool.sys",
    "type"
   ]
  },
  "type": "module"
 },
 "sklearn.externals.joblib.pool.BytesIO": {
  "data": {
   "shadows": "io.BytesIO"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.pool.CustomizablePickler": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "pickle.Pickler"
   ]
  },
  "type": "class"
 },
 "sklearn.externals.joblib.pool.CustomizablePickler.__init__": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "hasattr",
    "pickle.HIGHEST_PROTOCOL",
    "pickle.Pickler",
    "pickle.Pickler.__init__",
    "pickle.Pickler.dispatch.copy",
    "sklearn.externals.joblib.pool.copyreg",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.pool.CustomizablePickler.register": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "hasattr",
    "pickle.Pickler",
    "reduce_func",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.pool.CustomizablePickler.register.dispatcher": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "reduce_func"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.pool.CustomizablePicklingQueue": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "sklearn.externals.joblib.pool.CustomizablePicklingQueue.__getstate__": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "assert_spawning"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.pool.CustomizablePicklingQueue.__init__": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "sklearn.externals.joblib.pool.sys"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.pool.CustomizablePicklingQueue.__setstate__": {
  "data": {
   "lineno": 134
  },
  "type": "function"
 },
 "sklearn.externals.joblib.pool.CustomizablePicklingQueue._make_methods": {
  "data": {
   "lineno": 142
  },
  "type": "function"
 },
 "sklearn.externals.joblib.pool.CustomizablePicklingQueue._make_methods.get": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "racquire",
    "recv",
    "rrelease"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.pool.CustomizablePicklingQueue._make_methods.put": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "send",
    "wlock_acquire",
    "wlock_release"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.pool.CustomizablePicklingQueue._make_methods.send": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "io.BytesIO",
    "sklearn.externals.joblib.pool.CustomizablePickler"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.pool.CustomizablePicklingQueue.empty": {
  "data": {
   "lineno": 139
  },
  "type": "function"
 },
 "sklearn.externals.joblib.pool.HIGHEST_PROTOCOL": {
  "data": {
   "shadows": "pickle.HIGHEST_PROTOCOL"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.pool.MemmappingPool": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "sklearn.externals.joblib.pool.PicklingPool"
   ]
  },
  "type": "class"
 },
 "sklearn.externals.joblib.pool.MemmappingPool.__init__": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": [
    "DeprecationWarning",
    "dict",
    "get_memmapping_reducers",
    "id",
    "sklearn.externals.joblib.pool.MemmappingPool",
    "sklearn.externals.joblib.pool.warnings",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.pool.MemmappingPool.terminate": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": [
    "OSError",
    "delete_folder",
    "isinstance",
    "range",
    "sklearn.externals.joblib.pool.MemmappingPool",
    "sklearn.externals.joblib.pool.WindowsError",
    "sklearn.externals.joblib.pool.warnings",
    "super",
    "time.sleep"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.pool.Pickler": {
  "data": {
   "shadows": "pickle.Pickler"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.pool.PicklingPool": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "multiprocessing.pool.Pool"
   ]
  },
  "type": "class"
 },
 "sklearn.externals.joblib.pool.PicklingPool.__init__": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "dict",
    "sklearn.externals.joblib.pool.PicklingPool",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.pool.PicklingPool._setup_queues": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "getattr",
    "sklearn.externals.joblib.pool.CustomizablePicklingQueue"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.pool.Pool": {
  "data": {
   "shadows": "multiprocessing.pool.Pool"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.pool.WindowsError": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.pool.copyreg": {
  "data": {
   "shadows": "copyreg"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.pool.np": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.pool.sleep": {
  "data": {
   "shadows": "time.sleep"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.pool.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.pool.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.testing": {
  "data": {
   "symbols_in_volume": [
    "sklearn.externals.joblib.testing._pytest",
    "sklearn.externals.joblib.testing.pytest"
   ]
  },
  "type": "module"
 },
 "sklearn.externals.joblib.testing.PY3_OR_LATER": {
  "data": {
   "shadows": "sklearn.externals.joblib._compat.PY3_OR_LATER"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.testing.SkipTest": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.testing._pytest": {
  "data": {
   "shadows": "_pytest"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.testing.check_subprocess_call": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.externals.joblib._compat.PY3_OR_LATER",
    "sklearn.externals.joblib.testing.re",
    "sklearn.externals.joblib.testing.subprocess",
    "sklearn.externals.joblib.testing.threading",
    "sklearn.externals.joblib.testing.timeout"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.testing.check_subprocess_call.kill_process": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "sklearn.externals.joblib.testing.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.testing.fixture": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.testing.os.path": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.testing.parametrize": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.testing.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.testing.raises": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.testing.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.testing.skipif": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.testing.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.testing.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.testing.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.testing.timeout": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.testing.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.testing.warnings_to_stdout": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "sklearn.externals.joblib.testing.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.testing.warnings_to_stdout.showwarning": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "showwarning_orig",
    "sklearn.externals.joblib.testing.sys"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.testing.warns": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "sklearn.externals.setup": {
  "data": {},
  "type": "module"
 },
 "sklearn.externals.setup.Configuration": {
  "data": {
   "shadows": "numpy.distutils.misc_util.Configuration"
  },
  "type": "import"
 },
 "sklearn.externals.setup.configuration": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "numpy.distutils.misc_util.Configuration"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction": {
  "data": {},
  "type": "module"
 },
 "sklearn.feature_extraction.__all__": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "sklearn.feature_extraction.dict_vectorizer": {
  "data": {},
  "type": "module"
 },
 "sklearn.feature_extraction.dict_vectorizer.DictVectorizer": {
  "data": {
   "lineno": 26
  },
  "type": "class"
 },
 "sklearn.feature_extraction.dict_vectorizer.DictVectorizer.__init__": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "numpy.float64"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.dict_vectorizer.DictVectorizer._transform": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "ValueError",
    "array.array",
    "dtype",
    "enumerate",
    "isinstance",
    "len",
    "numpy.empty",
    "numpy.frombuffer",
    "numpy.int32",
    "numpy.intc",
    "scipy.sparse.csr_matrix"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.dict_vectorizer.DictVectorizer.fit": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "dict",
    "enumerate",
    "isinstance",
    "len"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.dict_vectorizer.DictVectorizer.fit_transform": {
  "data": {
   "lineno": 213
  },
  "type": "function"
 },
 "sklearn.feature_extraction.dict_vectorizer.DictVectorizer.get_feature_names": {
  "data": {
   "lineno": 312
  },
  "type": "function"
 },
 "sklearn.feature_extraction.dict_vectorizer.DictVectorizer.inverse_transform": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "check_array",
    "dict",
    "dict_type",
    "enumerate",
    "scipy.sparse.issparse",
    "xrange",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.dict_vectorizer.DictVectorizer.restrict": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": [
    "len",
    "numpy.where",
    "operator.itemgetter",
    "sorted"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.dict_vectorizer.DictVectorizer.transform": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "KeyError",
    "dtype",
    "enumerate",
    "isinstance",
    "len",
    "numpy.zeros",
    "sklearn.feature_extraction.dict_vectorizer._tosequence"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.dict_vectorizer.Mapping": {
  "data": {
   "shadows": "_Mapping"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.dict_vectorizer._tosequence": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "isinstance",
    "tosequence"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.dict_vectorizer.array": {
  "data": {
   "shadows": "array.array"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.dict_vectorizer.itemgetter": {
  "data": {
   "shadows": "operator.itemgetter"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.dict_vectorizer.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.dict_vectorizer.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.hashing": {
  "data": {},
  "type": "module"
 },
 "sklearn.feature_extraction.hashing.FeatureHasher": {
  "data": {
   "lineno": 28
  },
  "type": "class"
 },
 "sklearn.feature_extraction.hashing.FeatureHasher.__init__": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "DeprecationWarning",
    "numpy.float64",
    "sklearn.feature_extraction.hashing.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.hashing.FeatureHasher._validate_params": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "isinstance",
    "numpy.integer",
    "sklearn.feature_extraction.hashing.numbers",
    "staticmethod",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.hashing.FeatureHasher.fit": {
  "data": {
   "lineno": 124
  },
  "type": "function"
 },
 "sklearn.feature_extraction.hashing.FeatureHasher.transform": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "ValueError",
    "iter",
    "numpy.abs",
    "scipy.sparse.csr_matrix",
    "sklearn.feature_extraction.hashing._iteritems"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.hashing._hashing_transform": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.hashing._iteritems": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.hashing.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.hashing.numbers": {
  "data": {
   "shadows": "numbers"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.hashing.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.hashing.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.image": {
  "data": {},
  "type": "module"
 },
 "sklearn.feature_extraction.image.PatchExtractor": {
  "data": {
   "lineno": 443
  },
  "type": "class"
 },
 "sklearn.feature_extraction.image.PatchExtractor.__init__": {
  "data": {
   "lineno": 465
  },
  "type": "function"
 },
 "sklearn.feature_extraction.image.PatchExtractor.fit": {
  "data": {
   "lineno": 470
  },
  "type": "function"
 },
 "sklearn.feature_extraction.image.PatchExtractor.transform": {
  "data": {
   "lineno": 483,
   "symbols_in_volume": [
    "check_random_state",
    "enumerate",
    "numpy.empty",
    "numpy.reshape",
    "sklearn.feature_extraction.image._compute_n_patches",
    "sklearn.feature_extraction.image.extract_patches_2d"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.image.__all__": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "sklearn.feature_extraction.image._compute_gradient_3d": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "numpy.abs"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.image._compute_n_patches": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "isinstance",
    "sklearn.feature_extraction.image.numbers"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.image._make_edges_3d": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.hstack",
    "numpy.vstack"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.image._mask_edges_weights": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "numpy.in1d",
    "numpy.logical_and",
    "numpy.searchsorted",
    "numpy.unique"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.image._to_graph": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.asarray",
    "numpy.atleast_3d",
    "numpy.bool",
    "numpy.hstack",
    "numpy.int",
    "numpy.ndarray",
    "numpy.ones",
    "numpy.sum",
    "return_as",
    "scipy.sparse.coo_matrix",
    "sklearn.feature_extraction.image._compute_gradient_3d",
    "sklearn.feature_extraction.image._make_edges_3d",
    "sklearn.feature_extraction.image._mask_edges_weights"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.image.as_strided": {
  "data": {
   "shadows": "numpy.lib.stride_tricks.as_strided"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.image.extract_patches": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "numpy.array",
    "numpy.lib.stride_tricks.as_strided",
    "sklearn.feature_extraction.image.numbers",
    "slice",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.image.extract_patches_2d": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "ValueError",
    "check_array",
    "check_random_state",
    "sklearn.feature_extraction.image._compute_n_patches",
    "sklearn.feature_extraction.image.extract_patches"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.image.grid_to_graph": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "numpy.int",
    "return_as",
    "scipy.sparse.coo_matrix",
    "sklearn.feature_extraction.image._to_graph"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.image.img_to_graph": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "numpy.atleast_3d",
    "return_as",
    "scipy.sparse.coo_matrix",
    "sklearn.feature_extraction.image._to_graph"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.image.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.image.numbers": {
  "data": {
   "shadows": "numbers"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.image.product": {
  "data": {
   "shadows": "itertools.product"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.image.reconstruct_from_patches_2d": {
  "data": {
   "lineno": 398,
   "symbols_in_volume": [
    "float",
    "itertools.product",
    "min",
    "numpy.zeros",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.image.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.setup": {
  "data": {},
  "type": "module"
 },
 "sklearn.feature_extraction.setup.Configuration": {
  "data": {
   "shadows": "numpy.distutils.misc_util.Configuration"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.setup.configuration": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "numpy.distutils.misc_util.Configuration",
    "sklearn.feature_extraction.setup.numpy",
    "sklearn.feature_extraction.setup.os",
    "sklearn.feature_extraction.setup.platform"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.setup.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.setup.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.setup.platform": {
  "data": {
   "shadows": "platform"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.stop_words": {
  "data": {
   "symbols_in_volume": [
    "frozenset"
   ]
  },
  "type": "module"
 },
 "sklearn.feature_extraction.stop_words.ENGLISH_STOP_WORDS": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "sklearn.feature_extraction.tests": {
  "data": {},
  "type": "module"
 },
 "sklearn.feature_extraction.tests.test_dict_vectorizer": {
  "data": {},
  "type": "module"
 },
 "sklearn.feature_extraction.tests.test_dict_vectorizer.DictVectorizer": {
  "data": {
   "shadows": "sklearn.feature_extraction.DictVectorizer"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_dict_vectorizer.Random": {
  "data": {
   "shadows": "random.Random"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_dict_vectorizer.SelectKBest": {
  "data": {
   "shadows": "sklearn.feature_selection.SelectKBest"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_dict_vectorizer.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_dict_vectorizer.assert_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_dict_vectorizer.assert_false": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_false"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_dict_vectorizer.assert_in": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_in"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_dict_vectorizer.assert_true": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_true"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_dict_vectorizer.chi2": {
  "data": {
   "shadows": "sklearn.feature_selection.chi2"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_dict_vectorizer.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_dict_vectorizer.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_dict_vectorizer.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_dict_vectorizer.test_deterministic_vocabulary": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "dict",
    "random.Random",
    "range",
    "sklearn.feature_extraction.DictVectorizer",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_dict_vectorizer.test_dictvectorizer": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "int",
    "iter",
    "numpy.float32",
    "numpy.int16",
    "numpy.testing.assert_array_equal",
    "scipy.sparse.issparse",
    "sklearn.feature_extraction.DictVectorizer",
    "sklearn.feature_extraction.tests.test_dict_vectorizer.pytest",
    "sklearn.utils.testing.assert_equal",
    "sorted"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_dict_vectorizer.test_feature_selection": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "dict",
    "range",
    "sklearn.feature_extraction.DictVectorizer",
    "sklearn.feature_selection.SelectKBest",
    "sklearn.feature_selection.chi2",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_dict_vectorizer.test_one_of_k": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "sklearn.feature_extraction.DictVectorizer",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_false",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_dict_vectorizer.test_unseen_or_no_features": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "ValueError",
    "numpy.testing.assert_array_equal",
    "numpy.zeros",
    "sklearn.feature_extraction.DictVectorizer",
    "sklearn.utils.testing.assert_in",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_feature_hasher": {
  "data": {
   "symbols_in_volume": [
    "sklearn.utils.testing.fails_if_pypy"
   ]
  },
  "type": "module"
 },
 "sklearn.feature_extraction.tests.test_feature_hasher.FeatureHasher": {
  "data": {
   "shadows": "sklearn.feature_extraction.FeatureHasher"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_feature_hasher.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_feature_hasher.assert_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_feature_hasher.assert_raises": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_feature_hasher.assert_true": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_true"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_feature_hasher.fails_if_pypy": {
  "data": {
   "shadows": "sklearn.utils.testing.fails_if_pypy"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_feature_hasher.ignore_warnings": {
  "data": {
   "shadows": "sklearn.utils.testing.ignore_warnings"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_feature_hasher.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_feature_hasher.pytestmark": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "sklearn.feature_extraction.tests.test_feature_hasher.test_feature_hasher_dicts": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "iter",
    "numpy.testing.assert_array_equal",
    "sklearn.feature_extraction.FeatureHasher",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_feature_hasher.test_feature_hasher_pairs": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "iter",
    "numpy.abs",
    "sklearn.feature_extraction.FeatureHasher",
    "sklearn.utils.testing.assert_equal",
    "sorted"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_feature_hasher.test_feature_hasher_pairs_with_string_values": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "iter",
    "numpy.abs",
    "numpy.testing.assert_array_equal",
    "sklearn.feature_extraction.FeatureHasher",
    "sklearn.utils.testing.assert_equal",
    "sorted"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_feature_hasher.test_feature_hasher_strings": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "DeprecationWarning",
    "len",
    "numpy.all",
    "sklearn.feature_extraction.FeatureHasher",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_true",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_feature_hasher.test_hash_collisions": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "DeprecationWarning",
    "abs",
    "len",
    "list",
    "sklearn.feature_extraction.FeatureHasher",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_feature_hasher.test_hash_empty_input": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "iter",
    "len",
    "numpy.testing.assert_array_equal",
    "numpy.zeros",
    "range",
    "sklearn.feature_extraction.FeatureHasher"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_feature_hasher.test_hasher_alternate_sign": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "DeprecationWarning",
    "list",
    "numpy.testing.assert_array_equal",
    "sklearn.feature_extraction.FeatureHasher",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_feature_hasher.test_hasher_invalid_input": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "Exception",
    "TypeError",
    "ValueError",
    "numpy.uint16",
    "sklearn.feature_extraction.FeatureHasher",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_feature_hasher.test_hasher_negative": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "DeprecationWarning",
    "sklearn.feature_extraction.FeatureHasher",
    "sklearn.utils.testing.assert_true",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_feature_hasher.test_hasher_set_params": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "TypeError",
    "numpy.inf",
    "sklearn.feature_extraction.FeatureHasher",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_feature_hasher.test_hasher_zeros": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "sklearn.feature_extraction.FeatureHasher",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_feature_hasher.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_image": {
  "data": {
   "symbols_in_volume": [
    "sklearn.feature_extraction.tests.test_image._downsampled_face",
    "sklearn.feature_extraction.tests.test_image._make_images",
    "sklearn.feature_extraction.tests.test_image._orange_face",
    "sklearn.feature_extraction.tests.test_image.downsampled_face"
   ]
  },
  "type": "module"
 },
 "sklearn.feature_extraction.tests.test_image.PatchExtractor": {
  "data": {
   "shadows": "sklearn.feature_extraction.image.PatchExtractor"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_image._downsampled_face": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "AttributeError",
    "numpy.float32",
    "scipy.face",
    "scipy.misc.face"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_image._make_images": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "numpy.zeros",
    "sklearn.feature_extraction.tests.test_image._downsampled_face"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_image._orange_face": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "numpy.zeros",
    "sklearn.feature_extraction.tests.test_image._downsampled_face"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_image.assert_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_image.assert_raises": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_image.assert_true": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_true"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_image.connected_components": {
  "data": {
   "shadows": "scipy.sparse.csgraph.connected_components"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_image.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_image.downsampled_face": {
  "data": {
   "lineno": 125
  },
  "type": "constant"
 },
 "sklearn.feature_extraction.tests.test_image.extract_patches": {
  "data": {
   "shadows": "sklearn.feature_extraction.image.extract_patches"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_image.extract_patches_2d": {
  "data": {
   "shadows": "sklearn.feature_extraction.image.extract_patches_2d"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_image.face_collection": {
  "data": {
   "lineno": 127
  },
  "type": "constant"
 },
 "sklearn.feature_extraction.tests.test_image.grid_to_graph": {
  "data": {
   "shadows": "sklearn.feature_extraction.image.grid_to_graph"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_image.ignore_warnings": {
  "data": {
   "shadows": "sklearn.utils.testing.ignore_warnings"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_image.img_to_graph": {
  "data": {
   "shadows": "sklearn.feature_extraction.image.img_to_graph"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_image.misc": {
  "data": {
   "shadows": "scipy.misc"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_image.ndimage": {
  "data": {
   "shadows": "scipy.ndimage"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_image.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_image.orange_face": {
  "data": {
   "lineno": 126
  },
  "type": "constant"
 },
 "sklearn.feature_extraction.tests.test_image.reconstruct_from_patches_2d": {
  "data": {
   "shadows": "sklearn.feature_extraction.image.reconstruct_from_patches_2d"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_image.sp": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_image.test_connect_regions": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "AttributeError",
    "DeprecationWarning",
    "scipy.face",
    "scipy.misc.face",
    "scipy.ndimage.label",
    "scipy.sparse.csgraph.connected_components",
    "sklearn.feature_extraction.image.img_to_graph",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_image.test_connect_regions_with_grid": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "AttributeError",
    "DeprecationWarning",
    "scipy.face",
    "scipy.misc.face",
    "scipy.ndimage.label",
    "scipy.sparse.csgraph.connected_components",
    "sklearn.feature_extraction.image.grid_to_graph",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_image.test_extract_patch_same_size_image": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "sklearn.feature_extraction.image.extract_patches_2d",
    "sklearn.feature_extraction.tests.test_image.downsampled_face",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_image.test_extract_patches_all": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "sklearn.feature_extraction.image.extract_patches_2d",
    "sklearn.feature_extraction.tests.test_image.downsampled_face",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_image.test_extract_patches_all_color": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "sklearn.feature_extraction.image.extract_patches_2d",
    "sklearn.feature_extraction.tests.test_image.orange_face",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_image.test_extract_patches_all_rect": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "sklearn.feature_extraction.image.extract_patches_2d",
    "sklearn.feature_extraction.tests.test_image.downsampled_face",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_image.test_extract_patches_less_than_max_patches": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "sklearn.feature_extraction.image.extract_patches_2d",
    "sklearn.feature_extraction.tests.test_image.downsampled_face",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_image.test_extract_patches_max_patches": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "sklearn.feature_extraction.image.extract_patches_2d",
    "sklearn.feature_extraction.tests.test_image.downsampled_face",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_image.test_extract_patches_square": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": [
    "sklearn.feature_extraction.image.extract_patches",
    "sklearn.feature_extraction.tests.test_image.downsampled_face",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_image.test_extract_patches_strided": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "numpy.prod",
    "sklearn.feature_extraction.image.extract_patches",
    "sklearn.utils.testing.assert_true",
    "slice",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_image.test_grid_to_graph": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "numpy.bool",
    "numpy.float64",
    "numpy.int",
    "numpy.int16",
    "numpy.ndarray",
    "numpy.ones",
    "numpy.zeros",
    "scipy.sparse.csgraph.connected_components",
    "sklearn.feature_extraction.image.grid_to_graph",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_image.test_img_to_graph": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "numpy.mgrid",
    "numpy.testing.assert_array_equal",
    "sklearn.feature_extraction.image.img_to_graph",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_image.test_patch_extractor_all_patches": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "len",
    "sklearn.feature_extraction.image.PatchExtractor",
    "sklearn.feature_extraction.tests.test_image.face_collection",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_image.test_patch_extractor_color": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "len",
    "sklearn.feature_extraction.image.PatchExtractor",
    "sklearn.feature_extraction.tests.test_image._make_images",
    "sklearn.feature_extraction.tests.test_image.orange_face",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_image.test_patch_extractor_fit": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "sklearn.feature_extraction.image.PatchExtractor",
    "sklearn.feature_extraction.tests.test_image.face_collection",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_image.test_patch_extractor_max_patches": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "int",
    "len",
    "sklearn.feature_extraction.image.PatchExtractor",
    "sklearn.feature_extraction.tests.test_image.face_collection",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_image.test_patch_extractor_max_patches_default": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "len",
    "sklearn.feature_extraction.image.PatchExtractor",
    "sklearn.feature_extraction.tests.test_image.face_collection",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_image.test_reconstruct_patches_perfect": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "numpy.testing.assert_array_almost_equal",
    "sklearn.feature_extraction.image.extract_patches_2d",
    "sklearn.feature_extraction.image.reconstruct_from_patches_2d",
    "sklearn.feature_extraction.tests.test_image.downsampled_face"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_image.test_reconstruct_patches_perfect_color": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "numpy.testing.assert_array_almost_equal",
    "sklearn.feature_extraction.image.extract_patches_2d",
    "sklearn.feature_extraction.image.reconstruct_from_patches_2d",
    "sklearn.feature_extraction.tests.test_image.orange_face"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_image.test_width_patch": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "sklearn.feature_extraction.image.extract_patches_2d",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text": {
  "data": {
   "symbols_in_volume": [
    "sklearn.feature_extraction.tests.test_text.JUNK_FOOD_DOCS",
    "sklearn.feature_extraction.tests.test_text.NOTJUNK_FOOD_DOCS"
   ]
  },
  "type": "module"
 },
 "sklearn.feature_extraction.tests.test_text.ALL_FOOD_DOCS": {
  "data": {
   "lineno": 61
  },
  "type": "constant"
 },
 "sklearn.feature_extraction.tests.test_text.CountVectorizer": {
  "data": {
   "shadows": "sklearn.feature_extraction.text.CountVectorizer"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_text.ENGLISH_STOP_WORDS": {
  "data": {
   "shadows": "sklearn.feature_extraction.text.ENGLISH_STOP_WORDS"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_text.GridSearchCV": {
  "data": {
   "shadows": "sklearn.model_selection.GridSearchCV"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_text.HashingVectorizer": {
  "data": {
   "shadows": "sklearn.feature_extraction.text.HashingVectorizer"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_text.IS_PYPY": {
  "data": {
   "shadows": "sklearn.utils.IS_PYPY"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_text.JUNK_FOOD_DOCS": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "sklearn.feature_extraction.tests.test_text.LinearSVC": {
  "data": {
   "shadows": "sklearn.svm.LinearSVC"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_text.Mapping": {
  "data": {
   "shadows": "sklearn.utils.fixes._Mapping"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_text.NOTJUNK_FOOD_DOCS": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "sklearn.feature_extraction.tests.test_text.PY2": {
  "data": {
   "shadows": "sklearn.externals.six.PY2"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_text.Pipeline": {
  "data": {
   "shadows": "sklearn.pipeline.Pipeline"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_text.SkipTest": {
  "data": {
   "shadows": "sklearn.utils.testing.SkipTest"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_text.StringIO": {
  "data": {
   "shadows": "io.StringIO"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_text.TfidfTransformer": {
  "data": {
   "shadows": "sklearn.feature_extraction.text.TfidfTransformer"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_text.TfidfVectorizer": {
  "data": {
   "shadows": "sklearn.feature_extraction.text.TfidfVectorizer"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_text.assert_allclose_dense_sparse": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_allclose_dense_sparse"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_text.assert_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_text.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_text.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_text.assert_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_text.assert_false": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_false"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_text.assert_greater": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_greater"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_text.assert_in": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_in"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_text.assert_less": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_less"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_text.assert_no_warnings": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_no_warnings"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_text.assert_not_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_not_equal"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_text.assert_raise_message": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raise_message"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_text.assert_raises": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_text.assert_true": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_true"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_text.assert_warns_message": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_warns_message"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_text.clean_warning_registry": {
  "data": {
   "shadows": "sklearn.utils.testing.clean_warning_registry"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_text.clone": {
  "data": {
   "shadows": "sklearn.base.clone"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_text.cross_val_score": {
  "data": {
   "shadows": "sklearn.model_selection.cross_val_score"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_text.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_text.fails_if_pypy": {
  "data": {
   "shadows": "sklearn.utils.testing.fails_if_pypy"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_text.ignore_warnings": {
  "data": {
   "shadows": "sklearn.utils.testing.ignore_warnings"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_text.lazy_analyze": {
  "data": {
   "lineno": 76
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_text.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_text.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_text.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_text.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_text.split_tokenize": {
  "data": {
   "lineno": 72
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.strip_accents_ascii": {
  "data": {
   "shadows": "sklearn.feature_extraction.text.strip_accents_ascii"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_text.strip_accents_unicode": {
  "data": {
   "shadows": "sklearn.feature_extraction.text.strip_accents_unicode"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_text.strip_eacute": {
  "data": {
   "lineno": 68
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.strip_tags": {
  "data": {
   "shadows": "sklearn.feature_extraction.text.strip_tags"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_text.test_char_ngram_analyzer": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "cnga",
    "io.StringIO",
    "sklearn.feature_extraction.text.CountVectorizer",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_char_wb_ngram_analyzer": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "cnga",
    "io.StringIO",
    "sklearn.feature_extraction.text.CountVectorizer",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_count_binary_occurrences": {
  "data": {
   "lineno": 667,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.testing.assert_array_equal",
    "sklearn.feature_extraction.text.CountVectorizer",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_count_vectorizer_max_features": {
  "data": {
   "lineno": 595,
   "symbols_in_volume": [
    "numpy.argmax",
    "sklearn.feature_extraction.tests.test_text.JUNK_FOOD_DOCS",
    "sklearn.feature_extraction.text.CountVectorizer",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_count_vectorizer_pipeline_grid_selection": {
  "data": {
   "lineno": 737,
   "symbols_in_volume": [
    "len",
    "numpy.testing.assert_array_equal",
    "sklearn.feature_extraction.tests.test_text.JUNK_FOOD_DOCS",
    "sklearn.feature_extraction.tests.test_text.NOTJUNK_FOOD_DOCS",
    "sklearn.feature_extraction.tests.test_text.pytest",
    "sklearn.feature_extraction.text.CountVectorizer",
    "sklearn.model_selection.GridSearchCV",
    "sklearn.model_selection.train_test_split",
    "sklearn.pipeline.Pipeline",
    "sklearn.svm.LinearSVC",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_countvectorizer_custom_vocabulary": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "collections.defaultdict",
    "dict",
    "functools.partial",
    "int",
    "isinstance",
    "iter",
    "len",
    "list",
    "set",
    "sklearn.feature_extraction.tests.test_text.JUNK_FOOD_DOCS",
    "sklearn.feature_extraction.text.CountVectorizer",
    "sklearn.utils.fixes._Mapping",
    "sklearn.utils.testing.assert_equal",
    "typ"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_countvectorizer_custom_vocabulary_gap_index": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.feature_extraction.text.CountVectorizer",
    "sklearn.utils.testing.assert_in",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_countvectorizer_custom_vocabulary_pipeline": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "len",
    "set",
    "sklearn.feature_extraction.tests.test_text.ALL_FOOD_DOCS",
    "sklearn.feature_extraction.text.CountVectorizer",
    "sklearn.feature_extraction.text.TfidfTransformer",
    "sklearn.pipeline.Pipeline",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_countvectorizer_custom_vocabulary_repeated_indices": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.feature_extraction.text.CountVectorizer",
    "sklearn.utils.testing.assert_in",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_countvectorizer_empty_vocabulary": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.feature_extraction.text.CountVectorizer",
    "sklearn.utils.testing.assert_in",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_countvectorizer_stop_words": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "ValueError",
    "set",
    "sklearn.feature_extraction.text.CountVectorizer",
    "sklearn.feature_extraction.text.ENGLISH_STOP_WORDS",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_countvectorizer_vocab_dicts_when_pickling": {
  "data": {
   "lineno": 921,
   "symbols_in_volume": [
    "dict",
    "numpy.array",
    "numpy.random.RandomState",
    "range",
    "sklearn.feature_extraction.tests.test_text.ALL_FOOD_DOCS",
    "sklearn.feature_extraction.tests.test_text.pickle",
    "sklearn.feature_extraction.text.CountVectorizer",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_countvectorizer_vocab_sets_when_pickling": {
  "data": {
   "lineno": 906,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.random.RandomState",
    "range",
    "set",
    "sklearn.feature_extraction.tests.test_text.ALL_FOOD_DOCS",
    "sklearn.feature_extraction.tests.test_text.pickle",
    "sklearn.feature_extraction.text.CountVectorizer",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_feature_names": {
  "data": {
   "lineno": 547,
   "symbols_in_volume": [
    "ValueError",
    "enumerate",
    "len",
    "numpy.testing.assert_array_equal",
    "sklearn.feature_extraction.tests.test_text.ALL_FOOD_DOCS",
    "sklearn.feature_extraction.text.CountVectorizer",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_false",
    "sklearn.utils.testing.assert_raises",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_fit_countvectorizer_twice": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": [
    "sklearn.feature_extraction.tests.test_text.ALL_FOOD_DOCS",
    "sklearn.feature_extraction.text.CountVectorizer",
    "sklearn.utils.testing.assert_not_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_hashed_binary_occurrences": {
  "data": {
   "lineno": 690,
   "symbols_in_volume": [
    "DeprecationWarning",
    "numpy.float64",
    "numpy.max",
    "sklearn.feature_extraction.text.HashingVectorizer",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.fails_if_pypy",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_hashing_vectorizer": {
  "data": {
   "lineno": 507,
   "symbols_in_volume": [
    "DeprecationWarning",
    "len",
    "numpy.linalg.norm",
    "numpy.max",
    "numpy.min",
    "range",
    "sklearn.feature_extraction.tests.test_text.ALL_FOOD_DOCS",
    "sklearn.feature_extraction.text.HashingVectorizer",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_true",
    "sklearn.utils.testing.fails_if_pypy",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_hashingvectorizer_nan_in_docs": {
  "data": {
   "lineno": 1005,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.utils.testing.assert_raise_message",
    "sklearn.utils.testing.fails_if_pypy"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_hashingvectorizer_nan_in_docs.func": {
  "data": {
   "lineno": 1012,
   "symbols_in_volume": [
    "numpy.nan",
    "sklearn.feature_extraction.text.HashingVectorizer"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_non_unique_vocab": {
  "data": {
   "lineno": 999,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.feature_extraction.text.CountVectorizer",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_pickling_transformer": {
  "data": {
   "lineno": 959,
   "symbols_in_volume": [
    "numpy.testing.assert_array_equal",
    "sklearn.feature_extraction.tests.test_text.JUNK_FOOD_DOCS",
    "sklearn.feature_extraction.tests.test_text.pickle",
    "sklearn.feature_extraction.text.CountVectorizer",
    "sklearn.feature_extraction.text.TfidfTransformer",
    "sklearn.utils.testing.assert_equal",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_pickling_vectorizer": {
  "data": {
   "lineno": 877,
   "symbols_in_volume": [
    "isinstance",
    "numpy.testing.assert_array_equal",
    "sklearn.feature_extraction.tests.test_text.JUNK_FOOD_DOCS",
    "sklearn.feature_extraction.tests.test_text.lazy_analyze",
    "sklearn.feature_extraction.tests.test_text.pickle",
    "sklearn.feature_extraction.tests.test_text.strip_eacute",
    "sklearn.feature_extraction.text.CountVectorizer",
    "sklearn.feature_extraction.text.HashingVectorizer",
    "sklearn.feature_extraction.text.TfidfVectorizer",
    "sklearn.feature_extraction.text.strip_tags",
    "sklearn.utils.IS_PYPY",
    "sklearn.utils.testing.assert_equal",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_stop_words_removal": {
  "data": {
   "lineno": 937,
   "symbols_in_volume": [
    "delattr",
    "numpy.testing.assert_array_equal",
    "sklearn.feature_extraction.tests.test_text.JUNK_FOOD_DOCS",
    "sklearn.feature_extraction.tests.test_text.strip_eacute",
    "sklearn.feature_extraction.text.CountVectorizer",
    "sklearn.feature_extraction.text.TfidfVectorizer",
    "sklearn.feature_extraction.text.strip_tags"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_strip_accents": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "sklearn.feature_extraction.text.strip_accents_unicode",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_sublinear_tf": {
  "data": {
   "lineno": 380,
   "symbols_in_volume": [
    "sklearn.feature_extraction.text.TfidfTransformer",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_greater",
    "sklearn.utils.testing.assert_less"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_tf_idf_smoothing": {
  "data": {
   "lineno": 330,
   "symbols_in_volume": [
    "numpy.testing.assert_array_almost_equal",
    "sklearn.feature_extraction.text.TfidfTransformer",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_tfidf_no_smoothing": {
  "data": {
   "lineno": 350,
   "symbols_in_volume": [
    "RuntimeWarning",
    "len",
    "numpy.array",
    "numpy.testing.assert_array_almost_equal",
    "sklearn.feature_extraction.tests.test_text.warnings",
    "sklearn.feature_extraction.text.TfidfTransformer",
    "sklearn.utils.testing.SkipTest",
    "sklearn.utils.testing.assert_true",
    "sklearn.utils.testing.assert_warns_message",
    "sklearn.utils.testing.clean_warning_registry"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_tfidf_transformer_sparse": {
  "data": {
   "lineno": 1063,
   "symbols_in_volume": [
    "numpy.float64",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.rand",
    "sklearn.feature_extraction.text.TfidfTransformer",
    "sklearn.utils.testing.assert_allclose_dense_sparse"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_tfidf_transformer_type": {
  "data": {
   "lineno": 1056,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.float64",
    "scipy.sparse.rand",
    "sklearn.feature_extraction.tests.test_text.pytest",
    "sklearn.feature_extraction.text.TfidfTransformer"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_tfidf_vectorizer_setter": {
  "data": {
   "lineno": 980,
   "symbols_in_volume": [
    "numpy.testing.assert_array_equal",
    "sklearn.feature_extraction.tests.test_text.JUNK_FOOD_DOCS",
    "sklearn.feature_extraction.text.TfidfVectorizer"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_tfidf_vectorizer_setters": {
  "data": {
   "lineno": 494,
   "symbols_in_volume": [
    "sklearn.feature_extraction.text.TfidfVectorizer",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_tfidf_vectorizer_type": {
  "data": {
   "lineno": 1074,
   "symbols_in_volume": [
    "UserWarning",
    "isinstance",
    "len",
    "numpy.array",
    "numpy.float32",
    "numpy.float64",
    "numpy.int32",
    "numpy.int64",
    "sklearn.feature_extraction.tests.test_text.pytest",
    "sklearn.feature_extraction.text.TfidfVectorizer"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_tfidf_vectorizer_with_fixed_vocabulary": {
  "data": {
   "lineno": 867,
   "symbols_in_volume": [
    "numpy.testing.assert_array_almost_equal",
    "sklearn.feature_extraction.tests.test_text.ALL_FOOD_DOCS",
    "sklearn.feature_extraction.text.TfidfVectorizer",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_tfidfvectorizer_binary": {
  "data": {
   "lineno": 1019,
   "symbols_in_volume": [
    "numpy.testing.assert_array_equal",
    "sklearn.feature_extraction.text.TfidfVectorizer",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_tfidfvectorizer_export_idf": {
  "data": {
   "lineno": 1030,
   "symbols_in_volume": [
    "numpy.testing.assert_array_almost_equal",
    "sklearn.feature_extraction.tests.test_text.JUNK_FOOD_DOCS",
    "sklearn.feature_extraction.text.TfidfVectorizer"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_tfidfvectorizer_invalid_idf_attr": {
  "data": {
   "lineno": 990,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "setattr",
    "sklearn.feature_extraction.tests.test_text.JUNK_FOOD_DOCS",
    "sklearn.feature_extraction.text.TfidfVectorizer",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_to_ascii": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "sklearn.feature_extraction.text.strip_accents_ascii",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_transformer_idf_setter": {
  "data": {
   "lineno": 970,
   "symbols_in_volume": [
    "numpy.testing.assert_array_equal",
    "sklearn.feature_extraction.tests.test_text.JUNK_FOOD_DOCS",
    "sklearn.feature_extraction.text.CountVectorizer",
    "sklearn.feature_extraction.text.TfidfTransformer"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_unicode_decode_error": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "UnicodeDecodeError",
    "sklearn.feature_extraction.text.CountVectorizer",
    "sklearn.utils.testing.assert_raises",
    "wa"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_vectorizer": {
  "data": {
   "lineno": 391,
   "symbols_in_volume": [
    "ValueError",
    "hasattr",
    "iter",
    "len",
    "numpy.sum",
    "numpy.testing.assert_array_almost_equal",
    "sklearn.feature_extraction.tests.test_text.ALL_FOOD_DOCS",
    "sklearn.feature_extraction.text.CountVectorizer",
    "sklearn.feature_extraction.text.TfidfTransformer",
    "sklearn.feature_extraction.text.TfidfVectorizer",
    "sklearn.feature_extraction.text.strip_accents_ascii",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_false",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_vectorizer_inverse_transform": {
  "data": {
   "lineno": 717,
   "symbols_in_volume": [
    "Vectorizer",
    "analyze",
    "numpy.sort",
    "numpy.testing.assert_array_equal",
    "numpy.unique",
    "sklearn.feature_extraction.tests.test_text.ALL_FOOD_DOCS",
    "sklearn.feature_extraction.tests.test_text.pytest",
    "sklearn.feature_extraction.text.CountVectorizer",
    "sklearn.feature_extraction.text.TfidfVectorizer",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_vectorizer_max_df": {
  "data": {
   "lineno": 621,
   "symbols_in_volume": [
    "len",
    "sklearn.feature_extraction.text.CountVectorizer",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_vectorizer_max_features": {
  "data": {
   "lineno": 582,
   "symbols_in_volume": [
    "Vectorizer",
    "set",
    "sklearn.feature_extraction.tests.test_text.ALL_FOOD_DOCS",
    "sklearn.feature_extraction.tests.test_text.pytest",
    "sklearn.feature_extraction.text.CountVectorizer",
    "sklearn.feature_extraction.text.TfidfVectorizer",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_vectorizer_min_df": {
  "data": {
   "lineno": 644,
   "symbols_in_volume": [
    "len",
    "sklearn.feature_extraction.text.CountVectorizer",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_vectorizer_pipeline_cross_validation": {
  "data": {
   "lineno": 816,
   "symbols_in_volume": [
    "len",
    "numpy.testing.assert_array_equal",
    "sklearn.feature_extraction.tests.test_text.JUNK_FOOD_DOCS",
    "sklearn.feature_extraction.tests.test_text.NOTJUNK_FOOD_DOCS",
    "sklearn.feature_extraction.text.TfidfVectorizer",
    "sklearn.model_selection.cross_val_score",
    "sklearn.pipeline.Pipeline",
    "sklearn.svm.LinearSVC"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_vectorizer_pipeline_grid_selection": {
  "data": {
   "lineno": 775,
   "symbols_in_volume": [
    "len",
    "numpy.testing.assert_array_equal",
    "sklearn.feature_extraction.tests.test_text.JUNK_FOOD_DOCS",
    "sklearn.feature_extraction.tests.test_text.NOTJUNK_FOOD_DOCS",
    "sklearn.feature_extraction.tests.test_text.pytest",
    "sklearn.feature_extraction.text.TfidfVectorizer",
    "sklearn.model_selection.GridSearchCV",
    "sklearn.model_selection.train_test_split",
    "sklearn.pipeline.Pipeline",
    "sklearn.svm.LinearSVC",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_false"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_vectorizer_stop_words_inconsistent": {
  "data": {
   "lineno": 1124,
   "symbols_in_volume": [
    "UserWarning",
    "sklearn.externals.six.PY2",
    "sklearn.feature_extraction.text.CountVectorizer",
    "sklearn.feature_extraction.text.HashingVectorizer",
    "sklearn.feature_extraction.text.TfidfVectorizer",
    "sklearn.utils.testing.assert_no_warnings",
    "sklearn.utils.testing.assert_warns_message",
    "sklearn.utils.testing.fails_if_pypy"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_vectorizer_string_object_as_input": {
  "data": {
   "lineno": 1044,
   "symbols_in_volume": [
    "ValueError",
    "Vectorizer",
    "sklearn.feature_extraction.tests.test_text.pytest",
    "sklearn.feature_extraction.text.CountVectorizer",
    "sklearn.feature_extraction.text.HashingVectorizer",
    "sklearn.feature_extraction.text.TfidfVectorizer",
    "sklearn.utils.testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_vectorizer_unicode": {
  "data": {
   "lineno": 830,
   "symbols_in_volume": [
    "DeprecationWarning",
    "numpy.sort",
    "numpy.testing.assert_array_equal",
    "sklearn.feature_extraction.text.CountVectorizer",
    "sklearn.feature_extraction.text.HashingVectorizer",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.fails_if_pypy",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_vectorizer_vocab_clone": {
  "data": {
   "lineno": 1036,
   "symbols_in_volume": [
    "sklearn.base.clone",
    "sklearn.feature_extraction.tests.test_text.ALL_FOOD_DOCS",
    "sklearn.feature_extraction.text.TfidfVectorizer",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_vectorizers_invalid_ngram_range": {
  "data": {
   "lineno": 1099,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "sklearn.feature_extraction.tests.test_text.pytest",
    "sklearn.feature_extraction.text.CountVectorizer",
    "sklearn.feature_extraction.text.HashingVectorizer",
    "sklearn.feature_extraction.text.TfidfVectorizer",
    "sklearn.utils.testing.assert_raise_message",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_word_analyzer_unigrams": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "Vectorizer",
    "io.StringIO",
    "sklearn.feature_extraction.tests.test_text.pytest",
    "sklearn.feature_extraction.tests.test_text.split_tokenize",
    "sklearn.feature_extraction.tests.test_text.uppercase",
    "sklearn.feature_extraction.text.CountVectorizer",
    "sklearn.feature_extraction.text.HashingVectorizer",
    "sklearn.utils.testing.assert_equal",
    "wa"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_word_analyzer_unigrams_and_bigrams": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "sklearn.feature_extraction.text.CountVectorizer",
    "sklearn.utils.testing.assert_equal",
    "wa"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_word_ngram_analyzer": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "cnga",
    "cnga_file",
    "io.StringIO",
    "sklearn.feature_extraction.text.CountVectorizer",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.train_test_split": {
  "data": {
   "shadows": "sklearn.model_selection.train_test_split"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_text.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_text.uppercase": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "sklearn.feature_extraction.text.strip_accents_unicode"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.text": {
  "data": {},
  "type": "module"
 },
 "sklearn.feature_extraction.text.CountVectorizer": {
  "data": {
   "lineno": 645,
   "symbols_in_volume": [
    "sklearn.feature_extraction.text.VectorizerMixin"
   ]
  },
  "type": "class"
 },
 "sklearn.feature_extraction.text.CountVectorizer.__init__": {
  "data": {
   "lineno": 816,
   "symbols_in_volume": [
    "ValueError",
    "analyzer",
    "input",
    "isinstance",
    "numpy.int64",
    "sklearn.feature_extraction.text.numbers",
    "strip_accents"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.text.CountVectorizer._count_vocab": {
  "data": {
   "lineno": 904,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "analyze",
    "collections.defaultdict",
    "dict",
    "len",
    "numpy.asarray",
    "numpy.frombuffer",
    "numpy.int32",
    "numpy.int64",
    "numpy.intc",
    "scipy.sparse.csr_matrix",
    "sklearn.feature_extraction.text._make_int_array"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.text.CountVectorizer._limit_features": {
  "data": {
   "lineno": 863,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "len",
    "list",
    "numpy.asarray",
    "numpy.cumsum",
    "numpy.ones",
    "numpy.where",
    "numpy.zeros",
    "set",
    "sklearn.feature_extraction.text._document_frequency"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.text.CountVectorizer._sort_features": {
  "data": {
   "lineno": 849,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "numpy.empty",
    "numpy.int32",
    "sorted"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.text.CountVectorizer.fit": {
  "data": {
   "lineno": 966
  },
  "type": "function"
 },
 "sklearn.feature_extraction.text.CountVectorizer.fit_transform": {
  "data": {
   "lineno": 981,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "sklearn.feature_extraction.text.numbers"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.text.CountVectorizer.get_feature_names": {
  "data": {
   "lineno": 1101,
   "symbols_in_volume": [
    "hasattr",
    "operator.itemgetter",
    "sorted"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.text.CountVectorizer.inverse_transform": {
  "data": {
   "lineno": 1071,
   "symbols_in_volume": [
    "list",
    "numpy.argsort",
    "numpy.array",
    "numpy.asmatrix",
    "range",
    "scipy.sparse.issparse"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.text.CountVectorizer.transform": {
  "data": {
   "lineno": 1039,
   "symbols_in_volume": [
    "ValueError",
    "hasattr",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.text.HashingVectorizer": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": [
    "sklearn.feature_extraction.text.VectorizerMixin"
   ]
  },
  "type": "class"
 },
 "sklearn.feature_extraction.text.HashingVectorizer.__init__": {
  "data": {
   "lineno": 523,
   "symbols_in_volume": [
    "input",
    "numpy.float64",
    "strip_accents"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.text.HashingVectorizer._get_hasher": {
  "data": {
   "lineno": 630,
   "symbols_in_volume": [
    "FeatureHasher"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.text.HashingVectorizer.fit": {
  "data": {
   "lineno": 561,
   "symbols_in_volume": [
    "ValueError",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.text.HashingVectorizer.fit_transform": {
  "data": {
   "lineno": 610
  },
  "type": "function"
 },
 "sklearn.feature_extraction.text.HashingVectorizer.partial_fit": {
  "data": {
   "lineno": 548
  },
  "type": "function"
 },
 "sklearn.feature_extraction.text.HashingVectorizer.transform": {
  "data": {
   "lineno": 580,
   "symbols_in_volume": [
    "ValueError",
    "analyzer",
    "isinstance",
    "normalize"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.text.Mapping": {
  "data": {
   "shadows": "_Mapping"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.text.TfidfTransformer": {
  "data": {
   "lineno": 1117
  },
  "type": "class"
 },
 "sklearn.feature_extraction.text.TfidfTransformer.__init__": {
  "data": {
   "lineno": 1192
  },
  "type": "function"
 },
 "sklearn.feature_extraction.text.TfidfTransformer.fit": {
  "data": {
   "lineno": 1199,
   "symbols_in_volume": [
    "check_array",
    "int",
    "numpy.float64",
    "numpy.log",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.diags",
    "scipy.sparse.issparse",
    "sklearn.feature_extraction.text._document_frequency"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.text.TfidfTransformer.idf_": {
  "data": {
   "lineno": 1278,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.float64",
    "scipy.sparse.spdiags"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.text.TfidfTransformer.transform": {
  "data": {
   "lineno": 1230,
   "symbols_in_volume": [
    "ValueError",
    "check_array",
    "check_is_fitted",
    "normalize",
    "numpy.float64",
    "numpy.log",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.issparse"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.text.TfidfVectorizer": {
  "data": {
   "lineno": 1286,
   "symbols_in_volume": [
    "sklearn.feature_extraction.text.CountVectorizer"
   ]
  },
  "type": "class"
 },
 "sklearn.feature_extraction.text.TfidfVectorizer.__init__": {
  "data": {
   "lineno": 1471,
   "symbols_in_volume": [
    "analyzer",
    "input",
    "numpy.float64",
    "sklearn.feature_extraction.text.TfidfTransformer",
    "sklearn.feature_extraction.text.TfidfVectorizer",
    "strip_accents",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.text.TfidfVectorizer._check_params": {
  "data": {
   "lineno": 1542,
   "symbols_in_volume": [
    "UserWarning",
    "sklearn.feature_extraction.text.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.text.TfidfVectorizer.fit": {
  "data": {
   "lineno": 1549,
   "symbols_in_volume": [
    "sklearn.feature_extraction.text.TfidfVectorizer",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.text.TfidfVectorizer.fit_transform": {
  "data": {
   "lineno": 1566,
   "symbols_in_volume": [
    "sklearn.feature_extraction.text.TfidfVectorizer",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.text.TfidfVectorizer.idf_": {
  "data": {
   "lineno": 1532,
   "symbols_in_volume": [
    "ValueError",
    "hasattr",
    "len"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.text.TfidfVectorizer.norm": {
  "data": {
   "lineno": 1500
  },
  "type": "function"
 },
 "sklearn.feature_extraction.text.TfidfVectorizer.smooth_idf": {
  "data": {
   "lineno": 1516
  },
  "type": "function"
 },
 "sklearn.feature_extraction.text.TfidfVectorizer.sublinear_tf": {
  "data": {
   "lineno": 1524
  },
  "type": "function"
 },
 "sklearn.feature_extraction.text.TfidfVectorizer.transform": {
  "data": {
   "lineno": 1589,
   "symbols_in_volume": [
    "check_is_fitted",
    "sklearn.feature_extraction.text.TfidfVectorizer",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.text.TfidfVectorizer.use_idf": {
  "data": {
   "lineno": 1508
  },
  "type": "function"
 },
 "sklearn.feature_extraction.text.VectorizerMixin": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "object",
    "sklearn.feature_extraction.text.re"
   ]
  },
  "type": "class"
 },
 "sklearn.feature_extraction.text.VectorizerMixin._char_ngrams": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "len",
    "list",
    "min",
    "ngrams_append",
    "xrange"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.text.VectorizerMixin._char_wb_ngrams": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "len",
    "ngrams_append",
    "xrange"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.text.VectorizerMixin._check_stop_words_consistency": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "getattr",
    "id",
    "list",
    "preprocess",
    "set",
    "sklearn.feature_extraction.text.warnings",
    "sorted",
    "tokenize"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.text.VectorizerMixin._check_vocabulary": {
  "data": {
   "lineno": 342,
   "symbols_in_volume": [
    "ValueError",
    "check_is_fitted",
    "len"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.text.VectorizerMixin._validate_params": {
  "data": {
   "lineno": 350,
   "symbols_in_volume": [
    "ValueError",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.text.VectorizerMixin._validate_vocabulary": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "enumerate",
    "isinstance",
    "len",
    "set",
    "sorted",
    "xrange"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.text.VectorizerMixin._word_ngrams": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "len",
    "list",
    "min",
    "space_join",
    "tokens_append",
    "xrange"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.text.VectorizerMixin.build_analyzer": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "ValueError",
    "callable",
    "preprocess",
    "tokenize"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.text.VectorizerMixin.build_preprocessor": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "ValueError",
    "callable",
    "sklearn.feature_extraction.text.strip_accents_ascii",
    "sklearn.feature_extraction.text.strip_accents_unicode",
    "strip_accents"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.text.VectorizerMixin.build_tokenizer": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "sklearn.feature_extraction.text.re"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.text.VectorizerMixin.decode": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "ValueError",
    "bytes",
    "isinstance",
    "numpy.nan",
    "open"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.text.VectorizerMixin.get_stop_words": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "sklearn.feature_extraction.text._check_stop_list"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.text.__all__": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "sklearn.feature_extraction.text._check_stop_list": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "ValueError",
    "frozenset",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.text._document_frequency": {
  "data": {
   "lineno": 637,
   "symbols_in_volume": [
    "numpy.bincount",
    "numpy.diff",
    "scipy.sparse.isspmatrix_csr"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.text._make_int_array": {
  "data": {
   "lineno": 1112,
   "symbols_in_volume": [
    "sklearn.feature_extraction.text.array",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.text.array": {
  "data": {
   "shadows": "array"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.text.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.text.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.text.itemgetter": {
  "data": {
   "shadows": "operator.itemgetter"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.text.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.text.numbers": {
  "data": {
   "shadows": "numbers"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.text.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.text.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.text.strip_accents_ascii": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "sklearn.feature_extraction.text.unicodedata"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.text.strip_accents_unicode": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "sklearn.feature_extraction.text.unicodedata"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.text.strip_tags": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "sklearn.feature_extraction.text.re"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.text.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.text.unicodedata": {
  "data": {
   "shadows": "unicodedata"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.text.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.feature_selection": {
  "data": {},
  "type": "module"
 },
 "sklearn.feature_selection.__all__": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "sklearn.feature_selection.base": {
  "data": {},
  "type": "module"
 },
 "sklearn.feature_selection.base.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "sklearn.feature_selection.base.SelectorMixin": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "abc.ABCMeta"
   ]
  },
  "type": "class"
 },
 "sklearn.feature_selection.base.SelectorMixin._get_support_mask": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.base.SelectorMixin.get_support": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.base.SelectorMixin.inverse_transform": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "ValueError",
    "check_array",
    "len",
    "numpy.concatenate",
    "numpy.cumsum",
    "numpy.diff",
    "numpy.zeros",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.issparse"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.base.SelectorMixin.transform": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "UserWarning",
    "ValueError",
    "check_array",
    "len",
    "numpy.empty",
    "safe_mask",
    "warnings.warn"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.base.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "sklearn.feature_selection.base.csc_matrix": {
  "data": {
   "shadows": "scipy.sparse.csc_matrix"
  },
  "type": "import"
 },
 "sklearn.feature_selection.base.issparse": {
  "data": {
   "shadows": "scipy.sparse.issparse"
  },
  "type": "import"
 },
 "sklearn.feature_selection.base.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.feature_selection.base.warn": {
  "data": {
   "shadows": "warnings.warn"
  },
  "type": "import"
 },
 "sklearn.feature_selection.from_model": {
  "data": {},
  "type": "module"
 },
 "sklearn.feature_selection.from_model.SelectFromModel": {
  "data": {
   "lineno": 82
  },
  "type": "class"
 },
 "sklearn.feature_selection.from_model.SelectFromModel.__init__": {
  "data": {
   "lineno": 135
  },
  "type": "function"
 },
 "sklearn.feature_selection.from_model.SelectFromModel._get_support_mask": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "hasattr",
    "numpy.argsort",
    "numpy.ones_like",
    "numpy.zeros_like",
    "sklearn.feature_selection.from_model._calculate_threshold",
    "sklearn.feature_selection.from_model._get_feature_importances"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.from_model.SelectFromModel.fit": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "NotFittedError",
    "TypeError",
    "ValueError",
    "clone",
    "isinstance",
    "sklearn.feature_selection.from_model.numbers"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.from_model.SelectFromModel.partial_fit": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "NotFittedError",
    "clone",
    "hasattr",
    "if_delegate_has_method"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.from_model.SelectFromModel.threshold_": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "property",
    "sklearn.feature_selection.from_model._calculate_threshold",
    "sklearn.feature_selection.from_model._get_feature_importances"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.from_model._calculate_threshold": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "hasattr",
    "isinstance",
    "numpy.mean",
    "numpy.median"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.from_model._get_feature_importances": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "ValueError",
    "getattr",
    "numpy.abs",
    "numpy.linalg.norm"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.from_model.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.feature_selection.from_model.numbers": {
  "data": {
   "shadows": "numbers"
  },
  "type": "import"
 },
 "sklearn.feature_selection.mutual_info_": {
  "data": {},
  "type": "module"
 },
 "sklearn.feature_selection.mutual_info_._compute_mi": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "mutual_info_score",
    "sklearn.feature_selection.mutual_info_._compute_mi_cc",
    "sklearn.feature_selection.mutual_info_._compute_mi_cd"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.mutual_info_._compute_mi_cc": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "NearestNeighbors",
    "max",
    "numpy.array",
    "numpy.hstack",
    "numpy.mean",
    "numpy.nextafter",
    "scipy.special.digamma"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.mutual_info_._compute_mi_cd": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "NearestNeighbors",
    "max",
    "min",
    "numpy.array",
    "numpy.empty",
    "numpy.mean",
    "numpy.nextafter",
    "numpy.sum",
    "numpy.unique",
    "scipy.special.digamma"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.mutual_info_._estimate_mi": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "check_X_y",
    "check_random_state",
    "float",
    "isinstance",
    "numpy.abs",
    "numpy.any",
    "numpy.array",
    "numpy.asarray",
    "numpy.empty",
    "numpy.maximum",
    "numpy.mean",
    "numpy.sum",
    "numpy.zeros",
    "scale",
    "scipy.sparse.issparse",
    "sklearn.feature_selection.mutual_info_._compute_mi",
    "sklearn.feature_selection.mutual_info_._iterate_columns"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.mutual_info_._iterate_columns": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "numpy.zeros",
    "range",
    "scipy.sparse.issparse"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.mutual_info_.digamma": {
  "data": {
   "shadows": "scipy.special.digamma"
  },
  "type": "import"
 },
 "sklearn.feature_selection.mutual_info_.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sklearn.feature_selection.mutual_info_.issparse": {
  "data": {
   "shadows": "scipy.sparse.issparse"
  },
  "type": "import"
 },
 "sklearn.feature_selection.mutual_info_.mutual_info_classif": {
  "data": {
   "lineno": 373,
   "symbols_in_volume": [
    "check_classification_targets",
    "sklearn.feature_selection.mutual_info_._estimate_mi"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.mutual_info_.mutual_info_regression": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": [
    "sklearn.feature_selection.mutual_info_._estimate_mi"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.mutual_info_.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.feature_selection.rfe": {
  "data": {},
  "type": "module"
 },
 "sklearn.feature_selection.rfe.RFE": {
  "data": {
   "lineno": 36
  },
  "type": "class"
 },
 "sklearn.feature_selection.rfe.RFE.__init__": {
  "data": {
   "lineno": 117
  },
  "type": "function"
 },
 "sklearn.feature_selection.rfe.RFE._estimator_type": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.rfe.RFE._fit": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "check_X_y",
    "clone",
    "getattr",
    "hasattr",
    "int",
    "max",
    "min",
    "numpy.arange",
    "numpy.argsort",
    "numpy.bool",
    "numpy.int",
    "numpy.logical_not",
    "numpy.ones",
    "numpy.ravel",
    "numpy.sum",
    "print",
    "safe_sqr",
    "step_score"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.rfe.RFE._get_support_mask": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "check_is_fitted"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.rfe.RFE.decision_function": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "check_is_fitted",
    "if_delegate_has_method"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.rfe.RFE.fit": {
  "data": {
   "lineno": 128
  },
  "type": "function"
 },
 "sklearn.feature_selection.rfe.RFE.predict": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "check_is_fitted",
    "if_delegate_has_method"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.rfe.RFE.predict_log_proba": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "check_is_fitted",
    "if_delegate_has_method"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.rfe.RFE.predict_proba": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "check_is_fitted",
    "if_delegate_has_method"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.rfe.RFE.score": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "check_is_fitted",
    "if_delegate_has_method"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.rfe.RFECV": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": [
    "sklearn.feature_selection.rfe.RFE"
   ]
  },
  "type": "class"
 },
 "sklearn.feature_selection.rfe.RFECV.__init__": {
  "data": {
   "lineno": 444
  },
  "type": "function"
 },
 "sklearn.feature_selection.rfe.RFECV.fit": {
  "data": {
   "lineno": 454,
   "symbols_in_volume": [
    "Parallel",
    "ValueError",
    "check_X_y",
    "check_cv",
    "check_scoring",
    "clone",
    "delayed",
    "effective_n_jobs",
    "func",
    "int",
    "is_classifier",
    "len",
    "list",
    "max",
    "numpy.argmax",
    "numpy.sum",
    "parallel",
    "sklearn.feature_selection.rfe.RFE",
    "sklearn.feature_selection.rfe._rfe_single_fit"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.rfe._rfe_single_fit": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "_safe_split",
    "_score"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.rfe.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests": {
  "data": {},
  "type": "module"
 },
 "sklearn.feature_selection.tests.test_base": {
  "data": {
   "symbols_in_volume": [
    "list",
    "numpy.arange",
    "numpy.array",
    "sklearn.feature_selection.tests.test_base.X",
    "sklearn.feature_selection.tests.test_base.Xinv",
    "sklearn.feature_selection.tests.test_base.feature_names",
    "sklearn.feature_selection.tests.test_base.feature_names_inv"
   ]
  },
  "type": "module"
 },
 "sklearn.feature_selection.tests.test_base.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_base.SelectorMixin": {
  "data": {
   "shadows": "sklearn.feature_selection.base.SelectorMixin"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_base.StepSelector": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator",
    "sklearn.feature_selection.base.SelectorMixin"
   ]
  },
  "type": "class"
 },
 "sklearn.feature_selection.tests.test_base.StepSelector.__init__": {
  "data": {
   "lineno": 14
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_base.StepSelector._get_support_mask": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "bool",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_base.StepSelector.fit": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "sklearn.utils.check_array"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_base.X": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "sklearn.feature_selection.tests.test_base.Xinv": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "sklearn.feature_selection.tests.test_base.Xt": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "sklearn.feature_selection.tests.test_base.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_base.assert_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_base.assert_raises": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_base.check_array": {
  "data": {
   "shadows": "sklearn.utils.check_array"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_base.feature_names": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "sklearn.feature_selection.tests.test_base.feature_names_inv": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "sklearn.feature_selection.tests.test_base.feature_names_t": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "sklearn.feature_selection.tests.test_base.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_base.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_base.support": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "sklearn.feature_selection.tests.test_base.support_inds": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "sklearn.feature_selection.tests.test_base.test_get_support": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "numpy.testing.assert_array_equal",
    "sklearn.feature_selection.tests.test_base.StepSelector",
    "sklearn.feature_selection.tests.test_base.X",
    "sklearn.feature_selection.tests.test_base.support",
    "sklearn.feature_selection.tests.test_base.support_inds",
    "sklearn.feature_selection.tests.test_base.y"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_base.test_inverse_transform_dense": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "numpy.float32",
    "numpy.int32",
    "numpy.testing.assert_array_equal",
    "sklearn.feature_selection.tests.test_base.StepSelector",
    "sklearn.feature_selection.tests.test_base.X",
    "sklearn.feature_selection.tests.test_base.Xinv",
    "sklearn.feature_selection.tests.test_base.Xt",
    "sklearn.feature_selection.tests.test_base.feature_names_inv",
    "sklearn.feature_selection.tests.test_base.feature_names_t",
    "sklearn.feature_selection.tests.test_base.y",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_base.test_inverse_transform_sparse": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "numpy.float32",
    "numpy.int32",
    "numpy.testing.assert_array_equal",
    "scipy.sparse",
    "scipy.sparse.csc_matrix",
    "sklearn.feature_selection.tests.test_base.StepSelector",
    "sklearn.feature_selection.tests.test_base.X",
    "sklearn.feature_selection.tests.test_base.Xinv",
    "sklearn.feature_selection.tests.test_base.Xt",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_base.test_transform_dense": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "numpy.float32",
    "numpy.int32",
    "numpy.testing.assert_array_equal",
    "sklearn.feature_selection.tests.test_base.StepSelector",
    "sklearn.feature_selection.tests.test_base.X",
    "sklearn.feature_selection.tests.test_base.Xt",
    "sklearn.feature_selection.tests.test_base.feature_names",
    "sklearn.feature_selection.tests.test_base.feature_names_t",
    "sklearn.feature_selection.tests.test_base.y",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_base.test_transform_sparse": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "numpy.float32",
    "numpy.int32",
    "numpy.testing.assert_array_equal",
    "scipy.sparse",
    "scipy.sparse.csc_matrix",
    "sklearn.feature_selection.tests.test_base.StepSelector",
    "sklearn.feature_selection.tests.test_base.X",
    "sklearn.feature_selection.tests.test_base.Xt",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_base.y": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "sklearn.feature_selection.tests.test_chi2": {
  "data": {},
  "type": "module"
 },
 "sklearn.feature_selection.tests.test_chi2.SelectKBest": {
  "data": {
   "shadows": "sklearn.feature_selection.SelectKBest"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_chi2.X": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "sklearn.feature_selection.tests.test_chi2._chisquare": {
  "data": {
   "shadows": "sklearn.feature_selection.univariate_selection._chisquare"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_chi2.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_chi2.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_chi2.assert_raises": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_chi2.chi2": {
  "data": {
   "shadows": "sklearn.feature_selection.chi2"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_chi2.clean_warning_registry": {
  "data": {
   "shadows": "sklearn.utils.testing.clean_warning_registry"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_chi2.coo_matrix": {
  "data": {
   "shadows": "scipy.sparse.coo_matrix"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_chi2.csr_matrix": {
  "data": {
   "shadows": "scipy.sparse.csr_matrix"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_chi2.mkchi2": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "sklearn.feature_selection.SelectKBest",
    "sklearn.feature_selection.chi2"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_chi2.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_chi2.scipy.stats": {
  "data": {
   "shadows": "scipy.stats"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_chi2.test_chi2": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.float64",
    "scipy.sparse.csr_matrix",
    "sklearn.feature_selection.chi2",
    "sklearn.feature_selection.chi2.get_support",
    "sklearn.feature_selection.chi2.transform",
    "sklearn.feature_selection.tests.test_chi2.X",
    "sklearn.feature_selection.tests.test_chi2.mkchi2",
    "sklearn.feature_selection.tests.test_chi2.y",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_array_equal",
    "sorted"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_chi2.test_chi2_coo": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "scipy.sparse.coo_matrix",
    "sklearn.feature_selection.tests.test_chi2.X",
    "sklearn.feature_selection.tests.test_chi2.mkchi2",
    "sklearn.feature_selection.tests.test_chi2.y"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_chi2.test_chi2_negative": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "scipy.sparse.csr_matrix",
    "sklearn.feature_selection.chi2",
    "sklearn.feature_selection.tests.test_chi2.X",
    "sklearn.feature_selection.tests.test_chi2.y",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_chi2.test_chi2_unused_feature": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "AssertionError",
    "numpy.nan",
    "repr",
    "sklearn.feature_selection.chi2",
    "sklearn.feature_selection.tests.test_chi2.warnings",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.clean_warning_registry"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_chi2.test_chisquare": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.feature_selection.univariate_selection._chisquare",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_chi2.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_chi2.y": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "sklearn.feature_selection.tests.test_feature_select": {
  "data": {},
  "type": "module"
 },
 "sklearn.feature_selection.tests.test_feature_select.GenericUnivariateSelect": {
  "data": {
   "shadows": "sklearn.feature_selection.GenericUnivariateSelect"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_feature_select.SelectFdr": {
  "data": {
   "shadows": "sklearn.feature_selection.SelectFdr"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_feature_select.SelectFpr": {
  "data": {
   "shadows": "sklearn.feature_selection.SelectFpr"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_feature_select.SelectFwe": {
  "data": {
   "shadows": "sklearn.feature_selection.SelectFwe"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_feature_select.SelectKBest": {
  "data": {
   "shadows": "sklearn.feature_selection.SelectKBest"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_feature_select.SelectPercentile": {
  "data": {
   "shadows": "sklearn.feature_selection.SelectPercentile"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_feature_select.assert_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_feature_select.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_feature_select.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_feature_select.assert_best_scores_kept": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": [
    "numpy.sort",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_feature_select.assert_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_feature_select.assert_greater": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_greater"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_feature_select.assert_greater_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_greater_equal"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_feature_select.assert_less": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_less"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_feature_select.assert_not_in": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_not_in"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_feature_select.assert_raises": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_feature_select.assert_true": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_true"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_feature_select.assert_warns": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_warns"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_feature_select.assert_warns_message": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_warns_message"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_feature_select.chi2": {
  "data": {
   "shadows": "sklearn.feature_selection.chi2"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_feature_select.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_feature_select.f_classif": {
  "data": {
   "shadows": "sklearn.feature_selection.f_classif"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_feature_select.f_oneway": {
  "data": {
   "shadows": "sklearn.feature_selection.f_oneway"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_feature_select.f_regression": {
  "data": {
   "shadows": "sklearn.feature_selection.f_regression"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_feature_select.ignore_warnings": {
  "data": {
   "shadows": "sklearn.utils.testing.ignore_warnings"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_feature_select.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_feature_select.make_classification": {
  "data": {
   "shadows": "sklearn.datasets.samples_generator.make_classification"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_feature_select.make_regression": {
  "data": {
   "shadows": "sklearn.datasets.samples_generator.make_regression"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_feature_select.mutual_info_classif": {
  "data": {
   "shadows": "sklearn.feature_selection.mutual_info_classif"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_feature_select.mutual_info_regression": {
  "data": {
   "shadows": "sklearn.feature_selection.mutual_info_regression"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_feature_select.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_feature_select.safe_mask": {
  "data": {
   "shadows": "sklearn.utils.safe_mask"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_feature_select.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_feature_select.stats": {
  "data": {
   "shadows": "scipy.stats"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_feature_select.test_boundary_case_ch2": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.feature_selection.SelectFdr",
    "sklearn.feature_selection.SelectFpr",
    "sklearn.feature_selection.SelectFwe",
    "sklearn.feature_selection.SelectKBest",
    "sklearn.feature_selection.SelectPercentile",
    "sklearn.feature_selection.chi2",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_feature_select.test_f_classif": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "scipy.sparse.csr_matrix",
    "sklearn.datasets.samples_generator.make_classification",
    "sklearn.feature_selection.f_classif",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_feature_select.test_f_classif_constant_feature": {
  "data": {
   "lineno": 587,
   "symbols_in_volume": [
    "UserWarning",
    "sklearn.datasets.samples_generator.make_classification",
    "sklearn.feature_selection.f_classif",
    "sklearn.utils.testing.assert_warns"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_feature_select.test_f_classif_multi_class": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "sklearn.datasets.samples_generator.make_classification",
    "sklearn.feature_selection.f_classif",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_feature_select.test_f_oneway_ints": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.float",
    "numpy.random.RandomState",
    "sklearn.feature_selection.f_oneway",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_feature_select.test_f_oneway_vs_scipy_stats": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "numpy.allclose",
    "numpy.random.RandomState",
    "scipy.stats.f_oneway",
    "sklearn.feature_selection.f_oneway",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_feature_select.test_f_regression": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "scipy.sparse.csr_matrix",
    "sklearn.datasets.samples_generator.make_regression",
    "sklearn.feature_selection.f_regression",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_feature_select.test_f_regression_center": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.ones",
    "sklearn.feature_selection.f_regression",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_feature_select.test_f_regression_input_dtype": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.float",
    "numpy.int",
    "numpy.random.RandomState",
    "sklearn.feature_selection.f_regression",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_feature_select.test_invalid_k": {
  "data": {
   "lineno": 575,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.feature_selection.GenericUnivariateSelect",
    "sklearn.feature_selection.SelectKBest",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_feature_select.test_invalid_percentile": {
  "data": {
   "lineno": 328,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.datasets.samples_generator.make_regression",
    "sklearn.feature_selection.GenericUnivariateSelect",
    "sklearn.feature_selection.SelectPercentile",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_feature_select.test_mutual_info_classif": {
  "data": {
   "lineno": 616,
   "symbols_in_volume": [
    "numpy.zeros",
    "sklearn.datasets.samples_generator.make_classification",
    "sklearn.feature_selection.GenericUnivariateSelect",
    "sklearn.feature_selection.SelectKBest",
    "sklearn.feature_selection.SelectPercentile",
    "sklearn.feature_selection.mutual_info_classif",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_feature_select.test_mutual_info_regression": {
  "data": {
   "lineno": 646,
   "symbols_in_volume": [
    "numpy.zeros",
    "sklearn.datasets.samples_generator.make_regression",
    "sklearn.feature_selection.GenericUnivariateSelect",
    "sklearn.feature_selection.SelectKBest",
    "sklearn.feature_selection.SelectPercentile",
    "sklearn.feature_selection.mutual_info_regression",
    "sklearn.feature_selection.tests.test_feature_select.assert_best_scores_kept",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_feature_select.test_nans": {
  "data": {
   "lineno": 553,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.feature_selection.SelectKBest",
    "sklearn.feature_selection.SelectPercentile",
    "sklearn.feature_selection.f_classif",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_feature_select.test_no_feature_selected": {
  "data": {
   "lineno": 595,
   "symbols_in_volume": [
    "UserWarning",
    "numpy.random.RandomState",
    "numpy.zeros",
    "sklearn.feature_selection.SelectFdr",
    "sklearn.feature_selection.SelectFpr",
    "sklearn.feature_selection.SelectFwe",
    "sklearn.feature_selection.SelectKBest",
    "sklearn.feature_selection.SelectPercentile",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_warns_message"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_feature_select.test_score_func_error": {
  "data": {
   "lineno": 566,
   "symbols_in_volume": [
    "SelectFeatures",
    "TypeError",
    "sklearn.feature_selection.GenericUnivariateSelect",
    "sklearn.feature_selection.SelectFdr",
    "sklearn.feature_selection.SelectFpr",
    "sklearn.feature_selection.SelectFwe",
    "sklearn.feature_selection.SelectKBest",
    "sklearn.feature_selection.SelectPercentile",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_feature_select.test_scorefunc_multilabel": {
  "data": {
   "lineno": 527,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.feature_selection.SelectKBest",
    "sklearn.feature_selection.SelectPercentile",
    "sklearn.feature_selection.chi2",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_not_in"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_feature_select.test_select_fdr_regression": {
  "data": {
   "lineno": 413,
   "symbols_in_volume": [
    "numpy.mean",
    "range",
    "single_fdr",
    "sklearn.utils.testing.assert_greater",
    "sklearn.utils.testing.assert_greater_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_feature_select.test_select_fdr_regression.single_fdr": {
  "data": {
   "lineno": 415,
   "symbols_in_volume": [
    "numpy.sum",
    "sklearn.datasets.samples_generator.make_regression",
    "sklearn.feature_selection.GenericUnivariateSelect",
    "sklearn.feature_selection.SelectFdr",
    "sklearn.feature_selection.f_regression",
    "sklearn.feature_selection.tests.test_feature_select.warnings",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_feature_select.test_select_fwe_regression": {
  "data": {
   "lineno": 455,
   "symbols_in_volume": [
    "numpy.bool",
    "numpy.ones",
    "numpy.sum",
    "numpy.zeros",
    "sklearn.datasets.samples_generator.make_regression",
    "sklearn.feature_selection.GenericUnivariateSelect",
    "sklearn.feature_selection.SelectFwe",
    "sklearn.feature_selection.f_regression",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_less"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_feature_select.test_select_heuristics_classif": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "numpy.zeros",
    "sklearn.datasets.samples_generator.make_classification",
    "sklearn.feature_selection.GenericUnivariateSelect",
    "sklearn.feature_selection.SelectFwe",
    "sklearn.feature_selection.f_classif",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_feature_select.test_select_heuristics_regression": {
  "data": {
   "lineno": 359,
   "symbols_in_volume": [
    "numpy.bool",
    "numpy.ones",
    "numpy.sum",
    "numpy.zeros",
    "sklearn.datasets.samples_generator.make_regression",
    "sklearn.feature_selection.GenericUnivariateSelect",
    "sklearn.feature_selection.SelectFpr",
    "sklearn.feature_selection.f_regression",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_less"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_feature_select.test_select_kbest_all": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "sklearn.datasets.samples_generator.make_classification",
    "sklearn.feature_selection.SelectKBest",
    "sklearn.feature_selection.f_classif",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_feature_select.test_select_kbest_classif": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "numpy.zeros",
    "sklearn.datasets.samples_generator.make_classification",
    "sklearn.feature_selection.GenericUnivariateSelect",
    "sklearn.feature_selection.SelectKBest",
    "sklearn.feature_selection.f_classif",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_feature_select.test_select_kbest_regression": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": [
    "numpy.zeros",
    "sklearn.datasets.samples_generator.make_regression",
    "sklearn.feature_selection.GenericUnivariateSelect",
    "sklearn.feature_selection.SelectKBest",
    "sklearn.feature_selection.f_regression",
    "sklearn.feature_selection.tests.test_feature_select.assert_best_scores_kept",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_feature_select.test_select_kbest_zero": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "UserWarning",
    "bool",
    "numpy.zeros",
    "sklearn.datasets.samples_generator.make_classification",
    "sklearn.feature_selection.SelectKBest",
    "sklearn.feature_selection.f_classif",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_warns_message"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_feature_select.test_select_percentile_classif": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "numpy.zeros",
    "sklearn.datasets.samples_generator.make_classification",
    "sklearn.feature_selection.GenericUnivariateSelect",
    "sklearn.feature_selection.SelectPercentile",
    "sklearn.feature_selection.f_classif",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_feature_select.test_select_percentile_classif_sparse": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "numpy.zeros",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.issparse",
    "sklearn.datasets.samples_generator.make_classification",
    "sklearn.feature_selection.GenericUnivariateSelect",
    "sklearn.feature_selection.SelectPercentile",
    "sklearn.feature_selection.f_classif",
    "sklearn.utils.safe_mask",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_feature_select.test_select_percentile_regression": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "bool",
    "numpy.logical_not",
    "numpy.zeros",
    "sklearn.datasets.samples_generator.make_regression",
    "sklearn.feature_selection.GenericUnivariateSelect",
    "sklearn.feature_selection.SelectPercentile",
    "sklearn.feature_selection.f_regression",
    "sklearn.feature_selection.tests.test_feature_select.assert_best_scores_kept",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_feature_select.test_select_percentile_regression_full": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "numpy.ones",
    "sklearn.datasets.samples_generator.make_regression",
    "sklearn.feature_selection.GenericUnivariateSelect",
    "sklearn.feature_selection.SelectPercentile",
    "sklearn.feature_selection.f_regression",
    "sklearn.feature_selection.tests.test_feature_select.assert_best_scores_kept",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_feature_select.test_selectkbest_tiebreaking": {
  "data": {
   "lineno": 474,
   "symbols_in_volume": [
    "sklearn.feature_selection.SelectKBest",
    "sklearn.feature_selection.tests.test_feature_select.assert_best_scores_kept",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_feature_select.test_selectpercentile_tiebreaking": {
  "data": {
   "lineno": 492,
   "symbols_in_volume": [
    "sklearn.feature_selection.SelectPercentile",
    "sklearn.feature_selection.tests.test_feature_select.assert_best_scores_kept",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_feature_select.test_tied_pvalues": {
  "data": {
   "lineno": 509,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.feature_selection.SelectKBest",
    "sklearn.feature_selection.SelectPercentile",
    "sklearn.feature_selection.chi2",
    "sklearn.feature_selection.tests.test_feature_select.itertools",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_not_in"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_feature_select.test_tied_scores": {
  "data": {
   "lineno": 542,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "sklearn.feature_selection.SelectKBest",
    "sklearn.feature_selection.chi2",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_feature_select.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_from_model": {
  "data": {
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.datasets.load_iris",
    "sklearn.feature_selection.tests.test_from_model.iris"
   ]
  },
  "type": "module"
 },
 "sklearn.feature_selection.tests.test_from_model.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_from_model.FixedImportanceEstimator": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator"
   ]
  },
  "type": "class"
 },
 "sklearn.feature_selection.tests.test_from_model.FixedImportanceEstimator.__init__": {
  "data": {
   "lineno": 74
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_from_model.FixedImportanceEstimator.fit": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_from_model.Lasso": {
  "data": {
   "shadows": "sklearn.linear_model.Lasso"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_from_model.LinearSVC": {
  "data": {
   "shadows": "sklearn.svm.LinearSVC"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_from_model.LogisticRegression": {
  "data": {
   "shadows": "sklearn.linear_model.LogisticRegression"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_from_model.PassiveAggressiveClassifier": {
  "data": {
   "shadows": "sklearn.linear_model.PassiveAggressiveClassifier"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_from_model.RandomForestClassifier": {
  "data": {
   "shadows": "sklearn.ensemble.RandomForestClassifier"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_from_model.SGDClassifier": {
  "data": {
   "shadows": "sklearn.linear_model.SGDClassifier"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_from_model.SelectFromModel": {
  "data": {
   "shadows": "sklearn.feature_selection.SelectFromModel"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_from_model.assert_allclose": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_allclose"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_from_model.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_from_model.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_from_model.assert_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_from_model.assert_false": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_false"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_from_model.assert_greater": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_greater"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_from_model.assert_less": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_less"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_from_model.assert_raises": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_from_model.assert_true": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_true"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_from_model.datasets": {
  "data": {
   "shadows": "sklearn.datasets"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_from_model.iris": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "sklearn.feature_selection.tests.test_from_model.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_from_model.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_from_model.rng": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "sklearn.feature_selection.tests.test_from_model.skip_if_32bit": {
  "data": {
   "shadows": "sklearn.utils.testing.skip_if_32bit"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_from_model.test_2d_coef": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "func",
    "hasattr",
    "numpy.inf",
    "numpy.linalg.norm",
    "numpy.mean",
    "numpy.median",
    "sklearn.datasets.make_classification",
    "sklearn.feature_selection.SelectFromModel",
    "sklearn.feature_selection.tests.test_from_model.pytest",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_less",
    "sklearn.utils.testing.assert_true",
    "sklearn.utils.testing.skip_if_32bit",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_from_model.test_calling_fit_reinitializes": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "sklearn.feature_selection.SelectFromModel",
    "sklearn.svm.LinearSVC",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_from_model.test_coef_default_threshold": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "numpy.abs",
    "sklearn.datasets.make_classification",
    "sklearn.feature_selection.SelectFromModel",
    "sklearn.linear_model.Lasso",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_from_model.test_feature_importances": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "func",
    "hasattr",
    "numpy.abs",
    "numpy.mean",
    "numpy.median",
    "sklearn.datasets.make_classification",
    "sklearn.ensemble.RandomForestClassifier",
    "sklearn.feature_selection.SelectFromModel",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_less",
    "sklearn.utils.testing.assert_true",
    "sklearn.utils.testing.skip_if_32bit",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_from_model.test_input_estimator_unchanged": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "sklearn.ensemble.RandomForestClassifier",
    "sklearn.feature_selection.SelectFromModel",
    "sklearn.feature_selection.tests.test_from_model.pytest",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_from_model.test_invalid_input": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.feature_selection.SelectFromModel",
    "sklearn.linear_model.SGDClassifier",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_from_model.test_max_features": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.argsort",
    "numpy.inf",
    "range",
    "sklearn.datasets.make_classification",
    "sklearn.ensemble.RandomForestClassifier",
    "sklearn.feature_selection.SelectFromModel",
    "sklearn.linear_model.Lasso",
    "sklearn.utils.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_from_model.test_max_features_dim": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "numpy.inf",
    "sklearn.ensemble.RandomForestClassifier",
    "sklearn.feature_selection.SelectFromModel",
    "sklearn.feature_selection.tests.test_from_model.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_from_model.test_max_features_error": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "numpy.inf",
    "sklearn.ensemble.RandomForestClassifier",
    "sklearn.feature_selection.SelectFromModel",
    "sklearn.feature_selection.tests.test_from_model.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_from_model.test_max_features_tiebreak": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "numpy.inf",
    "numpy.where",
    "range",
    "sklearn.datasets.make_classification",
    "sklearn.feature_selection.SelectFromModel",
    "sklearn.feature_selection.tests.test_from_model.FixedImportanceEstimator",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_from_model.test_partial_fit": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "hasattr",
    "numpy.concatenate",
    "numpy.unique",
    "numpy.vstack",
    "sklearn.ensemble.RandomForestClassifier",
    "sklearn.feature_selection.SelectFromModel",
    "sklearn.feature_selection.tests.test_from_model.pytest",
    "sklearn.linear_model.PassiveAggressiveClassifier",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_false",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_from_model.test_prefit": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.feature_selection.SelectFromModel",
    "sklearn.linear_model.SGDClassifier",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_from_model.test_sample_weight": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.ones",
    "sklearn.datasets.make_classification",
    "sklearn.feature_selection.SelectFromModel",
    "sklearn.feature_selection.tests.test_from_model.pytest",
    "sklearn.linear_model.LogisticRegression"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_from_model.test_threshold_and_max_features": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "min",
    "numpy.arange",
    "numpy.inf",
    "numpy.newaxis",
    "sklearn.datasets.make_classification",
    "sklearn.ensemble.RandomForestClassifier",
    "sklearn.feature_selection.SelectFromModel",
    "sklearn.utils.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_from_model.test_threshold_string": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "numpy.mean",
    "sklearn.ensemble.RandomForestClassifier",
    "sklearn.feature_selection.SelectFromModel",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_from_model.test_threshold_without_refitting": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": [
    "sklearn.feature_selection.SelectFromModel",
    "sklearn.linear_model.SGDClassifier",
    "sklearn.utils.testing.assert_greater"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_mutual_info": {
  "data": {},
  "type": "module"
 },
 "sklearn.feature_selection.tests.test_mutual_info._compute_mi": {
  "data": {
   "shadows": "sklearn.feature_selection.mutual_info_._compute_mi"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_mutual_info.assert_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_mutual_info.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_mutual_info.assert_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_mutual_info.assert_false": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_false"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_mutual_info.assert_greater": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_greater"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_mutual_info.assert_raises": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_mutual_info.check_random_state": {
  "data": {
   "shadows": "sklearn.utils.check_random_state"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_mutual_info.csr_matrix": {
  "data": {
   "shadows": "scipy.sparse.csr_matrix"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_mutual_info.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_mutual_info.mutual_info_classif": {
  "data": {
   "shadows": "sklearn.feature_selection.mutual_info_.mutual_info_classif"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_mutual_info.mutual_info_regression": {
  "data": {
   "shadows": "sklearn.feature_selection.mutual_info_.mutual_info_regression"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_mutual_info.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_mutual_info.test_compute_mi_cc": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.linalg.det",
    "numpy.log",
    "numpy.zeros",
    "sklearn.feature_selection.mutual_info_._compute_mi",
    "sklearn.utils.check_random_state",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_mutual_info.test_compute_mi_cd": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "numpy.empty",
    "numpy.log",
    "numpy.sum",
    "sklearn.feature_selection.mutual_info_._compute_mi",
    "sklearn.utils.check_random_state",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_mutual_info.test_compute_mi_cd_unique_label": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "numpy.empty",
    "numpy.hstack",
    "numpy.random.uniform",
    "numpy.sum",
    "sklearn.feature_selection.mutual_info_._compute_mi",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_mutual_info.test_compute_mi_dd": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.log",
    "sklearn.feature_selection.mutual_info_._compute_mi",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_mutual_info.test_mutual_info_classif_discrete": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "numpy.argsort",
    "numpy.array",
    "sklearn.feature_selection.mutual_info_.mutual_info_classif",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_mutual_info.test_mutual_info_classif_mixed": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "int",
    "numpy.argsort",
    "sklearn.feature_selection.mutual_info_.mutual_info_classif",
    "sklearn.utils.check_random_state",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_greater"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_mutual_info.test_mutual_info_options": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "mutual_info",
    "numpy.allclose",
    "numpy.array",
    "scipy.sparse.csr_matrix",
    "sklearn.feature_selection.mutual_info_.mutual_info_classif",
    "sklearn.feature_selection.mutual_info_.mutual_info_regression",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_false",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_mutual_info.test_mutual_info_regression": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "numpy.argsort",
    "numpy.array",
    "numpy.zeros",
    "sklearn.feature_selection.mutual_info_.mutual_info_regression",
    "sklearn.utils.check_random_state",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_rfe": {
  "data": {},
  "type": "module"
 },
 "sklearn.feature_selection.tests.test_rfe.GroupKFold": {
  "data": {
   "shadows": "sklearn.model_selection.GroupKFold"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_rfe.MockClassifier": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "sklearn.feature_selection.tests.test_rfe.MockClassifier.__init__": {
  "data": {
   "lineno": 32
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_rfe.MockClassifier.fit": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "len",
    "numpy.float64",
    "numpy.ones",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_rfe.MockClassifier.get_params": {
  "data": {
   "lineno": 54
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_rfe.MockClassifier.predict": {
  "data": {
   "lineno": 40
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_rfe.MockClassifier.score": {
  "data": {
   "lineno": 47
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_rfe.MockClassifier.set_params": {
  "data": {
   "lineno": 57
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_rfe.RFE": {
  "data": {
   "shadows": "sklearn.feature_selection.rfe.RFE"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_rfe.RFECV": {
  "data": {
   "shadows": "sklearn.feature_selection.rfe.RFECV"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_rfe.RandomForestClassifier": {
  "data": {
   "shadows": "sklearn.ensemble.RandomForestClassifier"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_rfe.SVC": {
  "data": {
   "shadows": "sklearn.svm.SVC"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_rfe.SVR": {
  "data": {
   "shadows": "sklearn.svm.SVR"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_rfe.StringIO": {
  "data": {
   "shadows": "sklearn.externals.six.moves.cStringIO"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_rfe.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_rfe.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_rfe.assert_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_rfe.assert_greater": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_greater"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_rfe.assert_true": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_true"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_rfe.check_random_state": {
  "data": {
   "shadows": "sklearn.utils.check_random_state"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_rfe.cross_val_score": {
  "data": {
   "shadows": "sklearn.model_selection.cross_val_score"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_rfe.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_rfe.get_scorer": {
  "data": {
   "shadows": "sklearn.metrics.get_scorer"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_rfe.ignore_warnings": {
  "data": {
   "shadows": "sklearn.utils.testing.ignore_warnings"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_rfe.load_iris": {
  "data": {
   "shadows": "sklearn.datasets.load_iris"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_rfe.make_friedman1": {
  "data": {
   "shadows": "sklearn.datasets.make_friedman1"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_rfe.make_scorer": {
  "data": {
   "shadows": "sklearn.metrics.make_scorer"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_rfe.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_rfe.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_rfe.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_rfe.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_rfe.test_number_of_subsets_of_features": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "formula1",
    "formula2",
    "numpy.max",
    "sklearn.feature_selection.rfe.RFE",
    "sklearn.feature_selection.rfe.RFECV",
    "sklearn.svm.SVC",
    "sklearn.utils.check_random_state",
    "sklearn.utils.testing.assert_equal",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_rfe.test_number_of_subsets_of_features.formula1": {
  "data": {
   "lineno": 295
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_rfe.test_number_of_subsets_of_features.formula2": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "float",
    "numpy.ceil"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_rfe.test_rfe": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "len",
    "numpy.c_",
    "numpy.testing.assert_array_almost_equal",
    "scipy.sparse.csr_matrix",
    "sklearn.datasets.load_iris",
    "sklearn.feature_selection.rfe.RFE",
    "sklearn.svm.SVC",
    "sklearn.utils.check_random_state",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_rfe.test_rfe_cv_groups": {
  "data": {
   "lineno": 364,
   "symbols_in_volume": [
    "int",
    "len",
    "numpy.floor",
    "numpy.linspace",
    "sklearn.datasets.load_iris",
    "sklearn.ensemble.RandomForestClassifier",
    "sklearn.feature_selection.rfe.RFECV",
    "sklearn.feature_selection.tests.test_rfe.pytest",
    "sklearn.model_selection.GroupKFold",
    "sklearn.utils.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_rfe.test_rfe_cv_n_jobs": {
  "data": {
   "lineno": 346,
   "symbols_in_volume": [
    "len",
    "numpy.c_",
    "numpy.testing.assert_array_almost_equal",
    "sklearn.datasets.load_iris",
    "sklearn.feature_selection.rfe.RFECV",
    "sklearn.feature_selection.tests.test_rfe.pytest",
    "sklearn.svm.SVC",
    "sklearn.utils.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_rfe.test_rfe_estimator_tags": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "sklearn.datasets.load_iris",
    "sklearn.feature_selection.rfe.RFE",
    "sklearn.feature_selection.tests.test_rfe.pytest",
    "sklearn.model_selection.cross_val_score",
    "sklearn.svm.SVC",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_greater"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_rfe.test_rfe_features_importance": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "len",
    "numpy.c_",
    "numpy.testing.assert_array_equal",
    "sklearn.datasets.load_iris",
    "sklearn.ensemble.RandomForestClassifier",
    "sklearn.feature_selection.rfe.RFE",
    "sklearn.svm.SVC",
    "sklearn.utils.check_random_state",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_rfe.test_rfe_min_step": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "sklearn.datasets.make_friedman1",
    "sklearn.feature_selection.rfe.RFE",
    "sklearn.svm.SVR",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_rfe.test_rfe_mockclassifier": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "len",
    "numpy.c_",
    "sklearn.datasets.load_iris",
    "sklearn.feature_selection.rfe.RFE",
    "sklearn.feature_selection.tests.test_rfe.MockClassifier",
    "sklearn.utils.check_random_state",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_rfe.test_rfecv": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "len",
    "list",
    "numpy.c_",
    "numpy.ones",
    "numpy.testing.assert_array_equal",
    "scipy.sparse.csr_matrix",
    "sklearn.datasets.load_iris",
    "sklearn.feature_selection.rfe.RFECV",
    "sklearn.metrics.get_scorer",
    "sklearn.metrics.make_scorer",
    "sklearn.metrics.zero_one_loss",
    "sklearn.svm.SVC",
    "sklearn.utils.check_random_state",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_rfe.test_rfecv.test_scorer": {
  "data": {
   "lineno": 167
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_rfe.test_rfecv_grid_scores_size": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "len",
    "list",
    "numpy.c_",
    "numpy.ceil",
    "sklearn.datasets.load_iris",
    "sklearn.feature_selection.rfe.RFECV",
    "sklearn.feature_selection.tests.test_rfe.MockClassifier",
    "sklearn.utils.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_rfe.test_rfecv_mockclassifier": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "len",
    "list",
    "numpy.c_",
    "sklearn.datasets.load_iris",
    "sklearn.feature_selection.rfe.RFECV",
    "sklearn.feature_selection.tests.test_rfe.MockClassifier",
    "sklearn.utils.check_random_state",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_rfe.test_rfecv_verbose_output": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "len",
    "list",
    "numpy.c_",
    "sklearn.datasets.load_iris",
    "sklearn.externals.six.moves.cStringIO",
    "sklearn.feature_selection.rfe.RFECV",
    "sklearn.feature_selection.tests.test_rfe.sys",
    "sklearn.svm.SVC",
    "sklearn.utils.check_random_state",
    "sklearn.utils.testing.assert_greater"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_rfe.zero_one_loss": {
  "data": {
   "shadows": "sklearn.metrics.zero_one_loss"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_variance_threshold": {
  "data": {},
  "type": "module"
 },
 "sklearn.feature_selection.tests.test_variance_threshold.VarianceThreshold": {
  "data": {
   "shadows": "sklearn.feature_selection.VarianceThreshold"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_variance_threshold.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_variance_threshold.assert_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_variance_threshold.assert_raises": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_variance_threshold.bsr_matrix": {
  "data": {
   "shadows": "scipy.sparse.bsr_matrix"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_variance_threshold.csc_matrix": {
  "data": {
   "shadows": "scipy.sparse.csc_matrix"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_variance_threshold.csr_matrix": {
  "data": {
   "shadows": "scipy.sparse.csr_matrix"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_variance_threshold.data": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "sklearn.feature_selection.tests.test_variance_threshold.test_variance_threshold": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "len",
    "scipy.sparse.csr_matrix",
    "sklearn.feature_selection.VarianceThreshold",
    "sklearn.feature_selection.tests.test_variance_threshold.data",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_variance_threshold.test_zero_variance": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "ValueError",
    "scipy.sparse.bsr_matrix",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "sklearn.feature_selection.VarianceThreshold",
    "sklearn.feature_selection.tests.test_variance_threshold.data",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.univariate_selection": {
  "data": {},
  "type": "module"
 },
 "sklearn.feature_selection.univariate_selection.GenericUnivariateSelect": {
  "data": {
   "lineno": 730,
   "symbols_in_volume": [
    "sklearn.feature_selection.univariate_selection.SelectFdr",
    "sklearn.feature_selection.univariate_selection.SelectFpr",
    "sklearn.feature_selection.univariate_selection.SelectFwe",
    "sklearn.feature_selection.univariate_selection.SelectKBest",
    "sklearn.feature_selection.univariate_selection.SelectPercentile",
    "sklearn.feature_selection.univariate_selection._BaseFilter"
   ]
  },
  "type": "class"
 },
 "sklearn.feature_selection.univariate_selection.GenericUnivariateSelect.__init__": {
  "data": {
   "lineno": 788,
   "symbols_in_volume": [
    "sklearn.feature_selection.univariate_selection.GenericUnivariateSelect",
    "sklearn.feature_selection.univariate_selection.f_classif",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.univariate_selection.GenericUnivariateSelect._check_params": {
  "data": {
   "lineno": 804,
   "symbols_in_volume": [
    "ValueError",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.univariate_selection.GenericUnivariateSelect._get_support_mask": {
  "data": {
   "lineno": 813,
   "symbols_in_volume": [
    "check_is_fitted"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.univariate_selection.GenericUnivariateSelect._make_selector": {
  "data": {
   "lineno": 793
  },
  "type": "function"
 },
 "sklearn.feature_selection.univariate_selection.SelectFdr": {
  "data": {
   "lineno": 595,
   "symbols_in_volume": [
    "sklearn.feature_selection.univariate_selection._BaseFilter"
   ]
  },
  "type": "class"
 },
 "sklearn.feature_selection.univariate_selection.SelectFdr.__init__": {
  "data": {
   "lineno": 651,
   "symbols_in_volume": [
    "sklearn.feature_selection.univariate_selection.SelectFdr",
    "sklearn.feature_selection.univariate_selection.f_classif",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.univariate_selection.SelectFdr._get_support_mask": {
  "data": {
   "lineno": 655,
   "symbols_in_volume": [
    "bool",
    "check_is_fitted",
    "float",
    "len",
    "numpy.arange",
    "numpy.sort",
    "numpy.zeros_like"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.univariate_selection.SelectFpr": {
  "data": {
   "lineno": 533,
   "symbols_in_volume": [
    "sklearn.feature_selection.univariate_selection._BaseFilter"
   ]
  },
  "type": "class"
 },
 "sklearn.feature_selection.univariate_selection.SelectFpr.__init__": {
  "data": {
   "lineno": 585,
   "symbols_in_volume": [
    "sklearn.feature_selection.univariate_selection.SelectFpr",
    "sklearn.feature_selection.univariate_selection.f_classif",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.univariate_selection.SelectFpr._get_support_mask": {
  "data": {
   "lineno": 589,
   "symbols_in_volume": [
    "check_is_fitted"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.univariate_selection.SelectFwe": {
  "data": {
   "lineno": 667,
   "symbols_in_volume": [
    "sklearn.feature_selection.univariate_selection._BaseFilter"
   ]
  },
  "type": "class"
 },
 "sklearn.feature_selection.univariate_selection.SelectFwe.__init__": {
  "data": {
   "lineno": 714,
   "symbols_in_volume": [
    "sklearn.feature_selection.univariate_selection.SelectFwe",
    "sklearn.feature_selection.univariate_selection.f_classif",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.univariate_selection.SelectFwe._get_support_mask": {
  "data": {
   "lineno": 718,
   "symbols_in_volume": [
    "check_is_fitted",
    "len"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.univariate_selection.SelectKBest": {
  "data": {
   "lineno": 451,
   "symbols_in_volume": [
    "sklearn.feature_selection.univariate_selection._BaseFilter"
   ]
  },
  "type": "class"
 },
 "sklearn.feature_selection.univariate_selection.SelectKBest.__init__": {
  "data": {
   "lineno": 506,
   "symbols_in_volume": [
    "sklearn.feature_selection.univariate_selection.SelectKBest",
    "sklearn.feature_selection.univariate_selection.f_classif",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.univariate_selection.SelectKBest._check_params": {
  "data": {
   "lineno": 510,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.univariate_selection.SelectKBest._get_support_mask": {
  "data": {
   "lineno": 516,
   "symbols_in_volume": [
    "bool",
    "check_is_fitted",
    "numpy.argsort",
    "numpy.ones",
    "numpy.zeros",
    "sklearn.feature_selection.univariate_selection._clean_nans"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.univariate_selection.SelectPercentile": {
  "data": {
   "lineno": 368,
   "symbols_in_volume": [
    "sklearn.feature_selection.univariate_selection._BaseFilter"
   ]
  },
  "type": "class"
 },
 "sklearn.feature_selection.univariate_selection.SelectPercentile.__init__": {
  "data": {
   "lineno": 422,
   "symbols_in_volume": [
    "sklearn.feature_selection.univariate_selection.SelectPercentile",
    "sklearn.feature_selection.univariate_selection.f_classif",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.univariate_selection.SelectPercentile._check_params": {
  "data": {
   "lineno": 426,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.univariate_selection.SelectPercentile._get_support_mask": {
  "data": {
   "lineno": 431,
   "symbols_in_volume": [
    "check_is_fitted",
    "int",
    "len",
    "numpy.bool",
    "numpy.ones",
    "numpy.percentile",
    "numpy.where",
    "numpy.zeros",
    "sklearn.feature_selection.univariate_selection._clean_nans"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.univariate_selection._BaseFilter": {
  "data": {
   "lineno": 312
  },
  "type": "class"
 },
 "sklearn.feature_selection.univariate_selection._BaseFilter.__init__": {
  "data": {
   "lineno": 322
  },
  "type": "function"
 },
 "sklearn.feature_selection.univariate_selection._BaseFilter._check_params": {
  "data": {
   "lineno": 361
  },
  "type": "function"
 },
 "sklearn.feature_selection.univariate_selection._BaseFilter.fit": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": [
    "TypeError",
    "callable",
    "check_X_y",
    "isinstance",
    "list",
    "numpy.asarray",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.univariate_selection._chisquare": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "len",
    "numpy.asarray",
    "numpy.errstate",
    "numpy.float64",
    "scipy.special.chdtrc"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.univariate_selection._clean_nans": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "as_float_array",
    "numpy.finfo",
    "numpy.isnan"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.univariate_selection.chi2": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "LabelBinarizer",
    "ValueError",
    "check_array",
    "numpy.any",
    "numpy.append",
    "numpy.dot",
    "safe_sparse_dot",
    "scipy.sparse.issparse",
    "sklearn.feature_selection.univariate_selection._chisquare"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.univariate_selection.f_classif": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "check_X_y",
    "numpy.unique",
    "safe_mask",
    "sklearn.feature_selection.univariate_selection.f_oneway"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.univariate_selection.f_oneway": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "UserWarning",
    "as_float_array",
    "enumerate",
    "float",
    "len",
    "numpy.array",
    "numpy.asarray",
    "numpy.nonzero",
    "numpy.sum",
    "numpy.where",
    "safe_sqr",
    "scipy.special.fdtrc",
    "sklearn.feature_selection.univariate_selection.warnings",
    "sum"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.univariate_selection.f_regression": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "check_X_y",
    "numpy.float64",
    "numpy.linalg.norm",
    "numpy.mean",
    "numpy.sqrt",
    "row_norms",
    "safe_sparse_dot",
    "scipy.sparse.issparse",
    "scipy.stats.f.sf"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.univariate_selection.issparse": {
  "data": {
   "shadows": "scipy.sparse.issparse"
  },
  "type": "import"
 },
 "sklearn.feature_selection.univariate_selection.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.feature_selection.univariate_selection.special": {
  "data": {
   "shadows": "scipy.special"
  },
  "type": "import"
 },
 "sklearn.feature_selection.univariate_selection.stats": {
  "data": {
   "shadows": "scipy.stats"
  },
  "type": "import"
 },
 "sklearn.feature_selection.univariate_selection.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.feature_selection.variance_threshold": {
  "data": {},
  "type": "module"
 },
 "sklearn.feature_selection.variance_threshold.VarianceThreshold": {
  "data": {
   "lineno": 12
  },
  "type": "class"
 },
 "sklearn.feature_selection.variance_threshold.VarianceThreshold.__init__": {
  "data": {
   "lineno": 45
  },
  "type": "function"
 },
 "sklearn.feature_selection.variance_threshold.VarianceThreshold._get_support_mask": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "check_is_fitted"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.variance_threshold.VarianceThreshold.fit": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "ValueError",
    "check_array",
    "hasattr",
    "mean_variance_axis",
    "numpy.all",
    "numpy.float64",
    "numpy.var"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.variance_threshold.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.gaussian_process": {
  "data": {},
  "type": "module"
 },
 "sklearn.gaussian_process.__all__": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "sklearn.gaussian_process.correlation_models": {
  "data": {},
  "type": "module"
 },
 "sklearn.gaussian_process.correlation_models.absolute_exponential": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "ValueError",
    "deprecated",
    "numpy.abs",
    "numpy.asarray",
    "numpy.exp",
    "numpy.float64",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "sklearn.gaussian_process.correlation_models.cubic": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "Exception",
    "deprecated",
    "numpy.abs",
    "numpy.asarray",
    "numpy.clip",
    "numpy.float64",
    "numpy.prod",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.gaussian_process.correlation_models.generalized_exponential": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "Exception",
    "deprecated",
    "numpy.abs",
    "numpy.asarray",
    "numpy.exp",
    "numpy.float64",
    "numpy.hstack",
    "numpy.repeat",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "sklearn.gaussian_process.correlation_models.linear": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "Exception",
    "deprecated",
    "numpy.abs",
    "numpy.asarray",
    "numpy.clip",
    "numpy.float64",
    "numpy.prod"
   ]
  },
  "type": "function"
 },
 "sklearn.gaussian_process.correlation_models.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.gaussian_process.correlation_models.pure_nugget": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "deprecated",
    "numpy.all",
    "numpy.asarray",
    "numpy.float64",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "sklearn.gaussian_process.correlation_models.squared_exponential": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "ValueError",
    "deprecated",
    "numpy.asarray",
    "numpy.exp",
    "numpy.float64",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "sklearn.gaussian_process.gpc": {
  "data": {
   "symbols_in_volume": [
    "numpy.array",
    "numpy.newaxis"
   ]
  },
  "type": "module"
 },
 "sklearn.gaussian_process.gpc.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "sklearn.gaussian_process.gpc.C": {
  "data": {
   "shadows": "sklearn.gaussian_process.kernels.ConstantKernel"
  },
  "type": "import"
 },
 "sklearn.gaussian_process.gpc.COEFS": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "sklearn.gaussian_process.gpc.ClassifierMixin": {
  "data": {
   "shadows": "sklearn.base.ClassifierMixin"
  },
  "type": "import"
 },
 "sklearn.gaussian_process.gpc.CompoundKernel": {
  "data": {
   "shadows": "sklearn.gaussian_process.kernels.CompoundKernel"
  },
  "type": "import"
 },
 "sklearn.gaussian_process.gpc.ConvergenceWarning": {
  "data": {
   "shadows": "sklearn.exceptions.ConvergenceWarning"
  },
  "type": "import"
 },
 "sklearn.gaussian_process.gpc.GaussianProcessClassifier": {
  "data": {
   "lineno": 444,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator",
    "sklearn.base.ClassifierMixin"
   ]
  },
  "type": "class"
 },
 "sklearn.gaussian_process.gpc.GaussianProcessClassifier.__init__": {
  "data": {
   "lineno": 578,
   "symbols_in_volume": [
    "kernel"
   ]
  },
  "type": "function"
 },
 "sklearn.gaussian_process.gpc.GaussianProcessClassifier.fit": {
  "data": {
   "lineno": 592,
   "symbols_in_volume": [
    "ValueError",
    "numpy.mean",
    "numpy.unique",
    "sklearn.gaussian_process.gpc._BinaryGaussianProcessClassifierLaplace",
    "sklearn.multiclass.OneVsOneClassifier",
    "sklearn.multiclass.OneVsRestClassifier",
    "sklearn.utils.validation.check_X_y"
   ]
  },
  "type": "function"
 },
 "sklearn.gaussian_process.gpc.GaussianProcessClassifier.kernel_": {
  "data": {
   "lineno": 684,
   "symbols_in_volume": [
    "property",
    "sklearn.gaussian_process.kernels.CompoundKernel"
   ]
  },
  "type": "function"
 },
 "sklearn.gaussian_process.gpc.GaussianProcessClassifier.log_marginal_likelihood": {
  "data": {
   "lineno": 693,
   "symbols_in_volume": [
    "NotImplementedError",
    "ValueError",
    "enumerate",
    "numpy.asarray",
    "numpy.mean",
    "sklearn.utils.validation.check_is_fitted"
   ]
  },
  "type": "function"
 },
 "sklearn.gaussian_process.gpc.GaussianProcessClassifier.predict": {
  "data": {
   "lineno": 646,
   "symbols_in_volume": [
    "sklearn.utils.validation.check_array",
    "sklearn.utils.validation.check_is_fitted"
   ]
  },
  "type": "function"
 },
 "sklearn.gaussian_process.gpc.GaussianProcessClassifier.predict_proba": {
  "data": {
   "lineno": 662,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.utils.validation.check_array",
    "sklearn.utils.validation.check_is_fitted"
   ]
  },
  "type": "function"
 },
 "sklearn.gaussian_process.gpc.LAMBDAS": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "sklearn.gaussian_process.gpc.LabelEncoder": {
  "data": {
   "shadows": "sklearn.preprocessing.LabelEncoder"
  },
  "type": "import"
 },
 "sklearn.gaussian_process.gpc.OneVsOneClassifier": {
  "data": {
   "shadows": "sklearn.multiclass.OneVsOneClassifier"
  },
  "type": "import"
 },
 "sklearn.gaussian_process.gpc.OneVsRestClassifier": {
  "data": {
   "shadows": "sklearn.multiclass.OneVsRestClassifier"
  },
  "type": "import"
 },
 "sklearn.gaussian_process.gpc.RBF": {
  "data": {
   "shadows": "sklearn.gaussian_process.kernels.RBF"
  },
  "type": "import"
 },
 "sklearn.gaussian_process.gpc._BinaryGaussianProcessClassifierLaplace": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator"
   ]
  },
  "type": "class"
 },
 "sklearn.gaussian_process.gpc._BinaryGaussianProcessClassifierLaplace.__init__": {
  "data": {
   "lineno": 148
  },
  "type": "function"
 },
 "sklearn.gaussian_process.gpc._BinaryGaussianProcessClassifierLaplace._constrained_optimization": {
  "data": {
   "lineno": 427,
   "symbols_in_volume": [
    "ValueError",
    "callable",
    "scipy.optimize.fmin_l_bfgs_b",
    "sklearn.exceptions.ConvergenceWarning",
    "sklearn.gaussian_process.gpc.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.gaussian_process.gpc._BinaryGaussianProcessClassifierLaplace._posterior_mode": {
  "data": {
   "lineno": 374,
   "symbols_in_volume": [
    "hasattr",
    "numpy.diag",
    "numpy.exp",
    "numpy.eye",
    "numpy.float64",
    "numpy.inf",
    "numpy.log",
    "numpy.log1p",
    "numpy.newaxis",
    "numpy.sqrt",
    "numpy.zeros_like",
    "range",
    "scipy.linalg.cho_solve",
    "scipy.linalg.cholesky",
    "scipy.special.expit"
   ]
  },
  "type": "function"
 },
 "sklearn.gaussian_process.gpc._BinaryGaussianProcessClassifierLaplace.fit": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "ValueError",
    "list",
    "map",
    "numpy.argmin",
    "numpy.copy",
    "numpy.exp",
    "numpy.isfinite",
    "numpy.min",
    "operator.itemgetter",
    "range",
    "sklearn.base.clone",
    "sklearn.gaussian_process.kernels.ConstantKernel",
    "sklearn.gaussian_process.kernels.RBF",
    "sklearn.preprocessing.LabelEncoder",
    "sklearn.utils.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.gaussian_process.gpc._BinaryGaussianProcessClassifierLaplace.fit.obj_func": {
  "data": {
   "lineno": 201
  },
  "type": "function"
 },
 "sklearn.gaussian_process.gpc._BinaryGaussianProcessClassifierLaplace.log_marginal_likelihood": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": [
    "ValueError",
    "kernel",
    "numpy.diag",
    "numpy.einsum",
    "numpy.empty",
    "numpy.newaxis",
    "range",
    "scipy.linalg.cho_solve",
    "scipy.linalg.solve",
    "sklearn.gaussian_process.kernels.ConstantKernel",
    "sklearn.gaussian_process.kernels.ConstantKernel.dot",
    "sklearn.gaussian_process.kernels.ConstantKernel.ravel"
   ]
  },
  "type": "function"
 },
 "sklearn.gaussian_process.gpc._BinaryGaussianProcessClassifierLaplace.predict": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "numpy.where",
    "sklearn.utils.validation.check_is_fitted"
   ]
  },
  "type": "function"
 },
 "sklearn.gaussian_process.gpc._BinaryGaussianProcessClassifierLaplace.predict_proba": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "numpy.einsum",
    "numpy.newaxis",
    "numpy.pi",
    "numpy.sqrt",
    "numpy.vstack",
    "scipy.linalg.solve",
    "scipy.special.erf",
    "sklearn.gaussian_process.gpc.COEFS",
    "sklearn.gaussian_process.gpc.LAMBDAS",
    "sklearn.utils.validation.check_is_fitted"
   ]
  },
  "type": "function"
 },
 "sklearn.gaussian_process.gpc.check_X_y": {
  "data": {
   "shadows": "sklearn.utils.validation.check_X_y"
  },
  "type": "import"
 },
 "sklearn.gaussian_process.gpc.check_array": {
  "data": {
   "shadows": "sklearn.utils.validation.check_array"
  },
  "type": "import"
 },
 "sklearn.gaussian_process.gpc.check_is_fitted": {
  "data": {
   "shadows": "sklearn.utils.validation.check_is_fitted"
  },
  "type": "import"
 },
 "sklearn.gaussian_process.gpc.check_random_state": {
  "data": {
   "shadows": "sklearn.utils.check_random_state"
  },
  "type": "import"
 },
 "sklearn.gaussian_process.gpc.cho_solve": {
  "data": {
   "shadows": "scipy.linalg.cho_solve"
  },
  "type": "import"
 },
 "sklearn.gaussian_process.gpc.cholesky": {
  "data": {
   "shadows": "scipy.linalg.cholesky"
  },
  "type": "import"
 },
 "sklearn.gaussian_process.gpc.clone": {
  "data": {
   "shadows": "sklearn.base.clone"
  },
  "type": "import"
 },
 "sklearn.gaussian_process.gpc.erf": {
  "data": {
   "shadows": "scipy.special.erf"
  },
  "type": "import"
 },
 "sklearn.gaussian_process.gpc.expit": {
  "data": {
   "shadows": "scipy.special.expit"
  },
  "type": "import"
 },
 "sklearn.gaussian_process.gpc.fmin_l_bfgs_b": {
  "data": {
   "shadows": "scipy.optimize.fmin_l_bfgs_b"
  },
  "type": "import"
 },
 "sklearn.gaussian_process.gpc.itemgetter": {
  "data": {
   "shadows": "operator.itemgetter"
  },
  "type": "import"
 },
 "sklearn.gaussian_process.gpc.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.gaussian_process.gpc.solve": {
  "data": {
   "shadows": "scipy.linalg.solve"
  },
  "type": "import"
 },
 "sklearn.gaussian_process.gpc.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.gaussian_process.gpr": {
  "data": {},
  "type": "module"
 },
 "sklearn.gaussian_process.gpr.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "sklearn.gaussian_process.gpr.C": {
  "data": {
   "shadows": "sklearn.gaussian_process.kernels.ConstantKernel"
  },
  "type": "import"
 },
 "sklearn.gaussian_process.gpr.ConvergenceWarning": {
  "data": {
   "shadows": "sklearn.exceptions.ConvergenceWarning"
  },
  "type": "import"
 },
 "sklearn.gaussian_process.gpr.GaussianProcessRegressor": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator",
    "sklearn.base.RegressorMixin"
   ]
  },
  "type": "class"
 },
 "sklearn.gaussian_process.gpr.GaussianProcessRegressor.__init__": {
  "data": {
   "lineno": 150
  },
  "type": "function"
 },
 "sklearn.gaussian_process.gpr.GaussianProcessRegressor._constrained_optimization": {
  "data": {
   "lineno": 473,
   "symbols_in_volume": [
    "ValueError",
    "callable",
    "scipy.optimize.fmin_l_bfgs_b",
    "sklearn.exceptions.ConvergenceWarning",
    "sklearn.gaussian_process.gpr.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.gaussian_process.gpr.GaussianProcessRegressor.fit": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "ValueError",
    "list",
    "map",
    "numpy.argmin",
    "numpy.copy",
    "numpy.diag_indices_from",
    "numpy.isfinite",
    "numpy.iterable",
    "numpy.linalg.LinAlgError",
    "numpy.mean",
    "numpy.min",
    "numpy.zeros",
    "operator.itemgetter",
    "range",
    "scipy.linalg.cho_solve",
    "scipy.linalg.cholesky",
    "sklearn.base.clone",
    "sklearn.gaussian_process.kernels.ConstantKernel",
    "sklearn.gaussian_process.kernels.RBF",
    "sklearn.utils.check_random_state",
    "sklearn.utils.validation.check_X_y"
   ]
  },
  "type": "function"
 },
 "sklearn.gaussian_process.gpr.GaussianProcessRegressor.fit.obj_func": {
  "data": {
   "lineno": 221
  },
  "type": "function"
 },
 "sklearn.gaussian_process.gpr.GaussianProcessRegressor.log_marginal_likelihood": {
  "data": {
   "lineno": 400,
   "symbols_in_volume": [
    "ValueError",
    "kernel",
    "numpy.diag",
    "numpy.diag_indices_from",
    "numpy.einsum",
    "numpy.eye",
    "numpy.inf",
    "numpy.linalg.LinAlgError",
    "numpy.log",
    "numpy.newaxis",
    "numpy.pi",
    "numpy.zeros_like",
    "scipy.linalg.cho_solve",
    "scipy.linalg.cholesky"
   ]
  },
  "type": "function"
 },
 "sklearn.gaussian_process.gpr.GaussianProcessRegressor.predict": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "RuntimeError",
    "hasattr",
    "kernel",
    "kernel.diag",
    "numpy.any",
    "numpy.dot",
    "numpy.einsum",
    "numpy.eye",
    "numpy.sqrt",
    "numpy.zeros",
    "scipy.linalg.cho_solve",
    "scipy.linalg.solve_triangular",
    "sklearn.gaussian_process.gpr.warnings",
    "sklearn.gaussian_process.kernels.ConstantKernel",
    "sklearn.gaussian_process.kernels.RBF",
    "sklearn.utils.validation.check_array"
   ]
  },
  "type": "function"
 },
 "sklearn.gaussian_process.gpr.GaussianProcessRegressor.rng": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "property",
    "sklearn.utils.deprecation.deprecated"
   ]
  },
  "type": "function"
 },
 "sklearn.gaussian_process.gpr.GaussianProcessRegressor.sample_y": {
  "data": {
   "lineno": 364,
   "symbols_in_volume": [
    "numpy.hstack",
    "numpy.newaxis",
    "range",
    "sklearn.utils.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.gaussian_process.gpr.GaussianProcessRegressor.y_train_mean": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "property",
    "sklearn.utils.deprecation.deprecated"
   ]
  },
  "type": "function"
 },
 "sklearn.gaussian_process.gpr.RBF": {
  "data": {
   "shadows": "sklearn.gaussian_process.kernels.RBF"
  },
  "type": "import"
 },
 "sklearn.gaussian_process.gpr.RegressorMixin": {
  "data": {
   "shadows": "sklearn.base.RegressorMixin"
  },
  "type": "import"
 },
 "sklearn.gaussian_process.gpr.check_X_y": {
  "data": {
   "shadows": "sklearn.utils.validation.check_X_y"
  },
  "type": "import"
 },
 "sklearn.gaussian_process.gpr.check_array": {
  "data": {
   "shadows": "sklearn.utils.validation.check_array"
  },
  "type": "import"
 },
 "sklearn.gaussian_process.gpr.check_random_state": {
  "data": {
   "shadows": "sklearn.utils.check_random_state"
  },
  "type": "import"
 },
 "sklearn.gaussian_process.gpr.cho_solve": {
  "data": {
   "shadows": "scipy.linalg.cho_solve"
  },
  "type": "import"
 },
 "sklearn.gaussian_process.gpr.cholesky": {
  "data": {
   "shadows": "scipy.linalg.cholesky"
  },
  "type": "import"
 },
 "sklearn.gaussian_process.gpr.clone": {
  "data": {
   "shadows": "sklearn.base.clone"
  },
  "type": "import"
 },
 "sklearn.gaussian_process.gpr.deprecated": {
  "data": {
   "shadows": "sklearn.utils.deprecation.deprecated"
  },
  "type": "import"
 },
 "sklearn.gaussian_process.gpr.fmin_l_bfgs_b": {
  "data": {
   "shadows": "scipy.optimize.fmin_l_bfgs_b"
  },
  "type": "import"
 },
 "sklearn.gaussian_process.gpr.itemgetter": {
  "data": {
   "shadows": "operator.itemgetter"
  },
  "type": "import"
 },
 "sklearn.gaussian_process.gpr.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.gaussian_process.gpr.solve_triangular": {
  "data": {
   "shadows": "scipy.linalg.solve_triangular"
  },
  "type": "import"
 },
 "sklearn.gaussian_process.gpr.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.gaussian_process.regression_models": {
  "data": {},
  "type": "module"
 },
 "sklearn.gaussian_process.regression_models.constant": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "deprecated",
    "numpy.asarray",
    "numpy.float64",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "sklearn.gaussian_process.regression_models.linear": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "deprecated",
    "numpy.asarray",
    "numpy.float64",
    "numpy.hstack",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "sklearn.gaussian_process.regression_models.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.gaussian_process.regression_models.quadratic": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "deprecated",
    "numpy.asarray",
    "numpy.float64",
    "numpy.hstack",
    "numpy.newaxis",
    "numpy.ones",
    "range"
   ]
  },
  "type": "function"
 },
 "sklearn.gaussian_process.tests": {
  "data": {},
  "type": "module"
 },
 "sklearn.gaussian_process.tests.test_gpc": {
  "data": {
   "symbols_in_volume": [
    "int",
    "numpy.array",
    "numpy.atleast_2d",
    "numpy.empty",
    "numpy.linspace",
    "sklearn.gaussian_process.kernels.ConstantKernel",
    "sklearn.gaussian_process.kernels.RBF",
    "sklearn.gaussian_process.tests.test_gpc.X",
    "sklearn.gaussian_process.tests.test_gpc.f",
    "sklearn.gaussian_process.tests.test_gpc.fX",
    "sklearn.gaussian_process.tests.test_gpc.fixed_kernel",
    "sklearn.gaussian_process.tests.test_gpc.kernels",
    "sklearn.gaussian_process.tests.test_gpc.y",
    "sklearn.gaussian_process.tests.test_gpc.y_mc"
   ]
  },
  "type": "module"
 },
 "sklearn.gaussian_process.tests.test_gpc.C": {
  "data": {
   "shadows": "sklearn.gaussian_process.kernels.ConstantKernel"
  },
  "type": "import"
 },
 "sklearn.gaussian_process.tests.test_gpc.GaussianProcessClassifier": {
  "data": {
   "shadows": "sklearn.gaussian_process.GaussianProcessClassifier"
  },
  "type": "import"
 },
 "sklearn.gaussian_process.tests.test_gpc.RBF": {
  "data": {
   "shadows": "sklearn.gaussian_process.kernels.RBF"
  },
  "type": "import"
 },
 "sklearn.gaussian_process.tests.test_gpc.X": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "sklearn.gaussian_process.tests.test_gpc.X2": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "sklearn.gaussian_process.tests.test_gpc.approx_fprime": {
  "data": {
   "shadows": "scipy.optimize.approx_fprime"
  },
  "type": "import"
 },
 "sklearn.gaussian_process.tests.test_gpc.assert_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "sklearn.gaussian_process.tests.test_gpc.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.gaussian_process.tests.test_gpc.assert_greater": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_greater"
  },
  "type": "import"
 },
 "sklearn.gaussian_process.tests.test_gpc.assert_true": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_true"
  },
  "type": "import"
 },
 "sklearn.gaussian_process.tests.test_gpc.f": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "numpy.sin"
   ]
  },
  "type": "function"
 },
 "sklearn.gaussian_process.tests.test_gpc.fX": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "sklearn.gaussian_process.tests.test_gpc.fixed_kernel": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "sklearn.gaussian_process.tests.test_gpc.kernels": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "sklearn.gaussian_process.tests.test_gpc.non_fixed_kernels": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "sklearn.gaussian_process.tests.test_gpc.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.gaussian_process.tests.test_gpc.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.gaussian_process.tests.test_gpc.test_converged_to_local_maximum": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.all",
    "sklearn.gaussian_process.GaussianProcessClassifier",
    "sklearn.gaussian_process.tests.test_gpc.X",
    "sklearn.gaussian_process.tests.test_gpc.non_fixed_kernels",
    "sklearn.gaussian_process.tests.test_gpc.pytest",
    "sklearn.gaussian_process.tests.test_gpc.y",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.gaussian_process.tests.test_gpc.test_custom_optimizer": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "sklearn.gaussian_process.GaussianProcessClassifier",
    "sklearn.gaussian_process.tests.test_gpc.X",
    "sklearn.gaussian_process.tests.test_gpc.non_fixed_kernels",
    "sklearn.gaussian_process.tests.test_gpc.pytest",
    "sklearn.gaussian_process.tests.test_gpc.y_mc",
    "sklearn.utils.testing.assert_greater"
   ]
  },
  "type": "function"
 },
 "sklearn.gaussian_process.tests.test_gpc.test_custom_optimizer.optimizer": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "numpy.atleast_1d",
    "numpy.maximum",
    "numpy.minimum",
    "numpy.random.RandomState",
    "obj_func",
    "range",
    "sklearn.gaussian_process.tests.test_gpc.f"
   ]
  },
  "type": "function"
 },
 "sklearn.gaussian_process.tests.test_gpc.test_lml_gradient": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "scipy.optimize.approx_fprime",
    "sklearn.gaussian_process.GaussianProcessClassifier",
    "sklearn.gaussian_process.tests.test_gpc.X",
    "sklearn.gaussian_process.tests.test_gpc.kernels",
    "sklearn.gaussian_process.tests.test_gpc.pytest",
    "sklearn.gaussian_process.tests.test_gpc.y",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.gaussian_process.tests.test_gpc.test_lml_improving": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "sklearn.gaussian_process.GaussianProcessClassifier",
    "sklearn.gaussian_process.tests.test_gpc.X",
    "sklearn.gaussian_process.tests.test_gpc.non_fixed_kernels",
    "sklearn.gaussian_process.tests.test_gpc.pytest",
    "sklearn.gaussian_process.tests.test_gpc.y",
    "sklearn.utils.testing.assert_greater"
   ]
  },
  "type": "function"
 },
 "sklearn.gaussian_process.tests.test_gpc.test_lml_precomputed": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "sklearn.gaussian_process.GaussianProcessClassifier",
    "sklearn.gaussian_process.tests.test_gpc.X",
    "sklearn.gaussian_process.tests.test_gpc.kernels",
    "sklearn.gaussian_process.tests.test_gpc.pytest",
    "sklearn.gaussian_process.tests.test_gpc.y",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.gaussian_process.tests.test_gpc.test_multi_class": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "numpy.argmax",
    "sklearn.gaussian_process.GaussianProcessClassifier",
    "sklearn.gaussian_process.tests.test_gpc.X",
    "sklearn.gaussian_process.tests.test_gpc.X2",
    "sklearn.gaussian_process.tests.test_gpc.kernels",
    "sklearn.gaussian_process.tests.test_gpc.pytest",
    "sklearn.gaussian_process.tests.test_gpc.y_mc",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.gaussian_process.tests.test_gpc.test_multi_class_n_jobs": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "sklearn.gaussian_process.GaussianProcessClassifier",
    "sklearn.gaussian_process.tests.test_gpc.X",
    "sklearn.gaussian_process.tests.test_gpc.X2",
    "sklearn.gaussian_process.tests.test_gpc.kernels",
    "sklearn.gaussian_process.tests.test_gpc.pytest",
    "sklearn.gaussian_process.tests.test_gpc.y_mc",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.gaussian_process.tests.test_gpc.test_predict_consistent": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "sklearn.gaussian_process.GaussianProcessClassifier",
    "sklearn.gaussian_process.tests.test_gpc.X",
    "sklearn.gaussian_process.tests.test_gpc.kernels",
    "sklearn.gaussian_process.tests.test_gpc.pytest",
    "sklearn.gaussian_process.tests.test_gpc.y",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.gaussian_process.tests.test_gpc.test_random_starts": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "numpy.finfo",
    "numpy.float32",
    "numpy.inf",
    "numpy.random.RandomState",
    "numpy.sin",
    "range",
    "sklearn.gaussian_process.GaussianProcessClassifier",
    "sklearn.gaussian_process.kernels.ConstantKernel",
    "sklearn.gaussian_process.kernels.RBF",
    "sklearn.gaussian_process.tests.test_gpc.X",
    "sklearn.gaussian_process.tests.test_gpc.y",
    "sklearn.utils.testing.assert_greater"
   ]
  },
  "type": "function"
 },
 "sklearn.gaussian_process.tests.test_gpc.y": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "sklearn.gaussian_process.tests.test_gpc.y_mc": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "sklearn.gaussian_process.tests.test_gpr": {
  "data": {
   "symbols_in_volume": [
    "numpy.atleast_2d",
    "sklearn.gaussian_process.kernels.ConstantKernel",
    "sklearn.gaussian_process.kernels.RBF",
    "sklearn.gaussian_process.tests.test_gpr.X",
    "sklearn.gaussian_process.tests.test_gpr.f",
    "sklearn.gaussian_process.tests.test_gpr.fixed_kernel",
    "sklearn.gaussian_process.tests.test_gpr.kernels"
   ]
  },
  "type": "module"
 },
 "sklearn.gaussian_process.tests.test_gpr.C": {
  "data": {
   "shadows": "sklearn.gaussian_process.kernels.ConstantKernel"
  },
  "type": "import"
 },
 "sklearn.gaussian_process.tests.test_gpr.DotProduct": {
  "data": {
   "shadows": "sklearn.gaussian_process.kernels.DotProduct"
  },
  "type": "import"
 },
 "sklearn.gaussian_process.tests.test_gpr.GaussianProcessRegressor": {
  "data": {
   "shadows": "sklearn.gaussian_process.GaussianProcessRegressor"
  },
  "type": "import"
 },
 "sklearn.gaussian_process.tests.test_gpr.RBF": {
  "data": {
   "shadows": "sklearn.gaussian_process.kernels.RBF"
  },
  "type": "import"
 },
 "sklearn.gaussian_process.tests.test_gpr.WhiteKernel": {
  "data": {
   "shadows": "sklearn.gaussian_process.kernels.WhiteKernel"
  },
  "type": "import"
 },
 "sklearn.gaussian_process.tests.test_gpr.X": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "sklearn.gaussian_process.tests.test_gpr.X2": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "sklearn.gaussian_process.tests.test_gpr.approx_fprime": {
  "data": {
   "shadows": "scipy.optimize.approx_fprime"
  },
  "type": "import"
 },
 "sklearn.gaussian_process.tests.test_gpr.assert_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "sklearn.gaussian_process.tests.test_gpr.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.gaussian_process.tests.test_gpr.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.gaussian_process.tests.test_gpr.assert_array_less": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_less"
  },
  "type": "import"
 },
 "sklearn.gaussian_process.tests.test_gpr.assert_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.gaussian_process.tests.test_gpr.assert_greater": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_greater"
  },
  "type": "import"
 },
 "sklearn.gaussian_process.tests.test_gpr.assert_raise_message": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raise_message"
  },
  "type": "import"
 },
 "sklearn.gaussian_process.tests.test_gpr.assert_true": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_true"
  },
  "type": "import"
 },
 "sklearn.gaussian_process.tests.test_gpr.f": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "numpy.sin"
   ]
  },
  "type": "function"
 },
 "sklearn.gaussian_process.tests.test_gpr.fixed_kernel": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "sklearn.gaussian_process.tests.test_gpr.kernels": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "sklearn.gaussian_process.tests.test_gpr.non_fixed_kernels": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "sklearn.gaussian_process.tests.test_gpr.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.gaussian_process.tests.test_gpr.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.gaussian_process.tests.test_gpr.test_K_inv_reset": {
  "data": {
   "lineno": 346,
   "symbols_in_volume": [
    "hasattr",
    "sklearn.gaussian_process.GaussianProcessRegressor",
    "sklearn.gaussian_process.tests.test_gpr.X",
    "sklearn.gaussian_process.tests.test_gpr.X2",
    "sklearn.gaussian_process.tests.test_gpr.f",
    "sklearn.gaussian_process.tests.test_gpr.kernels",
    "sklearn.gaussian_process.tests.test_gpr.pytest",
    "sklearn.gaussian_process.tests.test_gpr.y",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.gaussian_process.tests.test_gpr.test_anisotropic_kernel": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "numpy.exp",
    "numpy.random.RandomState",
    "sklearn.gaussian_process.GaussianProcessRegressor",
    "sklearn.gaussian_process.kernels.RBF",
    "sklearn.gaussian_process.tests.test_gpr.X",
    "sklearn.gaussian_process.tests.test_gpr.y",
    "sklearn.utils.testing.assert_greater"
   ]
  },
  "type": "function"
 },
 "sklearn.gaussian_process.tests.test_gpr.test_converged_to_local_maximum": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.all",
    "sklearn.gaussian_process.GaussianProcessRegressor",
    "sklearn.gaussian_process.tests.test_gpr.X",
    "sklearn.gaussian_process.tests.test_gpr.non_fixed_kernels",
    "sklearn.gaussian_process.tests.test_gpr.pytest",
    "sklearn.gaussian_process.tests.test_gpr.y",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.gaussian_process.tests.test_gpr.test_custom_optimizer": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "sklearn.gaussian_process.GaussianProcessRegressor",
    "sklearn.gaussian_process.tests.test_gpr.X",
    "sklearn.gaussian_process.tests.test_gpr.non_fixed_kernels",
    "sklearn.gaussian_process.tests.test_gpr.pytest",
    "sklearn.gaussian_process.tests.test_gpr.y",
    "sklearn.utils.testing.assert_greater"
   ]
  },
  "type": "function"
 },
 "sklearn.gaussian_process.tests.test_gpr.test_custom_optimizer.optimizer": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "numpy.atleast_1d",
    "numpy.maximum",
    "numpy.minimum",
    "numpy.random.RandomState",
    "obj_func",
    "range",
    "sklearn.gaussian_process.tests.test_gpr.f"
   ]
  },
  "type": "function"
 },
 "sklearn.gaussian_process.tests.test_gpr.test_duplicate_input": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": [
    "numpy.hstack",
    "numpy.linspace",
    "numpy.vstack",
    "sklearn.gaussian_process.GaussianProcessRegressor",
    "sklearn.gaussian_process.tests.test_gpr.X",
    "sklearn.gaussian_process.tests.test_gpr.kernels",
    "sklearn.gaussian_process.tests.test_gpr.pytest",
    "sklearn.gaussian_process.tests.test_gpr.y",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.gaussian_process.tests.test_gpr.test_gpr_correct_error_message": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.linalg.LinAlgError",
    "numpy.ones",
    "sklearn.gaussian_process.GaussianProcessRegressor",
    "sklearn.gaussian_process.kernels.DotProduct",
    "sklearn.gaussian_process.tests.test_gpr.X",
    "sklearn.gaussian_process.tests.test_gpr.y",
    "sklearn.utils.testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.gaussian_process.tests.test_gpr.test_gpr_interpolation": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "numpy.diag",
    "sklearn.gaussian_process.GaussianProcessRegressor",
    "sklearn.gaussian_process.tests.test_gpr.X",
    "sklearn.gaussian_process.tests.test_gpr.kernels",
    "sklearn.gaussian_process.tests.test_gpr.pytest",
    "sklearn.gaussian_process.tests.test_gpr.y",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.gaussian_process.tests.test_gpr.test_lml_gradient": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "scipy.optimize.approx_fprime",
    "sklearn.gaussian_process.GaussianProcessRegressor",
    "sklearn.gaussian_process.tests.test_gpr.X",
    "sklearn.gaussian_process.tests.test_gpr.kernels",
    "sklearn.gaussian_process.tests.test_gpr.pytest",
    "sklearn.gaussian_process.tests.test_gpr.y",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.gaussian_process.tests.test_gpr.test_lml_improving": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "sklearn.gaussian_process.GaussianProcessRegressor",
    "sklearn.gaussian_process.tests.test_gpr.X",
    "sklearn.gaussian_process.tests.test_gpr.non_fixed_kernels",
    "sklearn.gaussian_process.tests.test_gpr.pytest",
    "sklearn.gaussian_process.tests.test_gpr.y",
    "sklearn.utils.testing.assert_greater"
   ]
  },
  "type": "function"
 },
 "sklearn.gaussian_process.tests.test_gpr.test_lml_precomputed": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "sklearn.gaussian_process.GaussianProcessRegressor",
    "sklearn.gaussian_process.tests.test_gpr.X",
    "sklearn.gaussian_process.tests.test_gpr.kernels",
    "sklearn.gaussian_process.tests.test_gpr.pytest",
    "sklearn.gaussian_process.tests.test_gpr.y",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.gaussian_process.tests.test_gpr.test_no_fit_default_predict": {
  "data": {
   "lineno": 330,
   "symbols_in_volume": [
    "sklearn.gaussian_process.GaussianProcessRegressor",
    "sklearn.gaussian_process.kernels.ConstantKernel",
    "sklearn.gaussian_process.kernels.RBF",
    "sklearn.gaussian_process.tests.test_gpr.X",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.gaussian_process.tests.test_gpr.test_no_optimizer": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "numpy.exp",
    "sklearn.gaussian_process.GaussianProcessRegressor",
    "sklearn.gaussian_process.kernels.RBF",
    "sklearn.gaussian_process.tests.test_gpr.X",
    "sklearn.gaussian_process.tests.test_gpr.y",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.gaussian_process.tests.test_gpr.test_predict_cov_vs_std": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "numpy.diag",
    "numpy.sqrt",
    "sklearn.gaussian_process.GaussianProcessRegressor",
    "sklearn.gaussian_process.tests.test_gpr.X",
    "sklearn.gaussian_process.tests.test_gpr.X2",
    "sklearn.gaussian_process.tests.test_gpr.kernels",
    "sklearn.gaussian_process.tests.test_gpr.pytest",
    "sklearn.gaussian_process.tests.test_gpr.y",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.gaussian_process.tests.test_gpr.test_prior": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "len",
    "numpy.diag",
    "numpy.exp",
    "sklearn.gaussian_process.GaussianProcessRegressor",
    "sklearn.gaussian_process.tests.test_gpr.X",
    "sklearn.gaussian_process.tests.test_gpr.kernels",
    "sklearn.gaussian_process.tests.test_gpr.pytest",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.gaussian_process.tests.test_gpr.test_random_starts": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "numpy.finfo",
    "numpy.float32",
    "numpy.inf",
    "numpy.random.RandomState",
    "numpy.sin",
    "range",
    "sklearn.gaussian_process.GaussianProcessRegressor",
    "sklearn.gaussian_process.kernels.ConstantKernel",
    "sklearn.gaussian_process.kernels.RBF",
    "sklearn.gaussian_process.kernels.WhiteKernel",
    "sklearn.gaussian_process.tests.test_gpr.X",
    "sklearn.gaussian_process.tests.test_gpr.y",
    "sklearn.utils.testing.assert_greater"
   ]
  },
  "type": "function"
 },
 "sklearn.gaussian_process.tests.test_gpr.test_sample_statistics": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "numpy.diag",
    "numpy.mean",
    "numpy.var",
    "sklearn.gaussian_process.GaussianProcessRegressor",
    "sklearn.gaussian_process.tests.test_gpr.X",
    "sklearn.gaussian_process.tests.test_gpr.X2",
    "sklearn.gaussian_process.tests.test_gpr.kernels",
    "sklearn.gaussian_process.tests.test_gpr.pytest",
    "sklearn.gaussian_process.tests.test_gpr.y",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.gaussian_process.tests.test_gpr.test_solution_inside_bounds": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "numpy.finfo",
    "numpy.isfinite",
    "sklearn.gaussian_process.GaussianProcessRegressor",
    "sklearn.gaussian_process.tests.test_gpr.X",
    "sklearn.gaussian_process.tests.test_gpr.non_fixed_kernels",
    "sklearn.gaussian_process.tests.test_gpr.pytest",
    "sklearn.gaussian_process.tests.test_gpr.y",
    "sklearn.utils.testing.assert_array_less"
   ]
  },
  "type": "function"
 },
 "sklearn.gaussian_process.tests.test_gpr.test_y_multioutput": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "numpy.vstack",
    "sklearn.gaussian_process.GaussianProcessRegressor",
    "sklearn.gaussian_process.kernels.RBF",
    "sklearn.gaussian_process.tests.test_gpr.X",
    "sklearn.gaussian_process.tests.test_gpr.X2",
    "sklearn.gaussian_process.tests.test_gpr.kernels",
    "sklearn.gaussian_process.tests.test_gpr.y",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.gaussian_process.tests.test_gpr.test_y_normalization": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "sklearn.gaussian_process.GaussianProcessRegressor",
    "sklearn.gaussian_process.tests.test_gpr.X",
    "sklearn.gaussian_process.tests.test_gpr.X2",
    "sklearn.gaussian_process.tests.test_gpr.kernels",
    "sklearn.gaussian_process.tests.test_gpr.pytest",
    "sklearn.gaussian_process.tests.test_gpr.y",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.gaussian_process.tests.test_gpr.y": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "sklearn.gaussian_process.tests.test_kernels": {
  "data": {
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.gaussian_process.kernels.ConstantKernel",
    "sklearn.gaussian_process.kernels.DotProduct",
    "sklearn.gaussian_process.kernels.ExpSineSquared",
    "sklearn.gaussian_process.kernels.Matern",
    "sklearn.gaussian_process.kernels.PairwiseKernel",
    "sklearn.gaussian_process.kernels.RBF",
    "sklearn.gaussian_process.kernels.RationalQuadratic",
    "sklearn.gaussian_process.kernels.WhiteKernel",
    "sklearn.gaussian_process.tests.test_kernels.kernel_white",
    "sklearn.gaussian_process.tests.test_kernels.kernels",
    "sklearn.metrics.pairwise.PAIRWISE_KERNEL_FUNCTIONS"
   ]
  },
  "type": "module"
 },
 "sklearn.gaussian_process.tests.test_kernels.ConstantKernel": {
  "data": {
   "shadows": "sklearn.gaussian_process.kernels.ConstantKernel"
  },
  "type": "import"
 },
 "sklearn.gaussian_process.tests.test_kernels.DotProduct": {
  "data": {
   "shadows": "sklearn.gaussian_process.kernels.DotProduct"
  },
  "type": "import"
 },
 "sklearn.gaussian_process.tests.test_kernels.ExpSineSquared": {
  "data": {
   "shadows": "sklearn.gaussian_process.kernels.ExpSineSquared"
  },
  "type": "import"
 },
 "sklearn.gaussian_process.tests.test_kernels.Exponentiation": {
  "data": {
   "shadows": "sklearn.gaussian_process.kernels.Exponentiation"
  },
  "type": "import"
 },
 "sklearn.gaussian_process.tests.test_kernels.KernelOperator": {
  "data": {
   "shadows": "sklearn.gaussian_process.kernels.KernelOperator"
  },
  "type": "import"
 },
 "sklearn.gaussian_process.tests.test_kernels.Matern": {
  "data": {
   "shadows": "sklearn.gaussian_process.kernels.Matern"
  },
  "type": "import"
 },
 "sklearn.gaussian_process.tests.test_kernels.PAIRWISE_KERNEL_FUNCTIONS": {
  "data": {
   "shadows": "sklearn.metrics.pairwise.PAIRWISE_KERNEL_FUNCTIONS"
  },
  "type": "import"
 },
 "sklearn.gaussian_process.tests.test_kernels.PairwiseKernel": {
  "data": {
   "shadows": "sklearn.gaussian_process.kernels.PairwiseKernel"
  },
  "type": "import"
 },
 "sklearn.gaussian_process.tests.test_kernels.RBF": {
  "data": {
   "shadows": "sklearn.gaussian_process.kernels.RBF"
  },
  "type": "import"
 },
 "sklearn.gaussian_process.tests.test_kernels.RationalQuadratic": {
  "data": {
   "shadows": "sklearn.gaussian_process.kernels.RationalQuadratic"
  },
  "type": "import"
 },
 "sklearn.gaussian_process.tests.test_kernels.WhiteKernel": {
  "data": {
   "shadows": "sklearn.gaussian_process.kernels.WhiteKernel"
  },
  "type": "import"
 },
 "sklearn.gaussian_process.tests.test_kernels.X": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "sklearn.gaussian_process.tests.test_kernels.Y": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "sklearn.gaussian_process.tests.test_kernels._approx_fprime": {
  "data": {
   "shadows": "sklearn.gaussian_process.kernels._approx_fprime"
  },
  "type": "import"
 },
 "sklearn.gaussian_process.tests.test_kernels.assert_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "sklearn.gaussian_process.tests.test_kernels.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.gaussian_process.tests.test_kernels.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.gaussian_process.tests.test_kernels.assert_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.gaussian_process.tests.test_kernels.assert_not_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_not_equal"
  },
  "type": "import"
 },
 "sklearn.gaussian_process.tests.test_kernels.check_hyperparameters_equal": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "dir",
    "getattr",
    "set",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.gaussian_process.tests.test_kernels.clone": {
  "data": {
   "shadows": "sklearn.base.clone"
  },
  "type": "import"
 },
 "sklearn.gaussian_process.tests.test_kernels.euclidean_distances": {
  "data": {
   "shadows": "sklearn.metrics.pairwise.euclidean_distances"
  },
  "type": "import"
 },
 "sklearn.gaussian_process.tests.test_kernels.kernel_white": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "sklearn.gaussian_process.tests.test_kernels.kernels": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "sklearn.gaussian_process.tests.test_kernels.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.gaussian_process.tests.test_kernels.pairwise_kernels": {
  "data": {
   "shadows": "sklearn.metrics.pairwise.pairwise_kernels"
  },
  "type": "import"
 },
 "sklearn.gaussian_process.tests.test_kernels.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.gaussian_process.tests.test_kernels.signature": {
  "data": {
   "shadows": "sklearn.utils.fixes.signature"
  },
  "type": "import"
 },
 "sklearn.gaussian_process.tests.test_kernels.test_auto_vs_cross": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "kernel",
    "sklearn.gaussian_process.tests.test_kernels.X",
    "sklearn.gaussian_process.tests.test_kernels.kernel_white",
    "sklearn.gaussian_process.tests.test_kernels.kernels",
    "sklearn.gaussian_process.tests.test_kernels.pytest",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.gaussian_process.tests.test_kernels.test_kernel_anisotropic": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "kernel",
    "kernel.k2.length_scale",
    "kernel.theta",
    "numpy.array",
    "numpy.log",
    "sklearn.gaussian_process.kernels.RBF",
    "sklearn.gaussian_process.tests.test_kernels.X",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.gaussian_process.tests.test_kernels.test_kernel_clone": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "id",
    "kernel",
    "kernel.get_params",
    "sklearn.base.clone",
    "sklearn.gaussian_process.tests.test_kernels.check_hyperparameters_equal",
    "sklearn.gaussian_process.tests.test_kernels.kernels",
    "sklearn.gaussian_process.tests.test_kernels.pytest",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_not_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.gaussian_process.tests.test_kernels.test_kernel_clone_after_set_params": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "id",
    "isinstance",
    "kernel",
    "kernel.get_params",
    "numpy.iterable",
    "sklearn.base.clone",
    "sklearn.gaussian_process.kernels.ExpSineSquared",
    "sklearn.gaussian_process.kernels.RationalQuadratic",
    "sklearn.gaussian_process.tests.test_kernels.check_hyperparameters_equal",
    "sklearn.gaussian_process.tests.test_kernels.kernels",
    "sklearn.gaussian_process.tests.test_kernels.pytest",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_not_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.gaussian_process.tests.test_kernels.test_kernel_diag": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "kernel",
    "kernel.diag",
    "numpy.diag",
    "sklearn.gaussian_process.tests.test_kernels.X",
    "sklearn.gaussian_process.tests.test_kernels.kernels",
    "sklearn.gaussian_process.tests.test_kernels.pytest",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.gaussian_process.tests.test_kernels.test_kernel_gradient": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "kernel",
    "kernel.theta",
    "kernel.theta.shape",
    "sklearn.gaussian_process.kernels._approx_fprime",
    "sklearn.gaussian_process.tests.test_kernels.X",
    "sklearn.gaussian_process.tests.test_kernels.kernels",
    "sklearn.gaussian_process.tests.test_kernels.pytest",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.gaussian_process.tests.test_kernels.test_kernel_gradient.eval_kernel_for_theta": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "kernel.clone_with_theta",
    "kernel_clone",
    "sklearn.gaussian_process.tests.test_kernels.X"
   ]
  },
  "type": "function"
 },
 "sklearn.gaussian_process.tests.test_kernels.test_kernel_operator_commutative": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "sklearn.gaussian_process.kernels.RBF",
    "sklearn.gaussian_process.tests.test_kernels.X",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.gaussian_process.tests.test_kernels.test_kernel_stationary": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "kernel",
    "kernel.is_stationary",
    "numpy.diag",
    "sklearn.gaussian_process.tests.test_kernels.X",
    "sklearn.gaussian_process.tests.test_kernels.kernels",
    "sklearn.gaussian_process.tests.test_kernels.pytest",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.gaussian_process.tests.test_kernels.test_kernel_theta": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "enumerate",
    "filter",
    "getattr",
    "isinstance",
    "kernel",
    "kernel.__class__",
    "kernel.__class__.__init__",
    "kernel.get_params",
    "kernel.hyperparameters",
    "kernel.theta",
    "kernel_class",
    "len",
    "map",
    "new_kernel",
    "new_kernel.theta",
    "new_kernel.theta.shape",
    "numpy.log",
    "set",
    "setattr",
    "sklearn.gaussian_process.kernels.Exponentiation",
    "sklearn.gaussian_process.kernels.KernelOperator",
    "sklearn.gaussian_process.tests.test_kernels.X",
    "sklearn.gaussian_process.tests.test_kernels.kernels",
    "sklearn.gaussian_process.tests.test_kernels.pytest",
    "sklearn.utils.fixes.signature",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.gaussian_process.tests.test_kernels.test_kernel_versus_pairwise": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "kernel",
    "sklearn.gaussian_process.tests.test_kernels.X",
    "sklearn.gaussian_process.tests.test_kernels.Y",
    "sklearn.gaussian_process.tests.test_kernels.kernel_white",
    "sklearn.gaussian_process.tests.test_kernels.kernels",
    "sklearn.gaussian_process.tests.test_kernels.pytest",
    "sklearn.metrics.pairwise.pairwise_kernels",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.gaussian_process.tests.test_kernels.test_matern_kernel": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "numpy.diag",
    "numpy.exp",
    "numpy.ones",
    "sklearn.gaussian_process.kernels.Matern",
    "sklearn.gaussian_process.tests.test_kernels.X",
    "sklearn.metrics.pairwise.euclidean_distances",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.gaussian_process.tests.test_kernels.test_repr_kernels": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "kernel",
    "repr",
    "sklearn.gaussian_process.tests.test_kernels.kernels",
    "sklearn.gaussian_process.tests.test_kernels.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.gaussian_process.tests.test_kernels.test_set_get_params": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "isinstance",
    "kernel.get_params",
    "kernel.hyperparameters",
    "kernel.set_params",
    "kernel.theta",
    "numpy.exp",
    "sklearn.gaussian_process.tests.test_kernels.kernels",
    "sklearn.gaussian_process.tests.test_kernels.pytest",
    "sklearn.utils.testing.assert_almost_equal",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.impute": {
  "data": {},
  "type": "module"
 },
 "sklearn.impute.MissingIndicator": {
  "data": {
   "lineno": 412
  },
  "type": "class"
 },
 "sklearn.impute.MissingIndicator.__init__": {
  "data": {
   "lineno": 471,
   "symbols_in_volume": [
    "numpy.nan",
    "scipy.sparse"
   ]
  },
  "type": "function"
 },
 "sklearn.impute.MissingIndicator._get_missing_features_info": {
  "data": {
   "lineno": 478,
   "symbols_in_volume": [
    "bool",
    "numpy.diff",
    "numpy.flatnonzero",
    "numpy.unique",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.issparse",
    "sklearn.impute._get_mask",
    "sparse_constructor"
   ]
  },
  "type": "function"
 },
 "sklearn.impute.MissingIndicator.fit": {
  "data": {
   "lineno": 533,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "check_array",
    "is_scalar_nan",
    "isinstance",
    "numpy.arange",
    "sklearn.impute._check_inputs_dtype"
   ]
  },
  "type": "function"
 },
 "sklearn.impute.MissingIndicator.fit_transform": {
  "data": {
   "lineno": 616
  },
  "type": "function"
 },
 "sklearn.impute.MissingIndicator.transform": {
  "data": {
   "lineno": 572,
   "symbols_in_volume": [
    "ValueError",
    "check_array",
    "check_is_fitted",
    "is_scalar_nan",
    "numpy.setdiff1d",
    "sklearn.impute._check_inputs_dtype"
   ]
  },
  "type": "function"
 },
 "sklearn.impute.SimpleImputer": {
  "data": {
   "lineno": 93
  },
  "type": "class"
 },
 "sklearn.impute.SimpleImputer.__init__": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "sklearn.impute.SimpleImputer._dense_fit": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "enumerate",
    "numpy.bool",
    "numpy.empty",
    "numpy.full",
    "numpy.logical_not",
    "numpy.ma.getdata",
    "numpy.ma.getmask",
    "numpy.ma.getmaskarray",
    "numpy.ma.masked_array",
    "numpy.ma.mean",
    "numpy.ma.median",
    "numpy.nan",
    "object",
    "sklearn.impute._get_mask",
    "sklearn.impute._most_frequent",
    "sklearn.impute.zip"
   ]
  },
  "type": "function"
 },
 "sklearn.impute.SimpleImputer._sparse_fit": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "_get_median",
    "numpy.diff",
    "numpy.empty",
    "numpy.nan",
    "range",
    "sklearn.impute._get_mask",
    "sklearn.impute._most_frequent"
   ]
  },
  "type": "function"
 },
 "sklearn.impute.SimpleImputer._validate_input": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "ValueError",
    "check_array",
    "is_scalar_nan",
    "sklearn.impute._check_inputs_dtype",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.impute.SimpleImputer.fit": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "scipy.sparse.issparse",
    "sklearn.impute.numbers"
   ]
  },
  "type": "function"
 },
 "sklearn.impute.SimpleImputer.transform": {
  "data": {
   "lineno": 353,
   "symbols_in_volume": [
    "ValueError",
    "check_is_fitted",
    "len",
    "numpy.arange",
    "numpy.diff",
    "numpy.flatnonzero",
    "numpy.int",
    "numpy.logical_not",
    "numpy.nan",
    "numpy.repeat",
    "numpy.sum",
    "numpy.where",
    "scipy.sparse.issparse",
    "sklearn.impute._get_mask",
    "sklearn.impute.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.impute.__all__": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "sklearn.impute._check_inputs_dtype": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "sklearn.impute.numbers",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.impute._get_mask": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "_object_dtype_isnan",
    "bool",
    "is_scalar_nan",
    "numpy.equal",
    "numpy.isnan",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "sklearn.impute._most_frequent": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "RuntimeWarning",
    "numpy.nan",
    "scipy.stats.mode",
    "sklearn.impute.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.impute.ma": {
  "data": {
   "shadows": "numpy.ma"
  },
  "type": "import"
 },
 "sklearn.impute.map": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "sklearn.impute.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.impute.numbers": {
  "data": {
   "shadows": "numbers"
  },
  "type": "import"
 },
 "sklearn.impute.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.impute.stats": {
  "data": {
   "shadows": "scipy.stats"
  },
  "type": "import"
 },
 "sklearn.impute.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.impute.zip": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "sklearn.isotonic": {
  "data": {},
  "type": "module"
 },
 "sklearn.isotonic.IsotonicRegression": {
  "data": {
   "lineno": 139
  },
  "type": "class"
 },
 "sklearn.isotonic.IsotonicRegression.__getstate__": {
  "data": {
   "lineno": 377,
   "symbols_in_volume": [
    "sklearn.isotonic.IsotonicRegression",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.isotonic.IsotonicRegression.__init__": {
  "data": {
   "lineno": 212
  },
  "type": "function"
 },
 "sklearn.isotonic.IsotonicRegression.__setstate__": {
  "data": {
   "lineno": 384,
   "symbols_in_volume": [
    "hasattr",
    "sklearn.isotonic.IsotonicRegression",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.isotonic.IsotonicRegression._build_f": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "scipy.interpolate.interp1d"
   ]
  },
  "type": "function"
 },
 "sklearn.isotonic.IsotonicRegression._build_y": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "_make_unique",
    "as_float_array",
    "bool",
    "check_array",
    "check_consistent_length",
    "len",
    "numpy.float64",
    "numpy.lexsort",
    "numpy.logical_or",
    "numpy.max",
    "numpy.min",
    "numpy.not_equal",
    "numpy.ones",
    "sklearn.isotonic.check_increasing",
    "sklearn.isotonic.isotonic_regression"
   ]
  },
  "type": "function"
 },
 "sklearn.isotonic.IsotonicRegression._check_fit_data": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "ValueError",
    "len"
   ]
  },
  "type": "function"
 },
 "sklearn.isotonic.IsotonicRegression.fit": {
  "data": {
   "lineno": 296
  },
  "type": "function"
 },
 "sklearn.isotonic.IsotonicRegression.predict": {
  "data": {
   "lineno": 362
  },
  "type": "function"
 },
 "sklearn.isotonic.IsotonicRegression.transform": {
  "data": {
   "lineno": 335,
   "symbols_in_volume": [
    "ValueError",
    "as_float_array",
    "len",
    "numpy.clip"
   ]
  },
  "type": "function"
 },
 "sklearn.isotonic.__all__": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "sklearn.isotonic.check_increasing": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "len",
    "numpy.sign",
    "scipy.stats.spearmanr",
    "sklearn.isotonic.math",
    "sklearn.isotonic.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.isotonic.interpolate": {
  "data": {
   "shadows": "scipy.interpolate"
  },
  "type": "import"
 },
 "sklearn.isotonic.isotonic_regression": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "_inplace_contiguous_isotonic_regression",
    "len",
    "numpy.array",
    "numpy.clip",
    "numpy.float64",
    "numpy.inf",
    "numpy.ones",
    "numpy.s_"
   ]
  },
  "type": "function"
 },
 "sklearn.isotonic.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "sklearn.isotonic.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.isotonic.spearmanr": {
  "data": {
   "shadows": "scipy.stats.spearmanr"
  },
  "type": "import"
 },
 "sklearn.isotonic.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.kernel_approximation": {
  "data": {},
  "type": "module"
 },
 "sklearn.kernel_approximation.AdditiveChi2Sampler": {
  "data": {
   "lineno": 253
  },
  "type": "class"
 },
 "sklearn.kernel_approximation.AdditiveChi2Sampler.__init__": {
  "data": {
   "lineno": 319
  },
  "type": "function"
 },
 "sklearn.kernel_approximation.AdditiveChi2Sampler._transform_dense": {
  "data": {
   "lineno": 384,
   "symbols_in_volume": [
    "numpy.cos",
    "numpy.cosh",
    "numpy.hstack",
    "numpy.log",
    "numpy.pi",
    "numpy.sin",
    "numpy.sqrt",
    "numpy.zeros_like",
    "range"
   ]
  },
  "type": "function"
 },
 "sklearn.kernel_approximation.AdditiveChi2Sampler._transform_sparse": {
  "data": {
   "lineno": 410,
   "symbols_in_volume": [
    "numpy.cos",
    "numpy.cosh",
    "numpy.log",
    "numpy.pi",
    "numpy.sin",
    "numpy.sqrt",
    "range",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.hstack"
   ]
  },
  "type": "function"
 },
 "sklearn.kernel_approximation.AdditiveChi2Sampler.fit": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": [
    "ValueError",
    "check_array"
   ]
  },
  "type": "function"
 },
 "sklearn.kernel_approximation.AdditiveChi2Sampler.transform": {
  "data": {
   "lineno": 353,
   "symbols_in_volume": [
    "ValueError",
    "check_array",
    "check_is_fitted",
    "scipy.sparse.issparse",
    "transf"
   ]
  },
  "type": "function"
 },
 "sklearn.kernel_approximation.Nystroem": {
  "data": {
   "lineno": 439
  },
  "type": "class"
 },
 "sklearn.kernel_approximation.Nystroem.__init__": {
  "data": {
   "lineno": 532
  },
  "type": "function"
 },
 "sklearn.kernel_approximation.Nystroem._get_kernel_params": {
  "data": {
   "lineno": 610,
   "symbols_in_volume": [
    "DeprecationWarning",
    "callable",
    "getattr",
    "sklearn.kernel_approximation.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.kernel_approximation.Nystroem.fit": {
  "data": {
   "lineno": 542,
   "symbols_in_volume": [
    "check_array",
    "check_random_state",
    "min",
    "numpy.dot",
    "numpy.maximum",
    "numpy.sqrt",
    "pairwise_kernels",
    "scipy.linalg.svd",
    "sklearn.kernel_approximation.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.kernel_approximation.Nystroem.transform": {
  "data": {
   "lineno": 584,
   "symbols_in_volume": [
    "check_array",
    "check_is_fitted",
    "numpy.dot",
    "pairwise_kernels"
   ]
  },
  "type": "function"
 },
 "sklearn.kernel_approximation.RBFSampler": {
  "data": {
   "lineno": 24
  },
  "type": "class"
 },
 "sklearn.kernel_approximation.RBFSampler.__init__": {
  "data": {
   "lineno": 78
  },
  "type": "function"
 },
 "sklearn.kernel_approximation.RBFSampler.fit": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "check_array",
    "check_random_state",
    "numpy.pi",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "sklearn.kernel_approximation.RBFSampler.transform": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "check_array",
    "check_is_fitted",
    "numpy.cos",
    "numpy.sqrt",
    "safe_sparse_dot"
   ]
  },
  "type": "function"
 },
 "sklearn.kernel_approximation.SkewedChi2Sampler": {
  "data": {
   "lineno": 134
  },
  "type": "class"
 },
 "sklearn.kernel_approximation.SkewedChi2Sampler.__init__": {
  "data": {
   "lineno": 189
  },
  "type": "function"
 },
 "sklearn.kernel_approximation.SkewedChi2Sampler.fit": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "check_array",
    "check_random_state",
    "numpy.log",
    "numpy.pi",
    "numpy.tan"
   ]
  },
  "type": "function"
 },
 "sklearn.kernel_approximation.SkewedChi2Sampler.transform": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "ValueError",
    "as_float_array",
    "check_array",
    "check_is_fitted",
    "numpy.cos",
    "numpy.log",
    "numpy.sqrt",
    "safe_sparse_dot"
   ]
  },
  "type": "function"
 },
 "sklearn.kernel_approximation.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.kernel_approximation.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.kernel_approximation.svd": {
  "data": {
   "shadows": "scipy.linalg.svd"
  },
  "type": "import"
 },
 "sklearn.kernel_approximation.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.kernel_ridge": {
  "data": {},
  "type": "module"
 },
 "sklearn.kernel_ridge.KernelRidge": {
  "data": {
   "lineno": 16
  },
  "type": "class"
 },
 "sklearn.kernel_ridge.KernelRidge.__init__": {
  "data": {
   "lineno": 108
  },
  "type": "function"
 },
 "sklearn.kernel_ridge.KernelRidge._get_kernel": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "callable",
    "pairwise_kernels"
   ]
  },
  "type": "function"
 },
 "sklearn.kernel_ridge.KernelRidge._pairwise": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.kernel_ridge.KernelRidge.fit": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "_solve_cholesky_kernel",
    "check_X_y",
    "check_array",
    "float",
    "isinstance",
    "len",
    "numpy.atleast_1d"
   ]
  },
  "type": "function"
 },
 "sklearn.kernel_ridge.KernelRidge.predict": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "check_is_fitted",
    "numpy.dot"
   ]
  },
  "type": "function"
 },
 "sklearn.kernel_ridge.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.linear_model": {
  "data": {},
  "type": "module"
 },
 "sklearn.linear_model.__all__": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "sklearn.linear_model.base": {
  "data": {},
  "type": "module"
 },
 "sklearn.linear_model.base.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "sklearn.linear_model.base.LinearClassifierMixin": {
  "data": {
   "lineno": 229
  },
  "type": "class"
 },
 "sklearn.linear_model.base.LinearClassifierMixin._predict_proba_lr": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "numpy.exp",
    "numpy.reciprocal",
    "numpy.vstack"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.base.LinearClassifierMixin.decision_function": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "NotFittedError",
    "ValueError",
    "check_array",
    "hasattr",
    "safe_sparse_dot",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.base.LinearClassifierMixin.predict": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "len",
    "numpy.int"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.base.LinearModel": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "abc.ABCMeta",
    "sklearn.linear_model.base._preprocess_data",
    "staticmethod"
   ]
  },
  "type": "class"
 },
 "sklearn.linear_model.base.LinearModel._decision_function": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "check_array",
    "check_is_fitted",
    "safe_sparse_dot"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.base.LinearModel._set_intercept": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "numpy.dot"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.base.LinearModel.fit": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.base.LinearModel.predict": {
  "data": {
   "lineno": 200
  },
  "type": "function"
 },
 "sklearn.linear_model.base.LinearRegression": {
  "data": {
   "lineno": 362,
   "symbols_in_volume": [
    "sklearn.linear_model.base.LinearModel"
   ]
  },
  "type": "class"
 },
 "sklearn.linear_model.base.LinearRegression.__init__": {
  "data": {
   "lineno": 426
  },
  "type": "function"
 },
 "sklearn.linear_model.base.LinearRegression.fit": {
  "data": {
   "lineno": 433,
   "symbols_in_volume": [
    "Parallel",
    "ValueError",
    "check_X_y",
    "delayed",
    "numpy.atleast_1d",
    "numpy.ravel",
    "numpy.vstack",
    "range",
    "scipy.linalg.lstsq",
    "scipy.sparse.issparse",
    "sklearn.linear_model.base._rescale_data",
    "sparse_lsqr"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.base.SPARSE_INTERCEPT_DECAY": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "sklearn.linear_model.base.SparseCoefMixin": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "sklearn.linear_model.base.SparseCoefMixin.densify": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": [
    "check_is_fitted",
    "scipy.sparse.issparse"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.base.SparseCoefMixin.sparsify": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": [
    "check_is_fitted",
    "scipy.sparse.csr_matrix"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.base._pre_fit": {
  "data": {
   "lineno": 494,
   "symbols_in_volume": [
    "UserWarning",
    "hasattr",
    "isinstance",
    "numpy.allclose",
    "numpy.dot",
    "numpy.empty",
    "numpy.find_common_type",
    "numpy.ones",
    "numpy.zeros",
    "scipy.sparse.isspmatrix",
    "sklearn.linear_model.base._preprocess_data",
    "sklearn.linear_model.base.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.base._preprocess_data": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "check_array",
    "inplace_column_scale",
    "isinstance",
    "mean_variance_axis",
    "numpy.asarray",
    "numpy.average",
    "numpy.ones",
    "numpy.sqrt",
    "numpy.zeros",
    "scipy.sparse.issparse",
    "sklearn.linear_model.base.numbers"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.base._rescale_data": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.full",
    "numpy.sqrt",
    "safe_sparse_dot",
    "scipy.sparse.dia_matrix"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.base.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "sklearn.linear_model.base.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sklearn.linear_model.base.f_normalize": {
  "data": {
   "shadows": "normalize"
  },
  "type": "import"
 },
 "sklearn.linear_model.base.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "sklearn.linear_model.base.make_dataset": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "ArrayDataset",
    "CSRDataset",
    "check_random_state",
    "numpy.iinfo",
    "numpy.int32",
    "scipy.sparse.issparse",
    "sklearn.linear_model.base.SPARSE_INTERCEPT_DECAY"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.base.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.linear_model.base.numbers": {
  "data": {
   "shadows": "numbers"
  },
  "type": "import"
 },
 "sklearn.linear_model.base.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.linear_model.base.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.linear_model.base.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.linear_model.bayes": {
  "data": {},
  "type": "module"
 },
 "sklearn.linear_model.bayes.ARDRegression": {
  "data": {
   "lineno": 298
  },
  "type": "class"
 },
 "sklearn.linear_model.bayes.ARDRegression.__init__": {
  "data": {
   "lineno": 410
  },
  "type": "function"
 },
 "sklearn.linear_model.bayes.ARDRegression.fit": {
  "data": {
   "lineno": 427,
   "symbols_in_volume": [
    "bool",
    "check_X_y",
    "fast_logdet",
    "list",
    "math.log",
    "numpy.abs",
    "numpy.copy",
    "numpy.diag",
    "numpy.dot",
    "numpy.finfo",
    "numpy.float64",
    "numpy.log",
    "numpy.ones",
    "numpy.sum",
    "numpy.var",
    "numpy.zeros",
    "print",
    "range",
    "update_coeff",
    "update_sigma"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.bayes.ARDRegression.fit.update_coeff": {
  "data": {
   "lineno": 486,
   "symbols_in_volume": [
    "numpy.dot"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.bayes.ARDRegression.fit.update_sigma": {
  "data": {
   "lineno": 474,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.eye",
    "numpy.reshape",
    "scipy.linalg.pinvh"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.bayes.ARDRegression.predict": {
  "data": {
   "lineno": 536,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.bayes.BayesianRidge": {
  "data": {
   "lineno": 23
  },
  "type": "class"
 },
 "sklearn.linear_model.bayes.BayesianRidge.__init__": {
  "data": {
   "lineno": 127
  },
  "type": "function"
 },
 "sklearn.linear_model.bayes.BayesianRidge.fit": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "_rescale_data",
    "check_X_y",
    "list",
    "math.log",
    "numpy.abs",
    "numpy.array",
    "numpy.copy",
    "numpy.dot",
    "numpy.finfo",
    "numpy.float64",
    "numpy.full",
    "numpy.log",
    "numpy.newaxis",
    "numpy.pi",
    "numpy.sum",
    "numpy.var",
    "print",
    "range",
    "scipy.linalg.svd",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.bayes.BayesianRidge.predict": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.bayes.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "sklearn.linear_model.bayes.log": {
  "data": {
   "shadows": "math.log"
  },
  "type": "import"
 },
 "sklearn.linear_model.bayes.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.linear_model.bayes.pinvh": {
  "data": {
   "shadows": "scipy.linalg.pinvh"
  },
  "type": "import"
 },
 "sklearn.linear_model.bayes.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "sklearn.linear_model.coordinate_descent": {
  "data": {},
  "type": "module"
 },
 "sklearn.linear_model.coordinate_descent.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "sklearn.linear_model.coordinate_descent.ElasticNet": {
  "data": {
   "lineno": 510,
   "symbols_in_volume": [
    "sklearn.linear_model.coordinate_descent.enet_path",
    "staticmethod"
   ]
  },
  "type": "class"
 },
 "sklearn.linear_model.coordinate_descent.ElasticNet.__init__": {
  "data": {
   "lineno": 652
  },
  "type": "function"
 },
 "sklearn.linear_model.coordinate_descent.ElasticNet._decision_function": {
  "data": {
   "lineno": 787,
   "symbols_in_volume": [
    "check_is_fitted",
    "safe_sparse_dot",
    "scipy.sparse.isspmatrix",
    "sklearn.linear_model.coordinate_descent.ElasticNet",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.coordinate_descent.ElasticNet.fit": {
  "data": {
   "lineno": 669,
   "symbols_in_volume": [
    "ValueError",
    "_pre_fit",
    "check_X_y",
    "check_array",
    "hasattr",
    "isinstance",
    "numpy.asarray",
    "numpy.float32",
    "numpy.float64",
    "numpy.newaxis",
    "numpy.zeros",
    "sklearn.linear_model.coordinate_descent.warnings",
    "xrange"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.coordinate_descent.ElasticNet.sparse_coef_": {
  "data": {
   "lineno": 782,
   "symbols_in_volume": [
    "property",
    "scipy.sparse.csr_matrix"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.coordinate_descent.ElasticNetCV": {
  "data": {
   "lineno": 1413,
   "symbols_in_volume": [
    "path",
    "sklearn.linear_model.coordinate_descent.LinearModelCV",
    "sklearn.linear_model.coordinate_descent.enet_path",
    "staticmethod"
   ]
  },
  "type": "class"
 },
 "sklearn.linear_model.coordinate_descent.ElasticNetCV.__init__": {
  "data": {
   "lineno": 1599
  },
  "type": "function"
 },
 "sklearn.linear_model.coordinate_descent.Lasso": {
  "data": {
   "lineno": 810,
   "symbols_in_volume": [
    "sklearn.linear_model.coordinate_descent.ElasticNet",
    "sklearn.linear_model.coordinate_descent.enet_path",
    "staticmethod"
   ]
  },
  "type": "class"
 },
 "sklearn.linear_model.coordinate_descent.Lasso.__init__": {
  "data": {
   "lineno": 931,
   "symbols_in_volume": [
    "sklearn.linear_model.coordinate_descent.Lasso",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.coordinate_descent.LassoCV": {
  "data": {
   "lineno": 1248,
   "symbols_in_volume": [
    "path",
    "sklearn.linear_model.coordinate_descent.LinearModelCV",
    "sklearn.linear_model.coordinate_descent.lasso_path",
    "staticmethod"
   ]
  },
  "type": "class"
 },
 "sklearn.linear_model.coordinate_descent.LassoCV.__init__": {
  "data": {
   "lineno": 1401,
   "symbols_in_volume": [
    "sklearn.linear_model.coordinate_descent.LassoCV",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.coordinate_descent.LinearModelCV": {
  "data": {
   "lineno": 1051,
   "symbols_in_volume": [
    "abc.ABCMeta"
   ]
  },
  "type": "class"
 },
 "sklearn.linear_model.coordinate_descent.LinearModelCV.__init__": {
  "data": {
   "lineno": 1054,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.coordinate_descent.LinearModelCV.fit": {
  "data": {
   "lineno": 1075,
   "symbols_in_volume": [
    "Parallel",
    "TypeError",
    "ValueError",
    "check_array",
    "check_cv",
    "column_or_1d",
    "delayed",
    "dict",
    "effective_n_jobs",
    "hasattr",
    "isinstance",
    "len",
    "list",
    "numpy.argmin",
    "numpy.asarray",
    "numpy.atleast_1d",
    "numpy.float32",
    "numpy.float64",
    "numpy.inf",
    "numpy.may_share_memory",
    "numpy.mean",
    "numpy.ndarray",
    "numpy.reshape",
    "numpy.rollaxis",
    "numpy.sort",
    "numpy.squeeze",
    "numpy.tile",
    "scipy.sparse.isspmatrix",
    "sklearn.linear_model.coordinate_descent.ElasticNet",
    "sklearn.linear_model.coordinate_descent.Lasso",
    "sklearn.linear_model.coordinate_descent.MultiTaskElasticNet",
    "sklearn.linear_model.coordinate_descent.MultiTaskLasso",
    "sklearn.linear_model.coordinate_descent._alpha_grid",
    "sklearn.linear_model.coordinate_descent._path_residuals",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.coordinate_descent.MultiTaskElasticNet": {
  "data": {
   "lineno": 1626,
   "symbols_in_volume": [
    "sklearn.linear_model.coordinate_descent.Lasso"
   ]
  },
  "type": "class"
 },
 "sklearn.linear_model.coordinate_descent.MultiTaskElasticNet.__init__": {
  "data": {
   "lineno": 1741
  },
  "type": "function"
 },
 "sklearn.linear_model.coordinate_descent.MultiTaskElasticNet.fit": {
  "data": {
   "lineno": 1755,
   "symbols_in_volume": [
    "ValueError",
    "_preprocess_data",
    "check_array",
    "check_random_state",
    "hasattr",
    "numpy.asfortranarray",
    "numpy.float32",
    "numpy.float64",
    "numpy.zeros",
    "sklearn.linear_model.coordinate_descent.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.coordinate_descent.MultiTaskElasticNetCV": {
  "data": {
   "lineno": 1944,
   "symbols_in_volume": [
    "path",
    "sklearn.linear_model.coordinate_descent.LinearModelCV",
    "sklearn.linear_model.coordinate_descent.enet_path",
    "staticmethod"
   ]
  },
  "type": "class"
 },
 "sklearn.linear_model.coordinate_descent.MultiTaskElasticNetCV.__init__": {
  "data": {
   "lineno": 2111
  },
  "type": "function"
 },
 "sklearn.linear_model.coordinate_descent.MultiTaskLasso": {
  "data": {
   "lineno": 1825,
   "symbols_in_volume": [
    "sklearn.linear_model.coordinate_descent.MultiTaskElasticNet"
   ]
  },
  "type": "class"
 },
 "sklearn.linear_model.coordinate_descent.MultiTaskLasso.__init__": {
  "data": {
   "lineno": 1929
  },
  "type": "function"
 },
 "sklearn.linear_model.coordinate_descent.MultiTaskLassoCV": {
  "data": {
   "lineno": 2132,
   "symbols_in_volume": [
    "path",
    "sklearn.linear_model.coordinate_descent.LinearModelCV",
    "sklearn.linear_model.coordinate_descent.lasso_path",
    "staticmethod"
   ]
  },
  "type": "class"
 },
 "sklearn.linear_model.coordinate_descent.MultiTaskLassoCV.__init__": {
  "data": {
   "lineno": 2277,
   "symbols_in_volume": [
    "sklearn.linear_model.coordinate_descent.MultiTaskLassoCV",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.coordinate_descent._alpha_grid": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "ValueError",
    "_preprocess_data",
    "check_array",
    "float",
    "len",
    "numpy.empty",
    "numpy.finfo",
    "numpy.log10",
    "numpy.logspace",
    "numpy.newaxis",
    "numpy.sqrt",
    "numpy.sum",
    "safe_sparse_dot",
    "scipy.sparse.isspmatrix"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.coordinate_descent._path_residuals": {
  "data": {
   "lineno": 946,
   "symbols_in_volume": [
    "_pre_fit",
    "check_array",
    "numpy.atleast_1d",
    "numpy.dot",
    "numpy.flatnonzero",
    "numpy.newaxis",
    "numpy.reshape",
    "numpy.rollaxis",
    "path",
    "safe_sparse_dot",
    "scipy.sparse.issparse"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.coordinate_descent.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "sklearn.linear_model.coordinate_descent.enet_path": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "ValueError",
    "_pre_fit",
    "check_array",
    "check_random_state",
    "enumerate",
    "isinstance",
    "len",
    "numpy.asarray",
    "numpy.asfortranarray",
    "numpy.empty",
    "numpy.float32",
    "numpy.float64",
    "numpy.ndarray",
    "numpy.sort",
    "numpy.zeros",
    "print",
    "scipy.sparse.isspmatrix",
    "sklearn.linear_model.coordinate_descent._alpha_grid",
    "sklearn.linear_model.coordinate_descent.sys",
    "sklearn.linear_model.coordinate_descent.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.coordinate_descent.lasso_path": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "sklearn.linear_model.coordinate_descent.enet_path"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.coordinate_descent.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.linear_model.coordinate_descent.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.linear_model.coordinate_descent.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "sklearn.linear_model.coordinate_descent.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.linear_model.huber": {
  "data": {},
  "type": "module"
 },
 "sklearn.linear_model.huber.HuberRegressor": {
  "data": {
   "lineno": 125
  },
  "type": "class"
 },
 "sklearn.linear_model.huber.HuberRegressor.__init__": {
  "data": {
   "lineno": 226
  },
  "type": "function"
 },
 "sklearn.linear_model.huber.HuberRegressor.fit": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "ValueError",
    "check_X_y",
    "check_consistent_length",
    "hasattr",
    "min",
    "numpy.abs",
    "numpy.array",
    "numpy.concatenate",
    "numpy.finfo",
    "numpy.float64",
    "numpy.inf",
    "numpy.ones_like",
    "numpy.tile",
    "numpy.zeros",
    "safe_sparse_dot",
    "scipy.optimize.fmin_l_bfgs_b",
    "sklearn.linear_model.huber._huber_loss_and_gradient"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.huber._huber_loss_and_gradient": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "axis0_safe_slice",
    "numpy.abs",
    "numpy.count_nonzero",
    "numpy.dot",
    "numpy.ones_like",
    "numpy.sum",
    "numpy.zeros",
    "safe_sparse_dot",
    "scipy.sparse.issparse"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.huber.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.linear_model.huber.optimize": {
  "data": {
   "shadows": "scipy.optimize"
  },
  "type": "import"
 },
 "sklearn.linear_model.huber.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.linear_model.least_angle": {
  "data": {},
  "type": "module"
 },
 "sklearn.linear_model.least_angle.Lars": {
  "data": {
   "lineno": 495
  },
  "type": "class"
 },
 "sklearn.linear_model.least_angle.Lars.__init__": {
  "data": {
   "lineno": 595,
   "symbols_in_volume": [
    "numpy.finfo",
    "numpy.float"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.least_angle.Lars._fit": {
  "data": {
   "lineno": 619,
   "symbols_in_volume": [
    "max",
    "numpy.empty",
    "numpy.newaxis",
    "sklearn.linear_model.least_angle.lars_path",
    "xrange"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.least_angle.Lars._get_gram": {
  "data": {
   "lineno": 609,
   "symbols_in_volume": [
    "hasattr",
    "numpy.dot",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.least_angle.Lars.fit": {
  "data": {
   "lineno": 677,
   "symbols_in_volume": [
    "check_X_y",
    "getattr",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.least_angle.LarsCV": {
  "data": {
   "lineno": 972,
   "symbols_in_volume": [
    "sklearn.linear_model.least_angle.Lars"
   ]
  },
  "type": "class"
 },
 "sklearn.linear_model.least_angle.LarsCV.__init__": {
  "data": {
   "lineno": 1093,
   "symbols_in_volume": [
    "numpy.finfo",
    "numpy.float",
    "sklearn.linear_model.least_angle.LarsCV",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.least_angle.LarsCV.alpha": {
  "data": {
   "lineno": 1188,
   "symbols_in_volume": [
    "deprecated",
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.least_angle.LarsCV.fit": {
  "data": {
   "lineno": 1108,
   "symbols_in_volume": [
    "Parallel",
    "as_float_array",
    "check_X_y",
    "check_cv",
    "delayed",
    "enumerate",
    "float",
    "hasattr",
    "int",
    "len",
    "list",
    "max",
    "numpy.all",
    "numpy.argmin",
    "numpy.concatenate",
    "numpy.empty",
    "numpy.isfinite",
    "numpy.mean",
    "numpy.newaxis",
    "numpy.r_",
    "numpy.unique",
    "scipy.interpolate.interp1d",
    "sklearn.linear_model.least_angle._lars_path_residues",
    "sklearn.linear_model.least_angle.warnings",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.least_angle.LassoLars": {
  "data": {
   "lineno": 713,
   "symbols_in_volume": [
    "sklearn.linear_model.least_angle.Lars"
   ]
  },
  "type": "class"
 },
 "sklearn.linear_model.least_angle.LassoLars.__init__": {
  "data": {
   "lineno": 834,
   "symbols_in_volume": [
    "numpy.finfo",
    "numpy.float"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.least_angle.LassoLarsCV": {
  "data": {
   "lineno": 1196,
   "symbols_in_volume": [
    "sklearn.linear_model.least_angle.LarsCV"
   ]
  },
  "type": "class"
 },
 "sklearn.linear_model.least_angle.LassoLarsCV.__init__": {
  "data": {
   "lineno": 1338,
   "symbols_in_volume": [
    "numpy.finfo",
    "numpy.float"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.least_angle.LassoLarsIC": {
  "data": {
   "lineno": 1357,
   "symbols_in_volume": [
    "sklearn.linear_model.least_angle.LassoLars"
   ]
  },
  "type": "class"
 },
 "sklearn.linear_model.least_angle.LassoLarsIC.__init__": {
  "data": {
   "lineno": 1474,
   "symbols_in_volume": [
    "numpy.finfo",
    "numpy.float"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.least_angle.LassoLarsIC.fit": {
  "data": {
   "lineno": 1488,
   "symbols_in_volume": [
    "ValueError",
    "check_X_y",
    "enumerate",
    "math.log",
    "numpy.abs",
    "numpy.any",
    "numpy.argmin",
    "numpy.dot",
    "numpy.finfo",
    "numpy.int",
    "numpy.mean",
    "numpy.newaxis",
    "numpy.sum",
    "numpy.var",
    "numpy.zeros",
    "sklearn.linear_model.least_angle.lars_path"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.least_angle._check_copy_and_writeable": {
  "data": {
   "lineno": 853
  },
  "type": "function"
 },
 "sklearn.linear_model.least_angle._lars_path_residues": {
  "data": {
   "lineno": 859,
   "symbols_in_volume": [
    "as_float_array",
    "max",
    "numpy.dot",
    "numpy.finfo",
    "numpy.flatnonzero",
    "numpy.float",
    "numpy.newaxis",
    "numpy.sqrt",
    "numpy.sum",
    "sklearn.linear_model.least_angle._check_copy_and_writeable",
    "sklearn.linear_model.least_angle.lars_path"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.least_angle.get_lapack_funcs": {
  "data": {
   "shadows": "scipy.linalg.lapack.get_lapack_funcs"
  },
  "type": "import"
 },
 "sklearn.linear_model.least_angle.interpolate": {
  "data": {
   "shadows": "scipy.interpolate"
  },
  "type": "import"
 },
 "sklearn.linear_model.least_angle.lars_path": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "DeprecationWarning",
    "abs",
    "isinstance",
    "list",
    "max",
    "min",
    "nrm2",
    "numpy.abs",
    "numpy.append",
    "numpy.arange",
    "numpy.argmax",
    "numpy.array",
    "numpy.delete",
    "numpy.dot",
    "numpy.empty",
    "numpy.fabs",
    "numpy.finfo",
    "numpy.float",
    "numpy.float32",
    "numpy.int8",
    "numpy.isfinite",
    "numpy.newaxis",
    "numpy.ones_like",
    "numpy.r_",
    "numpy.resize",
    "numpy.sign",
    "numpy.sqrt",
    "numpy.sum",
    "numpy.where",
    "numpy.zeros",
    "numpy.zeros_like",
    "print",
    "range",
    "scipy.linalg.get_blas_funcs",
    "scipy.linalg.lapack.get_lapack_funcs",
    "scipy.linalg.solve_triangular",
    "sklearn.linear_model.least_angle.solve_triangular_args",
    "sklearn.linear_model.least_angle.sys",
    "sklearn.linear_model.least_angle.warnings",
    "solve_cholesky",
    "swap"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.least_angle.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "sklearn.linear_model.least_angle.log": {
  "data": {
   "shadows": "math.log"
  },
  "type": "import"
 },
 "sklearn.linear_model.least_angle.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.linear_model.least_angle.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "sklearn.linear_model.least_angle.solve_triangular_args": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "sklearn.linear_model.least_angle.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "sklearn.linear_model.least_angle.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.linear_model.logistic": {
  "data": {},
  "type": "module"
 },
 "sklearn.linear_model.logistic.LogisticRegression": {
  "data": {
   "lineno": 997
  },
  "type": "class"
 },
 "sklearn.linear_model.logistic.LogisticRegression.__init__": {
  "data": {
   "lineno": 1223
  },
  "type": "function"
 },
 "sklearn.linear_model.logistic.LogisticRegression.fit": {
  "data": {
   "lineno": 1243,
   "symbols_in_volume": [
    "Parallel",
    "ValueError",
    "_fit_liblinear",
    "check_X_y",
    "check_classification_targets",
    "delayed",
    "effective_n_jobs",
    "getattr",
    "int",
    "isinstance",
    "len",
    "list",
    "numpy.append",
    "numpy.array",
    "numpy.asarray",
    "numpy.float32",
    "numpy.float64",
    "numpy.int32",
    "numpy.newaxis",
    "numpy.unique",
    "numpy.zeros",
    "path_func",
    "row_norms",
    "sklearn.linear_model.logistic._check_multi_class",
    "sklearn.linear_model.logistic._check_solver",
    "sklearn.linear_model.logistic.logistic_regression_path",
    "sklearn.linear_model.logistic.numbers",
    "sklearn.linear_model.logistic.warnings",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.logistic.LogisticRegression.predict_log_proba": {
  "data": {
   "lineno": 1418,
   "symbols_in_volume": [
    "numpy.log"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.logistic.LogisticRegression.predict_proba": {
  "data": {
   "lineno": 1377,
   "symbols_in_volume": [
    "NotFittedError",
    "hasattr",
    "numpy.c_",
    "sklearn.linear_model.logistic.LogisticRegression",
    "softmax",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.logistic.LogisticRegressionCV": {
  "data": {
   "lineno": 1437,
   "symbols_in_volume": [
    "sklearn.linear_model.logistic.LogisticRegression"
   ]
  },
  "type": "class"
 },
 "sklearn.linear_model.logistic.LogisticRegressionCV.__init__": {
  "data": {
   "lineno": 1658,
   "symbols_in_volume": [
    "scoring"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.logistic.LogisticRegressionCV.fit": {
  "data": {
   "lineno": 1680,
   "symbols_in_volume": [
    "LabelEncoder",
    "Parallel",
    "ValueError",
    "check_X_y",
    "check_classification_targets",
    "check_cv",
    "compute_class_weight",
    "delayed",
    "dict",
    "enumerate",
    "isinstance",
    "len",
    "list",
    "max",
    "numpy.arange",
    "numpy.argmax",
    "numpy.asarray",
    "numpy.empty",
    "numpy.float64",
    "numpy.mean",
    "numpy.reshape",
    "numpy.rollaxis",
    "numpy.tile",
    "numpy.zeros",
    "path_func",
    "range",
    "row_norms",
    "sklearn.linear_model.logistic._check_multi_class",
    "sklearn.linear_model.logistic._check_solver",
    "sklearn.linear_model.logistic._log_reg_scoring_path",
    "sklearn.linear_model.logistic.logistic_regression_path",
    "sklearn.linear_model.logistic.numbers",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.logistic.LogisticRegressionCV.score": {
  "data": {
   "lineno": 1890,
   "symbols_in_volume": [
    "get_scorer",
    "isinstance",
    "scoring",
    "sklearn.linear_model.logistic.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.logistic._check_multi_class": {
  "data": {
   "lineno": 453,
   "symbols_in_volume": [
    "FutureWarning",
    "ValueError",
    "sklearn.linear_model.logistic.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.logistic._check_solver": {
  "data": {
   "lineno": 427,
   "symbols_in_volume": [
    "FutureWarning",
    "ValueError",
    "sklearn.linear_model.logistic.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.logistic._intercept_dot": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "safe_sparse_dot"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.logistic._log_reg_scoring_path": {
  "data": {
   "lineno": 812,
   "symbols_in_volume": [
    "ValueError",
    "check_array",
    "check_consistent_length",
    "get_scorer",
    "isinstance",
    "list",
    "numpy.array",
    "numpy.float64",
    "numpy.newaxis",
    "numpy.ones",
    "numpy.unique",
    "scoring",
    "sklearn.linear_model.logistic.LogisticRegression",
    "sklearn.linear_model.logistic.logistic_regression_path"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.logistic._logistic_grad_hess": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.empty_like",
    "numpy.newaxis",
    "numpy.ones",
    "numpy.squeeze",
    "safe_sparse_dot",
    "scipy.sparse.dia_matrix",
    "scipy.sparse.issparse",
    "scipy.special.expit",
    "sklearn.linear_model.logistic._intercept_dot"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.logistic._logistic_grad_hess.Hs": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "numpy.empty_like"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.logistic._logistic_loss": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "log_logistic",
    "numpy.dot",
    "numpy.ones",
    "numpy.sum",
    "sklearn.linear_model.logistic._intercept_dot"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.logistic._logistic_loss_and_grad": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "log_logistic",
    "numpy.dot",
    "numpy.empty_like",
    "numpy.ones",
    "numpy.sum",
    "safe_sparse_dot",
    "scipy.special.expit",
    "sklearn.linear_model.logistic._intercept_dot"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.logistic._multinomial_grad_hess": {
  "data": {
   "lineno": 354,
   "symbols_in_volume": [
    "numpy.newaxis",
    "sklearn.linear_model.logistic._multinomial_loss_grad"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.logistic._multinomial_grad_hess.hessp": {
  "data": {
   "lineno": 403,
   "symbols_in_volume": [
    "bool",
    "numpy.newaxis",
    "numpy.zeros",
    "safe_sparse_dot"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.logistic._multinomial_loss": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "logsumexp",
    "numpy.exp",
    "numpy.newaxis",
    "safe_sparse_dot",
    "squared_norm"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.logistic._multinomial_loss_grad": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "bool",
    "numpy.newaxis",
    "numpy.zeros",
    "safe_sparse_dot",
    "sklearn.linear_model.logistic._multinomial_loss"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.logistic.expit": {
  "data": {
   "shadows": "scipy.special.expit"
  },
  "type": "import"
 },
 "sklearn.linear_model.logistic.logistic_regression_path": {
  "data": {
   "lineno": 477,
   "symbols_in_volume": [
    "LabelBinarizer",
    "LabelEncoder",
    "ValueError",
    "_fit_liblinear",
    "check_array",
    "check_consistent_length",
    "check_random_state",
    "compute_class_weight",
    "dict",
    "enumerate",
    "int",
    "isinstance",
    "len",
    "list",
    "max",
    "min",
    "newton_cg",
    "numpy.array",
    "numpy.concatenate",
    "numpy.expand_dims",
    "numpy.float64",
    "numpy.hstack",
    "numpy.int32",
    "numpy.logspace",
    "numpy.newaxis",
    "numpy.ones",
    "numpy.reshape",
    "numpy.searchsorted",
    "numpy.unique",
    "numpy.zeros",
    "sag_solver",
    "scipy.optimize.fmin_l_bfgs_b",
    "sklearn.linear_model.logistic._check_multi_class",
    "sklearn.linear_model.logistic._check_solver",
    "sklearn.linear_model.logistic._logistic_grad_hess",
    "sklearn.linear_model.logistic._logistic_loss",
    "sklearn.linear_model.logistic._logistic_loss_and_grad",
    "sklearn.linear_model.logistic._multinomial_grad_hess",
    "sklearn.linear_model.logistic._multinomial_loss",
    "sklearn.linear_model.logistic._multinomial_loss_grad",
    "sklearn.linear_model.logistic.numbers",
    "sklearn.linear_model.logistic.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.logistic.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.linear_model.logistic.numbers": {
  "data": {
   "shadows": "numbers"
  },
  "type": "import"
 },
 "sklearn.linear_model.logistic.optimize": {
  "data": {
   "shadows": "scipy.optimize"
  },
  "type": "import"
 },
 "sklearn.linear_model.logistic.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.linear_model.logistic.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.linear_model.omp": {
  "data": {},
  "type": "module"
 },
 "sklearn.linear_model.omp.OrthogonalMatchingPursuit": {
  "data": {
   "lineno": 542
  },
  "type": "class"
 },
 "sklearn.linear_model.omp.OrthogonalMatchingPursuit.__init__": {
  "data": {
   "lineno": 619
  },
  "type": "function"
 },
 "sklearn.linear_model.omp.OrthogonalMatchingPursuit.fit": {
  "data": {
   "lineno": 627,
   "symbols_in_volume": [
    "_pre_fit",
    "check_X_y",
    "int",
    "max",
    "numpy.newaxis",
    "numpy.sum",
    "sklearn.linear_model.omp.orthogonal_mp",
    "sklearn.linear_model.omp.orthogonal_mp_gram"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.omp.OrthogonalMatchingPursuitCV": {
  "data": {
   "lineno": 756
  },
  "type": "class"
 },
 "sklearn.linear_model.omp.OrthogonalMatchingPursuitCV.__init__": {
  "data": {
   "lineno": 855
  },
  "type": "function"
 },
 "sklearn.linear_model.omp.OrthogonalMatchingPursuitCV.fit": {
  "data": {
   "lineno": 865,
   "symbols_in_volume": [
    "Parallel",
    "as_float_array",
    "check_X_y",
    "check_cv",
    "delayed",
    "int",
    "max",
    "min",
    "numpy.argmin",
    "numpy.array",
    "sklearn.linear_model.omp.OrthogonalMatchingPursuit",
    "sklearn.linear_model.omp._omp_path_residues"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.omp._cholesky_omp": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "RuntimeWarning",
    "math.sqrt",
    "nrm2",
    "numpy.abs",
    "numpy.arange",
    "numpy.argmax",
    "numpy.asfortranarray",
    "numpy.dot",
    "numpy.empty",
    "numpy.empty_like",
    "numpy.finfo",
    "potrs",
    "scipy.linalg.get_blas_funcs",
    "scipy.linalg.lapack.get_lapack_funcs",
    "scipy.linalg.norm",
    "scipy.linalg.solve_triangular",
    "sklearn.linear_model.omp.premature",
    "sklearn.linear_model.omp.warnings",
    "swap"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.omp._gram_omp": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "RuntimeWarning",
    "abs",
    "len",
    "math.sqrt",
    "nrm2",
    "numpy.abs",
    "numpy.arange",
    "numpy.argmax",
    "numpy.asfortranarray",
    "numpy.dot",
    "numpy.empty",
    "numpy.empty_like",
    "numpy.finfo",
    "numpy.inner",
    "potrs",
    "scipy.linalg.get_blas_funcs",
    "scipy.linalg.lapack.get_lapack_funcs",
    "scipy.linalg.solve_triangular",
    "sklearn.linear_model.omp.premature",
    "sklearn.linear_model.omp.warnings",
    "swap"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.omp._omp_path_residues": {
  "data": {
   "lineno": 679,
   "symbols_in_volume": [
    "as_float_array",
    "numpy.dot",
    "numpy.flatnonzero",
    "numpy.newaxis",
    "numpy.sqrt",
    "numpy.sum",
    "sklearn.linear_model.omp.orthogonal_mp"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.omp.get_lapack_funcs": {
  "data": {
   "shadows": "scipy.linalg.lapack.get_lapack_funcs"
  },
  "type": "import"
 },
 "sklearn.linear_model.omp.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "sklearn.linear_model.omp.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.linear_model.omp.orthogonal_mp": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "ValueError",
    "check_array",
    "enumerate",
    "int",
    "len",
    "max",
    "numpy.asfortranarray",
    "numpy.dot",
    "numpy.squeeze",
    "numpy.sum",
    "numpy.zeros",
    "range",
    "sklearn.linear_model.omp._cholesky_omp",
    "sklearn.linear_model.omp.orthogonal_mp_gram"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.omp.orthogonal_mp_gram": {
  "data": {
   "lineno": 407,
   "symbols_in_volume": [
    "ValueError",
    "check_array",
    "enumerate",
    "int",
    "len",
    "numpy.asarray",
    "numpy.newaxis",
    "numpy.squeeze",
    "numpy.zeros",
    "range",
    "sklearn.linear_model.omp._gram_omp"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.omp.premature": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "sklearn.linear_model.omp.sqrt": {
  "data": {
   "shadows": "math.sqrt"
  },
  "type": "import"
 },
 "sklearn.linear_model.omp.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.linear_model.passive_aggressive": {
  "data": {},
  "type": "module"
 },
 "sklearn.linear_model.passive_aggressive.PassiveAggressiveClassifier": {
  "data": {
   "lineno": 9
  },
  "type": "class"
 },
 "sklearn.linear_model.passive_aggressive.PassiveAggressiveClassifier.__init__": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "sklearn.linear_model.passive_aggressive.PassiveAggressiveClassifier",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.passive_aggressive.PassiveAggressiveClassifier.fit": {
  "data": {
   "lineno": 235
  },
  "type": "function"
 },
 "sklearn.linear_model.passive_aggressive.PassiveAggressiveClassifier.partial_fit": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.passive_aggressive.PassiveAggressiveRegressor": {
  "data": {
   "lineno": 263
  },
  "type": "class"
 },
 "sklearn.linear_model.passive_aggressive.PassiveAggressiveRegressor.__init__": {
  "data": {
   "lineno": 406,
   "symbols_in_volume": [
    "sklearn.linear_model.passive_aggressive.PassiveAggressiveRegressor",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.passive_aggressive.PassiveAggressiveRegressor.fit": {
  "data": {
   "lineno": 455
  },
  "type": "function"
 },
 "sklearn.linear_model.passive_aggressive.PassiveAggressiveRegressor.partial_fit": {
  "data": {
   "lineno": 432
  },
  "type": "function"
 },
 "sklearn.linear_model.perceptron": {
  "data": {},
  "type": "module"
 },
 "sklearn.linear_model.perceptron.Perceptron": {
  "data": {
   "lineno": 7
  },
  "type": "class"
 },
 "sklearn.linear_model.perceptron.Perceptron.__init__": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "sklearn.linear_model.perceptron.Perceptron",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.randomized_l1": {
  "data": {},
  "type": "module"
 },
 "sklearn.linear_model.randomized_l1.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "sklearn.linear_model.randomized_l1.BaseRandomizedLinearModel": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "abc.ABCMeta",
    "deprecated",
    "staticmethod"
   ]
  },
  "type": "class"
 },
 "sklearn.linear_model.randomized_l1.BaseRandomizedLinearModel.__init__": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.randomized_l1.BaseRandomizedLinearModel._get_support_mask": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "check_is_fitted"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.randomized_l1.BaseRandomizedLinearModel._make_estimator_and_params": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.randomized_l1.BaseRandomizedLinearModel.fit": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "Memory",
    "ValueError",
    "as_float_array",
    "check_X_y",
    "isinstance",
    "numpy.max",
    "numpy.newaxis",
    "sklearn.linear_model.randomized_l1._resample_model",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.randomized_l1.RandomizedLasso": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "deprecated",
    "sklearn.linear_model.randomized_l1.BaseRandomizedLinearModel"
   ]
  },
  "type": "class"
 },
 "sklearn.linear_model.randomized_l1.RandomizedLasso.__init__": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": [
    "numpy.finfo",
    "numpy.float"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.randomized_l1.RandomizedLasso._make_estimator_and_params": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": [
    "LassoLarsIC",
    "dict",
    "hasattr",
    "isinstance",
    "sklearn.linear_model.randomized_l1._randomized_lasso"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.randomized_l1.RandomizedLogisticRegression": {
  "data": {
   "lineno": 393,
   "symbols_in_volume": [
    "deprecated",
    "sklearn.linear_model.randomized_l1.BaseRandomizedLinearModel"
   ]
  },
  "type": "class"
 },
 "sklearn.linear_model.randomized_l1.RandomizedLogisticRegression.__init__": {
  "data": {
   "lineno": 512
  },
  "type": "function"
 },
 "sklearn.linear_model.randomized_l1.RandomizedLogisticRegression._make_estimator_and_params": {
  "data": {
   "lineno": 534,
   "symbols_in_volume": [
    "dict",
    "sklearn.linear_model.randomized_l1._randomized_logistic"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.randomized_l1.RandomizedLogisticRegression._preprocess_data": {
  "data": {
   "lineno": 539,
   "symbols_in_volume": [
    "_preprocess_data"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.randomized_l1._lasso_stability_path": {
  "data": {
   "lineno": 548,
   "symbols_in_volume": [
    "lars_path",
    "numpy.abs",
    "numpy.dot",
    "numpy.max",
    "numpy.newaxis",
    "safe_mask",
    "sklearn.linear_model.randomized_l1.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.randomized_l1._randomized_lasso": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "interpolator",
    "lars_path",
    "len",
    "numpy.asarray",
    "numpy.atleast_1d",
    "numpy.bool",
    "numpy.finfo",
    "numpy.float",
    "numpy.float64",
    "numpy.min",
    "numpy.zeros",
    "safe_mask",
    "scipy.interpolate.interp1d",
    "sklearn.linear_model.randomized_l1.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.randomized_l1._randomized_logistic": {
  "data": {
   "lineno": 363,
   "symbols_in_volume": [
    "LogisticRegression",
    "ValueError",
    "len",
    "numpy.abs",
    "numpy.any",
    "numpy.asarray",
    "numpy.atleast_1d",
    "numpy.bool",
    "numpy.finfo",
    "numpy.float",
    "numpy.float64",
    "numpy.zeros",
    "safe_mask",
    "scipy.sparse.dia_matrix",
    "scipy.sparse.issparse",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.randomized_l1._resample_model": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "Parallel",
    "ValueError",
    "check_random_state",
    "delayed",
    "max",
    "range"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.randomized_l1.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "sklearn.linear_model.randomized_l1.interp1d": {
  "data": {
   "shadows": "scipy.interpolate.interp1d"
  },
  "type": "import"
 },
 "sklearn.linear_model.randomized_l1.issparse": {
  "data": {
   "shadows": "scipy.sparse.issparse"
  },
  "type": "import"
 },
 "sklearn.linear_model.randomized_l1.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "sklearn.linear_model.randomized_l1.lasso_stability_path": {
  "data": {
   "lineno": 575,
   "symbols_in_volume": [
    "Parallel",
    "ValueError",
    "check_X_y",
    "check_random_state",
    "delayed",
    "deprecated",
    "float",
    "int",
    "len",
    "list",
    "max",
    "numpy.array",
    "numpy.c_",
    "numpy.finfo",
    "numpy.float",
    "numpy.ones",
    "numpy.r_",
    "numpy.zeros",
    "range",
    "scipy.interpolate.interp1d",
    "set",
    "sklearn.linear_model.randomized_l1._lasso_stability_path",
    "sklearn.linear_model.randomized_l1.itertools",
    "sorted"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.randomized_l1.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.linear_model.randomized_l1.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.linear_model.randomized_l1.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.linear_model.ransac": {
  "data": {
   "symbols_in_volume": [
    "numpy.spacing"
   ]
  },
  "type": "module"
 },
 "sklearn.linear_model.ransac.RANSACRegressor": {
  "data": {
   "lineno": 55
  },
  "type": "class"
 },
 "sklearn.linear_model.ransac.RANSACRegressor.__init__": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "numpy.inf"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.ransac.RANSACRegressor.fit": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "LinearRegression",
    "ValueError",
    "callable",
    "check_array",
    "check_consistent_length",
    "check_random_state",
    "clone",
    "has_fit_parameter",
    "loss_function",
    "min",
    "numpy.abs",
    "numpy.arange",
    "numpy.asarray",
    "numpy.ceil",
    "numpy.inf",
    "numpy.median",
    "numpy.sum",
    "sample_without_replacement",
    "sklearn.linear_model.ransac._dynamic_max_trials",
    "sklearn.linear_model.ransac.warnings",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.ransac.RANSACRegressor.predict": {
  "data": {
   "lineno": 454,
   "symbols_in_volume": [
    "check_is_fitted"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.ransac.RANSACRegressor.score": {
  "data": {
   "lineno": 472,
   "symbols_in_volume": [
    "check_is_fitted"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.ransac._EPSILON": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "sklearn.linear_model.ransac._dynamic_max_trials": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "abs",
    "float",
    "max",
    "numpy.ceil",
    "numpy.log",
    "sklearn.linear_model.ransac._EPSILON"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.ransac.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.linear_model.ransac.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.linear_model.ridge": {
  "data": {},
  "type": "module"
 },
 "sklearn.linear_model.ridge.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "sklearn.linear_model.ridge.Ridge": {
  "data": {
   "lineno": 520,
   "symbols_in_volume": [
    "sklearn.linear_model.ridge._BaseRidge"
   ]
  },
  "type": "class"
 },
 "sklearn.linear_model.ridge.Ridge.__init__": {
  "data": {
   "lineno": 654,
   "symbols_in_volume": [
    "sklearn.linear_model.ridge.Ridge",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.ridge.Ridge.fit": {
  "data": {
   "lineno": 662,
   "symbols_in_volume": [
    "sklearn.linear_model.ridge.Ridge",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.ridge.RidgeCV": {
  "data": {
   "lineno": 1170,
   "symbols_in_volume": [
    "sklearn.linear_model.ridge._BaseRidgeCV"
   ]
  },
  "type": "class"
 },
 "sklearn.linear_model.ridge.RidgeClassifier": {
  "data": {
   "lineno": 683,
   "symbols_in_volume": [
    "sklearn.linear_model.ridge._BaseRidge"
   ]
  },
  "type": "class"
 },
 "sklearn.linear_model.ridge.RidgeClassifier.__init__": {
  "data": {
   "lineno": 803,
   "symbols_in_volume": [
    "sklearn.linear_model.ridge.RidgeClassifier",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.ridge.RidgeClassifier.classes_": {
  "data": {
   "lineno": 856,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.ridge.RidgeClassifier.fit": {
  "data": {
   "lineno": 812,
   "symbols_in_volume": [
    "LabelBinarizer",
    "ValueError",
    "check_X_y",
    "column_or_1d",
    "compute_sample_weight",
    "sklearn.linear_model.ridge.RidgeClassifier",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.ridge.RidgeClassifierCV": {
  "data": {
   "lineno": 1279,
   "symbols_in_volume": [
    "sklearn.linear_model.ridge._BaseRidgeCV"
   ]
  },
  "type": "class"
 },
 "sklearn.linear_model.ridge.RidgeClassifierCV.__init__": {
  "data": {
   "lineno": 1382,
   "symbols_in_volume": [
    "sklearn.linear_model.ridge.RidgeClassifierCV",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.ridge.RidgeClassifierCV.classes_": {
  "data": {
   "lineno": 1427,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.ridge.RidgeClassifierCV.fit": {
  "data": {
   "lineno": 1390,
   "symbols_in_volume": [
    "LabelBinarizer",
    "check_X_y",
    "column_or_1d",
    "compute_sample_weight",
    "sklearn.linear_model.ridge._BaseRidgeCV"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.ridge._BaseRidge": {
  "data": {
   "lineno": 467,
   "symbols_in_volume": [
    "abc.ABCMeta"
   ]
  },
  "type": "class"
 },
 "sklearn.linear_model.ridge._BaseRidge.__init__": {
  "data": {
   "lineno": 469,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.ridge._BaseRidge.fit": {
  "data": {
   "lineno": 482,
   "symbols_in_volume": [
    "ValueError",
    "check_X_y",
    "numpy.atleast_1d",
    "numpy.float32",
    "numpy.float64",
    "scipy.sparse.issparse",
    "sklearn.linear_model.ridge.ridge_regression"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.ridge._BaseRidgeCV": {
  "data": {
   "lineno": 1110
  },
  "type": "class"
 },
 "sklearn.linear_model.ridge._BaseRidgeCV.__init__": {
  "data": {
   "lineno": 1111,
   "symbols_in_volume": [
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.ridge._BaseRidgeCV.fit": {
  "data": {
   "lineno": 1123,
   "symbols_in_volume": [
    "GridSearchCV",
    "ValueError",
    "sklearn.linear_model.ridge.Ridge",
    "sklearn.linear_model.ridge._RidgeGCV"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.ridge._RidgeGCV": {
  "data": {
   "lineno": 861
  },
  "type": "class"
 },
 "sklearn.linear_model.ridge._RidgeGCV.__init__": {
  "data": {
   "lineno": 900,
   "symbols_in_volume": [
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.ridge._RidgeGCV._decomp_diag": {
  "data": {
   "lineno": 924
  },
  "type": "function"
 },
 "sklearn.linear_model.ridge._RidgeGCV._diag_dot": {
  "data": {
   "lineno": 928,
   "symbols_in_volume": [
    "len",
    "numpy.newaxis",
    "slice"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.ridge._RidgeGCV._errors": {
  "data": {
   "lineno": 955
  },
  "type": "function"
 },
 "sklearn.linear_model.ridge._RidgeGCV._errors_and_values_helper": {
  "data": {
   "lineno": 935,
   "symbols_in_volume": [
    "len",
    "numpy.dot",
    "numpy.newaxis",
    "numpy.var"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.ridge._RidgeGCV._errors_and_values_svd_helper": {
  "data": {
   "lineno": 975,
   "symbols_in_volume": [
    "len",
    "numpy.dot",
    "numpy.newaxis",
    "numpy.var"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.ridge._RidgeGCV._errors_svd": {
  "data": {
   "lineno": 991
  },
  "type": "function"
 },
 "sklearn.linear_model.ridge._RidgeGCV._pre_compute": {
  "data": {
   "lineno": 912,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.ones_like",
    "safe_sparse_dot",
    "scipy.sparse.linalg.eigh"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.ridge._RidgeGCV._pre_compute_svd": {
  "data": {
   "lineno": 963,
   "symbols_in_volume": [
    "TypeError",
    "numpy.dot",
    "numpy.hstack",
    "numpy.ones",
    "scipy.sparse.issparse",
    "scipy.sparse.linalg.svd"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.ridge._RidgeGCV._values": {
  "data": {
   "lineno": 959
  },
  "type": "function"
 },
 "sklearn.linear_model.ridge._RidgeGCV._values_svd": {
  "data": {
   "lineno": 995
  },
  "type": "function"
 },
 "sklearn.linear_model.ridge._RidgeGCV.fit": {
  "data": {
   "lineno": 999,
   "symbols_in_volume": [
    "ValueError",
    "_errors",
    "_pre_compute",
    "_rescale_data",
    "_values",
    "check_X_y",
    "check_array",
    "check_scoring",
    "enumerate",
    "float",
    "isinstance",
    "len",
    "numpy.any",
    "numpy.argmax",
    "numpy.float64",
    "numpy.shape",
    "numpy.zeros",
    "range",
    "safe_sparse_dot",
    "scipy.sparse.issparse",
    "scorer",
    "sklearn.linear_model.ridge.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.ridge._RidgeGCV.fit.identity_estimator": {
  "data": {
   "lineno": 1085
  },
  "type": "function"
 },
 "sklearn.linear_model.ridge._solve_cholesky": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "len",
    "numpy.array_equal",
    "numpy.empty",
    "safe_sparse_dot",
    "scipy.sparse.linalg.solve",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.ridge._solve_cholesky_kernel": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "isinstance",
    "numpy.atleast_1d",
    "numpy.empty",
    "numpy.linalg.LinAlgError",
    "numpy.ndarray",
    "numpy.newaxis",
    "numpy.outer",
    "numpy.sqrt",
    "scipy.sparse.linalg.lstsq",
    "scipy.sparse.linalg.solve",
    "sklearn.linear_model.ridge.warnings",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.ridge._solve_lsqr": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "numpy.empty",
    "numpy.int32",
    "numpy.sqrt",
    "range",
    "scipy.sparse.linalg.lsqr"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.ridge._solve_sparse_cg": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "create_mv",
    "numpy.empty",
    "range",
    "scipy.sparse.linalg.LinearOperator",
    "scipy.sparse.linalg.aslinearoperator",
    "scipy.sparse.linalg.cg",
    "sklearn.linear_model.ridge.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.ridge._solve_sparse_cg.create_mv": {
  "data": {
   "lineno": 48
  },
  "type": "function"
 },
 "sklearn.linear_model.ridge._solve_sparse_cg.create_mv._mv": {
  "data": {
   "lineno": 49
  },
  "type": "function"
 },
 "sklearn.linear_model.ridge._solve_svd": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.newaxis",
    "numpy.zeros",
    "scipy.sparse.linalg.svd"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.ridge.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "sklearn.linear_model.ridge.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "sklearn.linear_model.ridge.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.linear_model.ridge.ridge_regression": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "_rescale_data",
    "check_array",
    "check_consistent_length",
    "enumerate",
    "int",
    "numpy.asarray",
    "numpy.atleast_1d",
    "numpy.empty",
    "numpy.float32",
    "numpy.float64",
    "numpy.int32",
    "numpy.repeat",
    "numpy.zeros",
    "row_norms",
    "safe_sparse_dot",
    "sag_solver",
    "scipy.sparse.issparse",
    "scipy.sparse.linalg.LinAlgError",
    "sklearn.linear_model.ridge._solve_cholesky",
    "sklearn.linear_model.ridge._solve_cholesky_kernel",
    "sklearn.linear_model.ridge._solve_lsqr",
    "sklearn.linear_model.ridge._solve_sparse_cg",
    "sklearn.linear_model.ridge._solve_svd",
    "sklearn.linear_model.ridge.warnings",
    "str",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.ridge.sp_linalg": {
  "data": {
   "shadows": "scipy.sparse.linalg"
  },
  "type": "import"
 },
 "sklearn.linear_model.ridge.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.linear_model.ridge.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.linear_model.sag": {
  "data": {},
  "type": "module"
 },
 "sklearn.linear_model.sag.get_auto_step_size": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "min"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.sag.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.linear_model.sag.sag_solver": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "ZeroDivisionError",
    "check_array",
    "float",
    "int",
    "make_dataset",
    "numpy.float64",
    "numpy.int32",
    "numpy.ones",
    "numpy.vstack",
    "numpy.zeros",
    "row_norms",
    "sag",
    "sklearn.linear_model.sag.get_auto_step_size",
    "sklearn.linear_model.sag.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.sag.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.linear_model.setup": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.distutils.core.setup",
    "sklearn.linear_model.setup.configuration"
   ]
  },
  "type": "module"
 },
 "sklearn.linear_model.setup.Configuration": {
  "data": {
   "shadows": "numpy.distutils.misc_util.Configuration"
  },
  "type": "import"
 },
 "sklearn.linear_model.setup.configuration": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "numpy.distutils.misc_util.Configuration",
    "os.path.join",
    "sklearn._build_utils.get_blas_info",
    "sklearn.linear_model.setup.numpy",
    "sklearn.linear_model.setup.os"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.setup.get_blas_info": {
  "data": {
   "shadows": "sklearn._build_utils.get_blas_info"
  },
  "type": "import"
 },
 "sklearn.linear_model.setup.join": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "sklearn.linear_model.setup.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.linear_model.setup.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "sklearn.linear_model.setup.setup": {
  "data": {
   "shadows": "numpy.distutils.core.setup"
  },
  "type": "import"
 },
 "sklearn.linear_model.stochastic_gradient": {
  "data": {},
  "type": "module"
 },
 "sklearn.linear_model.stochastic_gradient.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "sklearn.linear_model.stochastic_gradient.BaseSGD": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "abc.ABCMeta"
   ]
  },
  "type": "class"
 },
 "sklearn.linear_model.stochastic_gradient.BaseSGD.__init__": {
  "data": {
   "lineno": 49
  },
  "type": "function"
 },
 "sklearn.linear_model.stochastic_gradient.BaseSGD._allocate_parameter_mem": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "ValueError",
    "numpy.asarray",
    "numpy.float64",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.stochastic_gradient.BaseSGD._delete_validation_split": {
  "data": {
   "lineno": 296
  },
  "type": "function"
 },
 "sklearn.linear_model.stochastic_gradient.BaseSGD._get_learning_rate_type": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "sklearn.linear_model.stochastic_gradient.LEARNING_RATE_TYPES"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.stochastic_gradient.BaseSGD._get_loss_function": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "loss_class"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.stochastic_gradient.BaseSGD._get_penalty_type": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "sklearn.linear_model.stochastic_gradient.PENALTY_TYPES",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.stochastic_gradient.BaseSGD._make_validation_split": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "ValueError",
    "numpy.arange",
    "numpy.uint8",
    "numpy.zeros",
    "train_test_split"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.stochastic_gradient.BaseSGD._validate_params": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "DeprecationWarning",
    "FutureWarning",
    "ValueError",
    "bool",
    "isinstance",
    "sklearn.linear_model.stochastic_gradient.warnings",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.stochastic_gradient.BaseSGD._validate_sample_weight": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "ValueError",
    "numpy.asarray",
    "numpy.float64",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.stochastic_gradient.BaseSGD._validation_score": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "numpy.atleast_1d"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.stochastic_gradient.BaseSGD.fit": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.stochastic_gradient.BaseSGD.set_params": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "sklearn.linear_model.stochastic_gradient.BaseSGD",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.stochastic_gradient.BaseSGDClassifier": {
  "data": {
   "lineno": 448,
   "symbols_in_volume": [
    "abc.ABCMeta",
    "sklearn.linear_model.stochastic_gradient.BaseSGD",
    "sklearn.linear_model.stochastic_gradient.DEFAULT_EPSILON"
   ]
  },
  "type": "class"
 },
 "sklearn.linear_model.stochastic_gradient.BaseSGDClassifier.__init__": {
  "data": {
   "lineno": 464,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "sklearn.linear_model.stochastic_gradient.BaseSGDClassifier",
    "sklearn.linear_model.stochastic_gradient.DEFAULT_EPSILON",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.stochastic_gradient.BaseSGDClassifier._fit": {
  "data": {
   "lineno": 539,
   "symbols_in_volume": [
    "check_X_y",
    "hasattr",
    "numpy.float64",
    "numpy.inf",
    "numpy.unique",
    "sklearn.linear_model.stochastic_gradient.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.stochastic_gradient.BaseSGDClassifier._fit_binary": {
  "data": {
   "lineno": 582,
   "symbols_in_volume": [
    "numpy.atleast_1d",
    "sklearn.linear_model.stochastic_gradient.fit_binary"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.stochastic_gradient.BaseSGDClassifier._fit_multiclass": {
  "data": {
   "lineno": 608,
   "symbols_in_volume": [
    "Parallel",
    "delayed",
    "enumerate",
    "len",
    "max",
    "numpy.atleast_1d",
    "range",
    "sklearn.linear_model.stochastic_gradient.fit_binary"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.stochastic_gradient.BaseSGDClassifier._partial_fit": {
  "data": {
   "lineno": 492,
   "symbols_in_volume": [
    "ValueError",
    "_check_partial_fit_first_call",
    "check_X_y",
    "compute_class_weight",
    "getattr",
    "hasattr",
    "numpy.float64"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.stochastic_gradient.BaseSGDClassifier.fit": {
  "data": {
   "lineno": 683
  },
  "type": "function"
 },
 "sklearn.linear_model.stochastic_gradient.BaseSGDClassifier.loss_function": {
  "data": {
   "lineno": 486,
   "symbols_in_volume": [
    "deprecated",
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.stochastic_gradient.BaseSGDClassifier.partial_fit": {
  "data": {
   "lineno": 641,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.stochastic_gradient.BaseSGDRegressor": {
  "data": {
   "lineno": 1078,
   "symbols_in_volume": [
    "sklearn.linear_model.stochastic_gradient.BaseSGD",
    "sklearn.linear_model.stochastic_gradient.DEFAULT_EPSILON"
   ]
  },
  "type": "class"
 },
 "sklearn.linear_model.stochastic_gradient.BaseSGDRegressor.__init__": {
  "data": {
   "lineno": 1088,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "sklearn.linear_model.stochastic_gradient.BaseSGDRegressor",
    "sklearn.linear_model.stochastic_gradient.DEFAULT_EPSILON",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.stochastic_gradient.BaseSGDRegressor._decision_function": {
  "data": {
   "lineno": 1227,
   "symbols_in_volume": [
    "all",
    "check_array",
    "check_is_fitted",
    "safe_sparse_dot"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.stochastic_gradient.BaseSGDRegressor._fit": {
  "data": {
   "lineno": 1162,
   "symbols_in_volume": [
    "getattr",
    "numpy.inf",
    "sklearn.linear_model.stochastic_gradient.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.stochastic_gradient.BaseSGDRegressor._fit_regressor": {
  "data": {
   "lineno": 1261,
   "symbols_in_volume": [
    "average_sgd",
    "check_random_state",
    "hasattr",
    "int",
    "make_dataset",
    "numpy.atleast_1d",
    "numpy.iinfo",
    "numpy.inf",
    "numpy.int32",
    "plain_sgd"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.stochastic_gradient.BaseSGDRegressor._partial_fit": {
  "data": {
   "lineno": 1106,
   "symbols_in_volume": [
    "ValueError",
    "check_X_y",
    "getattr",
    "numpy.float64",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.stochastic_gradient.BaseSGDRegressor.fit": {
  "data": {
   "lineno": 1196
  },
  "type": "function"
 },
 "sklearn.linear_model.stochastic_gradient.BaseSGDRegressor.partial_fit": {
  "data": {
   "lineno": 1136
  },
  "type": "function"
 },
 "sklearn.linear_model.stochastic_gradient.BaseSGDRegressor.predict": {
  "data": {
   "lineno": 1247
  },
  "type": "function"
 },
 "sklearn.linear_model.stochastic_gradient.DEFAULT_EPSILON": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "sklearn.linear_model.stochastic_gradient.LEARNING_RATE_TYPES": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "sklearn.linear_model.stochastic_gradient.PENALTY_TYPES": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "sklearn.linear_model.stochastic_gradient.SGDClassifier": {
  "data": {
   "lineno": 717,
   "symbols_in_volume": [
    "sklearn.linear_model.stochastic_gradient.BaseSGDClassifier"
   ]
  },
  "type": "class"
 },
 "sklearn.linear_model.stochastic_gradient.SGDClassifier.__init__": {
  "data": {
   "lineno": 945,
   "symbols_in_volume": [
    "sklearn.linear_model.stochastic_gradient.DEFAULT_EPSILON",
    "sklearn.linear_model.stochastic_gradient.SGDClassifier",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.stochastic_gradient.SGDClassifier._check_proba": {
  "data": {
   "lineno": 962,
   "symbols_in_volume": [
    "AttributeError"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.stochastic_gradient.SGDClassifier._predict_log_proba": {
  "data": {
   "lineno": 1074,
   "symbols_in_volume": [
    "numpy.log"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.stochastic_gradient.SGDClassifier._predict_proba": {
  "data": {
   "lineno": 1006,
   "symbols_in_volume": [
    "NotImplementedError",
    "check_is_fitted",
    "len",
    "numpy.any",
    "numpy.clip",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.stochastic_gradient.SGDClassifier.predict_log_proba": {
  "data": {
   "lineno": 1049,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.stochastic_gradient.SGDClassifier.predict_proba": {
  "data": {
   "lineno": 967,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.stochastic_gradient.SGDRegressor": {
  "data": {
   "lineno": 1343,
   "symbols_in_volume": [
    "sklearn.linear_model.stochastic_gradient.BaseSGDRegressor"
   ]
  },
  "type": "class"
 },
 "sklearn.linear_model.stochastic_gradient.SGDRegressor.__init__": {
  "data": {
   "lineno": 1544,
   "symbols_in_volume": [
    "sklearn.linear_model.stochastic_gradient.DEFAULT_EPSILON",
    "sklearn.linear_model.stochastic_gradient.SGDRegressor",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.stochastic_gradient._prepare_fit_binary": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": [
    "len",
    "numpy.float64",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.stochastic_gradient.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "sklearn.linear_model.stochastic_gradient.fit_binary": {
  "data": {
   "lineno": 350,
   "symbols_in_volume": [
    "average_sgd",
    "check_random_state",
    "int",
    "len",
    "make_dataset",
    "numpy.iinfo",
    "numpy.inf",
    "numpy.int32",
    "plain_sgd",
    "sklearn.linear_model.stochastic_gradient._prepare_fit_binary"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.stochastic_gradient.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.linear_model.stochastic_gradient.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests": {
  "data": {},
  "type": "module"
 },
 "sklearn.linear_model.tests.test_base": {
  "data": {
   "symbols_in_volume": [
    "numpy.random.RandomState"
   ]
  },
  "type": "module"
 },
 "sklearn.linear_model.tests.test_base.LinearRegression": {
  "data": {
   "shadows": "sklearn.linear_model.base.LinearRegression"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_base._preprocess_data": {
  "data": {
   "shadows": "sklearn.linear_model.base._preprocess_data"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_base._rescale_data": {
  "data": {
   "shadows": "sklearn.linear_model.base._rescale_data"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_base.assert_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_base.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_base.assert_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_base.assert_greater": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_greater"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_base.check_random_state": {
  "data": {
   "shadows": "sklearn.utils.check_random_state"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_base.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_base.make_regression": {
  "data": {
   "shadows": "sklearn.datasets.samples_generator.make_regression"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_base.make_sparse_uncorrelated": {
  "data": {
   "shadows": "sklearn.datasets.samples_generator.make_sparse_uncorrelated"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_base.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_base.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_base.rng": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "sklearn.linear_model.tests.test_base.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_base.test_csr_preprocess_data": {
  "data": {
   "lineno": 317,
   "symbols_in_volume": [
    "scipy.sparse.csr_matrix",
    "sklearn.datasets.samples_generator.make_regression",
    "sklearn.linear_model.base._preprocess_data",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_base.test_dtype_preprocess_data": {
  "data": {
   "lineno": 348,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.float32",
    "numpy.float64",
    "sklearn.linear_model.base._preprocess_data",
    "sklearn.linear_model.tests.test_base.rng",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_base.test_fit_intercept": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.linear_model.base.LinearRegression",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_base.test_linear_regression": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "sklearn.linear_model.base.LinearRegression",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_base.test_linear_regression_multiple_outcome": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "numpy.vstack",
    "sklearn.datasets.samples_generator.make_regression",
    "sklearn.linear_model.base.LinearRegression",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_base.test_linear_regression_sample_weights": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "numpy.concatenate",
    "numpy.diag",
    "numpy.ones",
    "numpy.random.RandomState",
    "scipy.linalg.solve",
    "sklearn.linear_model.base.LinearRegression",
    "sklearn.linear_model.tests.test_base.rng",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_greater"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_base.test_linear_regression_sparse": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "numpy.newaxis",
    "range",
    "scipy.sparse.eye",
    "sklearn.linear_model.base.LinearRegression",
    "sklearn.utils.check_random_state",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_base.test_linear_regression_sparse_multiple_outcome": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "numpy.vstack",
    "scipy.sparse.coo_matrix",
    "sklearn.datasets.samples_generator.make_sparse_uncorrelated",
    "sklearn.linear_model.base.LinearRegression",
    "sklearn.utils.check_random_state",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_base.test_preprocess_copy_data_no_checks": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": [
    "numpy.may_share_memory",
    "scipy.sparse.csr_matrix",
    "sklearn.datasets.samples_generator.make_regression",
    "sklearn.linear_model.base._preprocess_data",
    "sklearn.linear_model.tests.test_base.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_base.test_preprocess_data": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "numpy.mean",
    "numpy.ones",
    "numpy.sqrt",
    "numpy.std",
    "numpy.zeros",
    "sklearn.linear_model.base._preprocess_data",
    "sklearn.linear_model.tests.test_base.rng",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_base.test_preprocess_data_multioutput": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "numpy.mean",
    "numpy.zeros",
    "scipy.sparse.csc_matrix",
    "sklearn.linear_model.base._preprocess_data",
    "sklearn.linear_model.tests.test_base.rng",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_base.test_preprocess_data_weighted": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "numpy.average",
    "numpy.mean",
    "numpy.ones",
    "numpy.sqrt",
    "sklearn.linear_model.base._preprocess_data",
    "sklearn.linear_model.tests.test_base.rng",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_base.test_raises_value_error_if_sample_weights_greater_than_1d": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "sklearn.linear_model.base.LinearRegression",
    "sklearn.linear_model.tests.test_base.rng",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_base.test_rescale_data": {
  "data": {
   "lineno": 414,
   "symbols_in_volume": [
    "numpy.newaxis",
    "numpy.sqrt",
    "sklearn.linear_model.base._rescale_data",
    "sklearn.linear_model.tests.test_base.rng",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_base.test_sparse_preprocess_data_with_return_mean": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": [
    "numpy.mean",
    "numpy.ones",
    "numpy.sqrt",
    "numpy.std",
    "numpy.zeros",
    "scipy.sparse.rand",
    "sklearn.linear_model.base._preprocess_data",
    "sklearn.linear_model.tests.test_base.rng",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_bayes": {
  "data": {},
  "type": "module"
 },
 "sklearn.linear_model.tests.test_bayes.ARDRegression": {
  "data": {
   "shadows": "sklearn.linear_model.bayes.ARDRegression"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_bayes.BayesianRidge": {
  "data": {
   "shadows": "sklearn.linear_model.bayes.BayesianRidge"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_bayes.Ridge": {
  "data": {
   "shadows": "sklearn.linear_model.Ridge"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_bayes.SkipTest": {
  "data": {
   "shadows": "sklearn.utils.testing.SkipTest"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_bayes.assert_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_bayes.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_bayes.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_bayes.assert_array_less": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_less"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_bayes.assert_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_bayes.check_random_state": {
  "data": {
   "shadows": "sklearn.utils.check_random_state"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_bayes.datasets": {
  "data": {
   "shadows": "sklearn.datasets"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_bayes.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_bayes.test_bayesian_on_diabetes": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "numpy.diff",
    "sklearn.datasets.load_diabetes",
    "sklearn.linear_model.bayes.BayesianRidge",
    "sklearn.utils.testing.SkipTest",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_bayes.test_bayesian_ridge_parameter": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.linear_model.Ridge",
    "sklearn.linear_model.bayes.BayesianRidge",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_bayes.test_bayesian_sample_weights": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.linear_model.Ridge",
    "sklearn.linear_model.bayes.BayesianRidge",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_bayes.test_prediction_bayesian_ridge_ard_with_constant_input": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.full",
    "sklearn.linear_model.bayes.ARDRegression",
    "sklearn.linear_model.bayes.BayesianRidge",
    "sklearn.utils.check_random_state",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_bayes.test_return_std": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "enumerate",
    "f_noise",
    "numpy.array",
    "numpy.random.random",
    "sklearn.linear_model.bayes.ARDRegression",
    "sklearn.linear_model.bayes.BayesianRidge",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_bayes.test_return_std.f": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "numpy.dot"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_bayes.test_return_std.f_noise": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "f",
    "numpy.random.randn"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_bayes.test_std_bayesian_ridge_ard_with_constant_input": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.full",
    "sklearn.linear_model.bayes.ARDRegression",
    "sklearn.linear_model.bayes.BayesianRidge",
    "sklearn.utils.check_random_state",
    "sklearn.utils.testing.assert_array_less"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_bayes.test_toy_ard_object": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.linear_model.bayes.ARDRegression",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_bayes.test_toy_bayesian_ridge_object": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.linear_model.bayes.BayesianRidge",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_bayes.test_update_of_sigma_in_ard": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.linear_model.bayes.ARDRegression",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_coordinate_descent": {
  "data": {},
  "type": "module"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.ConvergenceWarning": {
  "data": {
   "shadows": "sklearn.exceptions.ConvergenceWarning"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.ElasticNet": {
  "data": {
   "shadows": "sklearn.linear_model.coordinate_descent.ElasticNet"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.ElasticNetCV": {
  "data": {
   "shadows": "sklearn.linear_model.coordinate_descent.ElasticNetCV"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.Lasso": {
  "data": {
   "shadows": "sklearn.linear_model.coordinate_descent.Lasso"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.LassoCV": {
  "data": {
   "shadows": "sklearn.linear_model.LassoCV"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.LassoLarsCV": {
  "data": {
   "shadows": "sklearn.linear_model.LassoLarsCV"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.MultiTaskElasticNet": {
  "data": {
   "shadows": "sklearn.linear_model.coordinate_descent.MultiTaskElasticNet"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.MultiTaskElasticNetCV": {
  "data": {
   "shadows": "sklearn.linear_model.coordinate_descent.MultiTaskElasticNetCV"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.MultiTaskLasso": {
  "data": {
   "shadows": "sklearn.linear_model.coordinate_descent.MultiTaskLasso"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.MultiTaskLassoCV": {
  "data": {
   "shadows": "sklearn.linear_model.coordinate_descent.MultiTaskLassoCV"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.StandardScaler": {
  "data": {
   "shadows": "sklearn.preprocessing.StandardScaler"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.StratifiedKFold": {
  "data": {
   "shadows": "sklearn.model_selection.StratifiedKFold"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.TempMemmap": {
  "data": {
   "shadows": "sklearn.utils.testing.TempMemmap"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.assert_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.assert_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.assert_greater": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_greater"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.assert_raise_message": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raise_message"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.assert_raises": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.assert_raises_regex": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises_regex"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.assert_true": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_true"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.assert_warns": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_warns"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.assert_warns_message": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_warns_message"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.build_dataset": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.random.RandomState"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.check_array": {
  "data": {
   "shadows": "sklearn.utils.check_array"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.datasets": {
  "data": {
   "shadows": "sklearn.datasets"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.enet_path": {
  "data": {
   "shadows": "sklearn.linear_model.coordinate_descent.enet_path"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.ignore_warnings": {
  "data": {
   "shadows": "sklearn.utils.testing.ignore_warnings"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.interpolate": {
  "data": {
   "shadows": "scipy.interpolate"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.lars_path": {
  "data": {
   "shadows": "sklearn.linear_model.lars_path"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.lasso_path": {
  "data": {
   "shadows": "sklearn.linear_model.coordinate_descent.lasso_path"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.load_boston": {
  "data": {
   "shadows": "sklearn.datasets.load_boston"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.make_pipeline": {
  "data": {
   "shadows": "sklearn.pipeline.make_pipeline"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.test_1d_multioutput_enet_and_multitask_enet_cv": {
  "data": {
   "lineno": 488,
   "symbols_in_volume": [
    "numpy.newaxis",
    "sklearn.linear_model.coordinate_descent.ElasticNetCV",
    "sklearn.linear_model.coordinate_descent.MultiTaskElasticNetCV",
    "sklearn.linear_model.tests.test_coordinate_descent.build_dataset",
    "sklearn.linear_model.tests.test_coordinate_descent.pytest",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.test_1d_multioutput_lasso_and_multitask_lasso_cv": {
  "data": {
   "lineno": 502,
   "symbols_in_volume": [
    "numpy.newaxis",
    "sklearn.linear_model.LassoCV",
    "sklearn.linear_model.coordinate_descent.MultiTaskLassoCV",
    "sklearn.linear_model.tests.test_coordinate_descent.build_dataset",
    "sklearn.linear_model.tests.test_coordinate_descent.pytest",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.test_check_input_false": {
  "data": {
   "lineno": 664,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.linear_model.coordinate_descent.ElasticNet",
    "sklearn.linear_model.tests.test_coordinate_descent.build_dataset",
    "sklearn.utils.check_array",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.test_coef_shape_not_zero": {
  "data": {
   "lineno": 817,
   "symbols_in_volume": [
    "numpy.c_",
    "numpy.ones",
    "sklearn.linear_model.coordinate_descent.Lasso"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.test_enet_copy_X_False_check_input_False": {
  "data": {
   "lineno": 694,
   "symbols_in_volume": [
    "numpy.any",
    "numpy.not_equal",
    "sklearn.linear_model.coordinate_descent.ElasticNet",
    "sklearn.linear_model.tests.test_coordinate_descent.build_dataset",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.test_enet_copy_X_True": {
  "data": {
   "lineno": 682,
   "symbols_in_volume": [
    "sklearn.linear_model.coordinate_descent.ElasticNet",
    "sklearn.linear_model.tests.test_coordinate_descent.build_dataset",
    "sklearn.linear_model.tests.test_coordinate_descent.pytest",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.test_enet_cv_positive_constraint": {
  "data": {
   "lineno": 348,
   "symbols_in_volume": [
    "min",
    "sklearn.linear_model.coordinate_descent.ElasticNetCV",
    "sklearn.linear_model.tests.test_coordinate_descent.build_dataset",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.test_enet_float_precision": {
  "data": {
   "lineno": 731,
   "symbols_in_volume": [
    "dtype",
    "numpy.float32",
    "numpy.float64",
    "numpy.hstack",
    "numpy.newaxis",
    "sklearn.linear_model.coordinate_descent.ElasticNet",
    "sklearn.linear_model.coordinate_descent.MultiTaskElasticNet",
    "sklearn.linear_model.tests.test_coordinate_descent.build_dataset",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.test_enet_l1_ratio": {
  "data": {
   "lineno": 785,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "sklearn.linear_model.coordinate_descent.ElasticNetCV",
    "sklearn.linear_model.coordinate_descent.MultiTaskElasticNetCV",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_raise_message",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.test_enet_multitarget": {
  "data": {
   "lineno": 437,
   "symbols_in_volume": [
    "range",
    "sklearn.linear_model.coordinate_descent.ElasticNet",
    "sklearn.linear_model.tests.test_coordinate_descent.build_dataset",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.test_enet_path": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "min",
    "numpy.newaxis",
    "sklearn.linear_model.coordinate_descent.ElasticNetCV",
    "sklearn.linear_model.coordinate_descent.MultiTaskElasticNetCV",
    "sklearn.linear_model.tests.test_coordinate_descent.build_dataset",
    "sklearn.linear_model.tests.test_coordinate_descent.pytest",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_greater",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.test_enet_path_positive": {
  "data": {
   "lineno": 637,
   "symbols_in_volume": [
    "ValueError",
    "numpy.all",
    "path",
    "sklearn.linear_model.coordinate_descent.enet_path",
    "sklearn.linear_model.coordinate_descent.lasso_path",
    "sklearn.linear_model.tests.test_coordinate_descent.build_dataset",
    "sklearn.utils.testing.assert_raises",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.test_enet_positive_constraint": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": [
    "min",
    "sklearn.linear_model.coordinate_descent.ElasticNet",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.test_enet_toy": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.dot",
    "sklearn.linear_model.coordinate_descent.ElasticNet",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.test_lasso_alpha_warning": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": [
    "UserWarning",
    "sklearn.linear_model.coordinate_descent.Lasso",
    "sklearn.utils.testing.assert_warns"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.test_lasso_cv": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "mse_lars",
    "numpy.abs",
    "numpy.searchsorted",
    "numpy.testing.assert_approx_equal",
    "scipy.interpolate.interp1d",
    "sklearn.linear_model.LassoLarsCV",
    "sklearn.linear_model.coordinate_descent.LassoCV",
    "sklearn.linear_model.tests.test_coordinate_descent.build_dataset",
    "sklearn.linear_model.tests.test_coordinate_descent.pytest",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_greater",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.test_lasso_cv_positive_constraint": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "min",
    "sklearn.linear_model.LassoCV",
    "sklearn.linear_model.tests.test_coordinate_descent.build_dataset",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.test_lasso_cv_with_some_model_selection": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "sklearn.datasets.load_diabetes",
    "sklearn.linear_model.LassoCV",
    "sklearn.model_selection.StratifiedKFold",
    "sklearn.pipeline.make_pipeline",
    "sklearn.preprocessing.StandardScaler"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.test_lasso_non_float_y": {
  "data": {
   "lineno": 718,
   "symbols_in_volume": [
    "model",
    "sklearn.linear_model.coordinate_descent.ElasticNet",
    "sklearn.linear_model.coordinate_descent.Lasso",
    "sklearn.linear_model.tests.test_coordinate_descent.pytest",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.test_lasso_path_return_models_vs_new_return_gives_same_coefficients": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "coef_path_cont_lars",
    "coef_path_cont_lasso",
    "numpy.array",
    "scipy.interpolate.interp1d",
    "sklearn.linear_model.coordinate_descent.lasso_path",
    "sklearn.linear_model.lars_path",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.test_lasso_positive_constraint": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": [
    "min",
    "sklearn.linear_model.coordinate_descent.Lasso",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.test_lasso_readonly_data": {
  "data": {
   "lineno": 414,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.linear_model.coordinate_descent.Lasso",
    "sklearn.utils.testing.TempMemmap",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.test_lasso_toy": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "sklearn.linear_model.coordinate_descent.Lasso",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.test_lasso_zero": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "sklearn.linear_model.coordinate_descent.Lasso",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.test_multi_task_lasso_and_enet": {
  "data": {
   "lineno": 398,
   "symbols_in_volume": [
    "numpy.c_",
    "sklearn.exceptions.ConvergenceWarning",
    "sklearn.linear_model.coordinate_descent.MultiTaskElasticNet",
    "sklearn.linear_model.coordinate_descent.MultiTaskLasso",
    "sklearn.linear_model.tests.test_coordinate_descent.build_dataset",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_true",
    "sklearn.utils.testing.assert_warns_message"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.test_multi_task_lasso_readonly_data": {
  "data": {
   "lineno": 427,
   "symbols_in_volume": [
    "numpy.c_",
    "sklearn.linear_model.coordinate_descent.MultiTaskLasso",
    "sklearn.linear_model.tests.test_coordinate_descent.build_dataset",
    "sklearn.utils.testing.TempMemmap",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.test_multioutput_enetcv_error": {
  "data": {
   "lineno": 453,
   "symbols_in_volume": [
    "ValueError",
    "numpy.random.RandomState",
    "sklearn.linear_model.coordinate_descent.ElasticNetCV",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.test_multitask_enet_and_lasso_cv": {
  "data": {
   "lineno": 461,
   "symbols_in_volume": [
    "len",
    "sklearn.linear_model.coordinate_descent.MultiTaskElasticNetCV",
    "sklearn.linear_model.coordinate_descent.MultiTaskLassoCV",
    "sklearn.linear_model.tests.test_coordinate_descent.build_dataset",
    "sklearn.linear_model.tests.test_coordinate_descent.pytest",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.test_overrided_gram_matrix": {
  "data": {
   "lineno": 706,
   "symbols_in_volume": [
    "UserWarning",
    "sklearn.linear_model.coordinate_descent.ElasticNet",
    "sklearn.linear_model.tests.test_coordinate_descent.build_dataset",
    "sklearn.utils.testing.assert_warns_message"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.test_path_parameters": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": [
    "len",
    "sklearn.linear_model.coordinate_descent.ElasticNetCV",
    "sklearn.linear_model.tests.test_coordinate_descent.build_dataset",
    "sklearn.linear_model.tests.test_coordinate_descent.pytest",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.test_precompute_invalid_argument": {
  "data": {
   "lineno": 533,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.linear_model.LassoCV",
    "sklearn.linear_model.coordinate_descent.ElasticNet",
    "sklearn.linear_model.coordinate_descent.ElasticNetCV",
    "sklearn.linear_model.tests.test_coordinate_descent.build_dataset",
    "sklearn.linear_model.tests.test_coordinate_descent.pytest",
    "sklearn.utils.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.test_random_descent": {
  "data": {
   "lineno": 592,
   "symbols_in_volume": [
    "ValueError",
    "numpy.hstack",
    "numpy.newaxis",
    "scipy.sparse.csr_matrix",
    "sklearn.linear_model.coordinate_descent.ElasticNet",
    "sklearn.linear_model.coordinate_descent.MultiTaskElasticNet",
    "sklearn.linear_model.tests.test_coordinate_descent.build_dataset",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.test_sparse_dense_descent_paths": {
  "data": {
   "lineno": 654,
   "symbols_in_volume": [
    "path",
    "scipy.sparse.csr_matrix",
    "sklearn.linear_model.coordinate_descent.enet_path",
    "sklearn.linear_model.coordinate_descent.lasso_path",
    "sklearn.linear_model.tests.test_coordinate_descent.build_dataset",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.test_sparse_input_dtype_enet_and_lassocv": {
  "data": {
   "lineno": 515,
   "symbols_in_volume": [
    "numpy.float32",
    "scipy.sparse.csr_matrix",
    "sklearn.linear_model.LassoCV",
    "sklearn.linear_model.coordinate_descent.ElasticNetCV",
    "sklearn.linear_model.tests.test_coordinate_descent.build_dataset",
    "sklearn.linear_model.tests.test_coordinate_descent.pytest",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.test_uniform_targets": {
  "data": {
   "lineno": 366,
   "symbols_in_volume": [
    "float",
    "numpy.empty",
    "numpy.finfo",
    "numpy.random.RandomState",
    "sklearn.linear_model.LassoCV",
    "sklearn.linear_model.coordinate_descent.ElasticNetCV",
    "sklearn.linear_model.coordinate_descent.MultiTaskElasticNetCV",
    "sklearn.linear_model.coordinate_descent.MultiTaskLassoCV",
    "sklearn.linear_model.tests.test_coordinate_descent.pytest",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.test_warm_start": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": [
    "sklearn.linear_model.coordinate_descent.ElasticNet",
    "sklearn.linear_model.tests.test_coordinate_descent.build_dataset",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.test_warm_start_convergence": {
  "data": {
   "lineno": 546,
   "symbols_in_volume": [
    "sklearn.linear_model.coordinate_descent.ElasticNet",
    "sklearn.linear_model.tests.test_coordinate_descent.build_dataset",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_greater"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.test_warm_start_convergence_with_regularizer_decrement": {
  "data": {
   "lineno": 568,
   "symbols_in_volume": [
    "copy.deepcopy",
    "sklearn.datasets.load_boston",
    "sklearn.linear_model.coordinate_descent.ElasticNet",
    "sklearn.utils.testing.assert_greater"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_huber": {
  "data": {},
  "type": "module"
 },
 "sklearn.linear_model.tests.test_huber.HuberRegressor": {
  "data": {
   "shadows": "sklearn.linear_model.HuberRegressor"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_huber.LinearRegression": {
  "data": {
   "shadows": "sklearn.linear_model.LinearRegression"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_huber.Ridge": {
  "data": {
   "shadows": "sklearn.linear_model.Ridge"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_huber.SGDRegressor": {
  "data": {
   "shadows": "sklearn.linear_model.SGDRegressor"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_huber._huber_loss_and_gradient": {
  "data": {
   "shadows": "sklearn.linear_model.huber._huber_loss_and_gradient"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_huber.assert_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_huber.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_huber.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_huber.assert_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_huber.assert_false": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_false"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_huber.assert_greater": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_greater"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_huber.make_regression": {
  "data": {
   "shadows": "sklearn.datasets.make_regression"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_huber.make_regression_with_outliers": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "int",
    "numpy.random.RandomState",
    "sklearn.datasets.make_regression"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_huber.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_huber.optimize": {
  "data": {
   "shadows": "scipy.optimize"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_huber.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_huber.test_huber_and_sgd_same_results": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "sklearn.linear_model.HuberRegressor",
    "sklearn.linear_model.SGDRegressor",
    "sklearn.linear_model.tests.test_huber.make_regression_with_outliers",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_huber.test_huber_better_r2_score": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.dot",
    "sklearn.linear_model.HuberRegressor",
    "sklearn.linear_model.Ridge",
    "sklearn.linear_model.tests.test_huber.make_regression_with_outliers",
    "sklearn.utils.testing.assert_greater"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_huber.test_huber_equals_lr_for_high_epsilon": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "sklearn.linear_model.HuberRegressor",
    "sklearn.linear_model.LinearRegression",
    "sklearn.linear_model.tests.test_huber.make_regression_with_outliers",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_huber.test_huber_gradient": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.random.RandomState",
    "range",
    "scipy.optimize.check_grad",
    "sklearn.linear_model.huber._huber_loss_and_gradient",
    "sklearn.linear_model.tests.test_huber.make_regression_with_outliers",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_huber.test_huber_max_iter": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "sklearn.linear_model.HuberRegressor",
    "sklearn.linear_model.tests.test_huber.make_regression_with_outliers"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_huber.test_huber_sample_weights": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "max",
    "numpy.abs",
    "numpy.concatenate",
    "numpy.mean",
    "numpy.ones",
    "numpy.vstack",
    "scipy.sparse.csr_matrix",
    "sklearn.linear_model.HuberRegressor",
    "sklearn.linear_model.tests.test_huber.make_regression_with_outliers",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_huber.test_huber_scaling_invariant": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "numpy.all",
    "sklearn.linear_model.HuberRegressor",
    "sklearn.linear_model.tests.test_huber.make_regression_with_outliers",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_false"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_huber.test_huber_sparse": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "scipy.sparse.csr_matrix",
    "sklearn.linear_model.HuberRegressor",
    "sklearn.linear_model.tests.test_huber.make_regression_with_outliers",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_huber.test_huber_warm_start": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "sklearn.linear_model.HuberRegressor",
    "sklearn.linear_model.tests.test_huber.make_regression_with_outliers",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_least_angle": {
  "data": {
   "symbols_in_volume": [
    "sklearn.datasets.load_diabetes",
    "sklearn.linear_model.tests.test_least_angle.diabetes"
   ]
  },
  "type": "module"
 },
 "sklearn.linear_model.tests.test_least_angle.ConvergenceWarning": {
  "data": {
   "shadows": "sklearn.exceptions.ConvergenceWarning"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_least_angle.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_least_angle.StringIO": {
  "data": {
   "shadows": "sklearn.externals.six.moves.cStringIO"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_least_angle.TempMemmap": {
  "data": {
   "shadows": "sklearn.utils.testing.TempMemmap"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_least_angle._lars_path_residues": {
  "data": {
   "shadows": "sklearn.linear_model.least_angle._lars_path_residues"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_least_angle.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_least_angle.assert_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_least_angle.assert_false": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_false"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_least_angle.assert_greater": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_greater"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_least_angle.assert_less": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_less"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_least_angle.assert_raises": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_least_angle.assert_true": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_true"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_least_angle.assert_warns": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_warns"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_least_angle.datasets": {
  "data": {
   "shadows": "sklearn.datasets"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_least_angle.default_parameter": {
  "data": {
   "lineno": 521
  },
  "type": "constant"
 },
 "sklearn.linear_model.tests.test_least_angle.diabetes": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "sklearn.linear_model.tests.test_least_angle.estimator_parameter_map": {
  "data": {
   "lineno": 523
  },
  "type": "constant"
 },
 "sklearn.linear_model.tests.test_least_angle.ignore_warnings": {
  "data": {
   "shadows": "sklearn.utils.testing.ignore_warnings"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_least_angle.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_least_angle.linear_model": {
  "data": {
   "shadows": "sklearn.linear_model"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_least_angle.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_least_angle.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_least_angle.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_least_angle.test_all_precomputed": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "numpy.dot",
    "sklearn.linear_model.lars_path",
    "sklearn.utils.testing.assert_array_almost_equal",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_least_angle.test_collinearity": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "f",
    "numpy.array",
    "numpy.dot",
    "numpy.isnan",
    "numpy.random.RandomState",
    "numpy.zeros",
    "numpy.zeros_like",
    "sklearn.linear_model.lars_path",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_less",
    "sklearn.utils.testing.assert_true",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_least_angle.test_estimatorclasses_positive_constraint": {
  "data": {
   "lineno": 528,
   "symbols_in_volume": [
    "getattr",
    "min",
    "sklearn.linear_model",
    "sklearn.linear_model.tests.test_least_angle.default_parameter",
    "sklearn.linear_model.tests.test_least_angle.diabetes",
    "sklearn.linear_model.tests.test_least_angle.estimator_parameter_map",
    "sklearn.linear_model.tests.test_least_angle.pytest",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_least_angle.test_lars_add_features": {
  "data": {
   "lineno": 371,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.arange",
    "numpy.isfinite",
    "numpy.newaxis",
    "sklearn.linear_model.Lars",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_least_angle.test_lars_cv": {
  "data": {
   "lineno": 420,
   "symbols_in_volume": [
    "hasattr",
    "numpy.testing.assert_array_less",
    "sklearn.linear_model.LassoLarsCV",
    "sklearn.linear_model.tests.test_least_angle.diabetes",
    "sklearn.linear_model.tests.test_least_angle.pytest",
    "sklearn.utils.testing.assert_false"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_least_angle.test_lars_cv_max_iter": {
  "data": {
   "lineno": 437,
   "symbols_in_volume": [
    "len",
    "numpy.c_",
    "numpy.random.RandomState",
    "sklearn.linear_model.LassoLarsCV",
    "sklearn.linear_model.tests.test_least_angle.diabetes",
    "sklearn.linear_model.tests.test_least_angle.pytest",
    "sklearn.linear_model.tests.test_least_angle.warnings",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_least_angle.test_lars_lstsq": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "distutils.version.LooseVersion",
    "numpy.__version__",
    "numpy.linalg.lstsq",
    "sklearn.linear_model.LassoLars",
    "sklearn.linear_model.tests.test_least_angle.diabetes",
    "sklearn.linear_model.tests.test_least_angle.pytest",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_least_angle.test_lars_n_nonzero_coefs": {
  "data": {
   "lineno": 382,
   "symbols_in_volume": [
    "len",
    "sklearn.linear_model.Lars",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_least_angle.test_lars_path_positive_constraint": {
  "data": {
   "lineno": 485,
   "symbols_in_volume": [
    "DeprecationWarning",
    "sklearn.linear_model.lars_path",
    "sklearn.linear_model.tests.test_least_angle.diabetes",
    "sklearn.linear_model.tests.test_least_angle.pytest",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_least_angle.test_lars_path_readonly_data": {
  "data": {
   "lineno": 474,
   "symbols_in_volume": [
    "sklearn.linear_model.least_angle._lars_path_residues",
    "sklearn.model_selection.train_test_split",
    "sklearn.utils.testing.TempMemmap"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_least_angle.test_lars_precompute": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "classifier",
    "numpy.dot",
    "sklearn.linear_model.Lars",
    "sklearn.linear_model.LarsCV",
    "sklearn.linear_model.LassoLarsIC",
    "sklearn.linear_model.tests.test_least_angle.pytest",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_least_angle.test_lasso_gives_lstsq_solution": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "numpy.linalg.lstsq",
    "sklearn.linear_model.lars_path",
    "sklearn.linear_model.tests.test_least_angle.pytest",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_least_angle.test_lasso_lars_ic": {
  "data": {
   "lineno": 450,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.c_",
    "numpy.max",
    "numpy.random.RandomState",
    "numpy.where",
    "sklearn.linear_model.LassoLarsIC",
    "sklearn.linear_model.tests.test_least_angle.diabetes",
    "sklearn.utils.testing.assert_greater",
    "sklearn.utils.testing.assert_less",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_least_angle.test_lasso_lars_path_length": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.diff",
    "sklearn.linear_model.LassoLars",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_least_angle.test_lasso_lars_vs_R_implementation": {
  "data": {
   "lineno": 596,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.mean",
    "numpy.newaxis",
    "numpy.sqrt",
    "numpy.sum",
    "sklearn.linear_model.LassoLars",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_least_angle.test_lasso_lars_vs_lasso_cd": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "numpy.linspace",
    "scipy.linalg.norm",
    "sklearn.linear_model.Lasso",
    "sklearn.linear_model.LassoLars",
    "sklearn.linear_model.lars_path",
    "sklearn.linear_model.tests.test_least_angle.diabetes",
    "sklearn.utils.testing.assert_less",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_least_angle.test_lasso_lars_vs_lasso_cd_early_stopping": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "scipy.linalg.norm",
    "sklearn.linear_model.Lasso",
    "sklearn.linear_model.lars_path",
    "sklearn.utils.testing.assert_less"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_least_angle.test_lasso_lars_vs_lasso_cd_ill_conditioned": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.dot",
    "numpy.random.RandomState",
    "numpy.sign",
    "numpy.zeros",
    "sklearn.linear_model.lars_path",
    "sklearn.linear_model.lasso_path",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_least_angle.test_lasso_lars_vs_lasso_cd_ill_conditioned2": {
  "data": {
   "lineno": 342,
   "symbols_in_volume": [
    "objective_function",
    "sklearn.exceptions.ConvergenceWarning",
    "sklearn.linear_model.Lasso",
    "sklearn.linear_model.LassoLars",
    "sklearn.utils.testing.assert_less",
    "sklearn.utils.testing.assert_warns"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_least_angle.test_lasso_lars_vs_lasso_cd_ill_conditioned2.objective_function": {
  "data": {
   "lineno": 355,
   "symbols_in_volume": [
    "len",
    "numpy.dot",
    "scipy.linalg.norm"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_least_angle.test_lasso_lars_vs_lasso_cd_positive": {
  "data": {
   "lineno": 544,
   "symbols_in_volume": [
    "numpy.linspace",
    "scipy.linalg.norm",
    "sklearn.linear_model.Lasso",
    "sklearn.linear_model.LassoLars",
    "sklearn.linear_model.lars_path",
    "sklearn.linear_model.tests.test_least_angle.diabetes",
    "sklearn.utils.testing.assert_less",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_least_angle.test_multitarget": {
  "data": {
   "lineno": 391,
   "symbols_in_volume": [
    "numpy.vstack",
    "range",
    "sklearn.linear_model.Lars",
    "sklearn.linear_model.LassoLars",
    "sklearn.linear_model.tests.test_least_angle.diabetes",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_least_angle.test_no_path": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "sklearn.linear_model.lars_path",
    "sklearn.linear_model.tests.test_least_angle.diabetes",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_least_angle.test_no_path_all_precomputed": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "numpy.dot",
    "print",
    "sklearn.linear_model.lars_path",
    "sklearn.linear_model.tests.test_least_angle.diabetes",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_least_angle.test_no_path_precomputed": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "numpy.dot",
    "sklearn.linear_model.lars_path",
    "sklearn.linear_model.tests.test_least_angle.diabetes",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_least_angle.test_rank_deficient_design": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "numpy.dot",
    "scipy.linalg.norm",
    "sklearn.linear_model.Lasso",
    "sklearn.linear_model.LassoLars",
    "sklearn.utils.testing.assert_less"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_least_angle.test_simple": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "abs",
    "enumerate",
    "len",
    "numpy.dot",
    "numpy.max",
    "sklearn.externals.six.moves.cStringIO",
    "sklearn.linear_model.lars_path",
    "sklearn.linear_model.tests.test_least_angle.diabetes",
    "sklearn.linear_model.tests.test_least_angle.sys",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_least_angle.test_simple_precomputed": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "abs",
    "enumerate",
    "len",
    "numpy.dot",
    "numpy.max",
    "sklearn.linear_model.lars_path",
    "sklearn.linear_model.tests.test_least_angle.diabetes",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_least_angle.test_singular_matrix": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.linear_model.lars_path",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_least_angle.train_test_split": {
  "data": {
   "shadows": "sklearn.model_selection.train_test_split"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_least_angle.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_logistic": {
  "data": {
   "symbols_in_volume": [
    "scipy.sparse.csr_matrix",
    "sklearn.datasets.load_iris",
    "sklearn.linear_model.tests.test_logistic.X"
   ]
  },
  "type": "module"
 },
 "sklearn.linear_model.tests.test_logistic.ChangedBehaviorWarning": {
  "data": {
   "shadows": "sklearn.exceptions.ChangedBehaviorWarning"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_logistic.ConvergenceWarning": {
  "data": {
   "shadows": "sklearn.exceptions.ConvergenceWarning"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_logistic.LabelEncoder": {
  "data": {
   "shadows": "sklearn.preprocessing.LabelEncoder"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_logistic.LogisticRegression": {
  "data": {
   "shadows": "sklearn.linear_model.logistic.LogisticRegression"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_logistic.LogisticRegressionCV": {
  "data": {
   "shadows": "sklearn.linear_model.logistic.LogisticRegressionCV"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_logistic.StratifiedKFold": {
  "data": {
   "shadows": "sklearn.model_selection.StratifiedKFold"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_logistic.X": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "sklearn.linear_model.tests.test_logistic.X_sp": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "sklearn.linear_model.tests.test_logistic.Y1": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "sklearn.linear_model.tests.test_logistic.Y2": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "sklearn.linear_model.tests.test_logistic._IS_32BIT": {
  "data": {
   "shadows": "sklearn.utils._IS_32BIT"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_logistic._compute_class_weight_dictionary": {
  "data": {
   "lineno": 909,
   "symbols_in_volume": [
    "dict",
    "numpy.unique",
    "sklearn.utils.compute_class_weight",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic._log_reg_scoring_path": {
  "data": {
   "shadows": "sklearn.linear_model.logistic._log_reg_scoring_path"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_logistic._logistic_grad_hess": {
  "data": {
   "shadows": "sklearn.linear_model.logistic._logistic_grad_hess"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_logistic._logistic_loss": {
  "data": {
   "shadows": "sklearn.linear_model.logistic._logistic_loss"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_logistic._logistic_loss_and_grad": {
  "data": {
   "shadows": "sklearn.linear_model.logistic._logistic_loss_and_grad"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_logistic._multinomial_grad_hess": {
  "data": {
   "shadows": "sklearn.linear_model.logistic._multinomial_grad_hess"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_logistic.assert_allclose": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_allclose"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_logistic.assert_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_logistic.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_logistic.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_logistic.assert_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_logistic.assert_greater": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_greater"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_logistic.assert_no_warnings": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_no_warnings"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_logistic.assert_raise_message": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raise_message"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_logistic.assert_raises": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_logistic.assert_true": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_true"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_logistic.assert_warns": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_warns"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_logistic.assert_warns_message": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_warns_message"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_logistic.check_predictions": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "len",
    "numpy.ones",
    "numpy.unique",
    "sklearn.linear_model.tests.test_logistic.X",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.clone": {
  "data": {
   "shadows": "sklearn.base.clone"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_logistic.compute_class_weight": {
  "data": {
   "shadows": "sklearn.utils.compute_class_weight"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_logistic.get_scorer": {
  "data": {
   "shadows": "sklearn.metrics.scorer.get_scorer"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_logistic.ignore_warnings": {
  "data": {
   "shadows": "sklearn.utils.testing.ignore_warnings"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_logistic.iris": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "sklearn.linear_model.tests.test_logistic.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_logistic.load_iris": {
  "data": {
   "shadows": "sklearn.datasets.load_iris"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_logistic.log_loss": {
  "data": {
   "shadows": "sklearn.metrics.log_loss"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_logistic.logistic_regression_path": {
  "data": {
   "shadows": "sklearn.linear_model.logistic.logistic_regression_path"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_logistic.make_classification": {
  "data": {
   "shadows": "sklearn.datasets.make_classification"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_logistic.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_logistic.optimize": {
  "data": {
   "shadows": "scipy.optimize"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_logistic.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_logistic.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_logistic.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_logistic.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_logistic.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_logistic.test_check_solver_option": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "LR",
    "ValueError",
    "sklearn.linear_model.logistic.LogisticRegression",
    "sklearn.linear_model.logistic.LogisticRegressionCV",
    "sklearn.linear_model.tests.test_logistic.X",
    "sklearn.linear_model.tests.test_logistic.iris",
    "sklearn.linear_model.tests.test_logistic.pytest",
    "sklearn.utils.testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_consistency_path": {
  "data": {
   "lineno": 371,
   "symbols_in_volume": [
    "enumerate",
    "f",
    "numpy.concatenate",
    "numpy.logspace",
    "numpy.random.RandomState",
    "sklearn.linear_model.logistic.LogisticRegression",
    "sklearn.linear_model.logistic.logistic_regression_path",
    "sklearn.linear_model.tests.test_logistic.X",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_dtype_match": {
  "data": {
   "lineno": 1322,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.float32",
    "numpy.float64",
    "scipy.sparse.csr_matrix",
    "sklearn.linear_model.logistic.LogisticRegression",
    "sklearn.linear_model.tests.test_logistic.X",
    "sklearn.linear_model.tests.test_logistic.Y1",
    "sklearn.linear_model.tests.test_logistic.os",
    "sklearn.linear_model.tests.test_logistic.pytest",
    "sklearn.utils._IS_32BIT",
    "sklearn.utils.testing.assert_allclose",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_error": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "LR",
    "ValueError",
    "sklearn.linear_model.logistic.LogisticRegression",
    "sklearn.linear_model.logistic.LogisticRegressionCV",
    "sklearn.linear_model.tests.test_logistic.X",
    "sklearn.linear_model.tests.test_logistic.Y1",
    "sklearn.linear_model.tests.test_logistic.pytest",
    "sklearn.utils.testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_inconsistent_input": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": [
    "ValueError",
    "numpy.ones",
    "numpy.random.RandomState",
    "sklearn.linear_model.logistic.LogisticRegression",
    "sklearn.linear_model.tests.test_logistic.X",
    "sklearn.linear_model.tests.test_logistic.pytest",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_intercept_logistic_helper": {
  "data": {
   "lineno": 637,
   "symbols_in_volume": [
    "hess",
    "hess_interp",
    "numpy.hstack",
    "numpy.newaxis",
    "numpy.ones",
    "numpy.random.RandomState",
    "sklearn.datasets.make_classification",
    "sklearn.linear_model.logistic._logistic_grad_hess",
    "sklearn.linear_model.logistic._logistic_loss",
    "sklearn.linear_model.tests.test_logistic.X",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_liblinear_decision_function_zero": {
  "data": {
   "lineno": 1028,
   "symbols_in_volume": [
    "numpy.zeros",
    "sklearn.datasets.make_classification",
    "sklearn.linear_model.logistic.LogisticRegression",
    "sklearn.linear_model.tests.test_logistic.X",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_liblinear_dual_random_state": {
  "data": {
   "lineno": 418,
   "symbols_in_volume": [
    "AssertionError",
    "sklearn.datasets.make_classification",
    "sklearn.linear_model.logistic.LogisticRegression",
    "sklearn.linear_model.tests.test_logistic.X",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_liblinear_logregcv_sparse": {
  "data": {
   "lineno": 1044,
   "symbols_in_volume": [
    "scipy.sparse.csr_matrix",
    "sklearn.datasets.make_classification",
    "sklearn.linear_model.logistic.LogisticRegressionCV",
    "sklearn.linear_model.tests.test_logistic.X",
    "sklearn.linear_model.tests.test_logistic.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_logistic_cv": {
  "data": {
   "lineno": 518,
   "symbols_in_volume": [
    "len",
    "list",
    "numpy.asarray",
    "numpy.random.RandomState",
    "numpy.sign",
    "sklearn.linear_model.logistic.LogisticRegression",
    "sklearn.linear_model.logistic.LogisticRegressionCV",
    "sklearn.linear_model.tests.test_logistic.pytest",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_logistic_cv_mock_scorer": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "MockScorer",
    "len",
    "sklearn.exceptions.ChangedBehaviorWarning",
    "sklearn.linear_model.logistic.LogisticRegressionCV",
    "sklearn.linear_model.tests.test_logistic.X",
    "sklearn.linear_model.tests.test_logistic.Y1",
    "sklearn.linear_model.tests.test_logistic.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_logistic_cv_mock_scorer.MockScorer": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "sklearn.linear_model.tests.test_logistic.test_logistic_cv_mock_scorer.MockScorer.__call__": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_logistic_cv_mock_scorer.MockScorer.__init__": {
  "data": {
   "lineno": 109
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_logistic_cv_multinomial_score": {
  "data": {
   "lineno": 546,
   "symbols_in_volume": [
    "numpy.arange",
    "scorer",
    "sklearn.datasets.make_classification",
    "sklearn.linear_model.logistic.LogisticRegression",
    "sklearn.linear_model.logistic._log_reg_scoring_path",
    "sklearn.linear_model.tests.test_logistic.X",
    "sklearn.linear_model.tests.test_logistic.pytest",
    "sklearn.metrics.scorer.get_scorer",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_logistic_cv_score_does_not_warn_by_default": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "len",
    "sklearn.linear_model.logistic.LogisticRegressionCV",
    "sklearn.linear_model.tests.test_logistic.X",
    "sklearn.linear_model.tests.test_logistic.Y1",
    "sklearn.linear_model.tests.test_logistic.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_logistic_cv_sparse": {
  "data": {
   "lineno": 620,
   "symbols_in_volume": [
    "scipy.sparse.csr_matrix",
    "sklearn.datasets.make_classification",
    "sklearn.linear_model.logistic.LogisticRegressionCV",
    "sklearn.linear_model.tests.test_logistic.X",
    "sklearn.linear_model.tests.test_logistic.pytest",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_logistic_grad_hess": {
  "data": {
   "lineno": 469,
   "symbols_in_volume": [
    "hess",
    "numpy.array",
    "numpy.full",
    "numpy.linspace",
    "numpy.newaxis",
    "numpy.random.RandomState",
    "numpy.sign",
    "numpy.zeros",
    "numpy.zeros_like",
    "scipy.linalg.lstsq",
    "scipy.sparse.csr_matrix",
    "sklearn.linear_model.logistic._logistic_grad_hess",
    "sklearn.linear_model.logistic._logistic_loss",
    "sklearn.linear_model.logistic._logistic_loss_and_grad",
    "sklearn.linear_model.tests.test_logistic.X",
    "sklearn.linear_model.tests.test_logistic.X_sp",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_logistic_loss_and_grad": {
  "data": {
   "lineno": 439,
   "symbols_in_volume": [
    "numpy.zeros",
    "scipy.optimize.approx_fprime",
    "scipy.sparse.csr_matrix",
    "sklearn.datasets.make_classification",
    "sklearn.linear_model.logistic._logistic_loss_and_grad",
    "sklearn.linear_model.tests.test_logistic.X",
    "sklearn.linear_model.tests.test_logistic.X_sp",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_logistic_regression_class_weights": {
  "data": {
   "lineno": 917,
   "symbols_in_volume": [
    "sklearn.linear_model.logistic.LogisticRegression",
    "sklearn.linear_model.tests.test_logistic.X",
    "sklearn.linear_model.tests.test_logistic._compute_class_weight_dictionary",
    "sklearn.linear_model.tests.test_logistic.iris",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_logistic_regression_multi_class_auto": {
  "data": {
   "lineno": 1402,
   "symbols_in_volume": [
    "fit",
    "numpy.allclose",
    "sklearn.linear_model.logistic.LogisticRegression",
    "sklearn.linear_model.logistic.LogisticRegressionCV",
    "sklearn.linear_model.tests.test_logistic.X",
    "sklearn.linear_model.tests.test_logistic.iris",
    "sklearn.linear_model.tests.test_logistic.pytest",
    "sklearn.linear_model.tests.test_logistic.sys"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_logistic_regression_multi_class_auto.fit": {
  "data": {
   "lineno": 1410,
   "symbols_in_volume": [
    "sklearn.base.clone",
    "sklearn.linear_model.tests.test_logistic.X"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_logistic_regression_multinomial": {
  "data": {
   "lineno": 949,
   "symbols_in_volume": [
    "sklearn.datasets.make_classification",
    "sklearn.linear_model.logistic.LogisticRegression",
    "sklearn.linear_model.logistic.LogisticRegressionCV",
    "sklearn.linear_model.tests.test_logistic.X",
    "sklearn.linear_model.tests.test_logistic.pytest",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_logistic_regression_path_coefs_multinomial": {
  "data": {
   "lineno": 1382,
   "symbols_in_volume": [
    "AssertionError",
    "sklearn.datasets.make_classification",
    "sklearn.linear_model.logistic.logistic_regression_path",
    "sklearn.linear_model.tests.test_logistic.X",
    "sklearn.linear_model.tests.test_logistic.pytest",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_logistic_regression_path_convergence_fail": {
  "data": {
   "lineno": 409,
   "symbols_in_volume": [
    "numpy.concatenate",
    "numpy.random.RandomState",
    "sklearn.exceptions.ConvergenceWarning",
    "sklearn.linear_model.logistic.logistic_regression_path",
    "sklearn.linear_model.tests.test_logistic.X",
    "sklearn.utils.testing.assert_warns"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_logistic_regression_sample_weights": {
  "data": {
   "lineno": 829,
   "symbols_in_volume": [
    "LR",
    "numpy.ones",
    "sklearn.datasets.make_classification",
    "sklearn.linear_model.logistic.LogisticRegression",
    "sklearn.linear_model.logistic.LogisticRegressionCV",
    "sklearn.linear_model.tests.test_logistic.X",
    "sklearn.linear_model.tests.test_logistic.pytest",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_logistic_regression_solvers": {
  "data": {
   "lineno": 730,
   "symbols_in_volume": [
    "dict",
    "sklearn.datasets.make_classification",
    "sklearn.linear_model.logistic.LogisticRegression",
    "sklearn.linear_model.tests.test_logistic.X",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_logistic_regression_solvers_multiclass": {
  "data": {
   "lineno": 756,
   "symbols_in_volume": [
    "dict",
    "sklearn.datasets.make_classification",
    "sklearn.linear_model.logistic.LogisticRegression",
    "sklearn.linear_model.tests.test_logistic.X",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_logistic_regression_warnings": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "FutureWarning",
    "model",
    "sklearn.linear_model.logistic.LogisticRegression",
    "sklearn.linear_model.logistic.LogisticRegressionCV",
    "sklearn.linear_model.tests.test_logistic.iris",
    "sklearn.linear_model.tests.test_logistic.pytest",
    "sklearn.utils.testing.assert_no_warnings",
    "sklearn.utils.testing.assert_warns_message"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_logistic_regressioncv_class_weights": {
  "data": {
   "lineno": 784,
   "symbols_in_volume": [
    "len",
    "sklearn.datasets.make_classification",
    "sklearn.linear_model.logistic.LogisticRegressionCV",
    "sklearn.linear_model.tests.test_logistic.X",
    "sklearn.linear_model.tests.test_logistic.pytest",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_logreg_cv_penalty": {
  "data": {
   "lineno": 1150,
   "symbols_in_volume": [
    "numpy.count_nonzero",
    "sklearn.datasets.make_classification",
    "sklearn.linear_model.logistic.LogisticRegression",
    "sklearn.linear_model.logistic.LogisticRegressionCV",
    "sklearn.linear_model.tests.test_logistic.X",
    "sklearn.linear_model.tests.test_logistic.pytest",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_logreg_intercept_scaling": {
  "data": {
   "lineno": 1063,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.linear_model.logistic.LogisticRegression",
    "sklearn.linear_model.tests.test_logistic.X",
    "sklearn.linear_model.tests.test_logistic.Y1",
    "sklearn.utils.testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_logreg_intercept_scaling_zero": {
  "data": {
   "lineno": 1075,
   "symbols_in_volume": [
    "sklearn.linear_model.logistic.LogisticRegression",
    "sklearn.linear_model.tests.test_logistic.X",
    "sklearn.linear_model.tests.test_logistic.Y1",
    "sklearn.linear_model.tests.test_logistic.pytest",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_logreg_l1": {
  "data": {
   "lineno": 1085,
   "symbols_in_volume": [
    "numpy.concatenate",
    "numpy.ones",
    "numpy.random.RandomState",
    "numpy.zeros",
    "sklearn.datasets.make_classification",
    "sklearn.linear_model.logistic.LogisticRegression",
    "sklearn.linear_model.tests.test_logistic.X",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_logreg_l1_sparse_data": {
  "data": {
   "lineno": 1113,
   "symbols_in_volume": [
    "numpy.concatenate",
    "numpy.random.RandomState",
    "numpy.zeros",
    "scipy.sparse.csr_matrix",
    "sklearn.datasets.make_classification",
    "sklearn.linear_model.logistic.LogisticRegression",
    "sklearn.linear_model.tests.test_logistic.X",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_logreg_predict_proba_multinomial": {
  "data": {
   "lineno": 1162,
   "symbols_in_volume": [
    "sklearn.datasets.make_classification",
    "sklearn.linear_model.logistic.LogisticRegression",
    "sklearn.linear_model.tests.test_logistic.X",
    "sklearn.metrics.log_loss",
    "sklearn.utils.testing.assert_greater"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_lr_liblinear_warning": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "UserWarning",
    "sklearn.linear_model.logistic.LogisticRegression",
    "sklearn.linear_model.tests.test_logistic.iris",
    "sklearn.utils.testing.assert_warns_message"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_max_iter": {
  "data": {
   "lineno": 1183,
   "symbols_in_volume": [
    "range",
    "sklearn.exceptions.ConvergenceWarning",
    "sklearn.linear_model.logistic.LogisticRegression",
    "sklearn.linear_model.tests.test_logistic.X",
    "sklearn.linear_model.tests.test_logistic.iris",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_warns"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_multinomial_binary": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "numpy.argmax",
    "numpy.array",
    "numpy.intp",
    "numpy.mean",
    "sklearn.linear_model.logistic.LogisticRegression",
    "sklearn.linear_model.tests.test_logistic.iris",
    "sklearn.linear_model.tests.test_logistic.pytest",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_greater"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_multinomial_binary_probabilities": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "numpy.c_",
    "numpy.exp",
    "sklearn.datasets.make_classification",
    "sklearn.linear_model.logistic.LogisticRegression",
    "sklearn.linear_model.tests.test_logistic.X",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_multinomial_grad_hess": {
  "data": {
   "lineno": 997,
   "symbols_in_volume": [
    "hessp",
    "numpy.argmax",
    "numpy.array",
    "numpy.dot",
    "numpy.linspace",
    "numpy.newaxis",
    "numpy.ones",
    "numpy.random.RandomState",
    "numpy.zeros",
    "range",
    "scipy.linalg.lstsq",
    "sklearn.linear_model.logistic._multinomial_grad_hess",
    "sklearn.linear_model.tests.test_logistic.X",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_multinomial_logistic_regression_string_inputs": {
  "data": {
   "lineno": 580,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.unique",
    "sklearn.datasets.make_classification",
    "sklearn.linear_model.logistic.LogisticRegression",
    "sklearn.linear_model.logistic.LogisticRegressionCV",
    "sklearn.linear_model.tests.test_logistic.pytest",
    "sklearn.preprocessing.LabelEncoder",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_equal",
    "sorted"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_multinomial_validation": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.linear_model.logistic.LogisticRegression",
    "sklearn.linear_model.tests.test_logistic.pytest",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_n_iter": {
  "data": {
   "lineno": 1202,
   "symbols_in_volume": [
    "numpy.unique",
    "sklearn.linear_model.logistic.LogisticRegression",
    "sklearn.linear_model.logistic.LogisticRegressionCV",
    "sklearn.linear_model.tests.test_logistic.X",
    "sklearn.linear_model.tests.test_logistic.iris",
    "sklearn.linear_model.tests.test_logistic.pytest",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_nan": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "numpy.float64",
    "numpy.nan",
    "sklearn.linear_model.logistic.LogisticRegression",
    "sklearn.linear_model.tests.test_logistic.X",
    "sklearn.linear_model.tests.test_logistic.Y1",
    "sklearn.linear_model.tests.test_logistic.pytest",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_ovr_multinomial_iris": {
  "data": {
   "lineno": 670,
   "symbols_in_volume": [
    "list",
    "numpy.asarray",
    "numpy.newaxis",
    "sklearn.linear_model.logistic.LogisticRegressionCV",
    "sklearn.linear_model.tests.test_logistic.iris",
    "sklearn.model_selection.StratifiedKFold",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_greater"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_predict_2_classes": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "sklearn.linear_model.logistic.LogisticRegression",
    "sklearn.linear_model.tests.test_logistic.X",
    "sklearn.linear_model.tests.test_logistic.X_sp",
    "sklearn.linear_model.tests.test_logistic.Y1",
    "sklearn.linear_model.tests.test_logistic.check_predictions",
    "sklearn.linear_model.tests.test_logistic.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_predict_3_classes": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "sklearn.linear_model.logistic.LogisticRegression",
    "sklearn.linear_model.tests.test_logistic.X",
    "sklearn.linear_model.tests.test_logistic.X_sp",
    "sklearn.linear_model.tests.test_logistic.Y2",
    "sklearn.linear_model.tests.test_logistic.check_predictions",
    "sklearn.linear_model.tests.test_logistic.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_predict_iris": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "len",
    "numpy.mean",
    "numpy.ones",
    "numpy.unique",
    "sklearn.linear_model.logistic.LogisticRegression",
    "sklearn.linear_model.tests.test_logistic.iris",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_greater"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_saga_sparse": {
  "data": {
   "lineno": 1053,
   "symbols_in_volume": [
    "scipy.sparse.csr_matrix",
    "sklearn.datasets.make_classification",
    "sklearn.linear_model.logistic.LogisticRegressionCV",
    "sklearn.linear_model.tests.test_logistic.X",
    "sklearn.linear_model.tests.test_logistic.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_saga_vs_liblinear": {
  "data": {
   "lineno": 1282,
   "symbols_in_volume": [
    "numpy.concatenate",
    "numpy.logspace",
    "scipy.sparse.csr_matrix",
    "sklearn.datasets.load_iris",
    "sklearn.datasets.make_classification",
    "sklearn.linear_model.logistic.LogisticRegression",
    "sklearn.linear_model.tests.test_logistic.X",
    "sklearn.linear_model.tests.test_logistic.iris",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_sparsify": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "scipy.sparse.coo_matrix",
    "scipy.sparse.issparse",
    "sklearn.linear_model.logistic.LogisticRegression",
    "sklearn.linear_model.tests.test_logistic.iris",
    "sklearn.linear_model.tests.test_logistic.pytest",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_warm_start": {
  "data": {
   "lineno": 1250,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.sum",
    "sklearn.exceptions.ConvergenceWarning",
    "sklearn.linear_model.logistic.LogisticRegression",
    "sklearn.linear_model.tests.test_logistic.X",
    "sklearn.linear_model.tests.test_logistic.iris",
    "sklearn.linear_model.tests.test_logistic.pytest",
    "sklearn.utils.testing.assert_greater",
    "sklearn.utils.testing.ignore_warnings",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_warm_start_converge_LR": {
  "data": {
   "lineno": 1361,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.concatenate",
    "numpy.random.RandomState",
    "range",
    "sklearn.linear_model.logistic.LogisticRegression",
    "sklearn.linear_model.tests.test_logistic.X",
    "sklearn.metrics.log_loss",
    "sklearn.utils.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_write_parameters": {
  "data": {
   "lineno": 349,
   "symbols_in_volume": [
    "sklearn.linear_model.logistic.LogisticRegression",
    "sklearn.linear_model.tests.test_logistic.X",
    "sklearn.linear_model.tests.test_logistic.Y1",
    "sklearn.linear_model.tests.test_logistic.pytest",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_omp": {
  "data": {
   "symbols_in_volume": [
    "numpy.dot",
    "sklearn.datasets.make_sparse_coded_signal"
   ]
  },
  "type": "module"
 },
 "sklearn.linear_model.tests.test_omp.LinearRegression": {
  "data": {
   "shadows": "sklearn.linear_model.LinearRegression"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_omp.OrthogonalMatchingPursuit": {
  "data": {
   "shadows": "sklearn.linear_model.OrthogonalMatchingPursuit"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_omp.OrthogonalMatchingPursuitCV": {
  "data": {
   "shadows": "sklearn.linear_model.OrthogonalMatchingPursuitCV"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_omp.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_omp.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_omp.assert_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_omp.assert_raises": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_omp.assert_true": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_true"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_omp.assert_warns": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_warns"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_omp.check_random_state": {
  "data": {
   "shadows": "sklearn.utils.check_random_state"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_omp.ignore_warnings": {
  "data": {
   "shadows": "sklearn.utils.testing.ignore_warnings"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_omp.make_sparse_coded_signal": {
  "data": {
   "shadows": "sklearn.datasets.make_sparse_coded_signal"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_omp.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_omp.orthogonal_mp": {
  "data": {
   "shadows": "sklearn.linear_model.orthogonal_mp"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_omp.orthogonal_mp_gram": {
  "data": {
   "shadows": "sklearn.linear_model.orthogonal_mp_gram"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_omp.test_bad_input": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.linear_model.orthogonal_mp",
    "sklearn.linear_model.orthogonal_mp_gram",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_omp.test_correct_shapes": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "sklearn.linear_model.orthogonal_mp",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_omp.test_correct_shapes_gram": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "sklearn.linear_model.orthogonal_mp_gram",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_omp.test_estimator": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "numpy.count_nonzero",
    "sklearn.linear_model.OrthogonalMatchingPursuit",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_omp.test_identical_regressors": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "RuntimeWarning",
    "numpy.dot",
    "numpy.zeros",
    "sklearn.linear_model.orthogonal_mp",
    "sklearn.utils.testing.assert_warns"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_omp.test_n_nonzero_coefs": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "numpy.count_nonzero",
    "sklearn.linear_model.orthogonal_mp",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_omp.test_no_atoms": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.dot",
    "numpy.zeros_like",
    "sklearn.linear_model.orthogonal_mp",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_omp.test_omp_cv": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "sklearn.linear_model.OrthogonalMatchingPursuit",
    "sklearn.linear_model.OrthogonalMatchingPursuitCV",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_omp.test_omp_path": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "sklearn.linear_model.orthogonal_mp",
    "sklearn.linear_model.orthogonal_mp_gram",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_omp.test_omp_reaches_least_squares": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "sklearn.linear_model.LinearRegression",
    "sklearn.linear_model.OrthogonalMatchingPursuit",
    "sklearn.utils.check_random_state",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_omp.test_omp_return_path_prop_with_gram": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "sklearn.linear_model.orthogonal_mp",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_omp.test_orthogonal_mp_gram_readonly": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "numpy.flatnonzero",
    "sklearn.linear_model.orthogonal_mp_gram",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_omp.test_perfect_signal_recovery": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "numpy.flatnonzero",
    "sklearn.linear_model.orthogonal_mp",
    "sklearn.linear_model.orthogonal_mp_gram",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_omp.test_swapped_regressors": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.flatnonzero",
    "numpy.zeros",
    "sklearn.linear_model.orthogonal_mp",
    "sklearn.linear_model.orthogonal_mp_gram",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_omp.test_tol": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.sum",
    "sklearn.linear_model.orthogonal_mp",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_omp.test_unreachable_accuracy": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "RuntimeWarning",
    "sklearn.linear_model.orthogonal_mp",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_warns"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_omp.test_with_without_gram": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "sklearn.linear_model.orthogonal_mp",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_omp.test_with_without_gram_tol": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "sklearn.linear_model.orthogonal_mp",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_passive_aggressive": {
  "data": {
   "symbols_in_volume": [
    "numpy.arange",
    "scipy.sparse.csr_matrix",
    "sklearn.datasets.load_iris",
    "sklearn.linear_model.tests.test_passive_aggressive.X",
    "sklearn.linear_model.tests.test_passive_aggressive.indices",
    "sklearn.linear_model.tests.test_passive_aggressive.iris",
    "sklearn.linear_model.tests.test_passive_aggressive.random_state",
    "sklearn.utils.check_random_state"
   ]
  },
  "type": "module"
 },
 "sklearn.linear_model.tests.test_passive_aggressive.ClassifierMixin": {
  "data": {
   "shadows": "sklearn.base.ClassifierMixin"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_passive_aggressive.MyPassiveAggressive": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "sklearn.base.ClassifierMixin"
   ]
  },
  "type": "class"
 },
 "sklearn.linear_model.tests.test_passive_aggressive.MyPassiveAggressive.__init__": {
  "data": {
   "lineno": 30
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_passive_aggressive.MyPassiveAggressive.fit": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "max",
    "min",
    "numpy.abs",
    "numpy.dot",
    "numpy.float64",
    "numpy.sign",
    "numpy.zeros",
    "range",
    "sklearn.linear_model.tests.test_passive_aggressive.X",
    "sklearn.linear_model.tests.test_passive_aggressive.y"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_passive_aggressive.MyPassiveAggressive.project": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "numpy.dot",
    "sklearn.linear_model.tests.test_passive_aggressive.X"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_passive_aggressive.PassiveAggressiveClassifier": {
  "data": {
   "shadows": "sklearn.linear_model.PassiveAggressiveClassifier"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_passive_aggressive.PassiveAggressiveRegressor": {
  "data": {
   "shadows": "sklearn.linear_model.PassiveAggressiveRegressor"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_passive_aggressive.X": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "sklearn.linear_model.tests.test_passive_aggressive.X_csr": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "sklearn.linear_model.tests.test_passive_aggressive.assert_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_passive_aggressive.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_passive_aggressive.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_passive_aggressive.assert_greater": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_greater"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_passive_aggressive.assert_less": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_less"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_passive_aggressive.assert_raises": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_passive_aggressive.assert_true": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_true"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_passive_aggressive.check_random_state": {
  "data": {
   "shadows": "sklearn.utils.check_random_state"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_passive_aggressive.indices": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "sklearn.linear_model.tests.test_passive_aggressive.iris": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "sklearn.linear_model.tests.test_passive_aggressive.load_iris": {
  "data": {
   "shadows": "sklearn.datasets.load_iris"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_passive_aggressive.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_passive_aggressive.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_passive_aggressive.random_state": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "sklearn.linear_model.tests.test_passive_aggressive.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_passive_aggressive.test_class_weights": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.linear_model.PassiveAggressiveClassifier",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_passive_aggressive.test_classifier_accuracy": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "hasattr",
    "sklearn.linear_model.PassiveAggressiveClassifier",
    "sklearn.linear_model.tests.test_passive_aggressive.X",
    "sklearn.linear_model.tests.test_passive_aggressive.X_csr",
    "sklearn.linear_model.tests.test_passive_aggressive.y",
    "sklearn.utils.testing.assert_greater",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_passive_aggressive.test_classifier_correctness": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "sklearn.linear_model.PassiveAggressiveClassifier",
    "sklearn.linear_model.tests.test_passive_aggressive.MyPassiveAggressive",
    "sklearn.linear_model.tests.test_passive_aggressive.X",
    "sklearn.linear_model.tests.test_passive_aggressive.X_csr",
    "sklearn.linear_model.tests.test_passive_aggressive.pytest",
    "sklearn.linear_model.tests.test_passive_aggressive.y",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_passive_aggressive.test_classifier_partial_fit": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "hasattr",
    "numpy.unique",
    "range",
    "sklearn.linear_model.PassiveAggressiveClassifier",
    "sklearn.linear_model.tests.test_passive_aggressive.X",
    "sklearn.linear_model.tests.test_passive_aggressive.X_csr",
    "sklearn.linear_model.tests.test_passive_aggressive.y",
    "sklearn.utils.testing.assert_greater",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_passive_aggressive.test_classifier_refit": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "numpy.unique",
    "sklearn.linear_model.PassiveAggressiveClassifier",
    "sklearn.linear_model.tests.test_passive_aggressive.X",
    "sklearn.linear_model.tests.test_passive_aggressive.iris",
    "sklearn.linear_model.tests.test_passive_aggressive.y",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_passive_aggressive.test_classifier_undefined_methods": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "AttributeError",
    "getattr",
    "sklearn.linear_model.PassiveAggressiveClassifier",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_passive_aggressive.test_equal_class_weight": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "sklearn.linear_model.PassiveAggressiveClassifier",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_passive_aggressive.test_partial_fit_weight_class_balanced": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "ValueError",
    "numpy.unique",
    "sklearn.linear_model.PassiveAggressiveClassifier",
    "sklearn.linear_model.tests.test_passive_aggressive.X",
    "sklearn.linear_model.tests.test_passive_aggressive.y",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_passive_aggressive.test_regressor_correctness": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "sklearn.linear_model.PassiveAggressiveRegressor",
    "sklearn.linear_model.tests.test_passive_aggressive.MyPassiveAggressive",
    "sklearn.linear_model.tests.test_passive_aggressive.X",
    "sklearn.linear_model.tests.test_passive_aggressive.X_csr",
    "sklearn.linear_model.tests.test_passive_aggressive.pytest",
    "sklearn.linear_model.tests.test_passive_aggressive.y",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_passive_aggressive.test_regressor_mse": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "hasattr",
    "numpy.mean",
    "sklearn.linear_model.PassiveAggressiveRegressor",
    "sklearn.linear_model.tests.test_passive_aggressive.X",
    "sklearn.linear_model.tests.test_passive_aggressive.X_csr",
    "sklearn.linear_model.tests.test_passive_aggressive.y",
    "sklearn.utils.testing.assert_less",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_passive_aggressive.test_regressor_partial_fit": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "hasattr",
    "numpy.mean",
    "range",
    "sklearn.linear_model.PassiveAggressiveRegressor",
    "sklearn.linear_model.tests.test_passive_aggressive.X",
    "sklearn.linear_model.tests.test_passive_aggressive.X_csr",
    "sklearn.linear_model.tests.test_passive_aggressive.y",
    "sklearn.utils.testing.assert_less",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_passive_aggressive.test_regressor_undefined_methods": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "AttributeError",
    "getattr",
    "sklearn.linear_model.PassiveAggressiveRegressor",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_passive_aggressive.test_wrong_class_weight_format": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "sklearn.linear_model.PassiveAggressiveClassifier",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_passive_aggressive.test_wrong_class_weight_label": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "sklearn.linear_model.PassiveAggressiveClassifier",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_passive_aggressive.y": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "sklearn.linear_model.tests.test_perceptron": {
  "data": {
   "symbols_in_volume": [
    "numpy.arange",
    "scipy.sparse.csr_matrix",
    "sklearn.datasets.load_iris",
    "sklearn.linear_model.tests.test_perceptron.X",
    "sklearn.linear_model.tests.test_perceptron.X_csr",
    "sklearn.linear_model.tests.test_perceptron.indices",
    "sklearn.linear_model.tests.test_perceptron.iris",
    "sklearn.linear_model.tests.test_perceptron.random_state",
    "sklearn.utils.check_random_state"
   ]
  },
  "type": "module"
 },
 "sklearn.linear_model.tests.test_perceptron.MyPerceptron": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "sklearn.linear_model.tests.test_perceptron.MyPerceptron.__init__": {
  "data": {
   "lineno": 24
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_perceptron.MyPerceptron.fit": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "numpy.float64",
    "numpy.zeros",
    "range",
    "sklearn.linear_model.tests.test_perceptron.X",
    "sklearn.linear_model.tests.test_perceptron.y"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_perceptron.MyPerceptron.predict": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "numpy.atleast_2d",
    "numpy.sign",
    "sklearn.linear_model.tests.test_perceptron.X"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_perceptron.MyPerceptron.project": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "numpy.dot",
    "sklearn.linear_model.tests.test_perceptron.X"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_perceptron.Perceptron": {
  "data": {
   "shadows": "sklearn.linear_model.Perceptron"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_perceptron.X": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "sklearn.linear_model.tests.test_perceptron.X_csr": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "sklearn.linear_model.tests.test_perceptron.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_perceptron.assert_greater": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_greater"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_perceptron.assert_raises": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_perceptron.check_random_state": {
  "data": {
   "shadows": "sklearn.utils.check_random_state"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_perceptron.indices": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "sklearn.linear_model.tests.test_perceptron.iris": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "sklearn.linear_model.tests.test_perceptron.load_iris": {
  "data": {
   "shadows": "sklearn.datasets.load_iris"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_perceptron.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_perceptron.random_state": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "sklearn.linear_model.tests.test_perceptron.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_perceptron.test_perceptron_accuracy": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "sklearn.linear_model.Perceptron",
    "sklearn.linear_model.tests.test_perceptron.X",
    "sklearn.linear_model.tests.test_perceptron.X_csr",
    "sklearn.linear_model.tests.test_perceptron.y",
    "sklearn.utils.testing.assert_greater"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_perceptron.test_perceptron_correctness": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "sklearn.linear_model.Perceptron",
    "sklearn.linear_model.tests.test_perceptron.MyPerceptron",
    "sklearn.linear_model.tests.test_perceptron.X",
    "sklearn.linear_model.tests.test_perceptron.y",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_perceptron.test_undefined_methods": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "AttributeError",
    "getattr",
    "sklearn.linear_model.Perceptron",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_perceptron.y": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "sklearn.linear_model.tests.test_randomized_l1": {
  "data": {
   "symbols_in_volume": [
    "sklearn.datasets.load_diabetes",
    "sklearn.feature_selection.f_regression",
    "sklearn.linear_model.tests.test_randomized_l1.X",
    "sklearn.linear_model.tests.test_randomized_l1.diabetes",
    "sklearn.linear_model.tests.test_randomized_l1.y",
    "sklearn.preprocessing.StandardScaler"
   ]
  },
  "type": "module"
 },
 "sklearn.linear_model.tests.test_randomized_l1.RandomizedLasso": {
  "data": {
   "shadows": "sklearn.linear_model.randomized_l1.RandomizedLasso"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_randomized_l1.RandomizedLogisticRegression": {
  "data": {
   "shadows": "sklearn.linear_model.randomized_l1.RandomizedLogisticRegression"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_randomized_l1.StandardScaler": {
  "data": {
   "shadows": "sklearn.preprocessing.StandardScaler"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_randomized_l1.X": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "sklearn.linear_model.tests.test_randomized_l1._preprocess_data": {
  "data": {
   "shadows": "sklearn.linear_model.base._preprocess_data"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_randomized_l1.assert_allclose": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_allclose"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_randomized_l1.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_randomized_l1.assert_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_randomized_l1.assert_raises": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_randomized_l1.assert_raises_regex": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises_regex"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_randomized_l1.assert_warns_message": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_warns_message"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_randomized_l1.diabetes": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "sklearn.linear_model.tests.test_randomized_l1.f_classif": {
  "data": {
   "shadows": "sklearn.feature_selection.f_classif"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_randomized_l1.f_regression": {
  "data": {
   "shadows": "sklearn.feature_selection.f_regression"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_randomized_l1.ignore_warnings": {
  "data": {
   "shadows": "sklearn.utils.testing.ignore_warnings"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_randomized_l1.lasso_stability_path": {
  "data": {
   "shadows": "sklearn.linear_model.randomized_l1.lasso_stability_path"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_randomized_l1.load_diabetes": {
  "data": {
   "shadows": "sklearn.datasets.load_diabetes"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_randomized_l1.load_iris": {
  "data": {
   "shadows": "sklearn.datasets.load_iris"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_randomized_l1.mkdtemp": {
  "data": {
   "shadows": "tempfile.mkdtemp"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_randomized_l1.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_randomized_l1.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_randomized_l1.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_randomized_l1.test_lasso_stability_path": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "DeprecationWarning",
    "numpy.argsort",
    "numpy.sum",
    "sklearn.linear_model.randomized_l1.lasso_stability_path",
    "sklearn.linear_model.tests.test_randomized_l1.X",
    "sklearn.linear_model.tests.test_randomized_l1.y",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_randomized_l1.test_randomized_lasso": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "DeprecationWarning",
    "ValueError",
    "numpy.argsort",
    "numpy.sum",
    "sklearn.linear_model.randomized_l1.RandomizedLasso",
    "sklearn.linear_model.tests.test_randomized_l1.X",
    "sklearn.linear_model.tests.test_randomized_l1.shutil",
    "sklearn.linear_model.tests.test_randomized_l1.y",
    "sklearn.utils.testing.assert_allclose",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_raises",
    "sklearn.utils.testing.ignore_warnings",
    "tempfile.mkdtemp"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_randomized_l1.test_randomized_lasso_error_memory": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "DeprecationWarning",
    "ValueError",
    "sklearn.linear_model.randomized_l1.RandomizedLasso",
    "sklearn.linear_model.tests.test_randomized_l1.X",
    "sklearn.linear_model.tests.test_randomized_l1.y",
    "sklearn.utils.testing.assert_raises_regex",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_randomized_l1.test_randomized_lasso_precompute": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "DeprecationWarning",
    "numpy.dot",
    "sklearn.linear_model.randomized_l1.RandomizedLasso",
    "sklearn.linear_model.tests.test_randomized_l1.X",
    "sklearn.linear_model.tests.test_randomized_l1.y",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_randomized_l1.test_randomized_logistic": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "DeprecationWarning",
    "ValueError",
    "numpy.argsort",
    "sklearn.datasets.load_iris",
    "sklearn.feature_selection.f_classif",
    "sklearn.linear_model.randomized_l1.RandomizedLogisticRegression",
    "sklearn.linear_model.tests.test_randomized_l1.X",
    "sklearn.linear_model.tests.test_randomized_l1.y",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_raises",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_randomized_l1.test_randomized_logistic_sparse": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "DeprecationWarning",
    "scipy.sparse.csr_matrix",
    "sklearn.datasets.load_iris",
    "sklearn.feature_selection.f_classif",
    "sklearn.linear_model.base._preprocess_data",
    "sklearn.linear_model.randomized_l1.RandomizedLogisticRegression",
    "sklearn.linear_model.tests.test_randomized_l1.X",
    "sklearn.linear_model.tests.test_randomized_l1.y",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_randomized_l1.test_warning_raised": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "DeprecationWarning",
    "sklearn.linear_model.randomized_l1.RandomizedLasso",
    "sklearn.linear_model.randomized_l1.RandomizedLogisticRegression",
    "sklearn.linear_model.randomized_l1.lasso_stability_path",
    "sklearn.linear_model.tests.test_randomized_l1.X",
    "sklearn.linear_model.tests.test_randomized_l1.y",
    "sklearn.utils.testing.assert_warns_message"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_randomized_l1.y": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "sklearn.linear_model.tests.test_ransac": {
  "data": {
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "numpy.column_stack",
    "numpy.newaxis",
    "numpy.random.RandomState",
    "numpy.unique",
    "sklearn.linear_model.tests.test_ransac.X",
    "sklearn.linear_model.tests.test_ransac.data",
    "sklearn.linear_model.tests.test_ransac.outliers",
    "sklearn.linear_model.tests.test_ransac.rng",
    "sklearn.linear_model.tests.test_ransac.y"
   ]
  },
  "type": "module"
 },
 "sklearn.linear_model.tests.test_ransac.ConvergenceWarning": {
  "data": {
   "shadows": "sklearn.exceptions.ConvergenceWarning"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_ransac.Lasso": {
  "data": {
   "shadows": "sklearn.linear_model.Lasso"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_ransac.LinearRegression": {
  "data": {
   "shadows": "sklearn.linear_model.LinearRegression"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_ransac.RANSACRegressor": {
  "data": {
   "shadows": "sklearn.linear_model.RANSACRegressor"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_ransac.X": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "sklearn.linear_model.tests.test_ransac._dynamic_max_trials": {
  "data": {
   "shadows": "sklearn.linear_model.ransac._dynamic_max_trials"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_ransac.assert_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_ransac.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_ransac.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_ransac.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_ransac.assert_less": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_less"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_ransac.assert_raises": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_ransac.assert_raises_regexp": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises_regexp"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_ransac.assert_warns": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_warns"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_ransac.check_random_state": {
  "data": {
   "shadows": "sklearn.utils.check_random_state"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_ransac.data": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "sklearn.linear_model.tests.test_ransac.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_ransac.outliers": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "sklearn.linear_model.tests.test_ransac.rng": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "sklearn.linear_model.tests.test_ransac.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_ransac.test_ransac_default_residual_threshold": {
  "data": {
   "lineno": 396,
   "symbols_in_volume": [
    "numpy.bool_",
    "numpy.ones_like",
    "numpy.testing.assert_equal",
    "sklearn.linear_model.LinearRegression",
    "sklearn.linear_model.RANSACRegressor",
    "sklearn.linear_model.tests.test_ransac.X",
    "sklearn.linear_model.tests.test_ransac.outliers",
    "sklearn.linear_model.tests.test_ransac.y"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ransac.test_ransac_dynamic_max_trials": {
  "data": {
   "lineno": 412,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "numpy.testing.assert_equal",
    "sklearn.linear_model.LinearRegression",
    "sklearn.linear_model.RANSACRegressor",
    "sklearn.linear_model.ransac._dynamic_max_trials",
    "sklearn.linear_model.tests.test_ransac.X",
    "sklearn.linear_model.tests.test_ransac.y",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ransac.test_ransac_exceed_max_skips": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "ValueError",
    "numpy.testing.assert_equal",
    "sklearn.linear_model.LinearRegression",
    "sklearn.linear_model.RANSACRegressor",
    "sklearn.linear_model.tests.test_ransac.X",
    "sklearn.linear_model.tests.test_ransac.y",
    "sklearn.utils.testing.assert_raises_regexp"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ransac.test_ransac_exceed_max_skips.is_data_valid": {
  "data": {
   "lineno": 200
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ransac.test_ransac_fit_sample_weight": {
  "data": {
   "lineno": 452,
   "symbols_in_volume": [
    "ValueError",
    "numpy.append",
    "numpy.bool_",
    "numpy.ndarray.flatten",
    "numpy.ones",
    "numpy.ones_like",
    "numpy.repeat",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "sklearn.linear_model.Lasso",
    "sklearn.linear_model.RANSACRegressor",
    "sklearn.linear_model.tests.test_ransac.X",
    "sklearn.linear_model.tests.test_ransac.outliers",
    "sklearn.linear_model.tests.test_ransac.y",
    "sklearn.utils.check_random_state",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ransac.test_ransac_inliers_outliers": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "numpy.bool_",
    "numpy.ones_like",
    "numpy.testing.assert_equal",
    "sklearn.linear_model.LinearRegression",
    "sklearn.linear_model.RANSACRegressor",
    "sklearn.linear_model.tests.test_ransac.X",
    "sklearn.linear_model.tests.test_ransac.outliers",
    "sklearn.linear_model.tests.test_ransac.y"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ransac.test_ransac_is_data_valid": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "ValueError",
    "numpy.random.RandomState",
    "sklearn.linear_model.LinearRegression",
    "sklearn.linear_model.RANSACRegressor",
    "sklearn.linear_model.tests.test_ransac.X",
    "sklearn.linear_model.tests.test_ransac.rng",
    "sklearn.linear_model.tests.test_ransac.y",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ransac.test_ransac_is_data_valid.is_data_valid": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "numpy.testing.assert_equal",
    "sklearn.linear_model.tests.test_ransac.X",
    "sklearn.linear_model.tests.test_ransac.y"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ransac.test_ransac_is_model_valid": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.linear_model.LinearRegression",
    "sklearn.linear_model.RANSACRegressor",
    "sklearn.linear_model.tests.test_ransac.X",
    "sklearn.linear_model.tests.test_ransac.y",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ransac.test_ransac_is_model_valid.is_model_valid": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "numpy.testing.assert_equal",
    "sklearn.linear_model.tests.test_ransac.X",
    "sklearn.linear_model.tests.test_ransac.y"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ransac.test_ransac_max_trials": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "range",
    "sklearn.linear_model.LinearRegression",
    "sklearn.linear_model.RANSACRegressor",
    "sklearn.linear_model.ransac._dynamic_max_trials",
    "sklearn.linear_model.tests.test_ransac.X",
    "sklearn.linear_model.tests.test_ransac.outliers",
    "sklearn.linear_model.tests.test_ransac.y",
    "sklearn.utils.testing.assert_less",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ransac.test_ransac_min_n_samples": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "ValueError",
    "numpy.testing.assert_array_almost_equal",
    "sklearn.linear_model.LinearRegression",
    "sklearn.linear_model.RANSACRegressor",
    "sklearn.linear_model.tests.test_ransac.X",
    "sklearn.linear_model.tests.test_ransac.y",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ransac.test_ransac_multi_dimensional_targets": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": [
    "numpy.bool_",
    "numpy.column_stack",
    "numpy.ones_like",
    "numpy.testing.assert_equal",
    "sklearn.linear_model.LinearRegression",
    "sklearn.linear_model.RANSACRegressor",
    "sklearn.linear_model.tests.test_ransac.X",
    "sklearn.linear_model.tests.test_ransac.outliers",
    "sklearn.linear_model.tests.test_ransac.y"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ransac.test_ransac_no_valid_data": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "ValueError",
    "numpy.testing.assert_equal",
    "sklearn.linear_model.LinearRegression",
    "sklearn.linear_model.RANSACRegressor",
    "sklearn.linear_model.tests.test_ransac.X",
    "sklearn.linear_model.tests.test_ransac.y",
    "sklearn.utils.testing.assert_raises_regexp"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ransac.test_ransac_no_valid_data.is_data_valid": {
  "data": {
   "lineno": 168
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ransac.test_ransac_no_valid_model": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "ValueError",
    "numpy.testing.assert_equal",
    "sklearn.linear_model.LinearRegression",
    "sklearn.linear_model.RANSACRegressor",
    "sklearn.linear_model.tests.test_ransac.X",
    "sklearn.linear_model.tests.test_ransac.y",
    "sklearn.utils.testing.assert_raises_regexp"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ransac.test_ransac_no_valid_model.is_model_valid": {
  "data": {
   "lineno": 184
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ransac.test_ransac_none_estimator": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "numpy.testing.assert_array_almost_equal",
    "sklearn.linear_model.LinearRegression",
    "sklearn.linear_model.RANSACRegressor",
    "sklearn.linear_model.tests.test_ransac.X",
    "sklearn.linear_model.tests.test_ransac.y"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ransac.test_ransac_predict": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.testing.assert_equal",
    "numpy.zeros",
    "sklearn.linear_model.LinearRegression",
    "sklearn.linear_model.RANSACRegressor",
    "sklearn.linear_model.tests.test_ransac.X",
    "sklearn.linear_model.tests.test_ransac.y"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ransac.test_ransac_resid_thresh_no_inliers": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "ValueError",
    "numpy.testing.assert_equal",
    "sklearn.linear_model.LinearRegression",
    "sklearn.linear_model.RANSACRegressor",
    "sklearn.linear_model.tests.test_ransac.X",
    "sklearn.linear_model.tests.test_ransac.y",
    "sklearn.utils.testing.assert_raises_regexp"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ransac.test_ransac_residual_loss": {
  "data": {
   "lineno": 356,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.column_stack",
    "numpy.sum",
    "numpy.testing.assert_array_almost_equal",
    "sklearn.linear_model.LinearRegression",
    "sklearn.linear_model.RANSACRegressor",
    "sklearn.linear_model.tests.test_ransac.X",
    "sklearn.linear_model.tests.test_ransac.y"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ransac.test_ransac_score": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.testing.assert_equal",
    "numpy.zeros",
    "sklearn.linear_model.LinearRegression",
    "sklearn.linear_model.RANSACRegressor",
    "sklearn.linear_model.tests.test_ransac.X",
    "sklearn.linear_model.tests.test_ransac.y",
    "sklearn.utils.testing.assert_less"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ransac.test_ransac_sparse_coo": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "numpy.bool_",
    "numpy.ones_like",
    "numpy.testing.assert_equal",
    "scipy.sparse.coo_matrix",
    "sklearn.linear_model.LinearRegression",
    "sklearn.linear_model.RANSACRegressor",
    "sklearn.linear_model.tests.test_ransac.X",
    "sklearn.linear_model.tests.test_ransac.outliers",
    "sklearn.linear_model.tests.test_ransac.y"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ransac.test_ransac_sparse_csc": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "numpy.bool_",
    "numpy.ones_like",
    "numpy.testing.assert_equal",
    "scipy.sparse.csc_matrix",
    "sklearn.linear_model.LinearRegression",
    "sklearn.linear_model.RANSACRegressor",
    "sklearn.linear_model.tests.test_ransac.X",
    "sklearn.linear_model.tests.test_ransac.outliers",
    "sklearn.linear_model.tests.test_ransac.y"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ransac.test_ransac_sparse_csr": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "numpy.bool_",
    "numpy.ones_like",
    "numpy.testing.assert_equal",
    "scipy.sparse.csr_matrix",
    "sklearn.linear_model.LinearRegression",
    "sklearn.linear_model.RANSACRegressor",
    "sklearn.linear_model.tests.test_ransac.X",
    "sklearn.linear_model.tests.test_ransac.outliers",
    "sklearn.linear_model.tests.test_ransac.y"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ransac.test_ransac_stop_n_inliers": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "numpy.testing.assert_equal",
    "sklearn.linear_model.LinearRegression",
    "sklearn.linear_model.RANSACRegressor",
    "sklearn.linear_model.tests.test_ransac.X",
    "sklearn.linear_model.tests.test_ransac.y"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ransac.test_ransac_stop_score": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "numpy.testing.assert_equal",
    "sklearn.linear_model.LinearRegression",
    "sklearn.linear_model.RANSACRegressor",
    "sklearn.linear_model.tests.test_ransac.X",
    "sklearn.linear_model.tests.test_ransac.y"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ransac.test_ransac_warn_exceed_max_skips": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "numpy.testing.assert_equal",
    "sklearn.exceptions.ConvergenceWarning",
    "sklearn.linear_model.LinearRegression",
    "sklearn.linear_model.RANSACRegressor",
    "sklearn.linear_model.tests.test_ransac.X",
    "sklearn.linear_model.tests.test_ransac.y",
    "sklearn.utils.testing.assert_warns"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ransac.test_ransac_warn_exceed_max_skips.is_data_valid": {
  "data": {
   "lineno": 220
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ransac.y": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "sklearn.linear_model.tests.test_ridge": {
  "data": {
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.random.RandomState",
    "scipy.sparse.csr_matrix",
    "sklearn.datasets.load_diabetes",
    "sklearn.datasets.load_iris",
    "sklearn.linear_model.tests.test_ridge.diabetes",
    "sklearn.linear_model.tests.test_ridge.ind",
    "sklearn.linear_model.tests.test_ridge.iris",
    "sklearn.linear_model.tests.test_ridge.rng"
   ]
  },
  "type": "module"
 },
 "sklearn.linear_model.tests.test_ridge.ConvergenceWarning": {
  "data": {
   "shadows": "sklearn.exceptions.ConvergenceWarning"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_ridge.DENSE_FILTER": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "sklearn.linear_model.tests.test_ridge.GridSearchCV": {
  "data": {
   "shadows": "sklearn.model_selection.GridSearchCV"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_ridge.KFold": {
  "data": {
   "shadows": "sklearn.model_selection.KFold"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_ridge.LinearRegression": {
  "data": {
   "shadows": "sklearn.linear_model.base.LinearRegression"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_ridge.Ridge": {
  "data": {
   "shadows": "sklearn.linear_model.ridge.Ridge"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_ridge.RidgeCV": {
  "data": {
   "shadows": "sklearn.linear_model.ridge.RidgeCV"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_ridge.RidgeClassifier": {
  "data": {
   "shadows": "sklearn.linear_model.ridge.RidgeClassifier"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_ridge.RidgeClassifierCV": {
  "data": {
   "shadows": "sklearn.linear_model.ridge.RidgeClassifierCV"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_ridge.SPARSE_FILTER": {
  "data": {
   "lineno": 59
  },
  "type": "constant"
 },
 "sklearn.linear_model.tests.test_ridge.X_iris": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "sklearn.linear_model.tests.test_ridge._RidgeGCV": {
  "data": {
   "shadows": "sklearn.linear_model.ridge._RidgeGCV"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_ridge._solve_cholesky": {
  "data": {
   "shadows": "sklearn.linear_model.ridge._solve_cholesky"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_ridge._solve_cholesky_kernel": {
  "data": {
   "shadows": "sklearn.linear_model.ridge._solve_cholesky_kernel"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_ridge._test_multi_ridge_diabetes": {
  "data": {
   "lineno": 439,
   "symbols_in_volume": [
    "filter_",
    "numpy.vstack",
    "sklearn.linear_model.ridge.Ridge",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge._test_ridge_classifiers": {
  "data": {
   "lineno": 454,
   "symbols_in_volume": [
    "filter_",
    "numpy.mean",
    "numpy.unique",
    "sklearn.linear_model.ridge.RidgeClassifier",
    "sklearn.linear_model.ridge.RidgeClassifierCV",
    "sklearn.linear_model.tests.test_ridge.X_iris",
    "sklearn.linear_model.tests.test_ridge.y_iris",
    "sklearn.model_selection.KFold",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_greater",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge._test_ridge_cv": {
  "data": {
   "lineno": 416,
   "symbols_in_volume": [
    "filter_",
    "len",
    "numpy.float64",
    "sklearn.linear_model.ridge.RidgeCV",
    "sklearn.model_selection.KFold",
    "sklearn.utils.testing.assert_equal",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge._test_ridge_cv_normalize": {
  "data": {
   "lineno": 406,
   "symbols_in_volume": [
    "filter_",
    "sklearn.linear_model.ridge.Ridge",
    "sklearn.linear_model.ridge.RidgeCV",
    "sklearn.model_selection.GridSearchCV",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge._test_ridge_diabetes": {
  "data": {
   "lineno": 433,
   "symbols_in_volume": [
    "filter_",
    "numpy.round",
    "sklearn.linear_model.ridge.Ridge"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge._test_ridge_loo": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": [
    "f",
    "filter_",
    "numpy.arange",
    "numpy.ones",
    "numpy.vstack",
    "range",
    "sklearn.linear_model.ridge.Ridge",
    "sklearn.linear_model.ridge.RidgeCV",
    "sklearn.linear_model.ridge._RidgeGCV",
    "sklearn.linear_model.tests.test_ridge.DENSE_FILTER",
    "sklearn.metrics.get_scorer",
    "sklearn.metrics.make_scorer",
    "sklearn.metrics.mean_squared_error",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge._test_tolerance": {
  "data": {
   "lineno": 470,
   "symbols_in_volume": [
    "filter_",
    "sklearn.linear_model.ridge.Ridge",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge.assert_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_ridge.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_ridge.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_ridge.assert_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_ridge.assert_greater": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_greater"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_ridge.assert_raise_message": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raise_message"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_ridge.assert_raises": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_ridge.assert_raises_regex": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises_regex"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_ridge.assert_true": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_true"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_ridge.assert_warns": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_warns"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_ridge.check_dense_sparse": {
  "data": {
   "lineno": 482,
   "symbols_in_volume": [
    "sklearn.linear_model.tests.test_ridge.DENSE_FILTER",
    "sklearn.linear_model.tests.test_ridge.SPARSE_FILTER",
    "sklearn.utils.testing.assert_array_almost_equal",
    "test_func"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge.check_random_state": {
  "data": {
   "shadows": "sklearn.utils.check_random_state"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_ridge.datasets": {
  "data": {
   "shadows": "sklearn.datasets"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_ridge.diabetes": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "sklearn.linear_model.tests.test_ridge.get_scorer": {
  "data": {
   "shadows": "sklearn.metrics.get_scorer"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_ridge.ignore_warnings": {
  "data": {
   "shadows": "sklearn.utils.testing.ignore_warnings"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_ridge.ind": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "sklearn.linear_model.tests.test_ridge.iris": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "sklearn.linear_model.tests.test_ridge.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_ridge.make_multilabel_classification": {
  "data": {
   "shadows": "sklearn.datasets.make_multilabel_classification"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_ridge.make_regression": {
  "data": {
   "shadows": "sklearn.datasets.make_regression"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_ridge.make_scorer": {
  "data": {
   "shadows": "sklearn.metrics.make_scorer"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_ridge.mean_squared_error": {
  "data": {
   "shadows": "sklearn.metrics.mean_squared_error"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_ridge.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_ridge.product": {
  "data": {
   "shadows": "itertools.product"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_ridge.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_ridge.ridge_regression": {
  "data": {
   "shadows": "sklearn.linear_model.ridge.ridge_regression"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_ridge.rng": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "sklearn.linear_model.tests.test_ridge.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_ridge.test_class_weight_vs_sample_weight": {
  "data": {
   "lineno": 552,
   "symbols_in_volume": [
    "numpy.ones",
    "reg",
    "sklearn.linear_model.ridge.RidgeClassifier",
    "sklearn.linear_model.ridge.RidgeClassifierCV",
    "sklearn.linear_model.tests.test_ridge.iris",
    "sklearn.linear_model.tests.test_ridge.pytest",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge.test_class_weights": {
  "data": {
   "lineno": 516,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "sklearn.linear_model.ridge.RidgeClassifier",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge.test_class_weights_cv": {
  "data": {
   "lineno": 582,
   "symbols_in_volume": [
    "numpy.array",
    "reg",
    "reg.fit",
    "reg.predict",
    "sklearn.linear_model.ridge.RidgeClassifierCV",
    "sklearn.linear_model.tests.test_ridge.pytest",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge.test_dense_sparse": {
  "data": {
   "lineno": 492,
   "symbols_in_volume": [
    "sklearn.linear_model.tests.test_ridge._test_multi_ridge_diabetes",
    "sklearn.linear_model.tests.test_ridge._test_ridge_classifiers",
    "sklearn.linear_model.tests.test_ridge._test_ridge_cv",
    "sklearn.linear_model.tests.test_ridge._test_ridge_cv_normalize",
    "sklearn.linear_model.tests.test_ridge._test_ridge_diabetes",
    "sklearn.linear_model.tests.test_ridge._test_ridge_loo",
    "sklearn.linear_model.tests.test_ridge._test_tolerance",
    "sklearn.linear_model.tests.test_ridge.check_dense_sparse",
    "sklearn.linear_model.tests.test_ridge.pytest",
    "test_func"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge.test_dtype_match": {
  "data": {
   "lineno": 883,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.random.RandomState",
    "sklearn.linear_model.ridge.Ridge",
    "sklearn.linear_model.tests.test_ridge.rng",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge.test_dtype_match_cholesky": {
  "data": {
   "lineno": 914,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.random.RandomState",
    "sklearn.linear_model.ridge.Ridge",
    "sklearn.linear_model.tests.test_ridge.rng",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge.test_errors_and_values_helper": {
  "data": {
   "lineno": 836,
   "symbols_in_volume": [
    "len",
    "numpy.testing.assert_array_equal",
    "sklearn.linear_model.ridge._RidgeGCV",
    "sklearn.linear_model.tests.test_ridge.rng",
    "sklearn.utils.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge.test_errors_and_values_svd_helper": {
  "data": {
   "lineno": 857,
   "symbols_in_volume": [
    "numpy.testing.assert_array_equal",
    "sklearn.linear_model.ridge._RidgeGCV",
    "sklearn.linear_model.tests.test_ridge.rng",
    "sklearn.utils.check_random_state",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge.test_n_iter": {
  "data": {
   "lineno": 797,
   "symbols_in_volume": [
    "numpy.tile",
    "range",
    "reg",
    "reg.fit",
    "reg.n_iter_",
    "sklearn.linear_model.ridge.Ridge",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge.test_primal_dual_relationship": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "numpy.dot",
    "sklearn.linear_model.ridge._solve_cholesky",
    "sklearn.linear_model.ridge._solve_cholesky_kernel",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge.test_raises_value_error_if_sample_weights_greater_than_1d": {
  "data": {
   "lineno": 674,
   "symbols_in_volume": [
    "ValueError",
    "numpy.newaxis",
    "numpy.random.RandomState",
    "sklearn.linear_model.ridge.Ridge",
    "sklearn.linear_model.tests.test_ridge.rng",
    "sklearn.utils.testing.assert_raise_message",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge.test_raises_value_error_if_sample_weights_greater_than_1d.fit_ridge_not_ok": {
  "data": {
   "lineno": 698
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge.test_raises_value_error_if_sample_weights_greater_than_1d.fit_ridge_not_ok_2": {
  "data": {
   "lineno": 701
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge.test_raises_value_error_if_solver_not_supported": {
  "data": {
   "lineno": 774,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.utils.testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge.test_raises_value_error_if_solver_not_supported.func": {
  "data": {
   "lineno": 783,
   "symbols_in_volume": [
    "numpy.eye",
    "numpy.ones",
    "sklearn.linear_model.ridge.ridge_regression"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge.test_ridge": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "numpy.ones",
    "numpy.random.RandomState",
    "sklearn.linear_model.ridge.Ridge",
    "sklearn.linear_model.tests.test_ridge.pytest",
    "sklearn.linear_model.tests.test_ridge.rng",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_greater"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge.test_ridge_classifier_cv_store_cv_values": {
  "data": {
   "lineno": 623,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "sklearn.linear_model.ridge.RidgeClassifierCV",
    "sklearn.linear_model.tests.test_ridge.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge.test_ridge_classifier_no_support_multilabel": {
  "data": {
   "lineno": 878,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.datasets.make_multilabel_classification",
    "sklearn.linear_model.ridge.RidgeClassifier",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge.test_ridge_cv_sparse_svd": {
  "data": {
   "lineno": 503,
   "symbols_in_volume": [
    "TypeError",
    "scipy.sparse.csr_matrix",
    "sklearn.linear_model.ridge.RidgeCV",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge.test_ridge_fit_intercept_sparse": {
  "data": {
   "lineno": 816,
   "symbols_in_volume": [
    "UserWarning",
    "scipy.sparse.csr_matrix",
    "sklearn.datasets.make_regression",
    "sklearn.linear_model.ridge.Ridge",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_warns"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge.test_ridge_individual_penalties": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "ValueError",
    "numpy.arange",
    "numpy.array",
    "numpy.random.RandomState",
    "sklearn.linear_model.ridge.Ridge",
    "sklearn.linear_model.tests.test_ridge.rng",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_raises",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge.test_ridge_intercept": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "numpy.c_",
    "numpy.random.RandomState",
    "sklearn.linear_model.ridge.Ridge",
    "sklearn.linear_model.tests.test_ridge.rng",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge.test_ridge_regression_convergence_fail": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.exceptions.ConvergenceWarning",
    "sklearn.linear_model.ridge.ridge_regression",
    "sklearn.linear_model.tests.test_ridge.rng",
    "sklearn.utils.testing.assert_warns"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge.test_ridge_regression_sample_weights": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "numpy.newaxis",
    "numpy.random.RandomState",
    "numpy.sqrt",
    "sklearn.linear_model.ridge.ridge_regression",
    "sklearn.linear_model.tests.test_ridge.rng",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge.test_ridge_sample_weights": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "itertools.product",
    "numpy.concatenate",
    "numpy.diag",
    "numpy.eye",
    "numpy.ones",
    "numpy.random.RandomState",
    "scipy.linalg.solve",
    "sklearn.linear_model.ridge.Ridge",
    "sklearn.linear_model.tests.test_ridge.rng",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge.test_ridge_shapes": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "numpy.c_",
    "numpy.newaxis",
    "numpy.random.RandomState",
    "sklearn.linear_model.ridge.Ridge",
    "sklearn.linear_model.tests.test_ridge.rng",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge.test_ridge_singular": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "numpy.concatenate",
    "numpy.random.RandomState",
    "sklearn.linear_model.ridge.Ridge",
    "sklearn.linear_model.tests.test_ridge.rng",
    "sklearn.utils.testing.assert_greater"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge.test_ridge_sparse_svd": {
  "data": {
   "lineno": 509,
   "symbols_in_volume": [
    "TypeError",
    "scipy.sparse.csc_matrix",
    "sklearn.linear_model.ridge.Ridge",
    "sklearn.linear_model.tests.test_ridge.rng",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge.test_ridge_vs_lstsq": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.linear_model.base.LinearRegression",
    "sklearn.linear_model.ridge.Ridge",
    "sklearn.linear_model.tests.test_ridge.rng",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge.test_ridgecv_int_alphas": {
  "data": {
   "lineno": 744,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.linear_model.ridge.RidgeCV",
    "sklearn.linear_model.tests.test_ridge.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge.test_ridgecv_negative_alphas": {
  "data": {
   "lineno": 755,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "sklearn.linear_model.ridge.RidgeCV",
    "sklearn.linear_model.tests.test_ridge.pytest",
    "sklearn.utils.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge.test_ridgecv_sample_weight": {
  "data": {
   "lineno": 649,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.linear_model.ridge.Ridge",
    "sklearn.linear_model.ridge.RidgeCV",
    "sklearn.linear_model.tests.test_ridge.pytest",
    "sklearn.linear_model.tests.test_ridge.rng",
    "sklearn.model_selection.GridSearchCV",
    "sklearn.model_selection.KFold",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge.test_ridgecv_store_cv_values": {
  "data": {
   "lineno": 599,
   "symbols_in_volume": [
    "len",
    "numpy.random.RandomState",
    "sklearn.linear_model.ridge.RidgeCV",
    "sklearn.linear_model.tests.test_ridge.pytest",
    "sklearn.linear_model.tests.test_ridge.rng"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge.test_sparse_cg_max_iter": {
  "data": {
   "lineno": 791,
   "symbols_in_volume": [
    "reg",
    "reg.coef_.shape",
    "reg.fit",
    "sklearn.linear_model.ridge.Ridge",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge.test_sparse_design_with_sample_weights": {
  "data": {
   "lineno": 713,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "scipy.sparse.coo_matrix",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.dok_matrix",
    "scipy.sparse.lil_matrix",
    "sklearn.linear_model.ridge.Ridge",
    "sklearn.linear_model.tests.test_ridge.rng",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sparse_converter",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge.test_toy_ridge_object": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "numpy.float64",
    "numpy.ndarray",
    "numpy.vstack",
    "sklearn.linear_model.ridge.Ridge",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_equal",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge.y_iris": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "sklearn.linear_model.tests.test_sag": {
  "data": {
   "symbols_in_volume": [
    "sklearn.datasets.load_iris"
   ]
  },
  "type": "module"
 },
 "sklearn.linear_model.tests.test_sag.LabelBinarizer": {
  "data": {
   "shadows": "sklearn.preprocessing.LabelBinarizer"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sag.LabelEncoder": {
  "data": {
   "shadows": "sklearn.preprocessing.LabelEncoder"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sag.LogisticRegression": {
  "data": {
   "shadows": "sklearn.linear_model.LogisticRegression"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sag.Ridge": {
  "data": {
   "shadows": "sklearn.linear_model.Ridge"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sag._multinomial_grad_loss_all_samples": {
  "data": {
   "shadows": "sklearn.linear_model.sag_fast._multinomial_grad_loss_all_samples"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sag._multinomial_loss_grad": {
  "data": {
   "shadows": "sklearn.linear_model.logistic._multinomial_loss_grad"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sag.assert_allclose": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_allclose"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sag.assert_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sag.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sag.assert_greater": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_greater"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sag.assert_raise_message": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raise_message"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sag.check_random_state": {
  "data": {
   "shadows": "sklearn.utils.check_random_state"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sag.clone": {
  "data": {
   "shadows": "sklearn.base.clone"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sag.compute_class_weight": {
  "data": {
   "shadows": "sklearn.utils.compute_class_weight"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sag.get_auto_step_size": {
  "data": {
   "shadows": "sklearn.linear_model.sag.get_auto_step_size"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sag.get_pobj": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "loss",
    "numpy.dot"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sag.get_step_size": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "numpy.max",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sag.iris": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "sklearn.linear_model.tests.test_sag.load_iris": {
  "data": {
   "shadows": "sklearn.datasets.load_iris"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sag.log_dloss": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "sklearn.linear_model.tests.test_sag.math"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sag.log_loss": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "numpy.exp",
    "numpy.log",
    "numpy.mean"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sag.logsumexp": {
  "data": {
   "shadows": "sklearn.utils.fixes.logsumexp"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sag.make_blobs": {
  "data": {
   "shadows": "sklearn.datasets.make_blobs"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sag.make_dataset": {
  "data": {
   "shadows": "sklearn.linear_model.base.make_dataset"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sag.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sag.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sag.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sag.row_norms": {
  "data": {
   "shadows": "sklearn.utils.extmath.row_norms"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sag.sag": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "dloss",
    "int",
    "len",
    "numpy.dot",
    "numpy.random.RandomState",
    "numpy.zeros",
    "range",
    "set"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sag.sag_sparse": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "ZeroDivisionError",
    "dloss",
    "int",
    "len",
    "numpy.dot",
    "numpy.int",
    "numpy.random.RandomState",
    "numpy.zeros",
    "range",
    "set"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sag.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sag.squared_dloss": {
  "data": {
   "lineno": 49
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sag.squared_loss": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "numpy.mean"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sag.test_binary_classifier_class_weight": {
  "data": {
   "lineno": 621,
   "symbols_in_volume": [
    "numpy.ones",
    "numpy.unique",
    "scipy.sparse.csr_matrix",
    "sklearn.base.clone",
    "sklearn.datasets.make_blobs",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.linear_model.tests.test_sag.get_step_size",
    "sklearn.linear_model.tests.test_sag.log_dloss",
    "sklearn.linear_model.tests.test_sag.pytest",
    "sklearn.linear_model.tests.test_sag.sag_sparse",
    "sklearn.preprocessing.LabelEncoder",
    "sklearn.utils.compute_class_weight",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sag.test_classifier_matching": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "numpy.atleast_1d",
    "numpy.atleast_2d",
    "sklearn.datasets.make_blobs",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.linear_model.tests.test_sag.get_step_size",
    "sklearn.linear_model.tests.test_sag.log_dloss",
    "sklearn.linear_model.tests.test_sag.sag",
    "sklearn.linear_model.tests.test_sag.sag_sparse",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sag.test_classifier_results": {
  "data": {
   "lineno": 596,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.random.RandomState",
    "numpy.sign",
    "scipy.sparse.csr_matrix",
    "sklearn.base.clone",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.linear_model.tests.test_sag.pytest",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sag.test_classifier_single_class": {
  "data": {
   "lineno": 734,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.linear_model.tests.test_sag.pytest",
    "sklearn.utils.testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sag.test_get_auto_step_size": {
  "data": {
   "lineno": 411,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "min",
    "numpy.array",
    "numpy.float64",
    "sklearn.linear_model.sag.get_auto_step_size",
    "sklearn.utils.extmath.row_norms",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sag.test_multiclass_classifier_class_weight": {
  "data": {
   "lineno": 671,
   "symbols_in_volume": [
    "enumerate",
    "numpy.array",
    "numpy.ones",
    "numpy.unique",
    "numpy.vstack",
    "scipy.sparse.csr_matrix",
    "sklearn.base.clone",
    "sklearn.datasets.make_blobs",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.linear_model.tests.test_sag.get_step_size",
    "sklearn.linear_model.tests.test_sag.log_dloss",
    "sklearn.linear_model.tests.test_sag.pytest",
    "sklearn.linear_model.tests.test_sag.sag_sparse",
    "sklearn.preprocessing.LabelEncoder",
    "sklearn.utils.compute_class_weight",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sag.test_multinomial_loss": {
  "data": {
   "lineno": 764,
   "symbols_in_volume": [
    "len",
    "numpy.abs",
    "numpy.float64",
    "numpy.unique",
    "numpy.vstack",
    "sklearn.linear_model.base.make_dataset",
    "sklearn.linear_model.logistic._multinomial_loss_grad",
    "sklearn.linear_model.sag_fast._multinomial_grad_loss_all_samples",
    "sklearn.linear_model.tests.test_sag.iris",
    "sklearn.preprocessing.LabelBinarizer",
    "sklearn.utils.check_random_state",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sag.test_multinomial_loss_ground_truth": {
  "data": {
   "lineno": 795,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.dot",
    "numpy.exp",
    "numpy.newaxis",
    "numpy.newaxis.sum",
    "numpy.vstack",
    "sklearn.linear_model.logistic._multinomial_loss_grad",
    "sklearn.preprocessing.LabelBinarizer",
    "sklearn.utils.fixes.logsumexp",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sag.test_regressor_matching": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.linear_model.Ridge",
    "sklearn.linear_model.tests.test_sag.get_step_size",
    "sklearn.linear_model.tests.test_sag.sag",
    "sklearn.linear_model.tests.test_sag.sag_sparse",
    "sklearn.linear_model.tests.test_sag.squared_dloss",
    "sklearn.utils.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sag.test_sag_classifier_computed_correctly": {
  "data": {
   "lineno": 494,
   "symbols_in_volume": [
    "numpy.ones",
    "numpy.unique",
    "scipy.sparse.csr_matrix",
    "sklearn.base.clone",
    "sklearn.datasets.make_blobs",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.linear_model.tests.test_sag.get_step_size",
    "sklearn.linear_model.tests.test_sag.log_dloss",
    "sklearn.linear_model.tests.test_sag.pytest",
    "sklearn.linear_model.tests.test_sag.sag_sparse",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sag.test_sag_multiclass_computed_correctly": {
  "data": {
   "lineno": 537,
   "symbols_in_volume": [
    "enumerate",
    "numpy.array",
    "numpy.ones",
    "numpy.unique",
    "numpy.vstack",
    "scipy.sparse.csr_matrix",
    "sklearn.base.clone",
    "sklearn.datasets.make_blobs",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.linear_model.tests.test_sag.get_step_size",
    "sklearn.linear_model.tests.test_sag.log_dloss",
    "sklearn.linear_model.tests.test_sag.pytest",
    "sklearn.linear_model.tests.test_sag.sag_sparse",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sag.test_sag_pobj_matches_logistic_regression": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "scipy.sparse.csr_matrix",
    "sklearn.base.clone",
    "sklearn.datasets.make_blobs",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.linear_model.tests.test_sag.get_pobj",
    "sklearn.linear_model.tests.test_sag.log_loss",
    "sklearn.linear_model.tests.test_sag.pytest",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sag.test_sag_pobj_matches_ridge_regression": {
  "data": {
   "lineno": 335,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "scipy.sparse.csr_matrix",
    "sklearn.base.clone",
    "sklearn.linear_model.Ridge",
    "sklearn.linear_model.tests.test_sag.get_pobj",
    "sklearn.linear_model.tests.test_sag.pytest",
    "sklearn.linear_model.tests.test_sag.squared_loss",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sag.test_sag_regressor": {
  "data": {
   "lineno": 455,
   "symbols_in_volume": [
    "numpy.linspace",
    "numpy.random.RandomState",
    "scipy.sparse.csr_matrix",
    "sklearn.base.clone",
    "sklearn.linear_model.Ridge",
    "sklearn.linear_model.tests.test_sag.pytest",
    "sklearn.utils.testing.assert_greater"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sag.test_sag_regressor_computed_correctly": {
  "data": {
   "lineno": 367,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.random.RandomState",
    "scipy.sparse.csr_matrix",
    "sklearn.base.clone",
    "sklearn.linear_model.Ridge",
    "sklearn.linear_model.tests.test_sag.get_step_size",
    "sklearn.linear_model.tests.test_sag.pytest",
    "sklearn.linear_model.tests.test_sag.sag_sparse",
    "sklearn.linear_model.tests.test_sag.squared_dloss",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sag.test_step_size_alpha_error": {
  "data": {
   "lineno": 747,
   "symbols_in_volume": [
    "ZeroDivisionError",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.linear_model.Ridge",
    "sklearn.linear_model.tests.test_sag.pytest",
    "sklearn.utils.testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd": {
  "data": {
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.datasets.load_iris"
   ]
  },
  "type": "module"
 },
 "sklearn.linear_model.tests.test_sgd.CommonTest": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "sklearn.linear_model.tests.test_sgd.CommonTest._test_warm_start": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "sklearn.linear_model.tests.test_sgd.X",
    "sklearn.linear_model.tests.test_sgd.Y",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.CommonTest.asgd": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "enumerate",
    "isinstance",
    "numpy.dot",
    "numpy.zeros",
    "sklearn.linear_model.tests.test_sgd.X"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.CommonTest.factory": {
  "data": {
   "lineno": 110
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.CommonTest.test_adaptive_longer_than_constant": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "sklearn.linear_model.tests.test_sgd.iris"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.CommonTest.test_clone": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "sklearn.base.clone",
    "sklearn.linear_model.tests.test_sgd.X",
    "sklearn.linear_model.tests.test_sgd.Y",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.CommonTest.test_early_stopping": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "hasattr",
    "sklearn.linear_model.tests.test_sgd.X",
    "sklearn.linear_model.tests.test_sgd.Y"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.CommonTest.test_input_format": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "numpy.c_",
    "numpy.newaxis",
    "sklearn.linear_model.tests.test_sgd.X",
    "sklearn.linear_model.tests.test_sgd.Y",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.CommonTest.test_late_onset_averaging_not_reached": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "isinstance",
    "numpy.unique",
    "range",
    "sklearn.linear_model.SGDClassifier",
    "sklearn.linear_model.tests.test_sgd.X",
    "sklearn.linear_model.tests.test_sgd.Y",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.CommonTest.test_late_onset_averaging_reached": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.linear_model.tests.test_sgd.X",
    "sklearn.linear_model.tests.test_sgd.Y",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.CommonTest.test_n_iter_no_change": {
  "data": {
   "lineno": 322,
   "symbols_in_volume": [
    "sklearn.exceptions.ConvergenceWarning",
    "sklearn.linear_model.tests.test_sgd.X",
    "sklearn.linear_model.tests.test_sgd.Y",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.ignore_warnings",
    "sorted"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.CommonTest.test_not_enough_sample_for_early_stopping": {
  "data": {
   "lineno": 333,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.linear_model.tests.test_sgd.X3",
    "sklearn.linear_model.tests.test_sgd.Y3",
    "sklearn.linear_model.tests.test_sgd.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.CommonTest.test_plain_has_no_average_attr": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "hasattr",
    "sklearn.linear_model.tests.test_sgd.X",
    "sklearn.linear_model.tests.test_sgd.Y",
    "sklearn.utils.testing.assert_false",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.CommonTest.test_sgd_bad_alpha_for_optimal_learning_rate": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.CommonTest.test_validation_set_not_used_for_training": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "numpy.sort",
    "sklearn.linear_model.tests.test_sgd.X",
    "sklearn.linear_model.tests.test_sgd.Y",
    "sklearn.linear_model.tests.test_sgd.iris",
    "sklearn.model_selection.train_test_split",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.CommonTest.test_warm_start_adaptive": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "sklearn.linear_model.tests.test_sgd.X",
    "sklearn.linear_model.tests.test_sgd.Y"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.CommonTest.test_warm_start_constant": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "sklearn.linear_model.tests.test_sgd.X",
    "sklearn.linear_model.tests.test_sgd.Y"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.CommonTest.test_warm_start_invscaling": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "sklearn.linear_model.tests.test_sgd.X",
    "sklearn.linear_model.tests.test_sgd.Y"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.CommonTest.test_warm_start_optimal": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "sklearn.linear_model.tests.test_sgd.X",
    "sklearn.linear_model.tests.test_sgd.Y"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.ConvergenceWarning": {
  "data": {
   "shadows": "sklearn.exceptions.ConvergenceWarning"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase": {
  "data": {
   "lineno": 343,
   "symbols_in_volume": [
    "sklearn.linear_model.SGDClassifier",
    "sklearn.linear_model.tests.test_sgd.CommonTest",
    "sklearn.linear_model.tests.test_sgd.unittest"
   ]
  },
  "type": "class"
 },
 "sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase._test_partial_fit_equal_fit": {
  "data": {
   "lineno": 869,
   "symbols_in_volume": [
    "numpy.unique",
    "range",
    "sklearn.linear_model.tests.test_sgd.T",
    "sklearn.linear_model.tests.test_sgd.T2",
    "sklearn.linear_model.tests.test_sgd.X",
    "sklearn.linear_model.tests.test_sgd.X2",
    "sklearn.linear_model.tests.test_sgd.Y",
    "sklearn.linear_model.tests.test_sgd.Y2",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase.test_argument_coef": {
  "data": {
   "lineno": 403,
   "symbols_in_volume": [
    "TypeError",
    "numpy.zeros",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase.test_average_binary_computed_correctly": {
  "data": {
   "lineno": 429,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.random.RandomState",
    "numpy.sign",
    "sklearn.linear_model.tests.test_sgd.X",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase.test_balanced_weight": {
  "data": {
   "lineno": 738,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.concatenate",
    "numpy.random.RandomState",
    "numpy.vstack",
    "sklearn.linear_model.tests.test_sgd.X",
    "sklearn.linear_model.tests.test_sgd.iris",
    "sklearn.metrics.f1_score",
    "sklearn.preprocessing.scale",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_greater",
    "sklearn.utils.testing.assert_less"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase.test_class_weights": {
  "data": {
   "lineno": 675,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.linear_model.tests.test_sgd.X",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase.test_equal_class_weight": {
  "data": {
   "lineno": 695,
   "symbols_in_volume": [
    "sklearn.linear_model.tests.test_sgd.X",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase.test_fit_then_partial_fit": {
  "data": {
   "lineno": 861,
   "symbols_in_volume": [
    "sklearn.linear_model.tests.test_sgd.X2",
    "sklearn.linear_model.tests.test_sgd.Y2"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase.test_multiple_fit": {
  "data": {
   "lineno": 922,
   "symbols_in_volume": [
    "hasattr",
    "sklearn.linear_model.tests.test_sgd.X",
    "sklearn.linear_model.tests.test_sgd.Y",
    "sklearn.preprocessing.LabelEncoder",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase.test_partial_fit_binary": {
  "data": {
   "lineno": 813,
   "symbols_in_volume": [
    "id",
    "numpy.unique",
    "sklearn.linear_model.tests.test_sgd.T",
    "sklearn.linear_model.tests.test_sgd.X",
    "sklearn.linear_model.tests.test_sgd.Y",
    "sklearn.linear_model.tests.test_sgd.true_result",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase.test_partial_fit_equal_fit_adaptive": {
  "data": {
   "lineno": 896
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase.test_partial_fit_equal_fit_constant": {
  "data": {
   "lineno": 887
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase.test_partial_fit_equal_fit_invscaling": {
  "data": {
   "lineno": 893
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase.test_partial_fit_equal_fit_optimal": {
  "data": {
   "lineno": 890
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase.test_partial_fit_exception": {
  "data": {
   "lineno": 808,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.linear_model.tests.test_sgd.X3",
    "sklearn.linear_model.tests.test_sgd.Y3",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase.test_partial_fit_multiclass": {
  "data": {
   "lineno": 832,
   "symbols_in_volume": [
    "id",
    "numpy.unique",
    "sklearn.linear_model.tests.test_sgd.X2",
    "sklearn.linear_model.tests.test_sgd.Y2",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase.test_partial_fit_multiclass_average": {
  "data": {
   "lineno": 848,
   "symbols_in_volume": [
    "numpy.unique",
    "sklearn.linear_model.tests.test_sgd.X2",
    "sklearn.linear_model.tests.test_sgd.Y2",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase.test_partial_fit_weight_class_balanced": {
  "data": {
   "lineno": 471,
   "symbols_in_volume": [
    "ValueError",
    "numpy.unique",
    "sklearn.linear_model.tests.test_sgd.X",
    "sklearn.linear_model.tests.test_sgd.Y",
    "sklearn.utils.testing.assert_raises_regexp"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase.test_provide_coef": {
  "data": {
   "lineno": 408,
   "symbols_in_volume": [
    "ValueError",
    "numpy.zeros",
    "sklearn.linear_model.tests.test_sgd.X",
    "sklearn.linear_model.tests.test_sgd.Y",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase.test_regression_losses": {
  "data": {
   "lineno": 899,
   "symbols_in_volume": [
    "numpy.mean",
    "sklearn.linear_model.tests.test_sgd.X",
    "sklearn.linear_model.tests.test_sgd.Y",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase.test_sample_weights": {
  "data": {
   "lineno": 785,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.linear_model.tests.test_sgd.X",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase.test_set_coef_multiclass": {
  "data": {
   "lineno": 537,
   "symbols_in_volume": [
    "ValueError",
    "numpy.zeros",
    "sklearn.linear_model.tests.test_sgd.X2",
    "sklearn.linear_model.tests.test_sgd.Y2",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase.test_set_intercept": {
  "data": {
   "lineno": 414,
   "symbols_in_volume": [
    "ValueError",
    "numpy.zeros",
    "sklearn.linear_model.tests.test_sgd.X",
    "sklearn.linear_model.tests.test_sgd.Y",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase.test_set_intercept_binary": {
  "data": {
   "lineno": 425,
   "symbols_in_volume": [
    "sklearn.linear_model.tests.test_sgd.X5",
    "sklearn.linear_model.tests.test_sgd.Y5"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase.test_set_intercept_to_intercept": {
  "data": {
   "lineno": 458,
   "symbols_in_volume": [
    "sklearn.linear_model.tests.test_sgd.X",
    "sklearn.linear_model.tests.test_sgd.X5",
    "sklearn.linear_model.tests.test_sgd.Y",
    "sklearn.linear_model.tests.test_sgd.Y5"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase.test_sgd": {
  "data": {
   "lineno": 347,
   "symbols_in_volume": [
    "sklearn.linear_model.tests.test_sgd.T",
    "sklearn.linear_model.tests.test_sgd.X",
    "sklearn.linear_model.tests.test_sgd.Y",
    "sklearn.linear_model.tests.test_sgd.true_result",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase.test_sgd_at_least_two_labels": {
  "data": {
   "lineno": 466,
   "symbols_in_volume": [
    "ValueError",
    "numpy.ones",
    "sklearn.linear_model.tests.test_sgd.X2",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase.test_sgd_bad_alpha": {
  "data": {
   "lineno": 370,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase.test_sgd_bad_eta0": {
  "data": {
   "lineno": 365,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase.test_sgd_bad_l1_ratio": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase.test_sgd_bad_learning_rate_schedule": {
  "data": {
   "lineno": 361,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase.test_sgd_bad_loss": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase.test_sgd_bad_penalty": {
  "data": {
   "lineno": 374,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase.test_sgd_early_stopping_param": {
  "data": {
   "lineno": 391,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase.test_sgd_early_stopping_with_partial_fit": {
  "data": {
   "lineno": 420,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.linear_model.tests.test_sgd.X",
    "sklearn.linear_model.tests.test_sgd.Y",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase.test_sgd_l1": {
  "data": {
   "lineno": 646,
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "numpy.random.RandomState",
    "numpy.zeros",
    "scipy.sparse.issparse",
    "sklearn.linear_model.tests.test_sgd.X",
    "sklearn.linear_model.tests.test_sgd.X4",
    "sklearn.linear_model.tests.test_sgd.Y",
    "sklearn.linear_model.tests.test_sgd.Y4",
    "sklearn.linear_model.tests.test_sgd.pickle",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase.test_sgd_max_iter_param": {
  "data": {
   "lineno": 383,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase.test_sgd_multiclass": {
  "data": {
   "lineno": 486,
   "symbols_in_volume": [
    "sklearn.linear_model.tests.test_sgd.T2",
    "sklearn.linear_model.tests.test_sgd.X2",
    "sklearn.linear_model.tests.test_sgd.Y2",
    "sklearn.linear_model.tests.test_sgd.true_result2",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase.test_sgd_multiclass_average": {
  "data": {
   "lineno": 495,
   "symbols_in_volume": [
    "enumerate",
    "numpy.array",
    "numpy.ones",
    "numpy.unique",
    "sklearn.linear_model.tests.test_sgd.X2",
    "sklearn.linear_model.tests.test_sgd.Y2",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase.test_sgd_multiclass_njobs": {
  "data": {
   "lineno": 528,
   "symbols_in_volume": [
    "sklearn.linear_model.tests.test_sgd.T2",
    "sklearn.linear_model.tests.test_sgd.X2",
    "sklearn.linear_model.tests.test_sgd.Y2",
    "sklearn.linear_model.tests.test_sgd.true_result2",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase.test_sgd_multiclass_with_init_coef": {
  "data": {
   "lineno": 518,
   "symbols_in_volume": [
    "numpy.zeros",
    "sklearn.linear_model.tests.test_sgd.T2",
    "sklearn.linear_model.tests.test_sgd.X2",
    "sklearn.linear_model.tests.test_sgd.Y2",
    "sklearn.linear_model.tests.test_sgd.true_result2",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase.test_sgd_n_iter_no_change": {
  "data": {
   "lineno": 399,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase.test_sgd_predict_proba_method_access": {
  "data": {
   "lineno": 555,
   "symbols_in_volume": [
    "AttributeError",
    "hasattr",
    "sklearn.linear_model.SGDClassifier",
    "sklearn.linear_model.SGDClassifier.loss_functions",
    "sklearn.linear_model.tests.test_sgd.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase.test_sgd_proba": {
  "data": {
   "lineno": 578,
   "symbols_in_volume": [
    "hasattr",
    "isinstance",
    "numpy.all",
    "numpy.argmax",
    "numpy.argmin",
    "numpy.argsort",
    "numpy.log",
    "sklearn.linear_model.SGDClassifier",
    "sklearn.linear_model.tests.test_sgd.X",
    "sklearn.linear_model.tests.test_sgd.X2",
    "sklearn.linear_model.tests.test_sgd.Y",
    "sklearn.linear_model.tests.test_sgd.Y2",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_false",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase.test_sgd_shuffle_param": {
  "data": {
   "lineno": 387,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase.test_sgd_validation_fraction": {
  "data": {
   "lineno": 395,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase.test_warm_start_multiclass": {
  "data": {
   "lineno": 919,
   "symbols_in_volume": [
    "sklearn.linear_model.tests.test_sgd.X2",
    "sklearn.linear_model.tests.test_sgd.Y2"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase.test_weights_multiplied": {
  "data": {
   "lineno": 721,
   "symbols_in_volume": [
    "numpy.copy",
    "numpy.random.RandomState",
    "sklearn.linear_model.tests.test_sgd.X4",
    "sklearn.linear_model.tests.test_sgd.Y4",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase.test_wrong_class_weight_format": {
  "data": {
   "lineno": 716,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.linear_model.tests.test_sgd.X",
    "sklearn.linear_model.tests.test_sgd.Y",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase.test_wrong_class_weight_label": {
  "data": {
   "lineno": 711,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.linear_model.tests.test_sgd.X",
    "sklearn.linear_model.tests.test_sgd.Y",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase.test_wrong_sample_weights": {
  "data": {
   "lineno": 802,
   "symbols_in_volume": [
    "ValueError",
    "numpy.arange",
    "sklearn.linear_model.tests.test_sgd.X",
    "sklearn.linear_model.tests.test_sgd.Y",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.DenseSGDRegressorTestCase": {
  "data": {
   "lineno": 942,
   "symbols_in_volume": [
    "sklearn.linear_model.SGDRegressor",
    "sklearn.linear_model.tests.test_sgd.CommonTest",
    "sklearn.linear_model.tests.test_sgd.unittest"
   ]
  },
  "type": "class"
 },
 "sklearn.linear_model.tests.test_sgd.DenseSGDRegressorTestCase._test_partial_fit_equal_fit": {
  "data": {
   "lineno": 1158,
   "symbols_in_volume": [
    "range",
    "sklearn.linear_model.tests.test_sgd.T",
    "sklearn.linear_model.tests.test_sgd.X",
    "sklearn.linear_model.tests.test_sgd.Y",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.DenseSGDRegressorTestCase.test_average_sparse": {
  "data": {
   "lineno": 1019,
   "symbols_in_volume": [
    "int",
    "sklearn.linear_model.tests.test_sgd.X3",
    "sklearn.linear_model.tests.test_sgd.Y3",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.DenseSGDRegressorTestCase.test_elasticnet_convergence": {
  "data": {
   "lineno": 1115,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.random.RandomState",
    "sklearn.linear_model.ElasticNet",
    "sklearn.linear_model.tests.test_sgd.X",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.DenseSGDRegressorTestCase.test_loss_function_epsilon": {
  "data": {
   "lineno": 1186
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.DenseSGDRegressorTestCase.test_partial_fit": {
  "data": {
   "lineno": 1142,
   "symbols_in_volume": [
    "id",
    "sklearn.linear_model.tests.test_sgd.X",
    "sklearn.linear_model.tests.test_sgd.Y",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_true",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.DenseSGDRegressorTestCase.test_partial_fit_equal_fit_adaptive": {
  "data": {
   "lineno": 1183
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.DenseSGDRegressorTestCase.test_partial_fit_equal_fit_constant": {
  "data": {
   "lineno": 1174
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.DenseSGDRegressorTestCase.test_partial_fit_equal_fit_invscaling": {
  "data": {
   "lineno": 1180
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.DenseSGDRegressorTestCase.test_partial_fit_equal_fit_optimal": {
  "data": {
   "lineno": 1177
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.DenseSGDRegressorTestCase.test_sgd": {
  "data": {
   "lineno": 947,
   "symbols_in_volume": [
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.DenseSGDRegressorTestCase.test_sgd_averaged_computed_correctly": {
  "data": {
   "lineno": 963,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.random.RandomState",
    "sklearn.linear_model.tests.test_sgd.X",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.DenseSGDRegressorTestCase.test_sgd_averaged_partial_fit": {
  "data": {
   "lineno": 991,
   "symbols_in_volume": [
    "int",
    "numpy.dot",
    "numpy.random.RandomState",
    "sklearn.linear_model.tests.test_sgd.X",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.DenseSGDRegressorTestCase.test_sgd_bad_loss": {
  "data": {
   "lineno": 959,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.DenseSGDRegressorTestCase.test_sgd_bad_penalty": {
  "data": {
   "lineno": 954,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.DenseSGDRegressorTestCase.test_sgd_epsilon_insensitive": {
  "data": {
   "lineno": 1065,
   "symbols_in_volume": [
    "numpy.linspace",
    "numpy.random.RandomState",
    "sklearn.linear_model.tests.test_sgd.X",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.DenseSGDRegressorTestCase.test_sgd_huber_fit": {
  "data": {
   "lineno": 1091,
   "symbols_in_volume": [
    "numpy.linspace",
    "numpy.random.RandomState",
    "sklearn.linear_model.tests.test_sgd.X",
    "sklearn.utils.testing.assert_greater"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.DenseSGDRegressorTestCase.test_sgd_least_squares_fit": {
  "data": {
   "lineno": 1041,
   "symbols_in_volume": [
    "numpy.linspace",
    "numpy.random.RandomState",
    "sklearn.linear_model.tests.test_sgd.X",
    "sklearn.utils.testing.assert_greater"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.LabelEncoder": {
  "data": {
   "shadows": "sklearn.preprocessing.LabelEncoder"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sgd.MinMaxScaler": {
  "data": {
   "shadows": "sklearn.preprocessing.MinMaxScaler"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sgd.SGDClassifier": {
  "data": {
   "shadows": "sklearn.linear_model.SGDClassifier"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sgd.SGDRegressor": {
  "data": {
   "shadows": "sklearn.linear_model.SGDRegressor"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sgd.SparseSGDClassifier": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "sklearn.linear_model.SGDClassifier"
   ]
  },
  "type": "class"
 },
 "sklearn.linear_model.tests.test_sgd.SparseSGDClassifier.decision_function": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "scipy.sparse.csr_matrix",
    "sklearn.linear_model.tests.test_sgd.SparseSGDClassifier",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.SparseSGDClassifier.fit": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "scipy.sparse.csr_matrix",
    "sklearn.linear_model.tests.test_sgd.SparseSGDClassifier",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.SparseSGDClassifier.partial_fit": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "scipy.sparse.csr_matrix",
    "sklearn.linear_model.tests.test_sgd.SparseSGDClassifier",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.SparseSGDClassifier.predict_proba": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "scipy.sparse.csr_matrix",
    "sklearn.linear_model.tests.test_sgd.SparseSGDClassifier",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.SparseSGDClassifierTestCase": {
  "data": {
   "lineno": 933,
   "symbols_in_volume": [
    "sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase",
    "sklearn.linear_model.tests.test_sgd.SparseSGDClassifier"
   ]
  },
  "type": "class"
 },
 "sklearn.linear_model.tests.test_sgd.SparseSGDRegressor": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "sklearn.linear_model.SGDRegressor"
   ]
  },
  "type": "class"
 },
 "sklearn.linear_model.tests.test_sgd.SparseSGDRegressor.decision_function": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "scipy.sparse.csr_matrix",
    "sklearn.linear_model.SGDRegressor.decision_function"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.SparseSGDRegressor.fit": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "scipy.sparse.csr_matrix",
    "sklearn.linear_model.SGDRegressor.fit"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.SparseSGDRegressor.partial_fit": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "scipy.sparse.csr_matrix",
    "sklearn.linear_model.SGDRegressor.partial_fit"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.SparseSGDRegressorTestCase": {
  "data": {
   "lineno": 1192,
   "symbols_in_volume": [
    "sklearn.linear_model.tests.test_sgd.DenseSGDRegressorTestCase",
    "sklearn.linear_model.tests.test_sgd.SparseSGDRegressor"
   ]
  },
  "type": "class"
 },
 "sklearn.linear_model.tests.test_sgd.StandardScaler": {
  "data": {
   "shadows": "sklearn.preprocessing.StandardScaler"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sgd.T": {
  "data": {
   "lineno": 72
  },
  "type": "constant"
 },
 "sklearn.linear_model.tests.test_sgd.T2": {
  "data": {
   "lineno": 80
  },
  "type": "constant"
 },
 "sklearn.linear_model.tests.test_sgd.X": {
  "data": {
   "lineno": 70
  },
  "type": "constant"
 },
 "sklearn.linear_model.tests.test_sgd.X2": {
  "data": {
   "lineno": 76
  },
  "type": "constant"
 },
 "sklearn.linear_model.tests.test_sgd.X3": {
  "data": {
   "lineno": 84
  },
  "type": "constant"
 },
 "sklearn.linear_model.tests.test_sgd.X4": {
  "data": {
   "lineno": 91
  },
  "type": "constant"
 },
 "sklearn.linear_model.tests.test_sgd.X5": {
  "data": {
   "lineno": 100
  },
  "type": "constant"
 },
 "sklearn.linear_model.tests.test_sgd.Y": {
  "data": {
   "lineno": 71
  },
  "type": "constant"
 },
 "sklearn.linear_model.tests.test_sgd.Y2": {
  "data": {
   "lineno": 79
  },
  "type": "constant"
 },
 "sklearn.linear_model.tests.test_sgd.Y3": {
  "data": {
   "lineno": 88
  },
  "type": "constant"
 },
 "sklearn.linear_model.tests.test_sgd.Y4": {
  "data": {
   "lineno": 95
  },
  "type": "constant"
 },
 "sklearn.linear_model.tests.test_sgd.Y5": {
  "data": {
   "lineno": 101
  },
  "type": "constant"
 },
 "sklearn.linear_model.tests.test_sgd._test_gradient_common": {
  "data": {
   "lineno": 1362,
   "symbols_in_volume": [
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.assert_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sgd.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sgd.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sgd.assert_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sgd.assert_false": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_false"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sgd.assert_greater": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_greater"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sgd.assert_less": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_less"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sgd.assert_no_warnings": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_no_warnings"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sgd.assert_raises": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sgd.assert_raises_regexp": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises_regexp"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sgd.assert_true": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_true"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sgd.assert_warns": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_warns"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sgd.assert_warns_message": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_warns_message"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sgd.clone": {
  "data": {
   "shadows": "sklearn.base.clone"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sgd.datasets": {
  "data": {
   "shadows": "sklearn.datasets"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sgd.ignore_warnings": {
  "data": {
   "shadows": "sklearn.utils.testing.ignore_warnings"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sgd.iris": {
  "data": {
   "lineno": 97
  },
  "type": "constant"
 },
 "sklearn.linear_model.tests.test_sgd.linear_model": {
  "data": {
   "shadows": "sklearn.linear_model"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sgd.metrics": {
  "data": {
   "shadows": "sklearn.metrics"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sgd.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sgd.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sgd.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sgd.scale": {
  "data": {
   "shadows": "sklearn.preprocessing.scale"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sgd.sgd_fast": {
  "data": {
   "shadows": "sklearn.linear_model.sgd_fast"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sgd.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sgd.test_future_and_deprecation_warnings": {
  "data": {
   "lineno": 1309,
   "symbols_in_volume": [
    "DeprecationWarning",
    "FutureWarning",
    "sklearn.utils.testing.assert_no_warnings",
    "sklearn.utils.testing.assert_warns_message"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_future_and_deprecation_warnings.init": {
  "data": {
   "lineno": 1312,
   "symbols_in_volume": [
    "sklearn.linear_model.SGDClassifier"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_gradient_epsilon_insensitive": {
  "data": {
   "lineno": 1454,
   "symbols_in_volume": [
    "sklearn.linear_model.sgd_fast.EpsilonInsensitive",
    "sklearn.linear_model.tests.test_sgd._test_gradient_common"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_gradient_hinge": {
  "data": {
   "lineno": 1369,
   "symbols_in_volume": [
    "sklearn.linear_model.sgd_fast.Hinge",
    "sklearn.linear_model.tests.test_sgd._test_gradient_common"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_gradient_huber": {
  "data": {
   "lineno": 1431,
   "symbols_in_volume": [
    "sklearn.linear_model.sgd_fast.Huber",
    "sklearn.linear_model.tests.test_sgd._test_gradient_common"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_gradient_log": {
  "data": {
   "lineno": 1403,
   "symbols_in_volume": [
    "numpy.exp",
    "sklearn.linear_model.sgd_fast.Log",
    "sklearn.linear_model.tests.test_sgd._test_gradient_common",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_gradient_modified_huber": {
  "data": {
   "lineno": 1442,
   "symbols_in_volume": [
    "sklearn.linear_model.sgd_fast.ModifiedHuber",
    "sklearn.linear_model.tests.test_sgd._test_gradient_common"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_gradient_squared_epsilon_insensitive": {
  "data": {
   "lineno": 1465,
   "symbols_in_volume": [
    "sklearn.linear_model.sgd_fast.SquaredEpsilonInsensitive",
    "sklearn.linear_model.tests.test_sgd._test_gradient_common"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_gradient_squared_hinge": {
  "data": {
   "lineno": 1392,
   "symbols_in_volume": [
    "sklearn.linear_model.sgd_fast.SquaredHinge",
    "sklearn.linear_model.tests.test_sgd._test_gradient_common"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_gradient_squared_loss": {
  "data": {
   "lineno": 1420,
   "symbols_in_volume": [
    "sklearn.linear_model.sgd_fast.SquaredLoss",
    "sklearn.linear_model.tests.test_sgd._test_gradient_common"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_l1_ratio": {
  "data": {
   "lineno": 1198,
   "symbols_in_volume": [
    "sklearn.datasets.make_classification",
    "sklearn.linear_model.SGDClassifier",
    "sklearn.linear_model.tests.test_sgd.X",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_large_regularization": {
  "data": {
   "lineno": 1267,
   "symbols_in_volume": [
    "numpy.errstate",
    "numpy.zeros_like",
    "sklearn.linear_model.SGDClassifier",
    "sklearn.linear_model.tests.test_sgd.iris",
    "sklearn.linear_model.tests.test_sgd.pytest",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_numerical_stability_large_gradient": {
  "data": {
   "lineno": 1256,
   "symbols_in_volume": [
    "numpy.errstate",
    "numpy.isfinite",
    "sklearn.linear_model.SGDClassifier",
    "sklearn.linear_model.tests.test_sgd.iris",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_tol_and_max_iter_default_values": {
  "data": {
   "lineno": 1333,
   "symbols_in_volume": [
    "DeprecationWarning",
    "FutureWarning",
    "sklearn.linear_model.SGDClassifier",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_tol_parameter": {
  "data": {
   "lineno": 1279,
   "symbols_in_volume": [
    "sklearn.exceptions.ConvergenceWarning",
    "sklearn.linear_model.SGDClassifier",
    "sklearn.linear_model.tests.test_sgd.X",
    "sklearn.linear_model.tests.test_sgd.iris",
    "sklearn.preprocessing.StandardScaler",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_greater",
    "sklearn.utils.testing.assert_warns"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_underflow_or_overlow": {
  "data": {
   "lineno": 1221,
   "symbols_in_volume": [
    "ValueError",
    "numpy.dot",
    "numpy.errstate",
    "numpy.int32",
    "numpy.isfinite",
    "numpy.random.RandomState",
    "numpy.unique",
    "sklearn.linear_model.SGDClassifier",
    "sklearn.linear_model.tests.test_sgd.X",
    "sklearn.preprocessing.MinMaxScaler",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_raises_regexp",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.train_test_split": {
  "data": {
   "shadows": "sklearn.model_selection.train_test_split"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sgd.true_result": {
  "data": {
   "lineno": 73
  },
  "type": "constant"
 },
 "sklearn.linear_model.tests.test_sgd.true_result2": {
  "data": {
   "lineno": 81
  },
  "type": "constant"
 },
 "sklearn.linear_model.tests.test_sgd.true_result5": {
  "data": {
   "lineno": 102
  },
  "type": "constant"
 },
 "sklearn.linear_model.tests.test_sgd.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sparse_coordinate_descent": {
  "data": {},
  "type": "module"
 },
 "sklearn.linear_model.tests.test_sparse_coordinate_descent.ElasticNet": {
  "data": {
   "shadows": "sklearn.linear_model.coordinate_descent.ElasticNet"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sparse_coordinate_descent.ElasticNetCV": {
  "data": {
   "shadows": "sklearn.linear_model.coordinate_descent.ElasticNetCV"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sparse_coordinate_descent.Lasso": {
  "data": {
   "shadows": "sklearn.linear_model.coordinate_descent.Lasso"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sparse_coordinate_descent.LassoCV": {
  "data": {
   "shadows": "sklearn.linear_model.coordinate_descent.LassoCV"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sparse_coordinate_descent._test_sparse_enet_not_as_toy_dataset": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "numpy.sum",
    "sklearn.linear_model.coordinate_descent.ElasticNet",
    "sklearn.linear_model.tests.test_sparse_coordinate_descent.make_sparse_data",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_greater",
    "sklearn.utils.testing.assert_less"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sparse_coordinate_descent.assert_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sparse_coordinate_descent.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sparse_coordinate_descent.assert_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sparse_coordinate_descent.assert_greater": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_greater"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sparse_coordinate_descent.assert_less": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_less"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sparse_coordinate_descent.assert_true": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_true"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sparse_coordinate_descent.ignore_warnings": {
  "data": {
   "shadows": "sklearn.utils.testing.ignore_warnings"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sparse_coordinate_descent.make_sparse_data": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.dot",
    "numpy.random.RandomState",
    "numpy.ravel",
    "scipy.sparse.csc_matrix"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sparse_coordinate_descent.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sparse_coordinate_descent.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sparse_coordinate_descent.test_enet_multitarget": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "range",
    "sklearn.linear_model.coordinate_descent.ElasticNet",
    "sklearn.linear_model.tests.test_sparse_coordinate_descent.make_sparse_data",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sparse_coordinate_descent.test_enet_toy_explicit_sparse_input": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "f",
    "scipy.sparse.lil_matrix",
    "sklearn.linear_model.coordinate_descent.ElasticNet",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sparse_coordinate_descent.test_enet_toy_list_input": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "numpy.array",
    "scipy.sparse.csc_matrix",
    "sklearn.linear_model.coordinate_descent.ElasticNet",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sparse_coordinate_descent.test_lasso_zero": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "numpy.array",
    "scipy.sparse.csc_matrix",
    "sklearn.linear_model.coordinate_descent.Lasso",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sparse_coordinate_descent.test_normalize_option": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "scipy.sparse.csc_matrix",
    "sklearn.linear_model.coordinate_descent.ElasticNet",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sparse_coordinate_descent.test_path_parameters": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "len",
    "sklearn.linear_model.coordinate_descent.ElasticNetCV",
    "sklearn.linear_model.tests.test_sparse_coordinate_descent.make_sparse_data",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sparse_coordinate_descent.test_same_multiple_output_sparse_dense": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "numpy.array",
    "scipy.sparse.coo_matrix",
    "sklearn.linear_model.coordinate_descent.ElasticNet",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sparse_coordinate_descent.test_same_output_sparse_dense_lasso_and_enet_cv": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "sklearn.linear_model.coordinate_descent.ElasticNetCV",
    "sklearn.linear_model.coordinate_descent.LassoCV",
    "sklearn.linear_model.tests.test_sparse_coordinate_descent.make_sparse_data",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sparse_coordinate_descent.test_sparse_coef": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "scipy.sparse.isspmatrix",
    "sklearn.linear_model.coordinate_descent.ElasticNet",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sparse_coordinate_descent.test_sparse_enet_not_as_toy_dataset": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "sklearn.linear_model.tests.test_sparse_coordinate_descent._test_sparse_enet_not_as_toy_dataset"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sparse_coordinate_descent.test_sparse_lasso_not_as_toy_dataset": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "numpy.sum",
    "sklearn.linear_model.coordinate_descent.Lasso",
    "sklearn.linear_model.tests.test_sparse_coordinate_descent.make_sparse_data",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_greater"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_theil_sen": {
  "data": {},
  "type": "module"
 },
 "sklearn.linear_model.tests.test_theil_sen.ConvergenceWarning": {
  "data": {
   "shadows": "sklearn.exceptions.ConvergenceWarning"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_theil_sen.LinearRegression": {
  "data": {
   "shadows": "sklearn.linear_model.LinearRegression"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_theil_sen.TheilSenRegressor": {
  "data": {
   "shadows": "sklearn.linear_model.TheilSenRegressor"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_theil_sen._breakdown_point": {
  "data": {
   "shadows": "sklearn.linear_model.theil_sen._breakdown_point"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_theil_sen._modified_weiszfeld_step": {
  "data": {
   "shadows": "sklearn.linear_model.theil_sen._modified_weiszfeld_step"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_theil_sen._spatial_median": {
  "data": {
   "shadows": "sklearn.linear_model.theil_sen._spatial_median"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_theil_sen.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_theil_sen.assert_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_theil_sen.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_theil_sen.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_theil_sen.assert_array_less": {
  "data": {
   "shadows": "numpy.testing.assert_array_less"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_theil_sen.assert_greater": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_greater"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_theil_sen.assert_less": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_less"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_theil_sen.assert_raises": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_theil_sen.assert_warns": {
  "data": {
   "shadows": "numpy.testing.assert_warns"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_theil_sen.contextmanager": {
  "data": {
   "shadows": "contextlib.contextmanager"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_theil_sen.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_theil_sen.fmin_bfgs": {
  "data": {
   "shadows": "scipy.optimize.fmin_bfgs"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_theil_sen.gen_toy_problem_1d": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "numpy.newaxis",
    "numpy.random.RandomState"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_theil_sen.gen_toy_problem_2d": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.dot",
    "numpy.random.RandomState"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_theil_sen.gen_toy_problem_4d": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.dot",
    "numpy.random.RandomState"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_theil_sen.no_stdout_stderr": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "contextlib.contextmanager",
    "open",
    "sklearn.linear_model.tests.test_theil_sen.os",
    "sklearn.linear_model.tests.test_theil_sen.sys"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_theil_sen.norm": {
  "data": {
   "shadows": "scipy.linalg.norm"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_theil_sen.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_theil_sen.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_theil_sen.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_theil_sen.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_theil_sen.test_calc_breakdown_point": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.sqrt",
    "sklearn.linear_model.theil_sen._breakdown_point",
    "sklearn.utils.testing.assert_less"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_theil_sen.test_checksubparams_n_subsamples_if_less_samples_than_features": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "ValueError",
    "numpy.random.RandomState",
    "sklearn.linear_model.TheilSenRegressor",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_theil_sen.test_checksubparams_negative_subpopulation": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.linear_model.TheilSenRegressor",
    "sklearn.linear_model.tests.test_theil_sen.gen_toy_problem_1d",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_theil_sen.test_checksubparams_too_few_subsamples": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.linear_model.TheilSenRegressor",
    "sklearn.linear_model.tests.test_theil_sen.gen_toy_problem_1d",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_theil_sen.test_checksubparams_too_many_subsamples": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.linear_model.TheilSenRegressor",
    "sklearn.linear_model.tests.test_theil_sen.gen_toy_problem_1d",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_theil_sen.test_less_samples_than_features": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "numpy.testing.assert_array_almost_equal",
    "sklearn.linear_model.LinearRegression",
    "sklearn.linear_model.TheilSenRegressor"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_theil_sen.test_modweiszfeld_step_1d": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_array_less",
    "sklearn.linear_model.theil_sen._modified_weiszfeld_step"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_theil_sen.test_modweiszfeld_step_2d": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.assert_array_almost_equal",
    "sklearn.linear_model.theil_sen._modified_weiszfeld_step"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_theil_sen.test_spatial_median_1d": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.median",
    "numpy.random.RandomState",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_array_equal",
    "sklearn.linear_model.theil_sen._spatial_median"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_theil_sen.test_spatial_median_2d": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_warns",
    "scipy.optimize.fmin_bfgs",
    "sklearn.exceptions.ConvergenceWarning",
    "sklearn.linear_model.theil_sen._spatial_median"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_theil_sen.test_spatial_median_2d.cost_func": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.sum",
    "scipy.linalg.norm"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_theil_sen.test_subpopulation": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "numpy.testing.assert_array_almost_equal",
    "sklearn.linear_model.TheilSenRegressor",
    "sklearn.linear_model.tests.test_theil_sen.gen_toy_problem_4d"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_theil_sen.test_subsamples": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "numpy.testing.assert_array_almost_equal",
    "sklearn.linear_model.LinearRegression",
    "sklearn.linear_model.TheilSenRegressor",
    "sklearn.linear_model.tests.test_theil_sen.gen_toy_problem_4d"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_theil_sen.test_theil_sen_1d": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.testing.assert_array_almost_equal",
    "sklearn.linear_model.LinearRegression",
    "sklearn.linear_model.TheilSenRegressor",
    "sklearn.linear_model.tests.test_theil_sen.gen_toy_problem_1d",
    "sklearn.utils.testing.assert_greater"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_theil_sen.test_theil_sen_1d_no_intercept": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.testing.assert_array_almost_equal",
    "sklearn.linear_model.LinearRegression",
    "sklearn.linear_model.TheilSenRegressor",
    "sklearn.linear_model.tests.test_theil_sen.gen_toy_problem_1d",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_greater"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_theil_sen.test_theil_sen_2d": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "numpy.testing.assert_array_almost_equal",
    "scipy.linalg.norm",
    "sklearn.linear_model.LinearRegression",
    "sklearn.linear_model.TheilSenRegressor",
    "sklearn.linear_model.tests.test_theil_sen.gen_toy_problem_2d",
    "sklearn.utils.testing.assert_greater"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_theil_sen.test_theil_sen_parallel": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "numpy.testing.assert_array_almost_equal",
    "scipy.linalg.norm",
    "sklearn.linear_model.LinearRegression",
    "sklearn.linear_model.TheilSenRegressor",
    "sklearn.linear_model.tests.test_theil_sen.gen_toy_problem_2d",
    "sklearn.utils.testing.assert_greater"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_theil_sen.test_verbosity": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "sklearn.linear_model.TheilSenRegressor",
    "sklearn.linear_model.tests.test_theil_sen.gen_toy_problem_1d",
    "sklearn.linear_model.tests.test_theil_sen.no_stdout_stderr"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.theil_sen": {
  "data": {
   "symbols_in_volume": [
    "numpy.double",
    "numpy.finfo"
   ]
  },
  "type": "module"
 },
 "sklearn.linear_model.theil_sen.TheilSenRegressor": {
  "data": {
   "lineno": 198
  },
  "type": "class"
 },
 "sklearn.linear_model.theil_sen.TheilSenRegressor.__init__": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.theil_sen.TheilSenRegressor._check_subparams": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "max",
    "min",
    "numpy.rint",
    "scipy.special.binom"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.theil_sen.TheilSenRegressor.fit": {
  "data": {
   "lineno": 348,
   "symbols_in_volume": [
    "Parallel",
    "check_X_y",
    "check_random_state",
    "delayed",
    "effective_n_jobs",
    "int",
    "itertools.combinations",
    "list",
    "numpy.array_split",
    "numpy.rint",
    "numpy.vstack",
    "print",
    "scipy.special.binom",
    "sklearn.linear_model.theil_sen._breakdown_point",
    "sklearn.linear_model.theil_sen._lstsq",
    "sklearn.linear_model.theil_sen._spatial_median"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.theil_sen._EPSILON": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "sklearn.linear_model.theil_sen._breakdown_point": {
  "data": {
   "lineno": 133
  },
  "type": "function"
 },
 "sklearn.linear_model.theil_sen._lstsq": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "enumerate",
    "int",
    "lstsq",
    "max",
    "numpy.empty",
    "numpy.ones",
    "numpy.zeros",
    "scipy.linalg.lapack.get_lapack_funcs"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.theil_sen._modified_weiszfeld_step": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "int",
    "max",
    "min",
    "numpy.newaxis",
    "numpy.sqrt",
    "numpy.sum",
    "scipy.linalg.norm",
    "sklearn.linear_model.theil_sen._EPSILON"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.theil_sen._spatial_median": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "numpy.mean",
    "numpy.median",
    "numpy.sum",
    "sklearn.linear_model.theil_sen._modified_weiszfeld_step",
    "sklearn.linear_model.theil_sen.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.theil_sen.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "sklearn.linear_model.theil_sen.binom": {
  "data": {
   "shadows": "scipy.special.binom"
  },
  "type": "import"
 },
 "sklearn.linear_model.theil_sen.combinations": {
  "data": {
   "shadows": "itertools.combinations"
  },
  "type": "import"
 },
 "sklearn.linear_model.theil_sen.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sklearn.linear_model.theil_sen.get_lapack_funcs": {
  "data": {
   "shadows": "scipy.linalg.lapack.get_lapack_funcs"
  },
  "type": "import"
 },
 "sklearn.linear_model.theil_sen.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "sklearn.linear_model.theil_sen.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.linear_model.theil_sen.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "sklearn.linear_model.theil_sen.range": {
  "data": {
   "shadows": "xrange"
  },
  "type": "import"
 },
 "sklearn.linear_model.theil_sen.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.logger": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "sklearn.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "sklearn.manifold": {
  "data": {},
  "type": "module"
 },
 "sklearn.manifold.__all__": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "sklearn.manifold.isomap": {
  "data": {},
  "type": "module"
 },
 "sklearn.manifold.isomap.Isomap": {
  "data": {
   "lineno": 15
  },
  "type": "class"
 },
 "sklearn.manifold.isomap.Isomap.__init__": {
  "data": {
   "lineno": 104
  },
  "type": "function"
 },
 "sklearn.manifold.isomap.Isomap._fit_transform": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "KernelPCA",
    "NearestNeighbors",
    "check_array",
    "graph_shortest_path",
    "kneighbors_graph"
   ]
  },
  "type": "function"
 },
 "sklearn.manifold.isomap.Isomap.fit": {
  "data": {
   "lineno": 164
  },
  "type": "function"
 },
 "sklearn.manifold.isomap.Isomap.fit_transform": {
  "data": {
   "lineno": 183
  },
  "type": "function"
 },
 "sklearn.manifold.isomap.Isomap.reconstruction_error": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "KernelCenterer",
    "numpy.sqrt",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "sklearn.manifold.isomap.Isomap.transform": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "check_array",
    "numpy.min",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "sklearn.manifold.isomap.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.manifold.locally_linear": {
  "data": {},
  "type": "module"
 },
 "sklearn.manifold.locally_linear.LocallyLinearEmbedding": {
  "data": {
   "lineno": 521
  },
  "type": "class"
 },
 "sklearn.manifold.locally_linear.LocallyLinearEmbedding.__init__": {
  "data": {
   "lineno": 635
  },
  "type": "function"
 },
 "sklearn.manifold.locally_linear.LocallyLinearEmbedding._fit_transform": {
  "data": {
   "lineno": 652,
   "symbols_in_volume": [
    "NearestNeighbors",
    "check_array",
    "check_random_state",
    "float",
    "sklearn.manifold.locally_linear.locally_linear_embedding"
   ]
  },
  "type": "function"
 },
 "sklearn.manifold.locally_linear.LocallyLinearEmbedding.fit": {
  "data": {
   "lineno": 668
  },
  "type": "function"
 },
 "sklearn.manifold.locally_linear.LocallyLinearEmbedding.fit_transform": {
  "data": {
   "lineno": 685
  },
  "type": "function"
 },
 "sklearn.manifold.locally_linear.LocallyLinearEmbedding.transform": {
  "data": {
   "lineno": 702,
   "symbols_in_volume": [
    "check_array",
    "check_is_fitted",
    "numpy.dot",
    "numpy.empty",
    "range",
    "sklearn.manifold.locally_linear.barycenter_weights"
   ]
  },
  "type": "function"
 },
 "sklearn.manifold.locally_linear.barycenter_kneighbors_graph": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "NearestNeighbors",
    "numpy.arange",
    "scipy.sparse.csr_matrix",
    "sklearn.manifold.locally_linear.barycenter_weights"
   ]
  },
  "type": "function"
 },
 "sklearn.manifold.locally_linear.barycenter_weights": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "check_array",
    "enumerate",
    "numpy.dot",
    "numpy.empty",
    "numpy.ones",
    "numpy.sum",
    "numpy.trace",
    "scipy.linalg.solve"
   ]
  },
  "type": "function"
 },
 "sklearn.manifold.locally_linear.csr_matrix": {
  "data": {
   "shadows": "scipy.sparse.csr_matrix"
  },
  "type": "import"
 },
 "sklearn.manifold.locally_linear.eigh": {
  "data": {
   "shadows": "scipy.linalg.eigh"
  },
  "type": "import"
 },
 "sklearn.manifold.locally_linear.eigsh": {
  "data": {
   "shadows": "scipy.sparse.linalg.eigsh"
  },
  "type": "import"
 },
 "sklearn.manifold.locally_linear.eye": {
  "data": {
   "shadows": "scipy.sparse.eye"
  },
  "type": "import"
 },
 "sklearn.manifold.locally_linear.locally_linear_embedding": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "NearestNeighbors",
    "ValueError",
    "abs",
    "int",
    "min",
    "numpy.dot",
    "numpy.empty",
    "numpy.float64",
    "numpy.full",
    "numpy.linalg.norm",
    "numpy.median",
    "numpy.meshgrid",
    "numpy.ones",
    "numpy.outer",
    "numpy.searchsorted",
    "numpy.sqrt",
    "numpy.where",
    "numpy.zeros",
    "range",
    "scipy.linalg.eigh",
    "scipy.linalg.qr",
    "scipy.linalg.svd",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.eye",
    "sklearn.manifold.locally_linear.barycenter_kneighbors_graph",
    "sklearn.manifold.locally_linear.null_space",
    "stable_cumsum"
   ]
  },
  "type": "function"
 },
 "sklearn.manifold.locally_linear.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.manifold.locally_linear.null_space": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "check_random_state",
    "hasattr",
    "numpy.abs",
    "numpy.argsort",
    "numpy.sum",
    "scipy.linalg.eigh",
    "scipy.sparse.linalg.eigsh"
   ]
  },
  "type": "function"
 },
 "sklearn.manifold.locally_linear.qr": {
  "data": {
   "shadows": "scipy.linalg.qr"
  },
  "type": "import"
 },
 "sklearn.manifold.locally_linear.solve": {
  "data": {
   "shadows": "scipy.linalg.solve"
  },
  "type": "import"
 },
 "sklearn.manifold.locally_linear.svd": {
  "data": {
   "shadows": "scipy.linalg.svd"
  },
  "type": "import"
 },
 "sklearn.manifold.mds": {
  "data": {},
  "type": "module"
 },
 "sklearn.manifold.mds.MDS": {
  "data": {
   "lineno": 279
  },
  "type": "class"
 },
 "sklearn.manifold.mds.MDS.__init__": {
  "data": {
   "lineno": 365
  },
  "type": "function"
 },
 "sklearn.manifold.mds.MDS._pairwise": {
  "data": {
   "lineno": 378,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.manifold.mds.MDS.fit": {
  "data": {
   "lineno": 382
  },
  "type": "function"
 },
 "sklearn.manifold.mds.MDS.fit_transform": {
  "data": {
   "lineno": 402,
   "symbols_in_volume": [
    "ValueError",
    "check_array",
    "euclidean_distances",
    "sklearn.manifold.mds.smacof",
    "sklearn.manifold.mds.warnings",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.manifold.mds._smacof_single": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "IsotonicRegression",
    "ValueError",
    "check_random_state",
    "check_symmetric",
    "euclidean_distances",
    "len",
    "numpy.arange",
    "numpy.dot",
    "numpy.sqrt",
    "numpy.tri",
    "print",
    "range"
   ]
  },
  "type": "function"
 },
 "sklearn.manifold.mds.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.manifold.mds.smacof": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "Parallel",
    "check_array",
    "check_random_state",
    "delayed",
    "effective_n_jobs",
    "hasattr",
    "max",
    "numpy.argmin",
    "numpy.asarray",
    "numpy.iinfo",
    "numpy.int32",
    "range",
    "sklearn.manifold.mds._smacof_single",
    "sklearn.manifold.mds.warnings",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.manifold.mds.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.manifold.setup": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.distutils.core.setup",
    "sklearn.manifold.setup.configuration"
   ]
  },
  "type": "module"
 },
 "sklearn.manifold.setup.Configuration": {
  "data": {
   "shadows": "numpy.distutils.misc_util.Configuration"
  },
  "type": "import"
 },
 "sklearn.manifold.setup.configuration": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "numpy.distutils.misc_util.Configuration",
    "os.path.join",
    "sklearn._build_utils.get_blas_info",
    "sklearn.manifold.setup.numpy",
    "sklearn.manifold.setup.os"
   ]
  },
  "type": "function"
 },
 "sklearn.manifold.setup.get_blas_info": {
  "data": {
   "shadows": "sklearn._build_utils.get_blas_info"
  },
  "type": "import"
 },
 "sklearn.manifold.setup.join": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "sklearn.manifold.setup.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.manifold.setup.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "sklearn.manifold.setup.setup": {
  "data": {
   "shadows": "numpy.distutils.core.setup"
  },
  "type": "import"
 },
 "sklearn.manifold.spectral_embedding_": {
  "data": {},
  "type": "module"
 },
 "sklearn.manifold.spectral_embedding_.SpectralEmbedding": {
  "data": {
   "lineno": 340
  },
  "type": "class"
 },
 "sklearn.manifold.spectral_embedding_.SpectralEmbedding.__init__": {
  "data": {
   "lineno": 428
  },
  "type": "function"
 },
 "sklearn.manifold.spectral_embedding_.SpectralEmbedding._get_affinity_matrix": {
  "data": {
   "lineno": 443,
   "symbols_in_volume": [
    "int",
    "kneighbors_graph",
    "max",
    "rbf_kernel",
    "scipy.sparse.issparse",
    "sklearn.manifold.spectral_embedding_.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.manifold.spectral_embedding_.SpectralEmbedding._pairwise": {
  "data": {
   "lineno": 439,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.manifold.spectral_embedding_.SpectralEmbedding.fit": {
  "data": {
   "lineno": 490,
   "symbols_in_volume": [
    "ValueError",
    "callable",
    "check_array",
    "check_random_state",
    "isinstance",
    "set",
    "sklearn.manifold.spectral_embedding_.spectral_embedding"
   ]
  },
  "type": "function"
 },
 "sklearn.manifold.spectral_embedding_.SpectralEmbedding.fit_transform": {
  "data": {
   "lineno": 530
  },
  "type": "function"
 },
 "sklearn.manifold.spectral_embedding_._graph_connected_component": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "numpy.bool",
    "numpy.logical_or",
    "numpy.where",
    "numpy.zeros",
    "range",
    "scipy.sparse.issparse"
   ]
  },
  "type": "function"
 },
 "sklearn.manifold.spectral_embedding_._graph_is_connected": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "scipy.sparse.csgraph.connected_components",
    "scipy.sparse.isspmatrix",
    "sklearn.manifold.spectral_embedding_._graph_connected_component"
   ]
  },
  "type": "function"
 },
 "sklearn.manifold.spectral_embedding_._set_diag": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "numpy.unique",
    "scipy.sparse.csgraph.laplacian",
    "scipy.sparse.csgraph.laplacian.col",
    "scipy.sparse.csgraph.laplacian.data",
    "scipy.sparse.csgraph.laplacian.flat",
    "scipy.sparse.csgraph.laplacian.row",
    "scipy.sparse.csgraph.laplacian.shape",
    "scipy.sparse.csgraph.laplacian.tocoo",
    "scipy.sparse.csgraph.laplacian.tocsr",
    "scipy.sparse.csgraph.laplacian.todia",
    "scipy.sparse.isspmatrix"
   ]
  },
  "type": "function"
 },
 "sklearn.manifold.spectral_embedding_.connected_components": {
  "data": {
   "shadows": "scipy.sparse.csgraph.connected_components"
  },
  "type": "import"
 },
 "sklearn.manifold.spectral_embedding_.csgraph_laplacian": {
  "data": {
   "shadows": "scipy.sparse.csgraph.laplacian"
  },
  "type": "import"
 },
 "sklearn.manifold.spectral_embedding_.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sklearn.manifold.spectral_embedding_.eigh": {
  "data": {
   "shadows": "scipy.linalg.eigh"
  },
  "type": "import"
 },
 "sklearn.manifold.spectral_embedding_.eigsh": {
  "data": {
   "shadows": "scipy.sparse.linalg.eigsh"
  },
  "type": "import"
 },
 "sklearn.manifold.spectral_embedding_.lobpcg": {
  "data": {
   "shadows": "scipy.sparse.linalg.lobpcg"
  },
  "type": "import"
 },
 "sklearn.manifold.spectral_embedding_.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.manifold.spectral_embedding_.smoothed_aggregation_solver": {
  "data": {
   "shadows": "pyamg.smoothed_aggregation_solver"
  },
  "type": "import"
 },
 "sklearn.manifold.spectral_embedding_.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.manifold.spectral_embedding_.spectral_embedding": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "ImportError",
    "RuntimeError",
    "ValueError",
    "_deterministic_vector_sign_flip",
    "check_array",
    "check_random_state",
    "check_symmetric",
    "numpy.float64",
    "pyamg.smoothed_aggregation_solver",
    "scipy.linalg.eigh",
    "scipy.sparse.csgraph.laplacian",
    "scipy.sparse.csgraph.laplacian.shape",
    "scipy.sparse.csgraph.laplacian.toarray",
    "scipy.sparse.issparse",
    "scipy.sparse.isspmatrix",
    "scipy.sparse.linalg.eigsh",
    "scipy.sparse.linalg.lobpcg",
    "sklearn.manifold.spectral_embedding_._graph_is_connected",
    "sklearn.manifold.spectral_embedding_._set_diag",
    "sklearn.manifold.spectral_embedding_.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.manifold.spectral_embedding_.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.manifold.t_sne": {
  "data": {
   "symbols_in_volume": [
    "numpy.double",
    "numpy.finfo"
   ]
  },
  "type": "module"
 },
 "sklearn.manifold.t_sne.MACHINE_EPSILON": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "sklearn.manifold.t_sne.TSNE": {
  "data": {
   "lineno": 475
  },
  "type": "class"
 },
 "sklearn.manifold.t_sne.TSNE.__init__": {
  "data": {
   "lineno": 629
  },
  "type": "function"
 },
 "sklearn.manifold.t_sne.TSNE._fit": {
  "data": {
   "lineno": 648,
   "symbols_in_volume": [
    "NearestNeighbors",
    "PCA",
    "TypeError",
    "ValueError",
    "check_array",
    "check_random_state",
    "int",
    "isinstance",
    "max",
    "min",
    "numpy.all",
    "numpy.any",
    "numpy.float32",
    "numpy.float64",
    "numpy.isfinite",
    "numpy.ndarray",
    "pairwise_distances",
    "print",
    "scipy.sparse.issparse",
    "sklearn.manifold.t_sne._joint_probabilities",
    "sklearn.manifold.t_sne._joint_probabilities_nn",
    "time.time"
   ]
  },
  "type": "function"
 },
 "sklearn.manifold.t_sne.TSNE._tsne": {
  "data": {
   "lineno": 814,
   "symbols_in_volume": [
    "dict",
    "print",
    "sklearn.manifold.t_sne._gradient_descent",
    "sklearn.manifold.t_sne._kl_divergence",
    "sklearn.manifold.t_sne._kl_divergence_bh"
   ]
  },
  "type": "function"
 },
 "sklearn.manifold.t_sne.TSNE.fit": {
  "data": {
   "lineno": 898
  },
  "type": "function"
 },
 "sklearn.manifold.t_sne.TSNE.fit_transform": {
  "data": {
   "lineno": 877
  },
  "type": "function"
 },
 "sklearn.manifold.t_sne.TSNE.n_iter_final": {
  "data": {
   "lineno": 808,
   "symbols_in_volume": [
    "deprecated",
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.manifold.t_sne._gradient_descent": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "numpy.clip",
    "numpy.finfo",
    "numpy.float",
    "numpy.inf",
    "numpy.invert",
    "numpy.ones_like",
    "numpy.zeros_like",
    "objective",
    "print",
    "range",
    "scipy.linalg.norm",
    "time.time"
   ]
  },
  "type": "function"
 },
 "sklearn.manifold.t_sne._joint_probabilities": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.maximum",
    "numpy.sum",
    "scipy.spatial.distance.squareform",
    "sklearn.manifold.t_sne.MACHINE_EPSILON"
   ]
  },
  "type": "function"
 },
 "sklearn.manifold.t_sne._joint_probabilities_nn": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.all",
    "numpy.float32",
    "numpy.int64",
    "numpy.isfinite",
    "numpy.maximum",
    "print",
    "range",
    "scipy.sparse.csr_matrix",
    "sklearn.manifold.t_sne.MACHINE_EPSILON",
    "time.time"
   ]
  },
  "type": "function"
 },
 "sklearn.manifold.t_sne._kl_divergence": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.log",
    "numpy.maximum",
    "numpy.nan",
    "numpy.ndarray",
    "numpy.ravel",
    "numpy.sum",
    "range",
    "scipy.spatial.distance.pdist",
    "scipy.spatial.distance.squareform",
    "sklearn.manifold.t_sne.MACHINE_EPSILON"
   ]
  },
  "type": "function"
 },
 "sklearn.manifold.t_sne._kl_divergence_bh": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.int64",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "sklearn.manifold.t_sne.csr_matrix": {
  "data": {
   "shadows": "scipy.sparse.csr_matrix"
  },
  "type": "import"
 },
 "sklearn.manifold.t_sne.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sklearn.manifold.t_sne.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "sklearn.manifold.t_sne.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.manifold.t_sne.pdist": {
  "data": {
   "shadows": "scipy.spatial.distance.pdist"
  },
  "type": "import"
 },
 "sklearn.manifold.t_sne.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.manifold.t_sne.squareform": {
  "data": {
   "shadows": "scipy.spatial.distance.squareform"
  },
  "type": "import"
 },
 "sklearn.manifold.t_sne.time": {
  "data": {
   "shadows": "time.time"
  },
  "type": "import"
 },
 "sklearn.manifold.t_sne.trustworthiness": {
  "data": {
   "lineno": 398,
   "symbols_in_volume": [
    "DeprecationWarning",
    "NearestNeighbors",
    "numpy.argsort",
    "numpy.sum",
    "numpy.where",
    "numpy.zeros",
    "pairwise_distances",
    "range",
    "sklearn.manifold.t_sne.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.manifold.t_sne.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.manifold.tests": {
  "data": {},
  "type": "module"
 },
 "sklearn.manifold.tests.test_isomap": {
  "data": {},
  "type": "module"
 },
 "sklearn.manifold.tests.test_isomap.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "sklearn.manifold.tests.test_isomap.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.manifold.tests.test_isomap.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.manifold.tests.test_isomap.assert_less": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_less"
  },
  "type": "import"
 },
 "sklearn.manifold.tests.test_isomap.datasets": {
  "data": {
   "shadows": "sklearn.datasets"
  },
  "type": "import"
 },
 "sklearn.manifold.tests.test_isomap.eigen_solvers": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "sklearn.manifold.tests.test_isomap.manifold": {
  "data": {
   "shadows": "sklearn.manifold"
  },
  "type": "import"
 },
 "sklearn.manifold.tests.test_isomap.neighbors": {
  "data": {
   "shadows": "sklearn.neighbors"
  },
  "type": "import"
 },
 "sklearn.manifold.tests.test_isomap.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.manifold.tests.test_isomap.path_methods": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "sklearn.manifold.tests.test_isomap.pipeline": {
  "data": {
   "shadows": "sklearn.pipeline"
  },
  "type": "import"
 },
 "sklearn.manifold.tests.test_isomap.preprocessing": {
  "data": {
   "shadows": "sklearn.preprocessing"
  },
  "type": "import"
 },
 "sklearn.manifold.tests.test_isomap.product": {
  "data": {
   "shadows": "itertools.product"
  },
  "type": "import"
 },
 "sklearn.manifold.tests.test_isomap.sparse_rand": {
  "data": {
   "shadows": "scipy.sparse.rand"
  },
  "type": "import"
 },
 "sklearn.manifold.tests.test_isomap.test_isomap_clone_bug": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "numpy.random.rand",
    "numpy.testing.assert_equal",
    "sklearn.manifold.Isomap"
   ]
  },
  "type": "function"
 },
 "sklearn.manifold.tests.test_isomap.test_isomap_reconstruction_error": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "itertools.product",
    "list",
    "numpy.array",
    "numpy.concatenate",
    "numpy.linalg.norm",
    "numpy.random.RandomState",
    "numpy.testing.assert_almost_equal",
    "range",
    "sklearn.manifold.Isomap",
    "sklearn.manifold.tests.test_isomap.eigen_solvers",
    "sklearn.manifold.tests.test_isomap.path_methods",
    "sklearn.neighbors.kneighbors_graph",
    "sklearn.preprocessing.KernelCenterer"
   ]
  },
  "type": "function"
 },
 "sklearn.manifold.tests.test_isomap.test_isomap_simple_grid": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "itertools.product",
    "list",
    "numpy.array",
    "numpy.testing.assert_array_almost_equal",
    "range",
    "sklearn.manifold.Isomap",
    "sklearn.manifold.tests.test_isomap.eigen_solvers",
    "sklearn.manifold.tests.test_isomap.path_methods",
    "sklearn.neighbors.kneighbors_graph"
   ]
  },
  "type": "function"
 },
 "sklearn.manifold.tests.test_isomap.test_pipeline": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "sklearn.datasets.make_blobs",
    "sklearn.manifold.Isomap",
    "sklearn.neighbors.KNeighborsClassifier",
    "sklearn.pipeline.Pipeline",
    "sklearn.utils.testing.assert_less"
   ]
  },
  "type": "function"
 },
 "sklearn.manifold.tests.test_isomap.test_sparse_input": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "scipy.sparse.rand",
    "sklearn.manifold.Isomap",
    "sklearn.manifold.tests.test_isomap.eigen_solvers",
    "sklearn.manifold.tests.test_isomap.path_methods"
   ]
  },
  "type": "function"
 },
 "sklearn.manifold.tests.test_isomap.test_transform": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "numpy.mean",
    "numpy.random.RandomState",
    "numpy.sqrt",
    "sklearn.datasets.samples_generator.make_s_curve",
    "sklearn.manifold.Isomap",
    "sklearn.utils.testing.assert_less"
   ]
  },
  "type": "function"
 },
 "sklearn.manifold.tests.test_locally_linear": {
  "data": {},
  "type": "module"
 },
 "sklearn.manifold.tests.test_locally_linear.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "sklearn.manifold.tests.test_locally_linear.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.manifold.tests.test_locally_linear.assert_less": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_less"
  },
  "type": "import"
 },
 "sklearn.manifold.tests.test_locally_linear.assert_raise_message": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raise_message"
  },
  "type": "import"
 },
 "sklearn.manifold.tests.test_locally_linear.assert_raises": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.manifold.tests.test_locally_linear.assert_true": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_true"
  },
  "type": "import"
 },
 "sklearn.manifold.tests.test_locally_linear.barycenter_kneighbors_graph": {
  "data": {
   "shadows": "sklearn.manifold.locally_linear.barycenter_kneighbors_graph"
  },
  "type": "import"
 },
 "sklearn.manifold.tests.test_locally_linear.datasets": {
  "data": {
   "shadows": "sklearn.datasets"
  },
  "type": "import"
 },
 "sklearn.manifold.tests.test_locally_linear.eigen_solvers": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "sklearn.manifold.tests.test_locally_linear.ignore_warnings": {
  "data": {
   "shadows": "sklearn.utils.testing.ignore_warnings"
  },
  "type": "import"
 },
 "sklearn.manifold.tests.test_locally_linear.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "sklearn.manifold.tests.test_locally_linear.manifold": {
  "data": {
   "shadows": "sklearn.manifold"
  },
  "type": "import"
 },
 "sklearn.manifold.tests.test_locally_linear.neighbors": {
  "data": {
   "shadows": "sklearn.neighbors"
  },
  "type": "import"
 },
 "sklearn.manifold.tests.test_locally_linear.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.manifold.tests.test_locally_linear.pipeline": {
  "data": {
   "shadows": "sklearn.pipeline"
  },
  "type": "import"
 },
 "sklearn.manifold.tests.test_locally_linear.product": {
  "data": {
   "shadows": "itertools.product"
  },
  "type": "import"
 },
 "sklearn.manifold.tests.test_locally_linear.test_barycenter_kneighbors_graph": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.dot",
    "numpy.ones",
    "numpy.sum",
    "numpy.testing.assert_array_almost_equal",
    "scipy.linalg.norm",
    "sklearn.manifold.locally_linear.barycenter_kneighbors_graph",
    "sklearn.utils.testing.assert_less"
   ]
  },
  "type": "function"
 },
 "sklearn.manifold.tests.test_locally_linear.test_integer_input": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.manifold.LocallyLinearEmbedding"
   ]
  },
  "type": "function"
 },
 "sklearn.manifold.tests.test_locally_linear.test_lle_init_parameters": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "ValueError",
    "numpy.random.rand",
    "sklearn.manifold.LocallyLinearEmbedding",
    "sklearn.utils.testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.manifold.tests.test_locally_linear.test_lle_manifold": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "itertools.product",
    "list",
    "numpy.abs",
    "numpy.arange",
    "numpy.array",
    "numpy.c_",
    "numpy.dot",
    "numpy.random.RandomState",
    "scipy.linalg.norm",
    "sklearn.manifold.LocallyLinearEmbedding",
    "sklearn.manifold.locally_linear.barycenter_kneighbors_graph",
    "sklearn.manifold.tests.test_locally_linear.eigen_solvers",
    "sklearn.utils.testing.assert_less",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.manifold.tests.test_locally_linear.test_lle_simple_grid": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "itertools.product",
    "list",
    "numpy.array",
    "numpy.dot",
    "numpy.random.RandomState",
    "numpy.testing.assert_almost_equal",
    "range",
    "scipy.linalg.norm",
    "sklearn.manifold.LocallyLinearEmbedding",
    "sklearn.manifold.locally_linear.barycenter_kneighbors_graph",
    "sklearn.manifold.tests.test_locally_linear.eigen_solvers",
    "sklearn.utils.testing.assert_less",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.manifold.tests.test_locally_linear.test_pipeline": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "sklearn.datasets.make_blobs",
    "sklearn.manifold.LocallyLinearEmbedding",
    "sklearn.neighbors.KNeighborsClassifier",
    "sklearn.pipeline.Pipeline",
    "sklearn.utils.testing.assert_less"
   ]
  },
  "type": "function"
 },
 "sklearn.manifold.tests.test_locally_linear.test_singular_matrix": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "ValueError",
    "f",
    "numpy.ones",
    "sklearn.manifold.locally_linear_embedding",
    "sklearn.utils.testing.assert_raises",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.manifold.tests.test_mds": {
  "data": {},
  "type": "module"
 },
 "sklearn.manifold.tests.test_mds.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.manifold.tests.test_mds.assert_raises": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.manifold.tests.test_mds.mds": {
  "data": {
   "shadows": "sklearn.manifold.mds"
  },
  "type": "import"
 },
 "sklearn.manifold.tests.test_mds.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.manifold.tests.test_mds.test_MDS": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.manifold.mds.MDS"
   ]
  },
  "type": "function"
 },
 "sklearn.manifold.tests.test_mds.test_smacof": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.assert_array_almost_equal",
    "sklearn.manifold.mds.smacof"
   ]
  },
  "type": "function"
 },
 "sklearn.manifold.tests.test_mds.test_smacof_error": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "sklearn.manifold.mds.smacof",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.manifold.tests.test_spectral_embedding": {
  "data": {
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.datasets.samples_generator.make_blobs",
    "sklearn.manifold.tests.test_spectral_embedding.centers",
    "sklearn.manifold.tests.test_spectral_embedding.n_samples"
   ]
  },
  "type": "module"
 },
 "sklearn.manifold.tests.test_spectral_embedding.KMeans": {
  "data": {
   "shadows": "sklearn.cluster.KMeans"
  },
  "type": "import"
 },
 "sklearn.manifold.tests.test_spectral_embedding.SkipTest": {
  "data": {
   "shadows": "sklearn.utils.testing.SkipTest"
  },
  "type": "import"
 },
 "sklearn.manifold.tests.test_spectral_embedding.SpectralEmbedding": {
  "data": {
   "shadows": "sklearn.manifold.spectral_embedding_.SpectralEmbedding"
  },
  "type": "import"
 },
 "sklearn.manifold.tests.test_spectral_embedding._check_with_col_sign_flipping": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "range"
   ]
  },
  "type": "function"
 },
 "sklearn.manifold.tests.test_spectral_embedding._deterministic_vector_sign_flip": {
  "data": {
   "shadows": "sklearn.utils.extmath._deterministic_vector_sign_flip"
  },
  "type": "import"
 },
 "sklearn.manifold.tests.test_spectral_embedding._graph_connected_component": {
  "data": {
   "shadows": "sklearn.manifold.spectral_embedding_._graph_connected_component"
  },
  "type": "import"
 },
 "sklearn.manifold.tests.test_spectral_embedding._graph_is_connected": {
  "data": {
   "shadows": "sklearn.manifold.spectral_embedding_._graph_is_connected"
  },
  "type": "import"
 },
 "sklearn.manifold.tests.test_spectral_embedding.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.manifold.tests.test_spectral_embedding.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.manifold.tests.test_spectral_embedding.assert_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.manifold.tests.test_spectral_embedding.assert_raises": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.manifold.tests.test_spectral_embedding.assert_true": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_true"
  },
  "type": "import"
 },
 "sklearn.manifold.tests.test_spectral_embedding.centers": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "sklearn.manifold.tests.test_spectral_embedding.csgraph": {
  "data": {
   "shadows": "scipy.sparse.csgraph"
  },
  "type": "import"
 },
 "sklearn.manifold.tests.test_spectral_embedding.eigh": {
  "data": {
   "shadows": "scipy.linalg.eigh"
  },
  "type": "import"
 },
 "sklearn.manifold.tests.test_spectral_embedding.make_blobs": {
  "data": {
   "shadows": "sklearn.datasets.samples_generator.make_blobs"
  },
  "type": "import"
 },
 "sklearn.manifold.tests.test_spectral_embedding.n_samples": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "sklearn.manifold.tests.test_spectral_embedding.normalized_mutual_info_score": {
  "data": {
   "shadows": "sklearn.metrics.normalized_mutual_info_score"
  },
  "type": "import"
 },
 "sklearn.manifold.tests.test_spectral_embedding.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.manifold.tests.test_spectral_embedding.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.manifold.tests.test_spectral_embedding.rbf_kernel": {
  "data": {
   "shadows": "sklearn.metrics.pairwise.rbf_kernel"
  },
  "type": "import"
 },
 "sklearn.manifold.tests.test_spectral_embedding.smoothed_aggregation_solver": {
  "data": {
   "shadows": "pyamg.smoothed_aggregation_solver"
  },
  "type": "import"
 },
 "sklearn.manifold.tests.test_spectral_embedding.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.manifold.tests.test_spectral_embedding.spectral_embedding": {
  "data": {
   "shadows": "sklearn.manifold.spectral_embedding"
  },
  "type": "import"
 },
 "sklearn.manifold.tests.test_spectral_embedding.test_connectivity": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "numpy.array",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "sklearn.manifold.spectral_embedding_._graph_is_connected",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.manifold.tests.test_spectral_embedding.test_pipeline_spectral_clustering": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.cluster.KMeans",
    "sklearn.manifold.spectral_embedding_.SpectralEmbedding",
    "sklearn.manifold.tests.test_spectral_embedding.pytest",
    "sklearn.metrics.normalized_mutual_info_score",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.manifold.tests.test_spectral_embedding.test_sparse_graph_connected_component": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "numpy.random.RandomState",
    "range",
    "scipy.sparse.coo_matrix",
    "sklearn.manifold.spectral_embedding_._graph_connected_component",
    "sklearn.manifold.tests.test_spectral_embedding.n_samples",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.manifold.tests.test_spectral_embedding.test_spectral_embedding_amg_solver": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "ImportError",
    "numpy.random.RandomState",
    "sklearn.manifold.spectral_embedding_.SpectralEmbedding",
    "sklearn.manifold.tests.test_spectral_embedding._check_with_col_sign_flipping",
    "sklearn.utils.testing.SkipTest",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.manifold.tests.test_spectral_embedding.test_spectral_embedding_callable_affinity": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.manifold.spectral_embedding_.SpectralEmbedding",
    "sklearn.manifold.tests.test_spectral_embedding._check_with_col_sign_flipping",
    "sklearn.metrics.pairwise.rbf_kernel",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.manifold.tests.test_spectral_embedding.test_spectral_embedding_deterministic": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.manifold.spectral_embedding",
    "sklearn.metrics.pairwise.rbf_kernel",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.manifold.tests.test_spectral_embedding.test_spectral_embedding_first_eigen_vector": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "numpy.std",
    "range",
    "sklearn.manifold.spectral_embedding",
    "sklearn.manifold.tests.test_spectral_embedding.pytest",
    "sklearn.metrics.pairwise.rbf_kernel"
   ]
  },
  "type": "function"
 },
 "sklearn.manifold.tests.test_spectral_embedding.test_spectral_embedding_precomputed_affinity": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.manifold.spectral_embedding_.SpectralEmbedding",
    "sklearn.manifold.tests.test_spectral_embedding._check_with_col_sign_flipping",
    "sklearn.metrics.pairwise.rbf_kernel",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.manifold.tests.test_spectral_embedding.test_spectral_embedding_two_components": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.array",
    "numpy.float32",
    "numpy.random.RandomState",
    "numpy.zeros",
    "sklearn.manifold.spectral_embedding_.SpectralEmbedding",
    "sklearn.manifold.spectral_embedding_._graph_connected_component",
    "sklearn.manifold.tests.test_spectral_embedding.pytest",
    "sklearn.metrics.normalized_mutual_info_score",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.manifold.tests.test_spectral_embedding.test_spectral_embedding_unknown_affinity": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "ValueError",
    "numpy.random.RandomState",
    "sklearn.manifold.spectral_embedding_.SpectralEmbedding",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.manifold.tests.test_spectral_embedding.test_spectral_embedding_unknown_eigensolver": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "ValueError",
    "numpy.random.RandomState",
    "sklearn.manifold.spectral_embedding_.SpectralEmbedding",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.manifold.tests.test_spectral_embedding.test_spectral_embedding_unnormalized": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "scipy.linalg.eigh",
    "scipy.sparse.csgraph.laplacian",
    "sklearn.manifold.spectral_embedding",
    "sklearn.metrics.pairwise.rbf_kernel",
    "sklearn.utils.extmath._deterministic_vector_sign_flip",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics": {
  "data": {},
  "type": "module"
 },
 "sklearn.metrics.__all__": {
  "data": {
   "lineno": 69
  },
  "type": "constant"
 },
 "sklearn.metrics.base": {
  "data": {},
  "type": "module"
 },
 "sklearn.metrics.base._average_binary_score": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "ValueError",
    "binary_metric",
    "check_array",
    "check_consistent_length",
    "numpy.average",
    "numpy.isclose",
    "numpy.multiply",
    "numpy.repeat",
    "numpy.reshape",
    "numpy.sum",
    "numpy.zeros",
    "range",
    "type_of_target"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.base.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sklearn.metrics.base.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.metrics.classification": {
  "data": {},
  "type": "module"
 },
 "sklearn.metrics.classification._check_binary_probabilistic_predictions": {
  "data": {
   "lineno": 1948,
   "symbols_in_volume": [
    "ValueError",
    "check_consistent_length",
    "label_binarize",
    "len",
    "numpy.unique"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.classification._check_targets": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "ValueError",
    "check_consistent_length",
    "column_or_1d",
    "len",
    "numpy.union1d",
    "scipy.sparse.csr_matrix",
    "set",
    "type_of_target"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.classification._prf_divide": {
  "data": {
   "lineno": 838,
   "symbols_in_volume": [
    "len",
    "numpy.any",
    "sklearn.metrics.classification.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.classification._weighted_sum": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "numpy.average",
    "numpy.dot"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.classification.accuracy_score": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "check_consistent_length",
    "count_nonzero",
    "sklearn.metrics.classification._check_targets",
    "sklearn.metrics.classification._weighted_sum"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.classification.balanced_accuracy_score": {
  "data": {
   "lineno": 1371,
   "symbols_in_volume": [
    "len",
    "numpy.any",
    "numpy.diag",
    "numpy.errstate",
    "numpy.isnan",
    "numpy.mean",
    "sklearn.metrics.classification.confusion_matrix",
    "sklearn.metrics.classification.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.classification.brier_score_loss": {
  "data": {
   "lineno": 1967,
   "symbols_in_volume": [
    "assert_all_finite",
    "check_consistent_length",
    "column_or_1d",
    "int",
    "numpy.array",
    "numpy.average",
    "sklearn.metrics.classification._check_binary_probabilistic_predictions"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.classification.classification_report": {
  "data": {
   "lineno": 1448,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "len",
    "max",
    "numpy.asarray",
    "numpy.sum",
    "sklearn.metrics.classification._check_targets",
    "sklearn.metrics.classification.precision_recall_fscore_support",
    "sklearn.metrics.classification.warnings",
    "unique_labels",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.classification.cohen_kappa_score": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "ValueError",
    "numpy.abs",
    "numpy.arange",
    "numpy.int",
    "numpy.ones",
    "numpy.outer",
    "numpy.sum",
    "numpy.zeros",
    "sklearn.metrics.classification.confusion_matrix"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.classification.confusion_matrix": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "ValueError",
    "check_consistent_length",
    "dict",
    "enumerate",
    "numpy.all",
    "numpy.array",
    "numpy.asarray",
    "numpy.float64",
    "numpy.int64",
    "numpy.logical_and",
    "numpy.ones",
    "scipy.sparse.coo_matrix",
    "sklearn.metrics.classification._check_targets",
    "unique_labels"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.classification.coo_matrix": {
  "data": {
   "shadows": "scipy.sparse.coo_matrix"
  },
  "type": "import"
 },
 "sklearn.metrics.classification.csr_matrix": {
  "data": {
   "shadows": "scipy.sparse.csr_matrix"
  },
  "type": "import"
 },
 "sklearn.metrics.classification.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sklearn.metrics.classification.f1_score": {
  "data": {
   "lineno": 620,
   "symbols_in_volume": [
    "sklearn.metrics.classification.fbeta_score"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.classification.fbeta_score": {
  "data": {
   "lineno": 723,
   "symbols_in_volume": [
    "sklearn.metrics.classification.precision_recall_fscore_support"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.classification.hamming_loss": {
  "data": {
   "lineno": 1600,
   "symbols_in_volume": [
    "ValueError",
    "check_consistent_length",
    "count_nonzero",
    "len",
    "numpy.asarray",
    "numpy.mean",
    "sklearn.metrics.classification._check_targets",
    "sklearn.metrics.classification._weighted_sum",
    "unique_labels"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.classification.hinge_loss": {
  "data": {
   "lineno": 1822,
   "symbols_in_volume": [
    "LabelBinarizer",
    "LabelEncoder",
    "TypeError",
    "ValueError",
    "bool",
    "check_array",
    "check_consistent_length",
    "column_or_1d",
    "numpy.arange",
    "numpy.average",
    "numpy.clip",
    "numpy.max",
    "numpy.ones_like",
    "numpy.ravel",
    "numpy.size",
    "numpy.unique"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.classification.jaccard_similarity_score": {
  "data": {
   "lineno": 377,
   "symbols_in_volume": [
    "check_consistent_length",
    "count_nonzero",
    "numpy.errstate",
    "sklearn.metrics.classification._check_targets",
    "sklearn.metrics.classification._weighted_sum"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.classification.log_loss": {
  "data": {
   "lineno": 1699,
   "symbols_in_volume": [
    "LabelBinarizer",
    "ValueError",
    "check_array",
    "check_consistent_length",
    "len",
    "numpy.append",
    "numpy.clip",
    "numpy.log",
    "numpy.newaxis",
    "sklearn.metrics.classification._weighted_sum"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.classification.matthews_corrcoef": {
  "data": {
   "lineno": 464,
   "symbols_in_volume": [
    "LabelEncoder",
    "ValueError",
    "check_consistent_length",
    "numpy.dot",
    "numpy.float64",
    "numpy.hstack",
    "numpy.isnan",
    "numpy.sqrt",
    "numpy.trace",
    "sklearn.metrics.classification._check_targets",
    "sklearn.metrics.classification.confusion_matrix"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.classification.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.metrics.classification.precision_recall_fscore_support": {
  "data": {
   "lineno": 882,
   "symbols_in_volume": [
    "LabelEncoder",
    "UserWarning",
    "ValueError",
    "check_consistent_length",
    "count_nonzero",
    "len",
    "numpy.all",
    "numpy.array",
    "numpy.asarray",
    "numpy.average",
    "numpy.bincount",
    "numpy.errstate",
    "numpy.hstack",
    "numpy.max",
    "numpy.min",
    "numpy.searchsorted",
    "numpy.setdiff1d",
    "numpy.zeros",
    "sklearn.metrics.classification._check_targets",
    "sklearn.metrics.classification._prf_divide",
    "sklearn.metrics.classification.warnings",
    "str",
    "unique_labels"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.classification.precision_score": {
  "data": {
   "lineno": 1173,
   "symbols_in_volume": [
    "sklearn.metrics.classification.precision_recall_fscore_support"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.classification.recall_score": {
  "data": {
   "lineno": 1273,
   "symbols_in_volume": [
    "sklearn.metrics.classification.precision_recall_fscore_support"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.classification.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.metrics.classification.zero_one_loss": {
  "data": {
   "lineno": 551,
   "symbols_in_volume": [
    "_num_samples",
    "numpy.sum",
    "sklearn.metrics.classification.accuracy_score"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.cluster": {
  "data": {},
  "type": "module"
 },
 "sklearn.metrics.cluster.__all__": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "sklearn.metrics.cluster.bicluster": {
  "data": {},
  "type": "module"
 },
 "sklearn.metrics.cluster.bicluster.__all__": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "sklearn.metrics.cluster.bicluster._check_rows_and_columns": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "map",
    "sklearn.utils.validation.check_array",
    "sklearn.utils.validation.check_consistent_length"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.cluster.bicluster._jaccard": {
  "data": {
   "lineno": 21
  },
  "type": "function"
 },
 "sklearn.metrics.cluster.bicluster._pairwise_similarity": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "list",
    "numpy.array",
    "range",
    "similarity",
    "sklearn.metrics.cluster.bicluster._check_rows_and_columns"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.cluster.bicluster.check_array": {
  "data": {
   "shadows": "sklearn.utils.validation.check_array"
  },
  "type": "import"
 },
 "sklearn.metrics.cluster.bicluster.check_consistent_length": {
  "data": {
   "shadows": "sklearn.utils.validation.check_consistent_length"
  },
  "type": "import"
 },
 "sklearn.metrics.cluster.bicluster.consensus_score": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "len",
    "max",
    "similarity",
    "sklearn.metrics.cluster.bicluster._jaccard",
    "sklearn.metrics.cluster.bicluster._pairwise_similarity",
    "sklearn.utils.linear_assignment_.linear_assignment"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.cluster.bicluster.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sklearn.metrics.cluster.bicluster.linear_assignment": {
  "data": {
   "shadows": "sklearn.utils.linear_assignment_.linear_assignment"
  },
  "type": "import"
 },
 "sklearn.metrics.cluster.bicluster.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.metrics.cluster.setup": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.distutils.core.setup",
    "sklearn.metrics.cluster.setup.configuration"
   ]
  },
  "type": "module"
 },
 "sklearn.metrics.cluster.setup.Configuration": {
  "data": {
   "shadows": "numpy.distutils.misc_util.Configuration"
  },
  "type": "import"
 },
 "sklearn.metrics.cluster.setup.configuration": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "numpy.distutils.misc_util.Configuration",
    "sklearn.metrics.cluster.setup.numpy",
    "sklearn.metrics.cluster.setup.os"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.cluster.setup.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.metrics.cluster.setup.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "sklearn.metrics.cluster.setup.setup": {
  "data": {
   "shadows": "numpy.distutils.core.setup"
  },
  "type": "import"
 },
 "sklearn.metrics.cluster.tests": {
  "data": {},
  "type": "module"
 },
 "sklearn.metrics.cluster.tests.test_bicluster": {
  "data": {},
  "type": "module"
 },
 "sklearn.metrics.cluster.tests.test_bicluster._jaccard": {
  "data": {
   "shadows": "sklearn.metrics.cluster.bicluster._jaccard"
  },
  "type": "import"
 },
 "sklearn.metrics.cluster.tests.test_bicluster.assert_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "sklearn.metrics.cluster.tests.test_bicluster.assert_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.metrics.cluster.tests.test_bicluster.consensus_score": {
  "data": {
   "shadows": "sklearn.metrics.consensus_score"
  },
  "type": "import"
 },
 "sklearn.metrics.cluster.tests.test_bicluster.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.metrics.cluster.tests.test_bicluster.test_consensus_score": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "sklearn.metrics.consensus_score",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.cluster.tests.test_bicluster.test_consensus_score_issue2445": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.metrics.consensus_score",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.cluster.tests.test_bicluster.test_jaccard": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.metrics.cluster.bicluster._jaccard",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.cluster.tests.test_common": {
  "data": {
   "symbols_in_volume": [
    "functools.partial",
    "numpy.random.RandomState",
    "sklearn.metrics.cluster.adjusted_mutual_info_score",
    "sklearn.metrics.cluster.adjusted_rand_score",
    "sklearn.metrics.cluster.calinski_harabaz_score",
    "sklearn.metrics.cluster.completeness_score",
    "sklearn.metrics.cluster.davies_bouldin_score",
    "sklearn.metrics.cluster.fowlkes_mallows_score",
    "sklearn.metrics.cluster.homogeneity_score",
    "sklearn.metrics.cluster.mutual_info_score",
    "sklearn.metrics.cluster.normalized_mutual_info_score",
    "sklearn.metrics.cluster.silhouette_score",
    "sklearn.metrics.cluster.tests.test_common.rng",
    "sklearn.metrics.cluster.v_measure_score"
   ]
  },
  "type": "module"
 },
 "sklearn.metrics.cluster.tests.test_common.NON_SYMMETRIC_METRICS": {
  "data": {
   "lineno": 66
  },
  "type": "constant"
 },
 "sklearn.metrics.cluster.tests.test_common.NORMALIZED_METRICS": {
  "data": {
   "lineno": 69
  },
  "type": "constant"
 },
 "sklearn.metrics.cluster.tests.test_common.SUPERVISED_METRICS": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "sklearn.metrics.cluster.tests.test_common.SYMMETRIC_METRICS": {
  "data": {
   "lineno": 60
  },
  "type": "constant"
 },
 "sklearn.metrics.cluster.tests.test_common.UNSUPERVISED_METRICS": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "sklearn.metrics.cluster.tests.test_common.adjusted_mutual_info_score": {
  "data": {
   "shadows": "sklearn.metrics.cluster.adjusted_mutual_info_score"
  },
  "type": "import"
 },
 "sklearn.metrics.cluster.tests.test_common.adjusted_rand_score": {
  "data": {
   "shadows": "sklearn.metrics.cluster.adjusted_rand_score"
  },
  "type": "import"
 },
 "sklearn.metrics.cluster.tests.test_common.assert_allclose": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_allclose"
  },
  "type": "import"
 },
 "sklearn.metrics.cluster.tests.test_common.calinski_harabaz_score": {
  "data": {
   "shadows": "sklearn.metrics.cluster.calinski_harabaz_score"
  },
  "type": "import"
 },
 "sklearn.metrics.cluster.tests.test_common.completeness_score": {
  "data": {
   "shadows": "sklearn.metrics.cluster.completeness_score"
  },
  "type": "import"
 },
 "sklearn.metrics.cluster.tests.test_common.davies_bouldin_score": {
  "data": {
   "shadows": "sklearn.metrics.cluster.davies_bouldin_score"
  },
  "type": "import"
 },
 "sklearn.metrics.cluster.tests.test_common.fowlkes_mallows_score": {
  "data": {
   "shadows": "sklearn.metrics.cluster.fowlkes_mallows_score"
  },
  "type": "import"
 },
 "sklearn.metrics.cluster.tests.test_common.homogeneity_score": {
  "data": {
   "shadows": "sklearn.metrics.cluster.homogeneity_score"
  },
  "type": "import"
 },
 "sklearn.metrics.cluster.tests.test_common.ignore_warnings": {
  "data": {
   "shadows": "sklearn.utils.testing.ignore_warnings"
  },
  "type": "import"
 },
 "sklearn.metrics.cluster.tests.test_common.mutual_info_score": {
  "data": {
   "shadows": "sklearn.metrics.cluster.mutual_info_score"
  },
  "type": "import"
 },
 "sklearn.metrics.cluster.tests.test_common.normalized_mutual_info_score": {
  "data": {
   "shadows": "sklearn.metrics.cluster.normalized_mutual_info_score"
  },
  "type": "import"
 },
 "sklearn.metrics.cluster.tests.test_common.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.metrics.cluster.tests.test_common.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "sklearn.metrics.cluster.tests.test_common.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.metrics.cluster.tests.test_common.rng": {
  "data": {
   "lineno": 76
  },
  "type": "constant"
 },
 "sklearn.metrics.cluster.tests.test_common.silhouette_score": {
  "data": {
   "shadows": "sklearn.metrics.cluster.silhouette_score"
  },
  "type": "import"
 },
 "sklearn.metrics.cluster.tests.test_common.test_format_invariance": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "dict",
    "float",
    "generate_formats",
    "metric",
    "numpy.random.randint",
    "sklearn.metrics.cluster.tests.test_common.SUPERVISED_METRICS",
    "sklearn.metrics.cluster.tests.test_common.UNSUPERVISED_METRICS",
    "sklearn.metrics.cluster.tests.test_common.pytest",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.cluster.tests.test_common.test_format_invariance.generate_formats": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "numpy.array",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.cluster.tests.test_common.test_non_symmetry": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "metric",
    "sklearn.metrics.cluster.tests.test_common.NON_SYMMETRIC_METRICS",
    "sklearn.metrics.cluster.tests.test_common.SUPERVISED_METRICS",
    "sklearn.metrics.cluster.tests.test_common.pytest",
    "sklearn.metrics.cluster.tests.test_common.y1",
    "sklearn.metrics.cluster.tests.test_common.y2"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.cluster.tests.test_common.test_normalized_output": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "metric",
    "numpy.array",
    "sklearn.metrics.cluster.tests.test_common.NORMALIZED_METRICS",
    "sklearn.metrics.cluster.tests.test_common.SUPERVISED_METRICS",
    "sklearn.metrics.cluster.tests.test_common.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.cluster.tests.test_common.test_permute_labels": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "dict",
    "metric",
    "numpy.array",
    "numpy.random.randint",
    "sklearn.metrics.cluster.tests.test_common.SUPERVISED_METRICS",
    "sklearn.metrics.cluster.tests.test_common.UNSUPERVISED_METRICS",
    "sklearn.metrics.cluster.tests.test_common.pytest",
    "sklearn.utils.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.cluster.tests.test_common.test_symmetric_non_symmetric_union": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "sklearn.metrics.cluster.tests.test_common.NON_SYMMETRIC_METRICS",
    "sklearn.metrics.cluster.tests.test_common.SUPERVISED_METRICS",
    "sklearn.metrics.cluster.tests.test_common.SYMMETRIC_METRICS",
    "sorted"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.cluster.tests.test_common.test_symmetry": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "metric",
    "sklearn.metrics.cluster.tests.test_common.SUPERVISED_METRICS",
    "sklearn.metrics.cluster.tests.test_common.SYMMETRIC_METRICS",
    "sklearn.metrics.cluster.tests.test_common.pytest",
    "sklearn.metrics.cluster.tests.test_common.y1",
    "sklearn.metrics.cluster.tests.test_common.y2"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.cluster.tests.test_common.v_measure_score": {
  "data": {
   "shadows": "sklearn.metrics.cluster.v_measure_score"
  },
  "type": "import"
 },
 "sklearn.metrics.cluster.tests.test_common.y1": {
  "data": {
   "lineno": 77
  },
  "type": "constant"
 },
 "sklearn.metrics.cluster.tests.test_common.y2": {
  "data": {
   "lineno": 78
  },
  "type": "constant"
 },
 "sklearn.metrics.cluster.tests.test_supervised": {
  "data": {
   "symbols_in_volume": [
    "sklearn.metrics.cluster.adjusted_mutual_info_score",
    "sklearn.metrics.cluster.adjusted_rand_score",
    "sklearn.metrics.cluster.completeness_score",
    "sklearn.metrics.cluster.homogeneity_score",
    "sklearn.metrics.cluster.normalized_mutual_info_score",
    "sklearn.metrics.cluster.v_measure_score"
   ]
  },
  "type": "module"
 },
 "sklearn.metrics.cluster.tests.test_supervised._generalized_average": {
  "data": {
   "shadows": "sklearn.metrics.cluster.supervised._generalized_average"
  },
  "type": "import"
 },
 "sklearn.metrics.cluster.tests.test_supervised.adjusted_mutual_info_score": {
  "data": {
   "shadows": "sklearn.metrics.cluster.adjusted_mutual_info_score"
  },
  "type": "import"
 },
 "sklearn.metrics.cluster.tests.test_supervised.adjusted_rand_score": {
  "data": {
   "shadows": "sklearn.metrics.cluster.adjusted_rand_score"
  },
  "type": "import"
 },
 "sklearn.metrics.cluster.tests.test_supervised.assert_all_finite": {
  "data": {
   "shadows": "sklearn.utils.assert_all_finite"
  },
  "type": "import"
 },
 "sklearn.metrics.cluster.tests.test_supervised.assert_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "sklearn.metrics.cluster.tests.test_supervised.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.metrics.cluster.tests.test_supervised.assert_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.metrics.cluster.tests.test_supervised.assert_raise_message": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raise_message"
  },
  "type": "import"
 },
 "sklearn.metrics.cluster.tests.test_supervised.assert_warns_message": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_warns_message"
  },
  "type": "import"
 },
 "sklearn.metrics.cluster.tests.test_supervised.completeness_score": {
  "data": {
   "shadows": "sklearn.metrics.cluster.completeness_score"
  },
  "type": "import"
 },
 "sklearn.metrics.cluster.tests.test_supervised.contingency_matrix": {
  "data": {
   "shadows": "sklearn.metrics.cluster.contingency_matrix"
  },
  "type": "import"
 },
 "sklearn.metrics.cluster.tests.test_supervised.entropy": {
  "data": {
   "shadows": "sklearn.metrics.cluster.entropy"
  },
  "type": "import"
 },
 "sklearn.metrics.cluster.tests.test_supervised.expected_mutual_information": {
  "data": {
   "shadows": "sklearn.metrics.cluster.expected_mutual_information"
  },
  "type": "import"
 },
 "sklearn.metrics.cluster.tests.test_supervised.fowlkes_mallows_score": {
  "data": {
   "shadows": "sklearn.metrics.cluster.fowlkes_mallows_score"
  },
  "type": "import"
 },
 "sklearn.metrics.cluster.tests.test_supervised.homogeneity_completeness_v_measure": {
  "data": {
   "shadows": "sklearn.metrics.cluster.homogeneity_completeness_v_measure"
  },
  "type": "import"
 },
 "sklearn.metrics.cluster.tests.test_supervised.homogeneity_score": {
  "data": {
   "shadows": "sklearn.metrics.cluster.homogeneity_score"
  },
  "type": "import"
 },
 "sklearn.metrics.cluster.tests.test_supervised.ignore_warnings": {
  "data": {
   "shadows": "sklearn.utils.testing.ignore_warnings"
  },
  "type": "import"
 },
 "sklearn.metrics.cluster.tests.test_supervised.mutual_info_score": {
  "data": {
   "shadows": "sklearn.metrics.cluster.mutual_info_score"
  },
  "type": "import"
 },
 "sklearn.metrics.cluster.tests.test_supervised.normalized_mutual_info_score": {
  "data": {
   "shadows": "sklearn.metrics.cluster.normalized_mutual_info_score"
  },
  "type": "import"
 },
 "sklearn.metrics.cluster.tests.test_supervised.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.metrics.cluster.tests.test_supervised.score_funcs": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "sklearn.metrics.cluster.tests.test_supervised.test_adjusted_mutual_info_score": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "FutureWarning",
    "list",
    "numpy.array",
    "sklearn.metrics.cluster.adjusted_mutual_info_score",
    "sklearn.metrics.cluster.contingency_matrix",
    "sklearn.metrics.cluster.expected_mutual_information",
    "sklearn.metrics.cluster.mutual_info_score",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.cluster.tests.test_supervised.test_adjustment_for_chance": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "FutureWarning",
    "numpy.abs",
    "numpy.testing.assert_array_almost_equal",
    "sklearn.metrics.cluster.adjusted_rand_score",
    "sklearn.metrics.cluster.tests.test_supervised.uniform_labelings_scores",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.cluster.tests.test_supervised.test_complete_but_not_homogeneous_labeling": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "sklearn.metrics.cluster.homogeneity_completeness_v_measure",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.cluster.tests.test_supervised.test_contingency_matrix": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "numpy.histogram2d",
    "numpy.testing.assert_array_almost_equal",
    "sklearn.metrics.cluster.contingency_matrix"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.cluster.tests.test_supervised.test_contingency_matrix_sparse": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "numpy.testing.assert_array_almost_equal",
    "sklearn.metrics.cluster.contingency_matrix",
    "sklearn.utils.testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.cluster.tests.test_supervised.test_entropy": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "sklearn.metrics.cluster.entropy",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.cluster.tests.test_supervised.test_error_messages_on_wrong_input": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "FutureWarning",
    "ValueError",
    "sklearn.metrics.cluster.tests.test_supervised.score_funcs",
    "sklearn.utils.testing.assert_raise_message",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.cluster.tests.test_supervised.test_exactly_zero_info_score": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "FutureWarning",
    "numpy.arange",
    "numpy.int",
    "numpy.logspace",
    "numpy.ones",
    "sklearn.metrics.cluster.adjusted_mutual_info_score",
    "sklearn.metrics.cluster.normalized_mutual_info_score",
    "sklearn.metrics.cluster.v_measure_score",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.cluster.tests.test_supervised.test_expected_mutual_info_overflow": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.metrics.cluster.expected_mutual_information"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.cluster.tests.test_supervised.test_fowlkes_mallows_score": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "numpy.sqrt",
    "sklearn.metrics.cluster.fowlkes_mallows_score",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.cluster.tests.test_supervised.test_fowlkes_mallows_score_properties": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.sqrt",
    "sklearn.metrics.cluster.fowlkes_mallows_score",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.cluster.tests.test_supervised.test_future_warning": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "FutureWarning",
    "sklearn.metrics.cluster.adjusted_mutual_info_score",
    "sklearn.metrics.cluster.normalized_mutual_info_score",
    "sklearn.utils.testing.assert_warns_message"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.cluster.tests.test_supervised.test_generalized_average": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "sklearn.metrics.cluster.supervised._generalized_average"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.cluster.tests.test_supervised.test_homogeneous_but_not_complete_labeling": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "sklearn.metrics.cluster.homogeneity_completeness_v_measure",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.cluster.tests.test_supervised.test_int_overflow_mutual_info_fowlkes_mallows_score": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.metrics.cluster.fowlkes_mallows_score",
    "sklearn.metrics.cluster.mutual_info_score",
    "sklearn.utils.assert_all_finite"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.cluster.tests.test_supervised.test_non_consecutive_labels": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "sklearn.metrics.cluster.adjusted_rand_score",
    "sklearn.metrics.cluster.homogeneity_completeness_v_measure",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.cluster.tests.test_supervised.test_not_complete_and_not_homogeneous_labeling": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "sklearn.metrics.cluster.homogeneity_completeness_v_measure",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.cluster.tests.test_supervised.test_perfect_matches": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "FutureWarning",
    "score_func",
    "sklearn.metrics.cluster.adjusted_mutual_info_score",
    "sklearn.metrics.cluster.normalized_mutual_info_score",
    "sklearn.metrics.cluster.tests.test_supervised.score_funcs",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.cluster.tests.test_supervised.test_v_measure_and_mutual_information": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "numpy.int",
    "numpy.logspace",
    "numpy.random.RandomState",
    "sklearn.metrics.cluster.entropy",
    "sklearn.metrics.cluster.mutual_info_score",
    "sklearn.metrics.cluster.normalized_mutual_info_score",
    "sklearn.metrics.cluster.v_measure_score",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.cluster.tests.test_supervised.uniform_labelings_scores": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "FutureWarning",
    "enumerate",
    "len",
    "numpy.random.RandomState",
    "numpy.zeros",
    "random_labels",
    "range",
    "score_func",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.cluster.tests.test_supervised.v_measure_score": {
  "data": {
   "shadows": "sklearn.metrics.cluster.v_measure_score"
  },
  "type": "import"
 },
 "sklearn.metrics.cluster.tests.test_unsupervised": {
  "data": {},
  "type": "module"
 },
 "sklearn.metrics.cluster.tests.test_unsupervised.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.metrics.cluster.tests.test_unsupervised.assert_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.metrics.cluster.tests.test_unsupervised.assert_false": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_false"
  },
  "type": "import"
 },
 "sklearn.metrics.cluster.tests.test_unsupervised.assert_greater": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_greater"
  },
  "type": "import"
 },
 "sklearn.metrics.cluster.tests.test_unsupervised.assert_raise_message": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raise_message"
  },
  "type": "import"
 },
 "sklearn.metrics.cluster.tests.test_unsupervised.assert_raises_on_all_points_same_cluster": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "ValueError",
    "numpy.arange",
    "numpy.random.RandomState",
    "sklearn.utils.testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.cluster.tests.test_unsupervised.assert_raises_on_only_one_label": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "ValueError",
    "numpy.random.RandomState",
    "numpy.zeros",
    "sklearn.utils.testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.cluster.tests.test_unsupervised.assert_raises_regexp": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises_regexp"
  },
  "type": "import"
 },
 "sklearn.metrics.cluster.tests.test_unsupervised.calinski_harabaz_score": {
  "data": {
   "shadows": "sklearn.metrics.cluster.calinski_harabaz_score"
  },
  "type": "import"
 },
 "sklearn.metrics.cluster.tests.test_unsupervised.csr_matrix": {
  "data": {
   "shadows": "scipy.sparse.csr_matrix"
  },
  "type": "import"
 },
 "sklearn.metrics.cluster.tests.test_unsupervised.datasets": {
  "data": {
   "shadows": "sklearn.datasets"
  },
  "type": "import"
 },
 "sklearn.metrics.cluster.tests.test_unsupervised.davies_bouldin_score": {
  "data": {
   "shadows": "sklearn.metrics.cluster.davies_bouldin_score"
  },
  "type": "import"
 },
 "sklearn.metrics.cluster.tests.test_unsupervised.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.metrics.cluster.tests.test_unsupervised.pairwise_distances": {
  "data": {
   "shadows": "sklearn.metrics.pairwise_distances"
  },
  "type": "import"
 },
 "sklearn.metrics.cluster.tests.test_unsupervised.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.metrics.cluster.tests.test_unsupervised.silhouette_samples": {
  "data": {
   "shadows": "sklearn.metrics.cluster.silhouette_samples"
  },
  "type": "import"
 },
 "sklearn.metrics.cluster.tests.test_unsupervised.silhouette_score": {
  "data": {
   "shadows": "sklearn.metrics.cluster.silhouette_score"
  },
  "type": "import"
 },
 "sklearn.metrics.cluster.tests.test_unsupervised.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.metrics.cluster.tests.test_unsupervised.test_calinski_harabaz_score": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "numpy.ones",
    "sklearn.metrics.cluster.calinski_harabaz_score",
    "sklearn.metrics.cluster.tests.test_unsupervised.assert_raises_on_all_points_same_cluster",
    "sklearn.metrics.cluster.tests.test_unsupervised.assert_raises_on_only_one_label",
    "sklearn.metrics.cluster.tests.test_unsupervised.pytest",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.cluster.tests.test_unsupervised.test_cluster_size_1": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.isnan",
    "sklearn.metrics.cluster.silhouette_samples",
    "sklearn.metrics.cluster.silhouette_score",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_false"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.cluster.tests.test_unsupervised.test_correct_labelsize": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.arange",
    "numpy.unique",
    "numpy.zeros",
    "sklearn.datasets.load_iris",
    "sklearn.metrics.cluster.silhouette_score",
    "sklearn.utils.testing.assert_raises_regexp"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.cluster.tests.test_unsupervised.test_davies_bouldin_score": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "numpy.ones",
    "numpy.sqrt",
    "sklearn.metrics.cluster.davies_bouldin_score",
    "sklearn.metrics.cluster.tests.test_unsupervised.assert_raises_on_all_points_same_cluster",
    "sklearn.metrics.cluster.tests.test_unsupervised.assert_raises_on_only_one_label",
    "sklearn.metrics.cluster.tests.test_unsupervised.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.cluster.tests.test_unsupervised.test_non_encoded_labels": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "sklearn.datasets.load_iris",
    "sklearn.metrics.cluster.silhouette_samples",
    "sklearn.metrics.cluster.silhouette_score",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.cluster.tests.test_unsupervised.test_non_numpy_labels": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "list",
    "sklearn.datasets.load_iris",
    "sklearn.metrics.cluster.silhouette_score",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.cluster.tests.test_unsupervised.test_silhouette": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "int",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.dok_matrix",
    "scipy.sparse.lil_matrix",
    "sklearn.datasets.load_iris",
    "sklearn.metrics.cluster.silhouette_score",
    "sklearn.metrics.cluster.tests.test_unsupervised.pytest",
    "sklearn.metrics.pairwise_distances",
    "sklearn.utils.testing.assert_greater"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.cluster.tests.test_unsupervised.test_silhouette_paper_example": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.tril_indices",
    "numpy.zeros",
    "sklearn.metrics.cluster.silhouette_samples",
    "sklearn.metrics.cluster.silhouette_score",
    "sklearn.metrics.cluster.tests.test_unsupervised.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.cluster.unsupervised": {
  "data": {},
  "type": "module"
 },
 "sklearn.metrics.cluster.unsupervised._silhouette_reduce": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "numpy.bincount",
    "numpy.inf",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.cluster.unsupervised.calinski_harabaz_score": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "LabelEncoder",
    "check_X_y",
    "len",
    "numpy.mean",
    "numpy.sum",
    "range",
    "sklearn.metrics.cluster.unsupervised.check_number_of_labels"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.cluster.unsupervised.check_number_of_labels": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.cluster.unsupervised.davies_bouldin_score": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "LabelEncoder",
    "check_X_y",
    "len",
    "numpy.allclose",
    "numpy.average",
    "numpy.float",
    "numpy.inf",
    "numpy.mean",
    "numpy.nan",
    "numpy.nanmax",
    "numpy.zeros",
    "pairwise_distances",
    "range",
    "safe_indexing",
    "sklearn.metrics.cluster.unsupervised.check_number_of_labels"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.cluster.unsupervised.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sklearn.metrics.cluster.unsupervised.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "sklearn.metrics.cluster.unsupervised.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.metrics.cluster.unsupervised.silhouette_samples": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "LabelEncoder",
    "check_X_y",
    "len",
    "numpy.bincount",
    "numpy.concatenate",
    "numpy.errstate",
    "numpy.maximum",
    "numpy.nan_to_num",
    "pairwise_distances_chunked",
    "sklearn.metrics.cluster.unsupervised._silhouette_reduce",
    "sklearn.metrics.cluster.unsupervised.check_number_of_labels",
    "sklearn.metrics.cluster.unsupervised.functools",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.cluster.unsupervised.silhouette_score": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "check_X_y",
    "check_random_state",
    "numpy.mean",
    "sklearn.metrics.cluster.unsupervised.silhouette_samples"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.pairwise": {
  "data": {
   "symbols_in_volume": [
    "frozenset",
    "sklearn.metrics.pairwise.additive_chi2_kernel",
    "sklearn.metrics.pairwise.chi2_kernel",
    "sklearn.metrics.pairwise.cosine_distances",
    "sklearn.metrics.pairwise.cosine_similarity",
    "sklearn.metrics.pairwise.euclidean_distances",
    "sklearn.metrics.pairwise.laplacian_kernel",
    "sklearn.metrics.pairwise.linear_kernel",
    "sklearn.metrics.pairwise.manhattan_distances",
    "sklearn.metrics.pairwise.paired_cosine_distances",
    "sklearn.metrics.pairwise.paired_euclidean_distances",
    "sklearn.metrics.pairwise.paired_manhattan_distances",
    "sklearn.metrics.pairwise.polynomial_kernel",
    "sklearn.metrics.pairwise.rbf_kernel",
    "sklearn.metrics.pairwise.sigmoid_kernel"
   ]
  },
  "type": "module"
 },
 "sklearn.metrics.pairwise.GPKernel": {
  "data": {
   "shadows": "Kernel"
  },
  "type": "import"
 },
 "sklearn.metrics.pairwise.KERNEL_PARAMS": {
  "data": {
   "lineno": 1461
  },
  "type": "constant"
 },
 "sklearn.metrics.pairwise.PAIRED_DISTANCES": {
  "data": {
   "lineno": 633
  },
  "type": "constant"
 },
 "sklearn.metrics.pairwise.PAIRWISE_BOOLEAN_FUNCTIONS": {
  "data": {
   "lineno": 1406
  },
  "type": "constant"
 },
 "sklearn.metrics.pairwise.PAIRWISE_DISTANCE_FUNCTIONS": {
  "data": {
   "lineno": 1022
  },
  "type": "constant"
 },
 "sklearn.metrics.pairwise.PAIRWISE_KERNEL_FUNCTIONS": {
  "data": {
   "lineno": 1420
  },
  "type": "constant"
 },
 "sklearn.metrics.pairwise._VALID_METRICS": {
  "data": {
   "lineno": 1112
  },
  "type": "constant"
 },
 "sklearn.metrics.pairwise._argmin_min_reduce": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.pairwise._check_chunk_size": {
  "data": {
   "lineno": 1120,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "_num_samples",
    "any",
    "hasattr",
    "int",
    "isinstance",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.pairwise._pairwise_callable": {
  "data": {
   "lineno": 1080,
   "symbols_in_volume": [
    "metric",
    "numpy.empty",
    "numpy.zeros",
    "range",
    "sklearn.metrics.pairwise.check_pairwise_arrays",
    "sklearn.metrics.pairwise.itertools"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.pairwise._parallel_pairwise": {
  "data": {
   "lineno": 1061,
   "symbols_in_volume": [
    "Parallel",
    "_num_samples",
    "delayed",
    "effective_n_jobs",
    "fd",
    "func",
    "gen_even_slices",
    "numpy.hstack"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.pairwise._return_float_dtype": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "isinstance",
    "numpy.asarray",
    "numpy.float",
    "numpy.float32",
    "numpy.ndarray",
    "scipy.sparse.issparse"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.pairwise.additive_chi2_kernel": {
  "data": {
   "lineno": 912,
   "symbols_in_volume": [
    "ValueError",
    "_chi2_kernel_fast",
    "numpy.zeros",
    "scipy.sparse.issparse",
    "sklearn.metrics.pairwise.check_pairwise_arrays"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.pairwise.check_paired_arrays": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.metrics.pairwise.check_pairwise_arrays"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.pairwise.check_pairwise_arrays": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "ValueError",
    "check_array",
    "sklearn.metrics.pairwise._return_float_dtype"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.pairwise.chi2_kernel": {
  "data": {
   "lineno": 973,
   "symbols_in_volume": [
    "numpy.exp",
    "sklearn.metrics.pairwise.additive_chi2_kernel"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.pairwise.cosine_distances": {
  "data": {
   "lineno": 526,
   "symbols_in_volume": [
    "numpy.clip",
    "numpy.diag_indices_from",
    "sklearn.metrics.pairwise.cosine_similarity"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.pairwise.cosine_similarity": {
  "data": {
   "lineno": 863,
   "symbols_in_volume": [
    "normalize",
    "safe_sparse_dot",
    "sklearn.metrics.pairwise.check_pairwise_arrays"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.pairwise.csr_matrix": {
  "data": {
   "shadows": "scipy.sparse.csr_matrix"
  },
  "type": "import"
 },
 "sklearn.metrics.pairwise.distance": {
  "data": {
   "shadows": "scipy.spatial.distance"
  },
  "type": "import"
 },
 "sklearn.metrics.pairwise.distance_metrics": {
  "data": {
   "lineno": 1035,
   "symbols_in_volume": [
    "sklearn.metrics.pairwise.PAIRWISE_DISTANCE_FUNCTIONS"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.pairwise.euclidean_distances": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "ValueError",
    "check_array",
    "numpy.atleast_2d",
    "numpy.maximum",
    "numpy.newaxis",
    "numpy.sqrt",
    "row_norms",
    "safe_sparse_dot",
    "sklearn.metrics.pairwise.check_pairwise_arrays"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.pairwise.issparse": {
  "data": {
   "shadows": "scipy.sparse.issparse"
  },
  "type": "import"
 },
 "sklearn.metrics.pairwise.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "sklearn.metrics.pairwise.kernel_metrics": {
  "data": {
   "lineno": 1434,
   "symbols_in_volume": [
    "sklearn.metrics.pairwise.PAIRWISE_KERNEL_FUNCTIONS"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.pairwise.laplacian_kernel": {
  "data": {
   "lineno": 829,
   "symbols_in_volume": [
    "numpy.exp",
    "sklearn.metrics.pairwise.check_pairwise_arrays",
    "sklearn.metrics.pairwise.manhattan_distances"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.pairwise.linear_kernel": {
  "data": {
   "lineno": 700,
   "symbols_in_volume": [
    "safe_sparse_dot",
    "sklearn.metrics.pairwise.check_pairwise_arrays"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.pairwise.manhattan_distances": {
  "data": {
   "lineno": 445,
   "symbols_in_volume": [
    "DeprecationWarning",
    "TypeError",
    "_sparse_manhattan",
    "numpy.abs",
    "numpy.newaxis",
    "numpy.zeros",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.issparse",
    "scipy.spatial.distance.cdist",
    "sklearn.metrics.pairwise.check_pairwise_arrays",
    "sklearn.metrics.pairwise.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.pairwise.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.metrics.pairwise.paired_cosine_distances": {
  "data": {
   "lineno": 608,
   "symbols_in_volume": [
    "normalize",
    "row_norms",
    "sklearn.metrics.pairwise.check_paired_arrays"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.pairwise.paired_distances": {
  "data": {
   "lineno": 642,
   "symbols_in_volume": [
    "ValueError",
    "callable",
    "func",
    "len",
    "metric",
    "numpy.zeros",
    "range",
    "sklearn.metrics.pairwise.PAIRED_DISTANCES",
    "sklearn.metrics.pairwise.check_paired_arrays"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.pairwise.paired_euclidean_distances": {
  "data": {
   "lineno": 564,
   "symbols_in_volume": [
    "row_norms",
    "sklearn.metrics.pairwise.check_paired_arrays"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.pairwise.paired_manhattan_distances": {
  "data": {
   "lineno": 584,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.array",
    "numpy.squeeze",
    "scipy.sparse.issparse",
    "sklearn.metrics.pairwise.check_paired_arrays"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.pairwise.pairwise_distances": {
  "data": {
   "lineno": 1290,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "bool",
    "callable",
    "effective_n_jobs",
    "func",
    "functools.partial",
    "metric",
    "scipy.sparse.issparse",
    "scipy.spatial.distance.cdist",
    "scipy.spatial.distance.pdist",
    "scipy.spatial.distance.squareform",
    "sklearn.metrics.pairwise.PAIRWISE_DISTANCE_FUNCTIONS",
    "sklearn.metrics.pairwise._VALID_METRICS",
    "sklearn.metrics.pairwise._pairwise_callable",
    "sklearn.metrics.pairwise._parallel_pairwise",
    "sklearn.metrics.pairwise.check_pairwise_arrays"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.pairwise.pairwise_distances_argmin": {
  "data": {
   "lineno": 365,
   "symbols_in_volume": [
    "sklearn.metrics.pairwise.pairwise_distances_argmin_min"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.pairwise.pairwise_distances_argmin_min": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "DeprecationWarning",
    "numpy.concatenate",
    "numpy.sqrt",
    "sklearn.metrics.pairwise._argmin_min_reduce",
    "sklearn.metrics.pairwise.check_pairwise_arrays",
    "sklearn.metrics.pairwise.pairwise_distances_chunked",
    "sklearn.metrics.pairwise.warnings",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.pairwise.pairwise_distances_chunked": {
  "data": {
   "lineno": 1141,
   "symbols_in_volume": [
    "_num_samples",
    "gen_batches",
    "get_chunk_n_rows",
    "metric",
    "reduce_func",
    "sklearn.metrics.pairwise._check_chunk_size",
    "sklearn.metrics.pairwise.pairwise_distances",
    "slice"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.pairwise.pairwise_kernels": {
  "data": {
   "lineno": 1474,
   "symbols_in_volume": [
    "ValueError",
    "callable",
    "dict",
    "func",
    "functools.partial",
    "isinstance",
    "metric",
    "metric.__call__",
    "sklearn.metrics.pairwise.KERNEL_PARAMS",
    "sklearn.metrics.pairwise.PAIRWISE_KERNEL_FUNCTIONS",
    "sklearn.metrics.pairwise._pairwise_callable",
    "sklearn.metrics.pairwise._parallel_pairwise",
    "sklearn.metrics.pairwise.check_pairwise_arrays"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.pairwise.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "sklearn.metrics.pairwise.polynomial_kernel": {
  "data": {
   "lineno": 726,
   "symbols_in_volume": [
    "safe_sparse_dot",
    "sklearn.metrics.pairwise.check_pairwise_arrays"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.pairwise.rbf_kernel": {
  "data": {
   "lineno": 796,
   "symbols_in_volume": [
    "numpy.exp",
    "sklearn.metrics.pairwise.check_pairwise_arrays",
    "sklearn.metrics.pairwise.euclidean_distances"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.pairwise.sigmoid_kernel": {
  "data": {
   "lineno": 762,
   "symbols_in_volume": [
    "numpy.tanh",
    "safe_sparse_dot",
    "sklearn.metrics.pairwise.check_pairwise_arrays"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.pairwise.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.metrics.ranking": {
  "data": {},
  "type": "module"
 },
 "sklearn.metrics.ranking._binary_clf_curve": {
  "data": {
   "lineno": 354,
   "symbols_in_volume": [
    "ValueError",
    "assert_all_finite",
    "check_consistent_length",
    "column_or_1d",
    "numpy.argsort",
    "numpy.array_equal",
    "numpy.diff",
    "numpy.r_",
    "numpy.unique",
    "numpy.where",
    "stable_cumsum",
    "type_of_target"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.ranking.auc": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "DeprecationWarning",
    "ValueError",
    "check_consistent_length",
    "column_or_1d",
    "isinstance",
    "numpy.all",
    "numpy.any",
    "numpy.diff",
    "numpy.lexsort",
    "numpy.memmap",
    "numpy.trapz",
    "sklearn.metrics.ranking.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.ranking.average_precision_score": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "ValueError",
    "_average_binary_score",
    "functools.partial",
    "type_of_target"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.ranking.average_precision_score._binary_uninterpolated_average_precision": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.diff",
    "numpy.sum",
    "sklearn.metrics.ranking.precision_recall_curve"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.ranking.coverage_error": {
  "data": {
   "lineno": 746,
   "symbols_in_volume": [
    "ValueError",
    "check_array",
    "check_consistent_length",
    "numpy.average",
    "numpy.logical_not",
    "numpy.ma.masked_array",
    "type_of_target"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.ranking.csr_matrix": {
  "data": {
   "shadows": "scipy.sparse.csr_matrix"
  },
  "type": "import"
 },
 "sklearn.metrics.ranking.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sklearn.metrics.ranking.label_ranking_average_precision_score": {
  "data": {
   "lineno": 659,
   "symbols_in_volume": [
    "ValueError",
    "check_array",
    "check_consistent_length",
    "enumerate",
    "numpy.sum",
    "scipy.sparse.csr_matrix",
    "scipy.stats.rankdata",
    "type_of_target",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.ranking.label_ranking_loss": {
  "data": {
   "lineno": 805,
   "symbols_in_volume": [
    "ValueError",
    "check_array",
    "check_consistent_length",
    "count_nonzero",
    "enumerate",
    "len",
    "numpy.average",
    "numpy.bincount",
    "numpy.dot",
    "numpy.errstate",
    "numpy.logical_or",
    "numpy.unique",
    "numpy.zeros",
    "scipy.sparse.csr_matrix",
    "type_of_target",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.ranking.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.metrics.ranking.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "sklearn.metrics.ranking.precision_recall_curve": {
  "data": {
   "lineno": 444,
   "symbols_in_volume": [
    "numpy.isnan",
    "numpy.r_",
    "sklearn.metrics.ranking._binary_clf_curve",
    "slice"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.ranking.rankdata": {
  "data": {
   "shadows": "scipy.stats.rankdata"
  },
  "type": "import"
 },
 "sklearn.metrics.ranking.roc_auc_score": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "_average_binary_score",
    "label_binarize",
    "numpy.unique",
    "type_of_target"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.ranking.roc_auc_score._binary_roc_auc_score": {
  "data": {
   "lineno": 317,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.append",
    "numpy.interp",
    "numpy.searchsorted",
    "numpy.unique",
    "sklearn.metrics.ranking.auc",
    "sklearn.metrics.ranking.roc_curve"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.ranking.roc_curve": {
  "data": {
   "lineno": 530,
   "symbols_in_volume": [
    "len",
    "numpy.diff",
    "numpy.logical_or",
    "numpy.nan",
    "numpy.r_",
    "numpy.repeat",
    "numpy.where",
    "sklearn.metrics.ranking._binary_clf_curve",
    "sklearn.metrics.ranking.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.ranking.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.metrics.regression": {
  "data": {},
  "type": "module"
 },
 "sklearn.metrics.regression.__ALL__": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "sklearn.metrics.regression._check_reg_targets": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "ValueError",
    "check_array",
    "check_consistent_length",
    "isinstance",
    "len"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.regression.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sklearn.metrics.regression.explained_variance_score": {
  "data": {
   "lineno": 355,
   "symbols_in_volume": [
    "check_consistent_length",
    "isinstance",
    "numpy.average",
    "numpy.ones",
    "sklearn.metrics.regression._check_reg_targets"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.regression.mean_absolute_error": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "check_consistent_length",
    "isinstance",
    "numpy.abs",
    "numpy.average",
    "sklearn.metrics.regression._check_reg_targets"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.regression.mean_squared_error": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "check_consistent_length",
    "isinstance",
    "numpy.average",
    "sklearn.metrics.regression._check_reg_targets"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.regression.mean_squared_log_error": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "ValueError",
    "check_consistent_length",
    "numpy.log1p",
    "sklearn.metrics.regression._check_reg_targets",
    "sklearn.metrics.regression.mean_squared_error"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.regression.median_absolute_error": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "ValueError",
    "numpy.abs",
    "numpy.median",
    "sklearn.metrics.regression._check_reg_targets"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.regression.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.metrics.regression.r2_score": {
  "data": {
   "lineno": 448,
   "symbols_in_volume": [
    "check_consistent_length",
    "column_or_1d",
    "isinstance",
    "numpy.any",
    "numpy.average",
    "numpy.float64",
    "numpy.newaxis",
    "numpy.ones",
    "sklearn.metrics.regression._check_reg_targets"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.scorer": {
  "data": {
   "symbols_in_volume": [
    "dict",
    "sklearn.metrics.scorer.SCORERS",
    "sklearn.metrics.scorer.accuracy_scorer",
    "sklearn.metrics.scorer.adjusted_mutual_info_scorer",
    "sklearn.metrics.scorer.adjusted_rand_scorer",
    "sklearn.metrics.scorer.average_precision_scorer",
    "sklearn.metrics.scorer.balanced_accuracy_scorer",
    "sklearn.metrics.scorer.brier_score_loss_scorer",
    "sklearn.metrics.scorer.completeness_scorer",
    "sklearn.metrics.scorer.explained_variance_scorer",
    "sklearn.metrics.scorer.fowlkes_mallows_scorer",
    "sklearn.metrics.scorer.homogeneity_scorer",
    "sklearn.metrics.scorer.make_scorer",
    "sklearn.metrics.scorer.mutual_info_scorer",
    "sklearn.metrics.scorer.neg_log_loss_scorer",
    "sklearn.metrics.scorer.neg_mean_absolute_error_scorer",
    "sklearn.metrics.scorer.neg_mean_squared_error_scorer",
    "sklearn.metrics.scorer.neg_mean_squared_log_error_scorer",
    "sklearn.metrics.scorer.neg_median_absolute_error_scorer",
    "sklearn.metrics.scorer.normalized_mutual_info_scorer",
    "sklearn.metrics.scorer.qualified_name",
    "sklearn.metrics.scorer.r2_scorer",
    "sklearn.metrics.scorer.roc_auc_scorer",
    "sklearn.metrics.scorer.v_measure_scorer"
   ]
  },
  "type": "module"
 },
 "sklearn.metrics.scorer.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "sklearn.metrics.scorer.Iterable": {
  "data": {
   "shadows": "_Iterable"
  },
  "type": "import"
 },
 "sklearn.metrics.scorer.SCORERS": {
  "data": {
   "lineno": 499
  },
  "type": "constant"
 },
 "sklearn.metrics.scorer._BaseScorer": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "abc.ABCMeta",
    "object"
   ]
  },
  "type": "class"
 },
 "sklearn.metrics.scorer._BaseScorer.__init__": {
  "data": {
   "lineno": 48
  },
  "type": "function"
 },
 "sklearn.metrics.scorer._BaseScorer.__repr__": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.scorer._BaseScorer._factory_args": {
  "data": {
   "lineno": 61
  },
  "type": "function"
 },
 "sklearn.metrics.scorer._PredictScorer": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "sklearn.metrics.scorer._BaseScorer"
   ]
  },
  "type": "class"
 },
 "sklearn.metrics.scorer._PredictScorer.__call__": {
  "data": {
   "lineno": 67
  },
  "type": "function"
 },
 "sklearn.metrics.scorer._ProbaScorer": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "sklearn.metrics.scorer._BaseScorer"
   ]
  },
  "type": "class"
 },
 "sklearn.metrics.scorer._ProbaScorer.__call__": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "type_of_target"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.scorer._ProbaScorer._factory_args": {
  "data": {
   "lineno": 137
  },
  "type": "function"
 },
 "sklearn.metrics.scorer._ThresholdScorer": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "sklearn.metrics.scorer._BaseScorer"
   ]
  },
  "type": "class"
 },
 "sklearn.metrics.scorer._ThresholdScorer.__call__": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "AttributeError",
    "NotImplementedError",
    "ValueError",
    "is_regressor",
    "isinstance",
    "list",
    "numpy.vstack",
    "type_of_target"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.scorer._ThresholdScorer._factory_args": {
  "data": {
   "lineno": 197
  },
  "type": "function"
 },
 "sklearn.metrics.scorer._check_multimetric_scoring": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "all",
    "any",
    "callable",
    "dict",
    "isinstance",
    "len",
    "list",
    "repr",
    "set",
    "sklearn.metrics.scorer.check_scoring",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.scorer._passthrough_scorer": {
  "data": {
   "lineno": 226
  },
  "type": "function"
 },
 "sklearn.metrics.scorer.accuracy_scorer": {
  "data": {
   "lineno": 468
  },
  "type": "constant"
 },
 "sklearn.metrics.scorer.adjusted_mutual_info_scorer": {
  "data": {
   "lineno": 494
  },
  "type": "constant"
 },
 "sklearn.metrics.scorer.adjusted_rand_scorer": {
  "data": {
   "lineno": 489
  },
  "type": "constant"
 },
 "sklearn.metrics.scorer.average_precision_scorer": {
  "data": {
   "lineno": 475
  },
  "type": "constant"
 },
 "sklearn.metrics.scorer.balanced_accuracy_scorer": {
  "data": {
   "lineno": 470
  },
  "type": "constant"
 },
 "sklearn.metrics.scorer.brier_score_loss_scorer": {
  "data": {
   "lineno": 483
  },
  "type": "constant"
 },
 "sklearn.metrics.scorer.check_scoring": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "callable",
    "getattr",
    "hasattr",
    "isinstance",
    "sklearn.metrics.scorer._passthrough_scorer",
    "sklearn.metrics.scorer.get_scorer"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.scorer.completeness_scorer": {
  "data": {
   "lineno": 491
  },
  "type": "constant"
 },
 "sklearn.metrics.scorer.explained_variance_scorer": {
  "data": {
   "lineno": 455
  },
  "type": "constant"
 },
 "sklearn.metrics.scorer.f1_scorer": {
  "data": {
   "lineno": 469
  },
  "type": "constant"
 },
 "sklearn.metrics.scorer.fowlkes_mallows_scorer": {
  "data": {
   "lineno": 496
  },
  "type": "constant"
 },
 "sklearn.metrics.scorer.get_scorer": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.scorer.homogeneity_scorer": {
  "data": {
   "lineno": 490
  },
  "type": "constant"
 },
 "sklearn.metrics.scorer.make_scorer": {
  "data": {
   "lineno": 388,
   "symbols_in_volume": [
    "ValueError",
    "cls",
    "sklearn.metrics.scorer._PredictScorer",
    "sklearn.metrics.scorer._ProbaScorer",
    "sklearn.metrics.scorer._ThresholdScorer"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.scorer.mutual_info_scorer": {
  "data": {
   "lineno": 493
  },
  "type": "constant"
 },
 "sklearn.metrics.scorer.neg_log_loss_scorer": {
  "data": {
   "lineno": 481
  },
  "type": "constant"
 },
 "sklearn.metrics.scorer.neg_mean_absolute_error_scorer": {
  "data": {
   "lineno": 461
  },
  "type": "constant"
 },
 "sklearn.metrics.scorer.neg_mean_squared_error_scorer": {
  "data": {
   "lineno": 457
  },
  "type": "constant"
 },
 "sklearn.metrics.scorer.neg_mean_squared_log_error_scorer": {
  "data": {
   "lineno": 459
  },
  "type": "constant"
 },
 "sklearn.metrics.scorer.neg_median_absolute_error_scorer": {
  "data": {
   "lineno": 464
  },
  "type": "constant"
 },
 "sklearn.metrics.scorer.normalized_mutual_info_scorer": {
  "data": {
   "lineno": 495
  },
  "type": "constant"
 },
 "sklearn.metrics.scorer.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.metrics.scorer.precision_scorer": {
  "data": {
   "lineno": 477
  },
  "type": "constant"
 },
 "sklearn.metrics.scorer.qualified_name": {
  "data": {
   "lineno": 525
  },
  "type": "constant"
 },
 "sklearn.metrics.scorer.r2_scorer": {
  "data": {
   "lineno": 456
  },
  "type": "constant"
 },
 "sklearn.metrics.scorer.recall_scorer": {
  "data": {
   "lineno": 478
  },
  "type": "constant"
 },
 "sklearn.metrics.scorer.roc_auc_scorer": {
  "data": {
   "lineno": 473
  },
  "type": "constant"
 },
 "sklearn.metrics.scorer.v_measure_scorer": {
  "data": {
   "lineno": 492
  },
  "type": "constant"
 },
 "sklearn.metrics.setup": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.distutils.core.setup",
    "sklearn.metrics.setup.configuration"
   ]
  },
  "type": "module"
 },
 "sklearn.metrics.setup.Configuration": {
  "data": {
   "shadows": "numpy.distutils.misc_util.Configuration"
  },
  "type": "import"
 },
 "sklearn.metrics.setup.configuration": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "numpy.distutils.misc_util.Configuration",
    "sklearn._build_utils.get_blas_info",
    "sklearn.metrics.setup.numpy",
    "sklearn.metrics.setup.os"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.setup.get_blas_info": {
  "data": {
   "shadows": "sklearn._build_utils.get_blas_info"
  },
  "type": "import"
 },
 "sklearn.metrics.setup.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.metrics.setup.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "sklearn.metrics.setup.os.path": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "sklearn.metrics.setup.setup": {
  "data": {
   "shadows": "numpy.distutils.core.setup"
  },
  "type": "import"
 },
 "sklearn.metrics.tests": {
  "data": {},
  "type": "module"
 },
 "sklearn.metrics.tests.test_classification": {
  "data": {},
  "type": "module"
 },
 "sklearn.metrics.tests.test_classification.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_classification.MockDataFrame": {
  "data": {
   "shadows": "sklearn.utils.mocking.MockDataFrame"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_classification.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_classification.UndefinedMetricWarning": {
  "data": {
   "shadows": "sklearn.exceptions.UndefinedMetricWarning"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_classification._check_targets": {
  "data": {
   "shadows": "sklearn.metrics.classification._check_targets"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_classification.accuracy_score": {
  "data": {
   "shadows": "sklearn.metrics.accuracy_score"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_classification.assert_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_classification.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_classification.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_classification.assert_dict_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_dict_equal"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_classification.assert_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_classification.assert_no_warnings": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_no_warnings"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_classification.assert_not_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_not_equal"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_classification.assert_raise_message": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raise_message"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_classification.assert_raises": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_classification.assert_warns": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_warns"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_classification.assert_warns_div0": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_warns_div0"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_classification.assert_warns_message": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_warns_message"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_classification.average_precision_score": {
  "data": {
   "shadows": "sklearn.metrics.average_precision_score"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_classification.balanced_accuracy_score": {
  "data": {
   "shadows": "sklearn.metrics.balanced_accuracy_score"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_classification.brier_score_loss": {
  "data": {
   "shadows": "sklearn.metrics.brier_score_loss"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_classification.check_random_state": {
  "data": {
   "shadows": "sklearn.utils.validation.check_random_state"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_classification.classification_report": {
  "data": {
   "shadows": "sklearn.metrics.classification_report"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_classification.clean_warning_registry": {
  "data": {
   "shadows": "sklearn.utils.testing.clean_warning_registry"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_classification.cohen_kappa_score": {
  "data": {
   "shadows": "sklearn.metrics.cohen_kappa_score"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_classification.confusion_matrix": {
  "data": {
   "shadows": "sklearn.metrics.confusion_matrix"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_classification.datasets": {
  "data": {
   "shadows": "sklearn.datasets"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_classification.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_classification.f1_score": {
  "data": {
   "shadows": "sklearn.metrics.f1_score"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_classification.fbeta_score": {
  "data": {
   "shadows": "sklearn.metrics.fbeta_score"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_classification.hamming_loss": {
  "data": {
   "shadows": "sklearn.metrics.hamming_loss"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_classification.hinge_loss": {
  "data": {
   "shadows": "sklearn.metrics.hinge_loss"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_classification.ignore_warnings": {
  "data": {
   "shadows": "sklearn.utils.testing.ignore_warnings"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_classification.jaccard_similarity_score": {
  "data": {
   "shadows": "sklearn.metrics.jaccard_similarity_score"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_classification.label_binarize": {
  "data": {
   "shadows": "sklearn.preprocessing.label_binarize"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_classification.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_classification.log_loss": {
  "data": {
   "shadows": "sklearn.metrics.log_loss"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_classification.make_multilabel_classification": {
  "data": {
   "shadows": "sklearn.datasets.make_multilabel_classification"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_classification.make_prediction": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "int",
    "numpy.arange",
    "numpy.c_",
    "numpy.random.RandomState",
    "sklearn.datasets.load_iris",
    "sklearn.svm.SVC",
    "sklearn.utils.validation.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.matthews_corrcoef": {
  "data": {
   "shadows": "sklearn.metrics.matthews_corrcoef"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_classification.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_classification.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_classification.precision_recall_fscore_support": {
  "data": {
   "shadows": "sklearn.metrics.precision_recall_fscore_support"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_classification.precision_score": {
  "data": {
   "shadows": "sklearn.metrics.precision_score"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_classification.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_classification.product": {
  "data": {
   "shadows": "itertools.product"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_classification.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_classification.recall_score": {
  "data": {
   "shadows": "sklearn.metrics.recall_score"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_classification.sp_hamming": {
  "data": {
   "shadows": "scipy.spatial.distance.hamming"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_classification.svm": {
  "data": {
   "shadows": "sklearn.svm"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_classification.test__check_targets": {
  "data": {
   "lineno": 1384,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "itertools.product",
    "numpy.array",
    "numpy.squeeze",
    "sklearn.metrics.classification._check_targets",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_raise_message",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test__check_targets_multiclass_with_both_y_true_and_y_pred_binary": {
  "data": {
   "lineno": 1477,
   "symbols_in_volume": [
    "sklearn.metrics.classification._check_targets",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_average_precision_score_duplicate_values": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "sklearn.metrics.average_precision_score",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_average_precision_score_score_non_binary_class": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.metrics.average_precision_score",
    "sklearn.utils.testing.assert_raise_message",
    "sklearn.utils.validation.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_average_precision_score_tied_values": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "sklearn.metrics.average_precision_score",
    "sklearn.utils.testing.assert_not_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_balanced_accuracy_score": {
  "data": {
   "lineno": 1689,
   "symbols_in_volume": [
    "numpy.full_like",
    "numpy.unique",
    "sklearn.metrics.balanced_accuracy_score",
    "sklearn.metrics.recall_score",
    "sklearn.metrics.tests.test_classification.pytest",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_balanced_accuracy_score_unseen": {
  "data": {
   "lineno": 1684,
   "symbols_in_volume": [
    "UserWarning",
    "sklearn.metrics.balanced_accuracy_score",
    "sklearn.utils.testing.assert_warns_message"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_brier_score_loss": {
  "data": {
   "lineno": 1664,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.array",
    "scipy.linalg.norm",
    "sklearn.metrics.brier_score_loss",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_classification_report_dictionary_output": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "float",
    "int",
    "len",
    "numpy.arange",
    "sklearn.datasets.load_iris",
    "sklearn.metrics.classification_report",
    "sklearn.metrics.tests.test_classification.make_prediction",
    "sklearn.utils.testing.assert_almost_equal",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_classification_report_labels_target_names_unequal_length": {
  "data": {
   "lineno": 908,
   "symbols_in_volume": [
    "UserWarning",
    "sklearn.metrics.classification_report",
    "sklearn.utils.testing.assert_warns_message"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_classification_report_multiclass": {
  "data": {
   "lineno": 743,
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "sklearn.datasets.load_iris",
    "sklearn.metrics.classification_report",
    "sklearn.metrics.tests.test_classification.make_prediction",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_classification_report_multiclass_balanced": {
  "data": {
   "lineno": 766,
   "symbols_in_volume": [
    "sklearn.metrics.classification_report",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_classification_report_multiclass_with_digits": {
  "data": {
   "lineno": 804,
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "sklearn.datasets.load_iris",
    "sklearn.metrics.classification_report",
    "sklearn.metrics.tests.test_classification.make_prediction",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_classification_report_multiclass_with_label_detection": {
  "data": {
   "lineno": 784,
   "symbols_in_volume": [
    "sklearn.datasets.load_iris",
    "sklearn.metrics.classification_report",
    "sklearn.metrics.tests.test_classification.make_prediction",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_classification_report_multiclass_with_long_string_label": {
  "data": {
   "lineno": 885,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.metrics.classification_report",
    "sklearn.metrics.tests.test_classification.make_prediction",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_classification_report_multiclass_with_string_label": {
  "data": {
   "lineno": 827,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.metrics.classification_report",
    "sklearn.metrics.tests.test_classification.make_prediction",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_classification_report_multiclass_with_unicode_label": {
  "data": {
   "lineno": 863,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.metrics.classification_report",
    "sklearn.metrics.tests.test_classification.make_prediction",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_classification_report_no_labels_target_names_unequal_length": {
  "data": {
   "lineno": 921,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.metrics.classification_report",
    "sklearn.utils.testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_cohen_kappa": {
  "data": {
   "lineno": 374,
   "symbols_in_volume": [
    "numpy.append",
    "numpy.array",
    "sklearn.metrics.cohen_kappa_score",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_confusion_matrix_binary": {
  "data": {
   "lineno": 352,
   "symbols_in_volume": [
    "sklearn.metrics.tests.test_classification.make_prediction",
    "str",
    "test"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_confusion_matrix_binary.test": {
  "data": {
   "lineno": 356,
   "symbols_in_volume": [
    "numpy.sqrt",
    "sklearn.metrics.confusion_matrix",
    "sklearn.metrics.matthews_corrcoef",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_confusion_matrix_dtype": {
  "data": {
   "lineno": 716,
   "symbols_in_volume": [
    "len",
    "numpy.bool_",
    "numpy.float32",
    "numpy.float64",
    "numpy.full",
    "numpy.int32",
    "numpy.int64",
    "numpy.ones",
    "numpy.uint32",
    "numpy.uint64",
    "object",
    "sklearn.metrics.confusion_matrix",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_confusion_matrix_multiclass_subset_labels": {
  "data": {
   "lineno": 690,
   "symbols_in_volume": [
    "ValueError",
    "numpy.max",
    "sklearn.metrics.confusion_matrix",
    "sklearn.metrics.tests.test_classification.make_prediction",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_fscore_warnings": {
  "data": {
   "lineno": 1345,
   "symbols_in_volume": [
    "functools.partial",
    "numpy.array",
    "score",
    "sklearn.metrics.f1_score",
    "sklearn.metrics.fbeta_score",
    "sklearn.metrics.tests.test_classification.warnings",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.clean_warning_registry",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_hinge_loss_binary": {
  "data": {
   "lineno": 1484,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.metrics.hinge_loss",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_hinge_loss_multiclass": {
  "data": {
   "lineno": 1494,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.clip",
    "numpy.mean",
    "sklearn.metrics.hinge_loss",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_hinge_loss_multiclass_invariance_lists": {
  "data": {
   "lineno": 1556,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.clip",
    "numpy.mean",
    "sklearn.metrics.hinge_loss",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_hinge_loss_multiclass_missing_labels_with_labels_none": {
  "data": {
   "lineno": 1518,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "sklearn.metrics.hinge_loss",
    "sklearn.utils.testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_hinge_loss_multiclass_with_missing_labels": {
  "data": {
   "lineno": 1533,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.clip",
    "numpy.mean",
    "sklearn.metrics.hinge_loss",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_log_loss": {
  "data": {
   "lineno": 1583,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "numpy.asarray",
    "numpy.clip",
    "numpy.log",
    "numpy.mean",
    "sklearn.metrics.log_loss",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_raise_message",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_log_loss_pandas_input": {
  "data": {
   "lineno": 1647,
   "symbols_in_volume": [
    "ImportError",
    "PredInputType",
    "TrueInputType",
    "numpy.array",
    "pandas.DataFrame",
    "pandas.Series",
    "sklearn.metrics.log_loss",
    "sklearn.utils.mocking.MockDataFrame",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_matthews_corrcoef": {
  "data": {
   "lineno": 449,
   "symbols_in_volume": [
    "AssertionError",
    "len",
    "numpy.random.RandomState",
    "numpy.where",
    "sklearn.metrics.matthews_corrcoef",
    "sklearn.preprocessing.label_binarize",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_raises",
    "sklearn.utils.testing.assert_warns_div0"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_matthews_corrcoef_against_jurman": {
  "data": {
   "lineno": 418,
   "symbols_in_volume": [
    "len",
    "numpy.random.RandomState",
    "numpy.sqrt",
    "numpy.sum",
    "range",
    "sklearn.metrics.confusion_matrix",
    "sklearn.metrics.matthews_corrcoef",
    "sklearn.utils.testing.assert_almost_equal",
    "sum"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_matthews_corrcoef_against_numpy_corrcoef": {
  "data": {
   "lineno": 409,
   "symbols_in_volume": [
    "numpy.corrcoef",
    "numpy.random.RandomState",
    "sklearn.metrics.matthews_corrcoef",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_matthews_corrcoef_multiclass": {
  "data": {
   "lineno": 490,
   "symbols_in_volume": [
    "RuntimeWarning",
    "chr",
    "numpy.random.RandomState",
    "numpy.sqrt",
    "ord",
    "sklearn.metrics.matthews_corrcoef",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_warns_message"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_matthews_corrcoef_nan": {
  "data": {
   "lineno": 403,
   "symbols_in_volume": [
    "sklearn.metrics.matthews_corrcoef",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_matthews_corrcoef_overflow": {
  "data": {
   "lineno": 545,
   "symbols_in_volume": [
    "mcc_safe",
    "numpy.random.RandomState",
    "numpy.repeat",
    "random_ys",
    "sklearn.metrics.matthews_corrcoef",
    "sklearn.metrics.tests.test_classification.pytest",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_matthews_corrcoef_overflow.mcc_safe": {
  "data": {
   "lineno": 550,
   "symbols_in_volume": [
    "len",
    "numpy.sqrt",
    "sklearn.metrics.confusion_matrix"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_matthews_corrcoef_overflow.random_ys": {
  "data": {
   "lineno": 562
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_multilabel_accuracy_score_subset_accuracy": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.logical_not",
    "numpy.zeros",
    "sklearn.metrics.accuracy_score",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_multilabel_classification_report": {
  "data": {
   "lineno": 934,
   "symbols_in_volume": [
    "sklearn.datasets.make_multilabel_classification",
    "sklearn.metrics.classification_report",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_multilabel_hamming_loss": {
  "data": {
   "lineno": 980,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.zeros",
    "numpy.zeros_like",
    "scipy.spatial.distance.hamming",
    "sklearn.metrics.hamming_loss",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_multilabel_jaccard_similarity_score": {
  "data": {
   "lineno": 1000,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.logical_not",
    "numpy.zeros",
    "sklearn.metrics.jaccard_similarity_score",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_multilabel_zero_one_loss_subset": {
  "data": {
   "lineno": 966,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.logical_not",
    "numpy.zeros",
    "sklearn.metrics.zero_one_loss",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_precision_recall_f1_no_labels": {
  "data": {
   "lineno": 1217,
   "symbols_in_volume": [
    "numpy.zeros",
    "numpy.zeros_like",
    "sklearn.exceptions.UndefinedMetricWarning",
    "sklearn.metrics.fbeta_score",
    "sklearn.metrics.precision_recall_fscore_support",
    "sklearn.metrics.tests.test_classification.pytest",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_warns"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_precision_recall_f1_no_labels_average_none": {
  "data": {
   "lineno": 1238,
   "symbols_in_volume": [
    "numpy.zeros",
    "numpy.zeros_like",
    "sklearn.exceptions.UndefinedMetricWarning",
    "sklearn.metrics.fbeta_score",
    "sklearn.metrics.precision_recall_fscore_support",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_warns"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_precision_recall_f1_score_binary": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "my_assert",
    "sklearn.metrics.f1_score",
    "sklearn.metrics.fbeta_score",
    "sklearn.metrics.precision_recall_fscore_support",
    "sklearn.metrics.precision_score",
    "sklearn.metrics.recall_score",
    "sklearn.metrics.tests.test_classification.make_prediction",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_no_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_precision_recall_f1_score_binary_averaged": {
  "data": {
   "lineno": 650,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.average",
    "numpy.bincount",
    "numpy.mean",
    "sklearn.metrics.precision_recall_fscore_support",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_precision_recall_f1_score_multiclass": {
  "data": {
   "lineno": 580,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.metrics.f1_score",
    "sklearn.metrics.fbeta_score",
    "sklearn.metrics.precision_recall_fscore_support",
    "sklearn.metrics.precision_score",
    "sklearn.metrics.recall_score",
    "sklearn.metrics.tests.test_classification.make_prediction",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_precision_recall_f1_score_multilabel_1": {
  "data": {
   "lineno": 1017,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.average",
    "numpy.mean",
    "sklearn.metrics.fbeta_score",
    "sklearn.metrics.precision_recall_fscore_support",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_precision_recall_f1_score_multilabel_2": {
  "data": {
   "lineno": 1086,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.average",
    "numpy.mean",
    "sklearn.metrics.fbeta_score",
    "sklearn.metrics.precision_recall_fscore_support",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_precision_recall_f1_score_with_an_empty_prediction": {
  "data": {
   "lineno": 1154,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.average",
    "numpy.mean",
    "sklearn.metrics.fbeta_score",
    "sklearn.metrics.precision_recall_fscore_support",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_precision_recall_f_binary_single_class": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "sklearn.metrics.f1_score",
    "sklearn.metrics.precision_score",
    "sklearn.metrics.recall_score",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_precision_recall_f_extra_labels": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "ValueError",
    "enumerate",
    "numpy.arange",
    "numpy.array",
    "numpy.mean",
    "sklearn.metrics.precision_recall_fscore_support",
    "sklearn.metrics.recall_score",
    "sklearn.preprocessing.label_binarize",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_raises",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_precision_recall_f_ignored_labels": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "enumerate",
    "functools.partial",
    "numpy.arange",
    "recall_13",
    "recall_all",
    "sklearn.metrics.recall_score",
    "sklearn.preprocessing.label_binarize",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_not_equal",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_precision_recall_f_unused_pos_label": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": [
    "UserWarning",
    "sklearn.metrics.precision_recall_fscore_support",
    "sklearn.utils.testing.assert_warns_message"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_precision_recall_fscore_support_errors": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.metrics.precision_recall_fscore_support",
    "sklearn.metrics.tests.test_classification.make_prediction",
    "sklearn.utils.testing.assert_raises",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_precision_refcall_f1_score_multilabel_unordered_labels": {
  "data": {
   "lineno": 635,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.metrics.precision_recall_fscore_support",
    "sklearn.metrics.tests.test_classification.pytest",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_precision_warnings": {
  "data": {
   "lineno": 1327,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.metrics.precision_score",
    "sklearn.metrics.tests.test_classification.warnings",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_no_warnings",
    "sklearn.utils.testing.clean_warning_registry",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_prf_average_binary_data_non_binary": {
  "data": {
   "lineno": 1365,
   "symbols_in_volume": [
    "ValueError",
    "functools.partial",
    "numpy.array",
    "sklearn.metrics.f1_score",
    "sklearn.metrics.fbeta_score",
    "sklearn.metrics.precision_score",
    "sklearn.metrics.recall_score",
    "sklearn.utils.testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_prf_warnings": {
  "data": {
   "lineno": 1265,
   "symbols_in_volume": [
    "my_assert",
    "numpy.array",
    "sklearn.exceptions.UndefinedMetricWarning",
    "sklearn.metrics.precision_recall_fscore_support",
    "sklearn.utils.testing.assert_warns_message"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_recall_warnings": {
  "data": {
   "lineno": 1311,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.metrics.recall_score",
    "sklearn.metrics.tests.test_classification.warnings",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_no_warnings",
    "sklearn.utils.testing.clean_warning_registry",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_zero_precision_recall": {
  "data": {
   "lineno": 670,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.seterr",
    "sklearn.metrics.f1_score",
    "sklearn.metrics.precision_score",
    "sklearn.metrics.recall_score",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_classification.zero_one_loss": {
  "data": {
   "shadows": "sklearn.metrics.zero_one_loss"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_common": {
  "data": {
   "symbols_in_volume": [
    "dict",
    "functools.partial",
    "numpy.inf",
    "numpy.nan",
    "numpy.newaxis",
    "sklearn.metrics.accuracy_score",
    "sklearn.metrics.average_precision_score",
    "sklearn.metrics.balanced_accuracy_score",
    "sklearn.metrics.brier_score_loss",
    "sklearn.metrics.cohen_kappa_score",
    "sklearn.metrics.confusion_matrix",
    "sklearn.metrics.coverage_error",
    "sklearn.metrics.explained_variance_score",
    "sklearn.metrics.f1_score",
    "sklearn.metrics.fbeta_score",
    "sklearn.metrics.hamming_loss",
    "sklearn.metrics.hinge_loss",
    "sklearn.metrics.jaccard_similarity_score",
    "sklearn.metrics.label_ranking_average_precision_score",
    "sklearn.metrics.label_ranking_loss",
    "sklearn.metrics.log_loss",
    "sklearn.metrics.matthews_corrcoef",
    "sklearn.metrics.mean_absolute_error",
    "sklearn.metrics.mean_squared_error",
    "sklearn.metrics.median_absolute_error",
    "sklearn.metrics.precision_score",
    "sklearn.metrics.r2_score",
    "sklearn.metrics.recall_score",
    "sklearn.metrics.roc_auc_score",
    "sklearn.metrics.roc_curve",
    "sklearn.metrics.tests.test_common.ALL_METRICS",
    "sklearn.metrics.tests.test_common.CLASSIFICATION_METRICS",
    "sklearn.metrics.tests.test_common.CURVE_METRICS",
    "sklearn.metrics.tests.test_common.METRIC_UNDEFINED_BINARY",
    "sklearn.metrics.tests.test_common.METRIC_UNDEFINED_MULTICLASS",
    "sklearn.metrics.tests.test_common.REGRESSION_METRICS",
    "sklearn.metrics.tests.test_common.THRESHOLDED_METRICS",
    "sklearn.metrics.tests.test_common.precision_recall_curve_padded_thresholds",
    "sklearn.metrics.zero_one_loss"
   ]
  },
  "type": "module"
 },
 "sklearn.metrics.tests.test_common.ALL_METRICS": {
  "data": {
   "lineno": 221
  },
  "type": "constant"
 },
 "sklearn.metrics.tests.test_common.CLASSIFICATION_METRICS": {
  "data": {
   "lineno": 99
  },
  "type": "constant"
 },
 "sklearn.metrics.tests.test_common.CURVE_METRICS": {
  "data": {
   "lineno": 188
  },
  "type": "constant"
 },
 "sklearn.metrics.tests.test_common.LabelBinarizer": {
  "data": {
   "shadows": "sklearn.preprocessing.LabelBinarizer"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_common.METRICS_WITHOUT_SAMPLE_WEIGHT": {
  "data": {
   "lineno": 430
  },
  "type": "constant"
 },
 "sklearn.metrics.tests.test_common.METRICS_WITH_AVERAGING": {
  "data": {
   "lineno": 280
  },
  "type": "constant"
 },
 "sklearn.metrics.tests.test_common.METRICS_WITH_LABELS": {
  "data": {
   "lineno": 317
  },
  "type": "constant"
 },
 "sklearn.metrics.tests.test_common.METRICS_WITH_NORMALIZE_OPTION": {
  "data": {
   "lineno": 340
  },
  "type": "constant"
 },
 "sklearn.metrics.tests.test_common.METRICS_WITH_POS_LABEL": {
  "data": {
   "lineno": 290
  },
  "type": "constant"
 },
 "sklearn.metrics.tests.test_common.METRIC_UNDEFINED_BINARY": {
  "data": {
   "lineno": 237
  },
  "type": "constant"
 },
 "sklearn.metrics.tests.test_common.METRIC_UNDEFINED_BINARY_MULTICLASS": {
  "data": {
   "lineno": 276
  },
  "type": "constant"
 },
 "sklearn.metrics.tests.test_common.METRIC_UNDEFINED_MULTICLASS": {
  "data": {
   "lineno": 249
  },
  "type": "constant"
 },
 "sklearn.metrics.tests.test_common.MULTILABELS_METRICS": {
  "data": {
   "lineno": 362
  },
  "type": "constant"
 },
 "sklearn.metrics.tests.test_common.MULTIOUTPUT_METRICS": {
  "data": {
   "lineno": 382
  },
  "type": "constant"
 },
 "sklearn.metrics.tests.test_common.NOT_SYMMETRIC_METRICS": {
  "data": {
   "lineno": 409
  },
  "type": "constant"
 },
 "sklearn.metrics.tests.test_common.REGRESSION_METRICS": {
  "data": {
   "lineno": 91
  },
  "type": "constant"
 },
 "sklearn.metrics.tests.test_common.SYMMETRIC_METRICS": {
  "data": {
   "lineno": 389
  },
  "type": "constant"
 },
 "sklearn.metrics.tests.test_common.THRESHOLDED_METRICS": {
  "data": {
   "lineno": 193
  },
  "type": "constant"
 },
 "sklearn.metrics.tests.test_common.THRESHOLDED_METRICS_WITH_AVERAGING": {
  "data": {
   "lineno": 285
  },
  "type": "constant"
 },
 "sklearn.metrics.tests.test_common.THRESHOLDED_MULTILABEL_METRICS": {
  "data": {
   "lineno": 347
  },
  "type": "constant"
 },
 "sklearn.metrics.tests.test_common._average_binary_score": {
  "data": {
   "shadows": "sklearn.metrics.base._average_binary_score"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_common._check_averaging": {
  "data": {
   "lineno": 889,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "metric",
    "numpy.average",
    "numpy.mean",
    "numpy.sum",
    "range",
    "sklearn.utils.testing.assert_allclose",
    "sklearn.utils.testing.assert_raises",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_common._num_samples": {
  "data": {
   "shadows": "sklearn.utils.validation._num_samples"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_common.accuracy_score": {
  "data": {
   "shadows": "sklearn.metrics.accuracy_score"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_common.assert_allclose": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_allclose"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_common.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_common.assert_array_less": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_less"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_common.assert_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_common.assert_raise_message": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raise_message"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_common.assert_raises": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_common.average_precision_score": {
  "data": {
   "shadows": "sklearn.metrics.average_precision_score"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_common.balanced_accuracy_score": {
  "data": {
   "shadows": "sklearn.metrics.balanced_accuracy_score"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_common.brier_score_loss": {
  "data": {
   "shadows": "sklearn.metrics.brier_score_loss"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_common.chain": {
  "data": {
   "shadows": "itertools.chain"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_common.check_averaging": {
  "data": {
   "lineno": 931,
   "symbols_in_volume": [
    "ValueError",
    "metric",
    "sklearn.metrics.tests.test_common.ALL_METRICS",
    "sklearn.metrics.tests.test_common.METRICS_WITH_AVERAGING",
    "sklearn.metrics.tests.test_common.THRESHOLDED_METRICS_WITH_AVERAGING",
    "sklearn.metrics.tests.test_common._check_averaging",
    "sklearn.utils.multiclass.type_of_target"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_common.check_random_state": {
  "data": {
   "shadows": "sklearn.utils.validation.check_random_state"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_common.check_sample_weight_invariance": {
  "data": {
   "lineno": 1017,
   "symbols_in_volume": [
    "AssertionError",
    "ValueError",
    "len",
    "metric",
    "numpy.copy",
    "numpy.hstack",
    "numpy.ones",
    "numpy.random.RandomState",
    "numpy.repeat",
    "sklearn.utils.testing.assert_allclose",
    "sklearn.utils.testing.assert_raise_message",
    "sklearn.utils.testing.assert_raises",
    "sklearn.utils.testing.ignore_warnings",
    "sklearn.utils.validation._num_samples"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_common.check_single_sample": {
  "data": {
   "lineno": 707,
   "symbols_in_volume": [
    "itertools.product",
    "metric",
    "sklearn.metrics.tests.test_common.ALL_METRICS",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_common.check_single_sample_multioutput": {
  "data": {
   "lineno": 720,
   "symbols_in_volume": [
    "itertools.product",
    "metric",
    "numpy.array",
    "sklearn.metrics.tests.test_common.ALL_METRICS",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_common.cohen_kappa_score": {
  "data": {
   "shadows": "sklearn.metrics.cohen_kappa_score"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_common.confusion_matrix": {
  "data": {
   "shadows": "sklearn.metrics.confusion_matrix"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_common.coverage_error": {
  "data": {
   "shadows": "sklearn.metrics.coverage_error"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_common.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_common.explained_variance_score": {
  "data": {
   "shadows": "sklearn.metrics.explained_variance_score"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_common.f1_score": {
  "data": {
   "shadows": "sklearn.metrics.f1_score"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_common.fbeta_score": {
  "data": {
   "shadows": "sklearn.metrics.fbeta_score"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_common.hamming_loss": {
  "data": {
   "shadows": "sklearn.metrics.hamming_loss"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_common.hinge_loss": {
  "data": {
   "shadows": "sklearn.metrics.hinge_loss"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_common.ignore_warnings": {
  "data": {
   "shadows": "sklearn.utils.testing.ignore_warnings"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_common.invalids": {
  "data": {
   "lineno": 681
  },
  "type": "constant"
 },
 "sklearn.metrics.tests.test_common.jaccard_similarity_score": {
  "data": {
   "shadows": "sklearn.metrics.jaccard_similarity_score"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_common.label_ranking_average_precision_score": {
  "data": {
   "shadows": "sklearn.metrics.label_ranking_average_precision_score"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_common.label_ranking_loss": {
  "data": {
   "shadows": "sklearn.metrics.label_ranking_loss"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_common.log_loss": {
  "data": {
   "shadows": "sklearn.metrics.log_loss"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_common.make_multilabel_classification": {
  "data": {
   "shadows": "sklearn.datasets.make_multilabel_classification"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_common.matthews_corrcoef": {
  "data": {
   "shadows": "sklearn.metrics.matthews_corrcoef"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_common.mean_absolute_error": {
  "data": {
   "shadows": "sklearn.metrics.mean_absolute_error"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_common.mean_squared_error": {
  "data": {
   "shadows": "sklearn.metrics.mean_squared_error"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_common.median_absolute_error": {
  "data": {
   "shadows": "sklearn.metrics.median_absolute_error"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_common.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_common.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_common.precision_recall_curve": {
  "data": {
   "shadows": "sklearn.metrics.precision_recall_curve"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_common.precision_recall_curve_padded_thresholds": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "numpy.nan",
    "numpy.pad",
    "sklearn.metrics.precision_recall_curve"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_common.precision_score": {
  "data": {
   "shadows": "sklearn.metrics.precision_score"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_common.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_common.product": {
  "data": {
   "shadows": "itertools.product"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_common.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_common.r2_score": {
  "data": {
   "shadows": "sklearn.metrics.r2_score"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_common.recall_score": {
  "data": {
   "shadows": "sklearn.metrics.recall_score"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_common.roc_auc_score": {
  "data": {
   "shadows": "sklearn.metrics.roc_auc_score"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_common.roc_curve": {
  "data": {
   "shadows": "sklearn.metrics.roc_curve"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_common.shuffle": {
  "data": {
   "shadows": "sklearn.utils.shuffle"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_common.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_common.test_averaging_binary_multilabel_all_zeroes": {
  "data": {
   "lineno": 992,
   "symbols_in_volume": [
    "numpy.zeros",
    "sklearn.metrics.base._average_binary_score",
    "sklearn.metrics.precision_score",
    "sklearn.metrics.tests.test_common._check_averaging"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_common.test_averaging_multiclass": {
  "data": {
   "lineno": 947,
   "symbols_in_volume": [
    "sklearn.metrics.tests.test_common.METRICS_WITH_AVERAGING",
    "sklearn.metrics.tests.test_common.check_averaging",
    "sklearn.metrics.tests.test_common.pytest",
    "sklearn.preprocessing.LabelBinarizer",
    "sklearn.utils.validation.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_common.test_averaging_multilabel": {
  "data": {
   "lineno": 963,
   "symbols_in_volume": [
    "sklearn.datasets.make_multilabel_classification",
    "sklearn.metrics.tests.test_common.METRICS_WITH_AVERAGING",
    "sklearn.metrics.tests.test_common.THRESHOLDED_METRICS_WITH_AVERAGING",
    "sklearn.metrics.tests.test_common.check_averaging",
    "sklearn.metrics.tests.test_common.pytest",
    "sklearn.utils.validation.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_common.test_averaging_multilabel_all_ones": {
  "data": {
   "lineno": 1005,
   "symbols_in_volume": [
    "numpy.ones",
    "sklearn.metrics.tests.test_common.METRICS_WITH_AVERAGING",
    "sklearn.metrics.tests.test_common.check_averaging",
    "sklearn.metrics.tests.test_common.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_common.test_averaging_multilabel_all_zeroes": {
  "data": {
   "lineno": 980,
   "symbols_in_volume": [
    "numpy.zeros",
    "sklearn.metrics.tests.test_common.METRICS_WITH_AVERAGING",
    "sklearn.metrics.tests.test_common.check_averaging",
    "sklearn.metrics.tests.test_common.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_common.test_binary_sample_weight_invariance": {
  "data": {
   "lineno": 1110,
   "symbols_in_volume": [
    "metric",
    "set",
    "sklearn.metrics.tests.test_common.ALL_METRICS",
    "sklearn.metrics.tests.test_common.METRICS_WITHOUT_SAMPLE_WEIGHT",
    "sklearn.metrics.tests.test_common.METRIC_UNDEFINED_BINARY",
    "sklearn.metrics.tests.test_common.REGRESSION_METRICS",
    "sklearn.metrics.tests.test_common.THRESHOLDED_METRICS",
    "sklearn.metrics.tests.test_common.check_sample_weight_invariance",
    "sklearn.metrics.tests.test_common.pytest",
    "sklearn.utils.validation.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_common.test_classification_inf_nan_input": {
  "data": {
   "lineno": 697,
   "symbols_in_volume": [
    "ValueError",
    "metric",
    "sklearn.metrics.tests.test_common.CLASSIFICATION_METRICS",
    "sklearn.metrics.tests.test_common.invalids",
    "sklearn.metrics.tests.test_common.pytest",
    "sklearn.utils.testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_common.test_classification_invariance_string_vs_numbers_labels": {
  "data": {
   "lineno": 596,
   "symbols_in_volume": [
    "functools.partial",
    "metric",
    "metric_str",
    "numpy.array",
    "set",
    "sklearn.metrics.tests.test_common.CLASSIFICATION_METRICS",
    "sklearn.metrics.tests.test_common.METRICS_WITH_LABELS",
    "sklearn.metrics.tests.test_common.METRICS_WITH_POS_LABEL",
    "sklearn.metrics.tests.test_common.METRIC_UNDEFINED_BINARY_MULTICLASS",
    "sklearn.metrics.tests.test_common.pytest",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.ignore_warnings",
    "sklearn.utils.validation.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_common.test_format_invariance_with_1d_vectors": {
  "data": {
   "lineno": 520,
   "symbols_in_volume": [
    "ValueError",
    "list",
    "metric",
    "numpy.array",
    "numpy.reshape",
    "set",
    "sklearn.metrics.tests.test_common.ALL_METRICS",
    "sklearn.metrics.tests.test_common.METRIC_UNDEFINED_BINARY_MULTICLASS",
    "sklearn.metrics.tests.test_common.MULTILABELS_METRICS",
    "sklearn.metrics.tests.test_common.MULTIOUTPUT_METRICS",
    "sklearn.metrics.tests.test_common.THRESHOLDED_MULTILABEL_METRICS",
    "sklearn.metrics.tests.test_common.pytest",
    "sklearn.utils.testing.assert_allclose",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_raises",
    "sklearn.utils.testing.ignore_warnings",
    "sklearn.utils.validation.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_common.test_multiclass_sample_weight_invariance": {
  "data": {
   "lineno": 1128,
   "symbols_in_volume": [
    "metric",
    "set",
    "sklearn.metrics.tests.test_common.ALL_METRICS",
    "sklearn.metrics.tests.test_common.METRICS_WITHOUT_SAMPLE_WEIGHT",
    "sklearn.metrics.tests.test_common.METRIC_UNDEFINED_BINARY_MULTICLASS",
    "sklearn.metrics.tests.test_common.REGRESSION_METRICS",
    "sklearn.metrics.tests.test_common.THRESHOLDED_METRICS",
    "sklearn.metrics.tests.test_common.check_sample_weight_invariance",
    "sklearn.metrics.tests.test_common.pytest",
    "sklearn.utils.validation.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_common.test_multilabel_representation_invariance": {
  "data": {
   "lineno": 770,
   "symbols_in_volume": [
    "functools.partial",
    "isinstance",
    "metric",
    "metric.__module__",
    "metric.__name__",
    "numpy.vstack",
    "scipy.sparse.coo_matrix",
    "sklearn.datasets.make_multilabel_classification",
    "sklearn.metrics.tests.test_common.ALL_METRICS",
    "sklearn.metrics.tests.test_common.MULTILABELS_METRICS",
    "sklearn.utils.testing.assert_allclose",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_common.test_multilabel_sample_weight_invariance": {
  "data": {
   "lineno": 1147,
   "symbols_in_volume": [
    "metric",
    "numpy.vstack",
    "sklearn.datasets.make_multilabel_classification",
    "sklearn.metrics.tests.test_common.ALL_METRICS",
    "sklearn.metrics.tests.test_common.METRICS_WITHOUT_SAMPLE_WEIGHT",
    "sklearn.metrics.tests.test_common.MULTILABELS_METRICS",
    "sklearn.metrics.tests.test_common.MULTIOUTPUT_METRICS",
    "sklearn.metrics.tests.test_common.THRESHOLDED_METRICS",
    "sklearn.metrics.tests.test_common.THRESHOLDED_MULTILABEL_METRICS",
    "sklearn.metrics.tests.test_common.check_sample_weight_invariance",
    "sklearn.metrics.tests.test_common.pytest",
    "sklearn.utils.validation.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_common.test_multioutput_number_of_output_differ": {
  "data": {
   "lineno": 743,
   "symbols_in_volume": [
    "ValueError",
    "metric",
    "numpy.array",
    "sklearn.metrics.tests.test_common.ALL_METRICS",
    "sklearn.metrics.tests.test_common.MULTIOUTPUT_METRICS",
    "sklearn.metrics.tests.test_common.pytest",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_common.test_multioutput_regression_invariance_to_dimension_shuffling": {
  "data": {
   "lineno": 752,
   "symbols_in_volume": [
    "metric",
    "range",
    "sklearn.metrics.tests.test_common.ALL_METRICS",
    "sklearn.metrics.tests.test_common.MULTIOUTPUT_METRICS",
    "sklearn.metrics.tests.test_common.pytest",
    "sklearn.utils.testing.assert_allclose",
    "sklearn.utils.validation.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_common.test_no_averaging_labels": {
  "data": {
   "lineno": 1171,
   "symbols_in_volume": [
    "metric",
    "numpy.array",
    "numpy.unique",
    "sklearn.metrics.tests.test_common.ALL_METRICS",
    "sklearn.metrics.tests.test_common.METRICS_WITH_AVERAGING",
    "sklearn.metrics.tests.test_common.MULTILABELS_METRICS",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_common.test_normalize_option_binary_classification": {
  "data": {
   "lineno": 823,
   "symbols_in_volume": [
    "metrics",
    "sklearn.metrics.tests.test_common.ALL_METRICS",
    "sklearn.metrics.tests.test_common.METRICS_WITH_NORMALIZE_OPTION",
    "sklearn.metrics.tests.test_common.pytest",
    "sklearn.utils.testing.assert_allclose",
    "sklearn.utils.testing.assert_array_less",
    "sklearn.utils.validation.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_common.test_normalize_option_multiclass_classification": {
  "data": {
   "lineno": 840,
   "symbols_in_volume": [
    "metrics",
    "sklearn.metrics.tests.test_common.ALL_METRICS",
    "sklearn.metrics.tests.test_common.METRICS_WITH_NORMALIZE_OPTION",
    "sklearn.metrics.tests.test_common.pytest",
    "sklearn.utils.testing.assert_allclose",
    "sklearn.utils.testing.assert_array_less",
    "sklearn.utils.validation.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_common.test_normalize_option_multilabel_classification": {
  "data": {
   "lineno": 857,
   "symbols_in_volume": [
    "metrics",
    "sklearn.datasets.make_multilabel_classification",
    "sklearn.metrics.tests.test_common.ALL_METRICS",
    "sklearn.metrics.tests.test_common.METRICS_WITH_NORMALIZE_OPTION",
    "sklearn.utils.testing.assert_allclose",
    "sklearn.utils.testing.assert_array_less"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_common.test_raise_value_error_multilabel_sequences": {
  "data": {
   "lineno": 807,
   "symbols_in_volume": [
    "ValueError",
    "metric",
    "numpy.array",
    "sklearn.metrics.tests.test_common.ALL_METRICS",
    "sklearn.metrics.tests.test_common.MULTILABELS_METRICS",
    "sklearn.metrics.tests.test_common.pytest",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_common.test_regression_sample_weight_invariance": {
  "data": {
   "lineno": 1096,
   "symbols_in_volume": [
    "metric",
    "set",
    "sklearn.metrics.tests.test_common.ALL_METRICS",
    "sklearn.metrics.tests.test_common.METRICS_WITHOUT_SAMPLE_WEIGHT",
    "sklearn.metrics.tests.test_common.REGRESSION_METRICS",
    "sklearn.metrics.tests.test_common.check_sample_weight_invariance",
    "sklearn.metrics.tests.test_common.pytest",
    "sklearn.utils.validation.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_common.test_regression_thresholded_inf_nan_input": {
  "data": {
   "lineno": 686,
   "symbols_in_volume": [
    "ValueError",
    "itertools.chain",
    "metric",
    "sklearn.metrics.tests.test_common.REGRESSION_METRICS",
    "sklearn.metrics.tests.test_common.THRESHOLDED_METRICS",
    "sklearn.metrics.tests.test_common.invalids",
    "sklearn.metrics.tests.test_common.pytest",
    "sklearn.utils.testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_common.test_sample_order_invariance": {
  "data": {
   "lineno": 468,
   "symbols_in_volume": [
    "metric",
    "set",
    "sklearn.metrics.tests.test_common.ALL_METRICS",
    "sklearn.metrics.tests.test_common.METRIC_UNDEFINED_BINARY_MULTICLASS",
    "sklearn.metrics.tests.test_common.pytest",
    "sklearn.utils.shuffle",
    "sklearn.utils.testing.assert_allclose",
    "sklearn.utils.testing.ignore_warnings",
    "sklearn.utils.validation.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_common.test_sample_order_invariance_multilabel_and_multioutput": {
  "data": {
   "lineno": 484,
   "symbols_in_volume": [
    "metric",
    "sklearn.metrics.tests.test_common.ALL_METRICS",
    "sklearn.metrics.tests.test_common.MULTILABELS_METRICS",
    "sklearn.metrics.tests.test_common.MULTIOUTPUT_METRICS",
    "sklearn.metrics.tests.test_common.THRESHOLDED_MULTILABEL_METRICS",
    "sklearn.utils.shuffle",
    "sklearn.utils.testing.assert_allclose",
    "sklearn.utils.testing.ignore_warnings",
    "sklearn.utils.validation.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_common.test_single_sample": {
  "data": {
   "lineno": 727,
   "symbols_in_volume": [
    "set",
    "sklearn.metrics.tests.test_common.ALL_METRICS",
    "sklearn.metrics.tests.test_common.METRIC_UNDEFINED_BINARY_MULTICLASS",
    "sklearn.metrics.tests.test_common.THRESHOLDED_METRICS",
    "sklearn.metrics.tests.test_common.check_single_sample",
    "sklearn.metrics.tests.test_common.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_common.test_single_sample_multioutput": {
  "data": {
   "lineno": 738,
   "symbols_in_volume": [
    "sklearn.metrics.tests.test_common.MULTILABELS_METRICS",
    "sklearn.metrics.tests.test_common.MULTIOUTPUT_METRICS",
    "sklearn.metrics.tests.test_common.check_single_sample_multioutput",
    "sklearn.metrics.tests.test_common.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_common.test_symmetry": {
  "data": {
   "lineno": 435,
   "symbols_in_volume": [
    "AssertionError",
    "metric",
    "set",
    "sklearn.metrics.tests.test_common.ALL_METRICS",
    "sklearn.metrics.tests.test_common.METRIC_UNDEFINED_BINARY_MULTICLASS",
    "sklearn.metrics.tests.test_common.NOT_SYMMETRIC_METRICS",
    "sklearn.metrics.tests.test_common.SYMMETRIC_METRICS",
    "sklearn.metrics.tests.test_common.THRESHOLDED_METRICS",
    "sklearn.utils.testing.assert_allclose",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_raises",
    "sklearn.utils.testing.ignore_warnings",
    "sklearn.utils.validation.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_common.test_thresholded_invariance_string_vs_numbers_labels": {
  "data": {
   "lineno": 646,
   "symbols_in_volume": [
    "ValueError",
    "functools.partial",
    "metric",
    "metric_str",
    "numpy.array",
    "sklearn.metrics.tests.test_common.METRICS_WITH_POS_LABEL",
    "sklearn.metrics.tests.test_common.METRIC_UNDEFINED_BINARY",
    "sklearn.metrics.tests.test_common.THRESHOLDED_METRICS",
    "sklearn.metrics.tests.test_common.pytest",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_raises",
    "sklearn.utils.testing.ignore_warnings",
    "sklearn.utils.validation.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_common.type_of_target": {
  "data": {
   "shadows": "sklearn.utils.multiclass.type_of_target"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_common.zero_one_loss": {
  "data": {
   "shadows": "sklearn.metrics.zero_one_loss"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_pairwise": {
  "data": {
   "symbols_in_volume": [
    "numpy.arange"
   ]
  },
  "type": "module"
 },
 "sklearn.metrics.tests.test_pairwise.DataConversionWarning": {
  "data": {
   "shadows": "sklearn.exceptions.DataConversionWarning"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_pairwise.GeneratorType": {
  "data": {
   "shadows": "types.GeneratorType"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_pairwise.PAIRED_DISTANCES": {
  "data": {
   "shadows": "sklearn.metrics.pairwise.PAIRED_DISTANCES"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_pairwise.PAIRWISE_BOOLEAN_FUNCTIONS": {
  "data": {
   "shadows": "sklearn.metrics.pairwise.PAIRWISE_BOOLEAN_FUNCTIONS"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_pairwise.PAIRWISE_DISTANCE_FUNCTIONS": {
  "data": {
   "shadows": "sklearn.metrics.pairwise.PAIRWISE_DISTANCE_FUNCTIONS"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_pairwise.PAIRWISE_KERNEL_FUNCTIONS": {
  "data": {
   "shadows": "sklearn.metrics.pairwise.PAIRWISE_KERNEL_FUNCTIONS"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_pairwise._reduce_func": {
  "data": {
   "lineno": 410
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise._wminkowski_kwds": {
  "data": {
   "lineno": 206
  },
  "type": "constant"
 },
 "sklearn.metrics.tests.test_pairwise.additive_chi2_kernel": {
  "data": {
   "shadows": "sklearn.metrics.pairwise.additive_chi2_kernel"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_pairwise.assert_allclose": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_allclose"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_pairwise.assert_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_pairwise.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_pairwise.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_pairwise.assert_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_pairwise.assert_greater": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_greater"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_pairwise.assert_raises": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_pairwise.assert_raises_regexp": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises_regexp"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_pairwise.assert_true": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_true"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_pairwise.assert_warns": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_warns"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_pairwise.assert_warns_message": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_warns_message"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_pairwise.callable_rbf_kernel": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "numpy.atleast_2d",
    "sklearn.metrics.pairwise.rbf_kernel"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise.check_paired_arrays": {
  "data": {
   "shadows": "sklearn.metrics.pairwise.check_paired_arrays"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_pairwise.check_pairwise_arrays": {
  "data": {
   "shadows": "sklearn.metrics.pairwise.check_pairwise_arrays"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_pairwise.check_pairwise_distances_chunked": {
  "data": {
   "lineno": 464,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "list",
    "max",
    "numpy.array",
    "numpy.vstack",
    "sklearn.metrics.pairwise.pairwise_distances",
    "sklearn.metrics.pairwise.pairwise_distances_chunked",
    "sklearn.utils.testing.assert_array_almost_equal",
    "types.GeneratorType"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise.check_pairwise_parallel": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "func",
    "make_data",
    "numpy.array",
    "numpy.random.RandomState",
    "scipy.sparse.csr_matrix",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_raises",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise.chi2_kernel": {
  "data": {
   "shadows": "sklearn.metrics.pairwise.chi2_kernel"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_pairwise.cityblock": {
  "data": {
   "shadows": "scipy.spatial.distance.cityblock"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_pairwise.cosine": {
  "data": {
   "shadows": "scipy.spatial.distance.cosine"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_pairwise.cosine_distances": {
  "data": {
   "shadows": "sklearn.metrics.pairwise.cosine_distances"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_pairwise.cosine_similarity": {
  "data": {
   "shadows": "sklearn.metrics.pairwise.cosine_similarity"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_pairwise.csr_matrix": {
  "data": {
   "shadows": "scipy.sparse.csr_matrix"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_pairwise.dok_matrix": {
  "data": {
   "shadows": "scipy.sparse.dok_matrix"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_pairwise.euclidean_distances": {
  "data": {
   "shadows": "sklearn.metrics.pairwise.euclidean_distances"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_pairwise.ignore_warnings": {
  "data": {
   "shadows": "sklearn.utils.testing.ignore_warnings"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_pairwise.issparse": {
  "data": {
   "shadows": "scipy.sparse.issparse"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_pairwise.iteritems": {
  "data": {
   "shadows": "sklearn.externals.six.iteritems"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_pairwise.laplacian_kernel": {
  "data": {
   "shadows": "sklearn.metrics.pairwise.laplacian_kernel"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_pairwise.linalg": {
  "data": {
   "shadows": "numpy.linalg"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_pairwise.linear_kernel": {
  "data": {
   "shadows": "sklearn.metrics.pairwise.linear_kernel"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_pairwise.manhattan_distances": {
  "data": {
   "shadows": "sklearn.metrics.pairwise.manhattan_distances"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_pairwise.minkowski": {
  "data": {
   "shadows": "scipy.spatial.distance.minkowski"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_pairwise.normalize": {
  "data": {
   "shadows": "sklearn.preprocessing.normalize"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_pairwise.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_pairwise.paired_distances": {
  "data": {
   "shadows": "sklearn.metrics.pairwise.paired_distances"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_pairwise.paired_euclidean_distances": {
  "data": {
   "shadows": "sklearn.metrics.pairwise.paired_euclidean_distances"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_pairwise.paired_manhattan_distances": {
  "data": {
   "shadows": "sklearn.metrics.pairwise.paired_manhattan_distances"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_pairwise.pairwise_distances": {
  "data": {
   "shadows": "sklearn.metrics.pairwise.pairwise_distances"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_pairwise.pairwise_distances_argmin": {
  "data": {
   "shadows": "sklearn.metrics.pairwise.pairwise_distances_argmin"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_pairwise.pairwise_distances_argmin_min": {
  "data": {
   "shadows": "sklearn.metrics.pairwise.pairwise_distances_argmin_min"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_pairwise.pairwise_distances_chunked": {
  "data": {
   "shadows": "sklearn.metrics.pairwise.pairwise_distances_chunked"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_pairwise.pairwise_kernels": {
  "data": {
   "shadows": "sklearn.metrics.pairwise.pairwise_kernels"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_pairwise.polynomial_kernel": {
  "data": {
   "shadows": "sklearn.metrics.pairwise.polynomial_kernel"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_pairwise.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_pairwise.rbf_kernel": {
  "data": {
   "shadows": "sklearn.metrics.pairwise.rbf_kernel"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_pairwise.sigmoid_kernel": {
  "data": {
   "shadows": "sklearn.metrics.pairwise.sigmoid_kernel"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_pairwise.test_check_XB_returned": {
  "data": {
   "lineno": 770,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.resize",
    "sklearn.metrics.pairwise.check_paired_arrays",
    "sklearn.metrics.pairwise.check_pairwise_arrays",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise.test_check_dense_matrices": {
  "data": {
   "lineno": 761,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.resize",
    "sklearn.metrics.pairwise.check_pairwise_arrays",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise.test_check_different_dimensions": {
  "data": {
   "lineno": 786,
   "symbols_in_volume": [
    "ValueError",
    "numpy.arange",
    "numpy.resize",
    "sklearn.metrics.pairwise.check_paired_arrays",
    "sklearn.metrics.pairwise.check_pairwise_arrays",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise.test_check_invalid_dimensions": {
  "data": {
   "lineno": 796,
   "symbols_in_volume": [
    "ValueError",
    "numpy.arange",
    "sklearn.metrics.pairwise.check_pairwise_arrays",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise.test_check_preserve_type": {
  "data": {
   "lineno": 853,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.float",
    "numpy.float32",
    "numpy.resize",
    "sklearn.metrics.pairwise.check_pairwise_arrays",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise.test_check_sparse_arrays": {
  "data": {
   "lineno": 808,
   "symbols_in_volume": [
    "abs",
    "numpy.random.RandomState",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.issparse",
    "sklearn.metrics.pairwise.check_pairwise_arrays",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise.test_check_tuple_input": {
  "data": {
   "lineno": 841,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.metrics.pairwise.check_pairwise_arrays",
    "sklearn.metrics.tests.test_pairwise.tuplify",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise.test_chi_square_kernel": {
  "data": {
   "lineno": 608,
   "symbols_in_volume": [
    "ValueError",
    "enumerate",
    "numpy.all",
    "numpy.diag",
    "numpy.exp",
    "numpy.float",
    "numpy.float32",
    "numpy.int32",
    "numpy.isfinite",
    "numpy.random.RandomState",
    "numpy.sum",
    "scipy.sparse.csr_matrix",
    "sklearn.metrics.pairwise.additive_chi2_kernel",
    "sklearn.metrics.pairwise.chi2_kernel",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_greater",
    "sklearn.utils.testing.assert_raises",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise.test_cosine_distances": {
  "data": {
   "lineno": 560,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.all",
    "numpy.diag_indices_from",
    "numpy.random.RandomState",
    "numpy.vstack",
    "sklearn.metrics.pairwise.cosine_distances",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise.test_cosine_similarity": {
  "data": {
   "lineno": 740,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "scipy.sparse.csr_matrix",
    "sklearn.metrics.pairwise.pairwise_kernels",
    "sklearn.preprocessing.normalize",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise.test_euclidean_distances": {
  "data": {
   "lineno": 523,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.max",
    "numpy.random.RandomState",
    "numpy.zeros_like",
    "scipy.sparse.csr_matrix",
    "sklearn.metrics.pairwise.euclidean_distances",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_greater"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise.test_kernel_sparse": {
  "data": {
   "lineno": 675,
   "symbols_in_volume": [
    "kernel",
    "numpy.random.RandomState",
    "scipy.sparse.csr_matrix",
    "sklearn.metrics.pairwise.cosine_similarity",
    "sklearn.metrics.pairwise.laplacian_kernel",
    "sklearn.metrics.pairwise.linear_kernel",
    "sklearn.metrics.pairwise.polynomial_kernel",
    "sklearn.metrics.pairwise.rbf_kernel",
    "sklearn.metrics.pairwise.sigmoid_kernel",
    "sklearn.metrics.tests.test_pairwise.pytest",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise.test_kernel_symmetry": {
  "data": {
   "lineno": 663,
   "symbols_in_volume": [
    "kernel",
    "numpy.random.RandomState",
    "sklearn.metrics.pairwise.cosine_similarity",
    "sklearn.metrics.pairwise.laplacian_kernel",
    "sklearn.metrics.pairwise.linear_kernel",
    "sklearn.metrics.pairwise.polynomial_kernel",
    "sklearn.metrics.pairwise.rbf_kernel",
    "sklearn.metrics.pairwise.sigmoid_kernel",
    "sklearn.metrics.tests.test_pairwise.pytest",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise.test_laplacian_kernel": {
  "data": {
   "lineno": 704,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.diag",
    "numpy.ones",
    "numpy.random.RandomState",
    "sklearn.metrics.pairwise.laplacian_kernel",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise.test_linear_kernel": {
  "data": {
   "lineno": 688,
   "symbols_in_volume": [
    "numpy.linalg.norm",
    "numpy.random.RandomState",
    "sklearn.metrics.pairwise.linear_kernel",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise.test_paired_distances": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "func",
    "numpy.diag",
    "numpy.random.RandomState",
    "scipy.sparse.csr_matrix",
    "sklearn.externals.six.iteritems",
    "sklearn.metrics.pairwise.PAIRED_DISTANCES",
    "sklearn.metrics.pairwise.PAIRWISE_DISTANCE_FUNCTIONS",
    "sklearn.metrics.pairwise.paired_distances",
    "sklearn.metrics.tests.test_pairwise.pytest",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise.test_paired_distances_callable": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": [
    "ValueError",
    "numpy.abs",
    "numpy.random.RandomState",
    "sklearn.metrics.pairwise.paired_distances",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise.test_paired_euclidean_distances": {
  "data": {
   "lineno": 592,
   "symbols_in_volume": [
    "sklearn.metrics.pairwise.paired_euclidean_distances",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise.test_paired_manhattan_distances": {
  "data": {
   "lineno": 600,
   "symbols_in_volume": [
    "sklearn.metrics.pairwise.paired_manhattan_distances",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise.test_pairwise_boolean_distance": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "numpy.isnan",
    "numpy.random.RandomState",
    "numpy.sum",
    "sklearn.exceptions.DataConversionWarning",
    "sklearn.metrics.pairwise.PAIRWISE_BOOLEAN_FUNCTIONS",
    "sklearn.metrics.pairwise.pairwise_distances",
    "sklearn.metrics.tests.test_pairwise.pytest",
    "sklearn.utils.testing.assert_true",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise.test_pairwise_callable_nonstrict_metric": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "sklearn.metrics.pairwise.pairwise_distances",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise.test_pairwise_distances": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "DeprecationWarning",
    "TypeError",
    "ValueError",
    "numpy.random.RandomState",
    "scipy.sparse.csr_matrix",
    "scipy.spatial.distance.cityblock",
    "scipy.spatial.distance.cosine",
    "scipy.spatial.distance.minkowski",
    "sklearn.metrics.pairwise.cosine_distances",
    "sklearn.metrics.pairwise.euclidean_distances",
    "sklearn.metrics.pairwise.manhattan_distances",
    "sklearn.metrics.pairwise.pairwise_distances",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_raises",
    "sklearn.utils.testing.assert_warns",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise.test_pairwise_distances_argmin_min": {
  "data": {
   "lineno": 343,
   "symbols_in_volume": [
    "DeprecationWarning",
    "len",
    "numpy.float32",
    "numpy.ndarray",
    "numpy.random.RandomState",
    "numpy.testing.assert_almost_equal",
    "range",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.dok_matrix",
    "scipy.spatial.distance.minkowski",
    "sklearn.metrics.pairwise.pairwise_distances",
    "sklearn.metrics.pairwise.pairwise_distances_argmin",
    "sklearn.metrics.pairwise.pairwise_distances_argmin_min",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_warns_message",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise.test_pairwise_distances_chunked": {
  "data": {
   "lineno": 481,
   "symbols_in_volume": [
    "StopIteration",
    "ValueError",
    "isinstance",
    "next",
    "numpy.random.RandomState",
    "range",
    "sklearn.metrics.pairwise.pairwise_distances",
    "sklearn.metrics.pairwise.pairwise_distances_chunked",
    "sklearn.metrics.tests.test_pairwise.check_pairwise_distances_chunked",
    "sklearn.utils.testing.assert_raises",
    "sklearn.utils.testing.ignore_warnings",
    "types.GeneratorType"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise.test_pairwise_distances_chunked_reduce": {
  "data": {
   "lineno": 414,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "list",
    "numpy.random.RandomState",
    "numpy.vstack",
    "sklearn.metrics.pairwise.pairwise_distances",
    "sklearn.metrics.pairwise.pairwise_distances_chunked",
    "sklearn.metrics.tests.test_pairwise._reduce_func",
    "sklearn.utils.testing.assert_allclose",
    "types.GeneratorType"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise.test_pairwise_distances_chunked_reduce_invalid": {
  "data": {
   "lineno": 442,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "next",
    "numpy.arange",
    "numpy.concatenate",
    "sklearn.metrics.pairwise.pairwise_distances_chunked",
    "sklearn.metrics.tests.test_pairwise.pytest",
    "sklearn.utils.testing.assert_raises_regexp"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise.test_pairwise_distances_chunked_reduce_valid": {
  "data": {
   "lineno": 428,
   "symbols_in_volume": [
    "list",
    "next",
    "numpy.arange",
    "numpy.array",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.dok_matrix",
    "sklearn.metrics.pairwise.pairwise_distances_chunked",
    "sklearn.metrics.tests.test_pairwise.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise.test_pairwise_kernels": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "ValueError",
    "function",
    "numpy.random.RandomState",
    "scipy.sparse.csr_matrix",
    "sklearn.metrics.pairwise.PAIRWISE_KERNEL_FUNCTIONS",
    "sklearn.metrics.pairwise.pairwise_kernels",
    "sklearn.metrics.tests.test_pairwise.pytest",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_raises",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise.test_pairwise_kernels_callable": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.metrics.pairwise.pairwise_kernels",
    "sklearn.metrics.pairwise.rbf_kernel",
    "sklearn.metrics.tests.test_pairwise.callable_rbf_kernel",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise.test_pairwise_kernels_filter_param": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "TypeError",
    "numpy.random.RandomState",
    "sklearn.metrics.pairwise.pairwise_kernels",
    "sklearn.metrics.pairwise.rbf_kernel",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise.test_pairwise_parallel": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "func",
    "scipy.spatial.distance.wminkowski",
    "sklearn.metrics.pairwise.pairwise_distances",
    "sklearn.metrics.pairwise.pairwise_kernels",
    "sklearn.metrics.tests.test_pairwise._wminkowski_kwds",
    "sklearn.metrics.tests.test_pairwise.callable_rbf_kernel",
    "sklearn.metrics.tests.test_pairwise.check_pairwise_parallel",
    "sklearn.metrics.tests.test_pairwise.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise.test_pairwise_precomputed": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "ValueError",
    "func",
    "isinstance",
    "numpy.array",
    "numpy.ndarray",
    "numpy.zeros",
    "sklearn.metrics.pairwise.pairwise_distances",
    "sklearn.metrics.pairwise.pairwise_kernels",
    "sklearn.metrics.tests.test_pairwise.pytest",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_raises_regexp",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise.test_pairwise_similarity_sparse_output": {
  "data": {
   "lineno": 716,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "pairwise_func",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.issparse",
    "sklearn.metrics.pairwise.cosine_similarity",
    "sklearn.metrics.pairwise.linear_kernel",
    "sklearn.metrics.pairwise.pairwise_kernels",
    "sklearn.metrics.tests.test_pairwise.pytest",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise.test_rbf_kernel": {
  "data": {
   "lineno": 696,
   "symbols_in_volume": [
    "numpy.ones",
    "numpy.random.RandomState",
    "sklearn.metrics.pairwise.rbf_kernel",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise.tuplify": {
  "data": {
   "lineno": 830,
   "symbols_in_volume": [
    "len",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise.wminkowski": {
  "data": {
   "shadows": "scipy.spatial.distance.wminkowski"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_ranking": {
  "data": {},
  "type": "module"
 },
 "sklearn.metrics.tests.test_ranking.UndefinedMetricWarning": {
  "data": {
   "shadows": "sklearn.exceptions.UndefinedMetricWarning"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_ranking._auc": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "float",
    "len",
    "numpy.sum",
    "numpy.unique"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking._average_precision": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "len",
    "numpy.argsort",
    "numpy.sum",
    "numpy.unique",
    "range"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking._average_precision_slow": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "len",
    "list",
    "range",
    "reversed",
    "sklearn.metrics.precision_recall_curve"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking._my_lrap": {
  "data": {
   "lineno": 858,
   "symbols_in_volume": [
    "numpy.bincount",
    "numpy.empty",
    "numpy.unique",
    "range",
    "sklearn.utils.validation.check_array",
    "sklearn.utils.validation.check_consistent_length",
    "sum"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking._partial_roc_auc_score": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "_partial_roc",
    "sklearn.metrics.auc"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking._partial_roc_auc_score._partial_roc": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "numpy.append",
    "numpy.argmax",
    "numpy.interp",
    "sklearn.metrics.roc_curve"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking._test_precision_recall_curve": {
  "data": {
   "lineno": 543,
   "symbols_in_volume": [
    "numpy.zeros_like",
    "sklearn.metrics.average_precision_score",
    "sklearn.metrics.precision_recall_curve",
    "sklearn.metrics.tests.test_ranking._average_precision",
    "sklearn.metrics.tests.test_ranking._average_precision_slow",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.assert_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_ranking.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_ranking.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_ranking.assert_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_ranking.assert_raise_message": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raise_message"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_ranking.assert_raises": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_ranking.assert_warns": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_warns"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_ranking.assert_warns_message": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_warns_message"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_ranking.auc": {
  "data": {
   "shadows": "sklearn.metrics.auc"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_ranking.average_precision_score": {
  "data": {
   "shadows": "sklearn.metrics.average_precision_score"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_ranking.check_alternative_lrap_implementation": {
  "data": {
   "lineno": 896,
   "symbols_in_volume": [
    "hasattr",
    "sklearn.datasets.make_multilabel_classification",
    "sklearn.metrics.label_ranking_average_precision_score",
    "sklearn.metrics.tests.test_ranking._my_lrap",
    "sklearn.random_projection.sparse_random_matrix",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.validation.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.check_array": {
  "data": {
   "shadows": "sklearn.utils.validation.check_array"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_ranking.check_consistent_length": {
  "data": {
   "shadows": "sklearn.utils.validation.check_consistent_length"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_ranking.check_lrap_error_raised": {
  "data": {
   "lineno": 800,
   "symbols_in_volume": [
    "ValueError",
    "lrap_score",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.check_lrap_only_ties": {
  "data": {
   "lineno": 818,
   "symbols_in_volume": [
    "lrap_score",
    "numpy.ones",
    "numpy.zeros",
    "range",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.check_lrap_toy": {
  "data": {
   "lineno": 722,
   "symbols_in_volume": [
    "lrap_score",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.check_lrap_without_tie_and_increasing_score": {
  "data": {
   "lineno": 834,
   "symbols_in_volume": [
    "lrap_score",
    "numpy.arange",
    "numpy.zeros",
    "range",
    "sklearn.utils.testing.assert_almost_equal",
    "sum"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.check_random_state": {
  "data": {
   "shadows": "sklearn.utils.validation.check_random_state"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_ranking.check_zero_or_all_relevant_labels": {
  "data": {
   "lineno": 778,
   "symbols_in_volume": [
    "lrap_score",
    "numpy.ones",
    "numpy.zeros",
    "numpy.zeros_like",
    "range",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.validation.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.clean_warning_registry": {
  "data": {
   "shadows": "sklearn.utils.testing.clean_warning_registry"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_ranking.coverage_error": {
  "data": {
   "shadows": "sklearn.metrics.coverage_error"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_ranking.csr_matrix": {
  "data": {
   "shadows": "scipy.sparse.csr_matrix"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_ranking.datasets": {
  "data": {
   "shadows": "sklearn.datasets"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_ranking.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_ranking.label_ranking_average_precision_score": {
  "data": {
   "shadows": "sklearn.metrics.label_ranking_average_precision_score"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_ranking.label_ranking_loss": {
  "data": {
   "shadows": "sklearn.metrics.label_ranking_loss"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_ranking.make_multilabel_classification": {
  "data": {
   "shadows": "sklearn.datasets.make_multilabel_classification"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_ranking.make_prediction": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "int",
    "numpy.arange",
    "numpy.c_",
    "numpy.random.RandomState",
    "sklearn.datasets.load_iris",
    "sklearn.svm.SVC",
    "sklearn.utils.validation.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_ranking.precision_recall_curve": {
  "data": {
   "shadows": "sklearn.metrics.precision_recall_curve"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_ranking.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_ranking.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_ranking.roc_auc_score": {
  "data": {
   "shadows": "sklearn.metrics.roc_auc_score"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_ranking.roc_curve": {
  "data": {
   "shadows": "sklearn.metrics.roc_curve"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_ranking.sparse_random_matrix": {
  "data": {
   "shadows": "sklearn.random_projection.sparse_random_matrix"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_ranking.svm": {
  "data": {
   "shadows": "sklearn.svm"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_ranking.test_alternative_lrap_implementation": {
  "data": {
   "lineno": 940,
   "symbols_in_volume": [
    "range",
    "sklearn.metrics.label_ranking_average_precision_score",
    "sklearn.metrics.tests.test_ranking.check_alternative_lrap_implementation",
    "sklearn.metrics.tests.test_ranking.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.test_auc": {
  "data": {
   "lineno": 412,
   "symbols_in_volume": [
    "sklearn.metrics.auc",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.test_auc_duplicate_values": {
  "data": {
   "lineno": 431,
   "symbols_in_volume": [
    "sklearn.metrics.auc",
    "sklearn.metrics.tests.test_ranking.pytest",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.test_auc_errors": {
  "data": {
   "lineno": 450,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "sklearn.metrics.auc",
    "sklearn.utils.testing.assert_raise_message",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.test_auc_score_non_binary_class": {
  "data": {
   "lineno": 474,
   "symbols_in_volume": [
    "ValueError",
    "numpy.full",
    "numpy.ones",
    "numpy.zeros",
    "sklearn.metrics.roc_auc_score",
    "sklearn.metrics.tests.test_ranking.warnings",
    "sklearn.utils.testing.assert_raise_message",
    "sklearn.utils.testing.clean_warning_registry",
    "sklearn.utils.validation.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.test_average_precision_constant_values": {
  "data": {
   "lineno": 671,
   "symbols_in_volume": [
    "int",
    "numpy.ones",
    "numpy.zeros",
    "sklearn.metrics.average_precision_score",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.test_average_precision_score_pos_label_multilabel_indicator": {
  "data": {
   "lineno": 685,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "sklearn.metrics.average_precision_score",
    "sklearn.utils.testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.test_binary_clf_curve": {
  "data": {
   "lineno": 515,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.metrics.precision_recall_curve",
    "sklearn.utils.testing.assert_raise_message",
    "sklearn.utils.validation.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.test_coverage_error": {
  "data": {
   "lineno": 950,
   "symbols_in_volume": [
    "sklearn.metrics.coverage_error",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.test_coverage_tie_handling": {
  "data": {
   "lineno": 998,
   "symbols_in_volume": [
    "sklearn.metrics.coverage_error",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.test_deprecated_auc_reorder": {
  "data": {
   "lineno": 465,
   "symbols_in_volume": [
    "DeprecationWarning",
    "sklearn.metrics.auc",
    "sklearn.utils.testing.assert_warns_message"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.test_label_ranking_avp": {
  "data": {
   "lineno": 923,
   "symbols_in_volume": [
    "check",
    "sklearn.metrics.label_ranking_average_precision_score",
    "sklearn.metrics.tests.test_ranking._my_lrap",
    "sklearn.metrics.tests.test_ranking.check_lrap_only_ties",
    "sklearn.metrics.tests.test_ranking.check_lrap_toy",
    "sklearn.metrics.tests.test_ranking.check_lrap_without_tie_and_increasing_score",
    "sklearn.metrics.tests.test_ranking.check_zero_or_all_relevant_labels",
    "sklearn.metrics.tests.test_ranking.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.test_label_ranking_loss": {
  "data": {
   "lineno": 1014,
   "symbols_in_volume": [
    "numpy.array",
    "scipy.sparse.csr_matrix",
    "sklearn.metrics.label_ranking_loss",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.test_lrap_error_raised": {
  "data": {
   "lineno": 936,
   "symbols_in_volume": [
    "sklearn.metrics.label_ranking_average_precision_score",
    "sklearn.metrics.tests.test_ranking.check_lrap_error_raised"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.test_partial_roc_auc_score": {
  "data": {
   "lineno": 1094,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "numpy.linspace",
    "sklearn.metrics.roc_auc_score",
    "sklearn.metrics.tests.test_ranking._partial_roc_auc_score",
    "sklearn.metrics.tests.test_ranking.make_prediction",
    "sklearn.metrics.tests.test_ranking.pytest",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.test_precision_recall_curve": {
  "data": {
   "lineno": 523,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.where",
    "sklearn.metrics.precision_recall_curve",
    "sklearn.metrics.tests.test_ranking._test_precision_recall_curve",
    "sklearn.metrics.tests.test_ranking.make_prediction",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.test_precision_recall_curve_errors": {
  "data": {
   "lineno": 561,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.metrics.precision_recall_curve",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.test_precision_recall_curve_toydata": {
  "data": {
   "lineno": 567,
   "symbols_in_volume": [
    "Exception",
    "numpy.array",
    "numpy.errstate",
    "sklearn.metrics.average_precision_score",
    "sklearn.metrics.precision_recall_curve",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.test_ranking_appropriate_input_shape": {
  "data": {
   "lineno": 1067,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.metrics.label_ranking_loss",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.test_ranking_loss_ties_handling": {
  "data": {
   "lineno": 1080,
   "symbols_in_volume": [
    "sklearn.metrics.label_ranking_loss",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.test_roc_curve": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "sklearn.metrics.auc",
    "sklearn.metrics.roc_auc_score",
    "sklearn.metrics.roc_curve",
    "sklearn.metrics.tests.test_ranking._auc",
    "sklearn.metrics.tests.test_ranking.make_prediction",
    "sklearn.metrics.tests.test_ranking.pytest",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.test_roc_curve_confidence": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "sklearn.metrics.auc",
    "sklearn.metrics.roc_curve",
    "sklearn.metrics.tests.test_ranking.make_prediction",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.test_roc_curve_drop_intermediate": {
  "data": {
   "lineno": 383,
   "symbols_in_volume": [
    "sklearn.metrics.roc_curve",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.test_roc_curve_end_points": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.random.RandomState",
    "sklearn.metrics.roc_curve",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.test_roc_curve_fpr_tpr_increasing": {
  "data": {
   "lineno": 400,
   "symbols_in_volume": [
    "numpy.diff",
    "numpy.repeat",
    "sklearn.metrics.roc_curve",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.test_roc_curve_hard": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "numpy.ones",
    "numpy.zeros",
    "sklearn.metrics.auc",
    "sklearn.metrics.roc_curve",
    "sklearn.metrics.tests.test_ranking.make_prediction",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.test_roc_curve_multi": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.metrics.roc_curve",
    "sklearn.metrics.tests.test_ranking.make_prediction",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.test_roc_curve_one_label": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "len",
    "numpy.full",
    "numpy.nan",
    "sklearn.exceptions.UndefinedMetricWarning",
    "sklearn.metrics.roc_curve",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_warns"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.test_roc_curve_toydata": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "numpy.nan",
    "sklearn.exceptions.UndefinedMetricWarning",
    "sklearn.metrics.roc_auc_score",
    "sklearn.metrics.roc_curve",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_raises",
    "sklearn.utils.testing.assert_warns"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.test_roc_returns_consistency": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "numpy.sum",
    "sklearn.metrics.roc_curve",
    "sklearn.metrics.tests.test_ranking.make_prediction",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.test_score_scale_invariance": {
  "data": {
   "lineno": 697,
   "symbols_in_volume": [
    "sklearn.metrics.average_precision_score",
    "sklearn.metrics.roc_auc_score",
    "sklearn.metrics.tests.test_ranking.make_prediction",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_regression": {
  "data": {},
  "type": "module"
 },
 "sklearn.metrics.tests.test_regression._check_reg_targets": {
  "data": {
   "shadows": "sklearn.metrics.regression._check_reg_targets"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_regression.assert_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_regression.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_regression.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_regression.assert_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_regression.assert_raises": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_regression.assert_raises_regex": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises_regex"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_regression.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_regression.explained_variance_score": {
  "data": {
   "shadows": "sklearn.metrics.explained_variance_score"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_regression.mean_absolute_error": {
  "data": {
   "shadows": "sklearn.metrics.mean_absolute_error"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_regression.mean_squared_error": {
  "data": {
   "shadows": "sklearn.metrics.mean_squared_error"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_regression.mean_squared_log_error": {
  "data": {
   "shadows": "sklearn.metrics.mean_squared_log_error"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_regression.median_absolute_error": {
  "data": {
   "shadows": "sklearn.metrics.median_absolute_error"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_regression.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_regression.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_regression.product": {
  "data": {
   "shadows": "itertools.product"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_regression.r2_score": {
  "data": {
   "shadows": "sklearn.metrics.r2_score"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_regression.test__check_reg_targets": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "ValueError",
    "itertools.product",
    "numpy.reshape",
    "sklearn.metrics.regression._check_reg_targets",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_regression.test__check_reg_targets_exception": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.metrics.regression._check_reg_targets",
    "sklearn.utils.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_regression.test_multioutput_regression": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.metrics.mean_absolute_error",
    "sklearn.metrics.mean_squared_error",
    "sklearn.metrics.mean_squared_log_error",
    "sklearn.metrics.r2_score",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_regression.test_regression_custom_weights": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.log",
    "sklearn.metrics.explained_variance_score",
    "sklearn.metrics.mean_absolute_error",
    "sklearn.metrics.mean_squared_error",
    "sklearn.metrics.mean_squared_log_error",
    "sklearn.metrics.r2_score",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_regression.test_regression_metrics": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.log",
    "sklearn.metrics.explained_variance_score",
    "sklearn.metrics.mean_absolute_error",
    "sklearn.metrics.mean_squared_error",
    "sklearn.metrics.mean_squared_log_error",
    "sklearn.metrics.median_absolute_error",
    "sklearn.metrics.r2_score",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_regression.test_regression_metrics_at_limits": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.metrics.explained_variance_score",
    "sklearn.metrics.mean_absolute_error",
    "sklearn.metrics.mean_squared_error",
    "sklearn.metrics.mean_squared_log_error",
    "sklearn.metrics.median_absolute_error",
    "sklearn.metrics.r2_score",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_regression.test_regression_multioutput_array": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.log",
    "numpy.mean",
    "sklearn.metrics.explained_variance_score",
    "sklearn.metrics.mean_absolute_error",
    "sklearn.metrics.mean_squared_error",
    "sklearn.metrics.mean_squared_log_error",
    "sklearn.metrics.r2_score",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_score_objects": {
  "data": {},
  "type": "module"
 },
 "sklearn.metrics.tests.test_score_objects.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_score_objects.CLF_SCORERS": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "sklearn.metrics.tests.test_score_objects.CLUSTER_SCORERS": {
  "data": {
   "lineno": 60
  },
  "type": "constant"
 },
 "sklearn.metrics.tests.test_score_objects.DecisionTreeClassifier": {
  "data": {
   "shadows": "sklearn.tree.DecisionTreeClassifier"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_score_objects.DecisionTreeRegressor": {
  "data": {
   "shadows": "sklearn.tree.DecisionTreeRegressor"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_score_objects.DummyScorer": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "sklearn.metrics.tests.test_score_objects.DummyScorer.__call__": {
  "data": {
   "lineno": 145
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_score_objects.ESTIMATORS": {
  "data": {
   "lineno": 89
  },
  "type": "constant"
 },
 "sklearn.metrics.tests.test_score_objects.EstimatorWithFit": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator"
   ]
  },
  "type": "class"
 },
 "sklearn.metrics.tests.test_score_objects.EstimatorWithFit.fit": {
  "data": {
   "lineno": 120
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_score_objects.EstimatorWithFitAndPredict": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "sklearn.metrics.tests.test_score_objects.EstimatorWithFitAndPredict.fit": {
  "data": {
   "lineno": 135
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_score_objects.EstimatorWithFitAndPredict.predict": {
  "data": {
   "lineno": 139
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_score_objects.EstimatorWithFitAndScore": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "sklearn.metrics.tests.test_score_objects.EstimatorWithFitAndScore.fit": {
  "data": {
   "lineno": 126
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_score_objects.EstimatorWithFitAndScore.score": {
  "data": {
   "lineno": 129
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_score_objects.EstimatorWithoutFit": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "sklearn.metrics.tests.test_score_objects.GridSearchCV": {
  "data": {
   "shadows": "sklearn.model_selection.GridSearchCV"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_score_objects.KMeans": {
  "data": {
   "shadows": "sklearn.cluster.KMeans"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_score_objects.LinearSVC": {
  "data": {
   "shadows": "sklearn.svm.LinearSVC"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_score_objects.LogisticRegression": {
  "data": {
   "shadows": "sklearn.linear_model.LogisticRegression"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_score_objects.MULTILABEL_ONLY_SCORERS": {
  "data": {
   "lineno": 69
  },
  "type": "constant"
 },
 "sklearn.metrics.tests.test_score_objects.OneVsRestClassifier": {
  "data": {
   "shadows": "sklearn.multiclass.OneVsRestClassifier"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_score_objects.REGRESSION_SCORERS": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "sklearn.metrics.tests.test_score_objects.Ridge": {
  "data": {
   "shadows": "sklearn.linear_model.Ridge"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_score_objects.SCORERS": {
  "data": {
   "shadows": "sklearn.metrics.SCORERS"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_score_objects.TEMP_FOLDER": {
  "data": {
   "lineno": 90
  },
  "type": "constant"
 },
 "sklearn.metrics.tests.test_score_objects._PredictScorer": {
  "data": {
   "shadows": "sklearn.metrics.scorer._PredictScorer"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_score_objects._check_multimetric_scoring": {
  "data": {
   "shadows": "sklearn.metrics.scorer._check_multimetric_scoring"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_score_objects._make_estimators": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "dict",
    "sklearn.metrics.tests.test_score_objects.CLF_SCORERS",
    "sklearn.metrics.tests.test_score_objects.CLUSTER_SCORERS",
    "sklearn.metrics.tests.test_score_objects.MULTILABEL_ONLY_SCORERS",
    "sklearn.metrics.tests.test_score_objects.REGRESSION_SCORERS",
    "sklearn.tree.DecisionTreeClassifier",
    "sklearn.tree.DecisionTreeRegressor"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_score_objects._passthrough_scorer": {
  "data": {
   "shadows": "sklearn.metrics.scorer._passthrough_scorer"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_score_objects.accuracy_score": {
  "data": {
   "shadows": "sklearn.metrics.accuracy_score"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_score_objects.assert_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_score_objects.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_score_objects.assert_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_score_objects.assert_false": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_false"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_score_objects.assert_not_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_not_equal"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_score_objects.assert_raises": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_score_objects.assert_raises_regexp": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises_regexp"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_score_objects.assert_true": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_true"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_score_objects.assert_warns_message": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_warns_message"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_score_objects.check_multimetric_scoring_single_metric_wrapper": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "len",
    "sklearn.metrics.scorer._check_multimetric_scoring",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_false",
    "sklearn.utils.testing.assert_true",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_score_objects.check_scorer_memmap": {
  "data": {
   "lineno": 491,
   "symbols_in_volume": [
    "isinstance",
    "scorer",
    "sklearn.metrics.SCORERS",
    "sklearn.metrics.tests.test_score_objects.ESTIMATORS",
    "sklearn.metrics.tests.test_score_objects.MULTILABEL_ONLY_SCORERS",
    "sklearn.metrics.tests.test_score_objects.numbers",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_score_objects.check_scoring": {
  "data": {
   "shadows": "sklearn.metrics.scorer.check_scoring"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_score_objects.check_scoring_validator_for_single_metric_usecases": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "scorer",
    "scoring_validator",
    "sklearn.metrics.scorer._PredictScorer",
    "sklearn.metrics.scorer._passthrough_scorer",
    "sklearn.metrics.scorer.check_scoring",
    "sklearn.metrics.tests.test_score_objects.EstimatorWithFit",
    "sklearn.metrics.tests.test_score_objects.EstimatorWithFitAndPredict",
    "sklearn.metrics.tests.test_score_objects.EstimatorWithFitAndScore",
    "sklearn.metrics.tests.test_score_objects.EstimatorWithoutFit",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_raises_regexp",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_score_objects.cluster_module": {
  "data": {
   "shadows": "sklearn.metrics.cluster"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_score_objects.cross_val_score": {
  "data": {
   "shadows": "sklearn.model_selection.cross_val_score"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_score_objects.f1_score": {
  "data": {
   "shadows": "sklearn.metrics.f1_score"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_score_objects.fbeta_score": {
  "data": {
   "shadows": "sklearn.metrics.fbeta_score"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_score_objects.get_scorer": {
  "data": {
   "shadows": "sklearn.metrics.get_scorer"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_score_objects.ignore_warnings": {
  "data": {
   "shadows": "sklearn.utils.testing.ignore_warnings"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_score_objects.joblib": {
  "data": {
   "shadows": "sklearn.externals.joblib"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_score_objects.load_diabetes": {
  "data": {
   "shadows": "sklearn.datasets.load_diabetes"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_score_objects.log_loss": {
  "data": {
   "shadows": "sklearn.metrics.log_loss"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_score_objects.make_blobs": {
  "data": {
   "shadows": "sklearn.datasets.make_blobs"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_score_objects.make_classification": {
  "data": {
   "shadows": "sklearn.datasets.make_classification"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_score_objects.make_multilabel_classification": {
  "data": {
   "shadows": "sklearn.datasets.make_multilabel_classification"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_score_objects.make_pipeline": {
  "data": {
   "shadows": "sklearn.pipeline.make_pipeline"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_score_objects.make_scorer": {
  "data": {
   "shadows": "sklearn.metrics.make_scorer"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_score_objects.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_score_objects.numbers": {
  "data": {
   "shadows": "numbers"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_score_objects.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_score_objects.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_score_objects.precision_score": {
  "data": {
   "shadows": "sklearn.metrics.precision_score"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_score_objects.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_score_objects.r2_score": {
  "data": {
   "shadows": "sklearn.metrics.r2_score"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_score_objects.recall_score": {
  "data": {
   "shadows": "sklearn.metrics.recall_score"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_score_objects.roc_auc_score": {
  "data": {
   "shadows": "sklearn.metrics.roc_auc_score"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_score_objects.setup_module": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "sklearn.datasets.make_classification",
    "sklearn.datasets.make_multilabel_classification",
    "sklearn.externals.joblib.dump",
    "sklearn.externals.joblib.load",
    "sklearn.metrics.tests.test_score_objects.ESTIMATORS",
    "sklearn.metrics.tests.test_score_objects.TEMP_FOLDER",
    "sklearn.metrics.tests.test_score_objects._make_estimators",
    "sklearn.metrics.tests.test_score_objects.os",
    "sklearn.metrics.tests.test_score_objects.tempfile"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_score_objects.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_score_objects.teardown_module": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "sklearn.metrics.tests.test_score_objects.ESTIMATORS",
    "sklearn.metrics.tests.test_score_objects.TEMP_FOLDER",
    "sklearn.metrics.tests.test_score_objects.shutil"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_score_objects.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_score_objects.test_all_scorers_repr": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "repr",
    "sklearn.metrics.SCORERS.items"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_score_objects.test_check_scoring_and_check_multimetric_scoring": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "ValueError",
    "all",
    "dict",
    "isinstance",
    "list",
    "scorer",
    "sklearn.metrics.accuracy_score",
    "sklearn.metrics.make_scorer",
    "sklearn.metrics.precision_score",
    "sklearn.metrics.scorer._PredictScorer",
    "sklearn.metrics.scorer._check_multimetric_scoring",
    "sklearn.metrics.scorer.check_scoring",
    "sklearn.metrics.tests.test_score_objects.EstimatorWithFitAndPredict",
    "sklearn.metrics.tests.test_score_objects.check_multimetric_scoring_single_metric_wrapper",
    "sklearn.metrics.tests.test_score_objects.check_scoring_validator_for_single_metric_usecases",
    "sklearn.svm.LinearSVC",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_raises_regexp",
    "sklearn.utils.testing.assert_true",
    "sorted"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_score_objects.test_check_scoring_gridsearchcv": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "isinstance",
    "scorer",
    "sklearn.metrics.scorer._PredictScorer",
    "sklearn.metrics.scorer.check_scoring",
    "sklearn.metrics.tests.test_score_objects.DummyScorer",
    "sklearn.metrics.tests.test_score_objects.EstimatorWithFit",
    "sklearn.metrics.tests.test_score_objects.pytest",
    "sklearn.model_selection.GridSearchCV",
    "sklearn.model_selection.cross_val_score",
    "sklearn.pipeline.make_pipeline",
    "sklearn.svm.LinearSVC",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_score_objects.test_classification_scores": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "metric",
    "repr",
    "scorer",
    "sklearn.datasets.make_blobs",
    "sklearn.metrics.f1_score",
    "sklearn.metrics.fbeta_score",
    "sklearn.metrics.get_scorer",
    "sklearn.metrics.make_scorer",
    "sklearn.metrics.precision_score",
    "sklearn.metrics.recall_score",
    "sklearn.metrics.tests.test_score_objects.pickle",
    "sklearn.model_selection.train_test_split",
    "sklearn.svm.LinearSVC",
    "sklearn.utils.testing.assert_almost_equal",
    "unpickled_scorer"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_score_objects.test_make_scorer": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.metrics.make_scorer",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_score_objects.test_raises_on_score_list": {
  "data": {
   "lineno": 433,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.datasets.make_blobs",
    "sklearn.metrics.f1_score",
    "sklearn.metrics.make_scorer",
    "sklearn.model_selection.GridSearchCV",
    "sklearn.model_selection.cross_val_score",
    "sklearn.tree.DecisionTreeClassifier",
    "sklearn.utils.testing.assert_raises",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_score_objects.test_regression_scorers": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": [
    "sklearn.datasets.load_diabetes",
    "sklearn.linear_model.Ridge",
    "sklearn.metrics.get_scorer",
    "sklearn.metrics.r2_score",
    "sklearn.model_selection.train_test_split",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_score_objects.test_scorer_memmap_input": {
  "data": {
   "lineno": 501,
   "symbols_in_volume": [
    "sklearn.metrics.SCORERS",
    "sklearn.metrics.tests.test_score_objects.check_scorer_memmap",
    "sklearn.metrics.tests.test_score_objects.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_score_objects.test_scorer_sample_weight": {
  "data": {
   "lineno": 446,
   "symbols_in_volume": [
    "TypeError",
    "numpy.ones_like",
    "scorer",
    "sklearn.datasets.make_classification",
    "sklearn.datasets.make_multilabel_classification",
    "sklearn.metrics.SCORERS.items",
    "sklearn.metrics.tests.test_score_objects.MULTILABEL_ONLY_SCORERS",
    "sklearn.metrics.tests.test_score_objects._make_estimators",
    "sklearn.model_selection.train_test_split",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_not_equal",
    "sklearn.utils.testing.assert_true",
    "sklearn.utils.testing.ignore_warnings",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_score_objects.test_scoring_is_not_metric": {
  "data": {
   "lineno": 509,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.cluster.KMeans",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.linear_model.Ridge",
    "sklearn.metrics.cluster.adjusted_rand_score",
    "sklearn.metrics.f1_score",
    "sklearn.metrics.r2_score",
    "sklearn.metrics.roc_auc_score",
    "sklearn.metrics.scorer.check_scoring",
    "sklearn.metrics.tests.test_score_objects.pytest",
    "sklearn.utils.testing.assert_raises_regexp"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_score_objects.test_supervised_cluster_scorers": {
  "data": {
   "lineno": 419,
   "symbols_in_volume": [
    "getattr",
    "sklearn.cluster.KMeans",
    "sklearn.datasets.make_blobs",
    "sklearn.metrics.cluster",
    "sklearn.metrics.get_scorer",
    "sklearn.metrics.tests.test_score_objects.CLUSTER_SCORERS",
    "sklearn.metrics.tests.test_score_objects.pytest",
    "sklearn.model_selection.train_test_split",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_score_objects.test_thresholded_scorers": {
  "data": {
   "lineno": 337,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.datasets.make_blobs",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.metrics.get_scorer",
    "sklearn.metrics.log_loss",
    "sklearn.metrics.roc_auc_score",
    "sklearn.metrics.tests.test_score_objects.pytest",
    "sklearn.model_selection.train_test_split",
    "sklearn.tree.DecisionTreeClassifier",
    "sklearn.tree.DecisionTreeRegressor",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_score_objects.test_thresholded_scorers_multilabel_indicator_data": {
  "data": {
   "lineno": 376,
   "symbols_in_volume": [
    "numpy.vstack",
    "sklearn.datasets.make_multilabel_classification",
    "sklearn.metrics.get_scorer",
    "sklearn.metrics.roc_auc_score",
    "sklearn.model_selection.train_test_split",
    "sklearn.multiclass.OneVsRestClassifier",
    "sklearn.svm.LinearSVC",
    "sklearn.tree.DecisionTreeClassifier",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_score_objects.train_test_split": {
  "data": {
   "shadows": "sklearn.model_selection.train_test_split"
  },
  "type": "import"
 },
 "sklearn.mixture": {
  "data": {},
  "type": "module"
 },
 "sklearn.mixture.__all__": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "sklearn.mixture.base": {
  "data": {},
  "type": "module"
 },
 "sklearn.mixture.base.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "sklearn.mixture.base.BaseMixture": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "abc.ABCMeta"
   ]
  },
  "type": "class"
 },
 "sklearn.mixture.base.BaseMixture.__init__": {
  "data": {
   "lineno": 74
  },
  "type": "function"
 },
 "sklearn.mixture.base.BaseMixture._check_initial_parameters": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.base.BaseMixture._check_is_fitted": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.base.BaseMixture._check_parameters": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.base.BaseMixture._e_step": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": [
    "numpy.mean"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.base.BaseMixture._estimate_log_prob": {
  "data": {
   "lineno": 466,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.base.BaseMixture._estimate_log_prob_resp": {
  "data": {
   "lineno": 482,
   "symbols_in_volume": [
    "logsumexp",
    "numpy.errstate",
    "numpy.newaxis"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.base.BaseMixture._estimate_log_weights": {
  "data": {
   "lineno": 456,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.base.BaseMixture._estimate_weighted_log_prob": {
  "data": {
   "lineno": 443
  },
  "type": "function"
 },
 "sklearn.mixture.base.BaseMixture._get_parameters": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.base.BaseMixture._initialize": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.base.BaseMixture._initialize_parameters": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "ValueError",
    "numpy.arange",
    "numpy.newaxis",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.base.BaseMixture._m_step": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.base.BaseMixture._print_verbose_msg_init_beg": {
  "data": {
   "lineno": 508,
   "symbols_in_volume": [
    "print",
    "time.time"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.base.BaseMixture._print_verbose_msg_init_end": {
  "data": {
   "lineno": 528,
   "symbols_in_volume": [
    "print",
    "time.time"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.base.BaseMixture._print_verbose_msg_iter_end": {
  "data": {
   "lineno": 517,
   "symbols_in_volume": [
    "print",
    "time.time"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.base.BaseMixture._set_parameters": {
  "data": {
   "lineno": 317,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.base.BaseMixture.fit": {
  "data": {
   "lineno": 172
  },
  "type": "function"
 },
 "sklearn.mixture.base.BaseMixture.fit_predict": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "abs",
    "check_random_state",
    "hasattr",
    "numpy.infty",
    "range",
    "sklearn.mixture.base._check_X",
    "sklearn.mixture.base.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.base.BaseMixture.predict": {
  "data": {
   "lineno": 356,
   "symbols_in_volume": [
    "sklearn.mixture.base._check_X"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.base.BaseMixture.predict_proba": {
  "data": {
   "lineno": 374,
   "symbols_in_volume": [
    "numpy.exp",
    "sklearn.mixture.base._check_X"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.base.BaseMixture.sample": {
  "data": {
   "lineno": 394,
   "symbols_in_volume": [
    "ValueError",
    "check_random_state",
    "enumerate",
    "int",
    "numpy.concatenate",
    "numpy.full",
    "numpy.sqrt",
    "numpy.vstack",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.base.BaseMixture.score": {
  "data": {
   "lineno": 340
  },
  "type": "function"
 },
 "sklearn.mixture.base.BaseMixture.score_samples": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "logsumexp",
    "sklearn.mixture.base._check_X"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.base._check_X": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "ValueError",
    "check_array",
    "numpy.float32",
    "numpy.float64"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.base._check_shape": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.base.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "sklearn.mixture.base.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.mixture.base.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "sklearn.mixture.base.time": {
  "data": {
   "shadows": "time.time"
  },
  "type": "import"
 },
 "sklearn.mixture.base.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.mixture.bayesian_mixture": {
  "data": {},
  "type": "module"
 },
 "sklearn.mixture.bayesian_mixture.BayesianGaussianMixture": {
  "data": {
   "lineno": 65
  },
  "type": "class"
 },
 "sklearn.mixture.bayesian_mixture.BayesianGaussianMixture.__init__": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": [
    "sklearn.mixture.bayesian_mixture.BayesianGaussianMixture",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.bayesian_mixture.BayesianGaussianMixture._check_is_fitted": {
  "data": {
   "lineno": 649,
   "symbols_in_volume": [
    "check_is_fitted"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.bayesian_mixture.BayesianGaussianMixture._check_means_parameters": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": [
    "ValueError",
    "_check_shape",
    "check_array",
    "numpy.float32",
    "numpy.float64"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.bayesian_mixture.BayesianGaussianMixture._check_parameters": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.bayesian_mixture.BayesianGaussianMixture._check_precision_parameters": {
  "data": {
   "lineno": 395,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.bayesian_mixture.BayesianGaussianMixture._check_weights_parameters": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.bayesian_mixture.BayesianGaussianMixture._checkcovariance_prior_parameter": {
  "data": {
   "lineno": 413,
   "symbols_in_volume": [
    "ValueError",
    "_check_precision_matrix",
    "_check_precision_positivity",
    "_check_shape",
    "check_array",
    "numpy.atleast_2d",
    "numpy.cov",
    "numpy.float32",
    "numpy.float64",
    "numpy.var"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.bayesian_mixture.BayesianGaussianMixture._compute_lower_bound": {
  "data": {
   "lineno": 702,
   "symbols_in_volume": [
    "_compute_log_det_cholesky",
    "numpy.exp",
    "numpy.float64",
    "numpy.log",
    "numpy.sum",
    "scipy.special.betaln",
    "sklearn.mixture.bayesian_mixture._log_dirichlet_norm",
    "sklearn.mixture.bayesian_mixture._log_wishart_norm"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.bayesian_mixture.BayesianGaussianMixture._estimate_log_prob": {
  "data": {
   "lineno": 687,
   "symbols_in_volume": [
    "_estimate_log_gaussian_prob",
    "numpy.arange",
    "numpy.log",
    "numpy.newaxis",
    "numpy.sum",
    "scipy.special.digamma"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.bayesian_mixture.BayesianGaussianMixture._estimate_log_weights": {
  "data": {
   "lineno": 674,
   "symbols_in_volume": [
    "numpy.cumsum",
    "numpy.hstack",
    "numpy.sum",
    "scipy.special.digamma"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.bayesian_mixture.BayesianGaussianMixture._estimate_means": {
  "data": {
   "lineno": 488,
   "symbols_in_volume": [
    "numpy.newaxis"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.bayesian_mixture.BayesianGaussianMixture._estimate_precisions": {
  "data": {
   "lineno": 502,
   "symbols_in_volume": [
    "_compute_precision_cholesky"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.bayesian_mixture.BayesianGaussianMixture._estimate_weights": {
  "data": {
   "lineno": 470,
   "symbols_in_volume": [
    "numpy.cumsum",
    "numpy.hstack"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.bayesian_mixture.BayesianGaussianMixture._estimate_wishart_diag": {
  "data": {
   "lineno": 591,
   "symbols_in_volume": [
    "numpy.newaxis",
    "numpy.square"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.bayesian_mixture.BayesianGaussianMixture._estimate_wishart_full": {
  "data": {
   "lineno": 527,
   "symbols_in_volume": [
    "numpy.empty",
    "numpy.newaxis",
    "numpy.outer",
    "range"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.bayesian_mixture.BayesianGaussianMixture._estimate_wishart_spherical": {
  "data": {
   "lineno": 620,
   "symbols_in_volume": [
    "numpy.mean",
    "numpy.square"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.bayesian_mixture.BayesianGaussianMixture._estimate_wishart_tied": {
  "data": {
   "lineno": 561,
   "symbols_in_volume": [
    "numpy.dot"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.bayesian_mixture.BayesianGaussianMixture._get_parameters": {
  "data": {
   "lineno": 751
  },
  "type": "function"
 },
 "sklearn.mixture.bayesian_mixture.BayesianGaussianMixture._initialize": {
  "data": {
   "lineno": 454,
   "symbols_in_volume": [
    "_estimate_gaussian_parameters"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.bayesian_mixture.BayesianGaussianMixture._m_step": {
  "data": {
   "lineno": 655,
   "symbols_in_volume": [
    "_estimate_gaussian_parameters",
    "numpy.exp"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.bayesian_mixture.BayesianGaussianMixture._set_parameters": {
  "data": {
   "lineno": 757,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.cumprod",
    "numpy.dot",
    "numpy.hstack",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.bayesian_mixture._log_dirichlet_norm": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "numpy.sum",
    "scipy.special.gammaln"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.bayesian_mixture._log_wishart_norm": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.newaxis",
    "numpy.sum",
    "scipy.special.gammaln",
    "sklearn.mixture.bayesian_mixture.math"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.bayesian_mixture.betaln": {
  "data": {
   "shadows": "scipy.special.betaln"
  },
  "type": "import"
 },
 "sklearn.mixture.bayesian_mixture.digamma": {
  "data": {
   "shadows": "scipy.special.digamma"
  },
  "type": "import"
 },
 "sklearn.mixture.bayesian_mixture.gammaln": {
  "data": {
   "shadows": "scipy.special.gammaln"
  },
  "type": "import"
 },
 "sklearn.mixture.bayesian_mixture.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "sklearn.mixture.bayesian_mixture.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.mixture.gaussian_mixture": {
  "data": {},
  "type": "module"
 },
 "sklearn.mixture.gaussian_mixture.GaussianMixture": {
  "data": {
   "lineno": 435
  },
  "type": "class"
 },
 "sklearn.mixture.gaussian_mixture.GaussianMixture.__init__": {
  "data": {
   "lineno": 589,
   "symbols_in_volume": [
    "sklearn.mixture.gaussian_mixture.GaussianMixture",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.gaussian_mixture.GaussianMixture._check_is_fitted": {
  "data": {
   "lineno": 690,
   "symbols_in_volume": [
    "check_is_fitted"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.gaussian_mixture.GaussianMixture._check_parameters": {
  "data": {
   "lineno": 605,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.mixture.gaussian_mixture._check_means",
    "sklearn.mixture.gaussian_mixture._check_precisions",
    "sklearn.mixture.gaussian_mixture._check_weights"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.gaussian_mixture.GaussianMixture._compute_lower_bound": {
  "data": {
   "lineno": 687
  },
  "type": "function"
 },
 "sklearn.mixture.gaussian_mixture.GaussianMixture._estimate_log_prob": {
  "data": {
   "lineno": 680,
   "symbols_in_volume": [
    "sklearn.mixture.gaussian_mixture._estimate_log_gaussian_prob"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.gaussian_mixture.GaussianMixture._estimate_log_weights": {
  "data": {
   "lineno": 684,
   "symbols_in_volume": [
    "numpy.log"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.gaussian_mixture.GaussianMixture._get_parameters": {
  "data": {
   "lineno": 693
  },
  "type": "function"
 },
 "sklearn.mixture.gaussian_mixture.GaussianMixture._initialize": {
  "data": {
   "lineno": 628,
   "symbols_in_volume": [
    "numpy.array",
    "scipy.linalg.cholesky",
    "sklearn.mixture.gaussian_mixture._compute_precision_cholesky",
    "sklearn.mixture.gaussian_mixture._estimate_gaussian_parameters"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.gaussian_mixture.GaussianMixture._m_step": {
  "data": {
   "lineno": 661,
   "symbols_in_volume": [
    "numpy.exp",
    "sklearn.mixture.gaussian_mixture._compute_precision_cholesky",
    "sklearn.mixture.gaussian_mixture._estimate_gaussian_parameters"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.gaussian_mixture.GaussianMixture._n_parameters": {
  "data": {
   "lineno": 715,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.gaussian_mixture.GaussianMixture._set_parameters": {
  "data": {
   "lineno": 697,
   "symbols_in_volume": [
    "enumerate",
    "numpy.dot",
    "numpy.empty"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.gaussian_mixture.GaussianMixture.aic": {
  "data": {
   "lineno": 744
  },
  "type": "function"
 },
 "sklearn.mixture.gaussian_mixture.GaussianMixture.bic": {
  "data": {
   "lineno": 729,
   "symbols_in_volume": [
    "numpy.log"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.gaussian_mixture._check_means": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "_check_shape",
    "check_array",
    "numpy.float32",
    "numpy.float64"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.gaussian_mixture._check_precision_matrix": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "ValueError",
    "numpy.all",
    "numpy.allclose",
    "scipy.linalg.eigvalsh"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.gaussian_mixture._check_precision_positivity": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "ValueError",
    "numpy.any",
    "numpy.less_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.gaussian_mixture._check_precisions": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "_check_shape",
    "check_array",
    "numpy.float32",
    "numpy.float64",
    "sklearn.mixture.gaussian_mixture._check_precision_matrix",
    "sklearn.mixture.gaussian_mixture._check_precision_positivity",
    "sklearn.mixture.gaussian_mixture._check_precisions_full"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.gaussian_mixture._check_precisions_full": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "sklearn.mixture.gaussian_mixture._check_precision_matrix"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.gaussian_mixture._check_weights": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "ValueError",
    "_check_shape",
    "any",
    "check_array",
    "numpy.abs",
    "numpy.allclose",
    "numpy.float32",
    "numpy.float64",
    "numpy.greater",
    "numpy.less",
    "numpy.max",
    "numpy.min",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.gaussian_mixture._compute_log_det_cholesky": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": [
    "numpy.diag",
    "numpy.log",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.gaussian_mixture._compute_precision_cholesky": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "ValueError",
    "enumerate",
    "numpy.any",
    "numpy.empty",
    "numpy.eye",
    "numpy.less_equal",
    "numpy.sqrt",
    "scipy.linalg.LinAlgError",
    "scipy.linalg.cholesky",
    "scipy.linalg.solve_triangular"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.gaussian_mixture._estimate_gaussian_covariances_diag": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.newaxis"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.gaussian_mixture._estimate_gaussian_covariances_full": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.empty",
    "range"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.gaussian_mixture._estimate_gaussian_covariances_spherical": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "sklearn.mixture.gaussian_mixture._estimate_gaussian_covariances_diag"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.gaussian_mixture._estimate_gaussian_covariances_tied": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "len",
    "numpy.dot"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.gaussian_mixture._estimate_gaussian_parameters": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.finfo",
    "numpy.newaxis",
    "sklearn.mixture.gaussian_mixture._estimate_gaussian_covariances_diag",
    "sklearn.mixture.gaussian_mixture._estimate_gaussian_covariances_full",
    "sklearn.mixture.gaussian_mixture._estimate_gaussian_covariances_spherical",
    "sklearn.mixture.gaussian_mixture._estimate_gaussian_covariances_tied"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.gaussian_mixture._estimate_log_gaussian_prob": {
  "data": {
   "lineno": 381,
   "symbols_in_volume": [
    "enumerate",
    "numpy.dot",
    "numpy.empty",
    "numpy.log",
    "numpy.outer",
    "numpy.pi",
    "numpy.square",
    "numpy.sum",
    "row_norms",
    "sklearn.mixture.gaussian_mixture._compute_log_det_cholesky",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.gaussian_mixture.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "sklearn.mixture.gaussian_mixture.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.mixture.tests": {
  "data": {},
  "type": "module"
 },
 "sklearn.mixture.tests.test_bayesian_mixture": {
  "data": {},
  "type": "module"
 },
 "sklearn.mixture.tests.test_bayesian_mixture.BayesianGaussianMixture": {
  "data": {
   "shadows": "sklearn.mixture.BayesianGaussianMixture"
  },
  "type": "import"
 },
 "sklearn.mixture.tests.test_bayesian_mixture.COVARIANCE_TYPE": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "sklearn.mixture.tests.test_bayesian_mixture.ConvergenceWarning": {
  "data": {
   "shadows": "sklearn.exceptions.ConvergenceWarning"
  },
  "type": "import"
 },
 "sklearn.mixture.tests.test_bayesian_mixture.NotFittedError": {
  "data": {
   "shadows": "sklearn.exceptions.NotFittedError"
  },
  "type": "import"
 },
 "sklearn.mixture.tests.test_bayesian_mixture.PRIOR_TYPE": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "sklearn.mixture.tests.test_bayesian_mixture.RandomData": {
  "data": {
   "shadows": "sklearn.mixture.tests.test_gaussian_mixture.RandomData"
  },
  "type": "import"
 },
 "sklearn.mixture.tests.test_bayesian_mixture._log_dirichlet_norm": {
  "data": {
   "shadows": "sklearn.mixture.bayesian_mixture._log_dirichlet_norm"
  },
  "type": "import"
 },
 "sklearn.mixture.tests.test_bayesian_mixture._log_wishart_norm": {
  "data": {
   "shadows": "sklearn.mixture.bayesian_mixture._log_wishart_norm"
  },
  "type": "import"
 },
 "sklearn.mixture.tests.test_bayesian_mixture.adjusted_rand_score": {
  "data": {
   "shadows": "sklearn.metrics.cluster.adjusted_rand_score"
  },
  "type": "import"
 },
 "sklearn.mixture.tests.test_bayesian_mixture.assert_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "sklearn.mixture.tests.test_bayesian_mixture.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.mixture.tests.test_bayesian_mixture.assert_greater_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_greater_equal"
  },
  "type": "import"
 },
 "sklearn.mixture.tests.test_bayesian_mixture.assert_raise_message": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raise_message"
  },
  "type": "import"
 },
 "sklearn.mixture.tests.test_bayesian_mixture.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "sklearn.mixture.tests.test_bayesian_mixture.gammaln": {
  "data": {
   "shadows": "scipy.special.gammaln"
  },
  "type": "import"
 },
 "sklearn.mixture.tests.test_bayesian_mixture.ignore_warnings": {
  "data": {
   "shadows": "sklearn.utils.testing.ignore_warnings"
  },
  "type": "import"
 },
 "sklearn.mixture.tests.test_bayesian_mixture.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.mixture.tests.test_bayesian_mixture.test_bayesian_mixture_check_is_fitted": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "ValueError",
    "numpy.random.RandomState",
    "sklearn.mixture.BayesianGaussianMixture",
    "sklearn.utils.testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.tests.test_bayesian_mixture.test_bayesian_mixture_covariance_type": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "ValueError",
    "numpy.random.RandomState",
    "sklearn.mixture.BayesianGaussianMixture",
    "sklearn.utils.testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.tests.test_bayesian_mixture.test_bayesian_mixture_fit_predict": {
  "data": {
   "lineno": 428,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.mixture.BayesianGaussianMixture",
    "sklearn.mixture.tests.test_bayesian_mixture.COVARIANCE_TYPE",
    "sklearn.mixture.tests.test_bayesian_mixture.copy",
    "sklearn.mixture.tests.test_gaussian_mixture.RandomData",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.tests.test_bayesian_mixture.test_bayesian_mixture_means_prior_initialisation": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "ValueError",
    "numpy.random.RandomState",
    "sklearn.mixture.BayesianGaussianMixture",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.tests.test_bayesian_mixture.test_bayesian_mixture_precisions_prior_initialisation": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "ValueError",
    "numpy.atleast_2d",
    "numpy.cov",
    "numpy.diag",
    "numpy.random.RandomState",
    "numpy.var",
    "sklearn.mixture.BayesianGaussianMixture",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.tests.test_bayesian_mixture.test_bayesian_mixture_predict_predict_proba": {
  "data": {
   "lineno": 446,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.exceptions.NotFittedError",
    "sklearn.metrics.cluster.adjusted_rand_score",
    "sklearn.mixture.BayesianGaussianMixture",
    "sklearn.mixture.tests.test_bayesian_mixture.COVARIANCE_TYPE",
    "sklearn.mixture.tests.test_bayesian_mixture.PRIOR_TYPE",
    "sklearn.mixture.tests.test_gaussian_mixture.RandomData",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_greater_equal",
    "sklearn.utils.testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.tests.test_bayesian_mixture.test_bayesian_mixture_weight_concentration_prior_type": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "ValueError",
    "numpy.random.RandomState",
    "sklearn.mixture.BayesianGaussianMixture",
    "sklearn.utils.testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.tests.test_bayesian_mixture.test_bayesian_mixture_weights": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "numpy.cumprod",
    "numpy.hstack",
    "numpy.random.RandomState",
    "numpy.sum",
    "sklearn.mixture.BayesianGaussianMixture",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.tests.test_bayesian_mixture.test_bayesian_mixture_weights_prior_initialisation": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "ValueError",
    "numpy.random.RandomState",
    "sklearn.mixture.BayesianGaussianMixture",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.tests.test_bayesian_mixture.test_check_covariance_precision": {
  "data": {
   "lineno": 370,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.eye",
    "numpy.ones",
    "numpy.random.RandomState",
    "sklearn.exceptions.ConvergenceWarning",
    "sklearn.mixture.BayesianGaussianMixture",
    "sklearn.mixture.tests.test_bayesian_mixture.COVARIANCE_TYPE",
    "sklearn.mixture.tests.test_gaussian_mixture.RandomData",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.ignore_warnings",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.tests.test_bayesian_mixture.test_compare_covar_type": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.diag",
    "numpy.mean",
    "numpy.newaxis",
    "numpy.random.RandomState",
    "sklearn.mixture.BayesianGaussianMixture",
    "sklearn.mixture.tests.test_bayesian_mixture.PRIOR_TYPE",
    "sklearn.mixture.tests.test_gaussian_mixture.RandomData",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.tests.test_bayesian_mixture.test_invariant_translation": {
  "data": {
   "lineno": 403,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.exceptions.ConvergenceWarning",
    "sklearn.mixture.BayesianGaussianMixture",
    "sklearn.mixture.tests.test_bayesian_mixture.COVARIANCE_TYPE",
    "sklearn.mixture.tests.test_bayesian_mixture.PRIOR_TYPE",
    "sklearn.mixture.tests.test_gaussian_mixture.RandomData",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.tests.test_bayesian_mixture.test_log_dirichlet_norm": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "numpy.sum",
    "scipy.special.gammaln",
    "sklearn.mixture.bayesian_mixture._log_dirichlet_norm",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.tests.test_bayesian_mixture.test_log_wishart_norm": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "enumerate",
    "numpy.abs",
    "numpy.arange",
    "numpy.empty",
    "numpy.log",
    "numpy.newaxis",
    "numpy.random.RandomState",
    "numpy.sum",
    "range",
    "scipy.special.gammaln",
    "sklearn.mixture.bayesian_mixture._log_wishart_norm",
    "sklearn.utils.testing.assert_almost_equal",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.tests.test_bayesian_mixture.test_monotonic_likelihood": {
  "data": {
   "lineno": 284,
   "symbols_in_volume": [
    "numpy.infty",
    "numpy.random.RandomState",
    "range",
    "sklearn.exceptions.ConvergenceWarning",
    "sklearn.mixture.BayesianGaussianMixture",
    "sklearn.mixture.tests.test_bayesian_mixture.COVARIANCE_TYPE",
    "sklearn.mixture.tests.test_bayesian_mixture.PRIOR_TYPE",
    "sklearn.mixture.tests.test_gaussian_mixture.RandomData",
    "sklearn.utils.testing.assert_greater_equal",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.tests.test_gaussian_mixture": {
  "data": {},
  "type": "module"
 },
 "sklearn.mixture.tests.test_gaussian_mixture.COVARIANCE_TYPE": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "sklearn.mixture.tests.test_gaussian_mixture.ConvergenceWarning": {
  "data": {
   "shadows": "sklearn.exceptions.ConvergenceWarning"
  },
  "type": "import"
 },
 "sklearn.mixture.tests.test_gaussian_mixture.EmpiricalCovariance": {
  "data": {
   "shadows": "sklearn.covariance.EmpiricalCovariance"
  },
  "type": "import"
 },
 "sklearn.mixture.tests.test_gaussian_mixture.GaussianMixture": {
  "data": {
   "shadows": "sklearn.mixture.gaussian_mixture.GaussianMixture"
  },
  "type": "import"
 },
 "sklearn.mixture.tests.test_gaussian_mixture.NotFittedError": {
  "data": {
   "shadows": "sklearn.exceptions.NotFittedError"
  },
  "type": "import"
 },
 "sklearn.mixture.tests.test_gaussian_mixture.RandomData": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "sklearn.mixture.tests.test_gaussian_mixture.RandomData.__init__": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "dict",
    "enumerate",
    "int",
    "numpy.array",
    "numpy.full",
    "numpy.hstack",
    "numpy.int",
    "numpy.round",
    "range",
    "scipy.linalg.inv",
    "sklearn.datasets.samples_generator.make_spd_matrix",
    "sklearn.mixture.tests.test_gaussian_mixture.COVARIANCE_TYPE",
    "sklearn.mixture.tests.test_gaussian_mixture.generate_data",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.tests.test_gaussian_mixture.StringIO": {
  "data": {
   "shadows": "sklearn.externals.six.moves.cStringIO"
  },
  "type": "import"
 },
 "sklearn.mixture.tests.test_gaussian_mixture._check_X": {
  "data": {
   "shadows": "sklearn.mixture.base._check_X"
  },
  "type": "import"
 },
 "sklearn.mixture.tests.test_gaussian_mixture._compute_log_det_cholesky": {
  "data": {
   "shadows": "sklearn.mixture.gaussian_mixture._compute_log_det_cholesky"
  },
  "type": "import"
 },
 "sklearn.mixture.tests.test_gaussian_mixture._compute_precision_cholesky": {
  "data": {
   "shadows": "sklearn.mixture.gaussian_mixture._compute_precision_cholesky"
  },
  "type": "import"
 },
 "sklearn.mixture.tests.test_gaussian_mixture._estimate_gaussian_covariances_diag": {
  "data": {
   "shadows": "sklearn.mixture.gaussian_mixture._estimate_gaussian_covariances_diag"
  },
  "type": "import"
 },
 "sklearn.mixture.tests.test_gaussian_mixture._estimate_gaussian_covariances_full": {
  "data": {
   "shadows": "sklearn.mixture.gaussian_mixture._estimate_gaussian_covariances_full"
  },
  "type": "import"
 },
 "sklearn.mixture.tests.test_gaussian_mixture._estimate_gaussian_covariances_spherical": {
  "data": {
   "shadows": "sklearn.mixture.gaussian_mixture._estimate_gaussian_covariances_spherical"
  },
  "type": "import"
 },
 "sklearn.mixture.tests.test_gaussian_mixture._estimate_gaussian_covariances_tied": {
  "data": {
   "shadows": "sklearn.mixture.gaussian_mixture._estimate_gaussian_covariances_tied"
  },
  "type": "import"
 },
 "sklearn.mixture.tests.test_gaussian_mixture._estimate_log_gaussian_prob": {
  "data": {
   "shadows": "sklearn.mixture.gaussian_mixture._estimate_log_gaussian_prob"
  },
  "type": "import"
 },
 "sklearn.mixture.tests.test_gaussian_mixture._naive_lmvnpdf_diag": {
  "data": {
   "lineno": 467,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "numpy.empty",
    "numpy.sqrt",
    "scipy.stats.norm.logpdf",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.tests.test_gaussian_mixture.adjusted_rand_score": {
  "data": {
   "shadows": "sklearn.metrics.cluster.adjusted_rand_score"
  },
  "type": "import"
 },
 "sklearn.mixture.tests.test_gaussian_mixture.assert_allclose": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_allclose"
  },
  "type": "import"
 },
 "sklearn.mixture.tests.test_gaussian_mixture.assert_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "sklearn.mixture.tests.test_gaussian_mixture.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.mixture.tests.test_gaussian_mixture.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.mixture.tests.test_gaussian_mixture.assert_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.mixture.tests.test_gaussian_mixture.assert_greater": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_greater"
  },
  "type": "import"
 },
 "sklearn.mixture.tests.test_gaussian_mixture.assert_greater_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_greater_equal"
  },
  "type": "import"
 },
 "sklearn.mixture.tests.test_gaussian_mixture.assert_raise_message": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raise_message"
  },
  "type": "import"
 },
 "sklearn.mixture.tests.test_gaussian_mixture.assert_true": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_true"
  },
  "type": "import"
 },
 "sklearn.mixture.tests.test_gaussian_mixture.assert_warns_message": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_warns_message"
  },
  "type": "import"
 },
 "sklearn.mixture.tests.test_gaussian_mixture.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "sklearn.mixture.tests.test_gaussian_mixture.fast_logdet": {
  "data": {
   "shadows": "sklearn.utils.extmath.fast_logdet"
  },
  "type": "import"
 },
 "sklearn.mixture.tests.test_gaussian_mixture.generate_data": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "enumerate",
    "int",
    "numpy.diag",
    "numpy.eye",
    "numpy.random.RandomState",
    "numpy.round",
    "numpy.vstack",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.tests.test_gaussian_mixture.ignore_warnings": {
  "data": {
   "shadows": "sklearn.utils.testing.ignore_warnings"
  },
  "type": "import"
 },
 "sklearn.mixture.tests.test_gaussian_mixture.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "sklearn.mixture.tests.test_gaussian_mixture.make_spd_matrix": {
  "data": {
   "shadows": "sklearn.datasets.samples_generator.make_spd_matrix"
  },
  "type": "import"
 },
 "sklearn.mixture.tests.test_gaussian_mixture.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.mixture.tests.test_gaussian_mixture.stats": {
  "data": {
   "shadows": "scipy.stats"
  },
  "type": "import"
 },
 "sklearn.mixture.tests.test_gaussian_mixture.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "sklearn.mixture.tests.test_gaussian_mixture.test_bic_1d_1component": {
  "data": {
   "lineno": 709,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.mixture.gaussian_mixture.GaussianMixture",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.tests.test_gaussian_mixture.test_check_X": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "ValueError",
    "numpy.random.RandomState",
    "sklearn.mixture.base._check_X",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.tests.test_gaussian_mixture.test_check_means": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "ValueError",
    "numpy.random.RandomState",
    "sklearn.mixture.gaussian_mixture.GaussianMixture",
    "sklearn.mixture.tests.test_gaussian_mixture.RandomData",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.tests.test_gaussian_mixture.test_check_precisions": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "ValueError",
    "numpy.eye",
    "numpy.full",
    "numpy.ones",
    "numpy.random.RandomState",
    "sklearn.mixture.gaussian_mixture.GaussianMixture",
    "sklearn.mixture.tests.test_gaussian_mixture.COVARIANCE_TYPE",
    "sklearn.mixture.tests.test_gaussian_mixture.RandomData",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.tests.test_gaussian_mixture.test_check_weights": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "ValueError",
    "numpy.max",
    "numpy.min",
    "numpy.random.RandomState",
    "numpy.sum",
    "sklearn.mixture.gaussian_mixture.GaussianMixture",
    "sklearn.mixture.tests.test_gaussian_mixture.RandomData",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_raise_message",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.tests.test_gaussian_mixture.test_compute_log_det_cholesky": {
  "data": {
   "lineno": 445,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.log",
    "numpy.prod",
    "numpy.random.RandomState",
    "scipy.linalg.det",
    "sklearn.mixture.gaussian_mixture._compute_log_det_cholesky",
    "sklearn.mixture.gaussian_mixture._compute_precision_cholesky",
    "sklearn.mixture.tests.test_gaussian_mixture.COVARIANCE_TYPE",
    "sklearn.mixture.tests.test_gaussian_mixture.RandomData",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.tests.test_gaussian_mixture.test_convergence_detected_with_warm_start": {
  "data": {
   "lineno": 809,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "range",
    "sklearn.exceptions.ConvergenceWarning",
    "sklearn.mixture.gaussian_mixture.GaussianMixture",
    "sklearn.mixture.tests.test_gaussian_mixture.RandomData",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.tests.test_gaussian_mixture.test_gaussian_mixture_aic_bic": {
  "data": {
   "lineno": 725,
   "symbols_in_volume": [
    "numpy.cov",
    "numpy.log",
    "numpy.pi",
    "numpy.random.RandomState",
    "numpy.sqrt",
    "sklearn.mixture.gaussian_mixture.GaussianMixture",
    "sklearn.mixture.tests.test_gaussian_mixture.COVARIANCE_TYPE",
    "sklearn.utils.extmath.fast_logdet",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.tests.test_gaussian_mixture.test_gaussian_mixture_attributes": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "ValueError",
    "numpy.random.RandomState",
    "sklearn.mixture.gaussian_mixture.GaussianMixture",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.tests.test_gaussian_mixture.test_gaussian_mixture_estimate_log_prob_resp": {
  "data": {
   "lineno": 524,
   "symbols_in_volume": [
    "numpy.ones",
    "numpy.random.RandomState",
    "sklearn.mixture.gaussian_mixture.GaussianMixture",
    "sklearn.mixture.tests.test_gaussian_mixture.COVARIANCE_TYPE",
    "sklearn.mixture.tests.test_gaussian_mixture.RandomData",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.tests.test_gaussian_mixture.test_gaussian_mixture_fit": {
  "data": {
   "lineno": 594,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.diag",
    "numpy.eye",
    "numpy.random.RandomState",
    "numpy.sort",
    "numpy.trace",
    "sklearn.covariance.EmpiricalCovariance",
    "sklearn.mixture.gaussian_mixture.GaussianMixture",
    "sklearn.mixture.tests.test_gaussian_mixture.COVARIANCE_TYPE",
    "sklearn.mixture.tests.test_gaussian_mixture.RandomData",
    "sklearn.utils.testing.assert_allclose",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.tests.test_gaussian_mixture.test_gaussian_mixture_fit_best_params": {
  "data": {
   "lineno": 642,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.random.RandomState",
    "range",
    "sklearn.mixture.gaussian_mixture.GaussianMixture",
    "sklearn.mixture.tests.test_gaussian_mixture.COVARIANCE_TYPE",
    "sklearn.mixture.tests.test_gaussian_mixture.RandomData",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.tests.test_gaussian_mixture.test_gaussian_mixture_fit_convergence_warning": {
  "data": {
   "lineno": 663,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.exceptions.ConvergenceWarning",
    "sklearn.mixture.gaussian_mixture.GaussianMixture",
    "sklearn.mixture.tests.test_gaussian_mixture.COVARIANCE_TYPE",
    "sklearn.mixture.tests.test_gaussian_mixture.RandomData",
    "sklearn.utils.testing.assert_warns_message"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.tests.test_gaussian_mixture.test_gaussian_mixture_fit_predict": {
  "data": {
   "lineno": 574,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.metrics.cluster.adjusted_rand_score",
    "sklearn.mixture.gaussian_mixture.GaussianMixture",
    "sklearn.mixture.tests.test_gaussian_mixture.COVARIANCE_TYPE",
    "sklearn.mixture.tests.test_gaussian_mixture.RandomData",
    "sklearn.mixture.tests.test_gaussian_mixture.copy",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_greater"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.tests.test_gaussian_mixture.test_gaussian_mixture_log_probabilities": {
  "data": {
   "lineno": 475,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.diag",
    "numpy.random.RandomState",
    "numpy.sqrt",
    "sklearn.mixture.gaussian_mixture._estimate_log_gaussian_prob",
    "sklearn.mixture.tests.test_gaussian_mixture.RandomData",
    "sklearn.mixture.tests.test_gaussian_mixture._naive_lmvnpdf_diag",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.tests.test_gaussian_mixture.test_gaussian_mixture_n_parameters": {
  "data": {
   "lineno": 696,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.mixture.gaussian_mixture.GaussianMixture",
    "sklearn.mixture.tests.test_gaussian_mixture.COVARIANCE_TYPE",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.tests.test_gaussian_mixture.test_gaussian_mixture_predict_predict_proba": {
  "data": {
   "lineno": 549,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.exceptions.NotFittedError",
    "sklearn.metrics.cluster.adjusted_rand_score",
    "sklearn.mixture.gaussian_mixture.GaussianMixture",
    "sklearn.mixture.tests.test_gaussian_mixture.COVARIANCE_TYPE",
    "sklearn.mixture.tests.test_gaussian_mixture.RandomData",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_greater",
    "sklearn.utils.testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.tests.test_gaussian_mixture.test_gaussian_mixture_verbose": {
  "data": {
   "lineno": 746,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.externals.six.moves.cStringIO",
    "sklearn.mixture.gaussian_mixture.GaussianMixture",
    "sklearn.mixture.tests.test_gaussian_mixture.COVARIANCE_TYPE",
    "sklearn.mixture.tests.test_gaussian_mixture.RandomData",
    "sklearn.mixture.tests.test_gaussian_mixture.sys"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.tests.test_gaussian_mixture.test_gaussian_suffstat_sk_spherical": {
  "data": {
   "lineno": 422,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.dot",
    "numpy.ones",
    "numpy.random.RandomState",
    "sklearn.mixture.gaussian_mixture._compute_precision_cholesky",
    "sklearn.mixture.gaussian_mixture._estimate_gaussian_covariances_spherical",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.tests.test_gaussian_mixture.test_init": {
  "data": {
   "lineno": 1010,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "range",
    "sklearn.exceptions.ConvergenceWarning",
    "sklearn.mixture.gaussian_mixture.GaussianMixture",
    "sklearn.mixture.tests.test_gaussian_mixture.RandomData",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.tests.test_gaussian_mixture.test_monotonic_likelihood": {
  "data": {
   "lineno": 878,
   "symbols_in_volume": [
    "numpy.infty",
    "numpy.random.RandomState",
    "range",
    "sklearn.exceptions.ConvergenceWarning",
    "sklearn.mixture.gaussian_mixture.GaussianMixture",
    "sklearn.mixture.tests.test_gaussian_mixture.COVARIANCE_TYPE",
    "sklearn.mixture.tests.test_gaussian_mixture.RandomData",
    "sklearn.mixture.tests.test_gaussian_mixture.warnings",
    "sklearn.utils.testing.assert_greater_equal",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.tests.test_gaussian_mixture.test_multiple_init": {
  "data": {
   "lineno": 681,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.mixture.gaussian_mixture.GaussianMixture",
    "sklearn.mixture.tests.test_gaussian_mixture.COVARIANCE_TYPE",
    "sklearn.utils.testing.assert_greater_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.tests.test_gaussian_mixture.test_property": {
  "data": {
   "lineno": 937,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "scipy.linalg.inv",
    "sklearn.mixture.gaussian_mixture.GaussianMixture",
    "sklearn.mixture.tests.test_gaussian_mixture.COVARIANCE_TYPE",
    "sklearn.mixture.tests.test_gaussian_mixture.RandomData",
    "sklearn.utils.testing.assert_array_almost_equal",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.tests.test_gaussian_mixture.test_regularisation": {
  "data": {
   "lineno": 911,
   "symbols_in_volume": [
    "RuntimeWarning",
    "ValueError",
    "numpy.ones",
    "numpy.random.RandomState",
    "numpy.vstack",
    "numpy.zeros",
    "sklearn.mixture.gaussian_mixture.GaussianMixture",
    "sklearn.mixture.tests.test_gaussian_mixture.COVARIANCE_TYPE",
    "sklearn.mixture.tests.test_gaussian_mixture.warnings",
    "sklearn.utils.testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.tests.test_gaussian_mixture.test_sample": {
  "data": {
   "lineno": 959,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "numpy.cov",
    "numpy.diag",
    "numpy.mean",
    "numpy.random.RandomState",
    "numpy.var",
    "range",
    "sklearn.exceptions.NotFittedError",
    "sklearn.mixture.gaussian_mixture.GaussianMixture",
    "sklearn.mixture.tests.test_gaussian_mixture.COVARIANCE_TYPE",
    "sklearn.mixture.tests.test_gaussian_mixture.RandomData",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.tests.test_gaussian_mixture.test_score": {
  "data": {
   "lineno": 828,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.exceptions.ConvergenceWarning",
    "sklearn.exceptions.NotFittedError",
    "sklearn.mixture.gaussian_mixture.GaussianMixture",
    "sklearn.mixture.tests.test_gaussian_mixture.RandomData",
    "sklearn.mixture.tests.test_gaussian_mixture.warnings",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_greater",
    "sklearn.utils.testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.tests.test_gaussian_mixture.test_score_samples": {
  "data": {
   "lineno": 859,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.exceptions.NotFittedError",
    "sklearn.mixture.gaussian_mixture.GaussianMixture",
    "sklearn.mixture.tests.test_gaussian_mixture.RandomData",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.tests.test_gaussian_mixture.test_suffstat_sk_diag": {
  "data": {
   "lineno": 397,
   "symbols_in_volume": [
    "numpy.diag",
    "numpy.dot",
    "numpy.newaxis",
    "numpy.random.RandomState",
    "sklearn.covariance.EmpiricalCovariance",
    "sklearn.mixture.gaussian_mixture._compute_precision_cholesky",
    "sklearn.mixture.gaussian_mixture._estimate_gaussian_covariances_diag",
    "sklearn.mixture.gaussian_mixture._estimate_gaussian_covariances_full",
    "sklearn.utils.testing.assert_almost_equal",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.tests.test_gaussian_mixture.test_suffstat_sk_full": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.dot",
    "numpy.ones",
    "numpy.random.RandomState",
    "numpy.sqrt",
    "numpy.zeros",
    "scipy.linalg.inv",
    "sklearn.covariance.EmpiricalCovariance",
    "sklearn.mixture.gaussian_mixture._compute_precision_cholesky",
    "sklearn.mixture.gaussian_mixture._estimate_gaussian_covariances_full",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.tests.test_gaussian_mixture.test_suffstat_sk_tied": {
  "data": {
   "lineno": 368,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.newaxis",
    "numpy.random.RandomState",
    "numpy.sum",
    "scipy.linalg.inv",
    "sklearn.covariance.EmpiricalCovariance",
    "sklearn.mixture.gaussian_mixture._compute_precision_cholesky",
    "sklearn.mixture.gaussian_mixture._estimate_gaussian_covariances_full",
    "sklearn.mixture.gaussian_mixture._estimate_gaussian_covariances_tied",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.tests.test_gaussian_mixture.test_warm_start": {
  "data": {
   "lineno": 767,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.exceptions.ConvergenceWarning",
    "sklearn.mixture.gaussian_mixture.GaussianMixture",
    "sklearn.mixture.tests.test_gaussian_mixture.warnings",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_greater",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.tests.test_gaussian_mixture.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.mixture.tests.test_mixture": {
  "data": {},
  "type": "module"
 },
 "sklearn.mixture.tests.test_mixture.BayesianGaussianMixture": {
  "data": {
   "shadows": "sklearn.mixture.BayesianGaussianMixture"
  },
  "type": "import"
 },
 "sklearn.mixture.tests.test_mixture.GaussianMixture": {
  "data": {
   "shadows": "sklearn.mixture.GaussianMixture"
  },
  "type": "import"
 },
 "sklearn.mixture.tests.test_mixture.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.mixture.tests.test_mixture.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.mixture.tests.test_mixture.test_gaussian_mixture_n_iter": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.mixture.BayesianGaussianMixture",
    "sklearn.mixture.GaussianMixture",
    "sklearn.mixture.tests.test_mixture.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection": {
  "data": {},
  "type": "module"
 },
 "sklearn.model_selection.__all__": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "sklearn.model_selection._search": {
  "data": {},
  "type": "module"
 },
 "sklearn.model_selection._search.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "sklearn.model_selection._search.BaseSearchCV": {
  "data": {
   "lineno": 409,
   "symbols_in_volume": [
    "abc.ABCMeta"
   ]
  },
  "type": "class"
 },
 "sklearn.model_selection._search.BaseSearchCV.__init__": {
  "data": {
   "lineno": 414,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection._search.BaseSearchCV._check_is_fitted": {
  "data": {
   "lineno": 464,
   "symbols_in_volume": [
    "NotFittedError",
    "check_is_fitted",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection._search.BaseSearchCV._estimator_type": {
  "data": {
   "lineno": 432,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection._search.BaseSearchCV._format_results": {
  "data": {
   "lineno": 754,
   "symbols_in_volume": [
    "DeprecationDict",
    "DeprecationWarning",
    "FutureWarning",
    "_aggregate_score_dicts",
    "_store",
    "collections.defaultdict",
    "enumerate",
    "functools.partial",
    "len",
    "numpy.allclose",
    "numpy.array",
    "numpy.average",
    "numpy.empty",
    "numpy.int",
    "object",
    "set",
    "sklearn.model_selection._search.warnings",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection._search.BaseSearchCV._format_results._store": {
  "data": {
   "lineno": 775,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.asarray",
    "numpy.average",
    "numpy.float64",
    "numpy.int32",
    "numpy.newaxis",
    "numpy.sqrt",
    "range",
    "scipy.stats.rankdata"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection._search.BaseSearchCV._run_search": {
  "data": {
   "lineno": 583,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection._search.BaseSearchCV.classes_": {
  "data": {
   "lineno": 578,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection._search.BaseSearchCV.decision_function": {
  "data": {
   "lineno": 527,
   "symbols_in_volume": [
    "if_delegate_has_method"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection._search.BaseSearchCV.fit": {
  "data": {
   "lineno": 617,
   "symbols_in_volume": [
    "DeprecationWarning",
    "Parallel",
    "RuntimeWarning",
    "ValueError",
    "_check_multimetric_scoring",
    "check_cv",
    "clone",
    "dict",
    "indexable",
    "is_classifier",
    "isinstance",
    "sklearn.model_selection._search.time",
    "sklearn.model_selection._search.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection._search.BaseSearchCV.fit.evaluate_candidates": {
  "data": {
   "lineno": 695,
   "symbols_in_volume": [
    "_fit_and_score",
    "clone",
    "delayed",
    "itertools.product",
    "len",
    "list",
    "parallel",
    "print"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection._search.BaseSearchCV.inverse_transform": {
  "data": {
   "lineno": 561,
   "symbols_in_volume": [
    "if_delegate_has_method"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection._search.BaseSearchCV.predict": {
  "data": {
   "lineno": 476,
   "symbols_in_volume": [
    "if_delegate_has_method"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection._search.BaseSearchCV.predict_log_proba": {
  "data": {
   "lineno": 510,
   "symbols_in_volume": [
    "if_delegate_has_method"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection._search.BaseSearchCV.predict_proba": {
  "data": {
   "lineno": 493,
   "symbols_in_volume": [
    "if_delegate_has_method"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection._search.BaseSearchCV.score": {
  "data": {
   "lineno": 436,
   "symbols_in_volume": [
    "ValueError",
    "score"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection._search.BaseSearchCV.transform": {
  "data": {
   "lineno": 544,
   "symbols_in_volume": [
    "if_delegate_has_method"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection._search.GridSearchCV": {
  "data": {
   "lineno": 866,
   "symbols_in_volume": [
    "sklearn.model_selection._search.BaseSearchCV"
   ]
  },
  "type": "class"
 },
 "sklearn.model_selection._search.GridSearchCV.__init__": {
  "data": {
   "lineno": 1177,
   "symbols_in_volume": [
    "sklearn.model_selection._search.GridSearchCV",
    "sklearn.model_selection._search._check_param_grid",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection._search.GridSearchCV._run_search": {
  "data": {
   "lineno": 1189,
   "symbols_in_volume": [
    "evaluate_candidates",
    "sklearn.model_selection._search.ParameterGrid"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection._search.Iterable": {
  "data": {
   "shadows": "_Iterable"
  },
  "type": "import"
 },
 "sklearn.model_selection._search.Mapping": {
  "data": {
   "shadows": "_Mapping"
  },
  "type": "import"
 },
 "sklearn.model_selection._search.ParameterGrid": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "sklearn.model_selection._search.ParameterGrid.__getitem__": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "IndexError",
    "divmod",
    "len",
    "numpy.product",
    "sorted",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection._search.ParameterGrid.__init__": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "TypeError",
    "dict",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection._search.ParameterGrid.__iter__": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "dict",
    "itertools.product",
    "sorted",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection._search.ParameterGrid.__len__": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "functools.partial",
    "functools.reduce",
    "itertools.product",
    "len",
    "sklearn.model_selection._search.operator",
    "sum"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection._search.ParameterSampler": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "sklearn.model_selection._search.ParameterSampler.__init__": {
  "data": {
   "lineno": 248
  },
  "type": "function"
 },
 "sklearn.model_selection._search.ParameterSampler.__iter__": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "UserWarning",
    "check_random_state",
    "dict",
    "hasattr",
    "len",
    "numpy.all",
    "sample_without_replacement",
    "sklearn.model_selection._search.ParameterGrid",
    "sklearn.model_selection._search.warnings",
    "sorted"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection._search.ParameterSampler.__len__": {
  "data": {
   "lineno": 292
  },
  "type": "function"
 },
 "sklearn.model_selection._search.RandomizedSearchCV": {
  "data": {
   "lineno": 1194,
   "symbols_in_volume": [
    "sklearn.model_selection._search.BaseSearchCV"
   ]
  },
  "type": "class"
 },
 "sklearn.model_selection._search.RandomizedSearchCV.__init__": {
  "data": {
   "lineno": 1497,
   "symbols_in_volume": [
    "sklearn.model_selection._search.RandomizedSearchCV",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection._search.RandomizedSearchCV._run_search": {
  "data": {
   "lineno": 1511,
   "symbols_in_volume": [
    "evaluate_candidates",
    "sklearn.model_selection._search.ParameterSampler"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection._search.Sequence": {
  "data": {
   "shadows": "_Sequence"
  },
  "type": "import"
 },
 "sklearn.model_selection._search._CVScoreTuple": {
  "data": {
   "lineno": 387,
   "symbols_in_volume": [
    "collections.namedtuple"
   ]
  },
  "type": "class"
 },
 "sklearn.model_selection._search._CVScoreTuple.__repr__": {
  "data": {
   "lineno": 401,
   "symbols_in_volume": [
    "numpy.std"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection._search.__all__": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "sklearn.model_selection._search._check_param_grid": {
  "data": {
   "lineno": 366,
   "symbols_in_volume": [
    "ValueError",
    "hasattr",
    "isinstance",
    "len",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection._search.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "sklearn.model_selection._search.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "sklearn.model_selection._search.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sklearn.model_selection._search.fit_grid_point": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "_fit_and_score",
    "check_scoring"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection._search.namedtuple": {
  "data": {
   "shadows": "collections.namedtuple"
  },
  "type": "import"
 },
 "sklearn.model_selection._search.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.model_selection._search.operator": {
  "data": {
   "shadows": "operator"
  },
  "type": "import"
 },
 "sklearn.model_selection._search.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "sklearn.model_selection._search.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "sklearn.model_selection._search.product": {
  "data": {
   "shadows": "itertools.product"
  },
  "type": "import"
 },
 "sklearn.model_selection._search.rankdata": {
  "data": {
   "shadows": "scipy.stats.rankdata"
  },
  "type": "import"
 },
 "sklearn.model_selection._search.reduce": {
  "data": {
   "shadows": "functools.reduce"
  },
  "type": "import"
 },
 "sklearn.model_selection._search.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "sklearn.model_selection._search.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests": {
  "data": {},
  "type": "module"
 },
 "sklearn.model_selection.tests.common": {
  "data": {},
  "type": "module"
 },
 "sklearn.model_selection.tests.common.KFold": {
  "data": {
   "shadows": "sklearn.model_selection.KFold"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.common.OneTimeSplitter": {
  "data": {
   "lineno": 10
  },
  "type": "class"
 },
 "sklearn.model_selection.tests.common.OneTimeSplitter.__init__": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "iter",
    "numpy.ones",
    "sklearn.model_selection.KFold"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.common.OneTimeSplitter.get_n_splits": {
  "data": {
   "lineno": 22
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.common.OneTimeSplitter.split": {
  "data": {
   "lineno": 17
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.common.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_split": {
  "data": {
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "numpy.eye",
    "numpy.ones",
    "scipy.sparse.coo_matrix",
    "sklearn.datasets.load_digits"
   ]
  },
  "type": "module"
 },
 "sklearn.model_selection.tests.test_split.CV_WARNING": {
  "data": {
   "shadows": "sklearn.model_selection._split.CV_WARNING"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_split.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_split.GridSearchCV": {
  "data": {
   "shadows": "sklearn.model_selection.GridSearchCV"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_split.GroupKFold": {
  "data": {
   "shadows": "sklearn.model_selection.GroupKFold"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_split.GroupShuffleSplit": {
  "data": {
   "shadows": "sklearn.model_selection.GroupShuffleSplit"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_split.KFold": {
  "data": {
   "shadows": "sklearn.model_selection.KFold"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_split.LeaveOneGroupOut": {
  "data": {
   "shadows": "sklearn.model_selection.LeaveOneGroupOut"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_split.LeaveOneOut": {
  "data": {
   "shadows": "sklearn.model_selection.LeaveOneOut"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_split.LeavePGroupsOut": {
  "data": {
   "shadows": "sklearn.model_selection.LeavePGroupsOut"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_split.LeavePOut": {
  "data": {
   "shadows": "sklearn.model_selection.LeavePOut"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_split.MockClassifier": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "sklearn.model_selection.tests.test_split.MockClassifier.__init__": {
  "data": {
   "lineno": 83
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.MockClassifier.fit": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "ValueError",
    "callback",
    "len",
    "numpy.unique",
    "sklearn.model_selection.tests.test_split.P_sparse",
    "sklearn.model_selection.tests.test_split.X",
    "sklearn.model_selection.tests.test_split.y",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.MockClassifier.get_params": {
  "data": {
   "lineno": 139
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.MockClassifier.predict": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.MockClassifier.score": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "numpy.abs"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.MockDataFrame": {
  "data": {
   "shadows": "sklearn.utils.mocking.MockDataFrame"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_split.NSPLIT_WARNING": {
  "data": {
   "shadows": "sklearn.model_selection._split.NSPLIT_WARNING"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_split.P_sparse": {
  "data": {
   "lineno": 69
  },
  "type": "constant"
 },
 "sklearn.model_selection.tests.test_split.PredefinedSplit": {
  "data": {
   "shadows": "sklearn.model_selection.PredefinedSplit"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_split.RepeatedKFold": {
  "data": {
   "shadows": "sklearn.model_selection.RepeatedKFold"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_split.RepeatedStratifiedKFold": {
  "data": {
   "shadows": "sklearn.model_selection.RepeatedStratifiedKFold"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_split.Ridge": {
  "data": {
   "shadows": "sklearn.linear_model.Ridge"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_split.SVC": {
  "data": {
   "shadows": "sklearn.svm.SVC"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_split.ShuffleSplit": {
  "data": {
   "shadows": "sklearn.model_selection.ShuffleSplit"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_split.StratifiedKFold": {
  "data": {
   "shadows": "sklearn.model_selection.StratifiedKFold"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_split.StratifiedShuffleSplit": {
  "data": {
   "shadows": "sklearn.model_selection.StratifiedShuffleSplit"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_split.TimeSeriesSplit": {
  "data": {
   "shadows": "sklearn.model_selection.TimeSeriesSplit"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_split.X": {
  "data": {
   "lineno": 67
  },
  "type": "constant"
 },
 "sklearn.model_selection.tests.test_split._CVIterableWrapper": {
  "data": {
   "shadows": "sklearn.model_selection._split._CVIterableWrapper"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_split._build_repr": {
  "data": {
   "shadows": "sklearn.model_selection._split._build_repr"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_split._check_time_series_max_train_size": {
  "data": {
   "lineno": 1379,
   "symbols_in_volume": [
    "len",
    "max",
    "sklearn.externals.six.moves.zip",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split._num_samples": {
  "data": {
   "shadows": "sklearn.utils.validation._num_samples"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_split._validate_shuffle_split": {
  "data": {
   "shadows": "sklearn.model_selection._split._validate_shuffle_split"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_split.assert_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_split.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_split.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_split.assert_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_split.assert_false": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_false"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_split.assert_greater": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_greater"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_split.assert_greater_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_greater_equal"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_split.assert_no_warnings": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_no_warnings"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_split.assert_not_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_not_equal"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_split.assert_raise_message": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raise_message"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_split.assert_raises": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_split.assert_raises_regexp": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises_regexp"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_split.assert_true": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_true"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_split.assert_warns": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_warns"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_split.assert_warns_message": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_warns_message"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_split.check_cv": {
  "data": {
   "shadows": "sklearn.model_selection.check_cv"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_split.check_cv_coverage": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "range",
    "set",
    "sklearn.model_selection.tests.test_split.X",
    "sklearn.model_selection.tests.test_split.check_valid_split",
    "sklearn.model_selection.tests.test_split.y",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.validation._num_samples"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.check_valid_split": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "range",
    "set",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.comb": {
  "data": {
   "shadows": "sklearn.utils.fixes.comb"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_split.combinations": {
  "data": {
   "shadows": "itertools.combinations"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_split.combinations_with_replacement": {
  "data": {
   "shadows": "itertools.combinations_with_replacement"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_split.coo_matrix": {
  "data": {
   "shadows": "scipy.sparse.coo_matrix"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_split.cross_val_score": {
  "data": {
   "shadows": "sklearn.model_selection.cross_val_score"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_split.csc_matrix": {
  "data": {
   "shadows": "scipy.sparse.csc_matrix"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_split.csr_matrix": {
  "data": {
   "shadows": "scipy.sparse.csr_matrix"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_split.digits": {
  "data": {
   "lineno": 77
  },
  "type": "constant"
 },
 "sklearn.model_selection.tests.test_split.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_split.ignore_warnings": {
  "data": {
   "shadows": "sklearn.utils.testing.ignore_warnings"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_split.load_digits": {
  "data": {
   "shadows": "sklearn.datasets.load_digits"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_split.make_classification": {
  "data": {
   "shadows": "sklearn.datasets.make_classification"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_split.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_split.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_split.six": {
  "data": {
   "shadows": "sklearn.externals.six"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_split.stats": {
  "data": {
   "shadows": "scipy.stats"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_split.test_2d_y": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "ValueError",
    "list",
    "numpy.random.RandomState",
    "sklearn.model_selection.GroupKFold",
    "sklearn.model_selection.GroupShuffleSplit",
    "sklearn.model_selection.KFold",
    "sklearn.model_selection.LeaveOneGroupOut",
    "sklearn.model_selection.LeaveOneOut",
    "sklearn.model_selection.LeavePGroupsOut",
    "sklearn.model_selection.LeavePOut",
    "sklearn.model_selection.PredefinedSplit",
    "sklearn.model_selection.RepeatedKFold",
    "sklearn.model_selection.RepeatedStratifiedKFold",
    "sklearn.model_selection.ShuffleSplit",
    "sklearn.model_selection.StratifiedKFold",
    "sklearn.model_selection.StratifiedShuffleSplit",
    "sklearn.model_selection.TimeSeriesSplit",
    "sklearn.model_selection.tests.test_split.X",
    "sklearn.model_selection.tests.test_split.pytest",
    "sklearn.model_selection.tests.test_split.y",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.test_build_repr": {
  "data": {
   "lineno": 1448,
   "symbols_in_volume": [
    "MockSplitter",
    "repr",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.test_build_repr.MockSplitter": {
  "data": {
   "lineno": 1449
  },
  "type": "class"
 },
 "sklearn.model_selection.tests.test_split.test_build_repr.MockSplitter.__init__": {
  "data": {
   "lineno": 1450
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.test_build_repr.MockSplitter.__repr__": {
  "data": {
   "lineno": 1455,
   "symbols_in_volume": [
    "sklearn.model_selection._split._build_repr"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.test_check_cv": {
  "data": {
   "lineno": 1185,
   "symbols_in_volume": [
    "ValueError",
    "list",
    "next",
    "numpy.all",
    "numpy.array",
    "numpy.ones",
    "numpy.testing.assert_equal",
    "sklearn.model_selection.KFold",
    "sklearn.model_selection.StratifiedKFold",
    "sklearn.model_selection.check_cv",
    "sklearn.model_selection.tests.test_split.X",
    "sklearn.utils.testing.assert_false",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.test_check_cv_default_warn": {
  "data": {
   "lineno": 1441,
   "symbols_in_volume": [
    "FutureWarning",
    "sklearn.model_selection._split.CV_WARNING",
    "sklearn.model_selection.check_cv",
    "sklearn.utils.testing.assert_no_warnings",
    "sklearn.utils.testing.assert_warns_message"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.test_cross_validator_with_default_params": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "ValueError",
    "enumerate",
    "list",
    "numpy.array",
    "numpy.asarray",
    "numpy.testing.assert_equal",
    "repr",
    "sklearn.externals.six.moves.zip",
    "sklearn.model_selection.KFold",
    "sklearn.model_selection.LeaveOneGroupOut",
    "sklearn.model_selection.LeaveOneOut",
    "sklearn.model_selection.LeavePGroupsOut",
    "sklearn.model_selection.LeavePOut",
    "sklearn.model_selection.PredefinedSplit",
    "sklearn.model_selection.ShuffleSplit",
    "sklearn.model_selection.StratifiedKFold",
    "sklearn.model_selection.tests.test_split.X",
    "sklearn.model_selection.tests.test_split.y",
    "sklearn.utils.fixes.comb",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_raise_message",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.test_cv_iterable_wrapper": {
  "data": {
   "lineno": 1224,
   "symbols_in_volume": [
    "AssertionError",
    "list",
    "numpy.testing.assert_equal",
    "sklearn.model_selection.KFold",
    "sklearn.model_selection.check_cv",
    "sklearn.model_selection.tests.test_split.X",
    "sklearn.model_selection.tests.test_split.y",
    "sklearn.utils.testing.assert_false"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.test_get_n_splits_for_repeated_kfold": {
  "data": {
   "lineno": 960,
   "symbols_in_volume": [
    "sklearn.model_selection.RepeatedKFold",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.test_get_n_splits_for_repeated_stratified_kfold": {
  "data": {
   "lineno": 968,
   "symbols_in_volume": [
    "sklearn.model_selection.RepeatedStratifiedKFold",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.test_group_kfold": {
  "data": {
   "lineno": 1250,
   "symbols_in_volume": [
    "DeprecationWarning",
    "ValueError",
    "abs",
    "enumerate",
    "len",
    "list",
    "next",
    "numpy.array",
    "numpy.asarray",
    "numpy.intersect1d",
    "numpy.ones",
    "numpy.random.RandomState",
    "numpy.unique",
    "numpy.zeros",
    "object",
    "sklearn.externals.six.moves.zip",
    "sklearn.model_selection.GroupKFold",
    "sklearn.model_selection.tests.test_split.X",
    "sklearn.model_selection.tests.test_split.warnings",
    "sklearn.model_selection.tests.test_split.y",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_greater_equal",
    "sklearn.utils.testing.assert_raises_regexp",
    "sum"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.test_group_shuffle_split": {
  "data": {
   "lineno": 776,
   "symbols_in_volume": [
    "abs",
    "len",
    "numpy.any",
    "numpy.asarray",
    "numpy.in1d",
    "numpy.intersect1d",
    "numpy.ones",
    "numpy.unique",
    "repr",
    "round",
    "sklearn.model_selection.GroupShuffleSplit",
    "sklearn.model_selection.tests.test_split.X",
    "sklearn.model_selection.tests.test_split.test_groups",
    "sklearn.model_selection.tests.test_split.y",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_false",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.test_groups": {
  "data": {
   "lineno": 70
  },
  "type": "constant"
 },
 "sklearn.model_selection.tests.test_split.test_kfold_balance": {
  "data": {
   "lineno": 407,
   "symbols_in_volume": [
    "len",
    "numpy.max",
    "numpy.min",
    "numpy.ones",
    "numpy.sum",
    "range",
    "sklearn.model_selection.KFold",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.test_kfold_can_detect_dependent_samples_on_digits": {
  "data": {
   "lineno": 504,
   "symbols_in_volume": [
    "sklearn.model_selection.KFold",
    "sklearn.model_selection.StratifiedKFold",
    "sklearn.model_selection.cross_val_score",
    "sklearn.model_selection.tests.test_split.X",
    "sklearn.model_selection.tests.test_split.digits",
    "sklearn.model_selection.tests.test_split.y",
    "sklearn.svm.SVC",
    "sklearn.utils.testing.assert_greater"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.test_kfold_indices": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": [
    "numpy.ones",
    "sklearn.model_selection.KFold",
    "sklearn.model_selection.tests.test_split.check_cv_coverage",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.test_kfold_no_shuffle": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": [
    "next",
    "sklearn.model_selection.KFold",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.test_kfold_valueerrors": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "Warning",
    "next",
    "numpy.array",
    "sklearn.model_selection.KFold",
    "sklearn.model_selection.StratifiedKFold",
    "sklearn.model_selection.tests.test_split.check_cv_coverage",
    "sklearn.model_selection.tests.test_split.warnings",
    "sklearn.model_selection.tests.test_split.y",
    "sklearn.utils.testing.assert_raise_message",
    "sklearn.utils.testing.assert_raises",
    "sklearn.utils.testing.assert_warns_message"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.test_leave_group_out_changing_groups": {
  "data": {
   "lineno": 871,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "numpy.ones",
    "sklearn.externals.six.moves.zip",
    "sklearn.model_selection.LeaveOneGroupOut",
    "sklearn.model_selection.LeavePGroupsOut",
    "sklearn.model_selection.tests.test_split.X",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.test_leave_one_p_group_out": {
  "data": {
   "lineno": 813,
   "symbols_in_volume": [
    "ValueError",
    "enumerate",
    "len",
    "numpy.arange",
    "numpy.asarray",
    "numpy.inf",
    "numpy.intersect1d",
    "numpy.nan",
    "numpy.ones",
    "numpy.unique",
    "repr",
    "sklearn.model_selection.LeaveOneGroupOut",
    "sklearn.model_selection.LeavePGroupsOut",
    "sklearn.model_selection.tests.test_split.X",
    "sklearn.model_selection.tests.test_split.test_groups",
    "sklearn.model_selection.tests.test_split.y",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_raise_message",
    "sklearn.utils.testing.assert_raises",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.test_leave_one_p_group_out_error_on_fewer_number_of_groups": {
  "data": {
   "lineno": 896,
   "symbols_in_volume": [
    "ValueError",
    "next",
    "numpy.arange",
    "numpy.ones",
    "sklearn.model_selection.LeaveOneGroupOut",
    "sklearn.model_selection.LeavePGroupsOut",
    "sklearn.model_selection.tests.test_split.X",
    "sklearn.model_selection.tests.test_split.y",
    "sklearn.utils.testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.test_nested_cv": {
  "data": {
   "lineno": 1402,
   "symbols_in_volume": [
    "itertools.combinations_with_replacement",
    "numpy.random.RandomState",
    "sklearn.datasets.make_classification",
    "sklearn.linear_model.Ridge",
    "sklearn.model_selection.GridSearchCV",
    "sklearn.model_selection.GroupKFold",
    "sklearn.model_selection.LeaveOneGroupOut",
    "sklearn.model_selection.LeaveOneOut",
    "sklearn.model_selection.StratifiedKFold",
    "sklearn.model_selection.StratifiedShuffleSplit",
    "sklearn.model_selection.cross_val_score",
    "sklearn.model_selection.tests.test_split.X",
    "sklearn.model_selection.tests.test_split.pytest",
    "sklearn.model_selection.tests.test_split.y"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.test_nsplit_default_warn": {
  "data": {
   "lineno": 1428,
   "symbols_in_volume": [
    "FutureWarning",
    "sklearn.model_selection.GroupKFold",
    "sklearn.model_selection.KFold",
    "sklearn.model_selection.StratifiedKFold",
    "sklearn.model_selection.TimeSeriesSplit",
    "sklearn.model_selection._split.NSPLIT_WARNING",
    "sklearn.utils.testing.assert_no_warnings",
    "sklearn.utils.testing.assert_warns_message"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.test_predefinedsplit_with_kfold_split": {
  "data": {
   "lineno": 755,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "numpy.full",
    "numpy.unique",
    "sklearn.model_selection.KFold",
    "sklearn.model_selection.PredefinedSplit",
    "sklearn.model_selection.tests.test_split.X",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.test_repeated_cv_value_errors": {
  "data": {
   "lineno": 921,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.model_selection.RepeatedKFold",
    "sklearn.model_selection.RepeatedStratifiedKFold",
    "sklearn.utils.testing.assert_raises",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.test_repeated_kfold_determinstic_split": {
  "data": {
   "lineno": 929,
   "symbols_in_volume": [
    "StopIteration",
    "next",
    "range",
    "sklearn.model_selection.RepeatedKFold",
    "sklearn.model_selection.tests.test_split.X",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.test_repeated_stratified_kfold_determinstic_split": {
  "data": {
   "lineno": 976,
   "symbols_in_volume": [
    "StopIteration",
    "next",
    "range",
    "sklearn.model_selection.RepeatedStratifiedKFold",
    "sklearn.model_selection.tests.test_split.X",
    "sklearn.model_selection.tests.test_split.y",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.test_shuffle_kfold": {
  "data": {
   "lineno": 438,
   "symbols_in_volume": [
    "itertools.combinations",
    "len",
    "numpy.intersect1d",
    "numpy.ones",
    "numpy.zeros",
    "sklearn.externals.six.moves.zip",
    "sklearn.model_selection.KFold",
    "sklearn.model_selection.tests.test_split.X",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_not_equal",
    "sum"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.test_shuffle_kfold_stratifiedkfold_reproducibility": {
  "data": {
   "lineno": 460,
   "symbols_in_volume": [
    "AssertionError",
    "list",
    "numpy.ones",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "sklearn.externals.six.moves.zip",
    "sklearn.model_selection.KFold",
    "sklearn.model_selection.StratifiedKFold",
    "sklearn.model_selection.tests.test_split.X",
    "sklearn.model_selection.tests.test_split.pytest",
    "sklearn.model_selection.tests.test_split.y"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.test_shuffle_split": {
  "data": {
   "lineno": 548,
   "symbols_in_volume": [
    "numpy.int32",
    "sklearn.externals.six.integer_types",
    "sklearn.externals.six.moves.zip",
    "sklearn.model_selection.ShuffleSplit",
    "sklearn.model_selection.tests.test_split.X",
    "sklearn.utils.testing.assert_array_equal",
    "typ"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.test_shuffle_stratifiedkfold": {
  "data": {
   "lineno": 491,
   "symbols_in_volume": [
    "numpy.ones",
    "set",
    "sklearn.externals.six.moves.zip",
    "sklearn.model_selection.StratifiedKFold",
    "sklearn.model_selection.tests.test_split.check_cv_coverage",
    "sklearn.model_selection.tests.test_split.y",
    "sklearn.utils.testing.assert_not_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.test_shufflesplit_errors": {
  "data": {
   "lineno": 1138,
   "symbols_in_volume": [
    "ValueError",
    "next",
    "sklearn.model_selection.ShuffleSplit",
    "sklearn.model_selection.tests.test_split.X",
    "sklearn.utils.testing.assert_raises",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.test_shufflesplit_reproducible": {
  "data": {
   "lineno": 1155,
   "symbols_in_volume": [
    "list",
    "sklearn.model_selection.ShuffleSplit",
    "sklearn.model_selection.tests.test_split.X",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.test_stratified_kfold_no_shuffle": {
  "data": {
   "lineno": 352,
   "symbols_in_volume": [
    "list",
    "next",
    "numpy.ones",
    "numpy.testing.assert_equal",
    "sklearn.model_selection.StratifiedKFold",
    "sklearn.model_selection.tests.test_split.X",
    "sklearn.model_selection.tests.test_split.y",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.test_stratified_kfold_ratios": {
  "data": {
   "lineno": 388,
   "symbols_in_volume": [
    "int",
    "len",
    "numpy.array",
    "numpy.ones",
    "numpy.sum",
    "sklearn.model_selection.StratifiedKFold",
    "sklearn.model_selection.tests.test_split.X",
    "sklearn.model_selection.tests.test_split.y",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.test_stratified_shuffle_split_even": {
  "data": {
   "lineno": 640,
   "symbols_in_volume": [
    "assert_counts_are_ok",
    "float",
    "id",
    "len",
    "numpy.array",
    "numpy.ones",
    "numpy.unique",
    "set",
    "sklearn.model_selection.StratifiedShuffleSplit",
    "sklearn.model_selection._split._validate_shuffle_split",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.test_stratified_shuffle_split_even.assert_counts_are_ok": {
  "data": {
   "lineno": 646,
   "symbols_in_volume": [
    "scipy.stats.binom",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.test_stratified_shuffle_split_init": {
  "data": {
   "lineno": 563,
   "symbols_in_volume": [
    "ValueError",
    "next",
    "numpy.arange",
    "numpy.asarray",
    "sklearn.model_selection.StratifiedShuffleSplit",
    "sklearn.model_selection.tests.test_split.X",
    "sklearn.model_selection.tests.test_split.y",
    "sklearn.utils.testing.assert_raises",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.test_stratified_shuffle_split_iter": {
  "data": {
   "lineno": 605,
   "symbols_in_volume": [
    "float",
    "len",
    "numpy.array",
    "numpy.asanyarray",
    "numpy.bincount",
    "numpy.ceil",
    "numpy.concatenate",
    "numpy.lib.arraysetops.intersect1d",
    "numpy.ones",
    "numpy.unique",
    "range",
    "sklearn.model_selection.StratifiedShuffleSplit",
    "sklearn.model_selection.tests.test_split.y",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.test_stratified_shuffle_split_multilabel": {
  "data": {
   "lineno": 709,
   "symbols_in_volume": [
    "len",
    "next",
    "numpy.arange",
    "numpy.array",
    "numpy.intersect1d",
    "numpy.mean",
    "numpy.ones_like",
    "numpy.union1d",
    "sklearn.model_selection.StratifiedShuffleSplit",
    "sklearn.model_selection.tests.test_split.X",
    "sklearn.model_selection.tests.test_split.y",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.test_stratified_shuffle_split_multilabel_many_labels": {
  "data": {
   "lineno": 732,
   "symbols_in_volume": [
    "next",
    "numpy.array",
    "numpy.mean",
    "numpy.ones_like",
    "sklearn.model_selection.StratifiedShuffleSplit",
    "sklearn.model_selection.tests.test_split.X",
    "sklearn.model_selection.tests.test_split.y",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.test_stratified_shuffle_split_overlap_train_test_bug": {
  "data": {
   "lineno": 691,
   "symbols_in_volume": [
    "len",
    "next",
    "numpy.arange",
    "numpy.intersect1d",
    "numpy.ones_like",
    "numpy.union1d",
    "sklearn.model_selection.StratifiedShuffleSplit",
    "sklearn.model_selection.tests.test_split.X",
    "sklearn.model_selection.tests.test_split.y",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.test_stratified_shuffle_split_respects_test_size": {
  "data": {
   "lineno": 594,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "numpy.ones",
    "sklearn.model_selection.StratifiedShuffleSplit",
    "sklearn.model_selection.tests.test_split.y",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.test_stratifiedkfold_balance": {
  "data": {
   "lineno": 419,
   "symbols_in_volume": [
    "len",
    "numpy.max",
    "numpy.min",
    "numpy.ones",
    "numpy.sum",
    "range",
    "sklearn.model_selection.StratifiedKFold",
    "sklearn.model_selection.tests.test_split.X",
    "sklearn.model_selection.tests.test_split.y",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.test_stratifiedshufflesplit_list_input": {
  "data": {
   "lineno": 1163,
   "symbols_in_volume": [
    "list",
    "numpy.hstack",
    "numpy.ones",
    "numpy.testing.assert_equal",
    "numpy.zeros",
    "sklearn.model_selection.StratifiedShuffleSplit",
    "sklearn.model_selection.tests.test_split.X"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.test_time_series_cv": {
  "data": {
   "lineno": 1341,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "list",
    "next",
    "sklearn.model_selection.TimeSeriesSplit",
    "sklearn.model_selection.tests.test_split.X",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_raises_regexp"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.test_time_series_max_train_size": {
  "data": {
   "lineno": 1387,
   "symbols_in_volume": [
    "numpy.zeros",
    "sklearn.model_selection.TimeSeriesSplit",
    "sklearn.model_selection.tests.test_split.X",
    "sklearn.model_selection.tests.test_split._check_time_series_max_train_size"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.test_train_test_default_warning": {
  "data": {
   "lineno": 1420,
   "symbols_in_volume": [
    "FutureWarning",
    "range",
    "sklearn.model_selection.GroupShuffleSplit",
    "sklearn.model_selection.ShuffleSplit",
    "sklearn.model_selection.StratifiedShuffleSplit",
    "sklearn.model_selection.train_test_split",
    "sklearn.utils.testing.assert_warns"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.test_train_test_split": {
  "data": {
   "lineno": 1031,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "list",
    "numpy.arange",
    "numpy.array",
    "numpy.sum",
    "scipy.sparse.coo_matrix",
    "sklearn.externals.six.moves.zip",
    "sklearn.model_selection.tests.test_split.X",
    "sklearn.model_selection.tests.test_split.y",
    "sklearn.model_selection.train_test_split",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.test_train_test_split_allow_nans": {
  "data": {
   "lineno": 1177,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.float64",
    "numpy.nan",
    "numpy.repeat",
    "sklearn.model_selection.tests.test_split.X",
    "sklearn.model_selection.tests.test_split.y",
    "sklearn.model_selection.train_test_split"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.test_train_test_split_errors": {
  "data": {
   "lineno": 1008,
   "symbols_in_volume": [
    "FutureWarning",
    "TypeError",
    "ValueError",
    "numpy.float32",
    "range",
    "sklearn.model_selection.tests.test_split.warnings",
    "sklearn.model_selection.train_test_split",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.train_test_split": {
  "data": {
   "shadows": "sklearn.model_selection.train_test_split"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_split.train_test_split_list_input": {
  "data": {
   "lineno": 1117,
   "symbols_in_volume": [
    "numpy.hstack",
    "numpy.ones",
    "numpy.testing.assert_equal",
    "numpy.zeros",
    "sklearn.model_selection.tests.test_split.X",
    "sklearn.model_selection.train_test_split"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.train_test_split_mock_pandas": {
  "data": {
   "lineno": 1108,
   "symbols_in_volume": [
    "isinstance",
    "sklearn.model_selection.tests.test_split.X",
    "sklearn.model_selection.train_test_split",
    "sklearn.utils.mocking.MockDataFrame",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.train_test_split_pandas": {
  "data": {
   "lineno": 1079,
   "symbols_in_volume": [
    "ImportError",
    "InputFeatureType",
    "isinstance",
    "pandas.DataFrame",
    "sklearn.model_selection.tests.test_split.X",
    "sklearn.model_selection.train_test_split",
    "sklearn.utils.mocking.MockDataFrame",
    "sklearn.utils.testing.assert_true",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.train_test_split_sparse": {
  "data": {
   "lineno": 1096,
   "symbols_in_volume": [
    "InputFeatureType",
    "isinstance",
    "numpy.arange",
    "scipy.sparse.coo_matrix",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "sklearn.model_selection.tests.test_split.X",
    "sklearn.model_selection.train_test_split",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_split.y": {
  "data": {
   "lineno": 68
  },
  "type": "constant"
 },
 "sklearn.model_selection.tests.test_split.zip": {
  "data": {
   "shadows": "sklearn.externals.six.moves.zip"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_validation": {
  "data": {
   "symbols_in_volume": [
    "NameError",
    "numpy.array",
    "numpy.eye",
    "numpy.ones",
    "scipy.sparse.coo_matrix",
    "sklearn.model_selection.tests.test_validation.X"
   ]
  },
  "type": "module"
 },
 "sklearn.model_selection.tests.test_validation.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_validation.CheckingClassifier": {
  "data": {
   "shadows": "sklearn.utils.mocking.CheckingClassifier"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_validation.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_validation.FailingClassifier": {
  "data": {
   "shadows": "sklearn.model_selection.tests.test_search.FailingClassifier"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_validation.FitFailedWarning": {
  "data": {
   "shadows": "sklearn.exceptions.FitFailedWarning"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_validation.GridSearchCV": {
  "data": {
   "shadows": "sklearn.model_selection.GridSearchCV"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_validation.GroupKFold": {
  "data": {
   "shadows": "sklearn.model_selection.GroupKFold"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_validation.GroupShuffleSplit": {
  "data": {
   "shadows": "sklearn.model_selection.GroupShuffleSplit"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_validation.KFold": {
  "data": {
   "shadows": "sklearn.model_selection.KFold"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_validation.KMeans": {
  "data": {
   "shadows": "sklearn.cluster.KMeans"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_validation.KNeighborsClassifier": {
  "data": {
   "shadows": "sklearn.neighbors.KNeighborsClassifier"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_validation.LabelEncoder": {
  "data": {
   "shadows": "sklearn.preprocessing.LabelEncoder"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_validation.LeaveOneGroupOut": {
  "data": {
   "shadows": "sklearn.model_selection.LeaveOneGroupOut"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_validation.LeaveOneOut": {
  "data": {
   "shadows": "sklearn.model_selection.LeaveOneOut"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_validation.LeavePGroupsOut": {
  "data": {
   "shadows": "sklearn.model_selection.LeavePGroupsOut"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_validation.LogisticRegression": {
  "data": {
   "shadows": "sklearn.linear_model.LogisticRegression"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_validation.MockClassifier": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "sklearn.model_selection.tests.test_validation.MockClassifier.__init__": {
  "data": {
   "lineno": 171
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.MockClassifier.fit": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "ValueError",
    "callback",
    "len",
    "numpy.unique",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.MockClassifier.get_params": {
  "data": {
   "lineno": 227
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.MockClassifier.predict": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.MockClassifier.score": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "numpy.abs"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.MockDataFrame": {
  "data": {
   "shadows": "sklearn.utils.mocking.MockDataFrame"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_validation.MockEstimatorWithParameter": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator"
   ]
  },
  "type": "class"
 },
 "sklearn.model_selection.tests.test_validation.MockEstimatorWithParameter.__init__": {
  "data": {
   "lineno": 134
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.MockEstimatorWithParameter._is_training_data": {
  "data": {
   "lineno": 149
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.MockEstimatorWithParameter.fit": {
  "data": {
   "lineno": 138
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.MockEstimatorWithParameter.predict": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.MockEstimatorWithParameter.score": {
  "data": {
   "lineno": 146
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.MockEstimatorWithSingleFitCallAllowed": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "sklearn.model_selection.tests.test_validation.MockEstimatorWithParameter"
   ]
  },
  "type": "class"
 },
 "sklearn.model_selection.tests.test_validation.MockEstimatorWithSingleFitCallAllowed.fit": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "hasattr",
    "sklearn.utils.testing.assert_false",
    "super",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.MockEstimatorWithSingleFitCallAllowed.predict": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.MockImprovingEstimator": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator"
   ]
  },
  "type": "class"
 },
 "sklearn.model_selection.tests.test_validation.MockImprovingEstimator.__init__": {
  "data": {
   "lineno": 93
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.MockImprovingEstimator._is_training_data": {
  "data": {
   "lineno": 113
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.MockImprovingEstimator.fit": {
  "data": {
   "lineno": 98
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.MockImprovingEstimator.predict": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.MockImprovingEstimator.score": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "float"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.MockIncrementalImprovingEstimator": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "sklearn.model_selection.tests.test_validation.MockImprovingEstimator"
   ]
  },
  "type": "class"
 },
 "sklearn.model_selection.tests.test_validation.MockIncrementalImprovingEstimator.__init__": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "sklearn.model_selection.tests.test_validation.MockIncrementalImprovingEstimator",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.MockIncrementalImprovingEstimator._is_training_data": {
  "data": {
   "lineno": 124
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.MockIncrementalImprovingEstimator.partial_fit": {
  "data": {
   "lineno": 127
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.OneTimeSplitter": {
  "data": {
   "shadows": "sklearn.model_selection.tests.common.OneTimeSplitter"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_validation.OneVsRestClassifier": {
  "data": {
   "shadows": "sklearn.multiclass.OneVsRestClassifier"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_validation.P_sparse": {
  "data": {
   "lineno": 239
  },
  "type": "constant"
 },
 "sklearn.model_selection.tests.test_validation.PassiveAggressiveClassifier": {
  "data": {
   "shadows": "sklearn.linear_model.PassiveAggressiveClassifier"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_validation.Pipeline": {
  "data": {
   "shadows": "sklearn.pipeline.Pipeline"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_validation.Ridge": {
  "data": {
   "shadows": "sklearn.linear_model.Ridge"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_validation.RidgeClassifier": {
  "data": {
   "shadows": "sklearn.linear_model.RidgeClassifier"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_validation.SGDClassifier": {
  "data": {
   "shadows": "sklearn.linear_model.SGDClassifier"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_validation.SVC": {
  "data": {
   "shadows": "sklearn.svm.SVC"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_validation.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_validation.SimpleImputer": {
  "data": {
   "shadows": "sklearn.impute.SimpleImputer"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_validation.StratifiedKFold": {
  "data": {
   "shadows": "sklearn.model_selection.StratifiedKFold"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_validation.StringIO": {
  "data": {
   "shadows": "sklearn.externals.six.moves.cStringIO"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_validation.WindowsError": {
  "data": {
   "lineno": 88
  },
  "type": "constant"
 },
 "sklearn.model_selection.tests.test_validation.X": {
  "data": {
   "lineno": 233
  },
  "type": "constant"
 },
 "sklearn.model_selection.tests.test_validation.X_sparse": {
  "data": {
   "lineno": 234
  },
  "type": "constant"
 },
 "sklearn.model_selection.tests.test_validation._check_is_permutation": {
  "data": {
   "shadows": "sklearn.model_selection._validation._check_is_permutation"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_validation._fit_and_score": {
  "data": {
   "shadows": "sklearn.model_selection._validation._fit_and_score"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_validation.accuracy_score": {
  "data": {
   "shadows": "sklearn.metrics.accuracy_score"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_validation.assert_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_validation.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_validation.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_validation.assert_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_validation.assert_false": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_false"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_validation.assert_greater": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_greater"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_validation.assert_less": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_less"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_validation.assert_no_warnings": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_no_warnings"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_validation.assert_raise_message": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raise_message"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_validation.assert_raises": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_validation.assert_raises_regex": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises_regex"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_validation.assert_true": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_true"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_validation.assert_warns": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_warns"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_validation.assert_warns_message": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_warns_message"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_validation.check_cross_val_predict_with_method": {
  "data": {
   "lineno": 1321,
   "symbols_in_volume": [
    "func",
    "getattr",
    "len",
    "numpy.zeros",
    "set",
    "sklearn.datasets.load_iris",
    "sklearn.model_selection.KFold",
    "sklearn.model_selection.cross_val_predict",
    "sklearn.model_selection.tests.test_validation.X",
    "sklearn.model_selection.tests.test_validation.y",
    "sklearn.utils.shuffle",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.check_cross_validate_multi_metric": {
  "data": {
   "lineno": 475,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "numpy.all",
    "numpy.ndarray",
    "set",
    "sklearn.metrics.make_scorer",
    "sklearn.metrics.r2_score",
    "sklearn.model_selection.cross_validate",
    "sklearn.model_selection.tests.test_validation.X",
    "sklearn.model_selection.tests.test_validation.y",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_true",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.check_cross_validate_single_metric": {
  "data": {
   "lineno": 430,
   "symbols_in_volume": [
    "dict",
    "enumerate",
    "isinstance",
    "len",
    "sklearn.model_selection.cross_validate",
    "sklearn.model_selection.tests.test_validation.X",
    "sklearn.model_selection.tests.test_validation.y",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.check_scoring": {
  "data": {
   "shadows": "sklearn.metrics.scorer.check_scoring"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_validation.clone": {
  "data": {
   "shadows": "sklearn.base.clone"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_validation.confusion_matrix": {
  "data": {
   "shadows": "sklearn.metrics.confusion_matrix"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_validation.coo_matrix": {
  "data": {
   "shadows": "scipy.sparse.coo_matrix"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_validation.cross_val_predict": {
  "data": {
   "shadows": "sklearn.model_selection.cross_val_predict"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_validation.cross_val_score": {
  "data": {
   "shadows": "sklearn.model_selection.cross_val_score"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_validation.cross_validate": {
  "data": {
   "shadows": "sklearn.model_selection.cross_validate"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_validation.csr_matrix": {
  "data": {
   "shadows": "scipy.sparse.csr_matrix"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_validation.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_validation.explained_variance_score": {
  "data": {
   "shadows": "sklearn.metrics.explained_variance_score"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_validation.get_expected_predictions": {
  "data": {
   "lineno": 1387,
   "symbols_in_volume": [
    "func",
    "getattr",
    "len",
    "numpy.finfo",
    "numpy.full",
    "numpy.zeros",
    "sklearn.model_selection.tests.test_validation.X",
    "sklearn.model_selection.tests.test_validation.y"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.learning_curve": {
  "data": {
   "shadows": "sklearn.model_selection.learning_curve"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_validation.load_boston": {
  "data": {
   "shadows": "sklearn.datasets.load_boston"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_validation.load_digits": {
  "data": {
   "shadows": "sklearn.datasets.load_digits"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_validation.load_iris": {
  "data": {
   "shadows": "sklearn.datasets.load_iris"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_validation.make_classification": {
  "data": {
   "shadows": "sklearn.datasets.make_classification"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_validation.make_multilabel_classification": {
  "data": {
   "shadows": "sklearn.datasets.make_multilabel_classification"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_validation.make_regression": {
  "data": {
   "shadows": "sklearn.datasets.make_regression"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_validation.make_scorer": {
  "data": {
   "shadows": "sklearn.metrics.make_scorer"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_validation.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_validation.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_validation.permutation_test_score": {
  "data": {
   "shadows": "sklearn.model_selection.permutation_test_score"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_validation.precision_recall_fscore_support": {
  "data": {
   "shadows": "sklearn.metrics.precision_recall_fscore_support"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_validation.precision_score": {
  "data": {
   "shadows": "sklearn.metrics.precision_score"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_validation.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_validation.r2_score": {
  "data": {
   "shadows": "sklearn.metrics.r2_score"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_validation.shuffle": {
  "data": {
   "shadows": "sklearn.utils.shuffle"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_validation.sleep": {
  "data": {
   "shadows": "time.sleep"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_validation.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_validation.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_validation.test_check_is_permutation": {
  "data": {
   "lineno": 1292,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.delete",
    "numpy.hstack",
    "numpy.random.RandomState",
    "sklearn.model_selection._validation._check_is_permutation",
    "sklearn.utils.testing.assert_false",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_cross_val_predict": {
  "data": {
   "lineno": 804,
   "symbols_in_volume": [
    "BadCV",
    "RuntimeWarning",
    "ValueError",
    "len",
    "numpy.median",
    "numpy.zeros_like",
    "scipy.sparse.coo_matrix",
    "sklearn.cluster.KMeans",
    "sklearn.datasets.load_boston",
    "sklearn.datasets.load_iris",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.linear_model.Ridge",
    "sklearn.model_selection.KFold",
    "sklearn.model_selection.LeaveOneOut",
    "sklearn.model_selection.cross_val_predict",
    "sklearn.model_selection.tests.test_validation.X",
    "sklearn.model_selection.tests.test_validation.pytest",
    "sklearn.model_selection.tests.test_validation.y",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_raises",
    "sklearn.utils.testing.assert_warns_message"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_cross_val_predict.BadCV": {
  "data": {
   "lineno": 839
  },
  "type": "class"
 },
 "sklearn.model_selection.tests.test_validation.test_cross_val_predict.BadCV.split": {
  "data": {
   "lineno": 840,
   "symbols_in_volume": [
    "numpy.array",
    "range"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_cross_val_predict_class_subset": {
  "data": {
   "lineno": 1407,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "numpy.repeat",
    "range",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.model_selection.KFold",
    "sklearn.model_selection.cross_val_predict",
    "sklearn.model_selection.tests.test_validation.X",
    "sklearn.model_selection.tests.test_validation.get_expected_predictions",
    "sklearn.model_selection.tests.test_validation.pytest",
    "sklearn.model_selection.tests.test_validation.y",
    "sklearn.preprocessing.LabelEncoder",
    "sklearn.utils.shuffle",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_cross_val_predict_decision_function_shape": {
  "data": {
   "lineno": 856,
   "symbols_in_volume": [
    "ValueError",
    "numpy.argsort",
    "sklearn.datasets.load_digits",
    "sklearn.datasets.load_iris",
    "sklearn.datasets.make_classification",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.linear_model.RidgeClassifier",
    "sklearn.model_selection.KFold",
    "sklearn.model_selection.cross_val_predict",
    "sklearn.model_selection.tests.test_validation.X",
    "sklearn.model_selection.tests.test_validation.pytest",
    "sklearn.model_selection.tests.test_validation.y",
    "sklearn.svm.SVC",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_raise_message",
    "sklearn.utils.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_cross_val_predict_input_types": {
  "data": {
   "lineno": 939,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "numpy.column_stack",
    "numpy.newaxis",
    "scipy.sparse.coo_matrix",
    "sklearn.datasets.load_iris",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.linear_model.Ridge",
    "sklearn.model_selection.cross_val_predict",
    "sklearn.model_selection.tests.test_validation.X",
    "sklearn.model_selection.tests.test_validation.X_sparse",
    "sklearn.model_selection.tests.test_validation.pytest",
    "sklearn.model_selection.tests.test_validation.y",
    "sklearn.utils.mocking.CheckingClassifier",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_cross_val_predict_method_checking": {
  "data": {
   "lineno": 1367,
   "symbols_in_volume": [
    "sklearn.linear_model.SGDClassifier",
    "sklearn.model_selection.tests.test_validation.check_cross_val_predict_with_method",
    "sklearn.model_selection.tests.test_validation.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_cross_val_predict_pandas": {
  "data": {
   "lineno": 987,
   "symbols_in_volume": [
    "ImportError",
    "InputFeatureType",
    "TargetType",
    "isinstance",
    "pandas.DataFrame",
    "pandas.Series",
    "sklearn.model_selection.cross_val_predict",
    "sklearn.model_selection.tests.test_validation.X",
    "sklearn.model_selection.tests.test_validation.pytest",
    "sklearn.model_selection.tests.test_validation.y2",
    "sklearn.utils.mocking.CheckingClassifier",
    "sklearn.utils.mocking.MockDataFrame"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_cross_val_predict_predict_log_proba_shape": {
  "data": {
   "lineno": 922,
   "symbols_in_volume": [
    "sklearn.datasets.load_iris",
    "sklearn.datasets.make_classification",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.model_selection.cross_val_predict",
    "sklearn.model_selection.tests.test_validation.X",
    "sklearn.model_selection.tests.test_validation.pytest",
    "sklearn.model_selection.tests.test_validation.y",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_cross_val_predict_predict_proba_shape": {
  "data": {
   "lineno": 905,
   "symbols_in_volume": [
    "sklearn.datasets.load_iris",
    "sklearn.datasets.make_classification",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.model_selection.cross_val_predict",
    "sklearn.model_selection.tests.test_validation.X",
    "sklearn.model_selection.tests.test_validation.pytest",
    "sklearn.model_selection.tests.test_validation.y",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_cross_val_predict_sparse_prediction": {
  "data": {
   "lineno": 1306,
   "symbols_in_volume": [
    "scipy.sparse.csr_matrix",
    "sklearn.datasets.make_multilabel_classification",
    "sklearn.model_selection.cross_val_predict",
    "sklearn.model_selection.tests.test_validation.X",
    "sklearn.model_selection.tests.test_validation.X_sparse",
    "sklearn.model_selection.tests.test_validation.y",
    "sklearn.multiclass.OneVsRestClassifier",
    "sklearn.svm.SVC",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_cross_val_predict_with_method": {
  "data": {
   "lineno": 1360,
   "symbols_in_volume": [
    "sklearn.linear_model.LogisticRegression",
    "sklearn.model_selection.tests.test_validation.check_cross_val_predict_with_method",
    "sklearn.model_selection.tests.test_validation.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_cross_val_score": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "list",
    "numpy.column_stack",
    "numpy.newaxis",
    "range",
    "sklearn.model_selection.cross_val_score",
    "sklearn.model_selection.tests.test_validation.MockClassifier",
    "sklearn.model_selection.tests.test_validation.X",
    "sklearn.model_selection.tests.test_validation.X_sparse",
    "sklearn.model_selection.tests.test_validation.pytest",
    "sklearn.model_selection.tests.test_validation.y2",
    "sklearn.utils.mocking.CheckingClassifier",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_cross_val_score_allow_nans": {
  "data": {
   "lineno": 775,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.float64",
    "numpy.nan",
    "numpy.repeat",
    "sklearn.impute.SimpleImputer",
    "sklearn.model_selection.cross_val_score",
    "sklearn.model_selection.tests.test_validation.MockClassifier",
    "sklearn.model_selection.tests.test_validation.X",
    "sklearn.model_selection.tests.test_validation.y",
    "sklearn.pipeline.Pipeline"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_cross_val_score_errors": {
  "data": {
   "lineno": 659,
   "symbols_in_volume": [
    "BrokenEstimator",
    "TypeError",
    "sklearn.model_selection.cross_val_score",
    "sklearn.model_selection.tests.test_validation.X",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_cross_val_score_errors.BrokenEstimator": {
  "data": {
   "lineno": 660
  },
  "type": "class"
 },
 "sklearn.model_selection.tests.test_validation.test_cross_val_score_fit_params": {
  "data": {
   "lineno": 610,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "numpy.eye",
    "numpy.full",
    "numpy.ones",
    "numpy.unique",
    "object",
    "scipy.sparse.coo_matrix",
    "sklearn.model_selection.cross_val_score",
    "sklearn.model_selection.tests.test_validation.MockClassifier",
    "sklearn.model_selection.tests.test_validation.P_sparse",
    "sklearn.model_selection.tests.test_validation.X",
    "sklearn.model_selection.tests.test_validation.pytest",
    "sklearn.model_selection.tests.test_validation.y"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_cross_val_score_fit_params.assert_fit_params": {
  "data": {
   "lineno": 624,
   "symbols_in_volume": [
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_cross_val_score_mask": {
  "data": {
   "lineno": 564,
   "symbols_in_volume": [
    "len",
    "numpy.bool",
    "numpy.zeros",
    "sklearn.datasets.load_iris",
    "sklearn.model_selection.KFold",
    "sklearn.model_selection.cross_val_score",
    "sklearn.model_selection.tests.test_validation.X",
    "sklearn.model_selection.tests.test_validation.y",
    "sklearn.svm.SVC",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_cross_val_score_multilabel": {
  "data": {
   "lineno": 787,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.metrics.make_scorer",
    "sklearn.metrics.precision_score",
    "sklearn.model_selection.cross_val_score",
    "sklearn.model_selection.tests.test_validation.X",
    "sklearn.model_selection.tests.test_validation.y",
    "sklearn.neighbors.KNeighborsClassifier",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_cross_val_score_pandas": {
  "data": {
   "lineno": 544,
   "symbols_in_volume": [
    "ImportError",
    "InputFeatureType",
    "TargetType",
    "isinstance",
    "pandas.DataFrame",
    "pandas.Series",
    "sklearn.model_selection.cross_val_score",
    "sklearn.model_selection.tests.test_validation.X",
    "sklearn.model_selection.tests.test_validation.pytest",
    "sklearn.model_selection.tests.test_validation.y2",
    "sklearn.utils.mocking.CheckingClassifier",
    "sklearn.utils.mocking.MockDataFrame"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_cross_val_score_precomputed": {
  "data": {
   "lineno": 583,
   "symbols_in_volume": [
    "ValueError",
    "numpy.dot",
    "sklearn.datasets.load_iris",
    "sklearn.model_selection.cross_val_score",
    "sklearn.model_selection.tests.test_validation.X",
    "sklearn.model_selection.tests.test_validation.pytest",
    "sklearn.model_selection.tests.test_validation.y",
    "sklearn.svm.SVC",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_cross_val_score_predict_groups": {
  "data": {
   "lineno": 524,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.datasets.make_classification",
    "sklearn.model_selection.GroupKFold",
    "sklearn.model_selection.GroupShuffleSplit",
    "sklearn.model_selection.LeaveOneGroupOut",
    "sklearn.model_selection.LeavePGroupsOut",
    "sklearn.model_selection.cross_val_predict",
    "sklearn.model_selection.cross_val_score",
    "sklearn.model_selection.tests.test_validation.X",
    "sklearn.model_selection.tests.test_validation.pytest",
    "sklearn.model_selection.tests.test_validation.y",
    "sklearn.svm.SVC",
    "sklearn.utils.testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_cross_val_score_score_func": {
  "data": {
   "lineno": 643,
   "symbols_in_volume": [
    "len",
    "sklearn.metrics.make_scorer",
    "sklearn.model_selection.cross_val_score",
    "sklearn.model_selection.tests.test_validation.MockClassifier",
    "sklearn.model_selection.tests.test_validation.X",
    "sklearn.model_selection.tests.test_validation.warnings",
    "sklearn.model_selection.tests.test_validation.y",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_cross_val_score_score_func.score_func": {
  "data": {
   "lineno": 647
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_cross_val_score_sparse_fit_params": {
  "data": {
   "lineno": 1007,
   "symbols_in_volume": [
    "numpy.eye",
    "numpy.ones",
    "scipy.sparse.coo_matrix",
    "sklearn.datasets.load_iris",
    "sklearn.model_selection.cross_val_score",
    "sklearn.model_selection.tests.test_validation.MockClassifier",
    "sklearn.model_selection.tests.test_validation.X",
    "sklearn.model_selection.tests.test_validation.pytest",
    "sklearn.model_selection.tests.test_validation.y",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_cross_val_score_with_score_func_classification": {
  "data": {
   "lineno": 666,
   "symbols_in_volume": [
    "sklearn.datasets.load_iris",
    "sklearn.model_selection.cross_val_score",
    "sklearn.svm.SVC",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_cross_val_score_with_score_func_regression": {
  "data": {
   "lineno": 687,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.datasets.make_regression",
    "sklearn.linear_model.Ridge",
    "sklearn.metrics.explained_variance_score",
    "sklearn.metrics.make_scorer",
    "sklearn.model_selection.cross_val_score",
    "sklearn.model_selection.tests.test_validation.X",
    "sklearn.model_selection.tests.test_validation.y",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_cross_validate": {
  "data": {
   "lineno": 366,
   "symbols_in_volume": [
    "mse_scorer",
    "numpy.array",
    "r2_scorer",
    "sklearn.base.clone",
    "sklearn.datasets.make_classification",
    "sklearn.datasets.make_regression",
    "sklearn.linear_model.Ridge",
    "sklearn.metrics.scorer.check_scoring",
    "sklearn.model_selection.KFold",
    "sklearn.model_selection.tests.test_validation.X",
    "sklearn.model_selection.tests.test_validation.check_cross_validate_multi_metric",
    "sklearn.model_selection.tests.test_validation.check_cross_validate_single_metric",
    "sklearn.model_selection.tests.test_validation.y",
    "sklearn.svm.SVC"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_cross_validate_invalid_scoring_param": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "sklearn.datasets.make_classification",
    "sklearn.metrics.accuracy_score",
    "sklearn.metrics.confusion_matrix",
    "sklearn.metrics.make_scorer",
    "sklearn.metrics.precision_recall_fscore_support",
    "sklearn.metrics.precision_score",
    "sklearn.model_selection.cross_validate",
    "sklearn.model_selection.tests.test_validation.MockClassifier",
    "sklearn.model_selection.tests.test_validation.X",
    "sklearn.model_selection.tests.test_validation.pytest",
    "sklearn.model_selection.tests.test_validation.y",
    "sklearn.svm.SVC",
    "sklearn.utils.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_cross_validate_many_jobs": {
  "data": {
   "lineno": 284,
   "symbols_in_volume": [
    "sklearn.datasets.load_iris",
    "sklearn.model_selection.GridSearchCV",
    "sklearn.model_selection.cross_validate",
    "sklearn.model_selection.tests.test_validation.X",
    "sklearn.model_selection.tests.test_validation.pytest",
    "sklearn.model_selection.tests.test_validation.y",
    "sklearn.svm.SVC"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_cross_validate_return_train_score_warn": {
  "data": {
   "lineno": 408,
   "symbols_in_volume": [
    "FutureWarning",
    "numpy.allclose",
    "sklearn.datasets.make_classification",
    "sklearn.model_selection.cross_validate",
    "sklearn.model_selection.tests.test_validation.MockClassifier",
    "sklearn.model_selection.tests.test_validation.X",
    "sklearn.model_selection.tests.test_validation.y",
    "sklearn.utils.testing.assert_no_warnings",
    "sklearn.utils.testing.assert_warns_message"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_fit_and_score": {
  "data": {
   "lineno": 1500,
   "symbols_in_volume": [
    "FutureWarning",
    "ValueError",
    "dict",
    "numpy.arange",
    "numpy.ones",
    "sklearn.exceptions.FitFailedWarning",
    "sklearn.model_selection._validation._fit_and_score",
    "sklearn.model_selection.cross_val_score",
    "sklearn.model_selection.cross_validate",
    "sklearn.model_selection.learning_curve",
    "sklearn.model_selection.tests.test_search.FailingClassifier",
    "sklearn.model_selection.tests.test_search.FailingClassifier.FAILING_PARAMETER",
    "sklearn.model_selection.tests.test_validation.X",
    "sklearn.model_selection.tests.test_validation.pytest",
    "sklearn.model_selection.tests.test_validation.y",
    "sklearn.model_selection.validation_curve",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_raise_message",
    "sklearn.utils.testing.assert_warns",
    "sklearn.utils.testing.assert_warns_message"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_gridsearchcv_cross_val_predict_with_method": {
  "data": {
   "lineno": 1376,
   "symbols_in_volume": [
    "sklearn.linear_model.LogisticRegression",
    "sklearn.model_selection.GridSearchCV",
    "sklearn.model_selection.tests.test_validation.check_cross_val_predict_with_method",
    "sklearn.model_selection.tests.test_validation.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_learning_curve": {
  "data": {
   "lineno": 1017,
   "symbols_in_volume": [
    "RuntimeError",
    "len",
    "numpy.linspace",
    "sklearn.datasets.make_classification",
    "sklearn.model_selection.KFold",
    "sklearn.model_selection.learning_curve",
    "sklearn.model_selection.tests.common.OneTimeSplitter",
    "sklearn.model_selection.tests.test_validation.MockImprovingEstimator",
    "sklearn.model_selection.tests.test_validation.X",
    "sklearn.model_selection.tests.test_validation.warnings",
    "sklearn.model_selection.tests.test_validation.y",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_learning_curve_batch_and_incremental_learning_are_equal": {
  "data": {
   "lineno": 1127,
   "symbols_in_volume": [
    "numpy.linspace",
    "sklearn.datasets.make_classification",
    "sklearn.linear_model.PassiveAggressiveClassifier",
    "sklearn.model_selection.learning_curve",
    "sklearn.model_selection.tests.test_validation.X",
    "sklearn.model_selection.tests.test_validation.y",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_learning_curve_incremental_learning": {
  "data": {
   "lineno": 1096,
   "symbols_in_volume": [
    "numpy.linspace",
    "sklearn.datasets.make_classification",
    "sklearn.model_selection.learning_curve",
    "sklearn.model_selection.tests.test_validation.MockIncrementalImprovingEstimator",
    "sklearn.model_selection.tests.test_validation.X",
    "sklearn.model_selection.tests.test_validation.y",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_learning_curve_incremental_learning_not_possible": {
  "data": {
   "lineno": 1086,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.datasets.make_classification",
    "sklearn.model_selection.learning_curve",
    "sklearn.model_selection.tests.test_validation.MockImprovingEstimator",
    "sklearn.model_selection.tests.test_validation.X",
    "sklearn.model_selection.tests.test_validation.y",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_learning_curve_incremental_learning_unsupervised": {
  "data": {
   "lineno": 1112,
   "symbols_in_volume": [
    "numpy.linspace",
    "sklearn.datasets.make_classification",
    "sklearn.model_selection.learning_curve",
    "sklearn.model_selection.tests.test_validation.MockIncrementalImprovingEstimator",
    "sklearn.model_selection.tests.test_validation.X",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_learning_curve_n_sample_range_out_of_bounds": {
  "data": {
   "lineno": 1151,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.datasets.make_classification",
    "sklearn.model_selection.learning_curve",
    "sklearn.model_selection.tests.test_validation.MockImprovingEstimator",
    "sklearn.model_selection.tests.test_validation.X",
    "sklearn.model_selection.tests.test_validation.y",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_learning_curve_remove_duplicate_sample_sizes": {
  "data": {
   "lineno": 1168,
   "symbols_in_volume": [
    "RuntimeWarning",
    "numpy.linspace",
    "sklearn.datasets.make_classification",
    "sklearn.model_selection.learning_curve",
    "sklearn.model_selection.tests.test_validation.MockImprovingEstimator",
    "sklearn.model_selection.tests.test_validation.X",
    "sklearn.model_selection.tests.test_validation.y",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_warns"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_learning_curve_unsupervised": {
  "data": {
   "lineno": 1053,
   "symbols_in_volume": [
    "numpy.linspace",
    "sklearn.datasets.make_classification",
    "sklearn.model_selection.learning_curve",
    "sklearn.model_selection.tests.test_validation.MockImprovingEstimator",
    "sklearn.model_selection.tests.test_validation.X",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_learning_curve_verbose": {
  "data": {
   "lineno": 1067,
   "symbols_in_volume": [
    "sklearn.datasets.make_classification",
    "sklearn.externals.six.moves.cStringIO",
    "sklearn.model_selection.learning_curve",
    "sklearn.model_selection.tests.test_validation.MockImprovingEstimator",
    "sklearn.model_selection.tests.test_validation.X",
    "sklearn.model_selection.tests.test_validation.sys",
    "sklearn.model_selection.tests.test_validation.y"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_learning_curve_with_boolean_indices": {
  "data": {
   "lineno": 1179,
   "symbols_in_volume": [
    "numpy.linspace",
    "sklearn.datasets.make_classification",
    "sklearn.model_selection.KFold",
    "sklearn.model_selection.learning_curve",
    "sklearn.model_selection.tests.test_validation.MockImprovingEstimator",
    "sklearn.model_selection.tests.test_validation.X",
    "sklearn.model_selection.tests.test_validation.y",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_learning_curve_with_shuffle": {
  "data": {
   "lineno": 1194,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "numpy.linspace",
    "sklearn.linear_model.PassiveAggressiveClassifier",
    "sklearn.model_selection.GroupKFold",
    "sklearn.model_selection.learning_curve",
    "sklearn.model_selection.tests.test_validation.X",
    "sklearn.model_selection.tests.test_validation.y",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_permutation_score": {
  "data": {
   "lineno": 713,
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "numpy.mod",
    "numpy.ones",
    "scipy.sparse.coo_matrix",
    "sklearn.datasets.load_iris",
    "sklearn.metrics.make_scorer",
    "sklearn.model_selection.StratifiedKFold",
    "sklearn.model_selection.permutation_test_score",
    "sklearn.model_selection.tests.test_validation.X",
    "sklearn.model_selection.tests.test_validation.X_sparse",
    "sklearn.model_selection.tests.test_validation.y",
    "sklearn.svm.SVC",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_greater",
    "sklearn.utils.testing.assert_less",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_permutation_score.custom_score": {
  "data": {
   "lineno": 743
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_permutation_test_score_allow_nans": {
  "data": {
   "lineno": 763,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.float64",
    "numpy.nan",
    "numpy.repeat",
    "sklearn.impute.SimpleImputer",
    "sklearn.model_selection.permutation_test_score",
    "sklearn.model_selection.tests.test_validation.MockClassifier",
    "sklearn.model_selection.tests.test_validation.X",
    "sklearn.model_selection.tests.test_validation.y",
    "sklearn.pipeline.Pipeline"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_permutation_test_score_pandas": {
  "data": {
   "lineno": 1479,
   "symbols_in_volume": [
    "ImportError",
    "InputFeatureType",
    "TargetType",
    "isinstance",
    "pandas.DataFrame",
    "pandas.Series",
    "sklearn.datasets.load_iris",
    "sklearn.model_selection.permutation_test_score",
    "sklearn.model_selection.tests.test_validation.X",
    "sklearn.model_selection.tests.test_validation.pytest",
    "sklearn.model_selection.tests.test_validation.y",
    "sklearn.utils.mocking.CheckingClassifier",
    "sklearn.utils.mocking.MockDataFrame"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_score_memmap": {
  "data": {
   "lineno": 1451,
   "symbols_in_volume": [
    "ValueError",
    "numpy.float64",
    "numpy.memmap",
    "range",
    "sklearn.datasets.load_iris",
    "sklearn.model_selection.cross_val_score",
    "sklearn.model_selection.tests.test_validation.MockClassifier",
    "sklearn.model_selection.tests.test_validation.WindowsError",
    "sklearn.model_selection.tests.test_validation.X",
    "sklearn.model_selection.tests.test_validation.os",
    "sklearn.model_selection.tests.test_validation.pytest",
    "sklearn.model_selection.tests.test_validation.tempfile",
    "sklearn.model_selection.tests.test_validation.y",
    "sklearn.utils.testing.assert_raises",
    "time.sleep"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_validation_curve": {
  "data": {
   "lineno": 1229,
   "symbols_in_volume": [
    "RuntimeError",
    "len",
    "numpy.linspace",
    "sklearn.datasets.make_classification",
    "sklearn.model_selection.tests.test_validation.MockEstimatorWithParameter",
    "sklearn.model_selection.tests.test_validation.X",
    "sklearn.model_selection.tests.test_validation.warnings",
    "sklearn.model_selection.tests.test_validation.y",
    "sklearn.model_selection.validation_curve",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_validation_curve_clone_estimator": {
  "data": {
   "lineno": 1246,
   "symbols_in_volume": [
    "numpy.linspace",
    "sklearn.datasets.make_classification",
    "sklearn.model_selection.tests.test_validation.MockEstimatorWithSingleFitCallAllowed",
    "sklearn.model_selection.tests.test_validation.X",
    "sklearn.model_selection.tests.test_validation.y",
    "sklearn.model_selection.validation_curve"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_validation_curve_cv_splits_consistency": {
  "data": {
   "lineno": 1258,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.hstack",
    "numpy.vsplit",
    "sklearn.datasets.make_classification",
    "sklearn.model_selection.KFold",
    "sklearn.model_selection.tests.common.OneTimeSplitter",
    "sklearn.model_selection.tests.test_validation.X",
    "sklearn.model_selection.tests.test_validation.y",
    "sklearn.model_selection.validation_curve",
    "sklearn.svm.SVC",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.validation_curve": {
  "data": {
   "shadows": "sklearn.model_selection.validation_curve"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_validation.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.model_selection.tests.test_validation.y": {
  "data": {
   "lineno": 235
  },
  "type": "constant"
 },
 "sklearn.model_selection.tests.test_validation.y2": {
  "data": {
   "lineno": 238
  },
  "type": "constant"
 },
 "sklearn.multiclass": {
  "data": {},
  "type": "module"
 },
 "sklearn.multiclass.OneVsOneClassifier": {
  "data": {
   "lineno": 438
  },
  "type": "class"
 },
 "sklearn.multiclass.OneVsOneClassifier.__init__": {
  "data": {
   "lineno": 474
  },
  "type": "function"
 },
 "sklearn.multiclass.OneVsOneClassifier._pairwise": {
  "data": {
   "lineno": 627,
   "symbols_in_volume": [
    "getattr",
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.multiclass.OneVsOneClassifier.decision_function": {
  "data": {
   "lineno": 589,
   "symbols_in_volume": [
    "_ovr_decision_function",
    "check_is_fitted",
    "len",
    "numpy.vstack",
    "sklearn.multiclass._predict_binary",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.multiclass.OneVsOneClassifier.fit": {
  "data": {
   "lineno": 478,
   "symbols_in_volume": [
    "AttributeError",
    "Parallel",
    "ValueError",
    "check_X_y",
    "check_classification_targets",
    "delayed",
    "len",
    "list",
    "numpy.unique",
    "range",
    "sklearn.multiclass._fit_ovo_binary",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.multiclass.OneVsOneClassifier.n_classes_": {
  "data": {
   "lineno": 623,
   "symbols_in_volume": [
    "len",
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.multiclass.OneVsOneClassifier.partial_fit": {
  "data": {
   "lineno": 515,
   "symbols_in_volume": [
    "Parallel",
    "ValueError",
    "_check_partial_fit_first_call",
    "check_X_y",
    "check_classification_targets",
    "clone",
    "delayed",
    "if_delegate_has_method",
    "len",
    "numpy.setdiff1d",
    "numpy.unique",
    "range",
    "sklearn.multiclass._partial_fit_ovo_binary",
    "sklearn.multiclass.itertools",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.multiclass.OneVsOneClassifier.predict": {
  "data": {
   "lineno": 567,
   "symbols_in_volume": [
    "numpy.int"
   ]
  },
  "type": "function"
 },
 "sklearn.multiclass.OneVsRestClassifier": {
  "data": {
   "lineno": 133
  },
  "type": "class"
 },
 "sklearn.multiclass.OneVsRestClassifier.__init__": {
  "data": {
   "lineno": 179
  },
  "type": "function"
 },
 "sklearn.multiclass.OneVsRestClassifier._first_estimator": {
  "data": {
   "lineno": 408,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.multiclass.OneVsRestClassifier._pairwise": {
  "data": {
   "lineno": 403,
   "symbols_in_volume": [
    "getattr",
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.multiclass.OneVsRestClassifier.coef_": {
  "data": {
   "lineno": 384,
   "symbols_in_volume": [
    "AttributeError",
    "check_is_fitted",
    "hasattr",
    "numpy.vstack",
    "property",
    "scipy.sparse.issparse",
    "scipy.sparse.vstack"
   ]
  },
  "type": "function"
 },
 "sklearn.multiclass.OneVsRestClassifier.decision_function": {
  "data": {
   "lineno": 355,
   "symbols_in_volume": [
    "check_is_fitted",
    "if_delegate_has_method",
    "len",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "sklearn.multiclass.OneVsRestClassifier.fit": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "LabelBinarizer",
    "Parallel",
    "delayed",
    "enumerate",
    "sklearn.multiclass._fit_binary"
   ]
  },
  "type": "function"
 },
 "sklearn.multiclass.OneVsRestClassifier.intercept_": {
  "data": {
   "lineno": 395,
   "symbols_in_volume": [
    "AttributeError",
    "check_is_fitted",
    "hasattr",
    "numpy.array",
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.multiclass.OneVsRestClassifier.multilabel_": {
  "data": {
   "lineno": 375,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.multiclass.OneVsRestClassifier.n_classes_": {
  "data": {
   "lineno": 380,
   "symbols_in_volume": [
    "len",
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.multiclass.OneVsRestClassifier.partial_fit": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "LabelBinarizer",
    "Parallel",
    "ValueError",
    "_check_partial_fit_first_call",
    "clone",
    "delayed",
    "hasattr",
    "if_delegate_has_method",
    "len",
    "numpy.setdiff1d",
    "numpy.unique",
    "range",
    "sklearn.multiclass._partial_fit_binary",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.multiclass.OneVsRestClassifier.predict": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "_num_samples",
    "check_is_fitted",
    "enumerate",
    "float",
    "hasattr",
    "int",
    "is_classifier",
    "len",
    "numpy.array",
    "numpy.empty",
    "numpy.inf",
    "numpy.maximum",
    "numpy.ones",
    "numpy.where",
    "numpy.zeros",
    "scipy.sparse.csc_matrix",
    "sklearn.multiclass._predict_binary",
    "sklearn.multiclass.array"
   ]
  },
  "type": "function"
 },
 "sklearn.multiclass.OneVsRestClassifier.predict_proba": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": [
    "check_is_fitted",
    "if_delegate_has_method",
    "len",
    "numpy.array",
    "numpy.concatenate",
    "numpy.newaxis",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "sklearn.multiclass.OutputCodeClassifier": {
  "data": {
   "lineno": 633
  },
  "type": "class"
 },
 "sklearn.multiclass.OutputCodeClassifier.__init__": {
  "data": {
   "lineno": 701
  },
  "type": "function"
 },
 "sklearn.multiclass.OutputCodeClassifier.fit": {
  "data": {
   "lineno": 708,
   "symbols_in_volume": [
    "Parallel",
    "ValueError",
    "check_X_y",
    "check_classification_targets",
    "check_random_state",
    "delayed",
    "dict",
    "enumerate",
    "hasattr",
    "int",
    "numpy.array",
    "numpy.int",
    "numpy.unique",
    "range",
    "sklearn.multiclass._check_estimator",
    "sklearn.multiclass._fit_binary"
   ]
  },
  "type": "function"
 },
 "sklearn.multiclass.OutputCodeClassifier.predict": {
  "data": {
   "lineno": 757,
   "symbols_in_volume": [
    "check_array",
    "check_is_fitted",
    "euclidean_distances",
    "numpy.array",
    "sklearn.multiclass._predict_binary"
   ]
  },
  "type": "function"
 },
 "sklearn.multiclass._ConstantPredictor": {
  "data": {
   "lineno": 110
  },
  "type": "class"
 },
 "sklearn.multiclass._ConstantPredictor.decision_function": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "check_is_fitted",
    "numpy.repeat"
   ]
  },
  "type": "function"
 },
 "sklearn.multiclass._ConstantPredictor.fit": {
  "data": {
   "lineno": 112
  },
  "type": "function"
 },
 "sklearn.multiclass._ConstantPredictor.predict": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "check_is_fitted",
    "numpy.repeat"
   ]
  },
  "type": "function"
 },
 "sklearn.multiclass._ConstantPredictor.predict_proba": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "check_is_fitted",
    "numpy.hstack",
    "numpy.repeat"
   ]
  },
  "type": "function"
 },
 "sklearn.multiclass.__all__": {
  "data": {
   "lineno": 59
  },
  "type": "constant"
 },
 "sklearn.multiclass._check_estimator": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "ValueError",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "sklearn.multiclass._fit_binary": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "clone",
    "len",
    "numpy.unique",
    "sklearn.multiclass._ConstantPredictor",
    "sklearn.multiclass.warnings",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.multiclass._fit_ovo_binary": {
  "data": {
   "lineno": 413,
   "symbols_in_volume": [
    "_safe_split",
    "numpy.arange",
    "numpy.empty",
    "numpy.int",
    "numpy.logical_or",
    "sklearn.multiclass._fit_binary"
   ]
  },
  "type": "function"
 },
 "sklearn.multiclass._partial_fit_binary": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "sklearn.multiclass._partial_fit_ovo_binary": {
  "data": {
   "lineno": 426,
   "symbols_in_volume": [
    "len",
    "numpy.logical_or",
    "numpy.zeros_like",
    "sklearn.multiclass._partial_fit_binary"
   ]
  },
  "type": "function"
 },
 "sklearn.multiclass._predict_binary": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "AttributeError",
    "NotImplementedError",
    "is_regressor",
    "numpy.ravel"
   ]
  },
  "type": "function"
 },
 "sklearn.multiclass.array": {
  "data": {
   "shadows": "array"
  },
  "type": "import"
 },
 "sklearn.multiclass.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "sklearn.multiclass.izip": {
  "data": {
   "shadows": "zip"
  },
  "type": "import"
 },
 "sklearn.multiclass.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.multiclass.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.multiclass.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.multioutput": {
  "data": {},
  "type": "module"
 },
 "sklearn.multioutput.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "sklearn.multioutput.ClassifierChain": {
  "data": {
   "lineno": 476,
   "symbols_in_volume": [
    "sklearn.multioutput._BaseChain"
   ]
  },
  "type": "class"
 },
 "sklearn.multioutput.ClassifierChain.decision_function": {
  "data": {
   "lineno": 600,
   "symbols_in_volume": [
    "enumerate",
    "if_delegate_has_method",
    "len",
    "numpy.arange",
    "numpy.empty_like",
    "numpy.hstack",
    "numpy.zeros",
    "scipy.sparse.hstack",
    "scipy.sparse.issparse"
   ]
  },
  "type": "function"
 },
 "sklearn.multioutput.ClassifierChain.fit": {
  "data": {
   "lineno": 551,
   "symbols_in_volume": [
    "enumerate",
    "sklearn.multioutput.ClassifierChain",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.multioutput.ClassifierChain.predict_proba": {
  "data": {
   "lineno": 571,
   "symbols_in_volume": [
    "check_array",
    "enumerate",
    "if_delegate_has_method",
    "len",
    "numpy.arange",
    "numpy.empty_like",
    "numpy.hstack",
    "numpy.zeros",
    "scipy.sparse.hstack",
    "scipy.sparse.issparse"
   ]
  },
  "type": "function"
 },
 "sklearn.multioutput.MultiOutputClassifier": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "sklearn.multioutput.MultiOutputEstimator"
   ]
  },
  "type": "class"
 },
 "sklearn.multioutput.MultiOutputClassifier.__init__": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": [
    "sklearn.multioutput.MultiOutputClassifier",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.multioutput.MultiOutputClassifier.predict_proba": {
  "data": {
   "lineno": 317,
   "symbols_in_volume": [
    "ValueError",
    "check_is_fitted",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "sklearn.multioutput.MultiOutputClassifier.score": {
  "data": {
   "lineno": 342,
   "symbols_in_volume": [
    "ValueError",
    "check_is_fitted",
    "len",
    "numpy.all",
    "numpy.mean"
   ]
  },
  "type": "function"
 },
 "sklearn.multioutput.MultiOutputEstimator": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "abc.ABCMeta"
   ]
  },
  "type": "class"
 },
 "sklearn.multioutput.MultiOutputEstimator.__init__": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "sklearn.multioutput.MultiOutputEstimator.fit": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "Parallel",
    "ValueError",
    "check_X_y",
    "check_classification_targets",
    "delayed",
    "has_fit_parameter",
    "hasattr",
    "is_classifier",
    "range",
    "sklearn.multioutput._fit_estimator"
   ]
  },
  "type": "function"
 },
 "sklearn.multioutput.MultiOutputEstimator.partial_fit": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "Parallel",
    "ValueError",
    "check_X_y",
    "delayed",
    "has_fit_parameter",
    "hasattr",
    "if_delegate_has_method",
    "range",
    "sklearn.multioutput._partial_fit_estimator"
   ]
  },
  "type": "function"
 },
 "sklearn.multioutput.MultiOutputEstimator.predict": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "Parallel",
    "ValueError",
    "check_array",
    "check_is_fitted",
    "delayed",
    "hasattr",
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "sklearn.multioutput.MultiOutputRegressor": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "sklearn.multioutput.MultiOutputEstimator"
   ]
  },
  "type": "class"
 },
 "sklearn.multioutput.MultiOutputRegressor.__init__": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "sklearn.multioutput.MultiOutputRegressor",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.multioutput.MultiOutputRegressor.partial_fit": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "if_delegate_has_method",
    "sklearn.multioutput.MultiOutputRegressor",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.multioutput.MultiOutputRegressor.score": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "r2_score"
   ]
  },
  "type": "function"
 },
 "sklearn.multioutput.RegressorChain": {
  "data": {
   "lineno": 632,
   "symbols_in_volume": [
    "sklearn.multioutput._BaseChain"
   ]
  },
  "type": "class"
 },
 "sklearn.multioutput.RegressorChain.fit": {
  "data": {
   "lineno": 697,
   "symbols_in_volume": [
    "sklearn.multioutput.RegressorChain",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.multioutput._BaseChain": {
  "data": {
   "lineno": 371,
   "symbols_in_volume": [
    "abc.ABCMeta"
   ]
  },
  "type": "class"
 },
 "sklearn.multioutput._BaseChain.__init__": {
  "data": {
   "lineno": 372
  },
  "type": "function"
 },
 "sklearn.multioutput._BaseChain.fit": {
  "data": {
   "lineno": 378,
   "symbols_in_volume": [
    "ValueError",
    "abc.abstractmethod",
    "check_X_y",
    "check_array",
    "check_random_state",
    "clone",
    "cross_val_predict",
    "enumerate",
    "isinstance",
    "len",
    "list",
    "numpy.array",
    "numpy.expand_dims",
    "numpy.hstack",
    "numpy.zeros",
    "range",
    "scipy.sparse.hstack",
    "scipy.sparse.issparse",
    "scipy.sparse.lil_matrix",
    "sorted",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.multioutput._BaseChain.predict": {
  "data": {
   "lineno": 442,
   "symbols_in_volume": [
    "check_array",
    "enumerate",
    "len",
    "numpy.arange",
    "numpy.empty_like",
    "numpy.hstack",
    "numpy.zeros",
    "scipy.sparse.hstack",
    "scipy.sparse.issparse"
   ]
  },
  "type": "function"
 },
 "sklearn.multioutput.__all__": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "sklearn.multioutput._fit_estimator": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "clone"
   ]
  },
  "type": "function"
 },
 "sklearn.multioutput._partial_fit_estimator": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "clone"
   ]
  },
  "type": "function"
 },
 "sklearn.multioutput.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "sklearn.multioutput.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.multioutput.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.naive_bayes": {
  "data": {},
  "type": "module"
 },
 "sklearn.naive_bayes.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "sklearn.naive_bayes.BaseDiscreteNB": {
  "data": {
   "lineno": 447,
   "symbols_in_volume": [
    "property",
    "sklearn.naive_bayes.BaseNB"
   ]
  },
  "type": "class"
 },
 "sklearn.naive_bayes.BaseDiscreteNB._check_alpha": {
  "data": {
   "lineno": 470,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "numpy.maximum",
    "numpy.min",
    "numpy.ndarray",
    "sklearn.naive_bayes._ALPHA_MIN",
    "sklearn.naive_bayes.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.naive_bayes.BaseDiscreteNB._get_coef": {
  "data": {
   "lineno": 618,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "sklearn.naive_bayes.BaseDiscreteNB._get_intercept": {
  "data": {
   "lineno": 622,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "sklearn.naive_bayes.BaseDiscreteNB._update_class_log_prior": {
  "data": {
   "lineno": 456,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.full",
    "numpy.log"
   ]
  },
  "type": "function"
 },
 "sklearn.naive_bayes.BaseDiscreteNB.fit": {
  "data": {
   "lineno": 566,
   "symbols_in_volume": [
    "LabelBinarizer",
    "check_X_y",
    "check_array",
    "numpy.atleast_2d",
    "numpy.concatenate",
    "numpy.float64",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "sklearn.naive_bayes.BaseDiscreteNB.partial_fit": {
  "data": {
   "lineno": 484,
   "symbols_in_volume": [
    "ValueError",
    "_check_partial_fit_first_call",
    "check_array",
    "label_binarize",
    "len",
    "numpy.atleast_2d",
    "numpy.concatenate",
    "numpy.float64",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "sklearn.naive_bayes.BaseNB": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "abc.ABCMeta"
   ]
  },
  "type": "class"
 },
 "sklearn.naive_bayes.BaseNB._joint_log_likelihood": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "sklearn.naive_bayes.BaseNB.predict": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "numpy.argmax"
   ]
  },
  "type": "function"
 },
 "sklearn.naive_bayes.BaseNB.predict_log_proba": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "logsumexp",
    "numpy.atleast_2d"
   ]
  },
  "type": "function"
 },
 "sklearn.naive_bayes.BaseNB.predict_proba": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "numpy.exp"
   ]
  },
  "type": "function"
 },
 "sklearn.naive_bayes.BernoulliNB": {
  "data": {
   "lineno": 839,
   "symbols_in_volume": [
    "sklearn.naive_bayes.BaseDiscreteNB"
   ]
  },
  "type": "class"
 },
 "sklearn.naive_bayes.BernoulliNB.__init__": {
  "data": {
   "lineno": 910
  },
  "type": "function"
 },
 "sklearn.naive_bayes.BernoulliNB._count": {
  "data": {
   "lineno": 917,
   "symbols_in_volume": [
    "binarize",
    "safe_sparse_dot"
   ]
  },
  "type": "function"
 },
 "sklearn.naive_bayes.BernoulliNB._joint_log_likelihood": {
  "data": {
   "lineno": 932,
   "symbols_in_volume": [
    "ValueError",
    "binarize",
    "check_array",
    "check_is_fitted",
    "numpy.exp",
    "numpy.log",
    "safe_sparse_dot"
   ]
  },
  "type": "function"
 },
 "sklearn.naive_bayes.BernoulliNB._update_feature_log_prob": {
  "data": {
   "lineno": 924,
   "symbols_in_volume": [
    "numpy.log"
   ]
  },
  "type": "function"
 },
 "sklearn.naive_bayes.ComplementNB": {
  "data": {
   "lineno": 735,
   "symbols_in_volume": [
    "sklearn.naive_bayes.BaseDiscreteNB"
   ]
  },
  "type": "class"
 },
 "sklearn.naive_bayes.ComplementNB.__init__": {
  "data": {
   "lineno": 802
  },
  "type": "function"
 },
 "sklearn.naive_bayes.ComplementNB._count": {
  "data": {
   "lineno": 809,
   "symbols_in_volume": [
    "ValueError",
    "numpy.any",
    "safe_sparse_dot",
    "scipy.sparse.issparse"
   ]
  },
  "type": "function"
 },
 "sklearn.naive_bayes.ComplementNB._joint_log_likelihood": {
  "data": {
   "lineno": 828,
   "symbols_in_volume": [
    "check_array",
    "check_is_fitted",
    "len",
    "safe_sparse_dot"
   ]
  },
  "type": "function"
 },
 "sklearn.naive_bayes.ComplementNB._update_feature_log_prob": {
  "data": {
   "lineno": 817,
   "symbols_in_volume": [
    "numpy.log"
   ]
  },
  "type": "function"
 },
 "sklearn.naive_bayes.GaussianNB": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "sklearn.naive_bayes.BaseNB"
   ]
  },
  "type": "class"
 },
 "sklearn.naive_bayes.GaussianNB.__init__": {
  "data": {
   "lineno": 164
  },
  "type": "function"
 },
 "sklearn.naive_bayes.GaussianNB._joint_log_likelihood": {
  "data": {
   "lineno": 429,
   "symbols_in_volume": [
    "check_array",
    "check_is_fitted",
    "numpy.array",
    "numpy.log",
    "numpy.pi",
    "numpy.size",
    "numpy.sum",
    "range"
   ]
  },
  "type": "function"
 },
 "sklearn.naive_bayes.GaussianNB._partial_fit": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "ValueError",
    "_check_partial_fit_first_call",
    "check_X_y",
    "check_array",
    "check_consistent_length",
    "len",
    "numpy.all",
    "numpy.asarray",
    "numpy.float64",
    "numpy.in1d",
    "numpy.isclose",
    "numpy.unique",
    "numpy.var",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "sklearn.naive_bayes.GaussianNB._update_mean_variance": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "float",
    "numpy.average",
    "numpy.mean",
    "numpy.var",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "sklearn.naive_bayes.GaussianNB.fit": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "check_X_y",
    "numpy.unique"
   ]
  },
  "type": "function"
 },
 "sklearn.naive_bayes.GaussianNB.partial_fit": {
  "data": {
   "lineno": 269
  },
  "type": "function"
 },
 "sklearn.naive_bayes.MultinomialNB": {
  "data": {
   "lineno": 630,
   "symbols_in_volume": [
    "sklearn.naive_bayes.BaseDiscreteNB"
   ]
  },
  "type": "class"
 },
 "sklearn.naive_bayes.MultinomialNB.__init__": {
  "data": {
   "lineno": 706
  },
  "type": "function"
 },
 "sklearn.naive_bayes.MultinomialNB._count": {
  "data": {
   "lineno": 711,
   "symbols_in_volume": [
    "ValueError",
    "numpy.any",
    "safe_sparse_dot",
    "scipy.sparse.issparse"
   ]
  },
  "type": "function"
 },
 "sklearn.naive_bayes.MultinomialNB._joint_log_likelihood": {
  "data": {
   "lineno": 726,
   "symbols_in_volume": [
    "check_array",
    "check_is_fitted",
    "safe_sparse_dot"
   ]
  },
  "type": "function"
 },
 "sklearn.naive_bayes.MultinomialNB._update_feature_log_prob": {
  "data": {
   "lineno": 718,
   "symbols_in_volume": [
    "numpy.log"
   ]
  },
  "type": "function"
 },
 "sklearn.naive_bayes._ALPHA_MIN": {
  "data": {
   "lineno": 444
  },
  "type": "constant"
 },
 "sklearn.naive_bayes.__all__": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "sklearn.naive_bayes.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "sklearn.naive_bayes.issparse": {
  "data": {
   "shadows": "scipy.sparse.issparse"
  },
  "type": "import"
 },
 "sklearn.naive_bayes.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.naive_bayes.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.neighbors": {
  "data": {},
  "type": "module"
 },
 "sklearn.neighbors.__all__": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "sklearn.neighbors.approximate": {
  "data": {
   "symbols_in_volume": [
    "numpy.dtype",
    "sklearn.neighbors.approximate.HASH_DTYPE"
   ]
  },
  "type": "module"
 },
 "sklearn.neighbors.approximate.GaussianRandomProjectionHash": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "sklearn.neighbors.approximate.ProjectionToHashMixin"
   ]
  },
  "type": "class"
 },
 "sklearn.neighbors.approximate.GaussianRandomProjectionHash.__init__": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "sklearn.neighbors.approximate.GaussianRandomProjectionHash",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.approximate.HASH_DTYPE": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "sklearn.neighbors.approximate.LSHForest": {
  "data": {
   "lineno": 147
  },
  "type": "class"
 },
 "sklearn.neighbors.approximate.LSHForest.__init__": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "DeprecationWarning",
    "sklearn.neighbors.approximate.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.approximate.LSHForest._compute_distances": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "float",
    "numpy.argsort",
    "numpy.empty",
    "numpy.int",
    "pairwise_distances",
    "scipy.sparse.issparse"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.approximate.LSHForest._generate_masks": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "int",
    "numpy.ones",
    "numpy.packbits",
    "numpy.tril",
    "sklearn.neighbors.approximate.HASH_DTYPE",
    "sklearn.neighbors.approximate.MAX_HASH_SIZE"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.approximate.LSHForest._get_candidates": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "int",
    "len",
    "numpy.arange",
    "numpy.concatenate",
    "numpy.fromiter",
    "numpy.intp",
    "numpy.setdiff1d",
    "range",
    "set",
    "sklearn.neighbors.approximate._find_matching_indices",
    "sklearn.neighbors.approximate.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.approximate.LSHForest._get_radius_neighbors": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": [
    "float",
    "int",
    "numpy.append",
    "numpy.array",
    "numpy.insert",
    "numpy.searchsorted",
    "numpy.setdiff1d",
    "range",
    "sklearn.neighbors.approximate._find_matching_indices"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.approximate.LSHForest._query": {
  "data": {
   "lineno": 425,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.max",
    "numpy.rollaxis",
    "sklearn.neighbors.approximate.MAX_HASH_SIZE",
    "sklearn.neighbors.approximate._find_longest_prefix_match",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.approximate.LSHForest.fit": {
  "data": {
   "lineno": 377,
   "symbols_in_volume": [
    "check_array",
    "check_random_state",
    "numpy.argsort",
    "numpy.iinfo",
    "numpy.int32",
    "range",
    "sklearn.neighbors.approximate.GaussianRandomProjectionHash",
    "sklearn.neighbors.approximate.MAX_HASH_SIZE"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.approximate.LSHForest.kneighbors": {
  "data": {
   "lineno": 440,
   "symbols_in_volume": [
    "ValueError",
    "check_array",
    "hasattr",
    "numpy.array",
    "range"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.approximate.LSHForest.partial_fit": {
  "data": {
   "lineno": 548,
   "symbols_in_volume": [
    "ValueError",
    "check_array",
    "hasattr",
    "numpy.arange",
    "numpy.insert",
    "numpy.row_stack",
    "range",
    "scipy.sparse.issparse",
    "scipy.sparse.vstack"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.approximate.LSHForest.radius_neighbors": {
  "data": {
   "lineno": 489,
   "symbols_in_volume": [
    "ValueError",
    "check_array",
    "hasattr",
    "range",
    "sklearn.neighbors.approximate._array_of_arrays"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.approximate.MAX_HASH_SIZE": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "sklearn.neighbors.approximate.ProjectionToHashMixin": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "sklearn.neighbors.approximate.ProjectionToHashMixin._to_hash": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "numpy.packbits",
    "sklearn.neighbors.approximate.HASH_DTYPE",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.approximate.ProjectionToHashMixin.fit_transform": {
  "data": {
   "lineno": 84
  },
  "type": "function"
 },
 "sklearn.neighbors.approximate.ProjectionToHashMixin.transform": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "sklearn.neighbors.approximate.ProjectionToHashMixin",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.approximate.__all__": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "sklearn.neighbors.approximate._array_of_arrays": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "len",
    "numpy.empty",
    "object"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.approximate._find_longest_prefix_match": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.empty_like",
    "numpy.intp",
    "numpy.zeros_like",
    "sklearn.neighbors.approximate._find_matching_indices"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.approximate._find_matching_indices": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "numpy.searchsorted"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.approximate.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.neighbors.approximate.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.neighbors.approximate.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.neighbors.base": {
  "data": {
   "symbols_in_volume": [
    "dict",
    "list"
   ]
  },
  "type": "module"
 },
 "sklearn.neighbors.base.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "sklearn.neighbors.base.KNeighborsMixin": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "sklearn.neighbors.base.KNeighborsMixin._kneighbors_reduce_func": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.argpartition",
    "numpy.argsort",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.base.KNeighborsMixin.kneighbors": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": [
    "Parallel",
    "TypeError",
    "ValueError",
    "check_array",
    "check_is_fitted",
    "delayed",
    "delayed_query",
    "distutils.version.LooseVersion",
    "effective_n_jobs",
    "functools.partial",
    "gen_even_slices",
    "numpy.all",
    "numpy.arange",
    "numpy.integer",
    "numpy.issubdtype",
    "numpy.reshape",
    "numpy.vstack",
    "pairwise_distances_chunked",
    "scipy.sparse.issparse",
    "type",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.base.KNeighborsMixin.kneighbors_graph": {
  "data": {
   "lineno": 483,
   "symbols_in_volume": [
    "ValueError",
    "check_array",
    "numpy.arange",
    "numpy.ones",
    "numpy.ravel",
    "scipy.sparse.csr_matrix"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.base.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "sklearn.neighbors.base.NeighborsBase": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "abc.ABCMeta"
   ]
  },
  "type": "class"
 },
 "sklearn.neighbors.base.NeighborsBase.__init__": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.base.NeighborsBase._check_algorithm_metric": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "SyntaxWarning",
    "ValueError",
    "callable",
    "sklearn.neighbors.base.VALID_METRICS",
    "sklearn.neighbors.base.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.base.NeighborsBase._fit": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "BallTree",
    "KDTree",
    "TypeError",
    "ValueError",
    "callable",
    "check_array",
    "isinstance",
    "numpy.inf",
    "numpy.integer",
    "numpy.issubdtype",
    "scipy.sparse.issparse",
    "sklearn.neighbors.base.NeighborsBase",
    "sklearn.neighbors.base.VALID_METRICS",
    "sklearn.neighbors.base.VALID_METRICS_SPARSE",
    "sklearn.neighbors.base.warnings",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.base.NeighborsBase._pairwise": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.base.RadiusNeighborsMixin": {
  "data": {
   "lineno": 562,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "sklearn.neighbors.base.RadiusNeighborsMixin._radius_neighbors_reduce_func": {
  "data": {
   "lineno": 565,
   "symbols_in_volume": [
    "enumerate",
    "numpy.sqrt",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.base.RadiusNeighborsMixin.radius_neighbors": {
  "data": {
   "lineno": 599,
   "symbols_in_volume": [
    "Parallel",
    "ValueError",
    "check_array",
    "check_is_fitted",
    "delayed",
    "delayed_query",
    "distutils.version.LooseVersion",
    "effective_n_jobs",
    "enumerate",
    "functools.partial",
    "gen_even_slices",
    "len",
    "numpy.empty",
    "numpy.hstack",
    "pairwise_distances_chunked",
    "scipy.sparse.issparse",
    "sum",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.base.RadiusNeighborsMixin.radius_neighbors_graph": {
  "data": {
   "lineno": 758,
   "symbols_in_volume": [
    "ValueError",
    "check_array",
    "int",
    "len",
    "list",
    "numpy.array",
    "numpy.concatenate",
    "numpy.cumsum",
    "numpy.ones",
    "numpy.zeros",
    "scipy.sparse.csr_matrix"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.base.SupervisedFloatMixin": {
  "data": {
   "lineno": 835,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "sklearn.neighbors.base.SupervisedFloatMixin.fit": {
  "data": {
   "lineno": 836,
   "symbols_in_volume": [
    "BallTree",
    "KDTree",
    "check_X_y",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.base.SupervisedIntegerMixin": {
  "data": {
   "lineno": 855,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "sklearn.neighbors.base.SupervisedIntegerMixin.fit": {
  "data": {
   "lineno": 856,
   "symbols_in_volume": [
    "BallTree",
    "KDTree",
    "check_X_y",
    "check_classification_targets",
    "isinstance",
    "numpy.empty",
    "numpy.int",
    "numpy.unique",
    "range",
    "sklearn.neighbors.base.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.base.UnsupervisedMixin": {
  "data": {
   "lineno": 898,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "sklearn.neighbors.base.UnsupervisedMixin.fit": {
  "data": {
   "lineno": 899
  },
  "type": "function"
 },
 "sklearn.neighbors.base.VALID_METRICS": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "sklearn.neighbors.base.VALID_METRICS_SPARSE": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "sklearn.neighbors.base._check_weights": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "ValueError",
    "callable"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.base._get_weights": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "ValueError",
    "callable",
    "enumerate",
    "hasattr",
    "numpy.any",
    "numpy.dtype",
    "numpy.errstate",
    "numpy.isinf",
    "object",
    "weights"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.base.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "sklearn.neighbors.base.csr_matrix": {
  "data": {
   "shadows": "scipy.sparse.csr_matrix"
  },
  "type": "import"
 },
 "sklearn.neighbors.base.issparse": {
  "data": {
   "shadows": "scipy.sparse.issparse"
  },
  "type": "import"
 },
 "sklearn.neighbors.base.joblib_version": {
  "data": {
   "shadows": "__version__"
  },
  "type": "import"
 },
 "sklearn.neighbors.base.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.neighbors.base.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "sklearn.neighbors.base.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.neighbors.classification": {
  "data": {},
  "type": "module"
 },
 "sklearn.neighbors.classification.KNeighborsClassifier": {
  "data": {
   "lineno": 23
  },
  "type": "class"
 },
 "sklearn.neighbors.classification.KNeighborsClassifier.__init__": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "_check_weights",
    "sklearn.neighbors.classification.KNeighborsClassifier",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.classification.KNeighborsClassifier.predict": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "_get_weights",
    "check_array",
    "enumerate",
    "len",
    "numpy.asarray",
    "numpy.empty",
    "numpy.intp",
    "scipy.stats.mode",
    "weighted_mode"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.classification.KNeighborsClassifier.predict_proba": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "_get_weights",
    "check_array",
    "enumerate",
    "numpy.arange",
    "numpy.newaxis",
    "numpy.ones_like",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.classification.RadiusNeighborsClassifier": {
  "data": {
   "lineno": 230
  },
  "type": "class"
 },
 "sklearn.neighbors.classification.RadiusNeighborsClassifier.__init__": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": [
    "_check_weights",
    "sklearn.neighbors.classification.RadiusNeighborsClassifier",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.classification.RadiusNeighborsClassifier.predict": {
  "data": {
   "lineno": 338,
   "symbols_in_volume": [
    "ValueError",
    "_get_weights",
    "check_array",
    "enumerate",
    "len",
    "numpy.array",
    "numpy.empty",
    "numpy.int",
    "numpy.zeros",
    "object",
    "scipy.stats.mode",
    "weighted_mode",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.classification.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.neighbors.classification.stats": {
  "data": {
   "shadows": "scipy.stats"
  },
  "type": "import"
 },
 "sklearn.neighbors.graph": {
  "data": {},
  "type": "module"
 },
 "sklearn.neighbors.graph._check_params": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "ValueError",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.graph._query_include_self": {
  "data": {
   "lineno": 24
  },
  "type": "function"
 },
 "sklearn.neighbors.graph.kneighbors_graph": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "NearestNeighbors",
    "isinstance",
    "sklearn.neighbors.graph._check_params",
    "sklearn.neighbors.graph._query_include_self"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.graph.radius_neighbors_graph": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "NearestNeighbors",
    "isinstance",
    "sklearn.neighbors.graph._check_params",
    "sklearn.neighbors.graph._query_include_self"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.kde": {
  "data": {},
  "type": "module"
 },
 "sklearn.neighbors.kde.KernelDensity": {
  "data": {
   "lineno": 25
  },
  "type": "class"
 },
 "sklearn.neighbors.kde.KernelDensity.__init__": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.neighbors.kde.VALID_KERNELS"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.kde.KernelDensity._choose_algorithm": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.neighbors.kde.TREE_DICT"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.kde.KernelDensity.fit": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "ValueError",
    "check_array",
    "check_consistent_length",
    "sklearn.neighbors.kde.TREE_DICT"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.kde.KernelDensity.sample": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "NotImplementedError",
    "check_random_state",
    "numpy.asarray",
    "numpy.atleast_2d",
    "numpy.cumsum",
    "numpy.int64",
    "numpy.newaxis",
    "numpy.searchsorted",
    "numpy.sqrt",
    "row_norms",
    "scipy.special.gammainc"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.kde.KernelDensity.score": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.kde.KernelDensity.score_samples": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "check_array",
    "numpy.log"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.kde.TREE_DICT": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "sklearn.neighbors.kde.VALID_KERNELS": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "sklearn.neighbors.kde.gammainc": {
  "data": {
   "shadows": "scipy.special.gammainc"
  },
  "type": "import"
 },
 "sklearn.neighbors.kde.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.neighbors.lof": {
  "data": {},
  "type": "module"
 },
 "sklearn.neighbors.lof.LocalOutlierFactor": {
  "data": {
   "lineno": 19
  },
  "type": "class"
 },
 "sklearn.neighbors.lof.LocalOutlierFactor.__init__": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "sklearn.neighbors.lof.LocalOutlierFactor",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.lof.LocalOutlierFactor._decision_function": {
  "data": {
   "lineno": 372
  },
  "type": "function"
 },
 "sklearn.neighbors.lof.LocalOutlierFactor._fit_predict": {
  "data": {
   "lineno": 193
  },
  "type": "function"
 },
 "sklearn.neighbors.lof.LocalOutlierFactor._local_reachability_density": {
  "data": {
   "lineno": 478,
   "symbols_in_volume": [
    "numpy.maximum",
    "numpy.mean"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.lof.LocalOutlierFactor._predict": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "check_array",
    "check_is_fitted",
    "int",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.lof.LocalOutlierFactor._score_samples": {
  "data": {
   "lineno": 437,
   "symbols_in_volume": [
    "check_array",
    "check_is_fitted",
    "numpy.mean",
    "numpy.newaxis"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.lof.LocalOutlierFactor.decision_function": {
  "data": {
   "lineno": 335,
   "symbols_in_volume": [
    "AttributeError",
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.lof.LocalOutlierFactor.fit": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "FutureWarning",
    "ValueError",
    "max",
    "min",
    "numpy.mean",
    "numpy.newaxis",
    "numpy.percentile",
    "sklearn.neighbors.lof.LocalOutlierFactor",
    "sklearn.neighbors.lof.warnings",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.lof.LocalOutlierFactor.fit_predict": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "AttributeError",
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.lof.LocalOutlierFactor.predict": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "AttributeError",
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.lof.LocalOutlierFactor.score_samples": {
  "data": {
   "lineno": 400,
   "symbols_in_volume": [
    "AttributeError",
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.lof.__all__": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "sklearn.neighbors.lof.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.neighbors.lof.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.neighbors.nearest_centroid": {
  "data": {},
  "type": "module"
 },
 "sklearn.neighbors.nearest_centroid.NearestCentroid": {
  "data": {
   "lineno": 22
  },
  "type": "class"
 },
 "sklearn.neighbors.nearest_centroid.NearestCentroid.__init__": {
  "data": {
   "lineno": 81
  },
  "type": "function"
 },
 "sklearn.neighbors.nearest_centroid.NearestCentroid.fit": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "LabelEncoder",
    "ValueError",
    "check_X_y",
    "check_classification_targets",
    "csc_median_axis_0",
    "len",
    "numpy.abs",
    "numpy.clip",
    "numpy.empty",
    "numpy.float64",
    "numpy.mean",
    "numpy.median",
    "numpy.newaxis",
    "numpy.sign",
    "numpy.sqrt",
    "numpy.sum",
    "numpy.where",
    "numpy.zeros",
    "range",
    "scipy.sparse.issparse",
    "sklearn.neighbors.nearest_centroid.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.nearest_centroid.NearestCentroid.predict": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "check_array",
    "check_is_fitted",
    "pairwise_distances"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.nearest_centroid.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.neighbors.nearest_centroid.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.neighbors.nearest_centroid.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.neighbors.regression": {
  "data": {},
  "type": "module"
 },
 "sklearn.neighbors.regression.KNeighborsRegressor": {
  "data": {
   "lineno": 24
  },
  "type": "class"
 },
 "sklearn.neighbors.regression.KNeighborsRegressor.__init__": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "_check_weights",
    "sklearn.neighbors.regression.KNeighborsRegressor",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.regression.KNeighborsRegressor.predict": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "ValueError",
    "_get_weights",
    "check_array",
    "numpy.empty",
    "numpy.float64",
    "numpy.mean",
    "numpy.sum",
    "range",
    "scipy.sparse.issparse"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.regression.RadiusNeighborsRegressor": {
  "data": {
   "lineno": 181
  },
  "type": "class"
 },
 "sklearn.neighbors.regression.RadiusNeighborsRegressor.__init__": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "_check_weights",
    "sklearn.neighbors.regression.RadiusNeighborsRegressor",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.regression.RadiusNeighborsRegressor.predict": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "_get_weights",
    "check_array",
    "enumerate",
    "len",
    "numpy.array",
    "numpy.average",
    "numpy.full_like",
    "numpy.isnan",
    "numpy.max",
    "numpy.mean",
    "numpy.nan",
    "sklearn.neighbors.regression.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.regression.issparse": {
  "data": {
   "shadows": "scipy.sparse.issparse"
  },
  "type": "import"
 },
 "sklearn.neighbors.regression.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.neighbors.regression.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.neighbors.setup": {
  "data": {},
  "type": "module"
 },
 "sklearn.neighbors.setup.Configuration": {
  "data": {
   "shadows": "numpy.distutils.misc_util.Configuration"
  },
  "type": "import"
 },
 "sklearn.neighbors.setup.configuration": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "numpy.distutils.misc_util.Configuration",
    "sklearn.neighbors.setup.numpy",
    "sklearn.neighbors.setup.os"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.setup.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.neighbors.setup.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests": {
  "data": {},
  "type": "module"
 },
 "sklearn.neighbors.tests.test_approximate": {
  "data": {},
  "type": "module"
 },
 "sklearn.neighbors.tests.test_approximate.LSHForest": {
  "data": {
   "shadows": "sklearn.neighbors.LSHForest"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_approximate.NearestNeighbors": {
  "data": {
   "shadows": "sklearn.neighbors.NearestNeighbors"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_approximate.assert_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_approximate.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_approximate.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_approximate.assert_array_less": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_less"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_approximate.assert_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_approximate.assert_greater": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_greater"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_approximate.assert_not_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_not_equal"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_approximate.assert_raises": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_approximate.assert_true": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_true"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_approximate.assert_warns_message": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_warns_message"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_approximate.ignore_warnings": {
  "data": {
   "shadows": "sklearn.utils.testing.ignore_warnings"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_approximate.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_approximate.pairwise_distances": {
  "data": {
   "shadows": "sklearn.metrics.pairwise.pairwise_distances"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_approximate.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_approximate.test_candidates": {
  "data": {
   "lineno": 415,
   "symbols_in_volume": [
    "DeprecationWarning",
    "UserWarning",
    "numpy.array",
    "numpy.float32",
    "sklearn.neighbors.LSHForest",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_warns_message",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_approximate.test_distances": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": [
    "DeprecationWarning",
    "numpy.all",
    "numpy.diff",
    "numpy.random.RandomState",
    "range",
    "sklearn.neighbors.LSHForest",
    "sklearn.utils.testing.assert_true",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_approximate.test_fit": {
  "data": {
   "lineno": 322,
   "symbols_in_volume": [
    "DeprecationWarning",
    "len",
    "numpy.random.RandomState",
    "sklearn.neighbors.LSHForest",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_approximate.test_graphs": {
  "data": {
   "lineno": 455,
   "symbols_in_volume": [
    "DeprecationWarning",
    "numpy.random.RandomState",
    "sklearn.neighbors.LSHForest",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_approximate.test_hash_functions": {
  "data": {
   "lineno": 385,
   "symbols_in_volume": [
    "DeprecationWarning",
    "numpy.iinfo",
    "numpy.int32",
    "numpy.mean",
    "numpy.random.RandomState",
    "numpy.var",
    "range",
    "sklearn.neighbors.LSHForest",
    "sklearn.utils.testing.assert_not_equal",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_approximate.test_kneighbors": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "DeprecationWarning",
    "ValueError",
    "numpy.random.RandomState",
    "range",
    "sklearn.neighbors.LSHForest",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_raises",
    "sklearn.utils.testing.assert_true",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_approximate.test_lsh_forest_deprecation": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "DeprecationWarning",
    "sklearn.neighbors.LSHForest",
    "sklearn.utils.testing.assert_warns_message"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_approximate.test_neighbors_accuracy_with_n_candidates": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "DeprecationWarning",
    "enumerate",
    "float",
    "numpy.all",
    "numpy.argsort",
    "numpy.array",
    "numpy.diff",
    "numpy.intersect1d",
    "numpy.ptp",
    "numpy.random.RandomState",
    "numpy.zeros",
    "print",
    "range",
    "sklearn.metrics.pairwise.pairwise_distances",
    "sklearn.neighbors.LSHForest",
    "sklearn.utils.testing.assert_true",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_approximate.test_neighbors_accuracy_with_n_estimators": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "DeprecationWarning",
    "enumerate",
    "float",
    "numpy.all",
    "numpy.argsort",
    "numpy.array",
    "numpy.diff",
    "numpy.intersect1d",
    "numpy.ptp",
    "numpy.random.RandomState",
    "numpy.zeros",
    "range",
    "sklearn.metrics.pairwise.pairwise_distances",
    "sklearn.neighbors.LSHForest",
    "sklearn.utils.testing.assert_true",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_approximate.test_partial_fit": {
  "data": {
   "lineno": 350,
   "symbols_in_volume": [
    "DeprecationWarning",
    "ValueError",
    "len",
    "numpy.random.RandomState",
    "numpy.random.randn",
    "sklearn.neighbors.LSHForest",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_raises",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_approximate.test_radius_neighbors": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "DeprecationWarning",
    "ValueError",
    "numpy.mean",
    "numpy.random.RandomState",
    "object",
    "range",
    "sklearn.metrics.pairwise.pairwise_distances",
    "sklearn.neighbors.LSHForest",
    "sklearn.neighbors.NearestNeighbors",
    "sklearn.utils.testing.assert_array_less",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_greater",
    "sklearn.utils.testing.assert_raises",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_approximate.test_radius_neighbors_boundary_handling": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "DeprecationWarning",
    "len",
    "numpy.cos",
    "numpy.finfo",
    "numpy.float64",
    "numpy.pi",
    "numpy.sort",
    "sklearn.metrics.pairwise.pairwise_distances",
    "sklearn.neighbors.LSHForest",
    "sklearn.neighbors.NearestNeighbors",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_approximate.test_sparse_input": {
  "data": {
   "lineno": 476,
   "symbols_in_volume": [
    "DeprecationWarning",
    "scipy.sparse.rand",
    "sklearn.neighbors.LSHForest",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.ignore_warnings",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_ball_tree": {
  "data": {
   "symbols_in_volume": [
    "dict",
    "numpy.dot",
    "numpy.random.RandomState",
    "sklearn.neighbors.tests.test_ball_tree.DIMENSION",
    "sklearn.neighbors.tests.test_ball_tree.V_mahalanobis",
    "sklearn.neighbors.tests.test_ball_tree.rng"
   ]
  },
  "type": "module"
 },
 "sklearn.neighbors.tests.test_ball_tree.BOOLEAN_METRICS": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "sklearn.neighbors.tests.test_ball_tree.BallTree": {
  "data": {
   "shadows": "sklearn.neighbors.ball_tree.BallTree"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_ball_tree.DIMENSION": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "sklearn.neighbors.tests.test_ball_tree.DISCRETE_METRICS": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "sklearn.neighbors.tests.test_ball_tree.DTYPE": {
  "data": {
   "shadows": "sklearn.neighbors.ball_tree.DTYPE"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_ball_tree.DistanceMetric": {
  "data": {
   "shadows": "sklearn.neighbors.dist_metrics.DistanceMetric"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_ball_tree.ITYPE": {
  "data": {
   "shadows": "sklearn.neighbors.ball_tree.ITYPE"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_ball_tree.METRICS": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "sklearn.neighbors.tests.test_ball_tree.NeighborsHeap": {
  "data": {
   "shadows": "sklearn.neighbors.ball_tree.NeighborsHeap"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_ball_tree.V_mahalanobis": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "sklearn.neighbors.tests.test_ball_tree.assert_allclose": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_allclose"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_ball_tree.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_ball_tree.brute_force_neighbors": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.argsort",
    "sklearn.neighbors.dist_metrics.DistanceMetric.get_metric"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_ball_tree.check_random_state": {
  "data": {
   "shadows": "sklearn.utils.check_random_state"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_ball_tree.compute_kernel_slow": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "ValueError",
    "numpy.cos",
    "numpy.exp",
    "numpy.pi",
    "numpy.sqrt",
    "sklearn.neighbors.ball_tree.kernel_norm"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_ball_tree.dist_func": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_ball_tree.gaussian_kde": {
  "data": {
   "shadows": "scipy.stats.gaussian_kde"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_ball_tree.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_ball_tree.kernel_norm": {
  "data": {
   "shadows": "sklearn.neighbors.ball_tree.kernel_norm"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_ball_tree.nodeheap_sort": {
  "data": {
   "shadows": "sklearn.neighbors.ball_tree.nodeheap_sort"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_ball_tree.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_ball_tree.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_ball_tree.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_ball_tree.rng": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "sklearn.neighbors.tests.test_ball_tree.simultaneous_sort": {
  "data": {
   "shadows": "sklearn.neighbors.ball_tree.simultaneous_sort"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "max",
    "numpy.random.random",
    "numpy.random.seed",
    "sklearn.neighbors.ball_tree.BallTree",
    "sklearn.neighbors.tests.test_ball_tree.compute_kernel_slow",
    "sklearn.neighbors.tests.test_ball_tree.pytest",
    "sklearn.utils.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_ball_tree.test_ball_tree_pickle": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "check_pickle_protocol",
    "sklearn.neighbors.ball_tree.BallTree",
    "sklearn.neighbors.tests.test_ball_tree.dist_func",
    "sklearn.neighbors.tests.test_ball_tree.rng",
    "sklearn.utils.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_ball_tree.test_ball_tree_pickle.check_pickle_protocol": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "isinstance",
    "numpy.testing.assert_array_almost_equal",
    "sklearn.neighbors.ball_tree.BallTree",
    "sklearn.neighbors.tests.test_ball_tree.pickle"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "numpy.testing.assert_array_almost_equal",
    "sklearn.neighbors.ball_tree.BallTree",
    "sklearn.neighbors.tests.test_ball_tree.DIMENSION",
    "sklearn.neighbors.tests.test_ball_tree.METRICS",
    "sklearn.neighbors.tests.test_ball_tree.brute_force_neighbors",
    "sklearn.neighbors.tests.test_ball_tree.pytest",
    "sklearn.neighbors.tests.test_ball_tree.rng",
    "sklearn.utils.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query_metrics": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "numpy.testing.assert_array_almost_equal",
    "sklearn.neighbors.ball_tree.BallTree",
    "sklearn.neighbors.tests.test_ball_tree.BOOLEAN_METRICS",
    "sklearn.neighbors.tests.test_ball_tree.DISCRETE_METRICS",
    "sklearn.neighbors.tests.test_ball_tree.brute_force_neighbors",
    "sklearn.neighbors.tests.test_ball_tree.itertools",
    "sklearn.neighbors.tests.test_ball_tree.pytest",
    "sklearn.neighbors.tests.test_ball_tree.rng",
    "sklearn.utils.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query_radius": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "float",
    "numpy.linspace",
    "numpy.sqrt",
    "numpy.testing.assert_array_almost_equal",
    "numpy.where",
    "numpy.zeros",
    "sklearn.neighbors.ball_tree.BallTree",
    "sklearn.neighbors.tests.test_ball_tree.rng",
    "sklearn.utils.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query_radius_distance": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "float",
    "numpy.linspace",
    "numpy.sqrt",
    "numpy.testing.assert_array_almost_equal",
    "numpy.zeros",
    "sklearn.neighbors.ball_tree.BallTree",
    "sklearn.neighbors.tests.test_ball_tree.rng",
    "sklearn.utils.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_ball_tree.test_ball_tree_two_point": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "check_two_point",
    "numpy.linspace",
    "sklearn.neighbors.ball_tree.BallTree",
    "sklearn.neighbors.dist_metrics.DistanceMetric.get_metric",
    "sklearn.neighbors.tests.test_ball_tree.rng",
    "sklearn.utils.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_ball_tree.test_ball_tree_two_point.check_two_point": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_ball_tree.test_gaussian_kde": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "numpy.linspace",
    "numpy.std",
    "numpy.testing.assert_array_almost_equal",
    "scipy.stats.gaussian_kde",
    "sklearn.neighbors.ball_tree.BallTree",
    "sklearn.neighbors.tests.test_ball_tree.rng",
    "sklearn.utils.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_ball_tree.test_neighbors_heap": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.argsort",
    "numpy.testing.assert_array_almost_equal",
    "range",
    "sklearn.neighbors.ball_tree.DTYPE",
    "sklearn.neighbors.ball_tree.ITYPE",
    "sklearn.neighbors.ball_tree.NeighborsHeap",
    "sklearn.neighbors.tests.test_ball_tree.rng",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_ball_tree.test_node_heap": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "numpy.argsort",
    "numpy.testing.assert_array_almost_equal",
    "sklearn.neighbors.ball_tree.DTYPE",
    "sklearn.neighbors.ball_tree.nodeheap_sort",
    "sklearn.neighbors.tests.test_ball_tree.rng"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_ball_tree.test_query_haversine": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "numpy.pi",
    "numpy.testing.assert_array_almost_equal",
    "sklearn.neighbors.ball_tree.BallTree",
    "sklearn.neighbors.tests.test_ball_tree.brute_force_neighbors",
    "sklearn.neighbors.tests.test_ball_tree.rng",
    "sklearn.utils.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_ball_tree.test_simultaneous_sort": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.argsort",
    "numpy.testing.assert_array_almost_equal",
    "numpy.zeros",
    "sklearn.neighbors.ball_tree.DTYPE",
    "sklearn.neighbors.ball_tree.ITYPE",
    "sklearn.neighbors.ball_tree.simultaneous_sort",
    "sklearn.neighbors.tests.test_ball_tree.rng"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_dist_metrics": {
  "data": {
   "symbols_in_volume": [
    "dict",
    "numpy.dot",
    "sklearn.neighbors.tests.test_dist_metrics.V",
    "sklearn.neighbors.tests.test_dist_metrics.VI",
    "sklearn.neighbors.tests.test_dist_metrics.X1",
    "sklearn.neighbors.tests.test_dist_metrics.X2",
    "sklearn.neighbors.tests.test_dist_metrics.d",
    "sklearn.neighbors.tests.test_dist_metrics.n1",
    "sklearn.neighbors.tests.test_dist_metrics.n2",
    "sklearn.neighbors.tests.test_dist_metrics.rng",
    "sklearn.utils.check_random_state"
   ]
  },
  "type": "module"
 },
 "sklearn.neighbors.tests.test_dist_metrics.BOOL_METRICS": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "sklearn.neighbors.tests.test_dist_metrics.BallTree": {
  "data": {
   "shadows": "sklearn.neighbors.BallTree"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_dist_metrics.DistanceMetric": {
  "data": {
   "shadows": "sklearn.neighbors.dist_metrics.DistanceMetric"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_dist_metrics.METRICS_DEFAULT_PARAMS": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "sklearn.neighbors.tests.test_dist_metrics.V": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "sklearn.neighbors.tests.test_dist_metrics.VI": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "sklearn.neighbors.tests.test_dist_metrics.X1": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "sklearn.neighbors.tests.test_dist_metrics.X1_bool": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "sklearn.neighbors.tests.test_dist_metrics.X2": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "sklearn.neighbors.tests.test_dist_metrics.X2_bool": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "sklearn.neighbors.tests.test_dist_metrics.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_dist_metrics.assert_raises_regex": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises_regex"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_dist_metrics.cdist": {
  "data": {
   "shadows": "scipy.spatial.distance.cdist"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_dist_metrics.check_cdist": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "numpy.testing.assert_array_almost_equal",
    "sklearn.neighbors.dist_metrics.DistanceMetric.get_metric",
    "sklearn.neighbors.tests.test_dist_metrics.X1",
    "sklearn.neighbors.tests.test_dist_metrics.X2"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_dist_metrics.check_cdist_bool": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "numpy.testing.assert_array_almost_equal",
    "sklearn.neighbors.dist_metrics.DistanceMetric.get_metric",
    "sklearn.neighbors.tests.test_dist_metrics.X1_bool",
    "sklearn.neighbors.tests.test_dist_metrics.X2_bool"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_dist_metrics.check_pdist": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "numpy.testing.assert_array_almost_equal",
    "sklearn.neighbors.dist_metrics.DistanceMetric.get_metric",
    "sklearn.neighbors.tests.test_dist_metrics.X1"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_dist_metrics.check_pdist_bool": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "numpy.testing.assert_array_almost_equal",
    "sklearn.neighbors.dist_metrics.DistanceMetric.get_metric",
    "sklearn.neighbors.tests.test_dist_metrics.X1_bool"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_dist_metrics.check_pickle": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "numpy.testing.assert_array_almost_equal",
    "sklearn.neighbors.dist_metrics.DistanceMetric.get_metric",
    "sklearn.neighbors.tests.test_dist_metrics.X1",
    "sklearn.neighbors.tests.test_dist_metrics.pickle"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_dist_metrics.check_random_state": {
  "data": {
   "shadows": "sklearn.utils.check_random_state"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_dist_metrics.d": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "sklearn.neighbors.tests.test_dist_metrics.dist_func": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_dist_metrics.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_dist_metrics.n1": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "sklearn.neighbors.tests.test_dist_metrics.n2": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "sklearn.neighbors.tests.test_dist_metrics.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_dist_metrics.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_dist_metrics.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_dist_metrics.rng": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "sklearn.neighbors.tests.test_dist_metrics.test_bad_pyfunc_metric": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "TypeError",
    "numpy.ones",
    "sklearn.neighbors.BallTree",
    "sklearn.utils.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_dist_metrics.test_bad_pyfunc_metric.wrong_distance": {
  "data": {
   "lineno": 176
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_dist_metrics.test_cdist": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "dict",
    "scipy.spatial.distance.cdist",
    "sklearn.neighbors.tests.test_dist_metrics.METRICS_DEFAULT_PARAMS",
    "sklearn.neighbors.tests.test_dist_metrics.X1",
    "sklearn.neighbors.tests.test_dist_metrics.X2",
    "sklearn.neighbors.tests.test_dist_metrics.check_cdist",
    "sklearn.neighbors.tests.test_dist_metrics.itertools",
    "sklearn.neighbors.tests.test_dist_metrics.pytest",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_dist_metrics.test_cdist_bool_metric": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "scipy.spatial.distance.cdist",
    "sklearn.neighbors.tests.test_dist_metrics.BOOL_METRICS",
    "sklearn.neighbors.tests.test_dist_metrics.X1_bool",
    "sklearn.neighbors.tests.test_dist_metrics.X2_bool",
    "sklearn.neighbors.tests.test_dist_metrics.check_cdist_bool",
    "sklearn.neighbors.tests.test_dist_metrics.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_dist_metrics.test_haversine_metric": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "enumerate",
    "haversine_slow",
    "numpy.random.random",
    "numpy.sin",
    "numpy.testing.assert_array_almost_equal",
    "numpy.zeros_like",
    "sklearn.neighbors.dist_metrics.DistanceMetric.get_metric"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_dist_metrics.test_haversine_metric.haversine_slow": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "numpy.arcsin",
    "numpy.cos",
    "numpy.sin",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_dist_metrics.test_input_data_size": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "numpy.testing.assert_array_almost_equal",
    "sklearn.neighbors.dist_metrics.DistanceMetric.get_metric",
    "sklearn.neighbors.tests.test_dist_metrics.dist_func",
    "sklearn.neighbors.tests.test_dist_metrics.rng",
    "sklearn.utils.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_dist_metrics.test_input_data_size.custom_metric": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_dist_metrics.test_pdist": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "dict",
    "scipy.spatial.distance.cdist",
    "sklearn.neighbors.tests.test_dist_metrics.METRICS_DEFAULT_PARAMS",
    "sklearn.neighbors.tests.test_dist_metrics.X1",
    "sklearn.neighbors.tests.test_dist_metrics.check_pdist",
    "sklearn.neighbors.tests.test_dist_metrics.itertools",
    "sklearn.neighbors.tests.test_dist_metrics.pytest",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_dist_metrics.test_pdist_bool_metrics": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "scipy.spatial.distance.cdist",
    "sklearn.neighbors.tests.test_dist_metrics.BOOL_METRICS",
    "sklearn.neighbors.tests.test_dist_metrics.X1_bool",
    "sklearn.neighbors.tests.test_dist_metrics.check_pdist_bool",
    "sklearn.neighbors.tests.test_dist_metrics.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_dist_metrics.test_pickle": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "dict",
    "sklearn.neighbors.tests.test_dist_metrics.METRICS_DEFAULT_PARAMS",
    "sklearn.neighbors.tests.test_dist_metrics.check_pickle",
    "sklearn.neighbors.tests.test_dist_metrics.itertools",
    "sklearn.neighbors.tests.test_dist_metrics.pytest",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_dist_metrics.test_pickle_bool_metrics": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "numpy.testing.assert_array_almost_equal",
    "sklearn.neighbors.dist_metrics.DistanceMetric.get_metric",
    "sklearn.neighbors.tests.test_dist_metrics.BOOL_METRICS",
    "sklearn.neighbors.tests.test_dist_metrics.X1_bool",
    "sklearn.neighbors.tests.test_dist_metrics.pickle",
    "sklearn.neighbors.tests.test_dist_metrics.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_dist_metrics.test_pyfunc_metric": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "numpy.random.random",
    "numpy.testing.assert_array_almost_equal",
    "sklearn.neighbors.dist_metrics.DistanceMetric.get_metric",
    "sklearn.neighbors.tests.test_dist_metrics.dist_func",
    "sklearn.neighbors.tests.test_dist_metrics.pickle"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_kd_tree": {
  "data": {
   "symbols_in_volume": [
    "dict",
    "numpy.dot",
    "numpy.random.RandomState",
    "sklearn.neighbors.tests.test_kd_tree.rng"
   ]
  },
  "type": "module"
 },
 "sklearn.neighbors.tests.test_kd_tree.DIMENSION": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "sklearn.neighbors.tests.test_kd_tree.DTYPE": {
  "data": {
   "shadows": "sklearn.neighbors.kd_tree.DTYPE"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_kd_tree.DistanceMetric": {
  "data": {
   "shadows": "sklearn.neighbors.dist_metrics.DistanceMetric"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_kd_tree.ITYPE": {
  "data": {
   "shadows": "sklearn.neighbors.kd_tree.ITYPE"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_kd_tree.KDTree": {
  "data": {
   "shadows": "sklearn.neighbors.kd_tree.KDTree"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_kd_tree.METRICS": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "sklearn.neighbors.tests.test_kd_tree.NeighborsHeap": {
  "data": {
   "shadows": "sklearn.neighbors.kd_tree.NeighborsHeap"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_kd_tree.SkipTest": {
  "data": {
   "shadows": "sklearn.utils.testing.SkipTest"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_kd_tree.V": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "sklearn.neighbors.tests.test_kd_tree.assert_allclose": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_allclose"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_kd_tree.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_kd_tree.brute_force_neighbors": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.argsort",
    "sklearn.neighbors.dist_metrics.DistanceMetric.get_metric"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_kd_tree.check_neighbors": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "numpy.testing.assert_array_almost_equal",
    "sklearn.neighbors.kd_tree.KDTree",
    "sklearn.neighbors.tests.test_kd_tree.brute_force_neighbors"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_kd_tree.check_random_state": {
  "data": {
   "shadows": "sklearn.utils.check_random_state"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_kd_tree.check_results": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "max",
    "sklearn.utils.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_kd_tree.compute_kernel_slow": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "ValueError",
    "numpy.cos",
    "numpy.exp",
    "numpy.pi",
    "numpy.sqrt",
    "sklearn.neighbors.kd_tree.kernel_norm"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_kd_tree.gaussian_kde": {
  "data": {
   "shadows": "scipy.stats.gaussian_kde"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_kd_tree.kernel_norm": {
  "data": {
   "shadows": "sklearn.neighbors.kd_tree.kernel_norm"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_kd_tree.nodeheap_sort": {
  "data": {
   "shadows": "sklearn.neighbors.kd_tree.nodeheap_sort"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_kd_tree.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_kd_tree.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_kd_tree.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_kd_tree.rng": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "sklearn.neighbors.tests.test_kd_tree.simultaneous_sort": {
  "data": {
   "shadows": "sklearn.neighbors.kd_tree.simultaneous_sort"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_kd_tree.test_gaussian_kde": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "numpy.linspace",
    "numpy.std",
    "numpy.testing.assert_array_almost_equal",
    "scipy.stats.gaussian_kde",
    "sklearn.neighbors.kd_tree.KDTree",
    "sklearn.neighbors.tests.test_kd_tree.rng",
    "sklearn.utils.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "sklearn.neighbors.kd_tree.KDTree",
    "sklearn.neighbors.tests.test_kd_tree.check_results",
    "sklearn.neighbors.tests.test_kd_tree.compute_kernel_slow",
    "sklearn.neighbors.tests.test_kd_tree.pytest",
    "sklearn.neighbors.tests.test_kd_tree.rng",
    "sklearn.utils.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_kd_tree.test_kd_tree_pickle": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "check_pickle_protocol",
    "sklearn.neighbors.kd_tree.KDTree",
    "sklearn.neighbors.tests.test_kd_tree.pytest",
    "sklearn.neighbors.tests.test_kd_tree.rng",
    "sklearn.utils.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_kd_tree.test_kd_tree_pickle.check_pickle_protocol": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "isinstance",
    "numpy.testing.assert_array_almost_equal",
    "sklearn.neighbors.kd_tree.KDTree",
    "sklearn.neighbors.tests.test_kd_tree.pickle"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_kd_tree.test_kd_tree_query": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "sklearn.neighbors.tests.test_kd_tree.DIMENSION",
    "sklearn.neighbors.tests.test_kd_tree.METRICS",
    "sklearn.neighbors.tests.test_kd_tree.check_neighbors",
    "sklearn.neighbors.tests.test_kd_tree.pytest",
    "sklearn.neighbors.tests.test_kd_tree.rng",
    "sklearn.utils.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_kd_tree.test_kd_tree_query_radius": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "float",
    "numpy.linspace",
    "numpy.sqrt",
    "numpy.testing.assert_array_almost_equal",
    "numpy.where",
    "numpy.zeros",
    "sklearn.neighbors.kd_tree.KDTree",
    "sklearn.neighbors.tests.test_kd_tree.rng",
    "sklearn.utils.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_kd_tree.test_kd_tree_query_radius_distance": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "float",
    "numpy.linspace",
    "numpy.sqrt",
    "numpy.testing.assert_array_almost_equal",
    "numpy.zeros",
    "sklearn.neighbors.kd_tree.KDTree",
    "sklearn.neighbors.tests.test_kd_tree.rng",
    "sklearn.utils.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_kd_tree.test_kd_tree_two_point": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "numpy.linspace",
    "numpy.testing.assert_array_almost_equal",
    "sklearn.neighbors.dist_metrics.DistanceMetric.get_metric",
    "sklearn.neighbors.kd_tree.KDTree",
    "sklearn.neighbors.tests.test_kd_tree.pytest",
    "sklearn.neighbors.tests.test_kd_tree.rng",
    "sklearn.utils.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_kd_tree.test_neighbors_heap": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.argsort",
    "numpy.testing.assert_array_almost_equal",
    "range",
    "sklearn.neighbors.kd_tree.DTYPE",
    "sklearn.neighbors.kd_tree.ITYPE",
    "sklearn.neighbors.kd_tree.NeighborsHeap",
    "sklearn.neighbors.tests.test_kd_tree.rng",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_kd_tree.test_node_heap": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "numpy.argsort",
    "numpy.testing.assert_array_almost_equal",
    "sklearn.neighbors.kd_tree.DTYPE",
    "sklearn.neighbors.kd_tree.nodeheap_sort",
    "sklearn.neighbors.tests.test_kd_tree.rng"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_kd_tree.test_simultaneous_sort": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.argsort",
    "numpy.testing.assert_array_almost_equal",
    "numpy.zeros",
    "sklearn.neighbors.kd_tree.DTYPE",
    "sklearn.neighbors.kd_tree.ITYPE",
    "sklearn.neighbors.kd_tree.simultaneous_sort",
    "sklearn.neighbors.tests.test_kd_tree.rng"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_kde": {
  "data": {},
  "type": "module"
 },
 "sklearn.neighbors.tests.test_kde.GridSearchCV": {
  "data": {
   "shadows": "sklearn.model_selection.GridSearchCV"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_kde.KDTree": {
  "data": {
   "shadows": "sklearn.neighbors.KDTree"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_kde.KernelDensity": {
  "data": {
   "shadows": "sklearn.neighbors.KernelDensity"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_kde.NearestNeighbors": {
  "data": {
   "shadows": "sklearn.neighbors.NearestNeighbors"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_kde.StandardScaler": {
  "data": {
   "shadows": "sklearn.preprocessing.StandardScaler"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_kde.assert_allclose": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_allclose"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_kde.assert_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_kde.assert_raises": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_kde.check_results": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "max",
    "numpy.exp",
    "numpy.prod",
    "sklearn.neighbors.KernelDensity",
    "sklearn.utils.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_kde.compute_kernel_slow": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "ValueError",
    "numpy.cos",
    "numpy.exp",
    "numpy.pi",
    "numpy.sqrt",
    "sklearn.neighbors.ball_tree.kernel_norm"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_kde.joblib": {
  "data": {
   "shadows": "sklearn.externals.joblib"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_kde.kernel_norm": {
  "data": {
   "shadows": "sklearn.neighbors.ball_tree.kernel_norm"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_kde.make_blobs": {
  "data": {
   "shadows": "sklearn.datasets.make_blobs"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_kde.make_pipeline": {
  "data": {
   "shadows": "sklearn.pipeline.make_pipeline"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_kde.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_kde.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_kde.test_kde_algorithm_metric_choice": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "ValueError",
    "numpy.random.RandomState",
    "sklearn.neighbors.KDTree.valid_metrics",
    "sklearn.neighbors.KernelDensity",
    "sklearn.neighbors.tests.test_kde.pytest",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_kde.test_kde_badargs": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "ValueError",
    "numpy.random.random",
    "sklearn.neighbors.KernelDensity",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_kde.test_kde_pipeline_gridsearch": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "dict",
    "sklearn.datasets.make_blobs",
    "sklearn.model_selection.GridSearchCV",
    "sklearn.neighbors.KernelDensity",
    "sklearn.pipeline.make_pipeline",
    "sklearn.preprocessing.StandardScaler",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_kde.test_kde_sample_weights": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.full",
    "numpy.int8",
    "numpy.max",
    "numpy.random.RandomState",
    "numpy.repeat",
    "sklearn.neighbors.KDTree.valid_metrics",
    "sklearn.neighbors.KernelDensity",
    "sklearn.utils.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_kde.test_kde_score": {
  "data": {
   "lineno": 122
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_kde.test_kernel_density": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.neighbors.tests.test_kde.check_results",
    "sklearn.neighbors.tests.test_kde.compute_kernel_slow",
    "sklearn.neighbors.tests.test_kde.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_kde.test_kernel_density_sampling": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "NotImplementedError",
    "numpy.all",
    "numpy.random.RandomState",
    "sklearn.neighbors.KernelDensity",
    "sklearn.neighbors.NearestNeighbors",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_kde.test_pickling": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "numpy.reshape",
    "sklearn.externals.joblib.dump",
    "sklearn.externals.joblib.load",
    "sklearn.neighbors.KernelDensity",
    "sklearn.utils.testing.assert_allclose",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_lof": {
  "data": {
   "symbols_in_volume": [
    "sklearn.datasets.load_iris",
    "sklearn.neighbors.tests.test_lof.iris",
    "sklearn.neighbors.tests.test_lof.perm",
    "sklearn.neighbors.tests.test_lof.rng",
    "sklearn.utils.check_random_state"
   ]
  },
  "type": "module"
 },
 "sklearn.neighbors.tests.test_lof.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_lof.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_lof.assert_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_lof.assert_greater": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_greater"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_lof.assert_raises": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_lof.assert_raises_regex": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises_regex"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_lof.assert_warns_message": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_warns_message"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_lof.check_estimator": {
  "data": {
   "shadows": "sklearn.utils.estimator_checks.check_estimator"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_lof.check_random_state": {
  "data": {
   "shadows": "sklearn.utils.check_random_state"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_lof.ignore_warnings": {
  "data": {
   "shadows": "sklearn.utils.testing.ignore_warnings"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_lof.iris": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "sklearn.neighbors.tests.test_lof.load_iris": {
  "data": {
   "shadows": "sklearn.datasets.load_iris"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_lof.metrics": {
  "data": {
   "shadows": "sklearn.metrics"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_lof.neighbors": {
  "data": {
   "shadows": "sklearn.neighbors"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_lof.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_lof.perm": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "sklearn.neighbors.tests.test_lof.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_lof.rng": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "sklearn.neighbors.tests.test_lof.roc_auc_score": {
  "data": {
   "shadows": "sklearn.metrics.roc_auc_score"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_lof.sqrt": {
  "data": {
   "shadows": "math.sqrt"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_lof.test_contamination": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.neighbors.LocalOutlierFactor",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_lof.test_contamination_future_warning": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "FutureWarning",
    "sklearn.neighbors.LocalOutlierFactor",
    "sklearn.utils.testing.assert_warns_message"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_lof.test_hasattr_prediction": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "hasattr",
    "sklearn.neighbors.LocalOutlierFactor",
    "sklearn.neighbors.tests.test_lof.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_lof.test_lof": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "numpy.max",
    "numpy.min",
    "numpy.testing.assert_array_equal",
    "sklearn.neighbors.LocalOutlierFactor",
    "sklearn.neighbors.tests.test_lof.pytest",
    "sklearn.utils.testing.assert_greater"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_lof.test_lof_performance": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.r_",
    "sklearn.metrics.roc_auc_score",
    "sklearn.neighbors.LocalOutlierFactor",
    "sklearn.neighbors.tests.test_lof.pytest",
    "sklearn.neighbors.tests.test_lof.rng",
    "sklearn.utils.check_random_state",
    "sklearn.utils.testing.assert_greater"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_lof.test_lof_precomputed": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.metrics.pairwise_distances",
    "sklearn.neighbors.LocalOutlierFactor",
    "sklearn.neighbors.tests.test_lof.pytest",
    "sklearn.neighbors.tests.test_lof.rng",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_lof.test_lof_values": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "math.sqrt",
    "sklearn.neighbors.LocalOutlierFactor",
    "sklearn.neighbors.tests.test_lof.pytest",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_lof.test_n_neighbors_attribute": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "UserWarning",
    "sklearn.neighbors.LocalOutlierFactor",
    "sklearn.neighbors.tests.test_lof.iris",
    "sklearn.neighbors.tests.test_lof.pytest",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_warns_message"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_lof.test_novelty_errors": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "AttributeError",
    "getattr",
    "sklearn.neighbors.LocalOutlierFactor",
    "sklearn.neighbors.tests.test_lof.iris",
    "sklearn.neighbors.tests.test_lof.pytest",
    "sklearn.utils.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_lof.test_novelty_training_scores": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "sklearn.neighbors.LocalOutlierFactor",
    "sklearn.neighbors.tests.test_lof.iris",
    "sklearn.neighbors.tests.test_lof.pytest",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_lof.test_novelty_true_common_tests": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "sklearn.neighbors.LocalOutlierFactor",
    "sklearn.neighbors.tests.test_lof.pytest",
    "sklearn.utils.estimator_checks.check_estimator"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_lof.test_score_samples": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "numpy.testing.assert_array_equal",
    "sklearn.neighbors.LocalOutlierFactor",
    "sklearn.neighbors.tests.test_lof.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_nearest_centroid": {
  "data": {
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "scipy.sparse.csr_matrix",
    "sklearn.datasets.load_iris",
    "sklearn.neighbors.tests.test_nearest_centroid.T",
    "sklearn.neighbors.tests.test_nearest_centroid.X",
    "sklearn.neighbors.tests.test_nearest_centroid.iris",
    "sklearn.neighbors.tests.test_nearest_centroid.perm",
    "sklearn.neighbors.tests.test_nearest_centroid.rng"
   ]
  },
  "type": "module"
 },
 "sklearn.neighbors.tests.test_nearest_centroid.NearestCentroid": {
  "data": {
   "shadows": "sklearn.neighbors.NearestCentroid"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_nearest_centroid.T": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "sklearn.neighbors.tests.test_nearest_centroid.T_csr": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "sklearn.neighbors.tests.test_nearest_centroid.X": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "sklearn.neighbors.tests.test_nearest_centroid.X_csr": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "sklearn.neighbors.tests.test_nearest_centroid.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_nearest_centroid.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_nearest_centroid.assert_raises": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_nearest_centroid.datasets": {
  "data": {
   "shadows": "sklearn.datasets"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_nearest_centroid.iris": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "sklearn.neighbors.tests.test_nearest_centroid.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_nearest_centroid.perm": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "sklearn.neighbors.tests.test_nearest_centroid.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_nearest_centroid.rng": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "sklearn.neighbors.tests.test_nearest_centroid.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_nearest_centroid.test_classification_toy": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "numpy.testing.assert_array_equal",
    "sklearn.neighbors.NearestCentroid",
    "sklearn.neighbors.tests.test_nearest_centroid.T",
    "sklearn.neighbors.tests.test_nearest_centroid.T_csr",
    "sklearn.neighbors.tests.test_nearest_centroid.X",
    "sklearn.neighbors.tests.test_nearest_centroid.X_csr",
    "sklearn.neighbors.tests.test_nearest_centroid.true_result",
    "sklearn.neighbors.tests.test_nearest_centroid.y"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_nearest_centroid.test_iris": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "numpy.mean",
    "sklearn.neighbors.NearestCentroid",
    "sklearn.neighbors.tests.test_nearest_centroid.iris",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_nearest_centroid.test_iris_shrinkage": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "numpy.mean",
    "sklearn.neighbors.NearestCentroid",
    "sklearn.neighbors.tests.test_nearest_centroid.iris",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_nearest_centroid.test_manhattan_metric": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "numpy.testing.assert_array_equal",
    "sklearn.neighbors.NearestCentroid",
    "sklearn.neighbors.tests.test_nearest_centroid.X",
    "sklearn.neighbors.tests.test_nearest_centroid.X_csr",
    "sklearn.neighbors.tests.test_nearest_centroid.y"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_nearest_centroid.test_pickle": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "sklearn.neighbors.NearestCentroid",
    "sklearn.neighbors.tests.test_nearest_centroid.iris",
    "sklearn.neighbors.tests.test_nearest_centroid.pickle",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_nearest_centroid.test_precomputed": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.neighbors.NearestCentroid",
    "sklearn.neighbors.tests.test_nearest_centroid.X",
    "sklearn.neighbors.tests.test_nearest_centroid.y",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_nearest_centroid.test_predict_translated_data": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "numpy.testing.assert_array_equal",
    "sklearn.neighbors.NearestCentroid",
    "sklearn.neighbors.tests.test_nearest_centroid.X",
    "sklearn.neighbors.tests.test_nearest_centroid.rng",
    "sklearn.neighbors.tests.test_nearest_centroid.y"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_nearest_centroid.test_shrinkage_correct": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.assert_array_almost_equal",
    "sklearn.neighbors.NearestCentroid",
    "sklearn.neighbors.tests.test_nearest_centroid.X",
    "sklearn.neighbors.tests.test_nearest_centroid.y"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_nearest_centroid.test_shrinkage_threshold_decoded_y": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.testing.assert_array_equal",
    "sklearn.neighbors.NearestCentroid",
    "sklearn.neighbors.tests.test_nearest_centroid.X",
    "sklearn.neighbors.tests.test_nearest_centroid.y"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_nearest_centroid.true_result": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "sklearn.neighbors.tests.test_nearest_centroid.y": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "sklearn.neighbors.tests.test_neighbors": {
  "data": {
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.inf",
    "numpy.random.RandomState",
    "scipy.sparse.bsr_matrix",
    "scipy.sparse.coo_matrix",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.dok_matrix",
    "scipy.sparse.lil_matrix",
    "sklearn.datasets.load_digits",
    "sklearn.datasets.load_iris",
    "sklearn.neighbors.kneighbors_graph",
    "sklearn.neighbors.radius_neighbors_graph",
    "sklearn.neighbors.tests.test_neighbors.SPARSE_TYPES",
    "sklearn.neighbors.tests.test_neighbors.digits",
    "sklearn.neighbors.tests.test_neighbors.iris",
    "sklearn.neighbors.tests.test_neighbors.perm",
    "sklearn.neighbors.tests.test_neighbors.rng",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "module"
 },
 "sklearn.neighbors.tests.test_neighbors.ALGORITHMS": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "sklearn.neighbors.tests.test_neighbors.DataConversionWarning": {
  "data": {
   "shadows": "sklearn.exceptions.DataConversionWarning"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_neighbors.P": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "sklearn.neighbors.tests.test_neighbors.SPARSE_OR_DENSE": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "sklearn.neighbors.tests.test_neighbors.SPARSE_TYPES": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "sklearn.neighbors.tests.test_neighbors.VALID_METRICS": {
  "data": {
   "shadows": "sklearn.neighbors.base.VALID_METRICS"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_neighbors.VALID_METRICS_SPARSE": {
  "data": {
   "shadows": "sklearn.neighbors.base.VALID_METRICS_SPARSE"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_neighbors._weight_func": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "numpy.errstate"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_neighbors.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_neighbors.assert_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_neighbors.assert_false": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_false"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_neighbors.assert_greater": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_greater"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_neighbors.assert_in": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_in"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_neighbors.assert_raises": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_neighbors.assert_raises_regex": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises_regex"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_neighbors.assert_true": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_true"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_neighbors.assert_warns": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_warns"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_neighbors.assert_warns_message": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_warns_message"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_neighbors.bsr_matrix": {
  "data": {
   "shadows": "scipy.sparse.bsr_matrix"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_neighbors.check_object_arrays": {
  "data": {
   "lineno": 1138,
   "symbols_in_volume": [
    "enumerate",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.check_random_state": {
  "data": {
   "shadows": "sklearn.utils.validation.check_random_state"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_neighbors.coo_matrix": {
  "data": {
   "shadows": "scipy.sparse.coo_matrix"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_neighbors.cross_val_score": {
  "data": {
   "shadows": "sklearn.model_selection.cross_val_score"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_neighbors.csc_matrix": {
  "data": {
   "shadows": "scipy.sparse.csc_matrix"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_neighbors.csr_matrix": {
  "data": {
   "shadows": "scipy.sparse.csr_matrix"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_neighbors.datasets": {
  "data": {
   "shadows": "sklearn.datasets"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_neighbors.digits": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "sklearn.neighbors.tests.test_neighbors.dok_matrix": {
  "data": {
   "shadows": "scipy.sparse.dok_matrix"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_neighbors.ignore_warnings": {
  "data": {
   "shadows": "sklearn.utils.testing.ignore_warnings"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_neighbors.iris": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "sklearn.neighbors.tests.test_neighbors.issparse": {
  "data": {
   "shadows": "scipy.sparse.issparse"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_neighbors.lil_matrix": {
  "data": {
   "shadows": "scipy.sparse.lil_matrix"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_neighbors.metrics": {
  "data": {
   "shadows": "sklearn.metrics"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_neighbors.neighbors": {
  "data": {
   "shadows": "sklearn.neighbors"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_neighbors.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_neighbors.pairwise_distances": {
  "data": {
   "shadows": "sklearn.metrics.pairwise.pairwise_distances"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_neighbors.perm": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "sklearn.neighbors.tests.test_neighbors.product": {
  "data": {
   "shadows": "itertools.product"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_neighbors.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_neighbors.rng": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "sklearn.neighbors.tests.test_neighbors.test_KNeighborsClassifier_multioutput": {
  "data": {
   "lineno": 530,
   "symbols_in_volume": [
    "itertools.product",
    "len",
    "numpy.vstack",
    "range",
    "sklearn.model_selection.train_test_split",
    "sklearn.neighbors.KNeighborsClassifier",
    "sklearn.neighbors.tests.test_neighbors.ALGORITHMS",
    "sklearn.neighbors.tests.test_neighbors._weight_func",
    "sklearn.neighbors.tests.test_neighbors.rng",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.validation.check_random_state",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.test_KNeighborsRegressor_multioutput_uniform_weight": {
  "data": {
   "lineno": 602,
   "symbols_in_volume": [
    "itertools.product",
    "numpy.array",
    "numpy.mean",
    "sklearn.model_selection.train_test_split",
    "sklearn.neighbors.KNeighborsRegressor",
    "sklearn.neighbors.tests.test_neighbors.ALGORITHMS",
    "sklearn.neighbors.tests.test_neighbors.rng",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.validation.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.test_RadiusNeighborsClassifier_multioutput": {
  "data": {
   "lineno": 471,
   "symbols_in_volume": [
    "itertools.product",
    "numpy.vstack",
    "range",
    "sklearn.model_selection.train_test_split",
    "sklearn.neighbors.RadiusNeighborsClassifier",
    "sklearn.neighbors.tests.test_neighbors.ALGORITHMS",
    "sklearn.neighbors.tests.test_neighbors._weight_func",
    "sklearn.neighbors.tests.test_neighbors.rng",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.validation.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.test_RadiusNeighborsRegressor_multioutput": {
  "data": {
   "lineno": 727,
   "symbols_in_volume": [
    "itertools.product",
    "numpy.abs",
    "numpy.all",
    "numpy.random.RandomState",
    "numpy.sqrt",
    "numpy.vstack",
    "sklearn.neighbors.RadiusNeighborsRegressor",
    "sklearn.neighbors.tests.test_neighbors.ALGORITHMS",
    "sklearn.neighbors.tests.test_neighbors._weight_func",
    "sklearn.neighbors.tests.test_neighbors.rng",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.test_RadiusNeighborsRegressor_multioutput_with_uniform_weight": {
  "data": {
   "lineno": 697,
   "symbols_in_volume": [
    "itertools.product",
    "numpy.array",
    "numpy.mean",
    "sklearn.model_selection.train_test_split",
    "sklearn.neighbors.RadiusNeighborsRegressor",
    "sklearn.neighbors.tests.test_neighbors.ALGORITHMS",
    "sklearn.neighbors.tests.test_neighbors.rng",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.validation.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.test_callable_metric": {
  "data": {
   "lineno": 1022,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.neighbors.NearestNeighbors",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.test_callable_metric.custom_metric": {
  "data": {
   "lineno": 1024,
   "symbols_in_volume": [
    "numpy.sqrt",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.test_dtype_convert": {
  "data": {
   "lineno": 1319,
   "symbols_in_volume": [
    "numpy.eye",
    "sklearn.neighbors.KNeighborsClassifier",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.test_include_self_neighbors_graph": {
  "data": {
   "lineno": 1251,
   "symbols_in_volume": [
    "sklearn.neighbors.kneighbors_graph",
    "sklearn.neighbors.radius_neighbors_graph",
    "sklearn.neighbors.tests.test_neighbors.rng",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.test_k_and_radius_neighbors_X_None": {
  "data": {
   "lineno": 1172,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.neighbors.NearestNeighbors",
    "sklearn.neighbors.tests.test_neighbors.ALGORITHMS",
    "sklearn.neighbors.tests.test_neighbors.check_object_arrays",
    "sklearn.neighbors.tests.test_neighbors.rng",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.test_k_and_radius_neighbors_duplicates": {
  "data": {
   "lineno": 1204,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.ones",
    "numpy.zeros",
    "sklearn.neighbors.NearestNeighbors",
    "sklearn.neighbors.tests.test_neighbors.ALGORITHMS",
    "sklearn.neighbors.tests.test_neighbors.check_object_arrays",
    "sklearn.neighbors.tests.test_neighbors.rng",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.test_k_and_radius_neighbors_train_is_not_query": {
  "data": {
   "lineno": 1143,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.neighbors.NearestNeighbors",
    "sklearn.neighbors.tests.test_neighbors.ALGORITHMS",
    "sklearn.neighbors.tests.test_neighbors.check_object_arrays",
    "sklearn.neighbors.tests.test_neighbors.rng",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.test_kneighbors_classifier": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "numpy.int",
    "numpy.random.RandomState",
    "sklearn.neighbors.KNeighborsClassifier",
    "sklearn.neighbors.tests.test_neighbors.ALGORITHMS",
    "sklearn.neighbors.tests.test_neighbors._weight_func",
    "sklearn.neighbors.tests.test_neighbors.rng",
    "sklearn.utils.testing.assert_array_equal",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.test_kneighbors_classifier_float_labels": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "numpy.float",
    "numpy.int",
    "numpy.random.RandomState",
    "sklearn.neighbors.KNeighborsClassifier",
    "sklearn.neighbors.tests.test_neighbors.rng",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.test_kneighbors_classifier_predict_proba": {
  "data": {
   "lineno": 284,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.neighbors.KNeighborsClassifier",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_array_equal",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.test_kneighbors_classifier_sparse": {
  "data": {
   "lineno": 507,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.int",
    "numpy.random.RandomState",
    "sklearn.neighbors.KNeighborsClassifier",
    "sklearn.neighbors.tests.test_neighbors.SPARSE_TYPES",
    "sklearn.neighbors.tests.test_neighbors.rng",
    "sklearn.utils.testing.assert_array_equal",
    "sparsemat",
    "sparsev"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.test_kneighbors_graph": {
  "data": {
   "lineno": 827,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.eye",
    "sklearn.neighbors.kneighbors_graph",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.test_kneighbors_graph_sparse": {
  "data": {
   "lineno": 867,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "scipy.sparse.csr_matrix",
    "sklearn.neighbors.kneighbors_graph",
    "sklearn.neighbors.tests.test_neighbors.rng",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.test_kneighbors_regressor": {
  "data": {
   "lineno": 576,
   "symbols_in_volume": [
    "abs",
    "numpy.all",
    "numpy.random.RandomState",
    "numpy.sqrt",
    "sklearn.neighbors.KNeighborsRegressor",
    "sklearn.neighbors.tests.test_neighbors.ALGORITHMS",
    "sklearn.neighbors.tests.test_neighbors._weight_func",
    "sklearn.neighbors.tests.test_neighbors.rng",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.test_kneighbors_regressor_multioutput": {
  "data": {
   "lineno": 629,
   "symbols_in_volume": [
    "itertools.product",
    "numpy.abs",
    "numpy.all",
    "numpy.random.RandomState",
    "numpy.sqrt",
    "numpy.vstack",
    "sklearn.neighbors.KNeighborsRegressor",
    "sklearn.neighbors.tests.test_neighbors.ALGORITHMS",
    "sklearn.neighbors.tests.test_neighbors._weight_func",
    "sklearn.neighbors.tests.test_neighbors.rng",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.test_kneighbors_regressor_sparse": {
  "data": {
   "lineno": 754,
   "symbols_in_volume": [
    "ValueError",
    "numpy.int",
    "numpy.mean",
    "numpy.random.RandomState",
    "scipy.sparse.issparse",
    "sklearn.metrics.pairwise.pairwise_distances",
    "sklearn.neighbors.KNeighborsRegressor",
    "sklearn.neighbors.tests.test_neighbors.SPARSE_OR_DENSE",
    "sklearn.neighbors.tests.test_neighbors.SPARSE_TYPES",
    "sklearn.neighbors.tests.test_neighbors.rng",
    "sklearn.utils.testing.assert_raises",
    "sklearn.utils.testing.assert_true",
    "sparsemat",
    "sparsev"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.test_metric_params_interface": {
  "data": {
   "lineno": 1086,
   "symbols_in_volume": [
    "SyntaxWarning",
    "sklearn.neighbors.KNeighborsClassifier",
    "sklearn.utils.testing.assert_warns"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.test_n_neighbors_datatype": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "sklearn.neighbors.NearestNeighbors",
    "sklearn.utils.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.test_neighbors_badargs": {
  "data": {
   "lineno": 923,
   "symbols_in_volume": [
    "ValueError",
    "cls",
    "isinstance",
    "numpy.ones",
    "scipy.sparse.csr_matrix",
    "sklearn.neighbors.KNeighborsClassifier",
    "sklearn.neighbors.KNeighborsRegressor",
    "sklearn.neighbors.NearestNeighbors",
    "sklearn.neighbors.RadiusNeighborsClassifier",
    "sklearn.neighbors.RadiusNeighborsRegressor",
    "sklearn.neighbors.tests.test_neighbors.rng",
    "sklearn.utils.testing.assert_raises",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.test_neighbors_digits": {
  "data": {
   "lineno": 807,
   "symbols_in_volume": [
    "float",
    "int",
    "numpy.arange",
    "sklearn.neighbors.KNeighborsClassifier",
    "sklearn.neighbors.tests.test_neighbors.digits",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.test_neighbors_iris": {
  "data": {
   "lineno": 786,
   "symbols_in_volume": [
    "numpy.mean",
    "sklearn.neighbors.KNeighborsClassifier",
    "sklearn.neighbors.KNeighborsRegressor",
    "sklearn.neighbors.tests.test_neighbors.ALGORITHMS",
    "sklearn.neighbors.tests.test_neighbors.iris",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_greater",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.test_neighbors_metrics": {
  "data": {
   "lineno": 973,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "numpy.dot",
    "numpy.inf",
    "sklearn.metrics",
    "sklearn.neighbors.KDTree.valid_metrics",
    "sklearn.neighbors.NearestNeighbors",
    "sklearn.neighbors.tests.test_neighbors.rng",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.test_neighbors_regressors_zero_distance": {
  "data": {
   "lineno": 420,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.neighbors.KNeighborsRegressor",
    "sklearn.neighbors.RadiusNeighborsRegressor",
    "sklearn.neighbors.tests.test_neighbors.ALGORITHMS",
    "sklearn.utils.testing.assert_array_almost_equal",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.test_non_euclidean_kneighbors": {
  "data": {
   "lineno": 1102,
   "symbols_in_volume": [
    "ValueError",
    "numpy.random.RandomState",
    "numpy.sort",
    "sklearn.metrics.pairwise.pairwise_distances",
    "sklearn.neighbors.NearestNeighbors",
    "sklearn.neighbors.kneighbors_graph",
    "sklearn.neighbors.radius_neighbors_graph",
    "sklearn.neighbors.tests.test_neighbors.rng",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.test_pairwise_boolean_distance": {
  "data": {
   "lineno": 1359,
   "symbols_in_volume": [
    "NN",
    "numpy.random.RandomState",
    "sklearn.exceptions.DataConversionWarning",
    "sklearn.neighbors.NearestNeighbors",
    "sklearn.neighbors.tests.test_neighbors.rng",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.test_precomputed": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "Est",
    "ValueError",
    "getattr",
    "numpy.arange",
    "numpy.random.RandomState",
    "print",
    "sklearn.metrics.pairwise_distances",
    "sklearn.neighbors.KNeighborsClassifier",
    "sklearn.neighbors.KNeighborsRegressor",
    "sklearn.neighbors.NearestNeighbors",
    "sklearn.neighbors.RadiusNeighborsClassifier",
    "sklearn.neighbors.RadiusNeighborsRegressor",
    "sklearn.neighbors.tests.test_neighbors.rng",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.test_precomputed_cross_validation": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "Est",
    "numpy.random.RandomState",
    "sklearn.metrics.pairwise.pairwise_distances",
    "sklearn.model_selection.cross_val_score",
    "sklearn.neighbors.KNeighborsClassifier",
    "sklearn.neighbors.KNeighborsRegressor",
    "sklearn.neighbors.RadiusNeighborsClassifier",
    "sklearn.neighbors.RadiusNeighborsRegressor",
    "sklearn.neighbors.tests.test_neighbors.pytest",
    "sklearn.neighbors.tests.test_neighbors.rng",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.test_predict_sparse_ball_kd_tree": {
  "data": {
   "lineno": 1091,
   "symbols_in_volume": [
    "ValueError",
    "numpy.random.RandomState",
    "scipy.sparse.csr_matrix",
    "sklearn.neighbors.KNeighborsClassifier",
    "sklearn.neighbors.KNeighborsRegressor",
    "sklearn.neighbors.tests.test_neighbors.rng",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.test_radius_neighbors_boundary_handling": {
  "data": {
   "lineno": 452,
   "symbols_in_volume": [
    "numpy.array",
    "object",
    "sklearn.neighbors.NearestNeighbors",
    "sklearn.neighbors.tests.test_neighbors.ALGORITHMS",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.test_radius_neighbors_classifier": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": [
    "numpy.int",
    "numpy.random.RandomState",
    "sklearn.neighbors.RadiusNeighborsClassifier",
    "sklearn.neighbors.tests.test_neighbors.ALGORITHMS",
    "sklearn.neighbors.tests.test_neighbors._weight_func",
    "sklearn.neighbors.tests.test_neighbors.rng",
    "sklearn.utils.testing.assert_array_equal",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.test_radius_neighbors_classifier_outlier_labeling": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.neighbors.RadiusNeighborsClassifier",
    "sklearn.neighbors.tests.test_neighbors.ALGORITHMS",
    "sklearn.neighbors.tests.test_neighbors._weight_func",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.test_radius_neighbors_classifier_when_no_neighbors": {
  "data": {
   "lineno": 343,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "rnc",
    "sklearn.neighbors.RadiusNeighborsClassifier",
    "sklearn.neighbors.tests.test_neighbors.ALGORITHMS",
    "sklearn.neighbors.tests.test_neighbors._weight_func",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.test_radius_neighbors_classifier_zero_distance": {
  "data": {
   "lineno": 399,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.neighbors.RadiusNeighborsClassifier",
    "sklearn.neighbors.tests.test_neighbors.ALGORITHMS",
    "sklearn.neighbors.tests.test_neighbors._weight_func",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.test_radius_neighbors_graph": {
  "data": {
   "lineno": 885,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.neighbors.radius_neighbors_graph",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.test_radius_neighbors_graph_sparse": {
  "data": {
   "lineno": 905,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "scipy.sparse.csr_matrix",
    "sklearn.neighbors.radius_neighbors_graph",
    "sklearn.neighbors.tests.test_neighbors.rng",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.test_radius_neighbors_regressor": {
  "data": {
   "lineno": 656,
   "symbols_in_volume": [
    "UserWarning",
    "abs",
    "numpy.all",
    "numpy.full",
    "numpy.isnan",
    "numpy.random.RandomState",
    "numpy.sqrt",
    "sklearn.neighbors.RadiusNeighborsRegressor",
    "sklearn.neighbors.tests.test_neighbors.ALGORITHMS",
    "sklearn.neighbors.tests.test_neighbors._weight_func",
    "sklearn.neighbors.tests.test_neighbors.rng",
    "sklearn.utils.testing.assert_true",
    "sklearn.utils.testing.assert_warns_message"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.test_same_knn_parallel": {
  "data": {
   "lineno": 1266,
   "symbols_in_volume": [
    "sklearn.datasets.make_classification",
    "sklearn.model_selection.train_test_split",
    "sklearn.neighbors.KNeighborsClassifier",
    "sklearn.neighbors.tests.test_neighbors.ALGORITHMS",
    "sklearn.neighbors.tests.test_neighbors.pytest",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.test_same_radius_neighbors_parallel": {
  "data": {
   "lineno": 1292,
   "symbols_in_volume": [
    "len",
    "range",
    "sklearn.datasets.make_classification",
    "sklearn.model_selection.train_test_split",
    "sklearn.neighbors.RadiusNeighborsClassifier",
    "sklearn.neighbors.tests.test_neighbors.ALGORITHMS",
    "sklearn.neighbors.tests.test_neighbors.pytest",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.test_sparse_metric_callable": {
  "data": {
   "lineno": 1329,
   "symbols_in_volume": [
    "numpy.array",
    "scipy.sparse.csr_matrix",
    "sklearn.neighbors.NearestNeighbors",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.test_sparse_metric_callable.sparse_metric": {
  "data": {
   "lineno": 1330,
   "symbols_in_volume": [
    "scipy.sparse.issparse",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.test_unsupervised_inputs": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "input",
    "sklearn.neighbors.BallTree",
    "sklearn.neighbors.KDTree",
    "sklearn.neighbors.NearestNeighbors",
    "sklearn.neighbors.tests.test_neighbors.rng",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.test_unsupervised_kneighbors": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "len",
    "range",
    "sklearn.neighbors.NearestNeighbors",
    "sklearn.neighbors.tests.test_neighbors.ALGORITHMS",
    "sklearn.neighbors.tests.test_neighbors.P",
    "sklearn.neighbors.tests.test_neighbors.rng",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.test_unsupervised_radius_neighbors": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "len",
    "list",
    "numpy.concatenate",
    "numpy.random.RandomState",
    "range",
    "sklearn.neighbors.NearestNeighbors",
    "sklearn.neighbors.tests.test_neighbors.ALGORITHMS",
    "sklearn.neighbors.tests.test_neighbors.P",
    "sklearn.neighbors.tests.test_neighbors.rng",
    "sklearn.utils.testing.assert_array_almost_equal",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.test_valid_brute_metric_for_auto_algorithm": {
  "data": {
   "lineno": 1042,
   "symbols_in_volume": [
    "dict",
    "numpy.dot",
    "scipy.sparse.csr_matrix",
    "sklearn.metrics.pairwise_distances",
    "sklearn.neighbors.NearestNeighbors",
    "sklearn.neighbors.base.VALID_METRICS",
    "sklearn.neighbors.base.VALID_METRICS_SPARSE",
    "sklearn.neighbors.tests.test_neighbors.rng",
    "sklearn.utils.testing.assert_false",
    "sklearn.utils.testing.assert_in"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.train_test_split": {
  "data": {
   "shadows": "sklearn.model_selection.train_test_split"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_quad_tree": {
  "data": {},
  "type": "module"
 },
 "sklearn.neighbors.tests.test_quad_tree._QuadTree": {
  "data": {
   "shadows": "sklearn.neighbors.quad_tree._QuadTree"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_quad_tree.check_random_state": {
  "data": {
   "shadows": "sklearn.utils.check_random_state"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_quad_tree.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_quad_tree.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_quad_tree.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.neighbors.tests.test_quad_tree.test_qt_insert_duplicate": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "enumerate",
    "numpy.r_",
    "sklearn.neighbors.quad_tree._QuadTree",
    "sklearn.neighbors.tests.test_quad_tree.pytest",
    "sklearn.utils.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_quad_tree.test_quad_tree_pickle": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "sklearn.neighbors.quad_tree._QuadTree",
    "sklearn.neighbors.tests.test_quad_tree.pickle",
    "sklearn.neighbors.tests.test_quad_tree.pytest",
    "sklearn.utils.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_quad_tree.test_quadtree_boundary_computation": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.float32",
    "sklearn.neighbors.quad_tree._QuadTree"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_quad_tree.test_quadtree_similar_point": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.float32",
    "sklearn.neighbors.quad_tree._QuadTree"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.tests.test_quad_tree.test_summarize": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "sklearn.neighbors.quad_tree._QuadTree.test_summarize"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.unsupervised": {
  "data": {},
  "type": "module"
 },
 "sklearn.neighbors.unsupervised.NearestNeighbors": {
  "data": {
   "lineno": 9
  },
  "type": "class"
 },
 "sklearn.neighbors.unsupervised.NearestNeighbors.__init__": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "sklearn.neighbors.unsupervised.NearestNeighbors",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network": {
  "data": {},
  "type": "module"
 },
 "sklearn.neural_network.__all__": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "sklearn.neural_network._base": {
  "data": {
   "symbols_in_volume": [
    "sklearn.neural_network._base.binary_log_loss",
    "sklearn.neural_network._base.identity",
    "sklearn.neural_network._base.inplace_identity_derivative",
    "sklearn.neural_network._base.inplace_logistic_derivative",
    "sklearn.neural_network._base.inplace_relu_derivative",
    "sklearn.neural_network._base.inplace_tanh_derivative",
    "sklearn.neural_network._base.log_loss",
    "sklearn.neural_network._base.logistic",
    "sklearn.neural_network._base.relu",
    "sklearn.neural_network._base.softmax",
    "sklearn.neural_network._base.squared_loss",
    "sklearn.neural_network._base.tanh"
   ]
  },
  "type": "module"
 },
 "sklearn.neural_network._base.ACTIVATIONS": {
  "data": {
   "lineno": 98
  },
  "type": "constant"
 },
 "sklearn.neural_network._base.DERIVATIVES": {
  "data": {
   "lineno": 172
  },
  "type": "constant"
 },
 "sklearn.neural_network._base.LOSS_FUNCTIONS": {
  "data": {
   "lineno": 251
  },
  "type": "constant"
 },
 "sklearn.neural_network._base.binary_log_loss": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "numpy.clip",
    "numpy.log",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network._base.identity": {
  "data": {
   "lineno": 12
  },
  "type": "function"
 },
 "sklearn.neural_network._base.inplace_identity_derivative": {
  "data": {
   "lineno": 102
  },
  "type": "function"
 },
 "sklearn.neural_network._base.inplace_logistic_derivative": {
  "data": {
   "lineno": 117
  },
  "type": "function"
 },
 "sklearn.neural_network._base.inplace_relu_derivative": {
  "data": {
   "lineno": 154
  },
  "type": "function"
 },
 "sklearn.neural_network._base.inplace_tanh_derivative": {
  "data": {
   "lineno": 136
  },
  "type": "function"
 },
 "sklearn.neural_network._base.log_loss": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "numpy.append",
    "numpy.clip",
    "numpy.log",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network._base.logistic": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "scipy.special.expit"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network._base.logistic_sigmoid": {
  "data": {
   "shadows": "scipy.special.expit"
  },
  "type": "import"
 },
 "sklearn.neural_network._base.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.neural_network._base.relu": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "numpy.clip",
    "numpy.finfo"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network._base.softmax": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "numpy.exp",
    "numpy.newaxis"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network._base.squared_loss": {
  "data": {
   "lineno": 178
  },
  "type": "function"
 },
 "sklearn.neural_network._base.tanh": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "numpy.tanh"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network._stochastic_optimizers": {
  "data": {},
  "type": "module"
 },
 "sklearn.neural_network._stochastic_optimizers.AdamOptimizer": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "sklearn.neural_network._stochastic_optimizers.BaseOptimizer"
   ]
  },
  "type": "class"
 },
 "sklearn.neural_network._stochastic_optimizers.AdamOptimizer.__init__": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "numpy.zeros_like",
    "sklearn.neural_network._stochastic_optimizers.AdamOptimizer",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network._stochastic_optimizers.AdamOptimizer._get_updates": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "numpy.sqrt",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network._stochastic_optimizers.BaseOptimizer": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "sklearn.neural_network._stochastic_optimizers.BaseOptimizer.__init__": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "float"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network._stochastic_optimizers.BaseOptimizer.iteration_ends": {
  "data": {
   "lineno": 47
  },
  "type": "function"
 },
 "sklearn.neural_network._stochastic_optimizers.BaseOptimizer.trigger_stopping": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "print"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network._stochastic_optimizers.BaseOptimizer.update_params": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network._stochastic_optimizers.SGDOptimizer": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "sklearn.neural_network._stochastic_optimizers.BaseOptimizer"
   ]
  },
  "type": "class"
 },
 "sklearn.neural_network._stochastic_optimizers.SGDOptimizer.__init__": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "numpy.zeros_like",
    "sklearn.neural_network._stochastic_optimizers.SGDOptimizer",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network._stochastic_optimizers.SGDOptimizer._get_updates": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network._stochastic_optimizers.SGDOptimizer.iteration_ends": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "float"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network._stochastic_optimizers.SGDOptimizer.trigger_stopping": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "print"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network._stochastic_optimizers.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.neural_network.multilayer_perceptron": {
  "data": {},
  "type": "module"
 },
 "sklearn.neural_network.multilayer_perceptron.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "sklearn.neural_network.multilayer_perceptron.BaseMultilayerPerceptron": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "abc.ABCMeta"
   ]
  },
  "type": "class"
 },
 "sklearn.neural_network.multilayer_perceptron.BaseMultilayerPerceptron.__init__": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network.multilayer_perceptron.BaseMultilayerPerceptron._backprop": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "inplace_derivative",
    "numpy.array",
    "numpy.dot",
    "numpy.sum",
    "range",
    "safe_sparse_dot"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network.multilayer_perceptron.BaseMultilayerPerceptron._compute_loss_grad": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "numpy.mean",
    "safe_sparse_dot"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network.multilayer_perceptron.BaseMultilayerPerceptron._fit": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "ValueError",
    "check_random_state",
    "hasattr",
    "list",
    "min",
    "numpy.any",
    "numpy.array",
    "numpy.clip",
    "numpy.empty",
    "numpy.empty_like",
    "sklearn.neural_network.multilayer_perceptron._STOCHASTIC_SOLVERS",
    "sklearn.neural_network.multilayer_perceptron.warnings",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network.multilayer_perceptron.BaseMultilayerPerceptron._fit_lbfgs": {
  "data": {
   "lineno": 430,
   "symbols_in_volume": [
    "range",
    "scipy.optimize.fmin_l_bfgs_b",
    "sklearn.neural_network.multilayer_perceptron._pack"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network.multilayer_perceptron.BaseMultilayerPerceptron._fit_stochastic": {
  "data": {
   "lineno": 470,
   "symbols_in_volume": [
    "AdamOptimizer",
    "KeyboardInterrupt",
    "SGDOptimizer",
    "gen_batches",
    "hasattr",
    "is_classifier",
    "min",
    "numpy.clip",
    "print",
    "range",
    "shuffle",
    "sklearn.neural_network.multilayer_perceptron.warnings",
    "train_test_split"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network.multilayer_perceptron.BaseMultilayerPerceptron._forward_pass": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "hidden_activation",
    "output_activation",
    "range",
    "safe_sparse_dot"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network.multilayer_perceptron.BaseMultilayerPerceptron._init_coef": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": [
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network.multilayer_perceptron.BaseMultilayerPerceptron._initialize": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "is_classifier",
    "len",
    "numpy.inf",
    "range",
    "sklearn.neural_network.multilayer_perceptron._STOCHASTIC_SOLVERS"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network.multilayer_perceptron.BaseMultilayerPerceptron._loss_grad_lbfgs": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "sklearn.neural_network.multilayer_perceptron._pack"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network.multilayer_perceptron.BaseMultilayerPerceptron._partial_fit": {
  "data": {
   "lineno": 642
  },
  "type": "function"
 },
 "sklearn.neural_network.multilayer_perceptron.BaseMultilayerPerceptron._predict": {
  "data": {
   "lineno": 645,
   "symbols_in_volume": [
    "check_array",
    "hasattr",
    "list",
    "numpy.empty",
    "range"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network.multilayer_perceptron.BaseMultilayerPerceptron._unpack": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "numpy.reshape",
    "range"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network.multilayer_perceptron.BaseMultilayerPerceptron._update_no_improvement_count": {
  "data": {
   "lineno": 571,
   "symbols_in_volume": [
    "print"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network.multilayer_perceptron.BaseMultilayerPerceptron._validate_hyperparameters": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "isinstance",
    "sklearn.neural_network.multilayer_perceptron._STOCHASTIC_SOLVERS"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network.multilayer_perceptron.BaseMultilayerPerceptron.fit": {
  "data": {
   "lineno": 602
  },
  "type": "function"
 },
 "sklearn.neural_network.multilayer_perceptron.BaseMultilayerPerceptron.partial_fit": {
  "data": {
   "lineno": 620,
   "symbols_in_volume": [
    "AttributeError",
    "property",
    "sklearn.neural_network.multilayer_perceptron._STOCHASTIC_SOLVERS"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network.multilayer_perceptron.MLPClassifier": {
  "data": {
   "lineno": 682,
   "symbols_in_volume": [
    "sklearn.neural_network.multilayer_perceptron.BaseMultilayerPerceptron"
   ]
  },
  "type": "class"
 },
 "sklearn.neural_network.multilayer_perceptron.MLPClassifier.__init__": {
  "data": {
   "lineno": 888,
   "symbols_in_volume": [
    "shuffle",
    "sklearn.neural_network.multilayer_perceptron.MLPClassifier",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network.multilayer_perceptron.MLPClassifier._partial_fit": {
  "data": {
   "lineno": 1009,
   "symbols_in_volume": [
    "LabelBinarizer",
    "_check_partial_fit_first_call",
    "sklearn.neural_network.multilayer_perceptron.MLPClassifier",
    "super",
    "type_of_target"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network.multilayer_perceptron.MLPClassifier._validate_input": {
  "data": {
   "lineno": 912,
   "symbols_in_volume": [
    "LabelBinarizer",
    "ValueError",
    "check_X_y",
    "column_or_1d",
    "len",
    "numpy.setdiff1d",
    "set",
    "unique_labels"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network.multilayer_perceptron.MLPClassifier.fit": {
  "data": {
   "lineno": 960,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network.multilayer_perceptron.MLPClassifier.partial_fit": {
  "data": {
   "lineno": 979,
   "symbols_in_volume": [
    "AttributeError",
    "property",
    "sklearn.neural_network.multilayer_perceptron._STOCHASTIC_SOLVERS"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network.multilayer_perceptron.MLPClassifier.predict": {
  "data": {
   "lineno": 939,
   "symbols_in_volume": [
    "check_is_fitted"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network.multilayer_perceptron.MLPClassifier.predict_log_proba": {
  "data": {
   "lineno": 1021,
   "symbols_in_volume": [
    "numpy.log"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network.multilayer_perceptron.MLPClassifier.predict_proba": {
  "data": {
   "lineno": 1039,
   "symbols_in_volume": [
    "check_is_fitted",
    "numpy.vstack"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network.multilayer_perceptron.MLPRegressor": {
  "data": {
   "lineno": 1065,
   "symbols_in_volume": [
    "sklearn.neural_network.multilayer_perceptron.BaseMultilayerPerceptron"
   ]
  },
  "type": "class"
 },
 "sklearn.neural_network.multilayer_perceptron.MLPRegressor.__init__": {
  "data": {
   "lineno": 1268,
   "symbols_in_volume": [
    "shuffle",
    "sklearn.neural_network.multilayer_perceptron.MLPRegressor",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network.multilayer_perceptron.MLPRegressor._validate_input": {
  "data": {
   "lineno": 1312,
   "symbols_in_volume": [
    "check_X_y",
    "column_or_1d"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network.multilayer_perceptron.MLPRegressor.predict": {
  "data": {
   "lineno": 1293,
   "symbols_in_volume": [
    "check_is_fitted"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network.multilayer_perceptron._STOCHASTIC_SOLVERS": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "sklearn.neural_network.multilayer_perceptron._pack": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "numpy.hstack"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network.multilayer_perceptron.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "sklearn.neural_network.multilayer_perceptron.fmin_l_bfgs_b": {
  "data": {
   "shadows": "scipy.optimize.fmin_l_bfgs_b"
  },
  "type": "import"
 },
 "sklearn.neural_network.multilayer_perceptron.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.neural_network.multilayer_perceptron.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.neural_network.rbm": {
  "data": {},
  "type": "module"
 },
 "sklearn.neural_network.rbm.BernoulliRBM": {
  "data": {
   "lineno": 27
  },
  "type": "class"
 },
 "sklearn.neural_network.rbm.BernoulliRBM.__init__": {
  "data": {
   "lineno": 99
  },
  "type": "function"
 },
 "sklearn.neural_network.rbm.BernoulliRBM._fit": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "float",
    "numpy.asarray",
    "numpy.dot",
    "numpy.floor",
    "safe_sparse_dot"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network.rbm.BernoulliRBM._free_energy": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "numpy.logaddexp",
    "safe_sparse_dot"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network.rbm.BernoulliRBM._mean_hiddens": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "safe_sparse_dot",
    "scipy.special.expit"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network.rbm.BernoulliRBM._sample_hiddens": {
  "data": {
   "lineno": 143
  },
  "type": "function"
 },
 "sklearn.neural_network.rbm.BernoulliRBM._sample_visibles": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "numpy.dot",
    "scipy.special.expit"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network.rbm.BernoulliRBM.fit": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": [
    "check_array",
    "check_random_state",
    "float",
    "gen_even_slices",
    "int",
    "list",
    "numpy.asarray",
    "numpy.ceil",
    "numpy.float64",
    "numpy.zeros",
    "print",
    "sklearn.neural_network.rbm.time",
    "type",
    "xrange"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network.rbm.BernoulliRBM.gibbs": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "check_is_fitted",
    "check_random_state",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network.rbm.BernoulliRBM.partial_fit": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "check_array",
    "check_random_state",
    "hasattr",
    "numpy.asarray",
    "numpy.float64",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network.rbm.BernoulliRBM.score_samples": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "check_array",
    "check_is_fitted",
    "check_random_state",
    "log_logistic",
    "numpy.arange",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.issparse"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network.rbm.BernoulliRBM.transform": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "check_array",
    "check_is_fitted",
    "numpy.float64"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network.rbm.expit": {
  "data": {
   "shadows": "scipy.special.expit"
  },
  "type": "import"
 },
 "sklearn.neural_network.rbm.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.neural_network.rbm.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.neural_network.rbm.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "sklearn.neural_network.tests": {
  "data": {},
  "type": "module"
 },
 "sklearn.neural_network.tests.test_mlp": {
  "data": {
   "symbols_in_volume": [
    "numpy.seterr",
    "sklearn.datasets.load_boston",
    "sklearn.datasets.load_digits",
    "sklearn.datasets.load_iris",
    "sklearn.neural_network.tests.test_mlp.X_digits_binary",
    "sklearn.neural_network.tests.test_mlp.X_digits_multi",
    "sklearn.neural_network.tests.test_mlp.boston",
    "sklearn.neural_network.tests.test_mlp.digits_dataset_binary",
    "sklearn.neural_network.tests.test_mlp.digits_dataset_multi",
    "sklearn.neural_network.tests.test_mlp.iris",
    "sklearn.neural_network.tests.test_mlp.y_digits_binary",
    "sklearn.neural_network.tests.test_mlp.y_digits_multi",
    "sklearn.preprocessing.MinMaxScaler",
    "sklearn.preprocessing.StandardScaler"
   ]
  },
  "type": "module"
 },
 "sklearn.neural_network.tests.test_mlp.ACTIVATION_TYPES": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "sklearn.neural_network.tests.test_mlp.ConvergenceWarning": {
  "data": {
   "shadows": "sklearn.exceptions.ConvergenceWarning"
  },
  "type": "import"
 },
 "sklearn.neural_network.tests.test_mlp.LabelBinarizer": {
  "data": {
   "shadows": "sklearn.preprocessing.LabelBinarizer"
  },
  "type": "import"
 },
 "sklearn.neural_network.tests.test_mlp.MLPClassifier": {
  "data": {
   "shadows": "sklearn.neural_network.MLPClassifier"
  },
  "type": "import"
 },
 "sklearn.neural_network.tests.test_mlp.MLPRegressor": {
  "data": {
   "shadows": "sklearn.neural_network.MLPRegressor"
  },
  "type": "import"
 },
 "sklearn.neural_network.tests.test_mlp.MinMaxScaler": {
  "data": {
   "shadows": "sklearn.preprocessing.MinMaxScaler"
  },
  "type": "import"
 },
 "sklearn.neural_network.tests.test_mlp.StandardScaler": {
  "data": {
   "shadows": "sklearn.preprocessing.StandardScaler"
  },
  "type": "import"
 },
 "sklearn.neural_network.tests.test_mlp.StringIO": {
  "data": {
   "shadows": "sklearn.externals.six.moves.cStringIO"
  },
  "type": "import"
 },
 "sklearn.neural_network.tests.test_mlp.X_digits_binary": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "sklearn.neural_network.tests.test_mlp.X_digits_multi": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "sklearn.neural_network.tests.test_mlp.X_iris": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "sklearn.neural_network.tests.test_mlp.Xboston": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "sklearn.neural_network.tests.test_mlp.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "sklearn.neural_network.tests.test_mlp.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.neural_network.tests.test_mlp.assert_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.neural_network.tests.test_mlp.assert_false": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_false"
  },
  "type": "import"
 },
 "sklearn.neural_network.tests.test_mlp.assert_greater": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_greater"
  },
  "type": "import"
 },
 "sklearn.neural_network.tests.test_mlp.assert_raise_message": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raise_message"
  },
  "type": "import"
 },
 "sklearn.neural_network.tests.test_mlp.assert_raises": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.neural_network.tests.test_mlp.boston": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "sklearn.neural_network.tests.test_mlp.classification_datasets": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "sklearn.neural_network.tests.test_mlp.csr_matrix": {
  "data": {
   "shadows": "scipy.sparse.csr_matrix"
  },
  "type": "import"
 },
 "sklearn.neural_network.tests.test_mlp.digits_dataset_binary": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "sklearn.neural_network.tests.test_mlp.digits_dataset_multi": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "sklearn.neural_network.tests.test_mlp.ignore_warnings": {
  "data": {
   "shadows": "sklearn.utils.testing.ignore_warnings"
  },
  "type": "import"
 },
 "sklearn.neural_network.tests.test_mlp.iris": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "sklearn.neural_network.tests.test_mlp.load_boston": {
  "data": {
   "shadows": "sklearn.datasets.load_boston"
  },
  "type": "import"
 },
 "sklearn.neural_network.tests.test_mlp.load_digits": {
  "data": {
   "shadows": "sklearn.datasets.load_digits"
  },
  "type": "import"
 },
 "sklearn.neural_network.tests.test_mlp.load_iris": {
  "data": {
   "shadows": "sklearn.datasets.load_iris"
  },
  "type": "import"
 },
 "sklearn.neural_network.tests.test_mlp.make_multilabel_classification": {
  "data": {
   "shadows": "sklearn.datasets.make_multilabel_classification"
  },
  "type": "import"
 },
 "sklearn.neural_network.tests.test_mlp.make_regression": {
  "data": {
   "shadows": "sklearn.datasets.make_regression"
  },
  "type": "import"
 },
 "sklearn.neural_network.tests.test_mlp.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.neural_network.tests.test_mlp.roc_auc_score": {
  "data": {
   "shadows": "sklearn.metrics.roc_auc_score"
  },
  "type": "import"
 },
 "sklearn.neural_network.tests.test_mlp.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "sklearn.neural_network.tests.test_mlp.test_adaptive_learning_rate": {
  "data": {
   "lineno": 558,
   "symbols_in_volume": [
    "clf",
    "clf._optimizer.learning_rate",
    "clf.fit",
    "clf.max_iter",
    "clf.n_iter_",
    "sklearn.neural_network.MLPClassifier",
    "sklearn.utils.testing.assert_greater"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network.tests.test_mlp.test_alpha": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "absolute_sum",
    "len",
    "numpy.abs",
    "numpy.arange",
    "numpy.array",
    "numpy.sum",
    "range",
    "sklearn.exceptions.ConvergenceWarning",
    "sklearn.neural_network.MLPClassifier",
    "sklearn.neural_network.tests.test_mlp.X_digits_binary",
    "sklearn.neural_network.tests.test_mlp.y_digits_binary",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network.tests.test_mlp.test_early_stopping": {
  "data": {
   "lineno": 542,
   "symbols_in_volume": [
    "clf",
    "clf.best_validation_score_",
    "clf.fit",
    "clf.max_iter",
    "clf.n_iter_",
    "clf.validation_scores_",
    "max",
    "sklearn.neural_network.MLPClassifier",
    "sklearn.neural_network.tests.test_mlp.X_digits_binary",
    "sklearn.neural_network.tests.test_mlp.y_digits_binary",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_greater"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network.tests.test_mlp.test_fit": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.inf",
    "numpy.testing.assert_almost_equal",
    "numpy.zeros_like",
    "sklearn.neural_network.MLPClassifier"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network.tests.test_mlp.test_gradient": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "loss_grad_fun",
    "numpy.arange",
    "numpy.empty",
    "numpy.eye",
    "numpy.hstack",
    "numpy.mod",
    "numpy.random.random",
    "numpy.size",
    "numpy.testing.assert_almost_equal",
    "numpy.zeros",
    "range",
    "sklearn.neural_network.MLPClassifier",
    "sklearn.neural_network.tests.test_mlp.ACTIVATION_TYPES",
    "sklearn.preprocessing.LabelBinarizer"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network.tests.test_mlp.test_gradient.loss_grad_fun": {
  "data": {
   "lineno": 214
  },
  "type": "function"
 },
 "sklearn.neural_network.tests.test_mlp.test_lbfgs_classification": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "sklearn.neural_network.MLPClassifier",
    "sklearn.neural_network.tests.test_mlp.ACTIVATION_TYPES",
    "sklearn.neural_network.tests.test_mlp.classification_datasets",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_greater"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network.tests.test_mlp.test_lbfgs_regression": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "sklearn.neural_network.MLPRegressor",
    "sklearn.neural_network.tests.test_mlp.ACTIVATION_TYPES",
    "sklearn.neural_network.tests.test_mlp.Xboston",
    "sklearn.neural_network.tests.test_mlp.yboston",
    "sklearn.utils.testing.assert_greater"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network.tests.test_mlp.test_learning_rate_warmstart": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "pow",
    "sklearn.exceptions.ConvergenceWarning",
    "sklearn.neural_network.MLPClassifier",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network.tests.test_mlp.test_multilabel_classification": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "range",
    "sklearn.datasets.make_multilabel_classification",
    "sklearn.neural_network.MLPClassifier",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_greater"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network.tests.test_mlp.test_multioutput_regression": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "sklearn.datasets.make_regression",
    "sklearn.neural_network.MLPRegressor",
    "sklearn.utils.testing.assert_greater"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network.tests.test_mlp.test_n_iter_no_change": {
  "data": {
   "lineno": 594,
   "symbols_in_volume": [
    "clf",
    "clf._no_improvement_count",
    "clf.fit",
    "clf.n_iter_",
    "sklearn.neural_network.MLPClassifier",
    "sklearn.neural_network.tests.test_mlp.X_digits_binary",
    "sklearn.neural_network.tests.test_mlp.y_digits_binary",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_greater"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network.tests.test_mlp.test_n_iter_no_change_inf": {
  "data": {
   "lineno": 613,
   "symbols_in_volume": [
    "clf",
    "clf._no_improvement_count",
    "clf.fit",
    "clf.n_iter_",
    "numpy.inf",
    "sklearn.exceptions.ConvergenceWarning",
    "sklearn.neural_network.MLPClassifier",
    "sklearn.neural_network.tests.test_mlp.X_digits_binary",
    "sklearn.neural_network.tests.test_mlp.y_digits_binary",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network.tests.test_mlp.test_params_errors": {
  "data": {
   "lineno": 401,
   "symbols_in_volume": [
    "ValueError",
    "clf",
    "sklearn.neural_network.MLPClassifier",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network.tests.test_mlp.test_partial_fit_classes_error": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.neural_network.MLPClassifier",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network.tests.test_mlp.test_partial_fit_classification": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": [
    "numpy.testing.assert_array_equal",
    "numpy.unique",
    "range",
    "sklearn.exceptions.ConvergenceWarning",
    "sklearn.neural_network.MLPClassifier",
    "sklearn.neural_network.tests.test_mlp.classification_datasets",
    "sklearn.utils.testing.assert_greater",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network.tests.test_mlp.test_partial_fit_errors": {
  "data": {
   "lineno": 388,
   "symbols_in_volume": [
    "ValueError",
    "hasattr",
    "sklearn.neural_network.MLPClassifier",
    "sklearn.utils.testing.assert_false",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network.tests.test_mlp.test_partial_fit_regression": {
  "data": {
   "lineno": 362,
   "symbols_in_volume": [
    "numpy.testing.assert_almost_equal",
    "range",
    "sklearn.neural_network.MLPRegressor",
    "sklearn.neural_network.tests.test_mlp.Xboston",
    "sklearn.neural_network.tests.test_mlp.warnings",
    "sklearn.neural_network.tests.test_mlp.yboston",
    "sklearn.utils.testing.assert_greater"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network.tests.test_mlp.test_partial_fit_unseen_classes": {
  "data": {
   "lineno": 351,
   "symbols_in_volume": [
    "sklearn.neural_network.MLPClassifier",
    "sklearn.utils.testing.assert_greater"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network.tests.test_mlp.test_predict_proba_binary": {
  "data": {
   "lineno": 430,
   "symbols_in_volume": [
    "clf",
    "clf.fit",
    "clf.predict_log_proba",
    "clf.predict_proba",
    "numpy.log",
    "numpy.testing.assert_array_equal",
    "sklearn.exceptions.ConvergenceWarning",
    "sklearn.metrics.roc_auc_score",
    "sklearn.neural_network.MLPClassifier",
    "sklearn.neural_network.tests.test_mlp.X_digits_binary",
    "sklearn.neural_network.tests.test_mlp.y_digits_binary",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network.tests.test_mlp.test_predict_proba_multiclass": {
  "data": {
   "lineno": 453,
   "symbols_in_volume": [
    "clf",
    "clf.fit",
    "clf.predict_log_proba",
    "clf.predict_proba",
    "numpy.log",
    "numpy.testing.assert_array_equal",
    "numpy.unique",
    "sklearn.exceptions.ConvergenceWarning",
    "sklearn.neural_network.MLPClassifier",
    "sklearn.neural_network.tests.test_mlp.X_digits_multi",
    "sklearn.neural_network.tests.test_mlp.y_digits_multi",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network.tests.test_mlp.test_predict_proba_multilabel": {
  "data": {
   "lineno": 474,
   "symbols_in_volume": [
    "clf",
    "clf.fit",
    "clf.predict_log_proba",
    "clf.predict_proba",
    "numpy.log",
    "numpy.testing.assert_array_equal",
    "sklearn.datasets.make_multilabel_classification",
    "sklearn.neural_network.MLPClassifier",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_greater"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network.tests.test_mlp.test_sparse_matrices": {
  "data": {
   "lineno": 498,
   "symbols_in_volume": [
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_array_equal",
    "scipy.sparse.csr_matrix",
    "sklearn.neural_network.MLPClassifier",
    "sklearn.neural_network.tests.test_mlp.X_digits_binary",
    "sklearn.neural_network.tests.test_mlp.y_digits_binary"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network.tests.test_mlp.test_tolerance": {
  "data": {
   "lineno": 515,
   "symbols_in_volume": [
    "clf",
    "clf.fit",
    "clf.max_iter",
    "clf.n_iter_",
    "sklearn.neural_network.MLPClassifier",
    "sklearn.utils.testing.assert_greater"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network.tests.test_mlp.test_verbose_sgd": {
  "data": {
   "lineno": 525,
   "symbols_in_volume": [
    "clf",
    "clf.fit",
    "clf.partial_fit",
    "sklearn.exceptions.ConvergenceWarning",
    "sklearn.externals.six.moves.cStringIO",
    "sklearn.neural_network.MLPClassifier",
    "sklearn.neural_network.tests.test_mlp.sys",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network.tests.test_mlp.test_warm_start": {
  "data": {
   "lineno": 568,
   "symbols_in_volume": [
    "RuntimeWarning",
    "ValueError",
    "clf",
    "clf.fit",
    "numpy.array",
    "numpy.unique",
    "sklearn.neural_network.MLPClassifier",
    "sklearn.neural_network.tests.test_mlp.X_iris",
    "sklearn.neural_network.tests.test_mlp.y_iris",
    "sklearn.utils.testing.assert_raise_message",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network.tests.test_mlp.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.neural_network.tests.test_mlp.y_digits_binary": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "sklearn.neural_network.tests.test_mlp.y_digits_multi": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "sklearn.neural_network.tests.test_mlp.y_iris": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "sklearn.neural_network.tests.test_mlp.yboston": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "sklearn.neural_network.tests.test_rbm": {
  "data": {
   "symbols_in_volume": [
    "numpy.seterr",
    "sklearn.datasets.load_digits",
    "sklearn.neural_network.tests.test_rbm.Xdigits"
   ]
  },
  "type": "module"
 },
 "sklearn.neural_network.tests.test_rbm.BernoulliRBM": {
  "data": {
   "shadows": "sklearn.neural_network.BernoulliRBM"
  },
  "type": "import"
 },
 "sklearn.neural_network.tests.test_rbm.StringIO": {
  "data": {
   "shadows": "sklearn.externals.six.moves.cStringIO"
  },
  "type": "import"
 },
 "sklearn.neural_network.tests.test_rbm.Xdigits": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "sklearn.neural_network.tests.test_rbm.assert_all_finite": {
  "data": {
   "shadows": "sklearn.utils.validation.assert_all_finite"
  },
  "type": "import"
 },
 "sklearn.neural_network.tests.test_rbm.assert_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "sklearn.neural_network.tests.test_rbm.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.neural_network.tests.test_rbm.assert_true": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_true"
  },
  "type": "import"
 },
 "sklearn.neural_network.tests.test_rbm.csc_matrix": {
  "data": {
   "shadows": "scipy.sparse.csc_matrix"
  },
  "type": "import"
 },
 "sklearn.neural_network.tests.test_rbm.csr_matrix": {
  "data": {
   "shadows": "scipy.sparse.csr_matrix"
  },
  "type": "import"
 },
 "sklearn.neural_network.tests.test_rbm.lil_matrix": {
  "data": {
   "shadows": "scipy.sparse.lil_matrix"
  },
  "type": "import"
 },
 "sklearn.neural_network.tests.test_rbm.load_digits": {
  "data": {
   "shadows": "sklearn.datasets.load_digits"
  },
  "type": "import"
 },
 "sklearn.neural_network.tests.test_rbm.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.neural_network.tests.test_rbm.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "sklearn.neural_network.tests.test_rbm.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "sklearn.neural_network.tests.test_rbm.test_fit": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "sklearn.neural_network.BernoulliRBM",
    "sklearn.neural_network.tests.test_rbm.Xdigits",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network.tests.test_rbm.test_fit_gibbs": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.random.RandomState",
    "sklearn.neural_network.BernoulliRBM",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network.tests.test_rbm.test_fit_gibbs_sparse": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.random.RandomState",
    "scipy.sparse.csc_matrix",
    "sklearn.neural_network.BernoulliRBM",
    "sklearn.neural_network.tests.test_rbm.test_fit_gibbs",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network.tests.test_rbm.test_gibbs_smoke": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "numpy.all",
    "sklearn.neural_network.BernoulliRBM",
    "sklearn.neural_network.tests.test_rbm.Xdigits",
    "sklearn.utils.testing.assert_true",
    "sklearn.utils.validation.assert_all_finite"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network.tests.test_rbm.test_partial_fit": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "float",
    "int",
    "numpy.array_split",
    "numpy.ceil",
    "range",
    "sklearn.neural_network.BernoulliRBM",
    "sklearn.neural_network.tests.test_rbm.Xdigits",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network.tests.test_rbm.test_rbm_verbose": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "sklearn.externals.six.moves.cStringIO",
    "sklearn.neural_network.BernoulliRBM",
    "sklearn.neural_network.tests.test_rbm.Xdigits",
    "sklearn.neural_network.tests.test_rbm.sys"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network.tests.test_rbm.test_sample_hiddens": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "numpy.mean",
    "numpy.random.RandomState",
    "range",
    "sklearn.neural_network.BernoulliRBM",
    "sklearn.neural_network.tests.test_rbm.Xdigits",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network.tests.test_rbm.test_score_samples": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.errstate",
    "numpy.ones",
    "numpy.random.RandomState",
    "numpy.vstack",
    "numpy.zeros",
    "scipy.sparse.lil_matrix",
    "sklearn.neural_network.BernoulliRBM",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network.tests.test_rbm.test_small_sparse": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "scipy.sparse.csr_matrix",
    "sklearn.neural_network.BernoulliRBM",
    "sklearn.neural_network.tests.test_rbm.Xdigits"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network.tests.test_rbm.test_small_sparse_partial_fit": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "sklearn.neural_network.BernoulliRBM",
    "sklearn.neural_network.tests.test_rbm.Xdigits",
    "sklearn.utils.testing.assert_almost_equal",
    "sparse"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network.tests.test_rbm.test_sparse_and_verbose": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "scipy.sparse.csc_matrix",
    "sklearn.externals.six.moves.cStringIO",
    "sklearn.neural_network.BernoulliRBM",
    "sklearn.neural_network.tests.test_rbm.re",
    "sklearn.neural_network.tests.test_rbm.sys",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network.tests.test_rbm.test_transform": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "sklearn.neural_network.BernoulliRBM",
    "sklearn.neural_network.tests.test_rbm.Xdigits",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network.tests.test_stochastic_optimizers": {
  "data": {},
  "type": "module"
 },
 "sklearn.neural_network.tests.test_stochastic_optimizers.AdamOptimizer": {
  "data": {
   "shadows": "sklearn.neural_network._stochastic_optimizers.AdamOptimizer"
  },
  "type": "import"
 },
 "sklearn.neural_network.tests.test_stochastic_optimizers.BaseOptimizer": {
  "data": {
   "shadows": "sklearn.neural_network._stochastic_optimizers.BaseOptimizer"
  },
  "type": "import"
 },
 "sklearn.neural_network.tests.test_stochastic_optimizers.SGDOptimizer": {
  "data": {
   "shadows": "sklearn.neural_network._stochastic_optimizers.SGDOptimizer"
  },
  "type": "import"
 },
 "sklearn.neural_network.tests.test_stochastic_optimizers.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.neural_network.tests.test_stochastic_optimizers.assert_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.neural_network.tests.test_stochastic_optimizers.assert_false": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_false"
  },
  "type": "import"
 },
 "sklearn.neural_network.tests.test_stochastic_optimizers.assert_true": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_true"
  },
  "type": "import"
 },
 "sklearn.neural_network.tests.test_stochastic_optimizers.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.neural_network.tests.test_stochastic_optimizers.shapes": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "sklearn.neural_network.tests.test_stochastic_optimizers.test_adam_optimizer": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.random.random",
    "numpy.sqrt",
    "numpy.zeros",
    "sklearn.neural_network._stochastic_optimizers.AdamOptimizer",
    "sklearn.neural_network.tests.test_stochastic_optimizers.shapes",
    "sklearn.utils.testing.assert_array_equal",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network.tests.test_stochastic_optimizers.test_base_optimizer": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "numpy.zeros",
    "range",
    "sklearn.neural_network._stochastic_optimizers.BaseOptimizer",
    "sklearn.neural_network.tests.test_stochastic_optimizers.shapes",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network.tests.test_stochastic_optimizers.test_sgd_optimizer_momentum": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.random.random",
    "numpy.zeros",
    "sklearn.neural_network._stochastic_optimizers.SGDOptimizer",
    "sklearn.neural_network.tests.test_stochastic_optimizers.shapes",
    "sklearn.utils.testing.assert_array_equal",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network.tests.test_stochastic_optimizers.test_sgd_optimizer_nesterovs_momentum": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.random.random",
    "numpy.zeros",
    "sklearn.neural_network._stochastic_optimizers.SGDOptimizer",
    "sklearn.neural_network.tests.test_stochastic_optimizers.shapes",
    "sklearn.utils.testing.assert_array_equal",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network.tests.test_stochastic_optimizers.test_sgd_optimizer_no_momentum": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "numpy.random.random",
    "numpy.zeros",
    "range",
    "sklearn.neural_network._stochastic_optimizers.SGDOptimizer",
    "sklearn.neural_network.tests.test_stochastic_optimizers.shapes",
    "sklearn.utils.testing.assert_array_equal",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network.tests.test_stochastic_optimizers.test_sgd_optimizer_trigger_stopping": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "numpy.zeros",
    "sklearn.neural_network._stochastic_optimizers.SGDOptimizer",
    "sklearn.neural_network.tests.test_stochastic_optimizers.shapes",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_false",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "sklearn.pipeline": {
  "data": {},
  "type": "module"
 },
 "sklearn.pipeline.FeatureUnion": {
  "data": {
   "lineno": 623
  },
  "type": "class"
 },
 "sklearn.pipeline.FeatureUnion.__init__": {
  "data": {
   "lineno": 669
  },
  "type": "function"
 },
 "sklearn.pipeline.FeatureUnion._iter": {
  "data": {
   "lineno": 720,
   "symbols_in_volume": [
    "get_weight"
   ]
  },
  "type": "function"
 },
 "sklearn.pipeline.FeatureUnion._update_transformer_list": {
  "data": {
   "lineno": 832,
   "symbols_in_volume": [
    "iter",
    "next"
   ]
  },
  "type": "function"
 },
 "sklearn.pipeline.FeatureUnion._validate_transformers": {
  "data": {
   "lineno": 704,
   "symbols_in_volume": [
    "TypeError",
    "hasattr",
    "type",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.pipeline.FeatureUnion.fit": {
  "data": {
   "lineno": 748,
   "symbols_in_volume": [
    "Parallel",
    "delayed",
    "list",
    "sklearn.pipeline._fit_one_transformer"
   ]
  },
  "type": "function"
 },
 "sklearn.pipeline.FeatureUnion.fit_transform": {
  "data": {
   "lineno": 772,
   "symbols_in_volume": [
    "Parallel",
    "any",
    "delayed",
    "numpy.hstack",
    "numpy.zeros",
    "scipy.sparse.hstack",
    "scipy.sparse.issparse",
    "sklearn.pipeline._fit_transform_one",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.pipeline.FeatureUnion.get_feature_names": {
  "data": {
   "lineno": 730,
   "symbols_in_volume": [
    "AttributeError",
    "hasattr",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.pipeline.FeatureUnion.get_params": {
  "data": {
   "lineno": 676
  },
  "type": "function"
 },
 "sklearn.pipeline.FeatureUnion.set_params": {
  "data": {
   "lineno": 692
  },
  "type": "function"
 },
 "sklearn.pipeline.FeatureUnion.transform": {
  "data": {
   "lineno": 806,
   "symbols_in_volume": [
    "Parallel",
    "any",
    "delayed",
    "numpy.hstack",
    "numpy.zeros",
    "scipy.sparse.hstack",
    "scipy.sparse.issparse",
    "sklearn.pipeline._transform_one"
   ]
  },
  "type": "function"
 },
 "sklearn.pipeline.Pipeline": {
  "data": {
   "lineno": 29
  },
  "type": "class"
 },
 "sklearn.pipeline.Pipeline.__init__": {
  "data": {
   "lineno": 117
  },
  "type": "function"
 },
 "sklearn.pipeline.Pipeline._estimator_type": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.pipeline.Pipeline._final_estimator": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.pipeline.Pipeline._fit": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "check_memory",
    "clone",
    "dict",
    "enumerate",
    "fit_transform_one_cached",
    "hasattr",
    "list"
   ]
  },
  "type": "function"
 },
 "sklearn.pipeline.Pipeline._inverse_transform": {
  "data": {
   "lineno": 479
  },
  "type": "function"
 },
 "sklearn.pipeline.Pipeline._pairwise": {
  "data": {
   "lineno": 521,
   "symbols_in_volume": [
    "getattr",
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.pipeline.Pipeline._transform": {
  "data": {
   "lineno": 447
  },
  "type": "function"
 },
 "sklearn.pipeline.Pipeline._validate_steps": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "TypeError",
    "hasattr",
    "type",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.pipeline.Pipeline.classes_": {
  "data": {
   "lineno": 517,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.pipeline.Pipeline.decision_function": {
  "data": {
   "lineno": 384,
   "symbols_in_volume": [
    "if_delegate_has_method"
   ]
  },
  "type": "function"
 },
 "sklearn.pipeline.Pipeline.fit": {
  "data": {
   "lineno": 239
  },
  "type": "function"
 },
 "sklearn.pipeline.Pipeline.fit_predict": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": [
    "if_delegate_has_method"
   ]
  },
  "type": "function"
 },
 "sklearn.pipeline.Pipeline.fit_transform": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "sklearn.pipeline.Pipeline.get_params": {
  "data": {
   "lineno": 122
  },
  "type": "function"
 },
 "sklearn.pipeline.Pipeline.inverse_transform": {
  "data": {
   "lineno": 454,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.pipeline.Pipeline.named_steps": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "Bunch",
    "dict",
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.pipeline.Pipeline.predict": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": [
    "if_delegate_has_method"
   ]
  },
  "type": "function"
 },
 "sklearn.pipeline.Pipeline.predict_log_proba": {
  "data": {
   "lineno": 404,
   "symbols_in_volume": [
    "if_delegate_has_method"
   ]
  },
  "type": "function"
 },
 "sklearn.pipeline.Pipeline.predict_proba": {
  "data": {
   "lineno": 364,
   "symbols_in_volume": [
    "if_delegate_has_method"
   ]
  },
  "type": "function"
 },
 "sklearn.pipeline.Pipeline.score": {
  "data": {
   "lineno": 486,
   "symbols_in_volume": [
    "if_delegate_has_method"
   ]
  },
  "type": "function"
 },
 "sklearn.pipeline.Pipeline.set_params": {
  "data": {
   "lineno": 138
  },
  "type": "function"
 },
 "sklearn.pipeline.Pipeline.transform": {
  "data": {
   "lineno": 424,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.pipeline.__all__": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "sklearn.pipeline._fit_one_transformer": {
  "data": {
   "lineno": 600
  },
  "type": "function"
 },
 "sklearn.pipeline._fit_transform_one": {
  "data": {
   "lineno": 612,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "sklearn.pipeline._name_estimators": {
  "data": {
   "lineno": 527,
   "symbols_in_volume": [
    "collections.defaultdict",
    "int",
    "len",
    "list",
    "range",
    "reversed",
    "type",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.pipeline._transform_one": {
  "data": {
   "lineno": 604
  },
  "type": "function"
 },
 "sklearn.pipeline.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "sklearn.pipeline.make_pipeline": {
  "data": {
   "lineno": 548,
   "symbols_in_volume": [
    "TypeError",
    "list",
    "sklearn.pipeline.Pipeline",
    "sklearn.pipeline._name_estimators"
   ]
  },
  "type": "function"
 },
 "sklearn.pipeline.make_union": {
  "data": {
   "lineno": 839,
   "symbols_in_volume": [
    "TypeError",
    "list",
    "sklearn.pipeline.FeatureUnion",
    "sklearn.pipeline._name_estimators"
   ]
  },
  "type": "function"
 },
 "sklearn.pipeline.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.pipeline.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.preprocessing": {
  "data": {},
  "type": "module"
 },
 "sklearn.preprocessing.__all__": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "sklearn.preprocessing._discretization": {
  "data": {},
  "type": "module"
 },
 "sklearn.preprocessing._discretization.KBinsDiscretizer": {
  "data": {
   "lineno": 23
  },
  "type": "class"
 },
 "sklearn.preprocessing._discretization.KBinsDiscretizer.__init__": {
  "data": {
   "lineno": 119
  },
  "type": "function"
 },
 "sklearn.preprocessing._discretization.KBinsDiscretizer._validate_n_bins": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "ValueError",
    "check_array",
    "isinstance",
    "numpy.full",
    "numpy.int",
    "numpy.integer",
    "numpy.where",
    "sklearn.preprocessing._discretization.KBinsDiscretizer",
    "sklearn.preprocessing._discretization.numbers",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing._discretization.KBinsDiscretizer.fit": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "KMeans",
    "OneHotEncoder",
    "ValueError",
    "check_array",
    "list",
    "numpy.arange",
    "numpy.array",
    "numpy.asarray",
    "numpy.inf",
    "numpy.linspace",
    "numpy.percentile",
    "numpy.r_",
    "numpy.zeros",
    "object",
    "range",
    "sklearn.preprocessing._discretization.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing._discretization.KBinsDiscretizer.inverse_transform": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "ValueError",
    "check_array",
    "check_is_fitted",
    "numpy.int_",
    "range"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing._discretization.KBinsDiscretizer.transform": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "ValueError",
    "check_array",
    "check_is_fitted",
    "numpy.abs",
    "numpy.clip",
    "numpy.digitize",
    "range"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing._discretization.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "sklearn.preprocessing._discretization.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sklearn.preprocessing._discretization.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.preprocessing._discretization.numbers": {
  "data": {
   "shadows": "numbers"
  },
  "type": "import"
 },
 "sklearn.preprocessing._discretization.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.preprocessing._encoders": {
  "data": {},
  "type": "module"
 },
 "sklearn.preprocessing._encoders.OneHotEncoder": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "sklearn.preprocessing._encoders._BaseEncoder"
   ]
  },
  "type": "class"
 },
 "sklearn.preprocessing._encoders.OneHotEncoder.__init__": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "numpy.float64",
    "scipy.sparse"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing._encoders.OneHotEncoder._handle_deprecations": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": [
    "DeprecationWarning",
    "FutureWarning",
    "ValueError",
    "check_array",
    "getattr",
    "isinstance",
    "numpy.int",
    "sklearn.preprocessing._encoders.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing._encoders.OneHotEncoder._legacy_fit_transform": {
  "data": {
   "lineno": 419,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "check_array",
    "getattr",
    "int",
    "isinstance",
    "numpy.any",
    "numpy.arange",
    "numpy.array",
    "numpy.asarray",
    "numpy.cumsum",
    "numpy.empty",
    "numpy.hstack",
    "numpy.int",
    "numpy.int32",
    "numpy.max",
    "numpy.ones",
    "numpy.repeat",
    "numpy.unique",
    "numpy.where",
    "scipy.sparse.coo_matrix",
    "sklearn.preprocessing._encoders.numbers",
    "sklearn.preprocessing._encoders.range",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing._encoders.OneHotEncoder._legacy_transform": {
  "data": {
   "lineno": 503,
   "symbols_in_volume": [
    "ValueError",
    "check_array",
    "isinstance",
    "numpy.any",
    "numpy.arange",
    "numpy.int",
    "numpy.int32",
    "numpy.ones",
    "numpy.repeat",
    "numpy.sum",
    "scipy.sparse.coo_matrix"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing._encoders.OneHotEncoder._transform_new": {
  "data": {
   "lineno": 543,
   "symbols_in_volume": [
    "check_array",
    "hasattr",
    "numpy.array",
    "numpy.cumsum",
    "numpy.insert",
    "numpy.issubdtype",
    "numpy.object",
    "numpy.ones",
    "numpy.str_",
    "scipy.sparse.csr_matrix"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing._encoders.OneHotEncoder.active_features_": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "check_is_fitted",
    "deprecated",
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing._encoders.OneHotEncoder.feature_indices_": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": [
    "check_is_fitted",
    "deprecated",
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing._encoders.OneHotEncoder.fit": {
  "data": {
   "lineno": 391,
   "symbols_in_volume": [
    "ValueError",
    "_transform_selected"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing._encoders.OneHotEncoder.fit_transform": {
  "data": {
   "lineno": 474,
   "symbols_in_volume": [
    "ValueError",
    "_transform_selected"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing._encoders.OneHotEncoder.get_feature_names": {
  "data": {
   "lineno": 660,
   "symbols_in_volume": [
    "ValueError",
    "check_is_fitted",
    "len",
    "numpy.array",
    "object",
    "sklearn.preprocessing._encoders.range"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing._encoders.OneHotEncoder.inverse_transform": {
  "data": {
   "lineno": 593,
   "symbols_in_volume": [
    "ValueError",
    "_argmax",
    "check_array",
    "check_is_fitted",
    "len",
    "numpy.asarray",
    "numpy.empty",
    "numpy.find_common_type",
    "object",
    "sklearn.preprocessing._encoders.range",
    "sum"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing._encoders.OneHotEncoder.n_values_": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": [
    "check_is_fitted",
    "deprecated",
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing._encoders.OneHotEncoder.transform": {
  "data": {
   "lineno": 573,
   "symbols_in_volume": [
    "_transform_selected"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing._encoders.OrdinalEncoder": {
  "data": {
   "lineno": 693,
   "symbols_in_volume": [
    "sklearn.preprocessing._encoders._BaseEncoder"
   ]
  },
  "type": "class"
 },
 "sklearn.preprocessing._encoders.OrdinalEncoder.__init__": {
  "data": {
   "lineno": 754,
   "symbols_in_volume": [
    "numpy.float64"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing._encoders.OrdinalEncoder.fit": {
  "data": {
   "lineno": 758
  },
  "type": "function"
 },
 "sklearn.preprocessing._encoders.OrdinalEncoder.inverse_transform": {
  "data": {
   "lineno": 795,
   "symbols_in_volume": [
    "ValueError",
    "check_array",
    "check_is_fitted",
    "len",
    "numpy.empty",
    "numpy.find_common_type",
    "sklearn.preprocessing._encoders.range"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing._encoders.OrdinalEncoder.transform": {
  "data": {
   "lineno": 778
  },
  "type": "function"
 },
 "sklearn.preprocessing._encoders._BaseEncoder": {
  "data": {
   "lineno": 34
  },
  "type": "class"
 },
 "sklearn.preprocessing._encoders._BaseEncoder._check_X": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "ValueError",
    "_object_dtype_isnan",
    "check_array",
    "hasattr",
    "numpy.dtype",
    "numpy.issubdtype",
    "numpy.object",
    "numpy.str_"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing._encoders._BaseEncoder._fit": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "ValueError",
    "_encode",
    "_encode_check_unknown",
    "len",
    "numpy.all",
    "numpy.array",
    "numpy.sort",
    "object",
    "sklearn.preprocessing._encoders.range"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing._encoders._BaseEncoder._transform": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "ValueError",
    "_encode",
    "_encode_check_unknown",
    "numpy.all",
    "numpy.bool",
    "numpy.int",
    "numpy.ones_like",
    "numpy.zeros_like",
    "sklearn.preprocessing._encoders.range"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing._encoders.__all__": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "sklearn.preprocessing._encoders._get_config": {
  "data": {
   "shadows": "get_config"
  },
  "type": "import"
 },
 "sklearn.preprocessing._encoders.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sklearn.preprocessing._encoders.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.preprocessing._encoders.numbers": {
  "data": {
   "shadows": "numbers"
  },
  "type": "import"
 },
 "sklearn.preprocessing._encoders.range": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "sklearn.preprocessing._encoders.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.preprocessing._encoders.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.preprocessing._function_transformer": {
  "data": {},
  "type": "module"
 },
 "sklearn.preprocessing._function_transformer.FunctionTransformer": {
  "data": {
   "lineno": 15
  },
  "type": "class"
 },
 "sklearn.preprocessing._function_transformer.FunctionTransformer.__init__": {
  "data": {
   "lineno": 81
  },
  "type": "function"
 },
 "sklearn.preprocessing._function_transformer.FunctionTransformer._check_input": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "FutureWarning",
    "check_array",
    "sklearn.preprocessing._function_transformer.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing._function_transformer.FunctionTransformer._check_inverse_transform": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "AssertionError",
    "UserWarning",
    "assert_allclose_dense_sparse",
    "max",
    "sklearn.preprocessing._function_transformer.warnings",
    "slice"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing._function_transformer.FunctionTransformer._transform": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "DeprecationWarning",
    "func",
    "isinstance",
    "sklearn.preprocessing._function_transformer._identity",
    "sklearn.preprocessing._function_transformer.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing._function_transformer.FunctionTransformer.fit": {
  "data": {
   "lineno": 119
  },
  "type": "function"
 },
 "sklearn.preprocessing._function_transformer.FunctionTransformer.inverse_transform": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "DeprecationWarning",
    "isinstance",
    "sklearn.preprocessing._function_transformer.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing._function_transformer.FunctionTransformer.transform": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "DeprecationWarning",
    "isinstance",
    "sklearn.preprocessing._function_transformer.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing._function_transformer._identity": {
  "data": {
   "lineno": 9
  },
  "type": "function"
 },
 "sklearn.preprocessing._function_transformer.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.preprocessing.base": {
  "data": {},
  "type": "module"
 },
 "sklearn.preprocessing.base._transform_selected": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "check_array",
    "isinstance",
    "len",
    "numpy.arange",
    "numpy.asarray",
    "numpy.hstack",
    "numpy.logical_not",
    "numpy.sum",
    "numpy.zeros",
    "scipy.sparse.hstack",
    "scipy.sparse.issparse",
    "transform"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.base.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.preprocessing.base.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.preprocessing.data": {
  "data": {},
  "type": "module"
 },
 "sklearn.preprocessing.data.BOUNDS_THRESHOLD": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "sklearn.preprocessing.data.Binarizer": {
  "data": {
   "lineno": 1726
  },
  "type": "class"
 },
 "sklearn.preprocessing.data.Binarizer.__init__": {
  "data": {
   "lineno": 1780
  },
  "type": "function"
 },
 "sklearn.preprocessing.data.Binarizer.fit": {
  "data": {
   "lineno": 1784,
   "symbols_in_volume": [
    "check_array"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.data.Binarizer.transform": {
  "data": {
   "lineno": 1797,
   "symbols_in_volume": [
    "DeprecationWarning",
    "isinstance",
    "sklearn.preprocessing.data.binarize",
    "sklearn.preprocessing.data.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.data.CategoricalEncoder": {
  "data": {
   "lineno": 2908
  },
  "type": "class"
 },
 "sklearn.preprocessing.data.CategoricalEncoder.__init__": {
  "data": {
   "lineno": 2915,
   "symbols_in_volume": [
    "RuntimeError"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.data.KernelCenterer": {
  "data": {
   "lineno": 1821
  },
  "type": "class"
 },
 "sklearn.preprocessing.data.KernelCenterer.__init__": {
  "data": {
   "lineno": 1853
  },
  "type": "function"
 },
 "sklearn.preprocessing.data.KernelCenterer._pairwise": {
  "data": {
   "lineno": 1910,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.data.KernelCenterer.fit": {
  "data": {
   "lineno": 1857,
   "symbols_in_volume": [
    "check_array",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.data.KernelCenterer.transform": {
  "data": {
   "lineno": 1875,
   "symbols_in_volume": [
    "DeprecationWarning",
    "check_array",
    "check_is_fitted",
    "isinstance",
    "numpy.newaxis",
    "numpy.sum",
    "sklearn.preprocessing.data.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.data.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "sklearn.preprocessing.data.MaxAbsScaler": {
  "data": {
   "lineno": 801
  },
  "type": "class"
 },
 "sklearn.preprocessing.data.MaxAbsScaler.__init__": {
  "data": {
   "lineno": 862
  },
  "type": "function"
 },
 "sklearn.preprocessing.data.MaxAbsScaler._reset": {
  "data": {
   "lineno": 865,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.data.MaxAbsScaler.fit": {
  "data": {
   "lineno": 878
  },
  "type": "function"
 },
 "sklearn.preprocessing.data.MaxAbsScaler.inverse_transform": {
  "data": {
   "lineno": 948,
   "symbols_in_volume": [
    "check_array",
    "check_is_fitted",
    "inplace_column_scale",
    "scipy.sparse.issparse"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.data.MaxAbsScaler.partial_fit": {
  "data": {
   "lineno": 892,
   "symbols_in_volume": [
    "check_array",
    "hasattr",
    "min_max_axis",
    "numpy.abs",
    "numpy.maximum",
    "numpy.nanmax",
    "scipy.sparse.issparse",
    "sklearn.preprocessing.data._handle_zeros_in_scale"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.data.MaxAbsScaler.transform": {
  "data": {
   "lineno": 929,
   "symbols_in_volume": [
    "check_array",
    "check_is_fitted",
    "inplace_column_scale",
    "scipy.sparse.issparse"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.data.MinMaxScaler": {
  "data": {
   "lineno": 202
  },
  "type": "class"
 },
 "sklearn.preprocessing.data.MinMaxScaler.__init__": {
  "data": {
   "lineno": 291
  },
  "type": "function"
 },
 "sklearn.preprocessing.data.MinMaxScaler._reset": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.data.MinMaxScaler.fit": {
  "data": {
   "lineno": 311
  },
  "type": "function"
 },
 "sklearn.preprocessing.data.MinMaxScaler.inverse_transform": {
  "data": {
   "lineno": 391,
   "symbols_in_volume": [
    "check_array",
    "check_is_fitted"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.data.MinMaxScaler.partial_fit": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "check_array",
    "hasattr",
    "numpy.maximum",
    "numpy.minimum",
    "numpy.nanmax",
    "numpy.nanmin",
    "scipy.sparse.issparse",
    "sklearn.preprocessing.data._handle_zeros_in_scale",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.data.MinMaxScaler.transform": {
  "data": {
   "lineno": 374,
   "symbols_in_volume": [
    "check_array",
    "check_is_fitted"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.data.Normalizer": {
  "data": {
   "lineno": 1583
  },
  "type": "class"
 },
 "sklearn.preprocessing.data.Normalizer.__init__": {
  "data": {
   "lineno": 1641
  },
  "type": "function"
 },
 "sklearn.preprocessing.data.Normalizer.fit": {
  "data": {
   "lineno": 1645,
   "symbols_in_volume": [
    "check_array"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.data.Normalizer.transform": {
  "data": {
   "lineno": 1658,
   "symbols_in_volume": [
    "DeprecationWarning",
    "check_array",
    "isinstance",
    "sklearn.preprocessing.data.normalize",
    "sklearn.preprocessing.data.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.data.PolynomialFeatures": {
  "data": {
   "lineno": 1303
  },
  "type": "class"
 },
 "sklearn.preprocessing.data.PolynomialFeatures.__init__": {
  "data": {
   "lineno": 1366
  },
  "type": "function"
 },
 "sklearn.preprocessing.data.PolynomialFeatures._combinations": {
  "data": {
   "lineno": 1371,
   "symbols_in_volume": [
    "comb",
    "int",
    "itertools.chain.from_iterable",
    "itertools.combinations",
    "itertools.combinations_with_replacement",
    "sklearn.preprocessing.data.range",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.data.PolynomialFeatures.fit": {
  "data": {
   "lineno": 1418,
   "symbols_in_volume": [
    "check_array",
    "itertools.combinations",
    "sum"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.data.PolynomialFeatures.get_feature_names": {
  "data": {
   "lineno": 1388,
   "symbols_in_volume": [
    "len",
    "numpy.where",
    "sklearn.preprocessing.data.range",
    "sklearn.preprocessing.data.zip"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.data.PolynomialFeatures.powers_": {
  "data": {
   "lineno": 1378,
   "symbols_in_volume": [
    "check_is_fitted",
    "itertools.combinations",
    "numpy.bincount",
    "numpy.vstack",
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.data.PolynomialFeatures.transform": {
  "data": {
   "lineno": 1440,
   "symbols_in_volume": [
    "ValueError",
    "check_array",
    "check_is_fitted",
    "comb",
    "comb.prod",
    "enumerate",
    "itertools.combinations",
    "numpy.empty",
    "numpy.ones",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.hstack",
    "scipy.sparse.isspmatrix"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.data.PowerTransformer": {
  "data": {
   "lineno": 2474
  },
  "type": "class"
 },
 "sklearn.preprocessing.data.PowerTransformer.__init__": {
  "data": {
   "lineno": 2555
  },
  "type": "function"
 },
 "sklearn.preprocessing.data.PowerTransformer._box_cox_inverse_tranform": {
  "data": {
   "lineno": 2690,
   "symbols_in_volume": [
    "numpy.exp"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.data.PowerTransformer._box_cox_optimize": {
  "data": {
   "lineno": 2755,
   "symbols_in_volume": [
    "numpy.isnan",
    "scipy.stats.boxcox"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.data.PowerTransformer._check_input": {
  "data": {
   "lineno": 2795,
   "symbols_in_volume": [
    "ValueError",
    "check_array",
    "len",
    "numpy.nanmin",
    "numpy.warnings.catch_warnings",
    "numpy.warnings.filterwarnings"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.data.PowerTransformer._fit": {
  "data": {
   "lineno": 2583,
   "symbols_in_volume": [
    "enumerate",
    "numpy.array",
    "numpy.errstate",
    "optim_function",
    "sklearn.preprocessing.data.StandardScaler",
    "transform_function"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.data.PowerTransformer._yeo_johnson_inverse_transform": {
  "data": {
   "lineno": 2701,
   "symbols_in_volume": [
    "numpy.exp",
    "numpy.power",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.data.PowerTransformer._yeo_johnson_optimize": {
  "data": {
   "lineno": 2767,
   "symbols_in_volume": [
    "numpy.isnan",
    "scipy.optimize.brent"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.data.PowerTransformer._yeo_johnson_optimize._neg_log_likelihood": {
  "data": {
   "lineno": 2774,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.log",
    "numpy.power",
    "numpy.sign"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.data.PowerTransformer._yeo_johnson_transform": {
  "data": {
   "lineno": 2728,
   "symbols_in_volume": [
    "numpy.log",
    "numpy.power",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.data.PowerTransformer.fit": {
  "data": {
   "lineno": 2560
  },
  "type": "function"
 },
 "sklearn.preprocessing.data.PowerTransformer.fit_transform": {
  "data": {
   "lineno": 2580
  },
  "type": "function"
 },
 "sklearn.preprocessing.data.PowerTransformer.inverse_transform": {
  "data": {
   "lineno": 2644,
   "symbols_in_volume": [
    "check_is_fitted",
    "enumerate",
    "inv_fun",
    "numpy.errstate"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.data.PowerTransformer.transform": {
  "data": {
   "lineno": 2616,
   "symbols_in_volume": [
    "check_is_fitted",
    "enumerate",
    "numpy.errstate",
    "transform_function"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.data.QuantileTransformer": {
  "data": {
   "lineno": 1974
  },
  "type": "class"
 },
 "sklearn.preprocessing.data.QuantileTransformer.__init__": {
  "data": {
   "lineno": 2061,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.data.QuantileTransformer._check_inputs": {
  "data": {
   "lineno": 2252,
   "symbols_in_volume": [
    "ValueError",
    "check_array",
    "numpy.any",
    "numpy.errstate",
    "scipy.sparse.issparse"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.data.QuantileTransformer._check_is_fitted": {
  "data": {
   "lineno": 2273,
   "symbols_in_volume": [
    "ValueError",
    "check_is_fitted"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.data.QuantileTransformer._dense_fit": {
  "data": {
   "lineno": 2071,
   "symbols_in_volume": [
    "distutils.version.LooseVersion",
    "nanpercentile",
    "numpy.__version__",
    "numpy.transpose",
    "sklearn.preprocessing.data.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.data.QuantileTransformer._sparse_fit": {
  "data": {
   "lineno": 2099,
   "symbols_in_volume": [
    "distutils.version.LooseVersion",
    "len",
    "nanpercentile",
    "numpy.__version__",
    "numpy.transpose",
    "numpy.zeros",
    "sklearn.preprocessing.data.range"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.data.QuantileTransformer._transform": {
  "data": {
   "lineno": 2283,
   "symbols_in_volume": [
    "scipy.sparse.issparse",
    "sklearn.preprocessing.data.range",
    "slice"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.data.QuantileTransformer._transform_col": {
  "data": {
   "lineno": 2188,
   "symbols_in_volume": [
    "getattr",
    "numpy.clip",
    "numpy.errstate",
    "numpy.interp",
    "numpy.isnan",
    "numpy.spacing",
    "scipy.stats",
    "sklearn.preprocessing.data.BOUNDS_THRESHOLD"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.data.QuantileTransformer.fit": {
  "data": {
   "lineno": 2144,
   "symbols_in_volume": [
    "ValueError",
    "check_random_state",
    "numpy.linspace",
    "scipy.sparse.issparse"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.data.QuantileTransformer.inverse_transform": {
  "data": {
   "lineno": 2337
  },
  "type": "function"
 },
 "sklearn.preprocessing.data.QuantileTransformer.transform": {
  "data": {
   "lineno": 2316
  },
  "type": "function"
 },
 "sklearn.preprocessing.data.RobustScaler": {
  "data": {
   "lineno": 1027
  },
  "type": "class"
 },
 "sklearn.preprocessing.data.RobustScaler.__init__": {
  "data": {
   "lineno": 1118
  },
  "type": "function"
 },
 "sklearn.preprocessing.data.RobustScaler.fit": {
  "data": {
   "lineno": 1125,
   "symbols_in_volume": [
    "ValueError",
    "check_array",
    "len",
    "nanmedian",
    "nanpercentile",
    "numpy.transpose",
    "numpy.zeros",
    "scipy.sparse.issparse",
    "sklearn.preprocessing.data._handle_zeros_in_scale",
    "sklearn.preprocessing.data.range",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.data.RobustScaler.inverse_transform": {
  "data": {
   "lineno": 1199,
   "symbols_in_volume": [
    "check_array",
    "check_is_fitted",
    "inplace_column_scale",
    "scipy.sparse.issparse"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.data.RobustScaler.transform": {
  "data": {
   "lineno": 1176,
   "symbols_in_volume": [
    "check_array",
    "check_is_fitted",
    "inplace_column_scale",
    "scipy.sparse.issparse"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.data.StandardScaler": {
  "data": {
   "lineno": 480
  },
  "type": "class"
 },
 "sklearn.preprocessing.data.StandardScaler.__init__": {
  "data": {
   "lineno": 583
  },
  "type": "function"
 },
 "sklearn.preprocessing.data.StandardScaler._reset": {
  "data": {
   "lineno": 588,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.data.StandardScaler.fit": {
  "data": {
   "lineno": 602
  },
  "type": "function"
 },
 "sklearn.preprocessing.data.StandardScaler.inverse_transform": {
  "data": {
   "lineno": 760,
   "symbols_in_volume": [
    "ValueError",
    "check_is_fitted",
    "inplace_column_scale",
    "numpy.asarray",
    "scipy.sparse.issparse",
    "scipy.sparse.isspmatrix_csr"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.data.StandardScaler.partial_fit": {
  "data": {
   "lineno": 619,
   "symbols_in_volume": [
    "ValueError",
    "_incremental_mean_and_var",
    "check_array",
    "hasattr",
    "incr_mean_variance_axis",
    "int",
    "isinstance",
    "mean_variance_axis",
    "numpy.int64",
    "numpy.integer",
    "numpy.isnan",
    "numpy.ptp",
    "numpy.repeat",
    "numpy.sqrt",
    "numpy.zeros",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.issparse",
    "sklearn.preprocessing.data._handle_zeros_in_scale",
    "sparse_constructor"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.data.StandardScaler.transform": {
  "data": {
   "lineno": 721,
   "symbols_in_volume": [
    "DeprecationWarning",
    "ValueError",
    "check_array",
    "check_is_fitted",
    "inplace_column_scale",
    "isinstance",
    "scipy.sparse.issparse",
    "sklearn.preprocessing.data.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.data.__all__": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "sklearn.preprocessing.data._handle_zeros_in_scale": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "isinstance",
    "numpy.isscalar",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.data.add_dummy_feature": {
  "data": {
   "lineno": 1915,
   "symbols_in_volume": [
    "check_array",
    "klass",
    "numpy.arange",
    "numpy.array",
    "numpy.concatenate",
    "numpy.full",
    "numpy.hstack",
    "numpy.zeros",
    "scipy.sparse.coo_matrix",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.issparse",
    "scipy.sparse.isspmatrix_coo",
    "scipy.sparse.isspmatrix_csc"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.data.binarize": {
  "data": {
   "lineno": 1682,
   "symbols_in_volume": [
    "ValueError",
    "check_array",
    "numpy.logical_not",
    "scipy.sparse.issparse"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.data.chain": {
  "data": {
   "shadows": "itertools.chain"
  },
  "type": "import"
 },
 "sklearn.preprocessing.data.combinations": {
  "data": {
   "shadows": "itertools.combinations"
  },
  "type": "import"
 },
 "sklearn.preprocessing.data.combinations_w_r": {
  "data": {
   "shadows": "itertools.combinations_with_replacement"
  },
  "type": "import"
 },
 "sklearn.preprocessing.data.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sklearn.preprocessing.data.map": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "sklearn.preprocessing.data.maxabs_scale": {
  "data": {
   "lineno": 968,
   "symbols_in_volume": [
    "check_array",
    "sklearn.preprocessing.data.MaxAbsScaler"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.data.minmax_scale": {
  "data": {
   "lineno": 409,
   "symbols_in_volume": [
    "check_array",
    "sklearn.preprocessing.data.MinMaxScaler"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.data.normalize": {
  "data": {
   "lineno": 1485,
   "symbols_in_volume": [
    "NotImplementedError",
    "ValueError",
    "check_array",
    "inplace_csr_row_normalize_l1",
    "inplace_csr_row_normalize_l2",
    "min_max_axis",
    "numpy.abs",
    "numpy.diff",
    "numpy.max",
    "numpy.newaxis",
    "row_norms",
    "scipy.sparse.issparse",
    "sklearn.preprocessing.data._handle_zeros_in_scale"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.data.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.preprocessing.data.optimize": {
  "data": {
   "shadows": "scipy.optimize"
  },
  "type": "import"
 },
 "sklearn.preprocessing.data.power_transform": {
  "data": {
   "lineno": 2838,
   "symbols_in_volume": [
    "sklearn.preprocessing.data.PowerTransformer"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.data.quantile_transform": {
  "data": {
   "lineno": 2359,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "sklearn.preprocessing.data.QuantileTransformer"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.data.range": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "sklearn.preprocessing.data.robust_scale": {
  "data": {
   "lineno": 1223,
   "symbols_in_volume": [
    "check_array",
    "sklearn.preprocessing.data.RobustScaler"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.data.scale": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "ValueError",
    "check_array",
    "inplace_column_scale",
    "mean_variance_axis",
    "numpy.allclose",
    "numpy.asarray",
    "numpy.nanmean",
    "numpy.nanstd",
    "numpy.rollaxis",
    "numpy.sqrt",
    "scipy.sparse.issparse",
    "sklearn.preprocessing.data._handle_zeros_in_scale",
    "sklearn.preprocessing.data.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.data.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.preprocessing.data.stats": {
  "data": {
   "shadows": "scipy.stats"
  },
  "type": "import"
 },
 "sklearn.preprocessing.data.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.preprocessing.data.zip": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "sklearn.preprocessing.imputation": {
  "data": {},
  "type": "module"
 },
 "sklearn.preprocessing.imputation.Imputer": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "deprecated"
   ]
  },
  "type": "class"
 },
 "sklearn.preprocessing.imputation.Imputer.__init__": {
  "data": {
   "lineno": 121
  },
  "type": "function"
 },
 "sklearn.preprocessing.imputation.Imputer._dense_fit": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "check_array",
    "enumerate",
    "numpy.bool",
    "numpy.empty",
    "numpy.logical_not",
    "numpy.ma.getdata",
    "numpy.ma.getmask",
    "numpy.ma.getmaskarray",
    "numpy.ma.masked_array",
    "numpy.ma.mean",
    "numpy.ma.median",
    "numpy.nan",
    "sklearn.preprocessing.imputation._get_mask",
    "sklearn.preprocessing.imputation._most_frequent",
    "sklearn.preprocessing.imputation.zip"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.imputation.Imputer._sparse_fit": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "_get_median",
    "bool",
    "enumerate",
    "int",
    "len",
    "numpy.add",
    "numpy.diff",
    "numpy.empty",
    "numpy.errstate",
    "numpy.float64",
    "numpy.hsplit",
    "numpy.logical_not",
    "numpy.ravel",
    "numpy.zeros",
    "scipy.sparse.csc_matrix",
    "sklearn.preprocessing.imputation._get_mask",
    "sklearn.preprocessing.imputation._most_frequent",
    "sklearn.preprocessing.imputation.zip"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.imputation.Imputer.fit": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "ValueError",
    "check_array",
    "numpy.float64",
    "scipy.sparse.issparse"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.imputation.Imputer.transform": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "ValueError",
    "check_array",
    "check_is_fitted",
    "len",
    "numpy.arange",
    "numpy.diff",
    "numpy.int",
    "numpy.isnan",
    "numpy.logical_not",
    "numpy.repeat",
    "numpy.sum",
    "numpy.where",
    "scipy.sparse.issparse",
    "sklearn.preprocessing.imputation._get_mask",
    "sklearn.preprocessing.imputation.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.imputation.__all__": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "sklearn.preprocessing.imputation._get_mask": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "numpy.isnan"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.imputation._most_frequent": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "numpy.nan",
    "scipy.stats.mode"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.imputation.ma": {
  "data": {
   "shadows": "numpy.ma"
  },
  "type": "import"
 },
 "sklearn.preprocessing.imputation.map": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "sklearn.preprocessing.imputation.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.preprocessing.imputation.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.preprocessing.imputation.stats": {
  "data": {
   "shadows": "scipy.stats"
  },
  "type": "import"
 },
 "sklearn.preprocessing.imputation.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.preprocessing.imputation.zip": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "sklearn.preprocessing.label": {
  "data": {},
  "type": "module"
 },
 "sklearn.preprocessing.label.LabelBinarizer": {
  "data": {
   "lineno": 286
  },
  "type": "class"
 },
 "sklearn.preprocessing.label.LabelBinarizer.__init__": {
  "data": {
   "lineno": 377,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.label.LabelBinarizer.fit": {
  "data": {
   "lineno": 392,
   "symbols_in_volume": [
    "ValueError",
    "_num_samples",
    "scipy.sparse.issparse",
    "type_of_target",
    "unique_labels"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.label.LabelBinarizer.fit_transform": {
  "data": {
   "lineno": 416
  },
  "type": "function"
 },
 "sklearn.preprocessing.label.LabelBinarizer.inverse_transform": {
  "data": {
   "lineno": 469,
   "symbols_in_volume": [
    "check_is_fitted",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.issparse",
    "sklearn.preprocessing.label._inverse_binarize_multiclass",
    "sklearn.preprocessing.label._inverse_binarize_thresholding"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.label.LabelBinarizer.transform": {
  "data": {
   "lineno": 438,
   "symbols_in_volume": [
    "ValueError",
    "check_is_fitted",
    "sklearn.preprocessing.label.label_binarize",
    "type_of_target"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.label.LabelEncoder": {
  "data": {
   "lineno": 163
  },
  "type": "class"
 },
 "sklearn.preprocessing.label.LabelEncoder.fit": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "column_or_1d",
    "sklearn.preprocessing.label._encode"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.label.LabelEncoder.fit_transform": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "column_or_1d",
    "sklearn.preprocessing.label._encode"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.label.LabelEncoder.inverse_transform": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "ValueError",
    "_num_samples",
    "check_is_fitted",
    "column_or_1d",
    "len",
    "numpy.arange",
    "numpy.array",
    "numpy.asarray",
    "numpy.setdiff1d",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.label.LabelEncoder.transform": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "_num_samples",
    "check_is_fitted",
    "column_or_1d",
    "numpy.array",
    "sklearn.preprocessing.label._encode"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.label.MultiLabelBinarizer": {
  "data": {
   "lineno": 764
  },
  "type": "class"
 },
 "sklearn.preprocessing.label.MultiLabelBinarizer.__init__": {
  "data": {
   "lineno": 808
  },
  "type": "function"
 },
 "sklearn.preprocessing.label.MultiLabelBinarizer._transform": {
  "data": {
   "lineno": 902,
   "symbols_in_volume": [
    "KeyError",
    "int",
    "len",
    "numpy.ones",
    "scipy.sparse.csr_matrix",
    "set",
    "sklearn.preprocessing.label.array",
    "sklearn.preprocessing.label.warnings",
    "sorted",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.label.MultiLabelBinarizer.fit": {
  "data": {
   "lineno": 812,
   "symbols_in_volume": [
    "all",
    "int",
    "isinstance",
    "len",
    "numpy.empty",
    "numpy.int",
    "object",
    "set",
    "sklearn.preprocessing.label.itertools",
    "sorted"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.label.MultiLabelBinarizer.fit_transform": {
  "data": {
   "lineno": 835,
   "symbols_in_volume": [
    "all",
    "collections.defaultdict",
    "int",
    "isinstance",
    "len",
    "numpy.array",
    "numpy.empty",
    "numpy.int",
    "numpy.unique",
    "object",
    "sorted"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.label.MultiLabelBinarizer.inverse_transform": {
  "data": {
   "lineno": 936,
   "symbols_in_volume": [
    "ValueError",
    "check_is_fitted",
    "len",
    "numpy.setdiff1d",
    "scipy.sparse.issparse",
    "sklearn.preprocessing.label.zip",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.label.MultiLabelBinarizer.transform": {
  "data": {
   "lineno": 876,
   "symbols_in_volume": [
    "check_is_fitted",
    "dict",
    "len",
    "range",
    "sklearn.preprocessing.label.zip"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.label.__all__": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "sklearn.preprocessing.label._encode": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "object",
    "sklearn.preprocessing.label._encode_numpy",
    "sklearn.preprocessing.label._encode_python"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.label._encode_check_unknown": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "bool",
    "len",
    "list",
    "numpy.array",
    "numpy.in1d",
    "numpy.ones",
    "numpy.setdiff1d",
    "numpy.unique",
    "object",
    "set"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.label._encode_numpy": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "ValueError",
    "numpy.searchsorted",
    "numpy.unique",
    "sklearn.preprocessing.label._encode_check_unknown",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.label._encode_python": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "enumerate",
    "numpy.array",
    "set",
    "sorted",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.label._inverse_binarize_multiclass": {
  "data": {
   "lineno": 676,
   "symbols_in_volume": [
    "len",
    "min_max_axis",
    "numpy.append",
    "numpy.arange",
    "numpy.asarray",
    "numpy.diff",
    "numpy.flatnonzero",
    "numpy.repeat",
    "numpy.searchsorted",
    "numpy.setdiff1d",
    "numpy.where",
    "scipy.sparse.issparse"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.label._inverse_binarize_thresholding": {
  "data": {
   "lineno": 720,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.array",
    "numpy.asarray",
    "numpy.int",
    "numpy.repeat",
    "scipy.sparse.issparse"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.label.array": {
  "data": {
   "shadows": "array"
  },
  "type": "import"
 },
 "sklearn.preprocessing.label.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "sklearn.preprocessing.label.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "sklearn.preprocessing.label.label_binarize": {
  "data": {
   "lineno": 519,
   "symbols_in_volume": [
    "ValueError",
    "_num_samples",
    "check_array",
    "column_or_1d",
    "int",
    "isinstance",
    "len",
    "list",
    "numpy.any",
    "numpy.asarray",
    "numpy.cumsum",
    "numpy.empty_like",
    "numpy.hstack",
    "numpy.in1d",
    "numpy.int",
    "numpy.searchsorted",
    "numpy.sort",
    "numpy.zeros",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.issparse",
    "type_of_target",
    "unique_labels"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.label.map": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "sklearn.preprocessing.label.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.preprocessing.label.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.preprocessing.label.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.preprocessing.label.zip": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "sklearn.preprocessing.tests": {
  "data": {},
  "type": "module"
 },
 "sklearn.preprocessing.tests.test_base": {
  "data": {},
  "type": "module"
 },
 "sklearn.preprocessing.tests.test_base.Binarizer": {
  "data": {
   "shadows": "sklearn.preprocessing.data.Binarizer"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_base._check_transform_selected": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "scipy.sparse.csr_matrix",
    "sklearn.preprocessing._encoders._transform_selected",
    "sklearn.preprocessing.data.Binarizer",
    "sklearn.preprocessing.tests.test_base.toarray",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_base._transform_selected": {
  "data": {
   "shadows": "sklearn.preprocessing._encoders._transform_selected"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_base.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_base.assert_raise_message": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raise_message"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_base.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_base.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_base.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_base.test_transform_selected": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.float32",
    "numpy.float64",
    "numpy.int32",
    "sklearn.preprocessing.tests.test_base._check_transform_selected",
    "sklearn.preprocessing.tests.test_base.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_base.test_transform_selected_copy_arg": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.float32",
    "numpy.float64",
    "numpy.int32",
    "sklearn.preprocessing._encoders._transform_selected",
    "sklearn.preprocessing.tests.test_base.pytest",
    "sklearn.preprocessing.tests.test_base.toarray",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_base.test_transform_selected_copy_arg._mutating_transformer": {
  "data": {
   "lineno": 46
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_base.test_transform_selected_retain_order": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "ValueError",
    "numpy.int",
    "scipy.sparse.csr_matrix",
    "sklearn.preprocessing._encoders._transform_selected",
    "sklearn.preprocessing.data.Binarizer",
    "sklearn.preprocessing.tests.test_base.toarray",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_base.test_transform_selected_retain_order.transform": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "numpy.hstack"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_base.toarray": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_common": {
  "data": {
   "symbols_in_volume": [
    "sklearn.datasets.load_iris"
   ]
  },
  "type": "module"
 },
 "sklearn.preprocessing.tests.test_common.MaxAbsScaler": {
  "data": {
   "shadows": "sklearn.preprocessing.MaxAbsScaler"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_common.MinMaxScaler": {
  "data": {
   "shadows": "sklearn.preprocessing.MinMaxScaler"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_common.PowerTransformer": {
  "data": {
   "shadows": "sklearn.preprocessing.PowerTransformer"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_common.QuantileTransformer": {
  "data": {
   "shadows": "sklearn.preprocessing.QuantileTransformer"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_common.RobustScaler": {
  "data": {
   "shadows": "sklearn.preprocessing.RobustScaler"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_common.StandardScaler": {
  "data": {
   "shadows": "sklearn.preprocessing.StandardScaler"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_common._get_valid_samples_by_column": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "numpy.isnan"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_common.assert_allclose": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_allclose"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_common.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_common.clone": {
  "data": {
   "shadows": "sklearn.base.clone"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_common.iris": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "sklearn.preprocessing.tests.test_common.load_iris": {
  "data": {
   "shadows": "sklearn.datasets.load_iris"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_common.maxabs_scale": {
  "data": {
   "shadows": "sklearn.preprocessing.maxabs_scale"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_common.minmax_scale": {
  "data": {
   "shadows": "sklearn.preprocessing.minmax_scale"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_common.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_common.power_transform": {
  "data": {
   "shadows": "sklearn.preprocessing.power_transform"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_common.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_common.quantile_transform": {
  "data": {
   "shadows": "sklearn.preprocessing.quantile_transform"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_common.robust_scale": {
  "data": {
   "shadows": "sklearn.preprocessing.robust_scale"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_common.scale": {
  "data": {
   "shadows": "sklearn.preprocessing.scale"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_common.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_common.test_missing_value_handling": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "PendingDeprecationWarning",
    "func",
    "len",
    "numpy.all",
    "numpy.any",
    "numpy.isnan",
    "numpy.nan",
    "numpy.nanmin",
    "numpy.random.RandomState",
    "range",
    "scipy.sparse.bsr_matrix",
    "scipy.sparse.coo_matrix",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.dia_matrix",
    "scipy.sparse.dok_matrix",
    "scipy.sparse.lil_matrix",
    "sklearn.base.clone",
    "sklearn.model_selection.train_test_split",
    "sklearn.preprocessing.MaxAbsScaler",
    "sklearn.preprocessing.MinMaxScaler",
    "sklearn.preprocessing.PowerTransformer",
    "sklearn.preprocessing.QuantileTransformer",
    "sklearn.preprocessing.RobustScaler",
    "sklearn.preprocessing.StandardScaler",
    "sklearn.preprocessing.maxabs_scale",
    "sklearn.preprocessing.minmax_scale",
    "sklearn.preprocessing.power_transform",
    "sklearn.preprocessing.quantile_transform",
    "sklearn.preprocessing.robust_scale",
    "sklearn.preprocessing.scale",
    "sklearn.preprocessing.tests.test_common._get_valid_samples_by_column",
    "sklearn.preprocessing.tests.test_common.iris",
    "sklearn.preprocessing.tests.test_common.pytest",
    "sklearn.preprocessing.tests.test_common.warnings",
    "sklearn.utils.testing.assert_allclose",
    "sklearn.utils.testing.assert_array_equal",
    "sparse_constructor"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_common.train_test_split": {
  "data": {
   "shadows": "sklearn.model_selection.train_test_split"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_common.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_data": {
  "data": {
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.datasets.load_iris",
    "sklearn.preprocessing.tests.test_data.X_1col",
    "sklearn.preprocessing.tests.test_data.X_1row",
    "sklearn.preprocessing.tests.test_data.X_2d",
    "sklearn.preprocessing.tests.test_data.n_features",
    "sklearn.preprocessing.tests.test_data.n_samples",
    "sklearn.preprocessing.tests.test_data.offsets",
    "sklearn.preprocessing.tests.test_data.rng",
    "sklearn.preprocessing.tests.test_data.scales"
   ]
  },
  "type": "module"
 },
 "sklearn.preprocessing.tests.test_data.Binarizer": {
  "data": {
   "shadows": "sklearn.preprocessing.data.Binarizer"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_data.DataConversionWarning": {
  "data": {
   "shadows": "sklearn.exceptions.DataConversionWarning"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_data.KernelCenterer": {
  "data": {
   "shadows": "sklearn.preprocessing.data.KernelCenterer"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_data.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_data.MaxAbsScaler": {
  "data": {
   "shadows": "sklearn.preprocessing.data.MaxAbsScaler"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_data.MinMaxScaler": {
  "data": {
   "shadows": "sklearn.preprocessing.data.MinMaxScaler"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_data.Normalizer": {
  "data": {
   "shadows": "sklearn.preprocessing.data.Normalizer"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_data.NotFittedError": {
  "data": {
   "shadows": "sklearn.exceptions.NotFittedError"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_data.Pipeline": {
  "data": {
   "shadows": "sklearn.pipeline.Pipeline"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_data.PolynomialFeatures": {
  "data": {
   "shadows": "sklearn.preprocessing.data.PolynomialFeatures"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_data.PowerTransformer": {
  "data": {
   "shadows": "sklearn.preprocessing.data.PowerTransformer"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_data.QuantileTransformer": {
  "data": {
   "shadows": "sklearn.preprocessing.data.QuantileTransformer"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_data.RobustScaler": {
  "data": {
   "shadows": "sklearn.preprocessing.data.RobustScaler"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_data.SVR": {
  "data": {
   "shadows": "sklearn.svm.SVR"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_data.StandardScaler": {
  "data": {
   "shadows": "sklearn.preprocessing.data.StandardScaler"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_data.X_1col": {
  "data": {
   "lineno": 79
  },
  "type": "constant"
 },
 "sklearn.preprocessing.tests.test_data.X_1row": {
  "data": {
   "lineno": 78
  },
  "type": "constant"
 },
 "sklearn.preprocessing.tests.test_data.X_2d": {
  "data": {
   "lineno": 77
  },
  "type": "constant"
 },
 "sklearn.preprocessing.tests.test_data.X_list_1col": {
  "data": {
   "lineno": 81
  },
  "type": "constant"
 },
 "sklearn.preprocessing.tests.test_data.X_list_1row": {
  "data": {
   "lineno": 80
  },
  "type": "constant"
 },
 "sklearn.preprocessing.tests.test_data._check_dim_1axis": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data._check_identity_scalers_attributes": {
  "data": {
   "lineno": 726
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data._handle_zeros_in_scale": {
  "data": {
   "shadows": "sklearn.preprocessing.data._handle_zeros_in_scale"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_data.add_dummy_feature": {
  "data": {
   "shadows": "sklearn.preprocessing.data.add_dummy_feature"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_data.assert_allclose": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_allclose"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_data.assert_allclose_dense_sparse": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_allclose_dense_sparse"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_data.assert_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_data.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_data.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_data.assert_array_less": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_less"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_data.assert_correct_incr": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.assert_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_data.assert_false": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_false"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_data.assert_greater_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_greater_equal"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_data.assert_less_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_less_equal"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_data.assert_no_warnings": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_no_warnings"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_data.assert_raise_message": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raise_message"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_data.assert_raises": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_data.assert_raises_regex": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises_regex"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_data.assert_true": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_true"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_data.assert_warns_message": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_warns_message"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_data.clean_warning_registry": {
  "data": {
   "shadows": "sklearn.utils.testing.clean_warning_registry"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_data.clone": {
  "data": {
   "shadows": "sklearn.base.clone"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_data.cross_val_predict": {
  "data": {
   "shadows": "sklearn.model_selection.cross_val_predict"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_data.datasets": {
  "data": {
   "shadows": "sklearn.datasets"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_data.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_data.gen_batches": {
  "data": {
   "shadows": "sklearn.utils.gen_batches"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_data.iris": {
  "data": {
   "lineno": 69
  },
  "type": "constant"
 },
 "sklearn.preprocessing.tests.test_data.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_data.la": {
  "data": {
   "shadows": "numpy.linalg"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_data.maxabs_scale": {
  "data": {
   "shadows": "sklearn.preprocessing.data.maxabs_scale"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_data.mean_variance_axis": {
  "data": {
   "shadows": "sklearn.utils.sparsefuncs.mean_variance_axis"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_data.minmax_scale": {
  "data": {
   "shadows": "sklearn.preprocessing.data.minmax_scale"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_data.n_features": {
  "data": {
   "lineno": 73
  },
  "type": "constant"
 },
 "sklearn.preprocessing.tests.test_data.n_samples": {
  "data": {
   "lineno": 74
  },
  "type": "constant"
 },
 "sklearn.preprocessing.tests.test_data.normalize": {
  "data": {
   "shadows": "sklearn.preprocessing.data.normalize"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_data.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_data.offsets": {
  "data": {
   "lineno": 75
  },
  "type": "constant"
 },
 "sklearn.preprocessing.tests.test_data.power_transform": {
  "data": {
   "shadows": "sklearn.preprocessing.data.power_transform"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_data.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_data.quantile_transform": {
  "data": {
   "shadows": "sklearn.preprocessing.data.quantile_transform"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_data.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_data.rng": {
  "data": {
   "lineno": 72
  },
  "type": "constant"
 },
 "sklearn.preprocessing.tests.test_data.robust_scale": {
  "data": {
   "shadows": "sklearn.preprocessing.data.robust_scale"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_data.scale": {
  "data": {
   "shadows": "sklearn.preprocessing.data.scale"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_data.scales": {
  "data": {
   "lineno": 76
  },
  "type": "constant"
 },
 "sklearn.preprocessing.tests.test_data.shuffle": {
  "data": {
   "shadows": "sklearn.utils.shuffle"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_data.skip_if_32bit": {
  "data": {
   "shadows": "sklearn.utils.testing.skip_if_32bit"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_data.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_data.stats": {
  "data": {
   "shadows": "scipy.stats"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_data.test_add_dummy_feature": {
  "data": {
   "lineno": 1955,
   "symbols_in_volume": [
    "sklearn.preprocessing.data.add_dummy_feature",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_add_dummy_feature_coo": {
  "data": {
   "lineno": 1961,
   "symbols_in_volume": [
    "scipy.sparse.coo_matrix",
    "scipy.sparse.isspmatrix_coo",
    "sklearn.preprocessing.data.add_dummy_feature",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_add_dummy_feature_csc": {
  "data": {
   "lineno": 1968,
   "symbols_in_volume": [
    "scipy.sparse.csc_matrix",
    "scipy.sparse.isspmatrix_csc",
    "sklearn.preprocessing.data.add_dummy_feature",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_add_dummy_feature_csr": {
  "data": {
   "lineno": 1975,
   "symbols_in_volume": [
    "scipy.sparse.csr_matrix",
    "scipy.sparse.isspmatrix_csr",
    "sklearn.preprocessing.data.add_dummy_feature",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_binarizer": {
  "data": {
   "lineno": 1845,
   "symbols_in_volume": [
    "ValueError",
    "init",
    "list",
    "numpy.array",
    "numpy.float64",
    "numpy.sum",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.issparse",
    "sklearn.preprocessing.data.Binarizer",
    "sklearn.preprocessing.tests.test_data.toarray",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_raises",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_center_kernel": {
  "data": {
   "lineno": 1900,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.random.RandomState",
    "sklearn.preprocessing.data.KernelCenterer",
    "sklearn.preprocessing.data.StandardScaler",
    "sklearn.preprocessing.tests.test_data.rng",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_cv_pipeline_precomputed": {
  "data": {
   "lineno": 1925,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.ones",
    "sklearn.model_selection.cross_val_predict",
    "sklearn.pipeline.Pipeline",
    "sklearn.preprocessing.data.KernelCenterer",
    "sklearn.svm.SVR",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_fit_cold_start": {
  "data": {
   "lineno": 1982,
   "symbols_in_volume": [
    "sklearn.preprocessing.data.MaxAbsScaler",
    "sklearn.preprocessing.data.MinMaxScaler",
    "sklearn.preprocessing.data.StandardScaler",
    "sklearn.preprocessing.tests.test_data.X_2d",
    "sklearn.preprocessing.tests.test_data.iris"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_fit_transform": {
  "data": {
   "lineno": 1946,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.preprocessing.data.Binarizer",
    "sklearn.preprocessing.data.Normalizer",
    "sklearn.preprocessing.data.StandardScaler",
    "sklearn.preprocessing.tests.test_data.rng",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_handle_zeros_in_scale": {
  "data": {
   "lineno": 327,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.preprocessing.data._handle_zeros_in_scale",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_false"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_maxabs_scaler_1d": {
  "data": {
   "lineno": 1559,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "numpy.abs",
    "numpy.array",
    "numpy.ones",
    "sklearn.preprocessing.data.MaxAbsScaler",
    "sklearn.preprocessing.data.maxabs_scale",
    "sklearn.preprocessing.tests.test_data.X_1col",
    "sklearn.preprocessing.tests.test_data.X_1row",
    "sklearn.preprocessing.tests.test_data.X_list_1row",
    "sklearn.preprocessing.tests.test_data._check_dim_1axis",
    "sklearn.preprocessing.tests.test_data.n_features",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_maxabs_scaler_large_negative_value": {
  "data": {
   "lineno": 1518,
   "symbols_in_volume": [
    "sklearn.preprocessing.data.MaxAbsScaler",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_maxabs_scaler_partial_fit": {
  "data": {
   "lineno": 1593,
   "symbols_in_volume": [
    "enumerate",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "sklearn.preprocessing.data.MaxAbsScaler",
    "sklearn.preprocessing.tests.test_data.X_2d",
    "sklearn.preprocessing.tests.test_data.assert_correct_incr",
    "sklearn.utils.gen_batches",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_equal",
    "slice"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_maxabs_scaler_transform_one_row_csr": {
  "data": {
   "lineno": 1534,
   "symbols_in_volume": [
    "scipy.sparse.csr_matrix",
    "sklearn.preprocessing.data.MaxAbsScaler",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_maxabs_scaler_zero_variance_features": {
  "data": {
   "lineno": 1469,
   "symbols_in_volume": [
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "sklearn.preprocessing.data.MaxAbsScaler",
    "sklearn.preprocessing.data.maxabs_scale",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_min_max_scaler_1d": {
  "data": {
   "lineno": 600,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "numpy.array",
    "numpy.ones",
    "numpy.zeros",
    "sklearn.preprocessing.data.MinMaxScaler",
    "sklearn.preprocessing.data.minmax_scale",
    "sklearn.preprocessing.tests.test_data.X_1col",
    "sklearn.preprocessing.tests.test_data.X_1row",
    "sklearn.preprocessing.tests.test_data.X_list_1row",
    "sklearn.preprocessing.tests.test_data._check_dim_1axis",
    "sklearn.preprocessing.tests.test_data.n_features",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_greater_equal",
    "sklearn.utils.testing.assert_less_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_min_max_scaler_iris": {
  "data": {
   "lineno": 521,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.preprocessing.data.MinMaxScaler",
    "sklearn.preprocessing.tests.test_data.iris",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_min_max_scaler_zero_variance_features": {
  "data": {
   "lineno": 552,
   "symbols_in_volume": [
    "sklearn.preprocessing.data.MinMaxScaler",
    "sklearn.preprocessing.data.minmax_scale",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_minmax_scale_axis1": {
  "data": {
   "lineno": 593,
   "symbols_in_volume": [
    "numpy.max",
    "numpy.min",
    "sklearn.preprocessing.data.minmax_scale",
    "sklearn.preprocessing.tests.test_data.iris",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_minmax_scaler_partial_fit": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": [
    "enumerate",
    "sklearn.preprocessing.data.MinMaxScaler",
    "sklearn.preprocessing.tests.test_data.X_2d",
    "sklearn.preprocessing.tests.test_data.assert_correct_incr",
    "sklearn.preprocessing.tests.test_data.n_samples",
    "sklearn.utils.gen_batches",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_equal",
    "slice"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_normalize": {
  "data": {
   "lineno": 1797,
   "symbols_in_volume": [
    "NotImplementedError",
    "ValueError",
    "numpy.abs",
    "numpy.array",
    "numpy.float32",
    "numpy.float64",
    "numpy.ones",
    "numpy.random.RandomState",
    "scipy.sparse.csr_matrix",
    "sklearn.preprocessing.data.normalize",
    "sklearn.preprocessing.tests.test_data.toarray",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_normalizer_l1": {
  "data": {
   "lineno": 1651,
   "symbols_in_volume": [
    "init",
    "isinstance",
    "numpy.abs",
    "numpy.linalg.norm",
    "numpy.random.RandomState",
    "range",
    "scipy.sparse.coo_matrix",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.lil_matrix",
    "sklearn.preprocessing.data.Normalizer",
    "sklearn.preprocessing.tests.test_data.rng",
    "sklearn.preprocessing.tests.test_data.toarray",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_normalizer_l2": {
  "data": {
   "lineno": 1700,
   "symbols_in_volume": [
    "init",
    "isinstance",
    "numpy.linalg.norm",
    "numpy.random.RandomState",
    "range",
    "scipy.sparse.coo_matrix",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.lil_matrix",
    "sklearn.preprocessing.data.Normalizer",
    "sklearn.preprocessing.tests.test_data.rng",
    "sklearn.preprocessing.tests.test_data.toarray",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_normalizer_max": {
  "data": {
   "lineno": 1748,
   "symbols_in_volume": [
    "init",
    "isinstance",
    "numpy.linalg.norm",
    "numpy.random.RandomState",
    "range",
    "scipy.sparse.coo_matrix",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.lil_matrix",
    "sklearn.preprocessing.data.Normalizer",
    "sklearn.preprocessing.tests.test_data.rng",
    "sklearn.preprocessing.tests.test_data.toarray",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_optimization_power_transformer": {
  "data": {
   "lineno": 2160,
   "symbols_in_volume": [
    "numpy.linalg.norm",
    "numpy.random.RandomState",
    "sklearn.preprocessing.data.PowerTransformer",
    "sklearn.preprocessing.tests.test_data.n_samples",
    "sklearn.preprocessing.tests.test_data.pytest",
    "sklearn.preprocessing.tests.test_data.rng",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_partial_fit_sparse_input": {
  "data": {
   "lineno": 478,
   "symbols_in_volume": [
    "numpy.array",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "sklearn.preprocessing.data.StandardScaler",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_polynomial_feature_names": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "numpy.arange",
    "sklearn.preprocessing.data.PolynomialFeatures",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_polynomial_features": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.hstack",
    "numpy.newaxis",
    "numpy.ones_like",
    "sklearn.preprocessing.data.PolynomialFeatures",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_polynomial_features_sparse_X": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "int",
    "isinstance",
    "numpy.float32",
    "numpy.float64",
    "numpy.random.RandomState",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "sklearn.preprocessing.data.PolynomialFeatures",
    "sklearn.preprocessing.tests.test_data.pytest",
    "sklearn.preprocessing.tests.test_data.rng",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_power_transformer_1d": {
  "data": {
   "lineno": 2027,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "numpy.abs",
    "numpy.ndarray",
    "scipy.stats.boxcox",
    "sklearn.preprocessing.data.PowerTransformer",
    "sklearn.preprocessing.data.power_transform",
    "sklearn.preprocessing.data.scale",
    "sklearn.preprocessing.tests.test_data.X_1col",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_power_transformer_2d": {
  "data": {
   "lineno": 2051,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "numpy.abs",
    "numpy.ndarray",
    "range",
    "scipy.stats.boxcox",
    "sklearn.preprocessing.data.PowerTransformer",
    "sklearn.preprocessing.data.power_transform",
    "sklearn.preprocessing.data.scale",
    "sklearn.preprocessing.tests.test_data.X_2d",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_power_transformer_boxcox_strictly_positive_exception": {
  "data": {
   "lineno": 2078,
   "symbols_in_volume": [
    "ValueError",
    "numpy.abs",
    "numpy.zeros",
    "sklearn.preprocessing.data.PowerTransformer",
    "sklearn.preprocessing.data.power_transform",
    "sklearn.preprocessing.tests.test_data.X_2d",
    "sklearn.utils.testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_power_transformer_copy_False": {
  "data": {
   "lineno": 2253,
   "symbols_in_volume": [
    "numpy.abs",
    "sklearn.preprocessing.data.PowerTransformer",
    "sklearn.preprocessing.tests.test_data.X_1col",
    "sklearn.preprocessing.tests.test_data.pytest",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_power_transformer_copy_True": {
  "data": {
   "lineno": 2225,
   "symbols_in_volume": [
    "numpy.abs",
    "sklearn.preprocessing.data.PowerTransformer",
    "sklearn.preprocessing.tests.test_data.X_1col",
    "sklearn.preprocessing.tests.test_data.pytest",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_power_transformer_fit_transform": {
  "data": {
   "lineno": 2213,
   "symbols_in_volume": [
    "numpy.abs",
    "sklearn.preprocessing.data.PowerTransformer",
    "sklearn.preprocessing.tests.test_data.X_1col",
    "sklearn.preprocessing.tests.test_data.pytest",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_power_transformer_inverse": {
  "data": {
   "lineno": 2015,
   "symbols_in_volume": [
    "numpy.abs",
    "sklearn.preprocessing.data.PowerTransformer",
    "sklearn.preprocessing.tests.test_data.X_1col",
    "sklearn.preprocessing.tests.test_data.X_2d",
    "sklearn.preprocessing.tests.test_data.pytest",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_power_transformer_lambda_one": {
  "data": {
   "lineno": 2150,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.array",
    "sklearn.preprocessing.data.PowerTransformer",
    "sklearn.preprocessing.tests.test_data.X_2d",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_power_transformer_lambda_zero": {
  "data": {
   "lineno": 2140,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.array",
    "sklearn.preprocessing.data.PowerTransformer",
    "sklearn.preprocessing.tests.test_data.X_2d",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_power_transformer_method_exception": {
  "data": {
   "lineno": 2130,
   "symbols_in_volume": [
    "ValueError",
    "numpy.abs",
    "sklearn.preprocessing.data.PowerTransformer",
    "sklearn.preprocessing.tests.test_data.X_2d",
    "sklearn.utils.testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_power_transformer_nans": {
  "data": {
   "lineno": 2190,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.concatenate",
    "numpy.full_like",
    "numpy.isnan",
    "numpy.nan",
    "sklearn.preprocessing.data.PowerTransformer",
    "sklearn.preprocessing.tests.test_data.X_1col",
    "sklearn.preprocessing.tests.test_data.pytest",
    "sklearn.utils.shuffle",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_power_transformer_notfitted": {
  "data": {
   "lineno": 2007,
   "symbols_in_volume": [
    "numpy.abs",
    "sklearn.exceptions.NotFittedError",
    "sklearn.preprocessing.data.PowerTransformer",
    "sklearn.preprocessing.tests.test_data.X_1col",
    "sklearn.preprocessing.tests.test_data.pytest",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_power_transformer_shape_exception": {
  "data": {
   "lineno": 2113,
   "symbols_in_volume": [
    "ValueError",
    "numpy.abs",
    "sklearn.preprocessing.data.PowerTransformer",
    "sklearn.preprocessing.tests.test_data.X_2d",
    "sklearn.preprocessing.tests.test_data.pytest",
    "sklearn.utils.testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_power_transformer_yeojohnson_any_input": {
  "data": {
   "lineno": 2106,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.zeros",
    "sklearn.preprocessing.data.power_transform",
    "sklearn.preprocessing.tests.test_data.X_2d",
    "sklearn.preprocessing.tests.test_data.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_quantile_transform_and_inverse": {
  "data": {
   "lineno": 1347,
   "symbols_in_volume": [
    "sklearn.preprocessing.data.QuantileTransformer",
    "sklearn.preprocessing.tests.test_data.iris",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_quantile_transform_axis1": {
  "data": {
   "lineno": 1292,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.preprocessing.data.quantile_transform",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_quantile_transform_bounds": {
  "data": {
   "lineno": 1302,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.max",
    "numpy.min",
    "numpy.random.random",
    "scipy.sparse.csc_matrix",
    "sklearn.preprocessing.data.QuantileTransformer",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_quantile_transform_check_error": {
  "data": {
   "lineno": 1051,
   "symbols_in_volume": [
    "ValueError",
    "numpy.transpose",
    "scipy.sparse.csc_matrix",
    "sklearn.preprocessing.data.QuantileTransformer",
    "sklearn.utils.testing.assert_raise_message",
    "sklearn.utils.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_quantile_transform_dense_toy": {
  "data": {
   "lineno": 1182,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.linspace",
    "numpy.sort",
    "numpy.tile",
    "sklearn.preprocessing.data.QuantileTransformer",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_quantile_transform_iris": {
  "data": {
   "lineno": 1030,
   "symbols_in_volume": [
    "scipy.sparse.csc_matrix",
    "sklearn.preprocessing.data.QuantileTransformer",
    "sklearn.preprocessing.tests.test_data.iris",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_quantile_transform_nan": {
  "data": {
   "lineno": 1356,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.isnan",
    "numpy.nan",
    "sklearn.preprocessing.data.QuantileTransformer"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_quantile_transform_sparse_ignore_zeros": {
  "data": {
   "lineno": 1114,
   "symbols_in_volume": [
    "UserWarning",
    "numpy.array",
    "scipy.sparse.csc_matrix",
    "sklearn.preprocessing.data.QuantileTransformer",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_warns_message"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_quantile_transform_sparse_toy": {
  "data": {
   "lineno": 1257,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.max",
    "numpy.min",
    "scipy.sparse.csc_matrix",
    "sklearn.preprocessing.data.QuantileTransformer",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_quantile_transform_subsampling": {
  "data": {
   "lineno": 1212,
   "symbols_in_volume": [
    "len",
    "numpy.abs",
    "numpy.linspace",
    "numpy.max",
    "numpy.random.sample",
    "numpy.ravel",
    "numpy.sort",
    "numpy.unique",
    "range",
    "scipy.sparse.rand",
    "sklearn.preprocessing.data.QuantileTransformer",
    "sklearn.preprocessing.tests.test_data.n_samples",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_quantile_transform_valid_axis": {
  "data": {
   "lineno": 1998,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "sklearn.preprocessing.data.quantile_transform",
    "sklearn.utils.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_robust_scale_1d_array": {
  "data": {
   "lineno": 1427,
   "symbols_in_volume": [
    "numpy.median",
    "numpy.percentile",
    "sklearn.preprocessing.data.robust_scale",
    "sklearn.preprocessing.tests.test_data.iris",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_robust_scale_axis1": {
  "data": {
   "lineno": 1418,
   "symbols_in_volume": [
    "numpy.median",
    "numpy.percentile",
    "sklearn.preprocessing.data.robust_scale",
    "sklearn.preprocessing.tests.test_data.iris",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_robust_scaler_2d_arrays": {
  "data": {
   "lineno": 956,
   "symbols_in_volume": [
    "numpy.median",
    "numpy.random.RandomState",
    "sklearn.preprocessing.data.RobustScaler",
    "sklearn.preprocessing.tests.test_data.rng",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_robust_scaler_attributes": {
  "data": {
   "lineno": 918,
   "symbols_in_volume": [
    "isinstance",
    "numpy.ndarray",
    "numpy.random.randn",
    "scipy.sparse.issparse",
    "scipy.sparse.rand",
    "sklearn.preprocessing.data.RobustScaler",
    "sklearn.preprocessing.tests.test_data.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_robust_scaler_col_zero_sparse": {
  "data": {
   "lineno": 941,
   "symbols_in_volume": [
    "numpy.random.randn",
    "scipy.sparse.csr_matrix",
    "sklearn.preprocessing.data.RobustScaler",
    "sklearn.preprocessing.tests.test_data.pytest",
    "sklearn.utils.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_robust_scaler_equivalence_dense_sparse": {
  "data": {
   "lineno": 969,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.float64",
    "numpy.zeros",
    "scipy.sparse.rand",
    "sklearn.preprocessing.data.RobustScaler",
    "sklearn.preprocessing.tests.test_data.pytest",
    "sklearn.utils.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_robust_scaler_error_sparse": {
  "data": {
   "lineno": 910,
   "symbols_in_volume": [
    "ValueError",
    "scipy.sparse.rand",
    "sklearn.preprocessing.data.RobustScaler",
    "sklearn.preprocessing.tests.test_data.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_robust_scaler_invalid_range": {
  "data": {
   "lineno": 1370,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.preprocessing.data.RobustScaler",
    "sklearn.preprocessing.tests.test_data.iris",
    "sklearn.utils.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_robust_scaler_iris": {
  "data": {
   "lineno": 1006,
   "symbols_in_volume": [
    "numpy.median",
    "numpy.percentile",
    "sklearn.preprocessing.data.RobustScaler",
    "sklearn.preprocessing.tests.test_data.iris",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_robust_scaler_iris_quantiles": {
  "data": {
   "lineno": 1018,
   "symbols_in_volume": [
    "numpy.median",
    "numpy.percentile",
    "sklearn.preprocessing.data.RobustScaler",
    "sklearn.preprocessing.tests.test_data.iris",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_robust_scaler_transform_one_row_csr": {
  "data": {
   "lineno": 992,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.random.RandomState",
    "scipy.sparse.csr_matrix",
    "sklearn.preprocessing.data.RobustScaler",
    "sklearn.preprocessing.tests.test_data.rng",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_robust_scaler_zero_variance_features": {
  "data": {
   "lineno": 1436,
   "symbols_in_volume": [
    "sklearn.preprocessing.data.RobustScaler",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_scale_1d": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.preprocessing.data.scale",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_scale_function_without_centering": {
  "data": {
   "lineno": 1384,
   "symbols_in_volume": [
    "ValueError",
    "numpy.any",
    "numpy.isnan",
    "numpy.random.RandomState",
    "scipy.sparse.csr_matrix",
    "sklearn.preprocessing.data.scale",
    "sklearn.preprocessing.tests.test_data.rng",
    "sklearn.utils.sparsefuncs.mean_variance_axis",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_false",
    "sklearn.utils.testing.assert_raises",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_scale_input_finiteness_validation": {
  "data": {
   "lineno": 902,
   "symbols_in_volume": [
    "ValueError",
    "numpy.inf",
    "sklearn.preprocessing.data.scale",
    "sklearn.utils.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_scale_sparse_with_mean_raise_exception": {
  "data": {
   "lineno": 877,
   "symbols_in_volume": [
    "ValueError",
    "numpy.random.RandomState",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "sklearn.preprocessing.data.StandardScaler",
    "sklearn.preprocessing.data.scale",
    "sklearn.preprocessing.tests.test_data.rng",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_scaler_2d_arrays": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "numpy.any",
    "numpy.isnan",
    "numpy.random.RandomState",
    "sklearn.preprocessing.data.StandardScaler",
    "sklearn.preprocessing.data.scale",
    "sklearn.preprocessing.tests.test_data.n_features",
    "sklearn.preprocessing.tests.test_data.n_samples",
    "sklearn.preprocessing.tests.test_data.rng",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_false",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_scaler_int": {
  "data": {
   "lineno": 783,
   "symbols_in_volume": [
    "numpy.any",
    "numpy.float",
    "numpy.isnan",
    "numpy.random.RandomState",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "sklearn.preprocessing.data.StandardScaler",
    "sklearn.preprocessing.tests.test_data.rng",
    "sklearn.preprocessing.tests.test_data.warnings",
    "sklearn.utils.sparsefuncs.mean_variance_axis",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_false",
    "sklearn.utils.testing.assert_true",
    "sklearn.utils.testing.clean_warning_registry"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_scaler_n_samples_seen_with_nan": {
  "data": {
   "lineno": 704,
   "symbols_in_volume": [
    "array_constructor",
    "numpy.array",
    "numpy.asarray",
    "numpy.float64",
    "numpy.nan",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.issparse",
    "sklearn.preprocessing.data.StandardScaler",
    "sklearn.preprocessing.tests.test_data.pytest",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_scaler_return_identity": {
  "data": {
   "lineno": 733,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.float64",
    "scipy.sparse.csr_matrix",
    "sklearn.base.clone",
    "sklearn.preprocessing.data.StandardScaler",
    "sklearn.preprocessing.tests.test_data._check_identity_scalers_attributes",
    "sklearn.preprocessing.tests.test_data.itertools",
    "sklearn.utils.testing.assert_allclose",
    "sklearn.utils.testing.assert_allclose_dense_sparse"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_scaler_without_centering": {
  "data": {
   "lineno": 640,
   "symbols_in_volume": [
    "ValueError",
    "numpy.any",
    "numpy.isnan",
    "numpy.random.RandomState",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "sklearn.preprocessing.data.StandardScaler",
    "sklearn.preprocessing.tests.test_data.rng",
    "sklearn.utils.sparsefuncs.mean_variance_axis",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_false",
    "sklearn.utils.testing.assert_raises",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_scaler_without_copy": {
  "data": {
   "lineno": 856,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "sklearn.preprocessing.data.StandardScaler",
    "sklearn.preprocessing.tests.test_data.rng",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_standard_scaler_1d": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "numpy.array",
    "numpy.ones",
    "numpy.zeros_like",
    "sklearn.preprocessing.data.StandardScaler",
    "sklearn.preprocessing.tests.test_data.X_1col",
    "sklearn.preprocessing.tests.test_data.X_1row",
    "sklearn.preprocessing.tests.test_data.X_list_1row",
    "sklearn.preprocessing.tests.test_data._check_dim_1axis",
    "sklearn.preprocessing.tests.test_data.n_features",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_standard_scaler_numerical_stability": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "UserWarning",
    "distutils.version.LooseVersion",
    "numpy.__version__",
    "numpy.float64",
    "numpy.full",
    "numpy.log",
    "numpy.zeros",
    "sklearn.preprocessing.data.scale",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_no_warnings",
    "sklearn.utils.testing.assert_warns_message",
    "sklearn.utils.testing.skip_if_32bit"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_standard_scaler_partial_fit": {
  "data": {
   "lineno": 386,
   "symbols_in_volume": [
    "enumerate",
    "numpy.float64",
    "numpy.ones",
    "numpy.std",
    "numpy.var",
    "numpy.zeros",
    "sklearn.preprocessing.data.StandardScaler",
    "sklearn.preprocessing.tests.test_data.X_2d",
    "sklearn.preprocessing.tests.test_data.assert_correct_incr",
    "sklearn.preprocessing.tests.test_data.n_features",
    "sklearn.preprocessing.tests.test_data.n_samples",
    "sklearn.utils.gen_batches",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_equal",
    "slice"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_standard_scaler_partial_fit_numerical_stability": {
  "data": {
   "lineno": 432,
   "symbols_in_volume": [
    "numpy.float64",
    "numpy.random.RandomState",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "sklearn.preprocessing.data.StandardScaler",
    "sklearn.preprocessing.data.scale",
    "sklearn.preprocessing.tests.test_data.n_features",
    "sklearn.preprocessing.tests.test_data.n_samples",
    "sklearn.preprocessing.tests.test_data.offsets",
    "sklearn.preprocessing.tests.test_data.rng",
    "sklearn.preprocessing.tests.test_data.scales",
    "sklearn.utils.testing.assert_allclose",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_standard_scaler_trasform_with_partial_fit": {
  "data": {
   "lineno": 494,
   "symbols_in_volume": [
    "enumerate",
    "float",
    "numpy.finfo",
    "numpy.zeros",
    "sklearn.preprocessing.data.StandardScaler",
    "sklearn.preprocessing.tests.test_data.X_2d",
    "sklearn.utils.gen_batches",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_array_less",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_warning_scaling_integers": {
  "data": {
   "lineno": 1546,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.uint8",
    "sklearn.exceptions.DataConversionWarning",
    "sklearn.preprocessing.data.MinMaxScaler",
    "sklearn.preprocessing.data.StandardScaler",
    "sklearn.preprocessing.data.scale",
    "sklearn.utils.testing.assert_warns_message",
    "sklearn.utils.testing.clean_warning_registry"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.toarray": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_discretization": {
  "data": {},
  "type": "module"
 },
 "sklearn.preprocessing.tests.test_discretization.KBinsDiscretizer": {
  "data": {
   "shadows": "sklearn.preprocessing.KBinsDiscretizer"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_discretization.OneHotEncoder": {
  "data": {
   "shadows": "sklearn.preprocessing.OneHotEncoder"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_discretization.X": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "sklearn.preprocessing.tests.test_discretization.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_discretization.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_discretization.assert_raise_message": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raise_message"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_discretization.assert_raises": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_discretization.assert_warns_message": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_warns_message"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_discretization.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_discretization.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_discretization.range": {
  "data": {
   "shadows": "sklearn.externals.six.moves.xrange"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_discretization.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_discretization.test_encode_options": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "numpy.arange",
    "scipy.sparse.issparse",
    "sklearn.preprocessing.KBinsDiscretizer",
    "sklearn.preprocessing.OneHotEncoder",
    "sklearn.preprocessing.tests.test_discretization.X",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_discretization.test_fit_transform": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "sklearn.preprocessing.KBinsDiscretizer",
    "sklearn.preprocessing.tests.test_discretization.X",
    "sklearn.preprocessing.tests.test_discretization.pytest",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_discretization.test_fit_transform_n_bins_array": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.preprocessing.KBinsDiscretizer",
    "sklearn.preprocessing.tests.test_discretization.X",
    "sklearn.preprocessing.tests.test_discretization.pytest",
    "sklearn.utils.testing.assert_array_equal",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_discretization.test_invalid_encode_option": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.preprocessing.KBinsDiscretizer",
    "sklearn.preprocessing.tests.test_discretization.X",
    "sklearn.utils.testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_discretization.test_invalid_n_bins": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.preprocessing.KBinsDiscretizer",
    "sklearn.preprocessing.tests.test_discretization.X",
    "sklearn.utils.testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_discretization.test_invalid_n_bins_array": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "ValueError",
    "numpy.full",
    "sklearn.preprocessing.KBinsDiscretizer",
    "sklearn.preprocessing.tests.test_discretization.X",
    "sklearn.utils.testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_discretization.test_invalid_n_features": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "ValueError",
    "numpy.arange",
    "sklearn.preprocessing.KBinsDiscretizer",
    "sklearn.preprocessing.tests.test_discretization.X",
    "sklearn.utils.testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_discretization.test_invalid_strategy_option": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.preprocessing.KBinsDiscretizer",
    "sklearn.preprocessing.tests.test_discretization.X",
    "sklearn.utils.testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_discretization.test_inverse_transform": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.preprocessing.KBinsDiscretizer",
    "sklearn.preprocessing.tests.test_discretization.X",
    "sklearn.preprocessing.tests.test_discretization.pytest",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_discretization.test_nonuniform_strategies": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.preprocessing.KBinsDiscretizer",
    "sklearn.preprocessing.tests.test_discretization.X",
    "sklearn.preprocessing.tests.test_discretization.pytest",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_discretization.test_numeric_stability": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.externals.six.moves.xrange",
    "sklearn.preprocessing.KBinsDiscretizer",
    "sklearn.preprocessing.tests.test_discretization.X",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_discretization.test_overwrite": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.preprocessing.KBinsDiscretizer",
    "sklearn.preprocessing.tests.test_discretization.X",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_discretization.test_same_min_max": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "UserWarning",
    "numpy.array",
    "numpy.zeros",
    "sklearn.preprocessing.KBinsDiscretizer",
    "sklearn.preprocessing.tests.test_discretization.X",
    "sklearn.preprocessing.tests.test_discretization.pytest",
    "sklearn.preprocessing.tests.test_discretization.warnings",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_warns_message"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_discretization.test_transform_1d_behavior": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "ValueError",
    "numpy.arange",
    "sklearn.preprocessing.KBinsDiscretizer",
    "sklearn.preprocessing.tests.test_discretization.X",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_discretization.test_transform_outside_fit_range": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.preprocessing.KBinsDiscretizer",
    "sklearn.preprocessing.tests.test_discretization.X",
    "sklearn.preprocessing.tests.test_discretization.pytest",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_discretization.test_valid_n_bins": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.dtype",
    "numpy.int",
    "sklearn.preprocessing.KBinsDiscretizer",
    "sklearn.preprocessing.tests.test_discretization.X"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_discretization.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_encoders": {
  "data": {},
  "type": "module"
 },
 "sklearn.preprocessing.tests.test_encoders.CategoricalEncoder": {
  "data": {
   "shadows": "sklearn.preprocessing.CategoricalEncoder"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_encoders.OneHotEncoder": {
  "data": {
   "shadows": "sklearn.preprocessing.OneHotEncoder"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_encoders.OrdinalEncoder": {
  "data": {
   "shadows": "sklearn.preprocessing.OrdinalEncoder"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_encoders._check_one_hot": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "numpy.where",
    "sklearn.preprocessing.tests.test_encoders._run_one_hot",
    "sklearn.preprocessing.tests.test_encoders.toarray",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_encoders._run_one_hot": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "DeprecationWarning",
    "FutureWarning",
    "sklearn.preprocessing.OneHotEncoder",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_encoders.assert_allclose": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_allclose"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_encoders.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_encoders.assert_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_encoders.assert_no_warnings": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_no_warnings"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_encoders.assert_raises": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_encoders.assert_raises_regex": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises_regex"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_encoders.assert_warns": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_warns"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_encoders.assert_warns_message": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_warns_message"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_encoders.check_categorical_onehot": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": [
    "scipy.sparse.isspmatrix_csr",
    "sklearn.preprocessing.OneHotEncoder",
    "sklearn.utils.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_encoders.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_encoders.ignore_warnings": {
  "data": {
   "shadows": "sklearn.utils.testing.ignore_warnings"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_encoders.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_encoders.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_encoders.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_encoders.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_encoders.test_categorical_encoder_stub": {
  "data": {
   "lineno": 613,
   "symbols_in_volume": [
    "RuntimeError",
    "sklearn.preprocessing.CategoricalEncoder",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_encoders.test_encoder_dtypes": {
  "data": {
   "lineno": 564,
   "symbols_in_volume": [
    "all",
    "numpy.array",
    "numpy.integer",
    "numpy.issubdtype",
    "range",
    "sklearn.preprocessing.OneHotEncoder",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_encoders.test_encoder_dtypes_pandas": {
  "data": {
   "lineno": 589,
   "symbols_in_volume": [
    "all",
    "numpy.array",
    "range",
    "sklearn.preprocessing.OneHotEncoder",
    "sklearn.preprocessing.tests.test_encoders.pytest",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_encoders.test_one_hot_encoder": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": [
    "numpy.array",
    "object",
    "sklearn.preprocessing.OneHotEncoder",
    "sklearn.preprocessing.tests.test_encoders.check_categorical_onehot",
    "sklearn.preprocessing.tests.test_encoders.pytest",
    "sklearn.utils.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_encoders.test_one_hot_encoder_categorical_features": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "range",
    "sklearn.preprocessing.OneHotEncoder",
    "sklearn.preprocessing.tests.test_encoders._check_one_hot",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_encoders.test_one_hot_encoder_categories": {
  "data": {
   "lineno": 365,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "numpy.array",
    "numpy.integer",
    "numpy.issubdtype",
    "numpy.object_",
    "numpy.str_",
    "object",
    "sklearn.preprocessing.OneHotEncoder",
    "sklearn.preprocessing.tests.test_encoders.pytest",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_encoders.test_one_hot_encoder_dense": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "DeprecationWarning",
    "FutureWarning",
    "numpy.array",
    "numpy.where",
    "sklearn.preprocessing.OneHotEncoder",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_encoders.test_one_hot_encoder_deprecationwarnings": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "DeprecationWarning",
    "FutureWarning",
    "numpy.array",
    "object",
    "sklearn.preprocessing.OneHotEncoder",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_no_warnings",
    "sklearn.utils.testing.assert_warns",
    "sklearn.utils.testing.assert_warns_message",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_encoders.test_one_hot_encoder_dtype": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.float32",
    "numpy.float64",
    "numpy.int32",
    "sklearn.preprocessing.OneHotEncoder",
    "sklearn.preprocessing.tests.test_encoders.pytest",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_encoders.test_one_hot_encoder_dtype_pandas": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.float32",
    "numpy.float64",
    "numpy.int32",
    "sklearn.preprocessing.OneHotEncoder",
    "sklearn.preprocessing.tests.test_encoders.pytest",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_encoders.test_one_hot_encoder_feature_names": {
  "data": {
   "lineno": 459,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "numpy.ndarray",
    "sklearn.preprocessing.OneHotEncoder",
    "sklearn.preprocessing.tests.test_encoders.pytest",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_encoders.test_one_hot_encoder_feature_names_unicode": {
  "data": {
   "lineno": 490,
   "symbols_in_volume": [
    "numpy.array",
    "object",
    "sklearn.preprocessing.OneHotEncoder",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_encoders.test_one_hot_encoder_force_new_behaviour": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "FutureWarning",
    "ValueError",
    "numpy.array",
    "sklearn.preprocessing.OneHotEncoder",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_raises",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_encoders.test_one_hot_encoder_handle_unknown": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "FutureWarning",
    "ValueError",
    "numpy.array",
    "sklearn.preprocessing.OneHotEncoder",
    "sklearn.utils.testing.assert_allclose",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_raises",
    "sklearn.utils.testing.assert_warns"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_encoders.test_one_hot_encoder_inverse": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "object",
    "sklearn.preprocessing.OneHotEncoder",
    "sklearn.preprocessing.tests.test_encoders.re",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_encoders.test_one_hot_encoder_pandas": {
  "data": {
   "lineno": 450,
   "symbols_in_volume": [
    "sklearn.preprocessing.tests.test_encoders.check_categorical_onehot",
    "sklearn.preprocessing.tests.test_encoders.pytest",
    "sklearn.utils.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_encoders.test_one_hot_encoder_raise_missing": {
  "data": {
   "lineno": 500,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "numpy.nan",
    "object",
    "sklearn.preprocessing.OneHotEncoder",
    "sklearn.preprocessing.tests.test_encoders.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_encoders.test_one_hot_encoder_set_params": {
  "data": {
   "lineno": 284,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.preprocessing.OneHotEncoder"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_encoders.test_one_hot_encoder_sparse": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "DeprecationWarning",
    "FutureWarning",
    "TypeError",
    "ValueError",
    "numpy.array",
    "numpy.int",
    "numpy.where",
    "sklearn.preprocessing.OneHotEncoder",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_raises",
    "sklearn.utils.testing.assert_raises_regex",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_encoders.test_one_hot_encoder_specified_categories": {
  "data": {
   "lineno": 385,
   "symbols_in_volume": [
    "ValueError",
    "list",
    "numpy.array",
    "numpy.int64",
    "numpy.object_",
    "object",
    "sklearn.preprocessing.OneHotEncoder",
    "sklearn.preprocessing.tests.test_encoders.pytest",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_encoders.test_one_hot_encoder_specified_categories_mixed_columns": {
  "data": {
   "lineno": 436,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.issubdtype",
    "numpy.object_",
    "object",
    "sklearn.preprocessing.OneHotEncoder",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_encoders.test_one_hot_encoder_unsorted_categories": {
  "data": {
   "lineno": 417,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "numpy.issubdtype",
    "numpy.object_",
    "object",
    "sklearn.preprocessing.OneHotEncoder",
    "sklearn.preprocessing.tests.test_encoders.pytest",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_encoders.test_one_hot_encoder_warning": {
  "data": {
   "lineno": 607,
   "symbols_in_volume": [
    "numpy.testing.assert_no_warnings",
    "sklearn.preprocessing.OneHotEncoder"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_encoders.test_ordinal_encoder": {
  "data": {
   "lineno": 519,
   "symbols_in_volume": [
    "numpy.array",
    "object",
    "sklearn.preprocessing.OrdinalEncoder",
    "sklearn.preprocessing.tests.test_encoders.pytest",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_encoders.test_ordinal_encoder_inverse": {
  "data": {
   "lineno": 533,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "object",
    "sklearn.preprocessing.OrdinalEncoder",
    "sklearn.preprocessing.tests.test_encoders.re",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_encoders.test_ordinal_encoder_raise_missing": {
  "data": {
   "lineno": 546,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "numpy.nan",
    "object",
    "sklearn.preprocessing.OrdinalEncoder",
    "sklearn.preprocessing.tests.test_encoders.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_encoders.toarray": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_function_transformer": {
  "data": {},
  "type": "module"
 },
 "sklearn.preprocessing.tests.test_function_transformer.FunctionTransformer": {
  "data": {
   "shadows": "sklearn.preprocessing.FunctionTransformer"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_function_transformer._make_func": {
  "data": {
   "lineno": 12
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_function_transformer._make_func._func": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "func"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_function_transformer.assert_allclose_dense_sparse": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_allclose_dense_sparse"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_function_transformer.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_function_transformer.assert_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_function_transformer.assert_no_warnings": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_no_warnings"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_function_transformer.assert_warns_message": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_warns_message"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_function_transformer.ignore_warnings": {
  "data": {
   "shadows": "sklearn.utils.testing.ignore_warnings"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_function_transformer.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_function_transformer.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_function_transformer.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_function_transformer.test_check_inverse": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "FutureWarning",
    "UserWarning",
    "numpy.around",
    "numpy.array",
    "numpy.expm1",
    "numpy.float64",
    "numpy.log1p",
    "numpy.sqrt",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.issparse",
    "sklearn.preprocessing.FunctionTransformer",
    "sklearn.utils.testing.assert_allclose_dense_sparse",
    "sklearn.utils.testing.assert_no_warnings",
    "sklearn.utils.testing.assert_warns_message",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_function_transformer.test_delegate_to_func": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "DeprecationWarning",
    "numpy.arange",
    "object",
    "sklearn.preprocessing.FunctionTransformer",
    "sklearn.preprocessing.tests.test_function_transformer._make_func",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_warns_message"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_function_transformer.test_function_transformer_frame": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "hasattr",
    "numpy.random.randn",
    "sklearn.preprocessing.FunctionTransformer",
    "sklearn.preprocessing.tests.test_function_transformer.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_function_transformer.test_function_transformer_future_warning": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "FutureWarning",
    "len",
    "numpy.random.randn",
    "sklearn.preprocessing.FunctionTransformer",
    "sklearn.preprocessing.tests.test_function_transformer.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_function_transformer.test_inverse_transform": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "FutureWarning",
    "dict",
    "numpy.around",
    "numpy.array",
    "numpy.sqrt",
    "sklearn.preprocessing.FunctionTransformer",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_function_transformer.test_kw_arg": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "FutureWarning",
    "dict",
    "numpy.around",
    "numpy.linspace",
    "sklearn.preprocessing.FunctionTransformer",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_function_transformer.test_kw_arg_reset": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "FutureWarning",
    "dict",
    "numpy.around",
    "numpy.linspace",
    "sklearn.preprocessing.FunctionTransformer",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_function_transformer.test_kw_arg_update": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "FutureWarning",
    "dict",
    "numpy.around",
    "numpy.linspace",
    "sklearn.preprocessing.FunctionTransformer",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_function_transformer.test_np_log": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "FutureWarning",
    "numpy.arange",
    "numpy.log1p",
    "sklearn.preprocessing.FunctionTransformer",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_imputation": {
  "data": {},
  "type": "module"
 },
 "sklearn.preprocessing.tests.test_imputation.GridSearchCV": {
  "data": {
   "shadows": "sklearn.model_selection.GridSearchCV"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_imputation.Imputer": {
  "data": {
   "shadows": "sklearn.preprocessing.imputation.Imputer"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_imputation.Pipeline": {
  "data": {
   "shadows": "sklearn.pipeline.Pipeline"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_imputation._check_statistics": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "ValueError",
    "assert_ae",
    "numpy.isnan",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.issparse",
    "sklearn.preprocessing.imputation.Imputer",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_raises",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_imputation.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_imputation.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_imputation.assert_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_imputation.assert_false": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_false"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_imputation.assert_raises": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_imputation.ignore_warnings": {
  "data": {
   "shadows": "sklearn.utils.testing.ignore_warnings"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_imputation.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_imputation.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_imputation.safe_mean": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "hasattr",
    "len",
    "numpy.mean",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_imputation.safe_median": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "hasattr",
    "len",
    "numpy.median",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_imputation.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_imputation.sparse_random_matrix": {
  "data": {
   "shadows": "sklearn.random_projection.sparse_random_matrix"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_imputation.test_imputation_copy": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": [
    "numpy.all",
    "scipy.sparse.issparse",
    "sklearn.preprocessing.imputation.Imputer",
    "sklearn.random_projection.sparse_random_matrix",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_false",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_imputation.test_imputation_mean_median": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "len",
    "max",
    "numpy.arange",
    "numpy.empty",
    "numpy.hstack",
    "numpy.isnan",
    "numpy.mean",
    "numpy.median",
    "numpy.random.RandomState",
    "numpy.repeat",
    "numpy.zeros",
    "range",
    "sklearn.preprocessing.tests.test_imputation._check_statistics",
    "sklearn.preprocessing.tests.test_imputation.safe_mean",
    "sklearn.preprocessing.tests.test_imputation.safe_median",
    "sklearn.utils.testing.ignore_warnings",
    "true_value_fun"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_imputation.test_imputation_mean_median_only_zero": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "sklearn.preprocessing.tests.test_imputation._check_statistics",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_imputation.test_imputation_median_special_cases": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "sklearn.preprocessing.tests.test_imputation._check_statistics",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_imputation.test_imputation_most_frequent": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "sklearn.preprocessing.tests.test_imputation._check_statistics",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_imputation.test_imputation_pickle": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "sklearn.preprocessing.imputation.Imputer",
    "sklearn.preprocessing.tests.test_imputation.pickle",
    "sklearn.random_projection.sparse_random_matrix",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_imputation.test_imputation_pipeline_grid_search": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "sklearn.model_selection.GridSearchCV",
    "sklearn.pipeline.Pipeline",
    "sklearn.preprocessing.imputation.Imputer",
    "sklearn.random_projection.sparse_random_matrix",
    "sklearn.tree.DecisionTreeRegressor",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_imputation.test_imputation_shape": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "numpy.nan",
    "numpy.random.randn",
    "scipy.sparse.csr_matrix",
    "sklearn.preprocessing.imputation.Imputer",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_imputation.tree": {
  "data": {
   "shadows": "sklearn.tree"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_label": {
  "data": {
   "symbols_in_volume": [
    "sklearn.datasets.load_iris"
   ]
  },
  "type": "module"
 },
 "sklearn.preprocessing.tests.test_label.LabelBinarizer": {
  "data": {
   "shadows": "sklearn.preprocessing.label.LabelBinarizer"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_label.LabelEncoder": {
  "data": {
   "shadows": "sklearn.preprocessing.label.LabelEncoder"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_label.MultiLabelBinarizer": {
  "data": {
   "shadows": "sklearn.preprocessing.label.MultiLabelBinarizer"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_label._encode": {
  "data": {
   "shadows": "sklearn.preprocessing.label._encode"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_label._inverse_binarize_multiclass": {
  "data": {
   "shadows": "sklearn.preprocessing.label._inverse_binarize_multiclass"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_label._inverse_binarize_thresholding": {
  "data": {
   "shadows": "sklearn.preprocessing.label._inverse_binarize_thresholding"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_label.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_label.assert_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_label.assert_raise_message": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raise_message"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_label.assert_raises": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_label.assert_true": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_true"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_label.assert_warns_message": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_warns_message"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_label.check_binarized_results": {
  "data": {
   "lineno": 464,
   "symbols_in_volume": [
    "ValueError",
    "scipy.sparse.issparse",
    "sklearn.preprocessing.label.LabelBinarizer",
    "sklearn.preprocessing.label._inverse_binarize_multiclass",
    "sklearn.preprocessing.label._inverse_binarize_thresholding",
    "sklearn.preprocessing.label.label_binarize",
    "sklearn.preprocessing.tests.test_label.toarray",
    "sklearn.utils.multiclass.type_of_target",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_label.coo_matrix": {
  "data": {
   "shadows": "scipy.sparse.coo_matrix"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_label.csc_matrix": {
  "data": {
   "shadows": "scipy.sparse.csc_matrix"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_label.csr_matrix": {
  "data": {
   "shadows": "scipy.sparse.csr_matrix"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_label.datasets": {
  "data": {
   "shadows": "sklearn.datasets"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_label.dok_matrix": {
  "data": {
   "shadows": "scipy.sparse.dok_matrix"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_label.ignore_warnings": {
  "data": {
   "shadows": "sklearn.utils.testing.ignore_warnings"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_label.iris": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "sklearn.preprocessing.tests.test_label.issparse": {
  "data": {
   "shadows": "scipy.sparse.issparse"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_label.label_binarize": {
  "data": {
   "shadows": "sklearn.preprocessing.label.label_binarize"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_label.lil_matrix": {
  "data": {
   "shadows": "scipy.sparse.lil_matrix"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_label.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_label.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.preprocessing.tests.test_label.test_encode_util": {
  "data": {
   "lineno": 568,
   "symbols_in_volume": [
    "numpy.array",
    "object",
    "sklearn.preprocessing.label._encode",
    "sklearn.preprocessing.tests.test_label.pytest",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_label.test_invalid_input_label_binarize": {
  "data": {
   "lineno": 555,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.preprocessing.label.label_binarize",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_label.test_inverse_binarize_multiclass": {
  "data": {
   "lineno": 560,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "scipy.sparse.csr_matrix",
    "sklearn.preprocessing.label._inverse_binarize_multiclass",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_label.test_label_binarize_binary": {
  "data": {
   "lineno": 505,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.preprocessing.tests.test_label.check_binarized_results"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_label.test_label_binarize_multiclass": {
  "data": {
   "lineno": 524,
   "symbols_in_volume": [
    "ValueError",
    "numpy.eye",
    "sklearn.preprocessing.label.label_binarize",
    "sklearn.preprocessing.tests.test_label.check_binarized_results",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_label.test_label_binarize_multilabel": {
  "data": {
   "lineno": 537,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "scipy.sparse.coo_matrix",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.dok_matrix",
    "scipy.sparse.lil_matrix",
    "sklearn.preprocessing.label.label_binarize",
    "sklearn.preprocessing.tests.test_label.check_binarized_results",
    "sklearn.utils.testing.assert_raises",
    "sparse_matrix"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_label.test_label_binarize_with_class_order": {
  "data": {
   "lineno": 446,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.preprocessing.label.label_binarize",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_label.test_label_binarizer": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "numpy.array",
    "scipy.sparse.issparse",
    "sklearn.preprocessing.label.LabelBinarizer",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_label.test_label_binarizer_errors": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "scipy.sparse.csr_matrix",
    "sklearn.preprocessing.label.LabelBinarizer",
    "sklearn.preprocessing.label._inverse_binarize_thresholding",
    "sklearn.preprocessing.label.label_binarize",
    "sklearn.utils.testing.assert_raises",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_label.test_label_binarizer_set_label_encoding": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.preprocessing.label.LabelBinarizer",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_label.test_label_binarizer_unseen_labels": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.preprocessing.label.LabelBinarizer",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_label.test_label_encoder": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "object",
    "sklearn.preprocessing.label.LabelEncoder",
    "sklearn.preprocessing.tests.test_label.pytest",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_label.test_label_encoder_empty_array": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "numpy.array",
    "object",
    "sklearn.preprocessing.label.LabelEncoder",
    "sklearn.preprocessing.tests.test_label.pytest",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_label.test_label_encoder_errors": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.preprocessing.label.LabelEncoder",
    "sklearn.utils.testing.assert_raise_message",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_label.test_label_encoder_negative_ints": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.preprocessing.label.LabelEncoder",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_label.test_label_encoder_str_bad_shape": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "sklearn.preprocessing.label.LabelEncoder",
    "sklearn.preprocessing.tests.test_label.pytest",
    "sklearn.utils.testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_label.test_multilabel_binarizer": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": [
    "inp",
    "iter",
    "numpy.array",
    "set",
    "sklearn.preprocessing.label.MultiLabelBinarizer",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_label.test_multilabel_binarizer_empty_sample": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.preprocessing.label.MultiLabelBinarizer",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_label.test_multilabel_binarizer_given_classes": {
  "data": {
   "lineno": 351,
   "symbols_in_volume": [
    "inp",
    "iter",
    "numpy.array",
    "numpy.hstack",
    "sklearn.preprocessing.label.MultiLabelBinarizer",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_label.test_multilabel_binarizer_inverse_validation": {
  "data": {
   "lineno": 430,
   "symbols_in_volume": [
    "ValueError",
    "inp",
    "numpy.array",
    "sklearn.preprocessing.label.MultiLabelBinarizer",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_label.test_multilabel_binarizer_non_integer_labels": {
  "data": {
   "lineno": 395,
   "symbols_in_volume": [
    "TypeError",
    "inp",
    "numpy.array",
    "numpy.empty",
    "object",
    "sklearn.preprocessing.label.MultiLabelBinarizer",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_label.test_multilabel_binarizer_non_unique": {
  "data": {
   "lineno": 423,
   "symbols_in_volume": [
    "inp",
    "numpy.array",
    "sklearn.preprocessing.label.MultiLabelBinarizer",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_label.test_multilabel_binarizer_same_length_sequence": {
  "data": {
   "lineno": 378,
   "symbols_in_volume": [
    "inp",
    "numpy.array",
    "sklearn.preprocessing.label.MultiLabelBinarizer",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_label.test_multilabel_binarizer_unknown_class": {
  "data": {
   "lineno": 335,
   "symbols_in_volume": [
    "UserWarning",
    "numpy.array",
    "sklearn.preprocessing.label.MultiLabelBinarizer",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_warns_message"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_label.test_sparse_output_multilabel_binarizer": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "ValueError",
    "inp",
    "iter",
    "numpy.array",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.issparse",
    "set",
    "sklearn.preprocessing.label.MultiLabelBinarizer",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_label.toarray": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_label.type_of_target": {
  "data": {
   "shadows": "sklearn.utils.multiclass.type_of_target"
  },
  "type": "import"
 },
 "sklearn.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "sklearn.random_projection": {
  "data": {},
  "type": "module"
 },
 "sklearn.random_projection.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "sklearn.random_projection.BaseRandomProjection": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": [
    "abc.ABCMeta"
   ]
  },
  "type": "class"
 },
 "sklearn.random_projection.BaseRandomProjection.__init__": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "sklearn.random_projection.BaseRandomProjection._make_random_matrix": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "sklearn.random_projection.BaseRandomProjection.fit": {
  "data": {
   "lineno": 330,
   "symbols_in_volume": [
    "ValueError",
    "check_array",
    "numpy.testing.assert_equal",
    "sklearn.random_projection.johnson_lindenstrauss_min_dim",
    "sklearn.random_projection.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.random_projection.BaseRandomProjection.transform": {
  "data": {
   "lineno": 396,
   "symbols_in_volume": [
    "ValueError",
    "check_array",
    "check_is_fitted",
    "safe_sparse_dot"
   ]
  },
  "type": "function"
 },
 "sklearn.random_projection.GaussianRandomProjection": {
  "data": {
   "lineno": 424,
   "symbols_in_volume": [
    "sklearn.random_projection.BaseRandomProjection"
   ]
  },
  "type": "class"
 },
 "sklearn.random_projection.GaussianRandomProjection.__init__": {
  "data": {
   "lineno": 483,
   "symbols_in_volume": [
    "sklearn.random_projection.GaussianRandomProjection",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.random_projection.GaussianRandomProjection._make_random_matrix": {
  "data": {
   "lineno": 490,
   "symbols_in_volume": [
    "check_random_state",
    "sklearn.random_projection.gaussian_random_matrix"
   ]
  },
  "type": "function"
 },
 "sklearn.random_projection.SparseRandomProjection": {
  "data": {
   "lineno": 513,
   "symbols_in_volume": [
    "sklearn.random_projection.BaseRandomProjection"
   ]
  },
  "type": "class"
 },
 "sklearn.random_projection.SparseRandomProjection.__init__": {
  "data": {
   "lineno": 619,
   "symbols_in_volume": [
    "sklearn.random_projection.SparseRandomProjection",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.random_projection.SparseRandomProjection._make_random_matrix": {
  "data": {
   "lineno": 629,
   "symbols_in_volume": [
    "check_random_state",
    "sklearn.random_projection._check_density",
    "sklearn.random_projection.sparse_random_matrix"
   ]
  },
  "type": "function"
 },
 "sklearn.random_projection.__all__": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "sklearn.random_projection._check_density": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "ValueError",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "sklearn.random_projection._check_input_size": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "sklearn.random_projection.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "sklearn.random_projection.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.random_projection.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sklearn.random_projection.gaussian_random_matrix": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "check_random_state",
    "numpy.sqrt",
    "sklearn.random_projection._check_input_size"
   ]
  },
  "type": "function"
 },
 "sklearn.random_projection.johnson_lindenstrauss_min_dim": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "ValueError",
    "numpy.any",
    "numpy.asarray",
    "numpy.int",
    "numpy.log"
   ]
  },
  "type": "function"
 },
 "sklearn.random_projection.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.random_projection.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.random_projection.sparse_random_matrix": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "check_random_state",
    "numpy.concatenate",
    "numpy.size",
    "numpy.sqrt",
    "sample_without_replacement",
    "scipy.sparse.csr_matrix",
    "sklearn.random_projection._check_density",
    "sklearn.random_projection._check_input_size",
    "xrange"
   ]
  },
  "type": "function"
 },
 "sklearn.random_projection.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "sklearn.semi_supervised": {
  "data": {},
  "type": "module"
 },
 "sklearn.semi_supervised.__all__": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "sklearn.semi_supervised.label_propagation": {
  "data": {},
  "type": "module"
 },
 "sklearn.semi_supervised.label_propagation.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "sklearn.semi_supervised.label_propagation.BaseLabelPropagation": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "abc.ABCMeta"
   ]
  },
  "type": "class"
 },
 "sklearn.semi_supervised.label_propagation.BaseLabelPropagation.__init__": {
  "data": {
   "lineno": 111
  },
  "type": "function"
 },
 "sklearn.semi_supervised.label_propagation.BaseLabelPropagation._build_graph": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "NotImplementedError",
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "sklearn.semi_supervised.label_propagation.BaseLabelPropagation._get_kernel": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "NearestNeighbors",
    "ValueError",
    "callable",
    "rbf_kernel"
   ]
  },
  "type": "function"
 },
 "sklearn.semi_supervised.label_propagation.BaseLabelPropagation.fit": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "ValueError",
    "check_X_y",
    "check_classification_targets",
    "len",
    "numpy.abs",
    "numpy.argmax",
    "numpy.asarray",
    "numpy.copy",
    "numpy.multiply",
    "numpy.newaxis",
    "numpy.sum",
    "numpy.unique",
    "numpy.where",
    "numpy.zeros",
    "range",
    "safe_sparse_dot",
    "scipy.sparse.isspmatrix",
    "sklearn.semi_supervised.label_propagation.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.semi_supervised.label_propagation.BaseLabelPropagation.predict": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "numpy.argmax"
   ]
  },
  "type": "function"
 },
 "sklearn.semi_supervised.label_propagation.BaseLabelPropagation.predict_proba": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "check_array",
    "check_is_fitted",
    "numpy.array",
    "numpy.atleast_2d",
    "numpy.dot",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "sklearn.semi_supervised.label_propagation.LabelPropagation": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": [
    "sklearn.semi_supervised.label_propagation.BaseLabelPropagation"
   ]
  },
  "type": "class"
 },
 "sklearn.semi_supervised.label_propagation.LabelPropagation.__init__": {
  "data": {
   "lineno": 390,
   "symbols_in_volume": [
    "sklearn.semi_supervised.label_propagation.LabelPropagation",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.semi_supervised.label_propagation.LabelPropagation._build_graph": {
  "data": {
   "lineno": 396,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.diag",
    "numpy.newaxis",
    "scipy.sparse.isspmatrix"
   ]
  },
  "type": "function"
 },
 "sklearn.semi_supervised.label_propagation.LabelPropagation.fit": {
  "data": {
   "lineno": 412,
   "symbols_in_volume": [
    "DeprecationWarning",
    "sklearn.semi_supervised.label_propagation.LabelPropagation",
    "sklearn.semi_supervised.label_propagation.warnings",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.semi_supervised.label_propagation.LabelSpreading": {
  "data": {
   "lineno": 422,
   "symbols_in_volume": [
    "sklearn.semi_supervised.label_propagation.BaseLabelPropagation"
   ]
  },
  "type": "class"
 },
 "sklearn.semi_supervised.label_propagation.LabelSpreading.__init__": {
  "data": {
   "lineno": 510,
   "symbols_in_volume": [
    "sklearn.semi_supervised.label_propagation.LabelSpreading",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.semi_supervised.label_propagation.LabelSpreading._build_graph": {
  "data": {
   "lineno": 520,
   "symbols_in_volume": [
    "scipy.sparse.csgraph.laplacian",
    "scipy.sparse.isspmatrix"
   ]
  },
  "type": "function"
 },
 "sklearn.semi_supervised.label_propagation.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "sklearn.semi_supervised.label_propagation.csgraph": {
  "data": {
   "shadows": "scipy.sparse.csgraph"
  },
  "type": "import"
 },
 "sklearn.semi_supervised.label_propagation.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.semi_supervised.label_propagation.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.semi_supervised.label_propagation.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.semi_supervised.tests": {
  "data": {},
  "type": "module"
 },
 "sklearn.semi_supervised.tests.test_label_propagation": {
  "data": {
   "symbols_in_volume": [
    "sklearn.metrics.pairwise.rbf_kernel",
    "sklearn.semi_supervised.label_propagation.LabelPropagation",
    "sklearn.semi_supervised.label_propagation.LabelSpreading"
   ]
  },
  "type": "module"
 },
 "sklearn.semi_supervised.tests.test_label_propagation.ConvergenceWarning": {
  "data": {
   "shadows": "sklearn.exceptions.ConvergenceWarning"
  },
  "type": "import"
 },
 "sklearn.semi_supervised.tests.test_label_propagation.ESTIMATORS": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "sklearn.semi_supervised.tests.test_label_propagation.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.semi_supervised.tests.test_label_propagation.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.semi_supervised.tests.test_label_propagation.assert_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.semi_supervised.tests.test_label_propagation.assert_no_warnings": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_no_warnings"
  },
  "type": "import"
 },
 "sklearn.semi_supervised.tests.test_label_propagation.assert_raises": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.semi_supervised.tests.test_label_propagation.assert_warns": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_warns"
  },
  "type": "import"
 },
 "sklearn.semi_supervised.tests.test_label_propagation.label_propagation": {
  "data": {
   "shadows": "sklearn.semi_supervised.label_propagation"
  },
  "type": "import"
 },
 "sklearn.semi_supervised.tests.test_label_propagation.make_classification": {
  "data": {
   "shadows": "sklearn.datasets.make_classification"
  },
  "type": "import"
 },
 "sklearn.semi_supervised.tests.test_label_propagation.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.semi_supervised.tests.test_label_propagation.rbf_kernel": {
  "data": {
   "shadows": "sklearn.metrics.pairwise.rbf_kernel"
  },
  "type": "import"
 },
 "sklearn.semi_supervised.tests.test_label_propagation.test_alpha_deprecation": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "DeprecationWarning",
    "numpy.testing.assert_array_equal",
    "sklearn.datasets.make_classification",
    "sklearn.semi_supervised.label_propagation.LabelPropagation",
    "sklearn.utils.testing.assert_warns"
   ]
  },
  "type": "function"
 },
 "sklearn.semi_supervised.tests.test_label_propagation.test_convergence_speed": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.assert_array_equal",
    "sklearn.semi_supervised.label_propagation.LabelSpreading"
   ]
  },
  "type": "function"
 },
 "sklearn.semi_supervised.tests.test_label_propagation.test_convergence_warning": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.exceptions.ConvergenceWarning",
    "sklearn.semi_supervised.label_propagation.LabelPropagation",
    "sklearn.semi_supervised.label_propagation.LabelSpreading",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_no_warnings",
    "sklearn.utils.testing.assert_warns"
   ]
  },
  "type": "function"
 },
 "sklearn.semi_supervised.tests.test_label_propagation.test_distribution": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "estimator",
    "numpy.array",
    "numpy.asarray",
    "numpy.testing.assert_array_almost_equal",
    "sklearn.semi_supervised.tests.test_label_propagation.ESTIMATORS"
   ]
  },
  "type": "function"
 },
 "sklearn.semi_supervised.tests.test_label_propagation.test_fit_transduction": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "estimator",
    "sklearn.semi_supervised.tests.test_label_propagation.ESTIMATORS",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.semi_supervised.tests.test_label_propagation.test_label_propagation_closed_form": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "numpy.dot",
    "numpy.eye",
    "numpy.linalg.inv",
    "numpy.meshgrid",
    "numpy.newaxis",
    "numpy.testing.assert_array_almost_equal",
    "numpy.zeros",
    "sklearn.datasets.make_classification",
    "sklearn.semi_supervised.label_propagation.LabelPropagation",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sklearn.semi_supervised.tests.test_label_propagation.test_label_spreading_closed_form": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "numpy.dot",
    "numpy.eye",
    "numpy.linalg.inv",
    "numpy.newaxis",
    "numpy.testing.assert_array_almost_equal",
    "numpy.zeros",
    "sklearn.datasets.make_classification",
    "sklearn.semi_supervised.label_propagation.LabelSpreading"
   ]
  },
  "type": "function"
 },
 "sklearn.semi_supervised.tests.test_label_propagation.test_predict": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "estimator",
    "numpy.array",
    "numpy.testing.assert_array_equal",
    "sklearn.semi_supervised.tests.test_label_propagation.ESTIMATORS"
   ]
  },
  "type": "function"
 },
 "sklearn.semi_supervised.tests.test_label_propagation.test_predict_proba": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "estimator",
    "numpy.array",
    "numpy.testing.assert_array_almost_equal",
    "sklearn.semi_supervised.tests.test_label_propagation.ESTIMATORS"
   ]
  },
  "type": "function"
 },
 "sklearn.semi_supervised.tests.test_label_propagation.test_valid_alpha": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.datasets.make_classification",
    "sklearn.semi_supervised.label_propagation.LabelSpreading",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.setup": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.distutils.core.setup",
    "sklearn.setup.configuration"
   ]
  },
  "type": "module"
 },
 "sklearn.setup.BlasNotFoundError": {
  "data": {
   "shadows": "numpy.distutils.system_info.BlasNotFoundError"
  },
  "type": "import"
 },
 "sklearn.setup.Configuration": {
  "data": {
   "shadows": "numpy.distutils.misc_util.Configuration"
  },
  "type": "import"
 },
 "sklearn.setup.configuration": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "numpy.distutils.misc_util.Configuration",
    "numpy.distutils.system_info.BlasNotFoundError.__doc__",
    "numpy.distutils.system_info.get_info",
    "os.path.join",
    "sklearn._build_utils.maybe_cythonize_extensions",
    "sklearn.setup.numpy",
    "sklearn.setup.os",
    "sklearn.setup.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.setup.get_info": {
  "data": {
   "shadows": "numpy.distutils.system_info.get_info"
  },
  "type": "import"
 },
 "sklearn.setup.join": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "sklearn.setup.maybe_cythonize_extensions": {
  "data": {
   "shadows": "sklearn._build_utils.maybe_cythonize_extensions"
  },
  "type": "import"
 },
 "sklearn.setup.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.setup.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "sklearn.setup.setup": {
  "data": {
   "shadows": "numpy.distutils.core.setup"
  },
  "type": "import"
 },
 "sklearn.setup.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.setup_module": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "int",
    "numpy.random.seed",
    "numpy.random.uniform",
    "print",
    "sklearn.os",
    "sklearn.random"
   ]
  },
  "type": "function"
 },
 "sklearn.svm": {
  "data": {},
  "type": "module"
 },
 "sklearn.svm.__all__": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "sklearn.svm.base": {
  "data": {},
  "type": "module"
 },
 "sklearn.svm.base.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "sklearn.svm.base.BaseLibSVM": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "abc.ABCMeta"
   ]
  },
  "type": "class"
 },
 "sklearn.svm.base.BaseLibSVM.__init__": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "ValueError",
    "abc.abstractmethod",
    "sklearn.svm.base.LIBSVM_IMPL"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.base.BaseLibSVM._compute_kernel": {
  "data": {
   "lineno": 375,
   "symbols_in_volume": [
    "callable",
    "numpy.asarray",
    "numpy.float64",
    "scipy.sparse.issparse"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.base.BaseLibSVM._decision_function": {
  "data": {
   "lineno": 386,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.base.BaseLibSVM._dense_decision_function": {
  "data": {
   "lineno": 416,
   "symbols_in_volume": [
    "callable",
    "check_array",
    "numpy.float64",
    "sklearn.svm.base.LIBSVM_IMPL"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.base.BaseLibSVM._dense_fit": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "ValueError",
    "callable"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.base.BaseLibSVM._dense_predict": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": [
    "ValueError",
    "callable",
    "check_array",
    "sklearn.svm.base.LIBSVM_IMPL"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.base.BaseLibSVM._get_coef": {
  "data": {
   "lineno": 499,
   "symbols_in_volume": [
    "safe_sparse_dot"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.base.BaseLibSVM._pairwise": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.base.BaseLibSVM._sparse_decision_function": {
  "data": {
   "lineno": 432,
   "symbols_in_volume": [
    "hasattr",
    "numpy.asarray",
    "numpy.float64",
    "sklearn.svm.base.LIBSVM_IMPL"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.base.BaseLibSVM._sparse_fit": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "hasattr",
    "int",
    "len",
    "numpy.arange",
    "numpy.asarray",
    "numpy.float64",
    "numpy.tile",
    "scipy.sparse.csr_matrix"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.base.BaseLibSVM._sparse_predict": {
  "data": {
   "lineno": 352,
   "symbols_in_volume": [
    "callable",
    "sklearn.svm.base.LIBSVM_IMPL"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.base.BaseLibSVM._validate_for_predict": {
  "data": {
   "lineno": 454,
   "symbols_in_volume": [
    "ValueError",
    "callable",
    "check_array",
    "check_is_fitted",
    "numpy.float64",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.issparse",
    "scipy.sparse.isspmatrix",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.base.BaseLibSVM._validate_targets": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "column_or_1d",
    "numpy.empty",
    "numpy.float64"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.base.BaseLibSVM._warn_from_fit_status": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "sklearn.svm.base.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.base.BaseLibSVM.coef_": {
  "data": {
   "lineno": 481,
   "symbols_in_volume": [
    "AttributeError",
    "property",
    "scipy.sparse.issparse"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.base.BaseLibSVM.fit": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "FutureWarning",
    "TypeError",
    "ValueError",
    "callable",
    "check_X_y",
    "check_random_state",
    "fit",
    "len",
    "numpy.asarray",
    "numpy.float64",
    "numpy.iinfo",
    "numpy.isclose",
    "numpy.sqrt",
    "print",
    "scipy.sparse.isspmatrix",
    "sklearn.svm.base.LIBSVM_IMPL",
    "sklearn.svm.base.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.base.BaseLibSVM.predict": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": [
    "predict"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.base.BaseSVC": {
  "data": {
   "lineno": 503,
   "symbols_in_volume": [
    "abc.ABCMeta",
    "sklearn.svm.base.BaseLibSVM"
   ]
  },
  "type": "class"
 },
 "sklearn.svm.base.BaseSVC.__init__": {
  "data": {
   "lineno": 505,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "sklearn.svm.base.BaseSVC",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.base.BaseSVC._check_proba": {
  "data": {
   "lineno": 574,
   "symbols_in_volume": [
    "AttributeError"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.base.BaseSVC._dense_predict_proba": {
  "data": {
   "lineno": 654,
   "symbols_in_volume": [
    "callable",
    "sklearn.svm.base.LIBSVM_IMPL"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.base.BaseSVC._get_coef": {
  "data": {
   "lineno": 693,
   "symbols_in_volume": [
    "numpy.vstack",
    "safe_sparse_dot",
    "scipy.sparse.issparse",
    "scipy.sparse.vstack",
    "sklearn.svm.base._one_vs_one_coef"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.base.BaseSVC._predict_log_proba": {
  "data": {
   "lineno": 651,
   "symbols_in_volume": [
    "numpy.log"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.base.BaseSVC._predict_proba": {
  "data": {
   "lineno": 612,
   "symbols_in_volume": [
    "NotFittedError",
    "pred_proba"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.base.BaseSVC._sparse_predict_proba": {
  "data": {
   "lineno": 671,
   "symbols_in_volume": [
    "callable",
    "numpy.asarray",
    "numpy.float64",
    "sklearn.svm.base.LIBSVM_IMPL"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.base.BaseSVC._validate_targets": {
  "data": {
   "lineno": 517,
   "symbols_in_volume": [
    "ValueError",
    "check_classification_targets",
    "column_or_1d",
    "compute_class_weight",
    "len",
    "numpy.asarray",
    "numpy.float64",
    "numpy.unique"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.base.BaseSVC.decision_function": {
  "data": {
   "lineno": 531,
   "symbols_in_volume": [
    "_ovr_decision_function",
    "len"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.base.BaseSVC.predict": {
  "data": {
   "lineno": 551,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.intp",
    "sklearn.svm.base.BaseSVC",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.base.BaseSVC.predict_log_proba": {
  "data": {
   "lineno": 621,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.base.BaseSVC.predict_proba": {
  "data": {
   "lineno": 582,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.base.LIBSVM_IMPL": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "sklearn.svm.base._fit_liblinear": {
  "data": {
   "lineno": 769,
   "symbols_in_volume": [
    "LabelEncoder",
    "ValueError",
    "_check_large_sparse",
    "check_consistent_length",
    "check_random_state",
    "compute_class_weight",
    "len",
    "max",
    "numpy.array",
    "numpy.asarray",
    "numpy.empty",
    "numpy.float64",
    "numpy.iinfo",
    "numpy.ones",
    "numpy.require",
    "print",
    "scipy.sparse.issparse",
    "scipy.sparse.isspmatrix",
    "sklearn.svm.base._get_liblinear_solver_type",
    "sklearn.svm.base.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.base._get_liblinear_solver_type": {
  "data": {
   "lineno": 709,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.base._one_vs_one_coef": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "numpy.cumsum",
    "numpy.hstack",
    "range",
    "safe_sparse_dot"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.base.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "sklearn.svm.base.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.svm.base.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "sklearn.svm.base.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.svm.base.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.svm.bounds": {
  "data": {},
  "type": "module"
 },
 "sklearn.svm.bounds.l1_min_c": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "LabelBinarizer",
    "ValueError",
    "abs",
    "check_array",
    "check_consistent_length",
    "max",
    "numpy.abs",
    "numpy.array",
    "numpy.dot",
    "numpy.full",
    "numpy.max",
    "numpy.size",
    "safe_sparse_dot"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.bounds.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.svm.classes": {
  "data": {},
  "type": "module"
 },
 "sklearn.svm.classes.LinearSVC": {
  "data": {
   "lineno": 13
  },
  "type": "class"
 },
 "sklearn.svm.classes.LinearSVC.__init__": {
  "data": {
   "lineno": 173
  },
  "type": "function"
 },
 "sklearn.svm.classes.LinearSVC.fit": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "DeprecationWarning",
    "ValueError",
    "_fit_liblinear",
    "check_X_y",
    "check_classification_targets",
    "len",
    "numpy.array",
    "numpy.float64",
    "numpy.unique",
    "sklearn.svm.classes.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.classes.LinearSVR": {
  "data": {
   "lineno": 248
  },
  "type": "class"
 },
 "sklearn.svm.classes.LinearSVR.__init__": {
  "data": {
   "lineno": 361
  },
  "type": "function"
 },
 "sklearn.svm.classes.LinearSVR.fit": {
  "data": {
   "lineno": 376,
   "symbols_in_volume": [
    "DeprecationWarning",
    "ValueError",
    "_fit_liblinear",
    "check_X_y",
    "numpy.float64",
    "sklearn.svm.classes.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.classes.NuSVC": {
  "data": {
   "lineno": 600
  },
  "type": "class"
 },
 "sklearn.svm.classes.NuSVC.__init__": {
  "data": {
   "lineno": 747,
   "symbols_in_volume": [
    "sklearn.svm.classes.NuSVC",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.classes.NuSVR": {
  "data": {
   "lineno": 881
  },
  "type": "class"
 },
 "sklearn.svm.classes.NuSVR.__init__": {
  "data": {
   "lineno": 991,
   "symbols_in_volume": [
    "sklearn.svm.classes.NuSVR",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.classes.OneClassSVM": {
  "data": {
   "lineno": 1002
  },
  "type": "class"
 },
 "sklearn.svm.classes.OneClassSVM.__init__": {
  "data": {
   "lineno": 1099,
   "symbols_in_volume": [
    "sklearn.svm.classes.OneClassSVM",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.classes.OneClassSVM.decision_function": {
  "data": {
   "lineno": 1144
  },
  "type": "function"
 },
 "sklearn.svm.classes.OneClassSVM.fit": {
  "data": {
   "lineno": 1108,
   "symbols_in_volume": [
    "DeprecationWarning",
    "_num_samples",
    "numpy.ones",
    "sklearn.svm.classes.OneClassSVM",
    "sklearn.svm.classes.warnings",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.classes.OneClassSVM.predict": {
  "data": {
   "lineno": 1175,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.intp",
    "sklearn.svm.classes.OneClassSVM",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.classes.OneClassSVM.score_samples": {
  "data": {
   "lineno": 1161
  },
  "type": "function"
 },
 "sklearn.svm.classes.SVC": {
  "data": {
   "lineno": 429
  },
  "type": "class"
 },
 "sklearn.svm.classes.SVC.__init__": {
  "data": {
   "lineno": 585,
   "symbols_in_volume": [
    "sklearn.svm.classes.SVC",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.classes.SVR": {
  "data": {
   "lineno": 761
  },
  "type": "class"
 },
 "sklearn.svm.classes.SVR.__init__": {
  "data": {
   "lineno": 870,
   "symbols_in_volume": [
    "sklearn.svm.classes.SVR",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.classes.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.svm.classes.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.svm.setup": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.distutils.core.setup",
    "sklearn.svm.setup.configuration"
   ]
  },
  "type": "module"
 },
 "sklearn.svm.setup.Configuration": {
  "data": {
   "shadows": "numpy.distutils.misc_util.Configuration"
  },
  "type": "import"
 },
 "sklearn.svm.setup.configuration": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "numpy.distutils.misc_util.Configuration",
    "os.path.join",
    "sklearn._build_utils.get_blas_info",
    "sklearn.svm.setup.numpy",
    "sklearn.svm.setup.os"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.setup.get_blas_info": {
  "data": {
   "shadows": "sklearn._build_utils.get_blas_info"
  },
  "type": "import"
 },
 "sklearn.svm.setup.join": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "sklearn.svm.setup.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.svm.setup.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "sklearn.svm.setup.setup": {
  "data": {
   "shadows": "numpy.distutils.core.setup"
  },
  "type": "import"
 },
 "sklearn.svm.tests": {
  "data": {},
  "type": "module"
 },
 "sklearn.svm.tests.test_bounds": {
  "data": {
   "symbols_in_volume": [
    "scipy.sparse.csr_matrix",
    "sklearn.svm.tests.test_bounds.dense_X"
   ]
  },
  "type": "module"
 },
 "sklearn.svm.tests.test_bounds.LinearSVC": {
  "data": {
   "shadows": "sklearn.svm.LinearSVC"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_bounds.LogisticRegression": {
  "data": {
   "shadows": "sklearn.linear_model.logistic.LogisticRegression"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_bounds.Y1": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "sklearn.svm.tests.test_bounds.Y2": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "sklearn.svm.tests.test_bounds.assert_raise_message": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raise_message"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_bounds.assert_raises": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_bounds.assert_true": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_true"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_bounds.check_l1_min_c": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "numpy.asarray",
    "sklearn.linear_model.logistic.LogisticRegression",
    "sklearn.svm.LinearSVC",
    "sklearn.svm.bounds.l1_min_c",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_bounds.dense_X": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "sklearn.svm.tests.test_bounds.l1_min_c": {
  "data": {
   "shadows": "sklearn.svm.bounds.l1_min_c"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_bounds.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_bounds.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_bounds.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_bounds.sparse_X": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "sklearn.svm.tests.test_bounds.test_ill_posed_min_c": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.svm.bounds.l1_min_c",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_bounds.test_l1_min_c": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "sklearn.svm.tests.test_bounds.Y1",
    "sklearn.svm.tests.test_bounds.Y2",
    "sklearn.svm.tests.test_bounds.check_l1_min_c",
    "sklearn.svm.tests.test_bounds.dense_X",
    "sklearn.svm.tests.test_bounds.pytest",
    "sklearn.svm.tests.test_bounds.sparse_X"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_bounds.test_l1_min_c_l2_loss": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.svm.bounds.l1_min_c",
    "sklearn.svm.tests.test_bounds.Y1",
    "sklearn.svm.tests.test_bounds.dense_X",
    "sklearn.utils.testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_bounds.test_unsupported_loss": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.svm.bounds.l1_min_c",
    "sklearn.svm.tests.test_bounds.Y1",
    "sklearn.svm.tests.test_bounds.dense_X",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_sparse": {
  "data": {
   "symbols_in_volume": [
    "numpy.array",
    "numpy.random.RandomState",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.dok_matrix",
    "scipy.sparse.lil_matrix",
    "sklearn.datasets.load_iris",
    "sklearn.svm.tests.test_sparse.X",
    "sklearn.svm.tests.test_sparse.X2",
    "sklearn.svm.tests.test_sparse.iris",
    "sklearn.svm.tests.test_sparse.perm",
    "sklearn.svm.tests.test_sparse.rng"
   ]
  },
  "type": "module"
 },
 "sklearn.svm.tests.test_sparse.ConvergenceWarning": {
  "data": {
   "shadows": "sklearn.exceptions.ConvergenceWarning"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_sparse.T": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "sklearn.svm.tests.test_sparse.T2": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "sklearn.svm.tests.test_sparse.X": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "sklearn.svm.tests.test_sparse.X2": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "sklearn.svm.tests.test_sparse.X2_sp": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "sklearn.svm.tests.test_sparse.X_sp": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "sklearn.svm.tests.test_sparse.Y": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "sklearn.svm.tests.test_sparse.Y2": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "sklearn.svm.tests.test_sparse.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_sparse.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_sparse.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_sparse.assert_false": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_false"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_sparse.assert_raise_message": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raise_message"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_sparse.assert_raises": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_sparse.assert_true": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_true"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_sparse.assert_warns": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_warns"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_sparse.base": {
  "data": {
   "shadows": "sklearn.base"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_sparse.check_svm_model_equal": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "numpy.testing.assert_array_almost_equal",
    "scipy.sparse.issparse",
    "scipy.sparse.isspmatrix",
    "sklearn.svm.OneClassSVM",
    "sklearn.utils.testing.assert_raise_message",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_sparse.datasets": {
  "data": {
   "shadows": "sklearn.datasets"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_sparse.ignore_warnings": {
  "data": {
   "shadows": "sklearn.utils.testing.ignore_warnings"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_sparse.iris": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "sklearn.svm.tests.test_sparse.linear_model": {
  "data": {
   "shadows": "sklearn.linear_model"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_sparse.load_digits": {
  "data": {
   "shadows": "sklearn.datasets.load_digits"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_sparse.make_blobs": {
  "data": {
   "shadows": "sklearn.datasets.make_blobs"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_sparse.make_classification": {
  "data": {
   "shadows": "sklearn.datasets.make_classification"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_sparse.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_sparse.perm": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "sklearn.svm.tests.test_sparse.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_sparse.rng": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "sklearn.svm.tests.test_sparse.safe_sparse_dot": {
  "data": {
   "shadows": "sklearn.utils.extmath.safe_sparse_dot"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_sparse.skip_if_32bit": {
  "data": {
   "shadows": "sklearn.utils.testing.skip_if_32bit"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_sparse.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_sparse.svm": {
  "data": {
   "shadows": "sklearn.svm"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_sparse.test_consistent_proba": {
  "data": {
   "lineno": 345,
   "symbols_in_volume": [
    "numpy.testing.assert_array_almost_equal",
    "sklearn.exceptions.ConvergenceWarning",
    "sklearn.svm.SVC",
    "sklearn.svm.tests.test_sparse.X",
    "sklearn.svm.tests.test_sparse.Y",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_sparse.test_error": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "ValueError",
    "numpy.testing.assert_array_equal",
    "sklearn.svm.NuSVC",
    "sklearn.svm.SVC",
    "sklearn.svm.tests.test_sparse.T",
    "sklearn.svm.tests.test_sparse.X",
    "sklearn.svm.tests.test_sparse.X_sp",
    "sklearn.svm.tests.test_sparse.Y",
    "sklearn.svm.tests.test_sparse.Y2",
    "sklearn.svm.tests.test_sparse.true_result",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_sparse.test_linearsvc": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "numpy.testing.assert_array_almost_equal",
    "sklearn.svm.LinearSVC",
    "sklearn.svm.tests.test_sparse.X",
    "sklearn.svm.tests.test_sparse.X2",
    "sklearn.svm.tests.test_sparse.X2_sp",
    "sklearn.svm.tests.test_sparse.X_sp",
    "sklearn.svm.tests.test_sparse.Y",
    "sklearn.svm.tests.test_sparse.Y2",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_sparse.test_linearsvc_iris": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "numpy.argmax",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "sklearn.svm.LinearSVC",
    "sklearn.svm.tests.test_sparse.iris"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_sparse.test_sample_weights": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "numpy.testing.assert_array_equal",
    "sklearn.svm.SVC",
    "sklearn.svm.tests.test_sparse.X",
    "sklearn.svm.tests.test_sparse.X_sp",
    "sklearn.svm.tests.test_sparse.Y"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_sparse.test_sparse_decision_function": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.dot",
    "numpy.int",
    "numpy.testing.assert_array_almost_equal",
    "sklearn.svm.SVC",
    "sklearn.svm.tests.test_sparse.X",
    "sklearn.svm.tests.test_sparse.Y",
    "sklearn.svm.tests.test_sparse.iris",
    "sklearn.utils.extmath.safe_sparse_dot"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_sparse.test_sparse_liblinear_intercept_handling": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "sklearn.svm.LinearSVC",
    "sklearn.svm.tests.test_svm.test_dense_liblinear_intercept_handling"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_sparse.test_sparse_oneclasssvm": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "range",
    "scipy.sparse.csr_matrix",
    "sklearn.datasets",
    "sklearn.datasets.make_blobs",
    "sklearn.svm.OneClassSVM",
    "sklearn.svm.tests.test_sparse.T",
    "sklearn.svm.tests.test_sparse.T2",
    "sklearn.svm.tests.test_sparse.X2_sp",
    "sklearn.svm.tests.test_sparse.X_sp",
    "sklearn.svm.tests.test_sparse.check_svm_model_equal",
    "sklearn.svm.tests.test_sparse.iris",
    "sklearn.svm.tests.test_sparse.pytest",
    "sklearn.utils.testing.skip_if_32bit"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_sparse.test_sparse_realdata": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.assert_array_equal",
    "scipy.sparse.coo_matrix",
    "scipy.sparse.csr_matrix",
    "sklearn.svm.SVC",
    "sklearn.svm.tests.test_sparse.X"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_sparse.test_sparse_svc_clone_with_callable_kernel": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.testing.assert_array_equal",
    "sklearn.base.clone",
    "sklearn.svm.SVC",
    "sklearn.svm.tests.test_sparse.X",
    "sklearn.svm.tests.test_sparse.X_sp",
    "sklearn.svm.tests.test_sparse.Y"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_sparse.test_svc": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "scipy.sparse.csr_matrix",
    "sklearn.datasets",
    "sklearn.datasets.make_blobs",
    "sklearn.svm.SVC",
    "sklearn.svm.tests.test_sparse.T",
    "sklearn.svm.tests.test_sparse.T2",
    "sklearn.svm.tests.test_sparse.X2_sp",
    "sklearn.svm.tests.test_sparse.X_sp",
    "sklearn.svm.tests.test_sparse.Y",
    "sklearn.svm.tests.test_sparse.Y2",
    "sklearn.svm.tests.test_sparse.check_svm_model_equal",
    "sklearn.svm.tests.test_sparse.iris",
    "sklearn.utils.testing.skip_if_32bit"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_sparse.test_svc_iris": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "numpy.testing.assert_array_almost_equal",
    "sklearn.svm.SVC",
    "sklearn.svm.tests.test_sparse.iris"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_sparse.test_svc_with_custom_kernel": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "numpy.testing.assert_array_equal",
    "sklearn.svm.SVC",
    "sklearn.svm.tests.test_sparse.X_sp",
    "sklearn.svm.tests.test_sparse.Y"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_sparse.test_svc_with_custom_kernel.kfunc": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "sklearn.utils.extmath.safe_sparse_dot"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_sparse.test_svm": {
  "data": {
   "shadows": "sklearn.svm.tests.test_svm"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_sparse.test_timeout": {
  "data": {
   "lineno": 338,
   "symbols_in_volume": [
    "sklearn.exceptions.ConvergenceWarning",
    "sklearn.svm.SVC",
    "sklearn.svm.tests.test_sparse.X_sp",
    "sklearn.svm.tests.test_sparse.Y",
    "sklearn.utils.testing.assert_warns"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_sparse.test_unsorted_indices": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.testing.assert_array_almost_equal",
    "scipy.sparse.csr_matrix",
    "sklearn.datasets.load_digits",
    "sklearn.svm.SVC",
    "sklearn.svm.tests.test_sparse.X",
    "sklearn.utils.testing.assert_false"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_sparse.test_weight": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "numpy.sum",
    "scipy.sparse.csr_matrix",
    "sklearn.datasets.make_classification",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.svm.LinearSVC",
    "sklearn.svm.SVC",
    "sklearn.svm.tests.test_sparse.pytest",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_sparse.true_result": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "sklearn.svm.tests.test_sparse.true_result2": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "sklearn.svm.tests.test_svm": {
  "data": {
   "symbols_in_volume": [
    "sklearn.datasets.load_iris",
    "sklearn.svm.tests.test_svm.iris",
    "sklearn.svm.tests.test_svm.perm",
    "sklearn.svm.tests.test_svm.rng",
    "sklearn.utils.check_random_state"
   ]
  },
  "type": "module"
 },
 "sklearn.svm.tests.test_svm.ConvergenceWarning": {
  "data": {
   "shadows": "sklearn.exceptions.ConvergenceWarning"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_svm.LogisticRegression": {
  "data": {
   "shadows": "sklearn.linear_model.LogisticRegression"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_svm.NotFittedError": {
  "data": {
   "shadows": "sklearn.exceptions.NotFittedError"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_svm.OneVsRestClassifier": {
  "data": {
   "shadows": "sklearn.multiclass.OneVsRestClassifier"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_svm.T": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "sklearn.svm.tests.test_svm.UndefinedMetricWarning": {
  "data": {
   "shadows": "sklearn.exceptions.UndefinedMetricWarning"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_svm.X": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "sklearn.svm.tests.test_svm.Y": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "sklearn.svm.tests.test_svm.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_svm.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_svm.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_svm.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_svm.assert_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_svm.assert_false": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_false"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_svm.assert_greater": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_greater"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_svm.assert_in": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_in"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_svm.assert_less": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_less"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_svm.assert_no_warnings": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_no_warnings"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_svm.assert_raise_message": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raise_message"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_svm.assert_raises": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_svm.assert_raises_regexp": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises_regexp"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_svm.assert_true": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_true"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_svm.assert_warns": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_warns"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_svm.assert_warns_message": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_warns_message"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_svm.base": {
  "data": {
   "shadows": "sklearn.base"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_svm.check_random_state": {
  "data": {
   "shadows": "sklearn.utils.check_random_state"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_svm.compute_class_weight": {
  "data": {
   "shadows": "sklearn.utils.compute_class_weight"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_svm.datasets": {
  "data": {
   "shadows": "sklearn.datasets"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_svm.f1_score": {
  "data": {
   "shadows": "sklearn.metrics.f1_score"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_svm.ignore_warnings": {
  "data": {
   "shadows": "sklearn.utils.testing.ignore_warnings"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_svm.iris": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "sklearn.svm.tests.test_svm.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_svm.linear_model": {
  "data": {
   "shadows": "sklearn.linear_model"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_svm.make_blobs": {
  "data": {
   "shadows": "sklearn.datasets.make_blobs"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_svm.make_classification": {
  "data": {
   "shadows": "sklearn.datasets.make_classification"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_svm.metrics": {
  "data": {
   "shadows": "sklearn.metrics"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_svm.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_svm.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_svm.perm": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "sklearn.svm.tests.test_svm.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_svm.rbf_kernel": {
  "data": {
   "shadows": "sklearn.metrics.pairwise.rbf_kernel"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_svm.rng": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "sklearn.svm.tests.test_svm.six": {
  "data": {
   "shadows": "sklearn.externals.six"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_svm.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_svm.svm": {
  "data": {
   "shadows": "sklearn.svm"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_svm.test_auto_weight": {
  "data": {
   "lineno": 449,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.argmax",
    "numpy.delete",
    "numpy.unique",
    "numpy.where",
    "sklearn.exceptions.UndefinedMetricWarning",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.metrics.f1_score",
    "sklearn.svm.LinearSVC",
    "sklearn.svm.SVC",
    "sklearn.svm.tests.test_svm.X",
    "sklearn.svm.tests.test_svm.iris",
    "sklearn.svm.tests.test_svm.pytest",
    "sklearn.utils.compute_class_weight",
    "sklearn.utils.testing.assert_true",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_bad_input": {
  "data": {
   "lineno": 480,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.array",
    "numpy.ascontiguousarray",
    "numpy.asfortranarray",
    "numpy.dot",
    "numpy.testing.assert_array_equal",
    "numpy.tile",
    "range",
    "scipy.sparse.lil_matrix",
    "sklearn.svm.LinearSVC",
    "sklearn.svm.NuSVC",
    "sklearn.svm.SVC",
    "sklearn.svm.tests.test_svm.T",
    "sklearn.svm.tests.test_svm.X",
    "sklearn.svm.tests.test_svm.Y",
    "sklearn.svm.tests.test_svm.true_result",
    "sklearn.utils.testing.assert_false",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_consistent_proba": {
  "data": {
   "lineno": 873,
   "symbols_in_volume": [
    "numpy.testing.assert_array_almost_equal",
    "sklearn.svm.SVC",
    "sklearn.svm.tests.test_svm.X",
    "sklearn.svm.tests.test_svm.Y",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_crammer_singer_binary": {
  "data": {
   "lineno": 711,
   "symbols_in_volume": [
    "sklearn.datasets.make_classification",
    "sklearn.svm.LinearSVC",
    "sklearn.svm.tests.test_svm.X",
    "sklearn.utils.testing.assert_greater"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_decision_function": {
  "data": {
   "lineno": 327,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.dot",
    "numpy.int",
    "numpy.testing.assert_array_almost_equal",
    "sklearn.metrics.pairwise.rbf_kernel",
    "sklearn.svm.SVC",
    "sklearn.svm.tests.test_svm.X",
    "sklearn.svm.tests.test_svm.Y",
    "sklearn.svm.tests.test_svm.iris"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_decision_function_shape": {
  "data": {
   "lineno": 359,
   "symbols_in_volume": [
    "len",
    "numpy.argmax",
    "numpy.testing.assert_array_equal",
    "sklearn.datasets.make_blobs",
    "sklearn.model_selection.train_test_split",
    "sklearn.svm.SVC",
    "sklearn.svm.tests.test_svm.X",
    "sklearn.svm.tests.test_svm.iris",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_decision_function_shape_two_class": {
  "data": {
   "lineno": 948,
   "symbols_in_volume": [
    "estimator",
    "len",
    "sklearn.datasets.make_blobs",
    "sklearn.multiclass.OneVsRestClassifier",
    "sklearn.svm.NuSVC",
    "sklearn.svm.SVC",
    "sklearn.svm.tests.test_svm.X",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_dense_liblinear_intercept_handling": {
  "data": {
   "lineno": 735,
   "symbols_in_volume": [
    "classifier",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_array_almost_equal",
    "sklearn.svm.LinearSVC",
    "sklearn.svm.tests.test_svm.X",
    "sklearn.utils.testing.assert_less",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_gamma_auto": {
  "data": {
   "lineno": 999,
   "symbols_in_volume": [
    "FutureWarning",
    "sklearn.svm.SVC",
    "sklearn.svm.tests.test_svm.X",
    "sklearn.utils.testing.assert_no_warnings",
    "sklearn.utils.testing.assert_warns_message"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_gamma_scale": {
  "data": {
   "lineno": 1012,
   "symbols_in_volume": [
    "numpy.sqrt",
    "sklearn.svm.SVC",
    "sklearn.svm.tests.test_svm.X",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_no_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_hasattr_predict_proba": {
  "data": {
   "lineno": 926,
   "symbols_in_volume": [
    "hasattr",
    "sklearn.exceptions.NotFittedError",
    "sklearn.svm.SVC",
    "sklearn.svm.tests.test_svm.iris",
    "sklearn.utils.testing.assert_false",
    "sklearn.utils.testing.assert_raise_message",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_immutable_coef_property": {
  "data": {
   "lineno": 792,
   "symbols_in_volume": [
    "AttributeError",
    "RuntimeError",
    "ValueError",
    "numpy.arange",
    "sklearn.svm.NuSVC",
    "sklearn.svm.NuSVR",
    "sklearn.svm.OneClassSVM",
    "sklearn.svm.SVC",
    "sklearn.svm.SVR",
    "sklearn.svm.tests.test_svm.iris",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_liblinear_set_coef": {
  "data": {
   "lineno": 768,
   "symbols_in_volume": [
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_array_equal",
    "sklearn.svm.LinearSVC",
    "sklearn.svm.tests.test_svm.X",
    "sklearn.svm.tests.test_svm.iris"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_libsvm_iris": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "hasattr",
    "numpy.float64",
    "numpy.mean",
    "numpy.sort",
    "numpy.testing.assert_array_equal",
    "sklearn.svm.SVC",
    "sklearn.svm.libsvm.cross_validation",
    "sklearn.svm.libsvm.fit",
    "sklearn.svm.libsvm.predict",
    "sklearn.svm.tests.test_svm.iris",
    "sklearn.utils.testing.assert_greater",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_libsvm_parameters": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "numpy.testing.assert_array_equal",
    "sklearn.svm.SVC",
    "sklearn.svm.tests.test_svm.X",
    "sklearn.svm.tests.test_svm.Y"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_linear_svc_intercept_scaling": {
  "data": {
   "lineno": 907,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.svm.LinearSVC",
    "sklearn.svm.tests.test_svm.X",
    "sklearn.svm.tests.test_svm.Y",
    "sklearn.utils.testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_linear_svm_convergence_warnings": {
  "data": {
   "lineno": 882,
   "symbols_in_volume": [
    "sklearn.exceptions.ConvergenceWarning",
    "sklearn.svm.LinearSVC",
    "sklearn.svm.LinearSVR",
    "sklearn.svm.tests.test_svm.X",
    "sklearn.svm.tests.test_svm.Y",
    "sklearn.svm.tests.test_svm.iris",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_warns"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_linear_svx_uppercase_loss_penality_raises_error": {
  "data": {
   "lineno": 617,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.svm.LinearSVC",
    "sklearn.svm.tests.test_svm.X",
    "sklearn.utils.testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_linearsvc": {
  "data": {
   "lineno": 631,
   "symbols_in_volume": [
    "numpy.int",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_array_equal",
    "sklearn.svm.LinearSVC",
    "sklearn.svm.tests.test_svm.T",
    "sklearn.svm.tests.test_svm.X",
    "sklearn.svm.tests.test_svm.Y",
    "sklearn.svm.tests.test_svm.true_result",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_linearsvc_crammer_singer": {
  "data": {
   "lineno": 661,
   "symbols_in_volume": [
    "numpy.argmax",
    "numpy.dot",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_array_equal",
    "sklearn.svm.LinearSVC",
    "sklearn.svm.tests.test_svm.iris",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_linearsvc_fit_sampleweight": {
  "data": {
   "lineno": 681,
   "symbols_in_volume": [
    "len",
    "numpy.ones",
    "numpy.repeat",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal",
    "sklearn.svm.LinearSVC",
    "sklearn.svm.tests.test_svm.T",
    "sklearn.svm.tests.test_svm.X",
    "sklearn.svm.tests.test_svm.Y",
    "sklearn.utils.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_linearsvc_iris": {
  "data": {
   "lineno": 722,
   "symbols_in_volume": [
    "numpy.argmax",
    "numpy.mean",
    "numpy.testing.assert_array_equal",
    "set",
    "sklearn.svm.LinearSVC",
    "sklearn.svm.tests.test_svm.iris",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_greater"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_linearsvc_parameters": {
  "data": {
   "lineno": 556,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.datasets.make_classification",
    "sklearn.svm.LinearSVC",
    "sklearn.svm.tests.test_svm.X",
    "sklearn.svm.tests.test_svm.itertools",
    "sklearn.utils.testing.assert_raises_regexp"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_linearsvc_verbose": {
  "data": {
   "lineno": 807,
   "symbols_in_volume": [
    "sklearn.svm.LinearSVC",
    "sklearn.svm.tests.test_svm.X",
    "sklearn.svm.tests.test_svm.Y",
    "sklearn.svm.tests.test_svm.os"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_linearsvr": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "numpy.linalg.norm",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_almost_equal",
    "sklearn.datasets.load_diabetes",
    "sklearn.svm.LinearSVR",
    "sklearn.svm.SVR"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_linearsvr_fit_sampleweight": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "len",
    "numpy.linalg.norm",
    "numpy.ones",
    "numpy.repeat",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_almost_equal",
    "sklearn.datasets.load_diabetes",
    "sklearn.svm.LinearSVR",
    "sklearn.utils.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_linearsvx_loss_penalty_deprecations": {
  "data": {
   "lineno": 585,
   "symbols_in_volume": [
    "DeprecationWarning",
    "sklearn.svm.LinearSVC",
    "sklearn.svm.LinearSVR",
    "sklearn.svm.tests.test_svm.X",
    "sklearn.utils.testing.assert_warns_message"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_lsvc_intercept_scaling_zero": {
  "data": {
   "lineno": 918,
   "symbols_in_volume": [
    "sklearn.svm.LinearSVC",
    "sklearn.svm.tests.test_svm.X",
    "sklearn.svm.tests.test_svm.Y",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_oneclass": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "AttributeError",
    "numpy.dtype",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_array_equal",
    "sklearn.svm.OneClassSVM",
    "sklearn.svm.tests.test_svm.T",
    "sklearn.svm.tests.test_svm.X",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_oneclass_decision_function": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "numpy.mean",
    "numpy.r_",
    "numpy.testing.assert_array_equal",
    "sklearn.svm.OneClassSVM",
    "sklearn.svm.tests.test_svm.X",
    "sklearn.utils.check_random_state",
    "sklearn.utils.testing.assert_greater"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_oneclass_score_samples": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "numpy.testing.assert_array_equal",
    "sklearn.svm.OneClassSVM"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_ovr_decision_function": {
  "data": {
   "lineno": 957,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.argmax",
    "numpy.array",
    "numpy.min",
    "numpy.testing.assert_array_equal",
    "numpy.vstack",
    "range",
    "sklearn.svm.SVC",
    "sklearn.utils.testing.assert_greater",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_precomputed": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.array",
    "numpy.dot",
    "numpy.mean",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_array_equal",
    "numpy.zeros_like",
    "range",
    "sklearn.svm.SVC",
    "sklearn.svm.tests.test_svm.T",
    "sklearn.svm.tests.test_svm.X",
    "sklearn.svm.tests.test_svm.Y",
    "sklearn.svm.tests.test_svm.iris",
    "sklearn.svm.tests.test_svm.true_result",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_probability": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": [
    "numpy.argmax",
    "numpy.exp",
    "numpy.mean",
    "numpy.ones",
    "numpy.sum",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_array_almost_equal",
    "sklearn.svm.NuSVC",
    "sklearn.svm.SVC",
    "sklearn.svm.tests.test_svm.iris",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_sample_weights": {
  "data": {
   "lineno": 429,
   "symbols_in_volume": [
    "len",
    "numpy.repeat",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_array_equal",
    "sklearn.svm.SVC",
    "sklearn.svm.tests.test_svm.X",
    "sklearn.svm.tests.test_svm.Y"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_sparse_precomputed": {
  "data": {
   "lineno": 546,
   "symbols_in_volume": [
    "TypeError",
    "scipy.sparse.csr_matrix",
    "sklearn.svm.SVC",
    "sklearn.utils.testing.assert_in",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_svc_bad_kernel": {
  "data": {
   "lineno": 849,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.svm.SVC",
    "sklearn.svm.tests.test_svm.X",
    "sklearn.svm.tests.test_svm.Y",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_svc_clone_with_callable_kernel": {
  "data": {
   "lineno": 821,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_array_equal",
    "sklearn.base.clone",
    "sklearn.svm.SVC",
    "sklearn.svm.tests.test_svm.iris"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_svr": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "len",
    "numpy.ones",
    "sklearn.datasets.load_diabetes",
    "sklearn.svm.LinearSVR",
    "sklearn.svm.NuSVR",
    "sklearn.svm.SVR",
    "sklearn.utils.testing.assert_greater"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_svr_coef_sign": {
  "data": {
   "lineno": 894,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.random.RandomState",
    "numpy.testing.assert_array_almost_equal",
    "sklearn.svm.LinearSVR",
    "sklearn.svm.NuSVR",
    "sklearn.svm.SVR",
    "sklearn.svm.tests.test_svm.X"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_svr_errors": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "sklearn.svm.SVR",
    "sklearn.svm.tests.test_svm.X",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_svr_predict": {
  "data": {
   "lineno": 386,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.testing.assert_array_almost_equal",
    "sklearn.metrics.pairwise.rbf_kernel",
    "sklearn.svm.SVR",
    "sklearn.svm.tests.test_svm.X",
    "sklearn.svm.tests.test_svm.iris"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_timeout": {
  "data": {
   "lineno": 854,
   "symbols_in_volume": [
    "numpy.dot",
    "sklearn.exceptions.ConvergenceWarning",
    "sklearn.svm.SVC",
    "sklearn.svm.tests.test_svm.X",
    "sklearn.svm.tests.test_svm.Y",
    "sklearn.utils.testing.assert_warns"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_tweak_params": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.assert_array_equal",
    "sklearn.svm.SVC",
    "sklearn.svm.tests.test_svm.X",
    "sklearn.svm.tests.test_svm.Y"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_unfitted": {
  "data": {
   "lineno": 860,
   "symbols_in_volume": [
    "Exception",
    "sklearn.svm.NuSVR",
    "sklearn.svm.SVC",
    "sklearn.svm.tests.test_svm.X",
    "sklearn.utils.testing.assert_raises_regexp"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_unicode_kernel": {
  "data": {
   "lineno": 524,
   "symbols_in_volume": [
    "numpy.float64",
    "sklearn.externals.six.PY2",
    "sklearn.svm.SVC",
    "sklearn.svm.libsvm.cross_validation",
    "sklearn.svm.tests.test_svm.T",
    "sklearn.svm.tests.test_svm.X",
    "sklearn.svm.tests.test_svm.Y",
    "sklearn.svm.tests.test_svm.iris"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_weight": {
  "data": {
   "lineno": 408,
   "symbols_in_volume": [
    "numpy.testing.assert_array_almost_equal",
    "sklearn.datasets.make_classification",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.metrics.f1_score",
    "sklearn.svm.LinearSVC",
    "sklearn.svm.SVC",
    "sklearn.svm.tests.test_svm.X",
    "sklearn.svm.tests.test_svm.Y",
    "sklearn.svm.tests.test_svm.pytest",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.train_test_split": {
  "data": {
   "shadows": "sklearn.model_selection.train_test_split"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_svm.true_result": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "sklearn.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "sklearn.tests": {
  "data": {},
  "type": "module"
 },
 "sklearn.tests.test_base": {
  "data": {},
  "type": "module"
 },
 "sklearn.tests.test_base.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "sklearn.tests.test_base.Buggy": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator"
   ]
  },
  "type": "class"
 },
 "sklearn.tests.test_base.Buggy.__init__": {
  "data": {
   "lineno": 66
  },
  "type": "function"
 },
 "sklearn.tests.test_base.DecisionTreeClassifier": {
  "data": {
   "shadows": "sklearn.tree.DecisionTreeClassifier"
  },
  "type": "import"
 },
 "sklearn.tests.test_base.DecisionTreeRegressor": {
  "data": {
   "shadows": "sklearn.tree.DecisionTreeRegressor"
  },
  "type": "import"
 },
 "sklearn.tests.test_base.DontPickleAttributeMixin": {
  "data": {
   "lineno": 377,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "sklearn.tests.test_base.DontPickleAttributeMixin.__getstate__": {
  "data": {
   "lineno": 378
  },
  "type": "function"
 },
 "sklearn.tests.test_base.DontPickleAttributeMixin.__setstate__": {
  "data": {
   "lineno": 383
  },
  "type": "function"
 },
 "sklearn.tests.test_base.GridSearchCV": {
  "data": {
   "shadows": "sklearn.model_selection.GridSearchCV"
  },
  "type": "import"
 },
 "sklearn.tests.test_base.K": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator"
   ]
  },
  "type": "class"
 },
 "sklearn.tests.test_base.K.__init__": {
  "data": {
   "lineno": 43
  },
  "type": "function"
 },
 "sklearn.tests.test_base.MockDataFrame": {
  "data": {
   "shadows": "sklearn.utils.mocking.MockDataFrame"
  },
  "type": "import"
 },
 "sklearn.tests.test_base.ModifyInitParams": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator"
   ]
  },
  "type": "class"
 },
 "sklearn.tests.test_base.ModifyInitParams.__init__": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_base.MultiInheritanceEstimator": {
  "data": {
   "lineno": 388,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator",
    "sklearn.tests.test_base.DontPickleAttributeMixin"
   ]
  },
  "type": "class"
 },
 "sklearn.tests.test_base.MultiInheritanceEstimator.__init__": {
  "data": {
   "lineno": 389
  },
  "type": "function"
 },
 "sklearn.tests.test_base.MyEstimator": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator"
   ]
  },
  "type": "class"
 },
 "sklearn.tests.test_base.MyEstimator.__init__": {
  "data": {
   "lineno": 37
  },
  "type": "function"
 },
 "sklearn.tests.test_base.NoEstimator": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "sklearn.tests.test_base.NoEstimator.__init__": {
  "data": {
   "lineno": 71
  },
  "type": "function"
 },
 "sklearn.tests.test_base.NoEstimator.fit": {
  "data": {
   "lineno": 74
  },
  "type": "function"
 },
 "sklearn.tests.test_base.NoEstimator.predict": {
  "data": {
   "lineno": 77
  },
  "type": "function"
 },
 "sklearn.tests.test_base.Pipeline": {
  "data": {
   "shadows": "sklearn.pipeline.Pipeline"
  },
  "type": "import"
 },
 "sklearn.tests.test_base.SVC": {
  "data": {
   "shadows": "sklearn.svm.SVC"
  },
  "type": "import"
 },
 "sklearn.tests.test_base.SelectFpr": {
  "data": {
   "shadows": "sklearn.feature_selection.SelectFpr"
  },
  "type": "import"
 },
 "sklearn.tests.test_base.SingleInheritanceEstimator": {
  "data": {
   "lineno": 425,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator"
   ]
  },
  "type": "class"
 },
 "sklearn.tests.test_base.SingleInheritanceEstimator.__getstate__": {
  "data": {
   "lineno": 430
  },
  "type": "function"
 },
 "sklearn.tests.test_base.SingleInheritanceEstimator.__init__": {
  "data": {
   "lineno": 426
  },
  "type": "function"
 },
 "sklearn.tests.test_base.T": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator"
   ]
  },
  "type": "class"
 },
 "sklearn.tests.test_base.T.__init__": {
  "data": {
   "lineno": 49
  },
  "type": "function"
 },
 "sklearn.tests.test_base.TransformerMixin": {
  "data": {
   "shadows": "sklearn.base.TransformerMixin"
  },
  "type": "import"
 },
 "sklearn.tests.test_base.TreeBadVersion": {
  "data": {
   "lineno": 322,
   "symbols_in_volume": [
    "sklearn.tree.DecisionTreeClassifier"
   ]
  },
  "type": "class"
 },
 "sklearn.tests.test_base.TreeBadVersion.__getstate__": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_base.TreeNoVersion": {
  "data": {
   "lineno": 345,
   "symbols_in_volume": [
    "sklearn.tree.DecisionTreeClassifier"
   ]
  },
  "type": "class"
 },
 "sklearn.tests.test_base.TreeNoVersion.__getstate__": {
  "data": {
   "lineno": 346
  },
  "type": "function"
 },
 "sklearn.tests.test_base.VargEstimator": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator"
   ]
  },
  "type": "class"
 },
 "sklearn.tests.test_base.VargEstimator.__init__": {
  "data": {
   "lineno": 83
  },
  "type": "function"
 },
 "sklearn.tests.test_base.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.tests.test_base.assert_dict_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_dict_equal"
  },
  "type": "import"
 },
 "sklearn.tests.test_base.assert_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.tests.test_base.assert_false": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_false"
  },
  "type": "import"
 },
 "sklearn.tests.test_base.assert_no_warnings": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_no_warnings"
  },
  "type": "import"
 },
 "sklearn.tests.test_base.assert_not_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_not_equal"
  },
  "type": "import"
 },
 "sklearn.tests.test_base.assert_raises": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.tests.test_base.assert_true": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_true"
  },
  "type": "import"
 },
 "sklearn.tests.test_base.assert_warns_message": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_warns_message"
  },
  "type": "import"
 },
 "sklearn.tests.test_base.clone": {
  "data": {
   "shadows": "sklearn.base.clone"
  },
  "type": "import"
 },
 "sklearn.tests.test_base.datasets": {
  "data": {
   "shadows": "sklearn.datasets"
  },
  "type": "import"
 },
 "sklearn.tests.test_base.f_classif": {
  "data": {
   "shadows": "sklearn.feature_selection.f_classif"
  },
  "type": "import"
 },
 "sklearn.tests.test_base.ignore_warnings": {
  "data": {
   "shadows": "sklearn.utils.testing.ignore_warnings"
  },
  "type": "import"
 },
 "sklearn.tests.test_base.is_classifier": {
  "data": {
   "shadows": "sklearn.base.is_classifier"
  },
  "type": "import"
 },
 "sklearn.tests.test_base.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.tests.test_base.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "sklearn.tests.test_base.pickle_error_message": {
  "data": {
   "lineno": 327
  },
  "type": "constant"
 },
 "sklearn.tests.test_base.sklearn": {
  "data": {
   "shadows": "sklearn"
  },
  "type": "import"
 },
 "sklearn.tests.test_base.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.tests.test_base.test_clone": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "numpy.zeros",
    "sklearn.base.clone",
    "sklearn.feature_selection.SelectFpr",
    "sklearn.feature_selection.f_classif",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_base.test_clone_2": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "hasattr",
    "sklearn.base.clone",
    "sklearn.feature_selection.SelectFpr",
    "sklearn.feature_selection.f_classif",
    "sklearn.utils.testing.assert_false"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_base.test_clone_buggy": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "RuntimeError",
    "TypeError",
    "sklearn.base.clone",
    "sklearn.tests.test_base.Buggy",
    "sklearn.tests.test_base.ModifyInitParams",
    "sklearn.tests.test_base.NoEstimator",
    "sklearn.tests.test_base.VargEstimator",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_base.test_clone_empty_array": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "numpy.array",
    "scipy.sparse.csr_matrix",
    "sklearn.base.clone",
    "sklearn.tests.test_base.MyEstimator",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_base.test_clone_nan": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "numpy.nan",
    "sklearn.base.clone",
    "sklearn.tests.test_base.MyEstimator",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_base.test_clone_pandas_dataframe": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "DummyEstimator",
    "numpy.arange",
    "sklearn.base.clone",
    "sklearn.utils.mocking.MockDataFrame",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_base.test_clone_pandas_dataframe.DummyEstimator": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator",
    "sklearn.base.TransformerMixin"
   ]
  },
  "type": "class"
 },
 "sklearn.tests.test_base.test_clone_pandas_dataframe.DummyEstimator.__init__": {
  "data": {
   "lineno": 288
  },
  "type": "function"
 },
 "sklearn.tests.test_base.test_clone_pandas_dataframe.DummyEstimator.fit": {
  "data": {
   "lineno": 292
  },
  "type": "function"
 },
 "sklearn.tests.test_base.test_clone_pandas_dataframe.DummyEstimator.transform": {
  "data": {
   "lineno": 295
  },
  "type": "function"
 },
 "sklearn.tests.test_base.test_clone_sparse_matrices": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "cls",
    "dir",
    "getattr",
    "numpy.eye",
    "scipy.sparse",
    "sklearn.base.clone",
    "sklearn.tests.test_base.MyEstimator",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_base.test_get_params": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.tests.test_base.K",
    "sklearn.tests.test_base.T",
    "sklearn.utils.testing.assert_raises",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_base.test_is_classifier": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "sklearn.base.is_classifier",
    "sklearn.model_selection.GridSearchCV",
    "sklearn.pipeline.Pipeline",
    "sklearn.svm.SVC",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_base.test_pickle_version_no_warning_is_issued_with_non_sklearn_estimator": {
  "data": {
   "lineno": 365,
   "symbols_in_volume": [
    "sklearn.datasets.load_iris",
    "sklearn.tests.test_base.TreeNoVersion",
    "sklearn.tests.test_base.pickle",
    "sklearn.utils.testing.assert_no_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_base.test_pickle_version_warning_is_issued_upon_different_version": {
  "data": {
   "lineno": 335,
   "symbols_in_volume": [
    "UserWarning",
    "sklearn.datasets.load_iris",
    "sklearn.tests.test_base.TreeBadVersion",
    "sklearn.tests.test_base.pickle",
    "sklearn.tests.test_base.pickle_error_message",
    "sklearn.tests.test_base.sklearn",
    "sklearn.utils.testing.assert_warns_message"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_base.test_pickle_version_warning_is_issued_when_no_version_info_in_pickle": {
  "data": {
   "lineno": 350,
   "symbols_in_volume": [
    "UserWarning",
    "sklearn.datasets.load_iris",
    "sklearn.tests.test_base.TreeNoVersion",
    "sklearn.tests.test_base.pickle",
    "sklearn.tests.test_base.pickle_error_message",
    "sklearn.tests.test_base.sklearn",
    "sklearn.utils.testing.assert_false",
    "sklearn.utils.testing.assert_warns_message"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_base.test_pickle_version_warning_is_not_raised_with_matching_version": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": [
    "sklearn.datasets.load_iris",
    "sklearn.tests.test_base.pickle",
    "sklearn.tree.DecisionTreeClassifier",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_no_warnings",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_base.test_pickling_when_getstate_is_overwritten_by_mixin": {
  "data": {
   "lineno": 394,
   "symbols_in_volume": [
    "sklearn.tests.test_base.MultiInheritanceEstimator",
    "sklearn.tests.test_base.pickle",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_base.test_pickling_when_getstate_is_overwritten_by_mixin_outside_of_sklearn": {
  "data": {
   "lineno": 405,
   "symbols_in_volume": [
    "sklearn.tests.test_base.MultiInheritanceEstimator",
    "sklearn.utils.testing.assert_dict_equal",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_true",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_base.test_pickling_works_when_getstate_is_overwritten_in_the_child_class": {
  "data": {
   "lineno": 436,
   "symbols_in_volume": [
    "UserWarning",
    "sklearn.tests.test_base.SingleInheritanceEstimator",
    "sklearn.tests.test_base.pickle",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_base.test_repr": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "len",
    "repr",
    "sklearn.tests.test_base.K",
    "sklearn.tests.test_base.MyEstimator",
    "sklearn.tests.test_base.T",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_base.test_score_sample_weight": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "len",
    "numpy.random.RandomState",
    "sklearn.datasets.load_boston",
    "sklearn.datasets.load_iris",
    "sklearn.tree.DecisionTreeClassifier",
    "sklearn.tree.DecisionTreeRegressor",
    "sklearn.utils.testing.assert_not_equal",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_base.test_set_params": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.pipeline.Pipeline",
    "sklearn.svm.SVC",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_base.test_set_params_passes_all_parameters": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "TestDecisionTree",
    "sklearn.model_selection.GridSearchCV",
    "sklearn.pipeline.Pipeline"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_base.test_set_params_passes_all_parameters.TestDecisionTree": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "sklearn.tree.DecisionTreeClassifier"
   ]
  },
  "type": "class"
 },
 "sklearn.tests.test_base.test_set_params_passes_all_parameters.TestDecisionTree.set_params": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_base.test_set_params_updates_valid_params": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "sklearn.model_selection.GridSearchCV",
    "sklearn.svm.SVC",
    "sklearn.tree.DecisionTreeClassifier"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_base.test_str": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "sklearn.tests.test_base.MyEstimator",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_calibration": {
  "data": {},
  "type": "module"
 },
 "sklearn.tests.test_calibration.CalibratedClassifierCV": {
  "data": {
   "shadows": "sklearn.calibration.CalibratedClassifierCV"
  },
  "type": "import"
 },
 "sklearn.tests.test_calibration.LeaveOneOut": {
  "data": {
   "shadows": "sklearn.model_selection.LeaveOneOut"
  },
  "type": "import"
 },
 "sklearn.tests.test_calibration.LinearSVC": {
  "data": {
   "shadows": "sklearn.svm.LinearSVC"
  },
  "type": "import"
 },
 "sklearn.tests.test_calibration.MultinomialNB": {
  "data": {
   "shadows": "sklearn.naive_bayes.MultinomialNB"
  },
  "type": "import"
 },
 "sklearn.tests.test_calibration.Pipeline": {
  "data": {
   "shadows": "sklearn.pipeline.Pipeline"
  },
  "type": "import"
 },
 "sklearn.tests.test_calibration.RandomForestClassifier": {
  "data": {
   "shadows": "sklearn.ensemble.RandomForestClassifier"
  },
  "type": "import"
 },
 "sklearn.tests.test_calibration.RandomForestRegressor": {
  "data": {
   "shadows": "sklearn.ensemble.RandomForestRegressor"
  },
  "type": "import"
 },
 "sklearn.tests.test_calibration.SimpleImputer": {
  "data": {
   "shadows": "sklearn.impute.SimpleImputer"
  },
  "type": "import"
 },
 "sklearn.tests.test_calibration._SigmoidCalibration": {
  "data": {
   "shadows": "sklearn.calibration._SigmoidCalibration"
  },
  "type": "import"
 },
 "sklearn.tests.test_calibration._sigmoid_calibration": {
  "data": {
   "shadows": "sklearn.calibration._sigmoid_calibration"
  },
  "type": "import"
 },
 "sklearn.tests.test_calibration.assert_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "sklearn.tests.test_calibration.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.tests.test_calibration.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.tests.test_calibration.assert_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.tests.test_calibration.assert_greater": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_greater"
  },
  "type": "import"
 },
 "sklearn.tests.test_calibration.assert_greater_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_greater_equal"
  },
  "type": "import"
 },
 "sklearn.tests.test_calibration.assert_raises": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.tests.test_calibration.brier_score_loss": {
  "data": {
   "shadows": "sklearn.metrics.brier_score_loss"
  },
  "type": "import"
 },
 "sklearn.tests.test_calibration.calibration_curve": {
  "data": {
   "shadows": "sklearn.calibration.calibration_curve"
  },
  "type": "import"
 },
 "sklearn.tests.test_calibration.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sklearn.tests.test_calibration.ignore_warnings": {
  "data": {
   "shadows": "sklearn.utils.testing.ignore_warnings"
  },
  "type": "import"
 },
 "sklearn.tests.test_calibration.log_loss": {
  "data": {
   "shadows": "sklearn.metrics.log_loss"
  },
  "type": "import"
 },
 "sklearn.tests.test_calibration.make_blobs": {
  "data": {
   "shadows": "sklearn.datasets.make_blobs"
  },
  "type": "import"
 },
 "sklearn.tests.test_calibration.make_classification": {
  "data": {
   "shadows": "sklearn.datasets.make_classification"
  },
  "type": "import"
 },
 "sklearn.tests.test_calibration.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.tests.test_calibration.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.tests.test_calibration.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.tests.test_calibration.test_calibration": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "numpy.random.RandomState",
    "scipy.sparse.csr_matrix",
    "sklearn.calibration.CalibratedClassifierCV",
    "sklearn.datasets.make_classification",
    "sklearn.ensemble.RandomForestRegressor",
    "sklearn.metrics.brier_score_loss",
    "sklearn.naive_bayes.MultinomialNB",
    "sklearn.tests.test_calibration.pytest",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_greater",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_calibration.test_calibration_curve": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.array",
    "sklearn.calibration.calibration_curve",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_calibration.test_calibration_less_classes": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "numpy.all",
    "numpy.arange",
    "numpy.hstack",
    "numpy.random.randn",
    "numpy.zeros",
    "sklearn.calibration.CalibratedClassifierCV",
    "sklearn.model_selection.LeaveOneOut",
    "sklearn.svm.LinearSVC",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_calibration.test_calibration_multiclass": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "numpy.ones",
    "numpy.sum",
    "sklearn.calibration.CalibratedClassifierCV",
    "sklearn.datasets.make_blobs",
    "sklearn.ensemble.RandomForestClassifier",
    "sklearn.metrics.log_loss",
    "sklearn.svm.LinearSVC",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_greater",
    "sklearn.utils.testing.assert_greater_equal",
    "softmax"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_calibration.test_calibration_multiclass.softmax": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "numpy.exp"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_calibration.test_calibration_nan_imputer": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "numpy.nan",
    "sklearn.calibration.CalibratedClassifierCV",
    "sklearn.datasets.make_classification",
    "sklearn.ensemble.RandomForestClassifier",
    "sklearn.impute.SimpleImputer",
    "sklearn.pipeline.Pipeline"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_calibration.test_calibration_prefit": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "numpy.argmax",
    "numpy.array",
    "numpy.random.RandomState",
    "scipy.sparse.csr_matrix",
    "sklearn.calibration.CalibratedClassifierCV",
    "sklearn.datasets.make_classification",
    "sklearn.metrics.brier_score_loss",
    "sklearn.naive_bayes.MultinomialNB",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_greater"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_calibration.test_calibration_prob_sum": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": [
    "numpy.ones",
    "sklearn.calibration.CalibratedClassifierCV",
    "sklearn.datasets.make_classification",
    "sklearn.model_selection.LeaveOneOut",
    "sklearn.svm.LinearSVC",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_calibration.test_sample_weight": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "len",
    "numpy.linalg.norm",
    "numpy.random.RandomState",
    "sklearn.calibration.CalibratedClassifierCV",
    "sklearn.datasets.make_classification",
    "sklearn.svm.LinearSVC",
    "sklearn.tests.test_calibration.pytest",
    "sklearn.utils.testing.assert_greater"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_calibration.test_sigmoid_calibration": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "numpy.exp",
    "numpy.vstack",
    "sklearn.calibration._SigmoidCalibration",
    "sklearn.calibration._sigmoid_calibration",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_check_build": {
  "data": {},
  "type": "module"
 },
 "sklearn.tests.test_check_build.assert_raises": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.tests.test_check_build.raise_build_error": {
  "data": {
   "shadows": "sklearn.__check_build.raise_build_error"
  },
  "type": "import"
 },
 "sklearn.tests.test_check_build.test_raise_build_error": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "ImportError",
    "sklearn.__check_build.raise_build_error",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_common": {
  "data": {},
  "type": "module"
 },
 "sklearn.tests.test_common.BiclusterMixin": {
  "data": {
   "shadows": "sklearn.cluster.bicluster.BiclusterMixin"
  },
  "type": "import"
 },
 "sklearn.tests.test_common.ConvergenceWarning": {
  "data": {
   "shadows": "sklearn.exceptions.ConvergenceWarning"
  },
  "type": "import"
 },
 "sklearn.tests.test_common.IS_PYPY": {
  "data": {
   "shadows": "sklearn.utils.IS_PYPY"
  },
  "type": "import"
 },
 "sklearn.tests.test_common.LinearClassifierMixin": {
  "data": {
   "shadows": "sklearn.linear_model.base.LinearClassifierMixin"
  },
  "type": "import"
 },
 "sklearn.tests.test_common._generate_checks_per_estimator": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "DeprecationWarning",
    "Estimator",
    "FutureWarning",
    "check_generator",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_common._rename_partial": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "isinstance",
    "sklearn.tests.test_common.functools"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_common._tested_linear_classifiers": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "clazz",
    "issubclass",
    "sklearn.linear_model.base.LinearClassifierMixin",
    "sklearn.tests.test_common.warnings",
    "sklearn.utils.testing.all_estimators",
    "sklearn.utils.testing.clean_warning_registry"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_common._tested_non_meta_estimators": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "issubclass",
    "sklearn.cluster.bicluster.BiclusterMixin",
    "sklearn.utils.testing.all_estimators"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_common._yield_all_checks": {
  "data": {
   "shadows": "sklearn.utils.estimator_checks._yield_all_checks"
  },
  "type": "import"
 },
 "sklearn.tests.test_common.all_estimators": {
  "data": {
   "shadows": "sklearn.utils.testing.all_estimators"
  },
  "type": "import"
 },
 "sklearn.tests.test_common.assert_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.tests.test_common.assert_false": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_false"
  },
  "type": "import"
 },
 "sklearn.tests.test_common.assert_greater": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_greater"
  },
  "type": "import"
 },
 "sklearn.tests.test_common.assert_in": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_in"
  },
  "type": "import"
 },
 "sklearn.tests.test_common.check_class_weight_balanced_linear_classifier": {
  "data": {
   "shadows": "sklearn.utils.estimator_checks.check_class_weight_balanced_linear_classifier"
  },
  "type": "import"
 },
 "sklearn.tests.test_common.check_no_attributes_set_in_init": {
  "data": {
   "shadows": "sklearn.utils.estimator_checks.check_no_attributes_set_in_init"
  },
  "type": "import"
 },
 "sklearn.tests.test_common.check_parameters_default_constructible": {
  "data": {
   "shadows": "sklearn.utils.estimator_checks.check_parameters_default_constructible"
  },
  "type": "import"
 },
 "sklearn.tests.test_common.clean_warning_registry": {
  "data": {
   "shadows": "sklearn.utils.testing.clean_warning_registry"
  },
  "type": "import"
 },
 "sklearn.tests.test_common.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "sklearn.tests.test_common.ignore_warnings": {
  "data": {
   "shadows": "sklearn.utils.testing.ignore_warnings"
  },
  "type": "import"
 },
 "sklearn.tests.test_common.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "sklearn.tests.test_common.pkgutil": {
  "data": {
   "shadows": "pkgutil"
  },
  "type": "import"
 },
 "sklearn.tests.test_common.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "sklearn.tests.test_common.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.tests.test_common.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "sklearn.tests.test_common.set_checking_parameters": {
  "data": {
   "shadows": "sklearn.utils.estimator_checks.set_checking_parameters"
  },
  "type": "import"
 },
 "sklearn.tests.test_common.sklearn": {
  "data": {
   "shadows": "sklearn"
  },
  "type": "import"
 },
 "sklearn.tests.test_common.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "sklearn.tests.test_common.test_all_estimator_no_base_class": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "sklearn.utils.testing.all_estimators",
    "sklearn.utils.testing.assert_false"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_common.test_all_estimators": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "len",
    "sklearn.utils.testing.all_estimators",
    "sklearn.utils.testing.assert_greater"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_common.test_all_tests_are_importable": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "dict",
    "sklearn.tests.test_common.pkgutil",
    "sklearn.tests.test_common.re",
    "sklearn.tests.test_common.sklearn",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_common.test_class_weight_balanced_linear_classifiers": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "sklearn.tests.test_common._tested_linear_classifiers",
    "sklearn.tests.test_common.pytest",
    "sklearn.utils.estimator_checks.check_class_weight_balanced_linear_classifier"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_common.test_configure": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "DeprecationWarning",
    "UserWarning",
    "dict",
    "exec",
    "open",
    "sklearn.tests.test_common.os",
    "sklearn.tests.test_common.sklearn",
    "sklearn.tests.test_common.sys",
    "sklearn.tests.test_common.warnings",
    "sklearn.utils.testing.clean_warning_registry",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_common.test_import_all_consistency": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "AttributeError",
    "__import__",
    "getattr",
    "sklearn.tests.test_common.pkgutil",
    "sklearn.tests.test_common.sklearn",
    "sklearn.utils.IS_PYPY",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_common.test_no_attributes_set_in_init": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "DeprecationWarning",
    "Estimator",
    "FutureWarning",
    "UserWarning",
    "sklearn.exceptions.ConvergenceWarning",
    "sklearn.tests.test_common._tested_non_meta_estimators",
    "sklearn.tests.test_common.pytest",
    "sklearn.utils.estimator_checks.check_no_attributes_set_in_init",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_common.test_non_meta_estimators": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "DeprecationWarning",
    "Estimator",
    "FutureWarning",
    "UserWarning",
    "check",
    "sklearn.exceptions.ConvergenceWarning",
    "sklearn.tests.test_common._generate_checks_per_estimator",
    "sklearn.tests.test_common._rename_partial",
    "sklearn.tests.test_common._tested_non_meta_estimators",
    "sklearn.tests.test_common.pytest",
    "sklearn.utils.estimator_checks._yield_all_checks",
    "sklearn.utils.estimator_checks.set_checking_parameters",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_common.test_parameters_default_constructible": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "sklearn.tests.test_common.pytest",
    "sklearn.utils.estimator_checks.check_parameters_default_constructible",
    "sklearn.utils.testing.all_estimators"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_common.test_root_import_all_completeness": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "sklearn.tests.test_common.pkgutil",
    "sklearn.tests.test_common.sklearn",
    "sklearn.utils.testing.assert_in"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_common.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.tests.test_config": {
  "data": {},
  "type": "module"
 },
 "sklearn.tests.test_config.assert_raises": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.tests.test_config.config_context": {
  "data": {
   "shadows": "sklearn.config_context"
  },
  "type": "import"
 },
 "sklearn.tests.test_config.get_config": {
  "data": {
   "shadows": "sklearn.get_config"
  },
  "type": "import"
 },
 "sklearn.tests.test_config.set_config": {
  "data": {
   "shadows": "sklearn.set_config"
  },
  "type": "import"
 },
 "sklearn.tests.test_config.test_config_context": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "TypeError",
    "sklearn.config_context",
    "sklearn.get_config",
    "sklearn.set_config",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_config.test_config_context_exception": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.config_context",
    "sklearn.get_config"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_config.test_set_config": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "TypeError",
    "sklearn.get_config",
    "sklearn.set_config",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_discriminant_analysis": {
  "data": {
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "numpy.c_",
    "numpy.zeros"
   ]
  },
  "type": "module"
 },
 "sklearn.tests.test_discriminant_analysis.LinearDiscriminantAnalysis": {
  "data": {
   "shadows": "sklearn.discriminant_analysis.LinearDiscriminantAnalysis"
  },
  "type": "import"
 },
 "sklearn.tests.test_discriminant_analysis.QuadraticDiscriminantAnalysis": {
  "data": {
   "shadows": "sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis"
  },
  "type": "import"
 },
 "sklearn.tests.test_discriminant_analysis.X": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "sklearn.tests.test_discriminant_analysis.X1": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "sklearn.tests.test_discriminant_analysis.X2": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "sklearn.tests.test_discriminant_analysis.X5": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "sklearn.tests.test_discriminant_analysis.X6": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "sklearn.tests.test_discriminant_analysis.X7": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "sklearn.tests.test_discriminant_analysis._cov": {
  "data": {
   "shadows": "sklearn.discriminant_analysis._cov"
  },
  "type": "import"
 },
 "sklearn.tests.test_discriminant_analysis.assert_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "sklearn.tests.test_discriminant_analysis.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.tests.test_discriminant_analysis.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.tests.test_discriminant_analysis.assert_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.tests.test_discriminant_analysis.assert_false": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_false"
  },
  "type": "import"
 },
 "sklearn.tests.test_discriminant_analysis.assert_greater": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_greater"
  },
  "type": "import"
 },
 "sklearn.tests.test_discriminant_analysis.assert_raise_message": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raise_message"
  },
  "type": "import"
 },
 "sklearn.tests.test_discriminant_analysis.assert_raises": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.tests.test_discriminant_analysis.assert_true": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_true"
  },
  "type": "import"
 },
 "sklearn.tests.test_discriminant_analysis.assert_warns": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_warns"
  },
  "type": "import"
 },
 "sklearn.tests.test_discriminant_analysis.assert_warns_message": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_warns_message"
  },
  "type": "import"
 },
 "sklearn.tests.test_discriminant_analysis.ignore_warnings": {
  "data": {
   "shadows": "sklearn.utils.testing.ignore_warnings"
  },
  "type": "import"
 },
 "sklearn.tests.test_discriminant_analysis.make_blobs": {
  "data": {
   "shadows": "sklearn.datasets.make_blobs"
  },
  "type": "import"
 },
 "sklearn.tests.test_discriminant_analysis.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.tests.test_discriminant_analysis.solver_shrinkage": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "sklearn.tests.test_discriminant_analysis.test_covariance": {
  "data": {
   "lineno": 356,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.dot",
    "sklearn.datasets.make_blobs",
    "sklearn.discriminant_analysis._cov",
    "sklearn.tests.test_discriminant_analysis.y",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_discriminant_analysis.test_lda_coefs": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "sklearn.datasets.make_blobs",
    "sklearn.discriminant_analysis.LinearDiscriminantAnalysis",
    "sklearn.tests.test_discriminant_analysis.X",
    "sklearn.tests.test_discriminant_analysis.y",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_discriminant_analysis.test_lda_explained_variance_ratio": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.discriminant_analysis.LinearDiscriminantAnalysis",
    "sklearn.tests.test_discriminant_analysis.X",
    "sklearn.tests.test_discriminant_analysis.y",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_discriminant_analysis.test_lda_orthogonality": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.arange",
    "numpy.array",
    "numpy.cov",
    "numpy.dot",
    "numpy.eye",
    "numpy.newaxis.reshape",
    "numpy.repeat",
    "numpy.sqrt",
    "numpy.sum",
    "sklearn.discriminant_analysis.LinearDiscriminantAnalysis",
    "sklearn.tests.test_discriminant_analysis.X",
    "sklearn.tests.test_discriminant_analysis.y",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_discriminant_analysis.test_lda_predict": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "NotImplementedError",
    "ValueError",
    "numpy.any",
    "numpy.exp",
    "sklearn.discriminant_analysis.LinearDiscriminantAnalysis",
    "sklearn.tests.test_discriminant_analysis.X",
    "sklearn.tests.test_discriminant_analysis.X1",
    "sklearn.tests.test_discriminant_analysis.solver_shrinkage",
    "sklearn.tests.test_discriminant_analysis.y",
    "sklearn.tests.test_discriminant_analysis.y3",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_raises",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_discriminant_analysis.test_lda_priors": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "UserWarning",
    "ValueError",
    "numpy.array",
    "sklearn.discriminant_analysis.LinearDiscriminantAnalysis",
    "sklearn.tests.test_discriminant_analysis.X",
    "sklearn.tests.test_discriminant_analysis.y",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_raise_message",
    "sklearn.utils.testing.assert_warns"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_discriminant_analysis.test_lda_scaling": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "numpy.vstack",
    "sklearn.discriminant_analysis.LinearDiscriminantAnalysis",
    "sklearn.tests.test_discriminant_analysis.y",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_discriminant_analysis.test_lda_store_covariance": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "hasattr",
    "numpy.array",
    "sklearn.discriminant_analysis.LinearDiscriminantAnalysis",
    "sklearn.tests.test_discriminant_analysis.X6",
    "sklearn.tests.test_discriminant_analysis.y6",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_false",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_discriminant_analysis.test_lda_transform": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "NotImplementedError",
    "sklearn.discriminant_analysis.LinearDiscriminantAnalysis",
    "sklearn.tests.test_discriminant_analysis.X",
    "sklearn.tests.test_discriminant_analysis.y",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_discriminant_analysis.test_qda": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "ValueError",
    "numpy.any",
    "numpy.exp",
    "sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis",
    "sklearn.tests.test_discriminant_analysis.X6",
    "sklearn.tests.test_discriminant_analysis.X7",
    "sklearn.tests.test_discriminant_analysis.y4",
    "sklearn.tests.test_discriminant_analysis.y6",
    "sklearn.tests.test_discriminant_analysis.y7",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_raises",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_discriminant_analysis.test_qda_deprecation": {
  "data": {
   "lineno": 319,
   "symbols_in_volume": [
    "DeprecationWarning",
    "getattr",
    "sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis",
    "sklearn.tests.test_discriminant_analysis.X",
    "sklearn.tests.test_discriminant_analysis.y",
    "sklearn.utils.testing.assert_warns_message"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_discriminant_analysis.test_qda_priors": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.sum",
    "sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis",
    "sklearn.tests.test_discriminant_analysis.X6",
    "sklearn.tests.test_discriminant_analysis.y6",
    "sklearn.utils.testing.assert_greater"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_discriminant_analysis.test_qda_regularization": {
  "data": {
   "lineno": 333,
   "symbols_in_volume": [
    "numpy.any",
    "sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis",
    "sklearn.tests.test_discriminant_analysis.X2",
    "sklearn.tests.test_discriminant_analysis.X5",
    "sklearn.tests.test_discriminant_analysis.y5",
    "sklearn.tests.test_discriminant_analysis.y6",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_true",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_discriminant_analysis.test_qda_store_covariance": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": [
    "hasattr",
    "numpy.array",
    "sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis",
    "sklearn.tests.test_discriminant_analysis.X6",
    "sklearn.tests.test_discriminant_analysis.y6",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_false",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_discriminant_analysis.y": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "sklearn.tests.test_discriminant_analysis.y3": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "sklearn.tests.test_discriminant_analysis.y4": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "sklearn.tests.test_discriminant_analysis.y5": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "sklearn.tests.test_discriminant_analysis.y6": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "sklearn.tests.test_discriminant_analysis.y7": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "sklearn.tests.test_docstring_parameters": {
  "data": {
   "symbols_in_volume": [
    "pkgutil.walk_packages",
    "set",
    "sklearn.tests.test_docstring_parameters.sklearn"
   ]
  },
  "type": "module"
 },
 "sklearn.tests.test_docstring_parameters.IS_PYPY": {
  "data": {
   "shadows": "sklearn.utils.IS_PYPY"
  },
  "type": "import"
 },
 "sklearn.tests.test_docstring_parameters.PUBLIC_MODULES": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "sklearn.tests.test_docstring_parameters.SkipTest": {
  "data": {
   "shadows": "sklearn.utils.testing.SkipTest"
  },
  "type": "import"
 },
 "sklearn.tests.test_docstring_parameters._DOCSTRING_IGNORES": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "sklearn.tests.test_docstring_parameters._METHODS_IGNORE_NONE_Y": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "sklearn.tests.test_docstring_parameters._get_func_name": {
  "data": {
   "shadows": "sklearn.utils.testing._get_func_name"
  },
  "type": "import"
 },
 "sklearn.tests.test_docstring_parameters._is_deprecated": {
  "data": {
   "shadows": "sklearn.utils.deprecation._is_deprecated"
  },
  "type": "import"
 },
 "sklearn.tests.test_docstring_parameters.check_docstring_parameters": {
  "data": {
   "shadows": "sklearn.utils.testing.check_docstring_parameters"
  },
  "type": "import"
 },
 "sklearn.tests.test_docstring_parameters.docscrape": {
  "data": {
   "shadows": "numpydoc.docscrape"
  },
  "type": "import"
 },
 "sklearn.tests.test_docstring_parameters.getsource": {
  "data": {
   "shadows": "inspect.getsource"
  },
  "type": "import"
 },
 "sklearn.tests.test_docstring_parameters.ignore_warnings": {
  "data": {
   "shadows": "sklearn.utils.testing.ignore_warnings"
  },
  "type": "import"
 },
 "sklearn.tests.test_docstring_parameters.importlib": {
  "data": {
   "shadows": "importlib"
  },
  "type": "import"
 },
 "sklearn.tests.test_docstring_parameters.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "sklearn.tests.test_docstring_parameters.isabstract": {
  "data": {
   "shadows": "inspect.isabstract"
  },
  "type": "import"
 },
 "sklearn.tests.test_docstring_parameters.numpydoc": {
  "data": {
   "shadows": "numpydoc"
  },
  "type": "import"
 },
 "sklearn.tests.test_docstring_parameters.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.tests.test_docstring_parameters.signature": {
  "data": {
   "shadows": "sklearn.base.signature"
  },
  "type": "import"
 },
 "sklearn.tests.test_docstring_parameters.sklearn": {
  "data": {
   "shadows": "sklearn"
  },
  "type": "import"
 },
 "sklearn.tests.test_docstring_parameters.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "sklearn.tests.test_docstring_parameters.test_docstring_parameters": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "AssertionError",
    "ImportError",
    "RuntimeError",
    "any",
    "getattr",
    "inspect.isabstract",
    "len",
    "list",
    "numpydoc.docscrape.ClassDoc",
    "set",
    "sklearn.base.signature",
    "sklearn.tests.test_docstring_parameters.PUBLIC_MODULES",
    "sklearn.tests.test_docstring_parameters._DOCSTRING_IGNORES",
    "sklearn.tests.test_docstring_parameters._METHODS_IGNORE_NONE_Y",
    "sklearn.tests.test_docstring_parameters.importlib",
    "sklearn.tests.test_docstring_parameters.inspect",
    "sklearn.tests.test_docstring_parameters.pytest",
    "sklearn.tests.test_docstring_parameters.sys",
    "sklearn.tests.test_docstring_parameters.warnings",
    "sklearn.utils.IS_PYPY",
    "sklearn.utils.deprecation._is_deprecated",
    "sklearn.utils.testing.SkipTest",
    "sklearn.utils.testing._get_func_name",
    "sklearn.utils.testing.check_docstring_parameters",
    "sorted"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_docstring_parameters.test_tabs": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "DeprecationWarning",
    "IOError",
    "inspect.getsource",
    "pkgutil.walk_packages",
    "sklearn.tests.test_docstring_parameters.importlib",
    "sklearn.tests.test_docstring_parameters.sklearn",
    "sklearn.utils.IS_PYPY",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_docstring_parameters.walk_packages": {
  "data": {
   "shadows": "pkgutil.walk_packages"
  },
  "type": "import"
 },
 "sklearn.tests.test_docstring_parameters.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.tests.test_dummy": {
  "data": {},
  "type": "module"
 },
 "sklearn.tests.test_dummy.DummyClassifier": {
  "data": {
   "shadows": "sklearn.dummy.DummyClassifier"
  },
  "type": "import"
 },
 "sklearn.tests.test_dummy.DummyRegressor": {
  "data": {
   "shadows": "sklearn.dummy.DummyRegressor"
  },
  "type": "import"
 },
 "sklearn.tests.test_dummy._check_behavior_2d": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.base.clone",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_dummy._check_behavior_2d_for_constant": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.base.clone",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_dummy._check_equality_regressor": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "numpy.tile",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_dummy._check_predict_proba": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "len",
    "numpy.atleast_1d",
    "numpy.log",
    "numpy.ones",
    "numpy.reshape",
    "numpy.unique",
    "range",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_dummy._weighted_percentile": {
  "data": {
   "shadows": "sklearn.utils.stats._weighted_percentile"
  },
  "type": "import"
 },
 "sklearn.tests.test_dummy.assert_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "sklearn.tests.test_dummy.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.tests.test_dummy.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.tests.test_dummy.assert_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.tests.test_dummy.assert_raises": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.tests.test_dummy.assert_true": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_true"
  },
  "type": "import"
 },
 "sklearn.tests.test_dummy.assert_warns_message": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_warns_message"
  },
  "type": "import"
 },
 "sklearn.tests.test_dummy.clone": {
  "data": {
   "shadows": "sklearn.base.clone"
  },
  "type": "import"
 },
 "sklearn.tests.test_dummy.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sklearn.tests.test_dummy.ignore_warnings": {
  "data": {
   "shadows": "sklearn.utils.testing.ignore_warnings"
  },
  "type": "import"
 },
 "sklearn.tests.test_dummy.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.tests.test_dummy.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.tests.test_dummy.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.tests.test_dummy.test_classification_sample_weight": {
  "data": {
   "lineno": 533,
   "symbols_in_volume": [
    "sklearn.dummy.DummyClassifier",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_dummy.test_classifier_exceptions": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.dummy.DummyClassifier",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_dummy.test_classifier_prediction_independent_of_X": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "sklearn.dummy.DummyClassifier",
    "sklearn.tests.test_dummy.pytest",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_dummy.test_classifier_score_with_None": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.dummy.DummyClassifier",
    "sklearn.tests.test_dummy.pytest",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_dummy.test_constant_size_multioutput_regressor": {
  "data": {
   "lineno": 479,
   "symbols_in_volume": [
    "ValueError",
    "numpy.random.RandomState",
    "sklearn.dummy.DummyRegressor",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_dummy.test_constant_strategy": {
  "data": {
   "lineno": 488,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "numpy.ones",
    "sklearn.dummy.DummyClassifier",
    "sklearn.tests.test_dummy._check_predict_proba",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_dummy.test_constant_strategy_exceptions": {
  "data": {
   "lineno": 523,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.dummy.DummyClassifier",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_dummy.test_constant_strategy_multioutput": {
  "data": {
   "lineno": 505,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "numpy.hstack",
    "numpy.ones",
    "numpy.zeros",
    "sklearn.dummy.DummyClassifier",
    "sklearn.tests.test_dummy._check_predict_proba",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_dummy.test_constant_strategy_multioutput_regressor": {
  "data": {
   "lineno": 429,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.dummy.DummyRegressor",
    "sklearn.tests.test_dummy._check_behavior_2d_for_constant",
    "sklearn.tests.test_dummy._check_equality_regressor"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_dummy.test_constant_strategy_regressor": {
  "data": {
   "lineno": 413,
   "symbols_in_volume": [
    "len",
    "numpy.random.RandomState",
    "sklearn.dummy.DummyRegressor",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_dummy.test_constant_strategy_sparse_target": {
  "data": {
   "lineno": 542,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "numpy.hstack",
    "numpy.ones",
    "numpy.zeros",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.issparse",
    "sklearn.dummy.DummyClassifier",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_dummy.test_constants_not_specified_regressor": {
  "data": {
   "lineno": 471,
   "symbols_in_volume": [
    "TypeError",
    "sklearn.dummy.DummyRegressor",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_dummy.test_dummy_classifier_on_3D_array": {
  "data": {
   "lineno": 653,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.dummy.DummyClassifier",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_dummy.test_dummy_regressor_on_3D_array": {
  "data": {
   "lineno": 643,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.dummy.DummyRegressor",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_dummy.test_dummy_regressor_return_std": {
  "data": {
   "lineno": 666,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "sklearn.dummy.DummyRegressor",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_dummy.test_dummy_regressor_sample_weight": {
  "data": {
   "lineno": 625,
   "symbols_in_volume": [
    "numpy.average",
    "numpy.random.RandomState",
    "sklearn.dummy.DummyRegressor",
    "sklearn.utils.stats._weighted_percentile",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_dummy.test_mean_strategy_multioutput_regressor": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "numpy.mean",
    "numpy.random.RandomState",
    "sklearn.dummy.DummyRegressor",
    "sklearn.tests.test_dummy._check_behavior_2d",
    "sklearn.tests.test_dummy._check_equality_regressor"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_dummy.test_mean_strategy_regressor": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "len",
    "numpy.mean",
    "numpy.random.RandomState",
    "sklearn.dummy.DummyRegressor",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_dummy.test_median_strategy_multioutput_regressor": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "numpy.median",
    "numpy.random.RandomState",
    "sklearn.dummy.DummyRegressor",
    "sklearn.tests.test_dummy._check_behavior_2d",
    "sklearn.tests.test_dummy._check_equality_regressor"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_dummy.test_median_strategy_regressor": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "len",
    "numpy.median",
    "numpy.random.RandomState",
    "sklearn.dummy.DummyRegressor",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_dummy.test_most_frequent_and_prior_strategy": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "len",
    "numpy.ones",
    "sklearn.dummy.DummyClassifier",
    "sklearn.tests.test_dummy._check_predict_proba",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_dummy.test_most_frequent_and_prior_strategy_multioutput": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "numpy.hstack",
    "numpy.ones",
    "numpy.zeros",
    "sklearn.dummy.DummyClassifier",
    "sklearn.tests.test_dummy._check_behavior_2d",
    "sklearn.tests.test_dummy._check_predict_proba",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_dummy.test_most_frequent_and_prior_strategy_sparse_target": {
  "data": {
   "lineno": 606,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "numpy.hstack",
    "numpy.ones",
    "numpy.zeros",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.issparse",
    "sklearn.dummy.DummyClassifier",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_dummy.test_quantile_invalid": {
  "data": {
   "lineno": 384,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "sklearn.dummy.DummyRegressor",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_dummy.test_quantile_strategy_empty_train": {
  "data": {
   "lineno": 408,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.dummy.DummyRegressor",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_dummy.test_quantile_strategy_multioutput_regressor": {
  "data": {
   "lineno": 350,
   "symbols_in_volume": [
    "numpy.median",
    "numpy.percentile",
    "numpy.random.RandomState",
    "sklearn.dummy.DummyRegressor",
    "sklearn.tests.test_dummy._check_behavior_2d",
    "sklearn.tests.test_dummy._check_equality_regressor"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_dummy.test_quantile_strategy_regressor": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": [
    "len",
    "numpy.max",
    "numpy.median",
    "numpy.min",
    "numpy.percentile",
    "numpy.random.RandomState",
    "sklearn.dummy.DummyRegressor",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_dummy.test_regressor_exceptions": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.dummy.DummyRegressor",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_dummy.test_regressor_prediction_independent_of_X": {
  "data": {
   "lineno": 694,
   "symbols_in_volume": [
    "sklearn.dummy.DummyRegressor",
    "sklearn.tests.test_dummy.pytest",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_dummy.test_regressor_score_with_None": {
  "data": {
   "lineno": 679,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.dummy.DummyRegressor",
    "sklearn.tests.test_dummy.pytest",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_dummy.test_stratified_strategy": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "float",
    "len",
    "numpy.bincount",
    "sklearn.dummy.DummyClassifier",
    "sklearn.tests.test_dummy._check_predict_proba",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_dummy.test_stratified_strategy_multioutput": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "float",
    "len",
    "numpy.array",
    "numpy.bincount",
    "range",
    "sklearn.dummy.DummyClassifier",
    "sklearn.tests.test_dummy._check_behavior_2d",
    "sklearn.tests.test_dummy._check_predict_proba",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_dummy.test_stratified_strategy_sparse_target": {
  "data": {
   "lineno": 583,
   "symbols_in_volume": [
    "float",
    "len",
    "numpy.array",
    "numpy.bincount",
    "range",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.issparse",
    "sklearn.dummy.DummyClassifier",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_dummy.test_string_labels": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "sklearn.dummy.DummyClassifier",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_dummy.test_uniform_strategy": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "float",
    "len",
    "numpy.bincount",
    "sklearn.dummy.DummyClassifier",
    "sklearn.tests.test_dummy._check_predict_proba",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_dummy.test_uniform_strategy_multioutput": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "float",
    "len",
    "numpy.array",
    "numpy.bincount",
    "range",
    "sklearn.dummy.DummyClassifier",
    "sklearn.tests.test_dummy._check_behavior_2d",
    "sklearn.tests.test_dummy._check_predict_proba",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_dummy.test_uniform_strategy_sparse_target_warning": {
  "data": {
   "lineno": 560,
   "symbols_in_volume": [
    "UserWarning",
    "float",
    "len",
    "numpy.array",
    "numpy.bincount",
    "range",
    "scipy.sparse.csc_matrix",
    "sklearn.dummy.DummyClassifier",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_warns_message"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_dummy.test_unknown_strategey_regressor": {
  "data": {
   "lineno": 463,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.dummy.DummyRegressor",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_dummy.test_y_mean_attribute_regressor": {
  "data": {
   "lineno": 453,
   "symbols_in_volume": [
    "numpy.mean",
    "sklearn.dummy.DummyRegressor",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_impute": {
  "data": {},
  "type": "module"
 },
 "sklearn.tests.test_impute.GridSearchCV": {
  "data": {
   "shadows": "sklearn.model_selection.GridSearchCV"
  },
  "type": "import"
 },
 "sklearn.tests.test_impute.MissingIndicator": {
  "data": {
   "shadows": "sklearn.impute.MissingIndicator"
  },
  "type": "import"
 },
 "sklearn.tests.test_impute.Pipeline": {
  "data": {
   "shadows": "sklearn.pipeline.Pipeline"
  },
  "type": "import"
 },
 "sklearn.tests.test_impute.SimpleImputer": {
  "data": {
   "shadows": "sklearn.impute.SimpleImputer"
  },
  "type": "import"
 },
 "sklearn.tests.test_impute._check_statistics": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "assert_ae",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.issparse",
    "sklearn.impute.SimpleImputer",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_impute.assert_allclose": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_allclose"
  },
  "type": "import"
 },
 "sklearn.tests.test_impute.assert_allclose_dense_sparse": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_allclose_dense_sparse"
  },
  "type": "import"
 },
 "sklearn.tests.test_impute.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.tests.test_impute.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.tests.test_impute.assert_false": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_false"
  },
  "type": "import"
 },
 "sklearn.tests.test_impute.io": {
  "data": {
   "shadows": "io"
  },
  "type": "import"
 },
 "sklearn.tests.test_impute.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.tests.test_impute.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.tests.test_impute.safe_mean": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "hasattr",
    "len",
    "numpy.mean",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_impute.safe_median": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "hasattr",
    "len",
    "numpy.median",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_impute.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.tests.test_impute.sparse_random_matrix": {
  "data": {
   "shadows": "sklearn.random_projection.sparse_random_matrix"
  },
  "type": "import"
 },
 "sklearn.tests.test_impute.test_imputation_const_mostf_error_invalid_types": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "numpy.dtype",
    "numpy.nan",
    "sklearn.impute.SimpleImputer",
    "sklearn.tests.test_impute.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_impute.test_imputation_constant_error_invalid_type": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "numpy.full",
    "numpy.nan",
    "sklearn.impute.SimpleImputer",
    "sklearn.tests.test_impute.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_impute.test_imputation_constant_float": {
  "data": {
   "lineno": 359,
   "symbols_in_volume": [
    "array_constructor",
    "numpy.array",
    "numpy.asarray",
    "numpy.nan",
    "scipy.sparse.csr_matrix",
    "sklearn.impute.SimpleImputer",
    "sklearn.tests.test_impute.pytest",
    "sklearn.utils.testing.assert_allclose_dense_sparse"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_impute.test_imputation_constant_integer": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.impute.SimpleImputer",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_impute.test_imputation_constant_object": {
  "data": {
   "lineno": 386,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "object",
    "sklearn.impute.SimpleImputer",
    "sklearn.tests.test_impute.pytest",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_impute.test_imputation_constant_pandas": {
  "data": {
   "lineno": 410,
   "symbols_in_volume": [
    "numpy.array",
    "object",
    "sklearn.impute.SimpleImputer",
    "sklearn.tests.test_impute.io",
    "sklearn.tests.test_impute.pytest",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_impute.test_imputation_copy": {
  "data": {
   "lineno": 457,
   "symbols_in_volume": [
    "numpy.all",
    "sklearn.impute.SimpleImputer",
    "sklearn.random_projection.sparse_random_matrix",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_false"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_impute.test_imputation_deletion_warning": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "UserWarning",
    "numpy.nan",
    "numpy.ones",
    "sklearn.impute.SimpleImputer",
    "sklearn.tests.test_impute.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_impute.test_imputation_error_invalid_strategy": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "ValueError",
    "numpy.nan",
    "numpy.ones",
    "sklearn.impute.SimpleImputer",
    "sklearn.tests.test_impute.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_impute.test_imputation_error_sparse_0": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "ValueError",
    "numpy.ones",
    "scipy.sparse.csc_matrix",
    "sklearn.impute.SimpleImputer",
    "sklearn.tests.test_impute.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_impute.test_imputation_mean_median": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "len",
    "max",
    "numpy.arange",
    "numpy.empty",
    "numpy.hstack",
    "numpy.isnan",
    "numpy.nan",
    "numpy.random.RandomState",
    "numpy.repeat",
    "numpy.zeros",
    "range",
    "sklearn.tests.test_impute._check_statistics",
    "sklearn.tests.test_impute.safe_mean",
    "sklearn.tests.test_impute.safe_median",
    "true_value_fun"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_impute.test_imputation_mean_median_error_invalid_type": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "object",
    "sklearn.impute.SimpleImputer",
    "sklearn.tests.test_impute.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_impute.test_imputation_median_special_cases": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "sklearn.tests.test_impute._check_statistics"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_impute.test_imputation_most_frequent": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "sklearn.tests.test_impute._check_statistics"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_impute.test_imputation_most_frequent_objects": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "object",
    "sklearn.impute.SimpleImputer",
    "sklearn.tests.test_impute.pytest",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_impute.test_imputation_most_frequent_pandas": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "numpy.array",
    "object",
    "sklearn.impute.SimpleImputer",
    "sklearn.tests.test_impute.io",
    "sklearn.tests.test_impute.pytest",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_impute.test_imputation_pipeline_grid_search": {
  "data": {
   "lineno": 436,
   "symbols_in_volume": [
    "sklearn.impute.SimpleImputer",
    "sklearn.model_selection.GridSearchCV",
    "sklearn.pipeline.Pipeline",
    "sklearn.random_projection.sparse_random_matrix",
    "sklearn.tests.test_impute.pytest",
    "sklearn.tree.DecisionTreeRegressor"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_impute.test_imputation_shape": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "numpy.nan",
    "numpy.random.randn",
    "scipy.sparse.csr_matrix",
    "sklearn.impute.SimpleImputer"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_impute.test_inconsistent_dtype_X_missing_values": {
  "data": {
   "lineno": 618,
   "symbols_in_volume": [
    "ValueError",
    "imputer_constructor",
    "numpy.nan",
    "numpy.random.RandomState",
    "sklearn.impute.SimpleImputer",
    "sklearn.tests.test_impute.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_impute.test_missing_indicator_error": {
  "data": {
   "lineno": 503,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "sklearn.impute.MissingIndicator",
    "sklearn.tests.test_impute.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_impute.test_missing_indicator_new": {
  "data": {
   "lineno": 522,
   "symbols_in_volume": [
    "arr_type",
    "bool",
    "isinstance",
    "numpy.array",
    "numpy.float64",
    "numpy.int32",
    "numpy.nan",
    "numpy.ndarray",
    "scipy.sparse.bsr_matrix",
    "scipy.sparse.coo_matrix",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.lil_matrix",
    "sklearn.impute.MissingIndicator",
    "sklearn.tests.test_impute.pytest",
    "sklearn.utils.testing.assert_allclose",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_impute.test_missing_indicator_sparse_param": {
  "data": {
   "lineno": 580,
   "symbols_in_volume": [
    "arr_type",
    "isinstance",
    "numpy.array",
    "numpy.float64",
    "numpy.nan",
    "numpy.ndarray",
    "scipy.sparse.coo_matrix",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.issparse",
    "sklearn.impute.MissingIndicator",
    "sklearn.tests.test_impute.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_impute.tree": {
  "data": {
   "shadows": "sklearn.tree"
  },
  "type": "import"
 },
 "sklearn.tests.test_init": {
  "data": {
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "module"
 },
 "sklearn.tests.test_init.__author__": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "sklearn.tests.test_init.__license__": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "sklearn.tests.test_init._top_import_error": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "sklearn.tests.test_init.assert_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.tests.test_init.pkgutil": {
  "data": {
   "shadows": "pkgutil"
  },
  "type": "import"
 },
 "sklearn.tests.test_init.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.tests.test_init.sklearn": {
  "data": {
   "shadows": "sklearn"
  },
  "type": "import"
 },
 "sklearn.tests.test_init.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "sklearn.tests.test_init.test_import_skl": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "sklearn.tests.test_init._top_import_error",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_init.test_import_sklearn_no_warnings": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "Exception",
    "sklearn.tests.test_init.pkgutil",
    "sklearn.tests.test_init.pytest",
    "sklearn.tests.test_init.sklearn",
    "sklearn.tests.test_init.subprocess"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_isotonic": {
  "data": {},
  "type": "module"
 },
 "sklearn.tests.test_isotonic.IsotonicRegression": {
  "data": {
   "shadows": "sklearn.isotonic.IsotonicRegression"
  },
  "type": "import"
 },
 "sklearn.tests.test_isotonic.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.tests.test_isotonic.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.tests.test_isotonic.assert_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.tests.test_isotonic.assert_false": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_false"
  },
  "type": "import"
 },
 "sklearn.tests.test_isotonic.assert_no_warnings": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_no_warnings"
  },
  "type": "import"
 },
 "sklearn.tests.test_isotonic.assert_raises": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.tests.test_isotonic.assert_true": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_true"
  },
  "type": "import"
 },
 "sklearn.tests.test_isotonic.assert_warns_message": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_warns_message"
  },
  "type": "import"
 },
 "sklearn.tests.test_isotonic.check_increasing": {
  "data": {
   "shadows": "sklearn.isotonic.check_increasing"
  },
  "type": "import"
 },
 "sklearn.tests.test_isotonic.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "sklearn.tests.test_isotonic.isotonic_regression": {
  "data": {
   "shadows": "sklearn.isotonic.isotonic_regression"
  },
  "type": "import"
 },
 "sklearn.tests.test_isotonic.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.tests.test_isotonic.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "sklearn.tests.test_isotonic.shuffle": {
  "data": {
   "shadows": "sklearn.utils.shuffle"
  },
  "type": "import"
 },
 "sklearn.tests.test_isotonic.test_assert_raises_exceptions": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "ValueError",
    "numpy.random.RandomState",
    "sklearn.isotonic.IsotonicRegression",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_isotonic.test_check_ci_warn": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "UserWarning",
    "sklearn.isotonic.check_increasing",
    "sklearn.utils.testing.assert_false",
    "sklearn.utils.testing.assert_warns_message"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_isotonic.test_check_increasing_down": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "sklearn.isotonic.check_increasing",
    "sklearn.utils.testing.assert_false",
    "sklearn.utils.testing.assert_no_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_isotonic.test_check_increasing_down_extreme": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "sklearn.isotonic.check_increasing",
    "sklearn.utils.testing.assert_false",
    "sklearn.utils.testing.assert_no_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_isotonic.test_check_increasing_small_number_of_samples": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "sklearn.isotonic.check_increasing",
    "sklearn.utils.testing.assert_no_warnings",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_isotonic.test_check_increasing_up": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "sklearn.isotonic.check_increasing",
    "sklearn.utils.testing.assert_no_warnings",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_isotonic.test_check_increasing_up_extreme": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "sklearn.isotonic.check_increasing",
    "sklearn.utils.testing.assert_no_warnings",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_isotonic.test_fast_predict": {
  "data": {
   "lineno": 422,
   "symbols_in_volume": [
    "numpy.exp",
    "numpy.less",
    "numpy.random.RandomState",
    "sklearn.isotonic.IsotonicRegression",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_isotonic.test_isotonic_copy_before_fit": {
  "data": {
   "lineno": 460,
   "symbols_in_volume": [
    "sklearn.isotonic.IsotonicRegression",
    "sklearn.tests.test_isotonic.copy"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_isotonic.test_isotonic_duplicate_min_entry": {
  "data": {
   "lineno": 367,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.isfinite",
    "sklearn.isotonic.IsotonicRegression",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_isotonic.test_isotonic_min_max_boundaries": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.round",
    "sklearn.isotonic.IsotonicRegression",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_isotonic.test_isotonic_regression": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "numpy.array",
    "numpy.mean",
    "numpy.ones",
    "numpy.random.permutation",
    "sklearn.isotonic.IsotonicRegression",
    "sklearn.isotonic.isotonic_regression",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_isotonic.test_isotonic_regression_auto_decreasing": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "all",
    "len",
    "numpy.arange",
    "numpy.array",
    "sklearn.isotonic.IsotonicRegression",
    "sklearn.tests.test_isotonic.warnings",
    "sklearn.utils.testing.assert_false",
    "sklearn.utils.testing.assert_true",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_isotonic.test_isotonic_regression_auto_increasing": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "all",
    "len",
    "numpy.arange",
    "numpy.array",
    "sklearn.isotonic.IsotonicRegression",
    "sklearn.tests.test_isotonic.warnings",
    "sklearn.utils.testing.assert_true",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_isotonic.test_isotonic_regression_oob_bad": {
  "data": {
   "lineno": 328,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.arange",
    "numpy.array",
    "sklearn.isotonic.IsotonicRegression",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_isotonic.test_isotonic_regression_oob_bad_after": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.arange",
    "numpy.array",
    "sklearn.isotonic.IsotonicRegression",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_isotonic.test_isotonic_regression_oob_clip": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "len",
    "max",
    "min",
    "numpy.arange",
    "numpy.array",
    "sklearn.isotonic.IsotonicRegression",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_isotonic.test_isotonic_regression_oob_nan": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": [
    "len",
    "max",
    "min",
    "numpy.arange",
    "numpy.array",
    "numpy.isnan",
    "sklearn.isotonic.IsotonicRegression",
    "sklearn.utils.testing.assert_equal",
    "sum"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_isotonic.test_isotonic_regression_oob_raise": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "max",
    "min",
    "numpy.arange",
    "numpy.array",
    "sklearn.isotonic.IsotonicRegression",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_isotonic.test_isotonic_regression_pickle": {
  "data": {
   "lineno": 354,
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "numpy.array",
    "numpy.testing.assert_array_equal",
    "sklearn.isotonic.IsotonicRegression",
    "sklearn.tests.test_isotonic.pickle"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_isotonic.test_isotonic_regression_reversed": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "numpy.array",
    "numpy.ones",
    "sklearn.isotonic.IsotonicRegression",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_isotonic.test_isotonic_regression_ties_max": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "sklearn.isotonic.IsotonicRegression",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_isotonic.test_isotonic_regression_ties_min": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "sklearn.isotonic.IsotonicRegression",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_isotonic.test_isotonic_regression_ties_secondary_": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "sklearn.isotonic.IsotonicRegression",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_isotonic.test_isotonic_regression_with_ties_in_differently_sized_groups": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.isotonic.IsotonicRegression",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_isotonic.test_isotonic_sample_weight": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "sklearn.isotonic.IsotonicRegression",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_isotonic.test_isotonic_sample_weight_parameter_default_value": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.log",
    "numpy.ones",
    "numpy.random.RandomState",
    "sklearn.isotonic.IsotonicRegression",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_isotonic.test_isotonic_ymin_ymax": {
  "data": {
   "lineno": 377,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.array",
    "sklearn.isotonic.isotonic_regression"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_isotonic.test_isotonic_zero_weight_loop": {
  "data": {
   "lineno": 400,
   "symbols_in_volume": [
    "numpy.linspace",
    "numpy.random.RandomState",
    "sklearn.isotonic.IsotonicRegression"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_isotonic.test_permutation_invariance": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "sklearn.isotonic.IsotonicRegression",
    "sklearn.utils.shuffle",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_isotonic.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.tests.test_kernel_approximation": {
  "data": {
   "symbols_in_volume": [
    "numpy.newaxis",
    "numpy.random.RandomState",
    "sklearn.tests.test_kernel_approximation.X",
    "sklearn.tests.test_kernel_approximation.Y",
    "sklearn.tests.test_kernel_approximation.rng"
   ]
  },
  "type": "module"
 },
 "sklearn.tests.test_kernel_approximation.AdditiveChi2Sampler": {
  "data": {
   "shadows": "sklearn.kernel_approximation.AdditiveChi2Sampler"
  },
  "type": "import"
 },
 "sklearn.tests.test_kernel_approximation.Nystroem": {
  "data": {
   "shadows": "sklearn.kernel_approximation.Nystroem"
  },
  "type": "import"
 },
 "sklearn.tests.test_kernel_approximation.RBFSampler": {
  "data": {
   "shadows": "sklearn.kernel_approximation.RBFSampler"
  },
  "type": "import"
 },
 "sklearn.tests.test_kernel_approximation.SkewedChi2Sampler": {
  "data": {
   "shadows": "sklearn.kernel_approximation.SkewedChi2Sampler"
  },
  "type": "import"
 },
 "sklearn.tests.test_kernel_approximation.X": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "sklearn.tests.test_kernel_approximation.Y": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "sklearn.tests.test_kernel_approximation.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.tests.test_kernel_approximation.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.tests.test_kernel_approximation.assert_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.tests.test_kernel_approximation.assert_less_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_less_equal"
  },
  "type": "import"
 },
 "sklearn.tests.test_kernel_approximation.assert_not_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_not_equal"
  },
  "type": "import"
 },
 "sklearn.tests.test_kernel_approximation.assert_raises": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.tests.test_kernel_approximation.assert_true": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_true"
  },
  "type": "import"
 },
 "sklearn.tests.test_kernel_approximation.assert_warns_message": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_warns_message"
  },
  "type": "import"
 },
 "sklearn.tests.test_kernel_approximation.chi2_kernel": {
  "data": {
   "shadows": "sklearn.metrics.pairwise.chi2_kernel"
  },
  "type": "import"
 },
 "sklearn.tests.test_kernel_approximation.csr_matrix": {
  "data": {
   "shadows": "scipy.sparse.csr_matrix"
  },
  "type": "import"
 },
 "sklearn.tests.test_kernel_approximation.kernel_metrics": {
  "data": {
   "shadows": "sklearn.metrics.pairwise.kernel_metrics"
  },
  "type": "import"
 },
 "sklearn.tests.test_kernel_approximation.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.tests.test_kernel_approximation.polynomial_kernel": {
  "data": {
   "shadows": "sklearn.metrics.pairwise.polynomial_kernel"
  },
  "type": "import"
 },
 "sklearn.tests.test_kernel_approximation.rbf_kernel": {
  "data": {
   "shadows": "sklearn.metrics.pairwise.rbf_kernel"
  },
  "type": "import"
 },
 "sklearn.tests.test_kernel_approximation.rng": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "sklearn.tests.test_kernel_approximation.test_additive_chi2_sampler": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "ValueError",
    "numpy.dot",
    "numpy.newaxis",
    "scipy.sparse.csr_matrix",
    "sklearn.kernel_approximation.AdditiveChi2Sampler",
    "sklearn.tests.test_kernel_approximation.X",
    "sklearn.tests.test_kernel_approximation.Y",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_not_equal",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_kernel_approximation.test_input_validation": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "scipy.sparse.csr_matrix",
    "sklearn.kernel_approximation.AdditiveChi2Sampler",
    "sklearn.kernel_approximation.RBFSampler",
    "sklearn.kernel_approximation.SkewedChi2Sampler",
    "sklearn.tests.test_kernel_approximation.X"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_kernel_approximation.test_nystroem_approximation": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.random.RandomState",
    "sklearn.kernel_approximation.Nystroem",
    "sklearn.metrics.pairwise.kernel_metrics",
    "sklearn.metrics.pairwise.rbf_kernel",
    "sklearn.tests.test_kernel_approximation.X",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_kernel_approximation.test_nystroem_approximation.linear_kernel": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "numpy.dot",
    "sklearn.tests.test_kernel_approximation.X",
    "sklearn.tests.test_kernel_approximation.Y"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_kernel_approximation.test_nystroem_callable": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "DeprecationWarning",
    "len",
    "list",
    "numpy.random.RandomState",
    "sklearn.kernel_approximation.Nystroem",
    "sklearn.tests.test_kernel_approximation.X",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_warns_message"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_kernel_approximation.test_nystroem_callable.linear_kernel": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "numpy.dot",
    "sklearn.tests.test_kernel_approximation.X",
    "sklearn.tests.test_kernel_approximation.Y"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_kernel_approximation.test_nystroem_callable.logging_histogram_kernel": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "numpy.minimum"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_kernel_approximation.test_nystroem_default_parameters": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.random.RandomState",
    "sklearn.kernel_approximation.Nystroem",
    "sklearn.metrics.pairwise.chi2_kernel",
    "sklearn.metrics.pairwise.rbf_kernel",
    "sklearn.tests.test_kernel_approximation.X",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_kernel_approximation.test_nystroem_poly_kernel_params": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.random.RandomState",
    "sklearn.kernel_approximation.Nystroem",
    "sklearn.metrics.pairwise.polynomial_kernel",
    "sklearn.tests.test_kernel_approximation.X",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_kernel_approximation.test_nystroem_singular_kernel": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.dot",
    "numpy.isfinite",
    "numpy.random.RandomState",
    "numpy.vstack",
    "sklearn.kernel_approximation.Nystroem",
    "sklearn.metrics.pairwise.rbf_kernel",
    "sklearn.tests.test_kernel_approximation.X",
    "sklearn.tests.test_kernel_approximation.Y",
    "sklearn.tests.test_kernel_approximation.rng",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_kernel_approximation.test_rbf_sampler": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.dot",
    "numpy.max",
    "numpy.mean",
    "sklearn.kernel_approximation.RBFSampler",
    "sklearn.metrics.pairwise.rbf_kernel",
    "sklearn.tests.test_kernel_approximation.X",
    "sklearn.tests.test_kernel_approximation.Y",
    "sklearn.utils.testing.assert_less_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_kernel_approximation.test_skewed_chi2_sampler": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "ValueError",
    "numpy.dot",
    "numpy.exp",
    "numpy.isfinite",
    "numpy.log",
    "numpy.newaxis",
    "sklearn.kernel_approximation.SkewedChi2Sampler",
    "sklearn.tests.test_kernel_approximation.X",
    "sklearn.tests.test_kernel_approximation.Y",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_raises",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_kernel_ridge": {
  "data": {
   "symbols_in_volume": [
    "numpy.array",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "sklearn.datasets.make_regression"
   ]
  },
  "type": "module"
 },
 "sklearn.tests.test_kernel_ridge.KernelRidge": {
  "data": {
   "shadows": "sklearn.kernel_ridge.KernelRidge"
  },
  "type": "import"
 },
 "sklearn.tests.test_kernel_ridge.Ridge": {
  "data": {
   "shadows": "sklearn.linear_model.Ridge"
  },
  "type": "import"
 },
 "sklearn.tests.test_kernel_ridge.Xcsc": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "sklearn.tests.test_kernel_ridge.Xcsr": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "sklearn.tests.test_kernel_ridge.Y": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "sklearn.tests.test_kernel_ridge.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.tests.test_kernel_ridge.ignore_warnings": {
  "data": {
   "shadows": "sklearn.utils.testing.ignore_warnings"
  },
  "type": "import"
 },
 "sklearn.tests.test_kernel_ridge.make_regression": {
  "data": {
   "shadows": "sklearn.datasets.make_regression"
  },
  "type": "import"
 },
 "sklearn.tests.test_kernel_ridge.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.tests.test_kernel_ridge.pairwise_kernels": {
  "data": {
   "shadows": "sklearn.metrics.pairwise.pairwise_kernels"
  },
  "type": "import"
 },
 "sklearn.tests.test_kernel_ridge.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.tests.test_kernel_ridge.test_kernel_ridge": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "sklearn.kernel_ridge.KernelRidge",
    "sklearn.linear_model.Ridge",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_kernel_ridge.test_kernel_ridge_csc": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "sklearn.kernel_ridge.KernelRidge",
    "sklearn.linear_model.Ridge",
    "sklearn.tests.test_kernel_ridge.Xcsc",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_kernel_ridge.test_kernel_ridge_csr": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "sklearn.kernel_ridge.KernelRidge",
    "sklearn.linear_model.Ridge",
    "sklearn.tests.test_kernel_ridge.Xcsr",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_kernel_ridge.test_kernel_ridge_multi_output": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.kernel_ridge.KernelRidge",
    "sklearn.linear_model.Ridge",
    "sklearn.tests.test_kernel_ridge.Y",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_kernel_ridge.test_kernel_ridge_precomputed": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "sklearn.kernel_ridge.KernelRidge",
    "sklearn.metrics.pairwise.pairwise_kernels",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_kernel_ridge.test_kernel_ridge_precomputed_kernel_unchanged": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "numpy.dot",
    "sklearn.kernel_ridge.KernelRidge",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_kernel_ridge.test_kernel_ridge_sample_weights": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.random.RandomState",
    "sklearn.kernel_ridge.KernelRidge",
    "sklearn.linear_model.Ridge",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_kernel_ridge.test_kernel_ridge_singular_kernel": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "sklearn.kernel_ridge.KernelRidge",
    "sklearn.linear_model.Ridge",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_metaestimators": {
  "data": {
   "symbols_in_volume": [
    "sklearn.ensemble.BaggingClassifier",
    "sklearn.feature_selection.RFE",
    "sklearn.feature_selection.RFECV",
    "sklearn.model_selection.GridSearchCV",
    "sklearn.model_selection.RandomizedSearchCV",
    "sklearn.pipeline.Pipeline",
    "sklearn.tests.test_metaestimators.DelegatorData"
   ]
  },
  "type": "module"
 },
 "sklearn.tests.test_metaestimators.BaggingClassifier": {
  "data": {
   "shadows": "sklearn.ensemble.BaggingClassifier"
  },
  "type": "import"
 },
 "sklearn.tests.test_metaestimators.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "sklearn.tests.test_metaestimators.DELEGATING_METAESTIMATORS": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "sklearn.tests.test_metaestimators.DelegatorData": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "sklearn.tests.test_metaestimators.DelegatorData.__init__": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "sklearn.datasets.make_classification"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_metaestimators.GridSearchCV": {
  "data": {
   "shadows": "sklearn.model_selection.GridSearchCV"
  },
  "type": "import"
 },
 "sklearn.tests.test_metaestimators.NotFittedError": {
  "data": {
   "shadows": "sklearn.exceptions.NotFittedError"
  },
  "type": "import"
 },
 "sklearn.tests.test_metaestimators.Pipeline": {
  "data": {
   "shadows": "sklearn.pipeline.Pipeline"
  },
  "type": "import"
 },
 "sklearn.tests.test_metaestimators.RFE": {
  "data": {
   "shadows": "sklearn.feature_selection.RFE"
  },
  "type": "import"
 },
 "sklearn.tests.test_metaestimators.RFECV": {
  "data": {
   "shadows": "sklearn.feature_selection.RFECV"
  },
  "type": "import"
 },
 "sklearn.tests.test_metaestimators.RandomizedSearchCV": {
  "data": {
   "shadows": "sklearn.model_selection.RandomizedSearchCV"
  },
  "type": "import"
 },
 "sklearn.tests.test_metaestimators.assert_false": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_false"
  },
  "type": "import"
 },
 "sklearn.tests.test_metaestimators.assert_raises": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.tests.test_metaestimators.assert_true": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_true"
  },
  "type": "import"
 },
 "sklearn.tests.test_metaestimators.check_is_fitted": {
  "data": {
   "shadows": "sklearn.utils.validation.check_is_fitted"
  },
  "type": "import"
 },
 "sklearn.tests.test_metaestimators.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "sklearn.tests.test_metaestimators.iterkeys": {
  "data": {
   "shadows": "sklearn.externals.six.iterkeys"
  },
  "type": "import"
 },
 "sklearn.tests.test_metaestimators.make_classification": {
  "data": {
   "shadows": "sklearn.datasets.make_classification"
  },
  "type": "import"
 },
 "sklearn.tests.test_metaestimators.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.tests.test_metaestimators.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.tests.test_metaestimators.test_metaestimator_delegation": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "SubEstimator",
    "getattr",
    "hasattr",
    "sklearn.exceptions.NotFittedError",
    "sklearn.externals.six.iterkeys",
    "sklearn.tests.test_metaestimators.DELEGATING_METAESTIMATORS",
    "sklearn.tests.test_metaestimators.pytest",
    "sklearn.utils.testing.assert_false",
    "sklearn.utils.testing.assert_raises",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_metaestimators.test_metaestimator_delegation.SubEstimator": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator"
   ]
  },
  "type": "class"
 },
 "sklearn.tests.test_metaestimators.test_metaestimator_delegation.SubEstimator.__init__": {
  "data": {
   "lineno": 62
  },
  "type": "function"
 },
 "sklearn.tests.test_metaestimators.test_metaestimator_delegation.SubEstimator._check_fit": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "sklearn.utils.validation.check_is_fitted"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_metaestimators.test_metaestimator_delegation.SubEstimator.decision_function": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_metaestimators.test_metaestimator_delegation.SubEstimator.fit": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_metaestimators.test_metaestimator_delegation.SubEstimator.inverse_transform": {
  "data": {
   "lineno": 73
  },
  "type": "function"
 },
 "sklearn.tests.test_metaestimators.test_metaestimator_delegation.SubEstimator.predict": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_metaestimators.test_metaestimator_delegation.SubEstimator.predict_log_proba": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_metaestimators.test_metaestimator_delegation.SubEstimator.predict_proba": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_metaestimators.test_metaestimator_delegation.SubEstimator.score": {
  "data": {
   "lineno": 103
  },
  "type": "function"
 },
 "sklearn.tests.test_metaestimators.test_metaestimator_delegation.SubEstimator.transform": {
  "data": {
   "lineno": 78
  },
  "type": "function"
 },
 "sklearn.tests.test_metaestimators.test_metaestimator_delegation.hides": {
  "data": {
   "lineno": 53
  },
  "type": "function"
 },
 "sklearn.tests.test_metaestimators.test_metaestimator_delegation.hides.wrapper": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "AttributeError",
    "property",
    "sklearn.tests.test_metaestimators.functools"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_multiclass": {
  "data": {
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.datasets.load_iris",
    "sklearn.tests.test_multiclass.iris",
    "sklearn.tests.test_multiclass.perm",
    "sklearn.tests.test_multiclass.rng"
   ]
  },
  "type": "module"
 },
 "sklearn.tests.test_multiclass.DecisionTreeClassifier": {
  "data": {
   "shadows": "sklearn.tree.DecisionTreeClassifier"
  },
  "type": "import"
 },
 "sklearn.tests.test_multiclass.DecisionTreeRegressor": {
  "data": {
   "shadows": "sklearn.tree.DecisionTreeRegressor"
  },
  "type": "import"
 },
 "sklearn.tests.test_multiclass.ElasticNet": {
  "data": {
   "shadows": "sklearn.linear_model.ElasticNet"
  },
  "type": "import"
 },
 "sklearn.tests.test_multiclass.GridSearchCV": {
  "data": {
   "shadows": "sklearn.model_selection.GridSearchCV"
  },
  "type": "import"
 },
 "sklearn.tests.test_multiclass.Lasso": {
  "data": {
   "shadows": "sklearn.linear_model.Lasso"
  },
  "type": "import"
 },
 "sklearn.tests.test_multiclass.LinearRegression": {
  "data": {
   "shadows": "sklearn.linear_model.LinearRegression"
  },
  "type": "import"
 },
 "sklearn.tests.test_multiclass.LinearSVC": {
  "data": {
   "shadows": "sklearn.svm.LinearSVC"
  },
  "type": "import"
 },
 "sklearn.tests.test_multiclass.LogisticRegression": {
  "data": {
   "shadows": "sklearn.linear_model.LogisticRegression"
  },
  "type": "import"
 },
 "sklearn.tests.test_multiclass.MultinomialNB": {
  "data": {
   "shadows": "sklearn.naive_bayes.MultinomialNB"
  },
  "type": "import"
 },
 "sklearn.tests.test_multiclass.OneVsOneClassifier": {
  "data": {
   "shadows": "sklearn.multiclass.OneVsOneClassifier"
  },
  "type": "import"
 },
 "sklearn.tests.test_multiclass.OneVsRestClassifier": {
  "data": {
   "shadows": "sklearn.multiclass.OneVsRestClassifier"
  },
  "type": "import"
 },
 "sklearn.tests.test_multiclass.OutputCodeClassifier": {
  "data": {
   "shadows": "sklearn.multiclass.OutputCodeClassifier"
  },
  "type": "import"
 },
 "sklearn.tests.test_multiclass.Perceptron": {
  "data": {
   "shadows": "sklearn.linear_model.Perceptron"
  },
  "type": "import"
 },
 "sklearn.tests.test_multiclass.Pipeline": {
  "data": {
   "shadows": "sklearn.pipeline.Pipeline"
  },
  "type": "import"
 },
 "sklearn.tests.test_multiclass.Ridge": {
  "data": {
   "shadows": "sklearn.linear_model.Ridge"
  },
  "type": "import"
 },
 "sklearn.tests.test_multiclass.SGDClassifier": {
  "data": {
   "shadows": "sklearn.linear_model.SGDClassifier"
  },
  "type": "import"
 },
 "sklearn.tests.test_multiclass.SVC": {
  "data": {
   "shadows": "sklearn.svm.SVC"
  },
  "type": "import"
 },
 "sklearn.tests.test_multiclass.assert_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "sklearn.tests.test_multiclass.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.tests.test_multiclass.assert_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.tests.test_multiclass.assert_false": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_false"
  },
  "type": "import"
 },
 "sklearn.tests.test_multiclass.assert_greater": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_greater"
  },
  "type": "import"
 },
 "sklearn.tests.test_multiclass.assert_raise_message": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raise_message"
  },
  "type": "import"
 },
 "sklearn.tests.test_multiclass.assert_raises": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.tests.test_multiclass.assert_raises_regexp": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises_regexp"
  },
  "type": "import"
 },
 "sklearn.tests.test_multiclass.assert_true": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_true"
  },
  "type": "import"
 },
 "sklearn.tests.test_multiclass.assert_warns": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_warns"
  },
  "type": "import"
 },
 "sklearn.tests.test_multiclass.check_classification_targets": {
  "data": {
   "shadows": "sklearn.utils.multiclass.check_classification_targets"
  },
  "type": "import"
 },
 "sklearn.tests.test_multiclass.cross_val_score": {
  "data": {
   "shadows": "sklearn.model_selection.cross_val_score"
  },
  "type": "import"
 },
 "sklearn.tests.test_multiclass.datasets": {
  "data": {
   "shadows": "sklearn.datasets"
  },
  "type": "import"
 },
 "sklearn.tests.test_multiclass.escape": {
  "data": {
   "shadows": "re.escape"
  },
  "type": "import"
 },
 "sklearn.tests.test_multiclass.iris": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "sklearn.tests.test_multiclass.n_classes": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "sklearn.tests.test_multiclass.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.tests.test_multiclass.perm": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "sklearn.tests.test_multiclass.precision_score": {
  "data": {
   "shadows": "sklearn.metrics.precision_score"
  },
  "type": "import"
 },
 "sklearn.tests.test_multiclass.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.tests.test_multiclass.recall_score": {
  "data": {
   "shadows": "sklearn.metrics.recall_score"
  },
  "type": "import"
 },
 "sklearn.tests.test_multiclass.rng": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "sklearn.tests.test_multiclass.shuffle": {
  "data": {
   "shadows": "sklearn.utils.shuffle"
  },
  "type": "import"
 },
 "sklearn.tests.test_multiclass.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.tests.test_multiclass.svm": {
  "data": {
   "shadows": "sklearn.svm"
  },
  "type": "import"
 },
 "sklearn.tests.test_multiclass.test_check_classification_targets": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "sklearn.utils.multiclass.check_classification_targets",
    "sklearn.utils.multiclass.type_of_target",
    "sklearn.utils.testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_multiclass.test_ecoc_exceptions": {
  "data": {
   "lineno": 688,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.multiclass.OutputCodeClassifier",
    "sklearn.svm.LinearSVC",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_multiclass.test_ecoc_fit_predict": {
  "data": {
   "lineno": 693,
   "symbols_in_volume": [
    "len",
    "sklearn.multiclass.OutputCodeClassifier",
    "sklearn.naive_bayes.MultinomialNB",
    "sklearn.svm.LinearSVC",
    "sklearn.tests.test_multiclass.iris",
    "sklearn.tests.test_multiclass.n_classes",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_multiclass.test_ecoc_float_y": {
  "data": {
   "lineno": 718,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.multiclass.OutputCodeClassifier",
    "sklearn.svm.LinearSVC",
    "sklearn.tests.test_multiclass.iris",
    "sklearn.utils.testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_multiclass.test_ecoc_gridsearch": {
  "data": {
   "lineno": 706,
   "symbols_in_volume": [
    "sklearn.model_selection.GridSearchCV",
    "sklearn.multiclass.OutputCodeClassifier",
    "sklearn.svm.LinearSVC",
    "sklearn.tests.test_multiclass.iris",
    "sklearn.tests.test_multiclass.pytest",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_multiclass.test_ovo_decision_function": {
  "data": {
   "lineno": 563,
   "symbols_in_volume": [
    "len",
    "numpy.round",
    "numpy.unique",
    "numpy.zeros",
    "range",
    "set",
    "sklearn.multiclass.OneVsOneClassifier",
    "sklearn.svm.LinearSVC",
    "sklearn.tests.test_multiclass.iris",
    "sklearn.tests.test_multiclass.n_classes",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_greater",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_multiclass.test_ovo_exceptions": {
  "data": {
   "lineno": 484,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.multiclass.OneVsOneClassifier",
    "sklearn.svm.LinearSVC",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_multiclass.test_ovo_fit_on_list": {
  "data": {
   "lineno": 489,
   "symbols_in_volume": [
    "list",
    "sklearn.multiclass.OneVsOneClassifier",
    "sklearn.svm.LinearSVC",
    "sklearn.tests.test_multiclass.iris",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_multiclass.test_ovo_fit_predict": {
  "data": {
   "lineno": 500,
   "symbols_in_volume": [
    "len",
    "sklearn.multiclass.OneVsOneClassifier",
    "sklearn.naive_bayes.MultinomialNB",
    "sklearn.svm.LinearSVC",
    "sklearn.tests.test_multiclass.iris",
    "sklearn.tests.test_multiclass.n_classes",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_multiclass.test_ovo_float_y": {
  "data": {
   "lineno": 679,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.multiclass.OneVsOneClassifier",
    "sklearn.svm.LinearSVC",
    "sklearn.tests.test_multiclass.iris",
    "sklearn.utils.testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_multiclass.test_ovo_gridsearch": {
  "data": {
   "lineno": 610,
   "symbols_in_volume": [
    "sklearn.model_selection.GridSearchCV",
    "sklearn.multiclass.OneVsOneClassifier",
    "sklearn.svm.LinearSVC",
    "sklearn.tests.test_multiclass.iris",
    "sklearn.tests.test_multiclass.pytest",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_multiclass.test_ovo_one_class": {
  "data": {
   "lineno": 670,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "numpy.eye",
    "sklearn.multiclass.OneVsOneClassifier",
    "sklearn.svm.LinearSVC",
    "sklearn.utils.testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_multiclass.test_ovo_partial_fit_predict": {
  "data": {
   "lineno": 512,
   "symbols_in_volume": [
    "ValueError",
    "hasattr",
    "len",
    "numpy.mean",
    "numpy.random.rand",
    "numpy.unique",
    "re.escape",
    "sklearn.datasets.load_iris",
    "sklearn.multiclass.OneVsOneClassifier",
    "sklearn.naive_bayes.MultinomialNB",
    "sklearn.svm.SVC",
    "sklearn.tests.test_multiclass.n_classes",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_false",
    "sklearn.utils.testing.assert_greater",
    "sklearn.utils.testing.assert_raises_regexp"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_multiclass.test_ovo_string_y": {
  "data": {
   "lineno": 660,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.eye",
    "sklearn.multiclass.OneVsOneClassifier",
    "sklearn.svm.LinearSVC",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_multiclass.test_ovo_ties": {
  "data": {
   "lineno": 621,
   "symbols_in_volume": [
    "numpy.argmax",
    "numpy.array",
    "numpy.round",
    "sklearn.linear_model.Perceptron",
    "sklearn.multiclass.OneVsOneClassifier",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_multiclass.test_ovo_ties2": {
  "data": {
   "lineno": 646,
   "symbols_in_volume": [
    "numpy.array",
    "range",
    "sklearn.linear_model.Perceptron",
    "sklearn.multiclass.OneVsOneClassifier",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_multiclass.test_ovr_always_present": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "UserWarning",
    "numpy.array",
    "numpy.ones",
    "numpy.unique",
    "numpy.zeros",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.multiclass.OneVsRestClassifier",
    "sklearn.tests.test_multiclass.pytest",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_warns"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_multiclass.test_ovr_binary": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "conduct_test",
    "numpy.array",
    "set",
    "sklearn.linear_model.ElasticNet",
    "sklearn.linear_model.LinearRegression",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.linear_model.Ridge",
    "sklearn.naive_bayes.MultinomialNB",
    "sklearn.svm.LinearSVC",
    "sklearn.svm.SVC",
    "sklearn.tests.test_multiclass.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_multiclass.test_ovr_binary.conduct_test": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "hasattr",
    "len",
    "numpy.argmax",
    "numpy.array",
    "set",
    "sklearn.multiclass.OneVsRestClassifier",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_multiclass.test_ovr_coef_": {
  "data": {
   "lineno": 455,
   "symbols_in_volume": [
    "scipy.sparse.csr_matrix",
    "scipy.sparse.issparse",
    "sklearn.multiclass.OneVsRestClassifier",
    "sklearn.svm.LinearSVC",
    "sklearn.svm.SVC",
    "sklearn.tests.test_multiclass.iris",
    "sklearn.tests.test_multiclass.n_classes",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_multiclass.test_ovr_coef_exceptions": {
  "data": {
   "lineno": 472,
   "symbols_in_volume": [
    "AttributeError",
    "ValueError",
    "sklearn.multiclass.OneVsRestClassifier",
    "sklearn.svm.LinearSVC",
    "sklearn.tests.test_multiclass.iris",
    "sklearn.tree.DecisionTreeClassifier",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_multiclass.test_ovr_exceptions": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "sklearn.multiclass.OneVsRestClassifier",
    "sklearn.naive_bayes.MultinomialNB",
    "sklearn.svm.LinearSVC",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_multiclass.test_ovr_fit_predict": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "len",
    "numpy.mean",
    "sklearn.multiclass.OneVsRestClassifier",
    "sklearn.naive_bayes.MultinomialNB",
    "sklearn.svm.LinearSVC",
    "sklearn.tests.test_multiclass.iris",
    "sklearn.tests.test_multiclass.n_classes",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_greater"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_multiclass.test_ovr_fit_predict_sparse": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "int",
    "scipy.sparse.coo_matrix",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.dok_matrix",
    "scipy.sparse.issparse",
    "scipy.sparse.lil_matrix",
    "sklearn.datasets.make_multilabel_classification",
    "sklearn.multiclass.OneVsRestClassifier",
    "sklearn.naive_bayes.MultinomialNB",
    "sklearn.svm.SVC",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_true",
    "sparse"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_multiclass.test_ovr_fit_predict_svc": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": [
    "len",
    "sklearn.multiclass.OneVsRestClassifier",
    "sklearn.svm.SVC",
    "sklearn.tests.test_multiclass.iris",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_greater"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_multiclass.test_ovr_gridsearch": {
  "data": {
   "lineno": 432,
   "symbols_in_volume": [
    "sklearn.model_selection.GridSearchCV",
    "sklearn.multiclass.OneVsRestClassifier",
    "sklearn.svm.LinearSVC",
    "sklearn.tests.test_multiclass.iris",
    "sklearn.tests.test_multiclass.pytest",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_multiclass.test_ovr_multiclass": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "numpy.array",
    "set",
    "sklearn.linear_model.ElasticNet",
    "sklearn.linear_model.LinearRegression",
    "sklearn.linear_model.Ridge",
    "sklearn.multiclass.OneVsRestClassifier",
    "sklearn.naive_bayes.MultinomialNB",
    "sklearn.svm.LinearSVC",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_multiclass.test_ovr_multilabel": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.linear_model.ElasticNet",
    "sklearn.linear_model.Lasso",
    "sklearn.linear_model.LinearRegression",
    "sklearn.linear_model.Ridge",
    "sklearn.multiclass.OneVsRestClassifier",
    "sklearn.naive_bayes.MultinomialNB",
    "sklearn.svm.LinearSVC",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_multiclass.test_ovr_multilabel_dataset": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": [
    "sklearn.datasets.make_multilabel_classification",
    "sklearn.externals.six.moves.zip",
    "sklearn.metrics.precision_score",
    "sklearn.metrics.recall_score",
    "sklearn.multiclass.OneVsRestClassifier",
    "sklearn.naive_bayes.MultinomialNB",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_multiclass.test_ovr_multilabel_decision_function": {
  "data": {
   "lineno": 406,
   "symbols_in_volume": [
    "int",
    "sklearn.datasets.make_multilabel_classification",
    "sklearn.multiclass.OneVsRestClassifier",
    "sklearn.svm.SVC",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_multiclass.test_ovr_multilabel_predict_proba": {
  "data": {
   "lineno": 338,
   "symbols_in_volume": [
    "hasattr",
    "sklearn.datasets.make_multilabel_classification",
    "sklearn.model_selection.GridSearchCV",
    "sklearn.multiclass.OneVsRestClassifier",
    "sklearn.naive_bayes.MultinomialNB",
    "sklearn.svm.SVC",
    "sklearn.svm.SVR",
    "sklearn.tests.test_multiclass.pytest",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_false",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_multiclass.test_ovr_ovo_regressor": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "len",
    "numpy.mean",
    "numpy.unique",
    "sklearn.multiclass.OneVsOneClassifier",
    "sklearn.multiclass.OneVsRestClassifier",
    "sklearn.tests.test_multiclass.iris",
    "sklearn.tests.test_multiclass.n_classes",
    "sklearn.tree.DecisionTreeRegressor",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_greater"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_multiclass.test_ovr_partial_fit": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "hasattr",
    "len",
    "numpy.abs",
    "numpy.mean",
    "numpy.random.randn",
    "numpy.unique",
    "sklearn.linear_model.SGDClassifier",
    "sklearn.multiclass.OneVsRestClassifier",
    "sklearn.naive_bayes.MultinomialNB",
    "sklearn.svm.SVC",
    "sklearn.tests.test_multiclass.iris",
    "sklearn.utils.shuffle",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_false",
    "sklearn.utils.testing.assert_greater"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_multiclass.test_ovr_partial_fit_exceptions": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "ValueError",
    "numpy.abs",
    "numpy.random.randn",
    "numpy.unique",
    "sklearn.multiclass.OneVsRestClassifier",
    "sklearn.naive_bayes.MultinomialNB",
    "sklearn.utils.testing.assert_raises_regexp"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_multiclass.test_ovr_pipeline": {
  "data": {
   "lineno": 443,
   "symbols_in_volume": [
    "sklearn.multiclass.OneVsRestClassifier",
    "sklearn.pipeline.Pipeline",
    "sklearn.tests.test_multiclass.iris",
    "sklearn.tree.DecisionTreeClassifier",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_multiclass.test_ovr_single_label_decision_function": {
  "data": {
   "lineno": 421,
   "symbols_in_volume": [
    "sklearn.datasets.make_classification",
    "sklearn.multiclass.OneVsRestClassifier",
    "sklearn.svm.SVC",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_multiclass.test_ovr_single_label_predict_proba": {
  "data": {
   "lineno": 384,
   "symbols_in_volume": [
    "hasattr",
    "numpy.array",
    "sklearn.multiclass.OneVsRestClassifier",
    "sklearn.naive_bayes.MultinomialNB",
    "sklearn.svm.SVR",
    "sklearn.tests.test_multiclass.iris",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_false"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_multiclass.test_pairwise_attribute": {
  "data": {
   "lineno": 746,
   "symbols_in_volume": [
    "MultiClassClassifier",
    "sklearn.multiclass.OneVsOneClassifier",
    "sklearn.multiclass.OneVsRestClassifier",
    "sklearn.svm.SVC",
    "sklearn.utils.testing.assert_false",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_multiclass.test_pairwise_cross_val_score": {
  "data": {
   "lineno": 758,
   "symbols_in_volume": [
    "MultiClassClassifier",
    "numpy.dot",
    "sklearn.model_selection.cross_val_score",
    "sklearn.multiclass.OneVsOneClassifier",
    "sklearn.multiclass.OneVsRestClassifier",
    "sklearn.svm.SVC",
    "sklearn.tests.test_multiclass.iris",
    "sklearn.tests.test_multiclass.pytest",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_multiclass.test_pairwise_indices": {
  "data": {
   "lineno": 730,
   "symbols_in_volume": [
    "len",
    "numpy.dot",
    "sklearn.multiclass.OneVsOneClassifier",
    "sklearn.svm.SVC",
    "sklearn.tests.test_multiclass.iris",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_multiclass.type_of_target": {
  "data": {
   "shadows": "sklearn.utils.multiclass.type_of_target"
  },
  "type": "import"
 },
 "sklearn.tests.test_multiclass.zip": {
  "data": {
   "shadows": "sklearn.externals.six.moves.zip"
  },
  "type": "import"
 },
 "sklearn.tests.test_multioutput": {
  "data": {
   "symbols_in_volume": [
    "len",
    "list",
    "map",
    "numpy.column_stack",
    "numpy.unique",
    "sklearn.datasets.load_iris",
    "sklearn.tests.test_multioutput.X",
    "sklearn.tests.test_multioutput.iris",
    "sklearn.tests.test_multioutput.y",
    "sklearn.tests.test_multioutput.y1",
    "sklearn.tests.test_multioutput.y2",
    "sklearn.tests.test_multioutput.y3",
    "sklearn.utils.shuffle"
   ]
  },
  "type": "module"
 },
 "sklearn.tests.test_multioutput.ClassifierChain": {
  "data": {
   "shadows": "sklearn.multioutput.ClassifierChain"
  },
  "type": "import"
 },
 "sklearn.tests.test_multioutput.ClassifierMixin": {
  "data": {
   "shadows": "sklearn.base.ClassifierMixin"
  },
  "type": "import"
 },
 "sklearn.tests.test_multioutput.GradientBoostingRegressor": {
  "data": {
   "shadows": "sklearn.ensemble.GradientBoostingRegressor"
  },
  "type": "import"
 },
 "sklearn.tests.test_multioutput.Lasso": {
  "data": {
   "shadows": "sklearn.linear_model.Lasso"
  },
  "type": "import"
 },
 "sklearn.tests.test_multioutput.LinearSVC": {
  "data": {
   "shadows": "sklearn.svm.LinearSVC"
  },
  "type": "import"
 },
 "sklearn.tests.test_multioutput.LogisticRegression": {
  "data": {
   "shadows": "sklearn.linear_model.LogisticRegression"
  },
  "type": "import"
 },
 "sklearn.tests.test_multioutput.MultiOutputClassifier": {
  "data": {
   "shadows": "sklearn.multioutput.MultiOutputClassifier"
  },
  "type": "import"
 },
 "sklearn.tests.test_multioutput.MultiOutputRegressor": {
  "data": {
   "shadows": "sklearn.multioutput.MultiOutputRegressor"
  },
  "type": "import"
 },
 "sklearn.tests.test_multioutput.NotFittedError": {
  "data": {
   "shadows": "sklearn.exceptions.NotFittedError"
  },
  "type": "import"
 },
 "sklearn.tests.test_multioutput.OneVsRestClassifier": {
  "data": {
   "shadows": "sklearn.multiclass.OneVsRestClassifier"
  },
  "type": "import"
 },
 "sklearn.tests.test_multioutput.RandomForestClassifier": {
  "data": {
   "shadows": "sklearn.ensemble.RandomForestClassifier"
  },
  "type": "import"
 },
 "sklearn.tests.test_multioutput.RegressorChain": {
  "data": {
   "shadows": "sklearn.multioutput.RegressorChain"
  },
  "type": "import"
 },
 "sklearn.tests.test_multioutput.Ridge": {
  "data": {
   "shadows": "sklearn.linear_model.Ridge"
  },
  "type": "import"
 },
 "sklearn.tests.test_multioutput.SGDClassifier": {
  "data": {
   "shadows": "sklearn.linear_model.SGDClassifier"
  },
  "type": "import"
 },
 "sklearn.tests.test_multioutput.SGDRegressor": {
  "data": {
   "shadows": "sklearn.linear_model.SGDRegressor"
  },
  "type": "import"
 },
 "sklearn.tests.test_multioutput.X": {
  "data": {
   "lineno": 154
  },
  "type": "constant"
 },
 "sklearn.tests.test_multioutput.assert_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "sklearn.tests.test_multioutput.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.tests.test_multioutput.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.tests.test_multioutput.assert_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.tests.test_multioutput.assert_false": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_false"
  },
  "type": "import"
 },
 "sklearn.tests.test_multioutput.assert_greater": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_greater"
  },
  "type": "import"
 },
 "sklearn.tests.test_multioutput.assert_not_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_not_equal"
  },
  "type": "import"
 },
 "sklearn.tests.test_multioutput.assert_raise_message": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raise_message"
  },
  "type": "import"
 },
 "sklearn.tests.test_multioutput.assert_raises": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.tests.test_multioutput.assert_raises_regex": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises_regex"
  },
  "type": "import"
 },
 "sklearn.tests.test_multioutput.classes": {
  "data": {
   "lineno": 162
  },
  "type": "constant"
 },
 "sklearn.tests.test_multioutput.clone": {
  "data": {
   "shadows": "sklearn.base.clone"
  },
  "type": "import"
 },
 "sklearn.tests.test_multioutput.cpu_count": {
  "data": {
   "shadows": "sklearn.utils.cpu_count"
  },
  "type": "import"
 },
 "sklearn.tests.test_multioutput.datasets": {
  "data": {
   "shadows": "sklearn.datasets"
  },
  "type": "import"
 },
 "sklearn.tests.test_multioutput.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sklearn.tests.test_multioutput.generate_multilabel_dataset_with_correlations": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "format",
    "int",
    "numpy.array",
    "sklearn.datasets.make_classification",
    "sklearn.tests.test_multioutput.X",
    "sklearn.tests.test_multioutput.y"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_multioutput.iris": {
  "data": {
   "lineno": 152
  },
  "type": "constant"
 },
 "sklearn.tests.test_multioutput.jaccard_similarity_score": {
  "data": {
   "shadows": "sklearn.metrics.jaccard_similarity_score"
  },
  "type": "import"
 },
 "sklearn.tests.test_multioutput.make_classification": {
  "data": {
   "shadows": "sklearn.datasets.make_classification"
  },
  "type": "import"
 },
 "sklearn.tests.test_multioutput.mean_squared_error": {
  "data": {
   "shadows": "sklearn.metrics.mean_squared_error"
  },
  "type": "import"
 },
 "sklearn.tests.test_multioutput.n_classes": {
  "data": {
   "lineno": 161
  },
  "type": "constant"
 },
 "sklearn.tests.test_multioutput.n_outputs": {
  "data": {
   "lineno": 160
  },
  "type": "constant"
 },
 "sklearn.tests.test_multioutput.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.tests.test_multioutput.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.tests.test_multioutput.shuffle": {
  "data": {
   "shadows": "sklearn.utils.shuffle"
  },
  "type": "import"
 },
 "sklearn.tests.test_multioutput.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.tests.test_multioutput.test_base_chain_crossval_fit_and_predict": {
  "data": {
   "lineno": 487,
   "symbols_in_volume": [
    "isinstance",
    "numpy.all",
    "sklearn.base.clone",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.linear_model.Ridge",
    "sklearn.metrics.jaccard_similarity_score",
    "sklearn.metrics.mean_squared_error",
    "sklearn.multioutput.ClassifierChain",
    "sklearn.multioutput.RegressorChain",
    "sklearn.tests.test_multioutput.X",
    "sklearn.tests.test_multioutput.generate_multilabel_dataset_with_correlations",
    "sklearn.tests.test_multioutput.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_multioutput.test_base_chain_fit_and_predict": {
  "data": {
   "lineno": 430,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "range",
    "sklearn.base.ClassifierMixin",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.linear_model.Ridge",
    "sklearn.multioutput.ClassifierChain",
    "sklearn.multioutput.RegressorChain",
    "sklearn.tests.test_multioutput.X",
    "sklearn.tests.test_multioutput.generate_multilabel_dataset_with_correlations",
    "sklearn.tests.test_multioutput.pytest",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_multioutput.test_base_chain_fit_and_predict_with_sparse_data_and_cv": {
  "data": {
   "lineno": 451,
   "symbols_in_volume": [
    "scipy.sparse.csr_matrix",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.linear_model.Ridge",
    "sklearn.multioutput.ClassifierChain",
    "sklearn.multioutput.RegressorChain",
    "sklearn.tests.test_multioutput.X",
    "sklearn.tests.test_multioutput.generate_multilabel_dataset_with_correlations",
    "sklearn.tests.test_multioutput.pytest",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_multioutput.test_base_chain_random_order": {
  "data": {
   "lineno": 465,
   "symbols_in_volume": [
    "len",
    "list",
    "range",
    "set",
    "sklearn.base.clone",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.linear_model.Ridge",
    "sklearn.multioutput.ClassifierChain",
    "sklearn.multioutput.RegressorChain",
    "sklearn.tests.test_multioutput.X",
    "sklearn.tests.test_multioutput.generate_multilabel_dataset_with_correlations",
    "sklearn.tests.test_multioutput.pytest",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_not_equal",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_multioutput.test_classifier_chain_fit_and_predict_with_linear_svc": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": [
    "hasattr",
    "sklearn.multioutput.ClassifierChain",
    "sklearn.svm.LinearSVC",
    "sklearn.tests.test_multioutput.X",
    "sklearn.tests.test_multioutput.generate_multilabel_dataset_with_correlations",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_multioutput.test_classifier_chain_fit_and_predict_with_sparse_data": {
  "data": {
   "lineno": 388,
   "symbols_in_volume": [
    "scipy.sparse.csr_matrix",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.multioutput.ClassifierChain",
    "sklearn.tests.test_multioutput.X",
    "sklearn.tests.test_multioutput.generate_multilabel_dataset_with_correlations",
    "sklearn.tests.test_multioutput.pytest",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_multioutput.test_classifier_chain_vs_independent_models": {
  "data": {
   "lineno": 406,
   "symbols_in_volume": [
    "sklearn.linear_model.LogisticRegression",
    "sklearn.metrics.jaccard_similarity_score",
    "sklearn.multiclass.OneVsRestClassifier",
    "sklearn.multioutput.ClassifierChain",
    "sklearn.tests.test_multioutput.X",
    "sklearn.tests.test_multioutput.generate_multilabel_dataset_with_correlations",
    "sklearn.tests.test_multioutput.pytest",
    "sklearn.utils.testing.assert_greater"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_multioutput.test_multi_output_classification": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "len",
    "list",
    "numpy.argmax",
    "numpy.dstack",
    "range",
    "sklearn.base.clone",
    "sklearn.ensemble.RandomForestClassifier",
    "sklearn.multioutput.MultiOutputClassifier",
    "sklearn.tests.test_multioutput.X",
    "sklearn.tests.test_multioutput.n_classes",
    "sklearn.tests.test_multioutput.n_outputs",
    "sklearn.tests.test_multioutput.y",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_multioutput.test_multi_output_classification_partial_fit": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "range",
    "sklearn.base.clone",
    "sklearn.linear_model.SGDClassifier",
    "sklearn.multioutput.MultiOutputClassifier",
    "sklearn.tests.test_multioutput.X",
    "sklearn.tests.test_multioutput.classes",
    "sklearn.tests.test_multioutput.n_outputs",
    "sklearn.tests.test_multioutput.y",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_multioutput.test_multi_output_classification_partial_fit_no_first_classes_exception": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.linear_model.SGDClassifier",
    "sklearn.multioutput.MultiOutputClassifier",
    "sklearn.tests.test_multioutput.X",
    "sklearn.tests.test_multioutput.y",
    "sklearn.utils.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_multioutput.test_multi_output_classification_partial_fit_parallelism": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "sklearn.linear_model.SGDClassifier",
    "sklearn.multioutput.MultiOutputClassifier",
    "sklearn.tests.test_multioutput.X",
    "sklearn.tests.test_multioutput.classes",
    "sklearn.tests.test_multioutput.y",
    "sklearn.utils.cpu_count",
    "sklearn.utils.testing.assert_false"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_multioutput.test_multi_output_classification_partial_fit_sample_weights": {
  "data": {
   "lineno": 322,
   "symbols_in_volume": [
    "numpy.asarray",
    "sklearn.linear_model.SGDClassifier",
    "sklearn.multioutput.MultiOutputClassifier",
    "sklearn.tests.test_multioutput.X",
    "sklearn.tests.test_multioutput.y",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_multioutput.test_multi_output_classification_sample_weights": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "numpy.asarray",
    "sklearn.ensemble.RandomForestClassifier",
    "sklearn.multioutput.MultiOutputClassifier",
    "sklearn.tests.test_multioutput.X",
    "sklearn.tests.test_multioutput.y",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_multioutput.test_multi_output_exceptions": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": [
    "ValueError",
    "numpy.column_stack",
    "sklearn.exceptions.NotFittedError",
    "sklearn.multioutput.MultiOutputClassifier",
    "sklearn.svm.LinearSVC",
    "sklearn.tests.test_multioutput.X",
    "sklearn.tests.test_multioutput.y",
    "sklearn.tests.test_multioutput.y1",
    "sklearn.tests.test_multioutput.y2",
    "sklearn.utils.testing.assert_raise_message",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_multioutput.test_multi_target_regression": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "numpy.zeros_like",
    "range",
    "sklearn.datasets.make_regression",
    "sklearn.ensemble.GradientBoostingRegressor",
    "sklearn.multioutput.MultiOutputRegressor",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_multioutput.test_multi_target_regression_one_target": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.datasets.make_regression",
    "sklearn.ensemble.GradientBoostingRegressor",
    "sklearn.multioutput.MultiOutputRegressor",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_multioutput.test_multi_target_regression_partial_fit": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "hasattr",
    "numpy.zeros_like",
    "range",
    "sklearn.datasets.make_regression",
    "sklearn.linear_model.Lasso",
    "sklearn.linear_model.SGDRegressor",
    "sklearn.multioutput.MultiOutputRegressor",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_false"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_multioutput.test_multi_target_sample_weight_partial_fit": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "sklearn.linear_model.SGDRegressor",
    "sklearn.multioutput.MultiOutputRegressor",
    "sklearn.utils.testing.assert_not_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_multioutput.test_multi_target_sample_weights": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "sklearn.ensemble.GradientBoostingRegressor",
    "sklearn.multioutput.MultiOutputRegressor",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_multioutput.test_multi_target_sample_weights_api": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.ensemble.GradientBoostingRegressor",
    "sklearn.linear_model.Lasso",
    "sklearn.multioutput.MultiOutputRegressor",
    "sklearn.utils.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_multioutput.test_multi_target_sparse_regression": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "scipy.sparse.coo_matrix",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.dok_matrix",
    "scipy.sparse.lil_matrix",
    "sklearn.datasets.make_regression",
    "sklearn.linear_model.Lasso",
    "sklearn.multioutput.MultiOutputRegressor",
    "sklearn.utils.testing.assert_almost_equal",
    "sparse"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_multioutput.test_multiclass_multioutput_estimator": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "list",
    "range",
    "sklearn.base.clone",
    "sklearn.multiclass.OneVsRestClassifier",
    "sklearn.multioutput.MultiOutputClassifier",
    "sklearn.svm.LinearSVC",
    "sklearn.tests.test_multioutput.X",
    "sklearn.tests.test_multioutput.n_outputs",
    "sklearn.tests.test_multioutput.y",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_multioutput.test_multiclass_multioutput_estimator_predict_proba": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "numpy.concatenate",
    "numpy.random.RandomState",
    "range",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.multioutput.MultiOutputClassifier",
    "sklearn.tests.test_multioutput.X",
    "sklearn.tests.test_multioutput.y1",
    "sklearn.tests.test_multioutput.y2",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_multioutput.y": {
  "data": {
   "lineno": 158
  },
  "type": "constant"
 },
 "sklearn.tests.test_multioutput.y1": {
  "data": {
   "lineno": 155
  },
  "type": "constant"
 },
 "sklearn.tests.test_multioutput.y2": {
  "data": {
   "lineno": 156
  },
  "type": "constant"
 },
 "sklearn.tests.test_multioutput.y3": {
  "data": {
   "lineno": 157
  },
  "type": "constant"
 },
 "sklearn.tests.test_naive_bayes": {
  "data": {
   "symbols_in_volume": [
    "numpy.array",
    "numpy.int",
    "numpy.random.RandomState",
    "sklearn.tests.test_naive_bayes.rng"
   ]
  },
  "type": "module"
 },
 "sklearn.tests.test_naive_bayes.BernoulliNB": {
  "data": {
   "shadows": "sklearn.naive_bayes.BernoulliNB"
  },
  "type": "import"
 },
 "sklearn.tests.test_naive_bayes.BytesIO": {
  "data": {
   "shadows": "io.BytesIO"
  },
  "type": "import"
 },
 "sklearn.tests.test_naive_bayes.ComplementNB": {
  "data": {
   "shadows": "sklearn.naive_bayes.ComplementNB"
  },
  "type": "import"
 },
 "sklearn.tests.test_naive_bayes.GaussianNB": {
  "data": {
   "shadows": "sklearn.naive_bayes.GaussianNB"
  },
  "type": "import"
 },
 "sklearn.tests.test_naive_bayes.MultinomialNB": {
  "data": {
   "shadows": "sklearn.naive_bayes.MultinomialNB"
  },
  "type": "import"
 },
 "sklearn.tests.test_naive_bayes.X": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "sklearn.tests.test_naive_bayes.X1": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "sklearn.tests.test_naive_bayes.X2": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "sklearn.tests.test_naive_bayes.assert_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "sklearn.tests.test_naive_bayes.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.tests.test_naive_bayes.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.tests.test_naive_bayes.assert_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.tests.test_naive_bayes.assert_greater": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_greater"
  },
  "type": "import"
 },
 "sklearn.tests.test_naive_bayes.assert_raise_message": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raise_message"
  },
  "type": "import"
 },
 "sklearn.tests.test_naive_bayes.assert_raises": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.tests.test_naive_bayes.assert_warns": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_warns"
  },
  "type": "import"
 },
 "sklearn.tests.test_naive_bayes.check_partial_fit": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "cls",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_naive_bayes.check_sample_weight_multiclass": {
  "data": {
   "lineno": 411,
   "symbols_in_volume": [
    "cls",
    "numpy.array",
    "numpy.float64",
    "sklearn.tests.test_naive_bayes.X",
    "sklearn.tests.test_naive_bayes.y",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_naive_bayes.cross_val_score": {
  "data": {
   "shadows": "sklearn.model_selection.cross_val_score"
  },
  "type": "import"
 },
 "sklearn.tests.test_naive_bayes.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sklearn.tests.test_naive_bayes.load_digits": {
  "data": {
   "shadows": "sklearn.datasets.load_digits"
  },
  "type": "import"
 },
 "sklearn.tests.test_naive_bayes.load_iris": {
  "data": {
   "shadows": "sklearn.datasets.load_iris"
  },
  "type": "import"
 },
 "sklearn.tests.test_naive_bayes.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.tests.test_naive_bayes.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "sklearn.tests.test_naive_bayes.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.tests.test_naive_bayes.rng": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "sklearn.tests.test_naive_bayes.scipy.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.tests.test_naive_bayes.test_alpha": {
  "data": {
   "lineno": 634,
   "symbols_in_volume": [
    "UserWarning",
    "ValueError",
    "numpy.array",
    "sklearn.naive_bayes.BernoulliNB",
    "sklearn.naive_bayes.MultinomialNB",
    "sklearn.tests.test_naive_bayes.X",
    "sklearn.tests.test_naive_bayes.y",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_raise_message",
    "sklearn.utils.testing.assert_warns"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_naive_bayes.test_alpha_vector": {
  "data": {
   "lineno": 680,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "numpy.log",
    "sklearn.naive_bayes.MultinomialNB",
    "sklearn.tests.test_naive_bayes.X",
    "sklearn.tests.test_naive_bayes.y",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_naive_bayes.test_bnb": {
  "data": {
   "lineno": 513,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.exp",
    "numpy.sum",
    "sklearn.naive_bayes.BernoulliNB",
    "sklearn.tests.test_naive_bayes.X",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_naive_bayes.test_check_accuracy_on_digits": {
  "data": {
   "lineno": 456,
   "symbols_in_volume": [
    "numpy.logical_or",
    "sklearn.datasets.load_digits",
    "sklearn.model_selection.cross_val_score",
    "sklearn.naive_bayes.BernoulliNB",
    "sklearn.naive_bayes.GaussianNB",
    "sklearn.naive_bayes.MultinomialNB",
    "sklearn.tests.test_naive_bayes.X",
    "sklearn.tests.test_naive_bayes.y",
    "sklearn.utils.testing.assert_greater"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_naive_bayes.test_check_update_with_no_data": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "numpy.empty",
    "sklearn.naive_bayes.GaussianNB._update_mean_variance",
    "sklearn.tests.test_naive_bayes.X",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_naive_bayes.test_cnb": {
  "data": {
   "lineno": 558,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "numpy.log",
    "numpy.zeros",
    "range",
    "sklearn.naive_bayes.ComplementNB",
    "sklearn.tests.test_naive_bayes.X",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_naive_bayes.test_coef_intercept_shape": {
  "data": {
   "lineno": 444,
   "symbols_in_volume": [
    "sklearn.naive_bayes.BernoulliNB",
    "sklearn.naive_bayes.MultinomialNB",
    "sklearn.tests.test_naive_bayes.X",
    "sklearn.tests.test_naive_bayes.y",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_naive_bayes.test_discrete_prior": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "cls",
    "numpy.array",
    "numpy.log",
    "sklearn.naive_bayes.BernoulliNB",
    "sklearn.naive_bayes.MultinomialNB",
    "sklearn.tests.test_naive_bayes.X2",
    "sklearn.tests.test_naive_bayes.y2",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_naive_bayes.test_discretenb_partial_fit": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "cls",
    "sklearn.naive_bayes.BernoulliNB",
    "sklearn.naive_bayes.MultinomialNB",
    "sklearn.tests.test_naive_bayes.check_partial_fit",
    "sklearn.tests.test_naive_bayes.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_naive_bayes.test_discretenb_pickle": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "cls",
    "io.BytesIO",
    "numpy.unique",
    "sklearn.naive_bayes.BernoulliNB",
    "sklearn.naive_bayes.GaussianNB",
    "sklearn.naive_bayes.MultinomialNB",
    "sklearn.tests.test_naive_bayes.X2",
    "sklearn.tests.test_naive_bayes.pickle",
    "sklearn.tests.test_naive_bayes.pytest",
    "sklearn.tests.test_naive_bayes.y2",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_naive_bayes.test_discretenb_predict_proba": {
  "data": {
   "lineno": 327,
   "symbols_in_volume": [
    "cls",
    "numpy.array",
    "numpy.exp",
    "numpy.sum",
    "sklearn.externals.six.moves.zip",
    "sklearn.naive_bayes.BernoulliNB",
    "sklearn.naive_bayes.MultinomialNB",
    "sklearn.tests.test_naive_bayes.X",
    "sklearn.tests.test_naive_bayes.y",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_naive_bayes.test_discretenb_provide_prior": {
  "data": {
   "lineno": 370,
   "symbols_in_volume": [
    "ValueError",
    "cls",
    "numpy.array",
    "numpy.exp",
    "sklearn.naive_bayes.BernoulliNB",
    "sklearn.naive_bayes.MultinomialNB",
    "sklearn.tests.test_naive_bayes.pytest",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_naive_bayes.test_discretenb_provide_prior_with_partial_fit": {
  "data": {
   "lineno": 385,
   "symbols_in_volume": [
    "cls",
    "sklearn.datasets.load_iris",
    "sklearn.model_selection.train_test_split",
    "sklearn.naive_bayes.BernoulliNB",
    "sklearn.naive_bayes.MultinomialNB",
    "sklearn.tests.test_naive_bayes.pytest",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_naive_bayes.test_discretenb_uniform_prior": {
  "data": {
   "lineno": 358,
   "symbols_in_volume": [
    "cls",
    "numpy.array",
    "numpy.exp",
    "sklearn.naive_bayes.BernoulliNB",
    "sklearn.naive_bayes.MultinomialNB",
    "sklearn.tests.test_naive_bayes.pytest",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_naive_bayes.test_feature_log_prob_bnb": {
  "data": {
   "lineno": 490,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.log",
    "numpy.tile",
    "sklearn.naive_bayes.BernoulliNB",
    "sklearn.tests.test_naive_bayes.X",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_naive_bayes.test_gnb": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "ValueError",
    "numpy.log",
    "sklearn.naive_bayes.GaussianNB",
    "sklearn.tests.test_naive_bayes.X",
    "sklearn.tests.test_naive_bayes.y",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_naive_bayes.test_gnb_neg_priors": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "sklearn.naive_bayes.GaussianNB",
    "sklearn.tests.test_naive_bayes.X",
    "sklearn.tests.test_naive_bayes.y",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_naive_bayes.test_gnb_partial_fit": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "numpy.unique",
    "sklearn.naive_bayes.GaussianNB",
    "sklearn.tests.test_naive_bayes.X",
    "sklearn.tests.test_naive_bayes.y",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_naive_bayes.test_gnb_pfit_wrong_nb_features": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "ValueError",
    "numpy.hstack",
    "sklearn.naive_bayes.GaussianNB",
    "sklearn.tests.test_naive_bayes.X",
    "sklearn.tests.test_naive_bayes.y",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_naive_bayes.test_gnb_prior": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.naive_bayes.GaussianNB",
    "sklearn.tests.test_naive_bayes.X",
    "sklearn.tests.test_naive_bayes.X1",
    "sklearn.tests.test_naive_bayes.y",
    "sklearn.tests.test_naive_bayes.y1",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_naive_bayes.test_gnb_prior_greater_one": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "sklearn.naive_bayes.GaussianNB",
    "sklearn.tests.test_naive_bayes.X",
    "sklearn.tests.test_naive_bayes.y",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_naive_bayes.test_gnb_prior_large_bias": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.naive_bayes.GaussianNB",
    "sklearn.tests.test_naive_bayes.X",
    "sklearn.tests.test_naive_bayes.y",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_naive_bayes.test_gnb_priors": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.naive_bayes.GaussianNB",
    "sklearn.tests.test_naive_bayes.X",
    "sklearn.tests.test_naive_bayes.y",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_naive_bayes.test_gnb_priors_sum_isclose": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.naive_bayes.GaussianNB",
    "sklearn.tests.test_naive_bayes.X"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_naive_bayes.test_gnb_sample_weight": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "numpy.bincount",
    "numpy.ones",
    "sklearn.naive_bayes.GaussianNB",
    "sklearn.tests.test_naive_bayes.X",
    "sklearn.tests.test_naive_bayes.rng",
    "sklearn.tests.test_naive_bayes.y",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_naive_bayes.test_gnb_wrong_nb_priors": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "sklearn.naive_bayes.GaussianNB",
    "sklearn.tests.test_naive_bayes.X",
    "sklearn.tests.test_naive_bayes.y",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_naive_bayes.test_input_check_fit": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "ValueError",
    "cls",
    "sklearn.naive_bayes.BernoulliNB",
    "sklearn.naive_bayes.GaussianNB",
    "sklearn.naive_bayes.MultinomialNB",
    "sklearn.tests.test_naive_bayes.X2",
    "sklearn.tests.test_naive_bayes.pytest",
    "sklearn.tests.test_naive_bayes.y2",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_naive_bayes.test_input_check_partial_fit": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "ValueError",
    "cls",
    "numpy.arange",
    "numpy.unique",
    "sklearn.naive_bayes.BernoulliNB",
    "sklearn.naive_bayes.MultinomialNB",
    "sklearn.tests.test_naive_bayes.X2",
    "sklearn.tests.test_naive_bayes.pytest",
    "sklearn.tests.test_naive_bayes.y2",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_naive_bayes.test_mnnb": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "ValueError",
    "numpy.log",
    "numpy.unique",
    "sklearn.naive_bayes.MultinomialNB",
    "sklearn.tests.test_naive_bayes.X",
    "sklearn.tests.test_naive_bayes.X2",
    "sklearn.tests.test_naive_bayes.pytest",
    "sklearn.tests.test_naive_bayes.y2",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_naive_bayes.test_naive_bayes_scale_invariance": {
  "data": {
   "lineno": 624,
   "symbols_in_volume": [
    "sklearn.datasets.load_iris",
    "sklearn.naive_bayes.GaussianNB",
    "sklearn.tests.test_naive_bayes.X",
    "sklearn.tests.test_naive_bayes.y",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_naive_bayes.test_sample_weight_mnb": {
  "data": {
   "lineno": 433,
   "symbols_in_volume": [
    "numpy.exp",
    "sklearn.naive_bayes.MultinomialNB",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_naive_bayes.test_sample_weight_multiclass": {
  "data": {
   "lineno": 405,
   "symbols_in_volume": [
    "cls",
    "sklearn.naive_bayes.BernoulliNB",
    "sklearn.naive_bayes.MultinomialNB",
    "sklearn.tests.test_naive_bayes.check_sample_weight_multiclass",
    "sklearn.tests.test_naive_bayes.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_naive_bayes.train_test_split": {
  "data": {
   "shadows": "sklearn.model_selection.train_test_split"
  },
  "type": "import"
 },
 "sklearn.tests.test_naive_bayes.y": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "sklearn.tests.test_naive_bayes.y1": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "sklearn.tests.test_naive_bayes.y2": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "sklearn.tests.test_naive_bayes.zip": {
  "data": {
   "shadows": "sklearn.externals.six.moves.zip"
  },
  "type": "import"
 },
 "sklearn.tests.test_pipeline": {
  "data": {},
  "type": "module"
 },
 "sklearn.tests.test_pipeline.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "sklearn.tests.test_pipeline.CountVectorizer": {
  "data": {
   "shadows": "sklearn.feature_extraction.text.CountVectorizer"
  },
  "type": "import"
 },
 "sklearn.tests.test_pipeline.DummyEstimatorParams": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator"
   ]
  },
  "type": "class"
 },
 "sklearn.tests.test_pipeline.DummyEstimatorParams.fit": {
  "data": {
   "lineno": 152
  },
  "type": "function"
 },
 "sklearn.tests.test_pipeline.DummyEstimatorParams.predict": {
  "data": {
   "lineno": 155
  },
  "type": "function"
 },
 "sklearn.tests.test_pipeline.DummyMemory": {
  "data": {
   "lineno": 930,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "sklearn.tests.test_pipeline.DummyMemory.cache": {
  "data": {
   "lineno": 931
  },
  "type": "function"
 },
 "sklearn.tests.test_pipeline.DummyRegressor": {
  "data": {
   "shadows": "sklearn.dummy.DummyRegressor"
  },
  "type": "import"
 },
 "sklearn.tests.test_pipeline.DummyTransf": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "sklearn.tests.test_pipeline.Transf"
   ]
  },
  "type": "class"
 },
 "sklearn.tests.test_pipeline.DummyTransf.fit": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "numpy.mean",
    "sklearn.tests.test_pipeline.time"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_pipeline.FeatureUnion": {
  "data": {
   "shadows": "sklearn.pipeline.FeatureUnion"
  },
  "type": "import"
 },
 "sklearn.tests.test_pipeline.FitParamT": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator"
   ]
  },
  "type": "class"
 },
 "sklearn.tests.test_pipeline.FitParamT.__init__": {
  "data": {
   "lineno": 119
  },
  "type": "function"
 },
 "sklearn.tests.test_pipeline.FitParamT.fit": {
  "data": {
   "lineno": 122
  },
  "type": "function"
 },
 "sklearn.tests.test_pipeline.FitParamT.fit_predict": {
  "data": {
   "lineno": 128
  },
  "type": "function"
 },
 "sklearn.tests.test_pipeline.FitParamT.predict": {
  "data": {
   "lineno": 125
  },
  "type": "function"
 },
 "sklearn.tests.test_pipeline.FitParamT.score": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_pipeline.JUNK_FOOD_DOCS": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "sklearn.tests.test_pipeline.KMeans": {
  "data": {
   "shadows": "sklearn.cluster.KMeans"
  },
  "type": "import"
 },
 "sklearn.tests.test_pipeline.Lasso": {
  "data": {
   "shadows": "sklearn.linear_model.Lasso"
  },
  "type": "import"
 },
 "sklearn.tests.test_pipeline.LinearRegression": {
  "data": {
   "shadows": "sklearn.linear_model.LinearRegression"
  },
  "type": "import"
 },
 "sklearn.tests.test_pipeline.LogisticRegression": {
  "data": {
   "shadows": "sklearn.linear_model.LogisticRegression"
  },
  "type": "import"
 },
 "sklearn.tests.test_pipeline.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "sklearn.tests.test_pipeline.Memory": {
  "data": {
   "shadows": "sklearn.utils.Memory"
  },
  "type": "import"
 },
 "sklearn.tests.test_pipeline.Mult": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator"
   ]
  },
  "type": "class"
 },
 "sklearn.tests.test_pipeline.Mult.__init__": {
  "data": {
   "lineno": 94
  },
  "type": "function"
 },
 "sklearn.tests.test_pipeline.Mult.fit": {
  "data": {
   "lineno": 97
  },
  "type": "function"
 },
 "sklearn.tests.test_pipeline.Mult.inverse_transform": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_pipeline.Mult.predict": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_pipeline.Mult.score": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_pipeline.Mult.transform": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_pipeline.NoFit": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "sklearn.tests.test_pipeline.NoFit.__init__": {
  "data": {
   "lineno": 55
  },
  "type": "function"
 },
 "sklearn.tests.test_pipeline.NoInvTransf": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "sklearn.tests.test_pipeline.NoTrans"
   ]
  },
  "type": "class"
 },
 "sklearn.tests.test_pipeline.NoInvTransf.transform": {
  "data": {
   "lineno": 74
  },
  "type": "function"
 },
 "sklearn.tests.test_pipeline.NoTrans": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "sklearn.tests.test_pipeline.NoFit"
   ]
  },
  "type": "class"
 },
 "sklearn.tests.test_pipeline.NoTrans.fit": {
  "data": {
   "lineno": 62
  },
  "type": "function"
 },
 "sklearn.tests.test_pipeline.NoTrans.get_params": {
  "data": {
   "lineno": 65
  },
  "type": "function"
 },
 "sklearn.tests.test_pipeline.NoTrans.set_params": {
  "data": {
   "lineno": 68
  },
  "type": "function"
 },
 "sklearn.tests.test_pipeline.PCA": {
  "data": {
   "shadows": "sklearn.decomposition.PCA"
  },
  "type": "import"
 },
 "sklearn.tests.test_pipeline.Pipeline": {
  "data": {
   "shadows": "sklearn.pipeline.Pipeline"
  },
  "type": "import"
 },
 "sklearn.tests.test_pipeline.SVC": {
  "data": {
   "shadows": "sklearn.svm.SVC"
  },
  "type": "import"
 },
 "sklearn.tests.test_pipeline.SelectKBest": {
  "data": {
   "shadows": "sklearn.feature_selection.SelectKBest"
  },
  "type": "import"
 },
 "sklearn.tests.test_pipeline.StandardScaler": {
  "data": {
   "shadows": "sklearn.preprocessing.StandardScaler"
  },
  "type": "import"
 },
 "sklearn.tests.test_pipeline.Transf": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "sklearn.tests.test_pipeline.NoInvTransf"
   ]
  },
  "type": "class"
 },
 "sklearn.tests.test_pipeline.Transf.inverse_transform": {
  "data": {
   "lineno": 82
  },
  "type": "function"
 },
 "sklearn.tests.test_pipeline.Transf.transform": {
  "data": {
   "lineno": 79
  },
  "type": "function"
 },
 "sklearn.tests.test_pipeline.TransfFitParams": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "sklearn.tests.test_pipeline.Transf"
   ]
  },
  "type": "class"
 },
 "sklearn.tests.test_pipeline.TransfFitParams.fit": {
  "data": {
   "lineno": 88
  },
  "type": "function"
 },
 "sklearn.tests.test_pipeline.TruncatedSVD": {
  "data": {
   "shadows": "sklearn.decomposition.TruncatedSVD"
  },
  "type": "import"
 },
 "sklearn.tests.test_pipeline.WrongDummyMemory": {
  "data": {
   "lineno": 935,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "sklearn.tests.test_pipeline.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.tests.test_pipeline.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.tests.test_pipeline.assert_dict_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_dict_equal"
  },
  "type": "import"
 },
 "sklearn.tests.test_pipeline.assert_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.tests.test_pipeline.assert_false": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_false"
  },
  "type": "import"
 },
 "sklearn.tests.test_pipeline.assert_no_warnings": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_no_warnings"
  },
  "type": "import"
 },
 "sklearn.tests.test_pipeline.assert_raise_message": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raise_message"
  },
  "type": "import"
 },
 "sklearn.tests.test_pipeline.assert_raises": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.tests.test_pipeline.assert_raises_regex": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises_regex"
  },
  "type": "import"
 },
 "sklearn.tests.test_pipeline.assert_true": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_true"
  },
  "type": "import"
 },
 "sklearn.tests.test_pipeline.clone": {
  "data": {
   "shadows": "sklearn.base.clone"
  },
  "type": "import"
 },
 "sklearn.tests.test_pipeline.f_classif": {
  "data": {
   "shadows": "sklearn.feature_selection.f_classif"
  },
  "type": "import"
 },
 "sklearn.tests.test_pipeline.joblib_version": {
  "data": {
   "shadows": "sklearn.utils._joblib.__version__"
  },
  "type": "import"
 },
 "sklearn.tests.test_pipeline.load_iris": {
  "data": {
   "shadows": "sklearn.datasets.load_iris"
  },
  "type": "import"
 },
 "sklearn.tests.test_pipeline.make_pipeline": {
  "data": {
   "shadows": "sklearn.pipeline.make_pipeline"
  },
  "type": "import"
 },
 "sklearn.tests.test_pipeline.make_union": {
  "data": {
   "shadows": "sklearn.pipeline.make_union"
  },
  "type": "import"
 },
 "sklearn.tests.test_pipeline.mkdtemp": {
  "data": {
   "shadows": "tempfile.mkdtemp"
  },
  "type": "import"
 },
 "sklearn.tests.test_pipeline.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.tests.test_pipeline.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.tests.test_pipeline.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "sklearn.tests.test_pipeline.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.tests.test_pipeline.test_classes_property": {
  "data": {
   "lineno": 790,
   "symbols_in_volume": [
    "AttributeError",
    "getattr",
    "numpy.unique",
    "sklearn.datasets.load_iris",
    "sklearn.feature_selection.SelectKBest",
    "sklearn.linear_model.LinearRegression",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.pipeline.make_pipeline",
    "sklearn.tests.test_pipeline.pytest",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_pipeline.test_feature_union": {
  "data": {
   "lineno": 427,
   "symbols_in_volume": [
    "TypeError",
    "scipy.sparse.csr_matrix",
    "sklearn.base.clone",
    "sklearn.datasets.load_iris",
    "sklearn.decomposition.TruncatedSVD",
    "sklearn.feature_selection.SelectKBest",
    "sklearn.pipeline.FeatureUnion",
    "sklearn.tests.test_pipeline.NoTrans",
    "sklearn.tests.test_pipeline.Transf",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_false",
    "sklearn.utils.testing.assert_no_warnings",
    "sklearn.utils.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_pipeline.test_feature_union_feature_names": {
  "data": {
   "lineno": 774,
   "symbols_in_volume": [
    "AttributeError",
    "len",
    "sklearn.feature_extraction.text.CountVectorizer",
    "sklearn.pipeline.FeatureUnion",
    "sklearn.tests.test_pipeline.JUNK_FOOD_DOCS",
    "sklearn.tests.test_pipeline.Transf",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_raise_message",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_pipeline.test_feature_union_parallel": {
  "data": {
   "lineno": 728,
   "symbols_in_volume": [
    "len",
    "sklearn.feature_extraction.text.CountVectorizer",
    "sklearn.pipeline.FeatureUnion",
    "sklearn.tests.test_pipeline.JUNK_FOOD_DOCS",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_pipeline.test_feature_union_weights": {
  "data": {
   "lineno": 695,
   "symbols_in_volume": [
    "sklearn.datasets.load_iris",
    "sklearn.decomposition.PCA",
    "sklearn.feature_selection.SelectKBest",
    "sklearn.pipeline.FeatureUnion",
    "sklearn.tests.test_pipeline.Transf",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_pipeline.test_fit_predict_on_pipeline": {
  "data": {
   "lineno": 367,
   "symbols_in_volume": [
    "sklearn.cluster.KMeans",
    "sklearn.datasets.load_iris",
    "sklearn.pipeline.Pipeline",
    "sklearn.preprocessing.StandardScaler",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_pipeline.test_fit_predict_on_pipeline_without_fit_predict": {
  "data": {
   "lineno": 393,
   "symbols_in_volume": [
    "AttributeError",
    "getattr",
    "sklearn.decomposition.PCA",
    "sklearn.pipeline.Pipeline",
    "sklearn.preprocessing.StandardScaler",
    "sklearn.utils.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_pipeline.test_fit_predict_with_intermediate_fit_params": {
  "data": {
   "lineno": 404,
   "symbols_in_volume": [
    "sklearn.pipeline.Pipeline",
    "sklearn.tests.test_pipeline.FitParamT",
    "sklearn.tests.test_pipeline.TransfFitParams",
    "sklearn.utils.testing.assert_false",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_pipeline.test_make_pipeline": {
  "data": {
   "lineno": 674,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "sklearn.pipeline.Pipeline",
    "sklearn.pipeline.make_pipeline",
    "sklearn.tests.test_pipeline.FitParamT",
    "sklearn.tests.test_pipeline.Transf",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_raise_message",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_pipeline.test_make_pipeline_memory": {
  "data": {
   "lineno": 1019,
   "symbols_in_volume": [
    "distutils.version.LooseVersion",
    "sklearn.pipeline.make_pipeline",
    "sklearn.svm.SVC",
    "sklearn.tests.test_pipeline.DummyTransf",
    "sklearn.tests.test_pipeline.shutil",
    "sklearn.utils.Memory",
    "sklearn.utils._joblib.__version__",
    "sklearn.utils.testing.assert_true",
    "tempfile.mkdtemp"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_pipeline.test_make_union": {
  "data": {
   "lineno": 477,
   "symbols_in_volume": [
    "sklearn.decomposition.PCA",
    "sklearn.externals.six.moves.zip",
    "sklearn.pipeline.make_union",
    "sklearn.tests.test_pipeline.Transf",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_pipeline.test_make_union_kwargs": {
  "data": {
   "lineno": 486,
   "symbols_in_volume": [
    "TypeError",
    "sklearn.decomposition.PCA",
    "sklearn.pipeline.make_union",
    "sklearn.tests.test_pipeline.Transf",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_pipeline.test_pipeline_ducktyping": {
  "data": {
   "lineno": 647,
   "symbols_in_volume": [
    "hasattr",
    "sklearn.pipeline.make_pipeline",
    "sklearn.tests.test_pipeline.Mult",
    "sklearn.tests.test_pipeline.NoInvTransf",
    "sklearn.tests.test_pipeline.Transf",
    "sklearn.utils.testing.assert_false"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_pipeline.test_pipeline_fit_params": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "TypeError",
    "sklearn.pipeline.Pipeline",
    "sklearn.tests.test_pipeline.FitParamT",
    "sklearn.tests.test_pipeline.Transf",
    "sklearn.utils.testing.assert_raise_message",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_pipeline.test_pipeline_fit_transform": {
  "data": {
   "lineno": 520,
   "symbols_in_volume": [
    "sklearn.datasets.load_iris",
    "sklearn.pipeline.Pipeline",
    "sklearn.tests.test_pipeline.Transf",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_pipeline.test_pipeline_init": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "dict",
    "repr",
    "sklearn.base.clone",
    "sklearn.feature_selection.SelectKBest",
    "sklearn.feature_selection.f_classif",
    "sklearn.pipeline.Pipeline",
    "sklearn.svm.SVC",
    "sklearn.tests.test_pipeline.NoFit",
    "sklearn.tests.test_pipeline.NoTrans",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_false",
    "sklearn.utils.testing.assert_no_warnings",
    "sklearn.utils.testing.assert_raises",
    "sklearn.utils.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_pipeline.test_pipeline_init_tuple": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.pipeline.Pipeline",
    "sklearn.tests.test_pipeline.FitParamT",
    "sklearn.tests.test_pipeline.Transf"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_pipeline.test_pipeline_memory": {
  "data": {
   "lineno": 953,
   "symbols_in_volume": [
    "distutils.version.LooseVersion",
    "hasattr",
    "sklearn.base.clone",
    "sklearn.datasets.load_iris",
    "sklearn.pipeline.Pipeline",
    "sklearn.svm.SVC",
    "sklearn.tests.test_pipeline.DummyTransf",
    "sklearn.tests.test_pipeline.shutil",
    "sklearn.utils.Memory",
    "sklearn.utils._joblib.__version__",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_false",
    "tempfile.mkdtemp"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_pipeline.test_pipeline_methods_anova": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "sklearn.datasets.load_iris",
    "sklearn.feature_selection.SelectKBest",
    "sklearn.feature_selection.f_classif",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.pipeline.Pipeline",
    "sklearn.tests.test_pipeline.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_pipeline.test_pipeline_methods_pca_svm": {
  "data": {
   "lineno": 319,
   "symbols_in_volume": [
    "sklearn.datasets.load_iris",
    "sklearn.decomposition.PCA",
    "sklearn.pipeline.Pipeline",
    "sklearn.svm.SVC"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_pipeline.test_pipeline_methods_preprocessing_svm": {
  "data": {
   "lineno": 335,
   "symbols_in_volume": [
    "len",
    "numpy.unique",
    "sklearn.datasets.load_iris",
    "sklearn.decomposition.PCA",
    "sklearn.pipeline.Pipeline",
    "sklearn.preprocessing.StandardScaler",
    "sklearn.svm.SVC",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_pipeline.test_pipeline_named_steps": {
  "data": {
   "lineno": 560,
   "symbols_in_volume": [
    "sklearn.pipeline.Pipeline",
    "sklearn.tests.test_pipeline.Mult",
    "sklearn.tests.test_pipeline.Transf",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_pipeline.test_pipeline_raise_set_params_error": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.linear_model.LinearRegression",
    "sklearn.pipeline.Pipeline",
    "sklearn.utils.testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_pipeline.test_pipeline_sample_weight_supported": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.pipeline.Pipeline",
    "sklearn.tests.test_pipeline.FitParamT",
    "sklearn.tests.test_pipeline.Transf",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_pipeline.test_pipeline_sample_weight_unsupported": {
  "data": {
   "lineno": 284,
   "symbols_in_volume": [
    "TypeError",
    "numpy.array",
    "sklearn.pipeline.Pipeline",
    "sklearn.tests.test_pipeline.Mult",
    "sklearn.tests.test_pipeline.Transf",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_pipeline.test_pipeline_transform": {
  "data": {
   "lineno": 500,
   "symbols_in_volume": [
    "sklearn.datasets.load_iris",
    "sklearn.decomposition.PCA",
    "sklearn.pipeline.Pipeline",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_pipeline.test_pipeline_with_cache_attribute": {
  "data": {
   "lineno": 939,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "sklearn.pipeline.Pipeline",
    "sklearn.tests.test_pipeline.DummyMemory",
    "sklearn.tests.test_pipeline.Mult",
    "sklearn.tests.test_pipeline.Transf",
    "sklearn.tests.test_pipeline.WrongDummyMemory",
    "sklearn.utils.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_pipeline.test_pipeline_wrong_memory": {
  "data": {
   "lineno": 914,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.datasets.load_iris",
    "sklearn.pipeline.Pipeline",
    "sklearn.svm.SVC",
    "sklearn.tests.test_pipeline.DummyTransf",
    "sklearn.utils.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_pipeline.test_predict_with_predict_params": {
  "data": {
   "lineno": 417,
   "symbols_in_volume": [
    "sklearn.pipeline.Pipeline",
    "sklearn.tests.test_pipeline.DummyEstimatorParams",
    "sklearn.tests.test_pipeline.Transf",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_pipeline.test_set_feature_union_step_drop": {
  "data": {
   "lineno": 835,
   "symbols_in_volume": [
    "numpy.asarray",
    "sklearn.pipeline.FeatureUnion",
    "sklearn.tests.test_pipeline.Mult",
    "sklearn.tests.test_pipeline.pytest",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_pipeline.test_set_feature_union_steps": {
  "data": {
   "lineno": 807,
   "symbols_in_volume": [
    "numpy.asarray",
    "sklearn.pipeline.FeatureUnion",
    "sklearn.tests.test_pipeline.Mult",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_pipeline.test_set_params_nested_pipeline": {
  "data": {
   "lineno": 902,
   "symbols_in_volume": [
    "sklearn.dummy.DummyRegressor",
    "sklearn.linear_model.Lasso",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.pipeline.Pipeline",
    "sklearn.tests.test_pipeline.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_pipeline.test_set_pipeline_step_none": {
  "data": {
   "lineno": 577,
   "symbols_in_volume": [
    "AttributeError",
    "getattr",
    "make",
    "numpy.array",
    "sklearn.pipeline.Pipeline",
    "sklearn.tests.test_pipeline.Mult",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_dict_equal",
    "sklearn.utils.testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_pipeline.test_set_pipeline_step_none.make": {
  "data": {
   "lineno": 585,
   "symbols_in_volume": [
    "sklearn.pipeline.Pipeline"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_pipeline.test_set_pipeline_steps": {
  "data": {
   "lineno": 534,
   "symbols_in_volume": [
    "TypeError",
    "sklearn.pipeline.Pipeline",
    "sklearn.tests.test_pipeline.Transf",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_raises",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_pipeline.test_step_name_validation": {
  "data": {
   "lineno": 869,
   "symbols_in_volume": [
    "ValueError",
    "cls",
    "setattr",
    "sklearn.pipeline.FeatureUnion",
    "sklearn.pipeline.Pipeline",
    "sklearn.tests.test_pipeline.Mult",
    "sklearn.utils.testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_pipeline.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "sklearn.tests.test_pipeline.zip": {
  "data": {
   "shadows": "sklearn.externals.six.moves.zip"
  },
  "type": "import"
 },
 "sklearn.tests.test_random_projection": {
  "data": {
   "symbols_in_volume": [
    "int",
    "set",
    "sklearn.random_projection.GaussianRandomProjection",
    "sklearn.random_projection.SparseRandomProjection",
    "sklearn.random_projection.gaussian_random_matrix",
    "sklearn.random_projection.sparse_random_matrix",
    "sklearn.tests.test_random_projection.all_DenseRandomProjection",
    "sklearn.tests.test_random_projection.all_SparseRandomProjection",
    "sklearn.tests.test_random_projection.all_dense_random_matrix",
    "sklearn.tests.test_random_projection.all_sparse_random_matrix",
    "sklearn.tests.test_random_projection.make_sparse_random_data",
    "sklearn.tests.test_random_projection.n_nonzeros"
   ]
  },
  "type": "module"
 },
 "sklearn.tests.test_random_projection.DataDimensionalityWarning": {
  "data": {
   "shadows": "sklearn.exceptions.DataDimensionalityWarning"
  },
  "type": "import"
 },
 "sklearn.tests.test_random_projection.GaussianRandomProjection": {
  "data": {
   "shadows": "sklearn.random_projection.GaussianRandomProjection"
  },
  "type": "import"
 },
 "sklearn.tests.test_random_projection.SparseRandomProjection": {
  "data": {
   "shadows": "sklearn.random_projection.SparseRandomProjection"
  },
  "type": "import"
 },
 "sklearn.tests.test_random_projection.all_DenseRandomProjection": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "sklearn.tests.test_random_projection.all_RandomProjection": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "sklearn.tests.test_random_projection.all_SparseRandomProjection": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "sklearn.tests.test_random_projection.all_dense_random_matrix": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "sklearn.tests.test_random_projection.all_random_matrix": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "sklearn.tests.test_random_projection.all_sparse_random_matrix": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "sklearn.tests.test_random_projection.assert_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "sklearn.tests.test_random_projection.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.tests.test_random_projection.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.tests.test_random_projection.assert_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.tests.test_random_projection.assert_in": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_in"
  },
  "type": "import"
 },
 "sklearn.tests.test_random_projection.assert_less": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_less"
  },
  "type": "import"
 },
 "sklearn.tests.test_random_projection.assert_raise_message": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raise_message"
  },
  "type": "import"
 },
 "sklearn.tests.test_random_projection.assert_raises": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.tests.test_random_projection.assert_warns": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_warns"
  },
  "type": "import"
 },
 "sklearn.tests.test_random_projection.check_input_size_random_matrix": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_random_projection.check_input_with_sparse_random_matrix": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "ValueError",
    "random_matrix",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_random_projection.check_size_generated": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "random_matrix",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_random_projection.check_zero_mean_and_unit_norm": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "numpy.linalg.norm",
    "numpy.mean",
    "random_matrix",
    "sklearn.tests.test_random_projection.densify",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_random_projection.densify": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "scipy.sparse.issparse"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_random_projection.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sklearn.tests.test_random_projection.euclidean_distances": {
  "data": {
   "shadows": "sklearn.metrics.euclidean_distances"
  },
  "type": "import"
 },
 "sklearn.tests.test_random_projection.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "sklearn.tests.test_random_projection.gaussian_random_matrix": {
  "data": {
   "shadows": "sklearn.random_projection.gaussian_random_matrix"
  },
  "type": "import"
 },
 "sklearn.tests.test_random_projection.johnson_lindenstrauss_min_dim": {
  "data": {
   "shadows": "sklearn.random_projection.johnson_lindenstrauss_min_dim"
  },
  "type": "import"
 },
 "sklearn.tests.test_random_projection.make_sparse_random_data": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "scipy.sparse.coo_matrix"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_random_projection.n_nonzeros": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "sklearn.tests.test_random_projection.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.tests.test_random_projection.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.tests.test_random_projection.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.tests.test_random_projection.sparse_random_matrix": {
  "data": {
   "shadows": "sklearn.random_projection.sparse_random_matrix"
  },
  "type": "import"
 },
 "sklearn.tests.test_random_projection.test_SparseRandomProjection_output_representation": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "isinstance",
    "numpy.ndarray",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.issparse",
    "sklearn.random_projection.SparseRandomProjection",
    "sklearn.tests.test_random_projection.all_SparseRandomProjection"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_random_projection.test_basic_property_of_random_matrix": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "random_matrix",
    "sklearn.tests.test_random_projection.all_random_matrix",
    "sklearn.tests.test_random_projection.check_input_size_random_matrix",
    "sklearn.tests.test_random_projection.check_size_generated",
    "sklearn.tests.test_random_projection.check_zero_mean_and_unit_norm",
    "sklearn.tests.test_random_projection.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_random_projection.test_basic_property_of_sparse_random_matrix": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "random_matrix",
    "sklearn.tests.test_random_projection.all_sparse_random_matrix",
    "sklearn.tests.test_random_projection.check_input_with_sparse_random_matrix",
    "sklearn.tests.test_random_projection.check_zero_mean_and_unit_norm",
    "sklearn.tests.test_random_projection.functools",
    "sklearn.tests.test_random_projection.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_random_projection.test_correct_RandomProjection_dimensions_embedding": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": [
    "RandomProjection",
    "ValueError",
    "sklearn.tests.test_random_projection.all_RandomProjection",
    "sklearn.tests.test_random_projection.all_SparseRandomProjection",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_less",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_random_projection.test_gaussian_random_matrix": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "numpy.mean",
    "numpy.var",
    "sklearn.random_projection.gaussian_random_matrix",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_random_projection.test_input_size_jl_min_dim": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "ValueError",
    "numpy.full",
    "numpy.random.randint",
    "sklearn.random_projection.johnson_lindenstrauss_min_dim",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_random_projection.test_invalid_jl_domain": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.random_projection.johnson_lindenstrauss_min_dim",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_random_projection.test_random_projection_embedding_quality": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "RandomProjection",
    "sklearn.metrics.euclidean_distances",
    "sklearn.tests.test_random_projection.all_RandomProjection",
    "sklearn.tests.test_random_projection.make_sparse_random_data",
    "sklearn.utils.testing.assert_less"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_random_projection.test_random_projection_transformer_invalid_input": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "RandomProjection",
    "ValueError",
    "sklearn.tests.test_random_projection.all_RandomProjection",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_random_projection.test_sparse_random_matrix": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "numpy.mean",
    "numpy.size",
    "numpy.sqrt",
    "numpy.unique",
    "numpy.var",
    "sklearn.random_projection.sparse_random_matrix",
    "sklearn.tests.test_random_projection.densify",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_in"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_random_projection.test_sparse_random_projection_transformer_invalid_density": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "RandomProjection",
    "ValueError",
    "sklearn.tests.test_random_projection.all_SparseRandomProjection",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_random_projection.test_too_many_samples_to_find_a_safe_embedding": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "RandomProjection",
    "ValueError",
    "sklearn.tests.test_random_projection.all_RandomProjection",
    "sklearn.tests.test_random_projection.make_sparse_random_data",
    "sklearn.utils.testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_random_projection.test_try_to_transform_before_fit": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "RandomProjection",
    "ValueError",
    "sklearn.tests.test_random_projection.all_RandomProjection",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_random_projection.test_warning_n_components_greater_than_n_features": {
  "data": {
   "lineno": 338,
   "symbols_in_volume": [
    "RandomProjection",
    "int",
    "sklearn.exceptions.DataDimensionalityWarning",
    "sklearn.tests.test_random_projection.all_RandomProjection",
    "sklearn.tests.test_random_projection.make_sparse_random_data",
    "sklearn.utils.testing.assert_warns"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_random_projection.test_works_with_sparse_data": {
  "data": {
   "lineno": 347,
   "symbols_in_volume": [
    "RandomProjection",
    "int",
    "scipy.sparse.csr_matrix",
    "sklearn.tests.test_random_projection.all_RandomProjection",
    "sklearn.tests.test_random_projection.densify",
    "sklearn.tests.test_random_projection.make_sparse_random_data",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_site_joblib": {
  "data": {
   "symbols_in_volume": [
    "sklearn.externals.joblib",
    "sklearn.tests.test_site_joblib.os"
   ]
  },
  "type": "module"
 },
 "sklearn.tests.test_site_joblib.Memory": {
  "data": {
   "shadows": "sklearn.utils.Memory"
  },
  "type": "import"
 },
 "sklearn.tests.test_site_joblib.Parallel": {
  "data": {
   "shadows": "sklearn.utils.Parallel"
  },
  "type": "import"
 },
 "sklearn.tests.test_site_joblib.delayed": {
  "data": {
   "shadows": "sklearn.utils.delayed"
  },
  "type": "import"
 },
 "sklearn.tests.test_site_joblib.externals": {
  "data": {
   "shadows": "sklearn.externals"
  },
  "type": "import"
 },
 "sklearn.tests.test_site_joblib.joblib_site": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "sklearn.tests.test_site_joblib.joblib_vendored": {
  "data": {
   "shadows": "sklearn.externals.joblib"
  },
  "type": "import"
 },
 "sklearn.tests.test_site_joblib.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "sklearn.tests.test_site_joblib.parallel_backend": {
  "data": {
   "shadows": "sklearn.utils.parallel_backend"
  },
  "type": "import"
 },
 "sklearn.tests.test_site_joblib.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.tests.test_site_joblib.test_old_pickle": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "sklearn.externals.__file__",
    "sklearn.externals.joblib.__file__",
    "sklearn.externals.joblib.load",
    "sklearn.tests.test_site_joblib.os",
    "sklearn.tests.test_site_joblib.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_site_joblib.test_site_joblib_dispatch": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "sklearn.externals.joblib.Memory",
    "sklearn.externals.joblib.Parallel",
    "sklearn.externals.joblib.delayed",
    "sklearn.externals.joblib.parallel_backend",
    "sklearn.tests.test_site_joblib.os",
    "sklearn.utils.Memory",
    "sklearn.utils.Parallel",
    "sklearn.utils.delayed",
    "sklearn.utils.parallel_backend"
   ]
  },
  "type": "function"
 },
 "sklearn.tree": {
  "data": {},
  "type": "module"
 },
 "sklearn.tree.__all__": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "sklearn.tree.export": {
  "data": {
   "symbols_in_volume": [
    "sklearn.tree.export.Sentinel"
   ]
  },
  "type": "module"
 },
 "sklearn.tree.export.Integral": {
  "data": {
   "shadows": "numbers.Integral"
  },
  "type": "import"
 },
 "sklearn.tree.export.SENTINEL": {
  "data": {
   "lineno": 72
  },
  "type": "constant"
 },
 "sklearn.tree.export.Sentinel": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "sklearn.tree.export.Sentinel.__repr__": {
  "data": {
   "lineno": 68
  },
  "type": "function"
 },
 "sklearn.tree.export._color_brew": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "abs",
    "int",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.export.export_graphviz": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "ValueError",
    "check_is_fitted",
    "isinstance",
    "len",
    "numbers.Integral",
    "open",
    "recurse",
    "sorted",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.export.export_graphviz.get_color": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "int",
    "len",
    "list",
    "numpy.argmax",
    "numpy.round",
    "range",
    "sorted",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.export.export_graphviz.node_to_str": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "float",
    "int",
    "isinstance",
    "numpy.all",
    "numpy.argmax",
    "numpy.around",
    "numpy.equal",
    "numpy.mod",
    "round",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.export.export_graphviz.recurse": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": [
    "ValueError",
    "get_color",
    "len",
    "node_to_str",
    "numpy.array",
    "numpy.max",
    "numpy.min",
    "numpy.unique",
    "recurse",
    "sklearn.tree.export._color_brew",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.export.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.tree.setup": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.distutils.core.setup",
    "sklearn.tree.setup.configuration"
   ]
  },
  "type": "module"
 },
 "sklearn.tree.setup.Configuration": {
  "data": {
   "shadows": "numpy.distutils.misc_util.Configuration"
  },
  "type": "import"
 },
 "sklearn.tree.setup.configuration": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "numpy.distutils.misc_util.Configuration",
    "sklearn.tree.setup.numpy",
    "sklearn.tree.setup.os"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.setup.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.tree.setup.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "sklearn.tree.setup.setup": {
  "data": {
   "shadows": "numpy.distutils.core.setup"
  },
  "type": "import"
 },
 "sklearn.tree.tests": {
  "data": {},
  "type": "module"
 },
 "sklearn.tree.tests.test_export": {
  "data": {},
  "type": "module"
 },
 "sklearn.tree.tests.test_export.DecisionTreeClassifier": {
  "data": {
   "shadows": "sklearn.tree.DecisionTreeClassifier"
  },
  "type": "import"
 },
 "sklearn.tree.tests.test_export.DecisionTreeRegressor": {
  "data": {
   "shadows": "sklearn.tree.DecisionTreeRegressor"
  },
  "type": "import"
 },
 "sklearn.tree.tests.test_export.GradientBoostingClassifier": {
  "data": {
   "shadows": "sklearn.ensemble.GradientBoostingClassifier"
  },
  "type": "import"
 },
 "sklearn.tree.tests.test_export.NotFittedError": {
  "data": {
   "shadows": "sklearn.exceptions.NotFittedError"
  },
  "type": "import"
 },
 "sklearn.tree.tests.test_export.RandomState": {
  "data": {
   "shadows": "numpy.random.RandomState"
  },
  "type": "import"
 },
 "sklearn.tree.tests.test_export.StringIO": {
  "data": {
   "shadows": "sklearn.externals.six.StringIO"
  },
  "type": "import"
 },
 "sklearn.tree.tests.test_export.X": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "sklearn.tree.tests.test_export.assert_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.tree.tests.test_export.assert_in": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_in"
  },
  "type": "import"
 },
 "sklearn.tree.tests.test_export.assert_less_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_less_equal"
  },
  "type": "import"
 },
 "sklearn.tree.tests.test_export.assert_raise_message": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raise_message"
  },
  "type": "import"
 },
 "sklearn.tree.tests.test_export.assert_raises": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.tree.tests.test_export.assert_raises_regex": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises_regex"
  },
  "type": "import"
 },
 "sklearn.tree.tests.test_export.export_graphviz": {
  "data": {
   "shadows": "sklearn.tree.export_graphviz"
  },
  "type": "import"
 },
 "sklearn.tree.tests.test_export.finditer": {
  "data": {
   "shadows": "re.finditer"
  },
  "type": "import"
 },
 "sklearn.tree.tests.test_export.is_classifier": {
  "data": {
   "shadows": "sklearn.base.is_classifier"
  },
  "type": "import"
 },
 "sklearn.tree.tests.test_export.search": {
  "data": {
   "shadows": "re.search"
  },
  "type": "import"
 },
 "sklearn.tree.tests.test_export.test_friedman_mse_in_graphviz": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "re.finditer",
    "sklearn.ensemble.GradientBoostingClassifier",
    "sklearn.externals.six.StringIO",
    "sklearn.tree.DecisionTreeRegressor",
    "sklearn.tree.export_graphviz",
    "sklearn.tree.tests.test_export.X",
    "sklearn.tree.tests.test_export.y",
    "sklearn.utils.testing.assert_in"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.tests.test_export.test_graphviz_errors": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "IndexError",
    "TypeError",
    "ValueError",
    "sklearn.exceptions.NotFittedError",
    "sklearn.externals.six.StringIO",
    "sklearn.tree.DecisionTreeClassifier",
    "sklearn.tree.export_graphviz",
    "sklearn.tree.tests.test_export.X",
    "sklearn.tree.tests.test_export.y",
    "sklearn.utils.testing.assert_raise_message",
    "sklearn.utils.testing.assert_raises",
    "sklearn.utils.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.tests.test_export.test_graphviz_toy": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "sklearn.tree.DecisionTreeClassifier",
    "sklearn.tree.DecisionTreeRegressor",
    "sklearn.tree.export_graphviz",
    "sklearn.tree.tests.test_export.X",
    "sklearn.tree.tests.test_export.w",
    "sklearn.tree.tests.test_export.y",
    "sklearn.tree.tests.test_export.y2",
    "sklearn.tree.tests.test_export.y_degraded",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.tests.test_export.test_precision": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "len",
    "numpy.random.RandomState",
    "re.finditer",
    "re.search",
    "sklearn.base.is_classifier",
    "sklearn.tree.DecisionTreeClassifier",
    "sklearn.tree.DecisionTreeRegressor",
    "sklearn.tree.export_graphviz",
    "sklearn.tree.tests.test_export.X",
    "sklearn.tree.tests.test_export.y",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_less_equal",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.tests.test_export.w": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "sklearn.tree.tests.test_export.y": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "sklearn.tree.tests.test_export.y2": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "sklearn.tree.tests.test_export.y_degraded": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "sklearn.tree.tests.test_tree": {
  "data": {
   "symbols_in_volume": [
    "dict",
    "functools.partial",
    "numpy.array",
    "numpy.random.RandomState",
    "numpy.zeros",
    "scipy.sparse.csc_matrix",
    "sklearn.datasets.load_boston",
    "sklearn.datasets.load_digits",
    "sklearn.datasets.load_iris",
    "sklearn.datasets.make_multilabel_classification",
    "sklearn.random_projection.sparse_random_matrix",
    "sklearn.tree.DecisionTreeClassifier",
    "sklearn.tree.DecisionTreeRegressor",
    "sklearn.tree.ExtraTreeClassifier",
    "sklearn.tree.ExtraTreeRegressor",
    "sklearn.tree.tests.test_tree.ALL_TREES",
    "sklearn.tree.tests.test_tree.CLF_TREES",
    "sklearn.tree.tests.test_tree.DATASETS",
    "sklearn.tree.tests.test_tree.REG_TREES",
    "sklearn.tree.tests.test_tree.X",
    "sklearn.tree.tests.test_tree.X_small",
    "sklearn.tree.tests.test_tree.X_sparse_mix",
    "sklearn.tree.tests.test_tree.X_sparse_pos",
    "sklearn.tree.tests.test_tree.boston",
    "sklearn.tree.tests.test_tree.digits",
    "sklearn.tree.tests.test_tree.iris",
    "sklearn.tree.tests.test_tree.perm",
    "sklearn.tree.tests.test_tree.random_state",
    "sklearn.tree.tests.test_tree.rng",
    "sklearn.tree.tests.test_tree.y",
    "sklearn.tree.tests.test_tree.y_random",
    "sklearn.tree.tests.test_tree.y_small",
    "sklearn.tree.tests.test_tree.y_small_reg",
    "sklearn.utils.validation.check_random_state"
   ]
  },
  "type": "module"
 },
 "sklearn.tree.tests.test_tree.ALL_TREES": {
  "data": {
   "lineno": 72
  },
  "type": "constant"
 },
 "sklearn.tree.tests.test_tree.CLF_CRITERIONS": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "sklearn.tree.tests.test_tree.CLF_TREES": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "sklearn.tree.tests.test_tree.CRITERIA_CLF": {
  "data": {
   "shadows": "sklearn.tree.tree.CRITERIA_CLF"
  },
  "type": "import"
 },
 "sklearn.tree.tests.test_tree.CRITERIA_REG": {
  "data": {
   "shadows": "sklearn.tree.tree.CRITERIA_REG"
  },
  "type": "import"
 },
 "sklearn.tree.tests.test_tree.DATASETS": {
  "data": {
   "lineno": 148
  },
  "type": "constant"
 },
 "sklearn.tree.tests.test_tree.DecisionTreeClassifier": {
  "data": {
   "shadows": "sklearn.tree.DecisionTreeClassifier"
  },
  "type": "import"
 },
 "sklearn.tree.tests.test_tree.DecisionTreeRegressor": {
  "data": {
   "shadows": "sklearn.tree.DecisionTreeRegressor"
  },
  "type": "import"
 },
 "sklearn.tree.tests.test_tree.ExtraTreeClassifier": {
  "data": {
   "shadows": "sklearn.tree.ExtraTreeClassifier"
  },
  "type": "import"
 },
 "sklearn.tree.tests.test_tree.ExtraTreeRegressor": {
  "data": {
   "shadows": "sklearn.tree.ExtraTreeRegressor"
  },
  "type": "import"
 },
 "sklearn.tree.tests.test_tree.NotFittedError": {
  "data": {
   "shadows": "sklearn.exceptions.NotFittedError"
  },
  "type": "import"
 },
 "sklearn.tree.tests.test_tree.REG_CRITERIONS": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "sklearn.tree.tests.test_tree.REG_TREES": {
  "data": {
   "lineno": 65
  },
  "type": "constant"
 },
 "sklearn.tree.tests.test_tree.SPARSE_TREES": {
  "data": {
   "lineno": 76
  },
  "type": "constant"
 },
 "sklearn.tree.tests.test_tree.T": {
  "data": {
   "lineno": 113
  },
  "type": "constant"
 },
 "sklearn.tree.tests.test_tree.TREE_LEAF": {
  "data": {
   "shadows": "sklearn.tree._tree.TREE_LEAF"
  },
  "type": "import"
 },
 "sklearn.tree.tests.test_tree.X": {
  "data": {
   "lineno": 111
  },
  "type": "constant"
 },
 "sklearn.tree.tests.test_tree.X_small": {
  "data": {
   "lineno": 80
  },
  "type": "constant"
 },
 "sklearn.tree.tests.test_tree.X_sparse_mix": {
  "data": {
   "lineno": 144
  },
  "type": "constant"
 },
 "sklearn.tree.tests.test_tree.X_sparse_pos": {
  "data": {
   "lineno": 141
  },
  "type": "constant"
 },
 "sklearn.tree.tests.test_tree._check_min_weight_leaf_split_level": {
  "data": {
   "lineno": 1557,
   "symbols_in_volume": [
    "TreeEstimator",
    "sklearn.tree.tests.test_tree.X",
    "sklearn.tree.tests.test_tree.y",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.tests.test_tree._realloc_test": {
  "data": {
   "shadows": "sklearn.tree._utils._realloc_test"
  },
  "type": "import"
 },
 "sklearn.tree.tests.test_tree.accuracy_score": {
  "data": {
   "shadows": "sklearn.metrics.accuracy_score"
  },
  "type": "import"
 },
 "sklearn.tree.tests.test_tree.assert_allclose": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_allclose"
  },
  "type": "import"
 },
 "sklearn.tree.tests.test_tree.assert_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "sklearn.tree.tests.test_tree.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.tree.tests.test_tree.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.tree.tests.test_tree.assert_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.tree.tests.test_tree.assert_greater": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_greater"
  },
  "type": "import"
 },
 "sklearn.tree.tests.test_tree.assert_greater_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_greater_equal"
  },
  "type": "import"
 },
 "sklearn.tree.tests.test_tree.assert_in": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_in"
  },
  "type": "import"
 },
 "sklearn.tree.tests.test_tree.assert_less": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_less"
  },
  "type": "import"
 },
 "sklearn.tree.tests.test_tree.assert_less_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_less_equal"
  },
  "type": "import"
 },
 "sklearn.tree.tests.test_tree.assert_raise_message": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raise_message"
  },
  "type": "import"
 },
 "sklearn.tree.tests.test_tree.assert_raises": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.tree.tests.test_tree.assert_tree_equal": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "numpy.logical_not",
    "sklearn.tree._tree.TREE_LEAF",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.assert_true": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_true"
  },
  "type": "import"
 },
 "sklearn.tree.tests.test_tree.assert_warns": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_warns"
  },
  "type": "import"
 },
 "sklearn.tree.tests.test_tree.assert_warns_message": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_warns_message"
  },
  "type": "import"
 },
 "sklearn.tree.tests.test_tree.boston": {
  "data": {
   "lineno": 126
  },
  "type": "constant"
 },
 "sklearn.tree.tests.test_tree.check_class_weight_errors": {
  "data": {
   "lineno": 1187,
   "symbols_in_volume": [
    "TreeClassifier",
    "ValueError",
    "numpy.array",
    "numpy.vstack",
    "sklearn.tree.tests.test_tree.CLF_TREES",
    "sklearn.tree.tests.test_tree.X",
    "sklearn.tree.tests.test_tree.y",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.check_class_weights": {
  "data": {
   "lineno": 1139,
   "symbols_in_volume": [
    "TreeClassifier",
    "numpy.ones",
    "numpy.vstack",
    "sklearn.tree.tests.test_tree.CLF_TREES",
    "sklearn.tree.tests.test_tree.iris",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.check_decision_path": {
  "data": {
   "lineno": 1651,
   "symbols_in_volume": [
    "TreeEstimator",
    "enumerate",
    "numpy.dot",
    "numpy.ones",
    "sklearn.tree._tree.TREE_LEAF",
    "sklearn.tree.tests.test_tree.ALL_TREES",
    "sklearn.tree.tests.test_tree.X",
    "sklearn.tree.tests.test_tree.iris",
    "sklearn.tree.tests.test_tree.y",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_less_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.check_explicit_sparse_zeros": {
  "data": {
   "lineno": 1462,
   "symbols_in_volume": [
    "TreeEstimator",
    "itertools.product",
    "numpy.arange",
    "numpy.array",
    "numpy.concatenate",
    "numpy.float32",
    "range",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "sklearn.tree",
    "sklearn.tree.tests.test_tree.ALL_TREES",
    "sklearn.tree.tests.test_tree.CLF_TREES",
    "sklearn.tree.tests.test_tree.X",
    "sklearn.tree.tests.test_tree.assert_tree_equal",
    "sklearn.tree.tests.test_tree.random_state",
    "sklearn.tree.tests.test_tree.y",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_greater",
    "sklearn.utils.validation.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.check_min_weight_fraction_leaf": {
  "data": {
   "lineno": 643,
   "symbols_in_volume": [
    "TreeEstimator",
    "itertools.product",
    "numpy.bincount",
    "numpy.float32",
    "numpy.linspace",
    "numpy.min",
    "numpy.sum",
    "sklearn.datasets",
    "sklearn.datasets.astype",
    "sklearn.tree.tests.test_tree.ALL_TREES",
    "sklearn.tree.tests.test_tree.DATASETS",
    "sklearn.tree.tests.test_tree.X",
    "sklearn.tree.tests.test_tree.rng",
    "sklearn.tree.tests.test_tree.y",
    "sklearn.utils.testing.assert_greater_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.check_min_weight_fraction_leaf_with_min_samples_leaf": {
  "data": {
   "lineno": 716,
   "symbols_in_volume": [
    "TreeEstimator",
    "itertools.product",
    "max",
    "numpy.bincount",
    "numpy.float32",
    "numpy.linspace",
    "numpy.min",
    "sklearn.datasets",
    "sklearn.datasets.astype",
    "sklearn.tree.tests.test_tree.ALL_TREES",
    "sklearn.tree.tests.test_tree.DATASETS",
    "sklearn.tree.tests.test_tree.X",
    "sklearn.tree.tests.test_tree.y",
    "sklearn.utils.testing.assert_greater_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.check_min_weight_leaf_split_level": {
  "data": {
   "lineno": 1567,
   "symbols_in_volume": [
    "TreeEstimator",
    "numpy.array",
    "scipy.sparse.csc_matrix",
    "sklearn.tree.tests.test_tree.ALL_TREES",
    "sklearn.tree.tests.test_tree.X",
    "sklearn.tree.tests.test_tree._check_min_weight_leaf_split_level",
    "sklearn.tree.tests.test_tree.y"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.check_no_sparse_y_support": {
  "data": {
   "lineno": 1684,
   "symbols_in_volume": [
    "TreeEstimator",
    "TypeError",
    "scipy.sparse.csr_matrix",
    "sklearn.tree.tests.test_tree.ALL_TREES",
    "sklearn.tree.tests.test_tree.X",
    "sklearn.tree.tests.test_tree.y",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.check_presort_sparse": {
  "data": {
   "lineno": 1613,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.tree.tests.test_tree.X",
    "sklearn.tree.tests.test_tree.y",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.check_public_apply": {
  "data": {
   "lineno": 1585,
   "symbols_in_volume": [
    "sklearn.tree._tree.DTYPE",
    "sklearn.tree.tests.test_tree.ALL_TREES",
    "sklearn.tree.tests.test_tree.X_small",
    "sklearn.tree.tests.test_tree.y_small",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.check_public_apply_sparse": {
  "data": {
   "lineno": 1594,
   "symbols_in_volume": [
    "scipy.sparse.csr_matrix",
    "sklearn.tree._tree.DTYPE",
    "sklearn.tree.tests.test_tree.ALL_TREES",
    "sklearn.tree.tests.test_tree.X_small",
    "sklearn.tree.tests.test_tree.y_small",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.check_raise_error_on_1d_input": {
  "data": {
   "lineno": 1536,
   "symbols_in_volume": [
    "TreeEstimator",
    "ValueError",
    "sklearn.tree.tests.test_tree.ALL_TREES",
    "sklearn.tree.tests.test_tree.X",
    "sklearn.tree.tests.test_tree.iris",
    "sklearn.tree.tests.test_tree.y",
    "sklearn.utils.testing.assert_raises",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.check_random_state": {
  "data": {
   "shadows": "sklearn.utils.validation.check_random_state"
  },
  "type": "import"
 },
 "sklearn.tree.tests.test_tree.check_sparse_criterion": {
  "data": {
   "lineno": 1433,
   "symbols_in_volume": [
    "TreeEstimator",
    "sklearn.tree",
    "sklearn.tree.tests.test_tree.ALL_TREES",
    "sklearn.tree.tests.test_tree.CLF_CRITERIONS",
    "sklearn.tree.tests.test_tree.DATASETS",
    "sklearn.tree.tests.test_tree.REG_CRITERIONS",
    "sklearn.tree.tests.test_tree.REG_TREES",
    "sklearn.tree.tests.test_tree.X",
    "sklearn.tree.tests.test_tree.assert_tree_equal",
    "sklearn.tree.tests.test_tree.y",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.check_sparse_input": {
  "data": {
   "lineno": 1327,
   "symbols_in_volume": [
    "TreeEstimator",
    "numpy.float32",
    "scipy.sparse.coo_matrix",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "sklearn.tree",
    "sklearn.tree.tests.test_tree.ALL_TREES",
    "sklearn.tree.tests.test_tree.CLF_TREES",
    "sklearn.tree.tests.test_tree.DATASETS",
    "sklearn.tree.tests.test_tree.X",
    "sklearn.tree.tests.test_tree.assert_tree_equal",
    "sklearn.tree.tests.test_tree.y",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sparse_format",
    "sparse_matrix"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.check_sparse_parameters": {
  "data": {
   "lineno": 1389,
   "symbols_in_volume": [
    "TreeEstimator",
    "sklearn.tree",
    "sklearn.tree.tests.test_tree.ALL_TREES",
    "sklearn.tree.tests.test_tree.DATASETS",
    "sklearn.tree.tests.test_tree.X",
    "sklearn.tree.tests.test_tree.assert_tree_equal",
    "sklearn.tree.tests.test_tree.y",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.compute_sample_weight": {
  "data": {
   "shadows": "sklearn.utils.compute_sample_weight"
  },
  "type": "import"
 },
 "sklearn.tree.tests.test_tree.coo_matrix": {
  "data": {
   "shadows": "scipy.sparse.coo_matrix"
  },
  "type": "import"
 },
 "sklearn.tree.tests.test_tree.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "sklearn.tree.tests.test_tree.csc_matrix": {
  "data": {
   "shadows": "scipy.sparse.csc_matrix"
  },
  "type": "import"
 },
 "sklearn.tree.tests.test_tree.csr_matrix": {
  "data": {
   "shadows": "scipy.sparse.csr_matrix"
  },
  "type": "import"
 },
 "sklearn.tree.tests.test_tree.datasets": {
  "data": {
   "shadows": "sklearn.datasets"
  },
  "type": "import"
 },
 "sklearn.tree.tests.test_tree.digits": {
  "data": {
   "lineno": 131
  },
  "type": "constant"
 },
 "sklearn.tree.tests.test_tree.ignore_warnings": {
  "data": {
   "shadows": "sklearn.utils.testing.ignore_warnings"
  },
  "type": "import"
 },
 "sklearn.tree.tests.test_tree.iris": {
  "data": {
   "lineno": 118
  },
  "type": "constant"
 },
 "sklearn.tree.tests.test_tree.mean_squared_error": {
  "data": {
   "shadows": "sklearn.metrics.mean_squared_error"
  },
  "type": "import"
 },
 "sklearn.tree.tests.test_tree.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.tree.tests.test_tree.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "sklearn.tree.tests.test_tree.perm": {
  "data": {
   "lineno": 132
  },
  "type": "constant"
 },
 "sklearn.tree.tests.test_tree.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "sklearn.tree.tests.test_tree.product": {
  "data": {
   "shadows": "itertools.product"
  },
  "type": "import"
 },
 "sklearn.tree.tests.test_tree.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.tree.tests.test_tree.random_state": {
  "data": {
   "lineno": 136
  },
  "type": "constant"
 },
 "sklearn.tree.tests.test_tree.rng": {
  "data": {
   "lineno": 119
  },
  "type": "constant"
 },
 "sklearn.tree.tests.test_tree.sparse_random_matrix": {
  "data": {
   "shadows": "sklearn.random_projection.sparse_random_matrix"
  },
  "type": "import"
 },
 "sklearn.tree.tests.test_tree.struct": {
  "data": {
   "shadows": "struct"
  },
  "type": "import"
 },
 "sklearn.tree.tests.test_tree.test_1d_input": {
  "data": {
   "lineno": 1551,
   "symbols_in_volume": [
    "sklearn.tree.tests.test_tree.ALL_TREES",
    "sklearn.tree.tests.test_tree.check_raise_error_on_1d_input",
    "sklearn.tree.tests.test_tree.pytest",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.test_arrayrepr": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": [
    "Tree",
    "numpy.arange",
    "numpy.newaxis",
    "sklearn.tree.tests.test_tree.REG_TREES",
    "sklearn.tree.tests.test_tree.X",
    "sklearn.tree.tests.test_tree.y"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.test_arrays_persist": {
  "data": {
   "lineno": 1240,
   "symbols_in_volume": [
    "getattr",
    "sklearn.tree.DecisionTreeClassifier",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.test_behaviour_constant_feature_after_splits": {
  "data": {
   "lineno": 1262,
   "symbols_in_volume": [
    "TreeEstimator",
    "numpy.transpose",
    "numpy.vstack",
    "numpy.zeros",
    "sklearn.tree.tests.test_tree.ALL_TREES",
    "sklearn.tree.tests.test_tree.X",
    "sklearn.tree.tests.test_tree.y",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.test_big_input": {
  "data": {
   "lineno": 1293,
   "symbols_in_volume": [
    "ValueError",
    "numpy.float64",
    "numpy.repeat",
    "sklearn.tree.DecisionTreeClassifier",
    "sklearn.tree.tests.test_tree.X",
    "sklearn.utils.testing.assert_in",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.test_boston": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "Tree",
    "itertools.product",
    "sklearn.metrics.mean_squared_error",
    "sklearn.tree.tests.test_tree.REG_CRITERIONS",
    "sklearn.tree.tests.test_tree.REG_TREES",
    "sklearn.tree.tests.test_tree.boston",
    "sklearn.utils.testing.assert_less"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.test_class_weight_errors": {
  "data": {
   "lineno": 1206,
   "symbols_in_volume": [
    "sklearn.tree.tests.test_tree.CLF_TREES",
    "sklearn.tree.tests.test_tree.check_class_weight_errors",
    "sklearn.tree.tests.test_tree.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.test_class_weights": {
  "data": {
   "lineno": 1182,
   "symbols_in_volume": [
    "sklearn.tree.tests.test_tree.CLF_TREES",
    "sklearn.tree.tests.test_tree.check_class_weights",
    "sklearn.tree.tests.test_tree.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.test_classes_shape": {
  "data": {
   "lineno": 992,
   "symbols_in_volume": [
    "TreeClassifier",
    "len",
    "numpy.array",
    "numpy.vstack",
    "sklearn.tree.tests.test_tree.CLF_TREES",
    "sklearn.tree.tests.test_tree.X",
    "sklearn.tree.tests.test_tree.y",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.test_classification_toy": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "Tree",
    "sklearn.tree.tests.test_tree.CLF_TREES",
    "sklearn.tree.tests.test_tree.T",
    "sklearn.tree.tests.test_tree.X",
    "sklearn.tree.tests.test_tree.true_result",
    "sklearn.tree.tests.test_tree.y",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.test_criterion_copy": {
  "data": {
   "lineno": 1793,
   "symbols_in_volume": [
    "copy_func",
    "numpy.arange",
    "numpy.intp",
    "sklearn.tree.tests.test_tree.copy",
    "sklearn.tree.tree.CRITERIA_CLF.items",
    "sklearn.tree.tree.CRITERIA_REG.items",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal",
    "typename"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.test_criterion_copy._pickle_copy": {
  "data": {
   "lineno": 1800,
   "symbols_in_volume": [
    "sklearn.tree.tests.test_tree.pickle"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.test_decision_path": {
  "data": {
   "lineno": 1679,
   "symbols_in_volume": [
    "sklearn.tree.tests.test_tree.ALL_TREES",
    "sklearn.tree.tests.test_tree.check_decision_path",
    "sklearn.tree.tests.test_tree.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.test_decision_path_hardcoded": {
  "data": {
   "lineno": 1643,
   "symbols_in_volume": [
    "sklearn.tree.DecisionTreeClassifier",
    "sklearn.tree.tests.test_tree.X",
    "sklearn.tree.tests.test_tree.iris",
    "sklearn.tree.tests.test_tree.y",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.test_empty_leaf_infinite_threshold": {
  "data": {
   "lineno": 1820,
   "symbols_in_volume": [
    "len",
    "numpy.isfinite",
    "numpy.nan_to_num",
    "numpy.random.RandomState",
    "numpy.where",
    "scipy.sparse.csc_matrix",
    "set",
    "sklearn.tree",
    "sklearn.tree.DecisionTreeRegressor",
    "sklearn.tree._tree.TREE_LEAF",
    "sklearn.tree.apply",
    "sklearn.tree.tests.test_tree.X",
    "sklearn.tree.tests.test_tree.y",
    "sklearn.tree.tree_.children_left",
    "sklearn.tree.tree_.threshold"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.test_error": {
  "data": {
   "lineno": 498,
   "symbols_in_volume": [
    "DeprecationWarning",
    "TreeEstimator",
    "ValueError",
    "numpy.array",
    "numpy.asarray",
    "numpy.asfortranarray",
    "numpy.dot",
    "sklearn.exceptions.NotFittedError",
    "sklearn.tree.tests.test_tree.ALL_TREES",
    "sklearn.tree.tests.test_tree.CLF_TREES",
    "sklearn.tree.tests.test_tree.T",
    "sklearn.tree.tests.test_tree.X",
    "sklearn.tree.tests.test_tree.true_result",
    "sklearn.tree.tests.test_tree.y",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_raises",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.test_explicit_sparse_zeros": {
  "data": {
   "lineno": 1531,
   "symbols_in_volume": [
    "sklearn.tree.tests.test_tree.SPARSE_TREES",
    "sklearn.tree.tests.test_tree.check_explicit_sparse_zeros",
    "sklearn.tree.tests.test_tree.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.test_huge_allocations": {
  "data": {
   "lineno": 1308,
   "symbols_in_volume": [
    "Exception",
    "MemoryError",
    "numpy.random.randint",
    "numpy.random.randn",
    "sklearn.tree.DecisionTreeClassifier",
    "sklearn.tree.tests.test_tree.X",
    "sklearn.tree.tests.test_tree.struct",
    "sklearn.tree.tests.test_tree.y",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.test_importances": {
  "data": {
   "lineno": 370,
   "symbols_in_volume": [
    "Tree",
    "len",
    "numpy.sum",
    "sklearn.datasets.make_classification",
    "sklearn.tree.DecisionTreeClassifier",
    "sklearn.tree.tests.test_tree.CLF_TREES",
    "sklearn.tree.tests.test_tree.X",
    "sklearn.tree.tests.test_tree.iris",
    "sklearn.tree.tests.test_tree.y",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.test_importances_gini_equal_mse": {
  "data": {
   "lineno": 407,
   "symbols_in_volume": [
    "sklearn.datasets.make_classification",
    "sklearn.tree.DecisionTreeClassifier",
    "sklearn.tree.DecisionTreeRegressor",
    "sklearn.tree.tests.test_tree.X",
    "sklearn.tree.tests.test_tree.y",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.test_importances_raises": {
  "data": {
   "lineno": 401,
   "symbols_in_volume": [
    "ValueError",
    "getattr",
    "sklearn.tree.DecisionTreeClassifier",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.test_invalid_presort": {
  "data": {
   "lineno": 1632,
   "symbols_in_volume": [
    "ValueError",
    "cls",
    "sklearn.tree.DecisionTreeClassifier",
    "sklearn.tree.DecisionTreeRegressor",
    "sklearn.tree.tests.test_tree.X",
    "sklearn.tree.tests.test_tree.pytest",
    "sklearn.tree.tests.test_tree.y",
    "sklearn.utils.testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.test_iris": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "Tree",
    "itertools.product",
    "sklearn.metrics.accuracy_score",
    "sklearn.tree.tests.test_tree.CLF_CRITERIONS",
    "sklearn.tree.tests.test_tree.CLF_TREES",
    "sklearn.tree.tests.test_tree.iris",
    "sklearn.utils.testing.assert_greater"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.test_mae": {
  "data": {
   "lineno": 1696,
   "symbols_in_volume": [
    "numpy.ones",
    "sklearn.tree.DecisionTreeRegressor",
    "sklearn.utils.testing.assert_allclose",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.test_max_features": {
  "data": {
   "lineno": 433,
   "symbols_in_volume": [
    "TreeClassifier",
    "TreeEstimator",
    "TreeRegressor",
    "ValueError",
    "int",
    "numpy.log2",
    "numpy.sqrt",
    "sklearn.tree.tests.test_tree.ALL_TREES",
    "sklearn.tree.tests.test_tree.CLF_TREES",
    "sklearn.tree.tests.test_tree.REG_TREES",
    "sklearn.tree.tests.test_tree.X",
    "sklearn.tree.tests.test_tree.boston",
    "sklearn.tree.tests.test_tree.iris",
    "sklearn.tree.tests.test_tree.y",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.test_max_leaf_nodes": {
  "data": {
   "lineno": 1211,
   "symbols_in_volume": [
    "TreeEstimator",
    "ValueError",
    "sklearn.datasets.make_hastie_10_2",
    "sklearn.tree",
    "sklearn.tree._tree.TREE_LEAF.sum",
    "sklearn.tree.children_left.sum",
    "sklearn.tree.tests.test_tree.ALL_TREES",
    "sklearn.tree.tests.test_tree.X",
    "sklearn.tree.tests.test_tree.y",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.test_max_leaf_nodes_max_depth": {
  "data": {
   "lineno": 1230,
   "symbols_in_volume": [
    "TreeEstimator",
    "sklearn.datasets.make_hastie_10_2",
    "sklearn.tree",
    "sklearn.tree.max_depth",
    "sklearn.tree.tests.test_tree.ALL_TREES",
    "sklearn.tree.tests.test_tree.X",
    "sklearn.tree.tests.test_tree.y",
    "sklearn.utils.testing.assert_greater"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.test_memory_layout": {
  "data": {
   "lineno": 1024,
   "symbols_in_volume": [
    "TreeEstimator",
    "itertools.product",
    "numpy.asarray",
    "numpy.ascontiguousarray",
    "numpy.float32",
    "numpy.float64",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "sklearn.tree.tests.test_tree.ALL_TREES",
    "sklearn.tree.tests.test_tree.X",
    "sklearn.tree.tests.test_tree.iris",
    "sklearn.tree.tests.test_tree.y",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.test_min_impurity_decrease": {
  "data": {
   "lineno": 847,
   "symbols_in_volume": [
    "TreeEstimator",
    "dict",
    "getattr",
    "itertools.product",
    "range",
    "sklearn.datasets.make_classification",
    "sklearn.tree._tree.TREE_LEAF",
    "sklearn.tree.tests.test_tree.ALL_TREES",
    "sklearn.tree.tests.test_tree.X",
    "sklearn.tree.tests.test_tree.boston",
    "sklearn.tree.tests.test_tree.iris",
    "sklearn.tree.tests.test_tree.pickle",
    "sklearn.tree.tests.test_tree.y",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_greater_equal",
    "sklearn.utils.testing.assert_less_equal",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.test_min_impurity_split": {
  "data": {
   "lineno": 791,
   "symbols_in_volume": [
    "AssertionError",
    "DeprecationWarning",
    "TreeEstimator",
    "itertools.product",
    "numpy.asfortranarray",
    "range",
    "sklearn.tree._tree.DTYPE",
    "sklearn.tree._tree.TREE_LEAF",
    "sklearn.tree.tests.test_tree.ALL_TREES",
    "sklearn.tree.tests.test_tree.X",
    "sklearn.tree.tests.test_tree.iris",
    "sklearn.tree.tests.test_tree.y",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_greater_equal",
    "sklearn.utils.testing.assert_less_equal",
    "sklearn.utils.testing.assert_true",
    "sklearn.utils.testing.assert_warns",
    "sklearn.utils.testing.assert_warns_message"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.test_min_samples_leaf": {
  "data": {
   "lineno": 608,
   "symbols_in_volume": [
    "TreeEstimator",
    "itertools.product",
    "numpy.asfortranarray",
    "numpy.bincount",
    "numpy.min",
    "sklearn.tree._tree.DTYPE",
    "sklearn.tree.tests.test_tree.ALL_TREES",
    "sklearn.tree.tests.test_tree.X",
    "sklearn.tree.tests.test_tree.iris",
    "sklearn.tree.tests.test_tree.y",
    "sklearn.utils.testing.assert_greater"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.test_min_samples_split": {
  "data": {
   "lineno": 575,
   "symbols_in_volume": [
    "TreeEstimator",
    "itertools.product",
    "numpy.asfortranarray",
    "numpy.min",
    "sklearn.tree._tree.DTYPE",
    "sklearn.tree.tests.test_tree.ALL_TREES",
    "sklearn.tree.tests.test_tree.X",
    "sklearn.tree.tests.test_tree.iris",
    "sklearn.tree.tests.test_tree.y",
    "sklearn.utils.testing.assert_greater"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.test_min_weight_fraction_leaf_on_dense_input": {
  "data": {
   "lineno": 706,
   "symbols_in_volume": [
    "sklearn.tree.tests.test_tree.ALL_TREES",
    "sklearn.tree.tests.test_tree.check_min_weight_fraction_leaf",
    "sklearn.tree.tests.test_tree.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.test_min_weight_fraction_leaf_on_sparse_input": {
  "data": {
   "lineno": 711,
   "symbols_in_volume": [
    "sklearn.tree.tests.test_tree.SPARSE_TREES",
    "sklearn.tree.tests.test_tree.check_min_weight_fraction_leaf",
    "sklearn.tree.tests.test_tree.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.test_min_weight_fraction_leaf_with_min_samples_leaf_on_dense_input": {
  "data": {
   "lineno": 780,
   "symbols_in_volume": [
    "sklearn.tree.tests.test_tree.ALL_TREES",
    "sklearn.tree.tests.test_tree.check_min_weight_fraction_leaf_with_min_samples_leaf",
    "sklearn.tree.tests.test_tree.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.test_min_weight_fraction_leaf_with_min_samples_leaf_on_sparse_input": {
  "data": {
   "lineno": 785,
   "symbols_in_volume": [
    "sklearn.tree.tests.test_tree.SPARSE_TREES",
    "sklearn.tree.tests.test_tree.check_min_weight_fraction_leaf_with_min_samples_leaf",
    "sklearn.tree.tests.test_tree.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.test_min_weight_leaf_split_level": {
  "data": {
   "lineno": 1580,
   "symbols_in_volume": [
    "sklearn.tree.tests.test_tree.ALL_TREES",
    "sklearn.tree.tests.test_tree.check_min_weight_leaf_split_level",
    "sklearn.tree.tests.test_tree.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.test_multioutput": {
  "data": {
   "lineno": 936,
   "symbols_in_volume": [
    "TreeClassifier",
    "TreeRegressor",
    "len",
    "sklearn.tree.tests.test_tree.CLF_TREES",
    "sklearn.tree.tests.test_tree.REG_TREES",
    "sklearn.tree.tests.test_tree.T",
    "sklearn.tree.tests.test_tree.X",
    "sklearn.tree.tests.test_tree.y",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.test_no_sparse_y_support": {
  "data": {
   "lineno": 1690,
   "symbols_in_volume": [
    "sklearn.tree.tests.test_tree.ALL_TREES",
    "sklearn.tree.tests.test_tree.check_no_sparse_y_support",
    "sklearn.tree.tests.test_tree.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.test_numerical_stability": {
  "data": {
   "lineno": 347,
   "symbols_in_volume": [
    "Tree",
    "numpy.array",
    "numpy.errstate",
    "sklearn.tree.tests.test_tree.REG_TREES",
    "sklearn.tree.tests.test_tree.X",
    "sklearn.tree.tests.test_tree.y"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.test_only_constant_features": {
  "data": {
   "lineno": 1252,
   "symbols_in_volume": [
    "TreeEstimator",
    "numpy.zeros",
    "sklearn.tree.tests.test_tree.ALL_TREES",
    "sklearn.tree.tests.test_tree.X",
    "sklearn.tree.tests.test_tree.random_state",
    "sklearn.tree.tests.test_tree.y",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.validation.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.test_presort_sparse": {
  "data": {
   "lineno": 1617,
   "symbols_in_volume": [
    "itertools.product",
    "scipy.sparse.coo_matrix",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "sklearn.datasets.make_multilabel_classification",
    "sklearn.tree.DecisionTreeClassifier",
    "sklearn.tree.DecisionTreeRegressor",
    "sklearn.tree.tests.test_tree.X",
    "sklearn.tree.tests.test_tree.check_presort_sparse",
    "sklearn.tree.tests.test_tree.y",
    "sparse_matrix"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.test_probability": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": [
    "Tree",
    "numpy.argmax",
    "numpy.exp",
    "numpy.ones",
    "numpy.sum",
    "sklearn.tree.tests.test_tree.CLF_TREES",
    "sklearn.tree.tests.test_tree.iris",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.test_public_apply_all_trees": {
  "data": {
   "lineno": 1603,
   "symbols_in_volume": [
    "sklearn.tree.tests.test_tree.ALL_TREES",
    "sklearn.tree.tests.test_tree.check_public_apply",
    "sklearn.tree.tests.test_tree.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.test_public_apply_sparse_trees": {
  "data": {
   "lineno": 1608,
   "symbols_in_volume": [
    "sklearn.tree.tests.test_tree.SPARSE_TREES",
    "sklearn.tree.tests.test_tree.check_public_apply_sparse",
    "sklearn.tree.tests.test_tree.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.test_pure_set": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": [
    "TreeClassifier",
    "TreeRegressor",
    "sklearn.tree.tests.test_tree.CLF_TREES",
    "sklearn.tree.tests.test_tree.REG_TREES",
    "sklearn.tree.tests.test_tree.X",
    "sklearn.tree.tests.test_tree.y",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.test_realloc": {
  "data": {
   "lineno": 1303,
   "symbols_in_volume": [
    "MemoryError",
    "sklearn.tree._utils._realloc_test",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.test_regression_toy": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "Tree",
    "sklearn.tree.tests.test_tree.REG_TREES",
    "sklearn.tree.tests.test_tree.T",
    "sklearn.tree.tests.test_tree.X",
    "sklearn.tree.tests.test_tree.true_result",
    "sklearn.tree.tests.test_tree.y",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.test_sample_weight": {
  "data": {
   "lineno": 1067,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.bincount",
    "numpy.newaxis",
    "numpy.ones",
    "numpy.zeros",
    "sklearn.tree.DecisionTreeClassifier",
    "sklearn.tree._tree.TREE_LEAF",
    "sklearn.tree.tests.test_tree.X",
    "sklearn.tree.tests.test_tree.iris",
    "sklearn.tree.tests.test_tree.rng",
    "sklearn.tree.tests.test_tree.y",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.test_sample_weight_invalid": {
  "data": {
   "lineno": 1118,
   "symbols_in_volume": [
    "ValueError",
    "numpy.arange",
    "numpy.array",
    "numpy.newaxis",
    "numpy.ones",
    "numpy.random.rand",
    "sklearn.tree.DecisionTreeClassifier",
    "sklearn.tree.tests.test_tree.X",
    "sklearn.tree.tests.test_tree.y",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.test_sparse": {
  "data": {
   "lineno": 1453,
   "symbols_in_volume": [
    "check",
    "sklearn.tree.tests.test_tree.SPARSE_TREES",
    "sklearn.tree.tests.test_tree.check_sparse_criterion",
    "sklearn.tree.tests.test_tree.check_sparse_parameters",
    "sklearn.tree.tests.test_tree.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.test_sparse_input": {
  "data": {
   "lineno": 1368,
   "symbols_in_volume": [
    "sklearn.tree.tests.test_tree.SPARSE_TREES",
    "sklearn.tree.tests.test_tree.check_sparse_input",
    "sklearn.tree.tests.test_tree.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.test_sparse_input_reg_trees": {
  "data": {
   "lineno": 1380,
   "symbols_in_volume": [
    "set",
    "sklearn.tree.tests.test_tree.REG_TREES",
    "sklearn.tree.tests.test_tree.SPARSE_TREES",
    "sklearn.tree.tests.test_tree.check_sparse_input",
    "sklearn.tree.tests.test_tree.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.test_unbalanced_iris": {
  "data": {
   "lineno": 1012,
   "symbols_in_volume": [
    "TreeClassifier",
    "sklearn.tree.tests.test_tree.CLF_TREES",
    "sklearn.tree.tests.test_tree.iris",
    "sklearn.utils.compute_sample_weight",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.test_weighted_classification_toy": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "Tree",
    "len",
    "numpy.full",
    "numpy.ones",
    "sklearn.tree.tests.test_tree.CLF_TREES",
    "sklearn.tree.tests.test_tree.T",
    "sklearn.tree.tests.test_tree.X",
    "sklearn.tree.tests.test_tree.true_result",
    "sklearn.tree.tests.test_tree.y",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.test_with_only_one_non_constant_features": {
  "data": {
   "lineno": 1275,
   "symbols_in_volume": [
    "TreeEstimator",
    "numpy.array",
    "numpy.full",
    "numpy.hstack",
    "numpy.zeros",
    "sklearn.tree.tests.test_tree.CLF_TREES",
    "sklearn.tree.tests.test_tree.REG_TREES",
    "sklearn.tree.tests.test_tree.X",
    "sklearn.tree.tests.test_tree.y",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.test_xor": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "Tree",
    "numpy.indices",
    "numpy.vstack",
    "numpy.zeros",
    "sklearn.tree.tests.test_tree.CLF_TREES",
    "sklearn.tree.tests.test_tree.X",
    "sklearn.tree.tests.test_tree.y",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.tree": {
  "data": {
   "shadows": "sklearn.tree"
  },
  "type": "import"
 },
 "sklearn.tree.tests.test_tree.true_result": {
  "data": {
   "lineno": 114
  },
  "type": "constant"
 },
 "sklearn.tree.tests.test_tree.y": {
  "data": {
   "lineno": 112
  },
  "type": "constant"
 },
 "sklearn.tree.tests.test_tree.y_random": {
  "data": {
   "lineno": 143
  },
  "type": "constant"
 },
 "sklearn.tree.tests.test_tree.y_small": {
  "data": {
   "lineno": 105
  },
  "type": "constant"
 },
 "sklearn.tree.tests.test_tree.y_small_reg": {
  "data": {
   "lineno": 107
  },
  "type": "constant"
 },
 "sklearn.tree.tree": {
  "data": {},
  "type": "module"
 },
 "sklearn.tree.tree.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "sklearn.tree.tree.BaseDecisionTree": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "abc.ABCMeta"
   ]
  },
  "type": "class"
 },
 "sklearn.tree.tree.BaseDecisionTree.__init__": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.tree.BaseDecisionTree._validate_X_predict": {
  "data": {
   "lineno": 373,
   "symbols_in_volume": [
    "ValueError",
    "check_array",
    "numpy.intc",
    "scipy.sparse.issparse",
    "sklearn.tree.tree.DTYPE"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.tree.BaseDecisionTree.apply": {
  "data": {
   "lineno": 442,
   "symbols_in_volume": [
    "check_is_fitted"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.tree.BaseDecisionTree.decision_path": {
  "data": {
   "lineno": 471
  },
  "type": "function"
 },
 "sklearn.tree.tree.BaseDecisionTree.feature_importances_": {
  "data": {
   "lineno": 497,
   "symbols_in_volume": [
    "check_is_fitted",
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.tree.BaseDecisionTree.fit": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "BestFirstTreeBuilder",
    "DeprecationWarning",
    "DepthFirstTreeBuilder",
    "Tree",
    "ValueError",
    "check_array",
    "check_classification_targets",
    "check_random_state",
    "compute_sample_weight",
    "getattr",
    "int",
    "is_classifier",
    "isinstance",
    "len",
    "math.ceil",
    "max",
    "numpy.argsort",
    "numpy.array",
    "numpy.ascontiguousarray",
    "numpy.asfortranarray",
    "numpy.atleast_1d",
    "numpy.copy",
    "numpy.int",
    "numpy.int32",
    "numpy.intc",
    "numpy.integer",
    "numpy.intp",
    "numpy.log2",
    "numpy.reshape",
    "numpy.sqrt",
    "numpy.sum",
    "numpy.unique",
    "numpy.zeros",
    "range",
    "scipy.sparse.issparse",
    "sklearn.tree.tree.CRITERIA_CLF",
    "sklearn.tree.tree.CRITERIA_REG",
    "sklearn.tree.tree.DENSE_SPLITTERS",
    "sklearn.tree.tree.DOUBLE",
    "sklearn.tree.tree.DTYPE",
    "sklearn.tree.tree.SPARSE_SPLITTERS",
    "sklearn.tree.tree.numbers",
    "sklearn.tree.tree.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.tree.BaseDecisionTree.predict": {
  "data": {
   "lineno": 391,
   "symbols_in_volume": [
    "check_is_fitted",
    "is_classifier",
    "numpy.argmax",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.tree.CRITERIA_CLF": {
  "data": {
   "lineno": 60
  },
  "type": "constant"
 },
 "sklearn.tree.tree.CRITERIA_REG": {
  "data": {
   "lineno": 61
  },
  "type": "constant"
 },
 "sklearn.tree.tree.DENSE_SPLITTERS": {
  "data": {
   "lineno": 64
  },
  "type": "constant"
 },
 "sklearn.tree.tree.DOUBLE": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "sklearn.tree.tree.DTYPE": {
  "data": {
   "lineno": 57
  },
  "type": "constant"
 },
 "sklearn.tree.tree.DecisionTreeClassifier": {
  "data": {
   "lineno": 518,
   "symbols_in_volume": [
    "sklearn.tree.tree.BaseDecisionTree"
   ]
  },
  "type": "class"
 },
 "sklearn.tree.tree.DecisionTreeClassifier.__init__": {
  "data": {
   "lineno": 730,
   "symbols_in_volume": [
    "sklearn.tree.tree.DecisionTreeClassifier",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.tree.DecisionTreeClassifier.fit": {
  "data": {
   "lineno": 759,
   "symbols_in_volume": [
    "sklearn.tree.tree.DecisionTreeClassifier",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.tree.DecisionTreeClassifier.predict_log_proba": {
  "data": {
   "lineno": 853,
   "symbols_in_volume": [
    "numpy.log",
    "range"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.tree.DecisionTreeClassifier.predict_proba": {
  "data": {
   "lineno": 802,
   "symbols_in_volume": [
    "check_is_fitted",
    "numpy.newaxis",
    "range"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.tree.DecisionTreeRegressor": {
  "data": {
   "lineno": 882,
   "symbols_in_volume": [
    "sklearn.tree.tree.BaseDecisionTree"
   ]
  },
  "type": "class"
 },
 "sklearn.tree.tree.DecisionTreeRegressor.__init__": {
  "data": {
   "lineno": 1073,
   "symbols_in_volume": [
    "sklearn.tree.tree.DecisionTreeRegressor",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.tree.DecisionTreeRegressor.fit": {
  "data": {
   "lineno": 1100,
   "symbols_in_volume": [
    "sklearn.tree.tree.DecisionTreeRegressor",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.tree.ExtraTreeClassifier": {
  "data": {
   "lineno": 1143,
   "symbols_in_volume": [
    "sklearn.tree.tree.DecisionTreeClassifier"
   ]
  },
  "type": "class"
 },
 "sklearn.tree.tree.ExtraTreeClassifier.__init__": {
  "data": {
   "lineno": 1298,
   "symbols_in_volume": [
    "sklearn.tree.tree.ExtraTreeClassifier",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.tree.ExtraTreeRegressor": {
  "data": {
   "lineno": 1326,
   "symbols_in_volume": [
    "sklearn.tree.tree.DecisionTreeRegressor"
   ]
  },
  "type": "class"
 },
 "sklearn.tree.tree.ExtraTreeRegressor.__init__": {
  "data": {
   "lineno": 1466,
   "symbols_in_volume": [
    "sklearn.tree.tree.ExtraTreeRegressor",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.tree.SPARSE_SPLITTERS": {
  "data": {
   "lineno": 67
  },
  "type": "constant"
 },
 "sklearn.tree.tree.__all__": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "sklearn.tree.tree.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "sklearn.tree.tree.ceil": {
  "data": {
   "shadows": "math.ceil"
  },
  "type": "import"
 },
 "sklearn.tree.tree.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sklearn.tree.tree.issparse": {
  "data": {
   "shadows": "scipy.sparse.issparse"
  },
  "type": "import"
 },
 "sklearn.tree.tree.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.tree.tree.numbers": {
  "data": {
   "shadows": "numbers"
  },
  "type": "import"
 },
 "sklearn.tree.tree.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.utils": {
  "data": {
   "symbols_in_volume": [
    "sklearn.utils.platform",
    "sklearn.utils.struct"
   ]
  },
  "type": "module"
 },
 "sklearn.utils.Bunch": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "class"
 },
 "sklearn.utils.Bunch.__dir__": {
  "data": {
   "lineno": 66
  },
  "type": "function"
 },
 "sklearn.utils.Bunch.__getattr__": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "AttributeError",
    "KeyError"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.Bunch.__init__": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "sklearn.utils.Bunch",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.Bunch.__setattr__": {
  "data": {
   "lineno": 63
  },
  "type": "function"
 },
 "sklearn.utils.Bunch.__setstate__": {
  "data": {
   "lineno": 75
  },
  "type": "function"
 },
 "sklearn.utils.IS_PYPY": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "sklearn.utils.Sequence": {
  "data": {
   "shadows": "_Sequence"
  },
  "type": "import"
 },
 "sklearn.utils._IS_32BIT": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "sklearn.utils.__all__": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "sklearn.utils._joblib": {
  "data": {
   "symbols_in_volume": [
    "os.environ.get",
    "warnings.catch_warnings",
    "warnings.simplefilter"
   ]
  },
  "type": "module"
 },
 "sklearn.utils._joblib.__all__": {
  "data": {
   "shadows": "joblib.__all__"
  },
  "type": "import"
 },
 "sklearn.utils._joblib.__version__": {
  "data": {
   "shadows": "joblib.__version__"
  },
  "type": "import"
 },
 "sklearn.utils._joblib._os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "sklearn.utils._joblib._warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.utils._joblib.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "sklearn.utils._joblib.logger": {
  "data": {
   "shadows": "joblib.logger"
  },
  "type": "import"
 },
 "sklearn.utils._scipy_sparse_lsqr_backport": {
  "data": {
   "symbols_in_volume": [
    "numpy.finfo",
    "numpy.float64"
   ]
  },
  "type": "module"
 },
 "sklearn.utils._scipy_sparse_lsqr_backport.__all__": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "sklearn.utils._scipy_sparse_lsqr_backport._sym_ortho": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "abs",
    "math.sqrt",
    "numpy.sign"
   ]
  },
  "type": "function"
 },
 "sklearn.utils._scipy_sparse_lsqr_backport.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "sklearn.utils._scipy_sparse_lsqr_backport.aslinearoperator": {
  "data": {
   "shadows": "scipy.sparse.linalg.interface.aslinearoperator"
  },
  "type": "import"
 },
 "sklearn.utils._scipy_sparse_lsqr_backport.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sklearn.utils._scipy_sparse_lsqr_backport.eps": {
  "data": {
   "lineno": 60
  },
  "type": "constant"
 },
 "sklearn.utils._scipy_sparse_lsqr_backport.lsqr": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "abs",
    "len",
    "math.sqrt",
    "numpy.linalg.norm",
    "numpy.zeros",
    "print",
    "scipy.sparse.linalg.interface.aslinearoperator",
    "sklearn.utils._scipy_sparse_lsqr_backport._sym_ortho",
    "sklearn.utils._scipy_sparse_lsqr_backport.eps"
   ]
  },
  "type": "function"
 },
 "sklearn.utils._scipy_sparse_lsqr_backport.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.utils._scipy_sparse_lsqr_backport.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "sklearn.utils._scipy_sparse_lsqr_backport.sqrt": {
  "data": {
   "shadows": "math.sqrt"
  },
  "type": "import"
 },
 "sklearn.utils._show_versions": {
  "data": {},
  "type": "module"
 },
 "sklearn.utils._show_versions._get_blas_info": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "dict",
    "get_blas_info"
   ]
  },
  "type": "function"
 },
 "sklearn.utils._show_versions._get_deps_info": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "ImportError",
    "get_version",
    "sklearn.utils._show_versions.importlib",
    "sklearn.utils._show_versions.sys"
   ]
  },
  "type": "function"
 },
 "sklearn.utils._show_versions._get_deps_info.get_version": {
  "data": {
   "lineno": 52
  },
  "type": "function"
 },
 "sklearn.utils._show_versions._get_sys_info": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "dict",
    "sklearn.utils._show_versions.platform",
    "sklearn.utils._show_versions.sys"
   ]
  },
  "type": "function"
 },
 "sklearn.utils._show_versions.importlib": {
  "data": {
   "shadows": "importlib"
  },
  "type": "import"
 },
 "sklearn.utils._show_versions.platform": {
  "data": {
   "shadows": "platform"
  },
  "type": "import"
 },
 "sklearn.utils._show_versions.show_versions": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "print",
    "sklearn.utils._show_versions._get_blas_info",
    "sklearn.utils._show_versions._get_deps_info",
    "sklearn.utils._show_versions._get_sys_info"
   ]
  },
  "type": "function"
 },
 "sklearn.utils._show_versions.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "sklearn.utils._unittest_backport": {
  "data": {},
  "type": "module"
 },
 "sklearn.utils._unittest_backport.TestCase": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "AssertionError",
    "sklearn.utils._unittest_backport.unittest"
   ]
  },
  "type": "class"
 },
 "sklearn.utils._unittest_backport.TestCase._formatMessage": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "UnicodeDecodeError"
   ]
  },
  "type": "function"
 },
 "sklearn.utils._unittest_backport.TestCase.assertRaises": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "sklearn.utils._unittest_backport._AssertRaisesContext"
   ]
  },
  "type": "function"
 },
 "sklearn.utils._unittest_backport.TestCase.assertRaisesRegex": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "sklearn.utils._unittest_backport._AssertRaisesContext"
   ]
  },
  "type": "function"
 },
 "sklearn.utils._unittest_backport._AssertRaisesBaseContext": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "sklearn.utils._unittest_backport._BaseTestCaseContext"
   ]
  },
  "type": "class"
 },
 "sklearn.utils._unittest_backport._AssertRaisesBaseContext.__init__": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "sklearn.utils._unittest_backport._BaseTestCaseContext",
    "sklearn.utils._unittest_backport.re"
   ]
  },
  "type": "function"
 },
 "sklearn.utils._unittest_backport._AssertRaisesBaseContext.handle": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "AttributeError",
    "DeprecationWarning",
    "TypeError",
    "callable_obj",
    "iter",
    "next",
    "sklearn.utils._unittest_backport._is_subtype",
    "sklearn.utils._unittest_backport.warnings",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.utils._unittest_backport._AssertRaisesContext": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "BaseException",
    "sklearn.utils._unittest_backport._AssertRaisesBaseContext"
   ]
  },
  "type": "class"
 },
 "sklearn.utils._unittest_backport._AssertRaisesContext.__enter__": {
  "data": {
   "lineno": 125
  },
  "type": "function"
 },
 "sklearn.utils._unittest_backport._AssertRaisesContext.__exit__": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "AttributeError",
    "issubclass",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.utils._unittest_backport._BaseTestCaseContext": {
  "data": {
   "lineno": 62
  },
  "type": "class"
 },
 "sklearn.utils._unittest_backport._BaseTestCaseContext.__init__": {
  "data": {
   "lineno": 64
  },
  "type": "function"
 },
 "sklearn.utils._unittest_backport._BaseTestCaseContext._raiseFailure": {
  "data": {
   "lineno": 67
  },
  "type": "function"
 },
 "sklearn.utils._unittest_backport._is_subtype": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "all",
    "isinstance",
    "issubclass",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.utils._unittest_backport.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "sklearn.utils._unittest_backport.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "sklearn.utils._unittest_backport.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.utils.arpack": {
  "data": {},
  "type": "module"
 },
 "sklearn.utils.arpack._eigs": {
  "data": {
   "shadows": "scipy.sparse.linalg.eigs"
  },
  "type": "import"
 },
 "sklearn.utils.arpack._eigsh": {
  "data": {
   "shadows": "scipy.sparse.linalg.eigsh"
  },
  "type": "import"
 },
 "sklearn.utils.arpack._svds": {
  "data": {
   "shadows": "scipy.sparse.linalg.svds"
  },
  "type": "import"
 },
 "sklearn.utils.arpack.eigs": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "deprecated",
    "scipy.sparse.linalg.eigs"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.arpack.eigsh": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "deprecated",
    "scipy.sparse.linalg.eigsh"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.arpack.svds": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "deprecated",
    "scipy.sparse.linalg.svds"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.axis0_safe_slice": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "numpy.zeros",
    "sklearn.utils.safe_mask"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.bench": {
  "data": {},
  "type": "module"
 },
 "sklearn.utils.bench.total_seconds": {
  "data": {
   "lineno": 6
  },
  "type": "function"
 },
 "sklearn.utils.class_weight": {
  "data": {},
  "type": "module"
 },
 "sklearn.utils.class_weight.compute_class_weight": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "LabelEncoder",
    "ValueError",
    "all",
    "dict",
    "isinstance",
    "len",
    "numpy.bincount",
    "numpy.float64",
    "numpy.in1d",
    "numpy.ones",
    "numpy.searchsorted",
    "set"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.class_weight.compute_sample_weight": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "hasattr",
    "isinstance",
    "len",
    "list",
    "numpy.atleast_1d",
    "numpy.choose",
    "numpy.float64",
    "numpy.in1d",
    "numpy.prod",
    "numpy.reshape",
    "numpy.searchsorted",
    "numpy.unique",
    "range",
    "set",
    "sklearn.utils.class_weight.compute_class_weight"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.class_weight.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.utils.deprecation": {
  "data": {},
  "type": "module"
 },
 "sklearn.utils.deprecation.DeprecationDict": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "class"
 },
 "sklearn.utils.deprecation.DeprecationDict.__getitem__": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "sklearn.utils.deprecation.DeprecationDict",
    "sklearn.utils.deprecation.warnings",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.deprecation.DeprecationDict.__init__": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "sklearn.utils.deprecation.DeprecationDict",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.deprecation.DeprecationDict.add_warning": {
  "data": {
   "lineno": 144
  },
  "type": "function"
 },
 "sklearn.utils.deprecation.DeprecationDict.get": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "KeyError"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.deprecation.__all__": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "sklearn.utils.deprecation._is_deprecated": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "NotImplementedError",
    "getattr",
    "isinstance",
    "sklearn.utils.deprecation.sys",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.deprecation.deprecated": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "sklearn.utils.deprecation.deprecated.__call__": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "isinstance",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.deprecation.deprecated.__init__": {
  "data": {
   "lineno": 34
  },
  "type": "function"
 },
 "sklearn.utils.deprecation.deprecated._decorate_class": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "init",
    "init.__doc__"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.deprecation.deprecated._decorate_class.wrapped": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "DeprecationWarning",
    "init",
    "sklearn.utils.deprecation.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.deprecation.deprecated._decorate_fun": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "fun"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.deprecation.deprecated._decorate_fun.wrapped": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "DeprecationWarning",
    "fun",
    "sklearn.utils.deprecation.functools",
    "sklearn.utils.deprecation.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.deprecation.deprecated._update_doc": {
  "data": {
   "lineno": 87
  },
  "type": "function"
 },
 "sklearn.utils.deprecation.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "sklearn.utils.deprecation.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "sklearn.utils.deprecation.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.utils.extmath": {
  "data": {},
  "type": "module"
 },
 "sklearn.utils.extmath._deterministic_vector_sign_flip": {
  "data": {
   "lineno": 793,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.argmax",
    "numpy.newaxis",
    "numpy.sign",
    "range"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.extmath._impose_f_order": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "check_array"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.extmath._incremental_mean_and_var": {
  "data": {
   "lineno": 716,
   "symbols_in_volume": [
    "numpy.errstate",
    "numpy.isnan",
    "numpy.nansum",
    "numpy.nanvar",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.extmath.cartesian": {
  "data": {
   "lineno": 489,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "numpy.asarray",
    "numpy.empty_like",
    "numpy.indices"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.extmath.density": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "float",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.extmath.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sklearn.utils.extmath.fast_dot": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "deprecated",
    "numpy.dot"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.extmath.fast_logdet": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "numpy.inf",
    "numpy.linalg.slogdet"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.extmath.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "sklearn.utils.extmath.log_logistic": {
  "data": {
   "lineno": 582,
   "symbols_in_volume": [
    "_log_logistic_sigmoid",
    "check_array",
    "numpy.atleast_2d",
    "numpy.empty_like",
    "numpy.float64",
    "numpy.squeeze"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.extmath.logsumexp": {
  "data": {
   "lineno": 391,
   "symbols_in_volume": [
    "deprecated"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.extmath.make_nonnegative": {
  "data": {
   "lineno": 685,
   "symbols_in_volume": [
    "ValueError",
    "scipy.sparse.issparse",
    "sklearn.utils.extmath.safe_min"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.extmath.norm": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "deprecated",
    "scipy.linalg.norm"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.extmath.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.utils.extmath.pinvh": {
  "data": {
   "lineno": 483,
   "symbols_in_volume": [
    "deprecated",
    "scipy.linalg.pinvh"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.extmath.randomized_range_finder": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "check_random_state",
    "range",
    "scipy.linalg.lu",
    "scipy.linalg.qr",
    "sklearn.utils.extmath.safe_sparse_dot"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.extmath.randomized_svd": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "check_random_state",
    "isinstance",
    "min",
    "numpy.dot",
    "scipy.linalg.svd",
    "scipy.sparse.SparseEfficiencyWarning",
    "scipy.sparse.dok_matrix",
    "scipy.sparse.lil_matrix",
    "sklearn.utils.extmath.randomized_range_finder",
    "sklearn.utils.extmath.safe_sparse_dot",
    "sklearn.utils.extmath.svd_flip",
    "sklearn.utils.extmath.warnings",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.extmath.row_norms": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "csr_row_norms",
    "isinstance",
    "numpy.einsum",
    "numpy.sqrt",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.issparse"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.extmath.safe_min": {
  "data": {
   "lineno": 661,
   "symbols_in_volume": [
    "len",
    "min",
    "scipy.sparse.issparse"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.extmath.safe_sparse_dot": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "hasattr",
    "numpy.dot",
    "scipy.sparse.issparse"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.extmath.scipy_logsumexp": {
  "data": {
   "shadows": "logsumexp"
  },
  "type": "import"
 },
 "sklearn.utils.extmath.softmax": {
  "data": {
   "lineno": 627,
   "symbols_in_volume": [
    "numpy.copy",
    "numpy.exp",
    "numpy.max",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.extmath.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.utils.extmath.squared_norm": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "UserWarning",
    "numpy.dot",
    "numpy.integer",
    "numpy.issubdtype",
    "numpy.ravel",
    "sklearn.utils.extmath.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.extmath.stable_cumsum": {
  "data": {
   "lineno": 815,
   "symbols_in_volume": [
    "RuntimeWarning",
    "numpy.all",
    "numpy.cumsum",
    "numpy.float64",
    "numpy.isclose",
    "numpy.sum",
    "sklearn.utils.extmath.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.extmath.svd_flip": {
  "data": {
   "lineno": 538,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.argmax",
    "numpy.newaxis",
    "numpy.sign",
    "xrange"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.extmath.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.utils.extmath.weighted_mode": {
  "data": {
   "lineno": 410,
   "symbols_in_volume": [
    "list",
    "numpy.asarray",
    "numpy.expand_dims",
    "numpy.full",
    "numpy.maximum",
    "numpy.ravel",
    "numpy.sum",
    "numpy.unique",
    "numpy.where",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.fixes": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "TypeError",
    "getattr",
    "inspect.signature",
    "numpy",
    "numpy.__version__",
    "numpy.allclose",
    "numpy.array",
    "numpy.array_equal",
    "numpy.divide",
    "numpy.float64",
    "numpy.nan",
    "object",
    "sklearn.utils.fixes._nan_object_array",
    "sklearn.utils.fixes._nan_object_mask",
    "sklearn.utils.fixes._parse_version",
    "sklearn.utils.fixes.np_version",
    "sklearn.utils.fixes.os",
    "sklearn.utils.fixes.scipy",
    "sklearn.utils.fixes.sp_version",
    "sklearn.utils.fixes.sys"
   ]
  },
  "type": "module"
 },
 "sklearn.utils.fixes.MaskedArray": {
  "data": {
   "shadows": "numpy.ma.MaskedArray"
  },
  "type": "import"
 },
 "sklearn.utils.fixes.MaskedArray.__getstate__": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "numpy.ma.MaskedArray",
    "numpy.ma.getmaskarray",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.fixes.PY3_OR_LATER": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "sklearn.utils.fixes._Iterable": {
  "data": {
   "shadows": "collections.Iterable"
  },
  "type": "import"
 },
 "sklearn.utils.fixes._Mapping": {
  "data": {
   "shadows": "collections.Mapping"
  },
  "type": "import"
 },
 "sklearn.utils.fixes._Sequence": {
  "data": {
   "shadows": "collections.Sequence"
  },
  "type": "import"
 },
 "sklearn.utils.fixes._Sized": {
  "data": {
   "shadows": "collections.Sized"
  },
  "type": "import"
 },
 "sklearn.utils.fixes._arg_min_or_max": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "ValueError",
    "compare",
    "min",
    "numpy.product",
    "op",
    "sklearn.utils.fixes._arg_min_or_max_axis",
    "sklearn.utils.fixes._find_missing_index"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.fixes._arg_min_or_max_axis": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "ValueError",
    "compare",
    "int",
    "min",
    "numpy.asmatrix",
    "numpy.diff",
    "numpy.nonzero",
    "numpy.zeros",
    "op",
    "sklearn.utils.fixes._find_missing_index"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.fixes._argmax": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "scipy.sparse.issparse",
    "sklearn.utils.fixes._sparse_argmax"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.fixes._find_missing_index": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "enumerate"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.fixes._nan_object_array": {
  "data": {
   "lineno": 312
  },
  "type": "constant"
 },
 "sklearn.utils.fixes._nan_object_mask": {
  "data": {
   "lineno": 313
  },
  "type": "constant"
 },
 "sklearn.utils.fixes._object_dtype_isnan": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": [
    "bool",
    "numpy.frompyfunc"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.fixes._parse_version": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.fixes._sparse_argmax": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "numpy.argmax",
    "numpy.greater",
    "sklearn.utils.fixes._arg_min_or_max"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.fixes.boxcox": {
  "data": {
   "shadows": "scipy.special.boxcox"
  },
  "type": "import"
 },
 "sklearn.utils.fixes.comb": {
  "data": {
   "shadows": "scipy.misc.comb"
  },
  "type": "import"
 },
 "sklearn.utils.fixes.divide": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.asscalar",
    "numpy.isscalar"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.fixes.errno": {
  "data": {
   "shadows": "errno"
  },
  "type": "import"
 },
 "sklearn.utils.fixes.euler_gamma": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "sklearn.utils.fixes.logsumexp": {
  "data": {
   "shadows": "scipy.misc.logsumexp"
  },
  "type": "import"
 },
 "sklearn.utils.fixes.makedirs": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "OSError",
    "sklearn.utils.fixes.errno",
    "sklearn.utils.fixes.os"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.fixes.nanmedian": {
  "data": {
   "shadows": "numpy.nanmedian"
  },
  "type": "import"
 },
 "sklearn.utils.fixes.nanpercentile": {
  "data": {
   "shadows": "numpy.nanpercentile"
  },
  "type": "import"
 },
 "sklearn.utils.fixes.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.utils.fixes.np_version": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "sklearn.utils.fixes.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "sklearn.utils.fixes.parallel_helper": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.fixes.scipy": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "sklearn.utils.fixes.signature": {
  "data": {
   "shadows": "inspect.signature"
  },
  "type": "import"
 },
 "sklearn.utils.fixes.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.utils.fixes.sp_version": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "sklearn.utils.fixes.sparse_lsqr": {
  "data": {
   "shadows": "scipy.sparse.linalg.lsqr"
  },
  "type": "import"
 },
 "sklearn.utils.fixes.stats": {
  "data": {
   "shadows": "scipy.stats"
  },
  "type": "import"
 },
 "sklearn.utils.fixes.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "sklearn.utils.gen_batches": {
  "data": {
   "lineno": 403,
   "symbols_in_volume": [
    "int",
    "range",
    "slice"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.gen_even_slices": {
  "data": {
   "lineno": 438,
   "symbols_in_volume": [
    "ValueError",
    "min",
    "range",
    "slice"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.get_chunk_n_rows": {
  "data": {
   "lineno": 530,
   "symbols_in_volume": [
    "get_config",
    "int",
    "min",
    "numpy.ceil",
    "sklearn.utils.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.graph": {
  "data": {},
  "type": "module"
 },
 "sklearn.utils.graph.connected_components": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "deprecated",
    "scipy.sparse.csgraph.connected_components"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.graph.csgraph": {
  "data": {
   "shadows": "scipy.sparse.csgraph"
  },
  "type": "import"
 },
 "sklearn.utils.graph.graph_laplacian": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "deprecated",
    "scipy.sparse.csgraph.laplacian"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.graph.single_source_shortest_path_length": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "scipy.sparse.isspmatrix",
    "scipy.sparse.lil_matrix",
    "set"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.graph.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.utils.indices_to_mask": {
  "data": {
   "lineno": 498,
   "symbols_in_volume": [
    "ValueError",
    "numpy.bool",
    "numpy.max",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.is_scalar_nan": {
  "data": {
   "lineno": 569,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "numpy.floating",
    "numpy.isnan",
    "sklearn.utils.numbers"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.issparse": {
  "data": {
   "shadows": "scipy.sparse.issparse"
  },
  "type": "import"
 },
 "sklearn.utils.linear_assignment_": {
  "data": {},
  "type": "module"
 },
 "sklearn.utils.linear_assignment_._HungarianState": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "sklearn.utils.linear_assignment_._HungarianState.__init__": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "int",
    "numpy.atleast_2d",
    "numpy.bool",
    "numpy.ones",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.linear_assignment_._HungarianState._clear_covers": {
  "data": {
   "lineno": 105
  },
  "type": "function"
 },
 "sklearn.utils.linear_assignment_._HungarianState._find_prime_in_row": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "numpy.argmax"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.linear_assignment_._hungarian": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.where",
    "sklearn.utils.linear_assignment_._HungarianState",
    "step"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.linear_assignment_._step1": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "numpy.newaxis",
    "numpy.where",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.linear_assignment_._step3": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "numpy.any"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.linear_assignment_._step4": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "numpy.argmax",
    "numpy.int",
    "numpy.newaxis",
    "numpy.unravel_index"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.linear_assignment_._step5": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "numpy.argmax",
    "range",
    "sklearn.utils.linear_assignment_._step3"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.linear_assignment_._step6": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "numpy.any",
    "numpy.logical_not",
    "numpy.min",
    "sklearn.utils.linear_assignment_._step4"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.linear_assignment_.linear_assignment": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "int",
    "numpy.array",
    "sklearn.utils.linear_assignment_._hungarian"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.linear_assignment_.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.utils.metaestimators": {
  "data": {},
  "type": "module"
 },
 "sklearn.utils.metaestimators.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "sklearn.utils.metaestimators._BaseComposition": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "abc.ABCMeta"
   ]
  },
  "type": "class"
 },
 "sklearn.utils.metaestimators._BaseComposition.__init__": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.metaestimators._BaseComposition._get_params": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "getattr",
    "hasattr",
    "sklearn.utils.metaestimators._BaseComposition",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.metaestimators._BaseComposition._replace_estimator": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "enumerate",
    "getattr",
    "list",
    "setattr"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.metaestimators._BaseComposition._set_params": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "getattr",
    "list",
    "setattr",
    "sklearn.utils.metaestimators._BaseComposition",
    "super",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.metaestimators._BaseComposition._validate_names": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "list",
    "set",
    "sorted"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.metaestimators._IffHasAttrDescriptor": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "sklearn.utils.metaestimators._IffHasAttrDescriptor.__get__": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "AttributeError",
    "functools.update_wrapper",
    "getattr",
    "operator.attrgetter"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.metaestimators._IffHasAttrDescriptor.__init__": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "functools.update_wrapper"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.metaestimators.__all__": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "sklearn.utils.metaestimators._safe_split": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "ValueError",
    "getattr",
    "hasattr",
    "numpy.ix_",
    "safe_indexing"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.metaestimators.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "sklearn.utils.metaestimators.attrgetter": {
  "data": {
   "shadows": "operator.attrgetter"
  },
  "type": "import"
 },
 "sklearn.utils.metaestimators.if_delegate_has_method": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "sklearn.utils.metaestimators._IffHasAttrDescriptor",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.metaestimators.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.utils.metaestimators.update_wrapper": {
  "data": {
   "shadows": "functools.update_wrapper"
  },
  "type": "import"
 },
 "sklearn.utils.mocking": {
  "data": {},
  "type": "module"
 },
 "sklearn.utils.mocking.ArraySlicingWrapper": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "sklearn.utils.mocking.ArraySlicingWrapper.__getitem__": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "sklearn.utils.mocking.MockDataFrame"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.mocking.ArraySlicingWrapper.__init__": {
  "data": {
   "lineno": 14
  },
  "type": "function"
 },
 "sklearn.utils.mocking.CheckingClassifier": {
  "data": {
   "lineno": 52
  },
  "type": "class"
 },
 "sklearn.utils.mocking.CheckingClassifier.__init__": {
  "data": {
   "lineno": 66
  },
  "type": "function"
 },
 "sklearn.utils.mocking.CheckingClassifier.fit": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "assert_true",
    "check_array",
    "len",
    "list",
    "numpy.unique",
    "set"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.mocking.CheckingClassifier.predict": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "_num_samples",
    "assert_true",
    "numpy.int",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.mocking.CheckingClassifier.score": {
  "data": {
   "lineno": 118
  },
  "type": "function"
 },
 "sklearn.utils.mocking.MockDataFrame": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "sklearn.utils.mocking.MockDataFrame.__array__": {
  "data": {
   "lineno": 39
  },
  "type": "function"
 },
 "sklearn.utils.mocking.MockDataFrame.__eq__": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "sklearn.utils.mocking.MockDataFrame"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.mocking.MockDataFrame.__init__": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "sklearn.utils.mocking.ArraySlicingWrapper"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.mocking.MockDataFrame.__len__": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.mocking.MockDataFrame.__ne__": {
  "data": {
   "lineno": 48
  },
  "type": "function"
 },
 "sklearn.utils.mocking.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.utils.numbers": {
  "data": {
   "shadows": "numbers"
  },
  "type": "import"
 },
 "sklearn.utils.optimize": {
  "data": {},
  "type": "module"
 },
 "sklearn.utils.optimize._LineSearchError": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "RuntimeError"
   ]
  },
  "type": "class"
 },
 "sklearn.utils.optimize._cg": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "fhess_p",
    "len",
    "numpy.abs",
    "numpy.dot",
    "numpy.finfo",
    "numpy.float64",
    "numpy.sum",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.optimize._line_search_wolfe12": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "scipy.optimize.linesearch.line_search_wolfe1",
    "scipy.optimize.linesearch.line_search_wolfe2",
    "sklearn.utils.optimize._LineSearchError"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.optimize.line_search_wolfe1": {
  "data": {
   "shadows": "scipy.optimize.linesearch.line_search_wolfe1"
  },
  "type": "import"
 },
 "sklearn.utils.optimize.line_search_wolfe2": {
  "data": {
   "shadows": "scipy.optimize.linesearch.line_search_wolfe2"
  },
  "type": "import"
 },
 "sklearn.utils.optimize.newton_cg": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "fhess_p",
    "func",
    "grad_hess",
    "min",
    "numpy.abs",
    "numpy.asarray",
    "numpy.max",
    "numpy.sqrt",
    "numpy.sum",
    "sklearn.utils.optimize._LineSearchError",
    "sklearn.utils.optimize._cg",
    "sklearn.utils.optimize._line_search_wolfe12",
    "sklearn.utils.optimize.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.optimize.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.utils.optimize.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.utils.platform": {
  "data": {
   "shadows": "platform"
  },
  "type": "import"
 },
 "sklearn.utils.random": {
  "data": {},
  "type": "module"
 },
 "sklearn.utils.random.__all__": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "sklearn.utils.random.array": {
  "data": {
   "shadows": "array"
  },
  "type": "import"
 },
 "sklearn.utils.random.check_random_state": {
  "data": {
   "shadows": "sklearn.utils.check_random_state"
  },
  "type": "import"
 },
 "sklearn.utils.random.choice": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "deprecated",
    "numpy.random.choice",
    "sklearn.utils.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.random.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sklearn.utils.random.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.utils.random.random_choice_csc": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "len",
    "numpy.asarray",
    "numpy.empty",
    "numpy.insert",
    "numpy.int64",
    "numpy.isclose",
    "numpy.searchsorted",
    "numpy.sum",
    "range",
    "sample_without_replacement",
    "scipy.sparse.csc_matrix",
    "sklearn.utils.check_random_state",
    "sklearn.utils.random.array"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.random.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.utils.resample": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "ValueError",
    "check_consistent_length",
    "check_random_state",
    "hasattr",
    "len",
    "numpy.arange",
    "scipy.sparse.issparse",
    "sklearn.utils.safe_indexing"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.safe_indexing": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "ValueError",
    "hasattr",
    "sklearn.utils.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.safe_mask": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "hasattr",
    "numpy.arange",
    "numpy.asarray",
    "numpy.issubdtype",
    "numpy.signedinteger"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.safe_sqr": {
  "data": {
   "lineno": 375,
   "symbols_in_volume": [
    "check_array",
    "scipy.sparse.issparse"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.setup": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.distutils.core.setup",
    "sklearn.utils.setup.configuration"
   ]
  },
  "type": "module"
 },
 "sklearn.utils.setup.Configuration": {
  "data": {
   "shadows": "numpy.distutils.misc_util.Configuration"
  },
  "type": "import"
 },
 "sklearn.utils.setup.configuration": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "numpy.distutils.misc_util.Configuration",
    "os.path.join",
    "sklearn._build_utils.get_blas_info",
    "sklearn.utils.setup.numpy",
    "sklearn.utils.setup.os"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.setup.get_blas_info": {
  "data": {
   "shadows": "sklearn._build_utils.get_blas_info"
  },
  "type": "import"
 },
 "sklearn.utils.setup.join": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "sklearn.utils.setup.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.utils.setup.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "sklearn.utils.setup.setup": {
  "data": {
   "shadows": "numpy.distutils.core.setup"
  },
  "type": "import"
 },
 "sklearn.utils.shuffle": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "sklearn.utils.resample"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.sparsefuncs": {
  "data": {},
  "type": "module"
 },
 "sklearn.utils.sparsefuncs._csc_mean_var_axis0": {
  "data": {
   "shadows": "csc_mean_variance_axis0"
  },
  "type": "import"
 },
 "sklearn.utils.sparsefuncs._csr_mean_var_axis0": {
  "data": {
   "shadows": "csr_mean_variance_axis0"
  },
  "type": "import"
 },
 "sklearn.utils.sparsefuncs._get_elem_at_rank": {
  "data": {
   "lineno": 502
  },
  "type": "function"
 },
 "sklearn.utils.sparsefuncs._get_median": {
  "data": {
   "lineno": 483,
   "symbols_in_volume": [
    "divmod",
    "len",
    "numpy.count_nonzero",
    "numpy.nan",
    "sklearn.utils.sparsefuncs._get_elem_at_rank"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.sparsefuncs._incr_mean_var_axis0": {
  "data": {
   "shadows": "incr_mean_variance_axis0"
  },
  "type": "import"
 },
 "sklearn.utils.sparsefuncs._min_or_max_axis": {
  "data": {
   "lineno": 348,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "min_or_max",
    "numpy.compress",
    "numpy.diff",
    "numpy.zeros",
    "scipy.sparse.coo_matrix",
    "sklearn.utils.sparsefuncs._minor_reduce"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.sparsefuncs._minor_reduce": {
  "data": {
   "lineno": 342,
   "symbols_in_volume": [
    "numpy.diff",
    "numpy.flatnonzero"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.sparsefuncs._raise_error_wrong_axis": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.sparsefuncs._raise_typeerror": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "TypeError",
    "scipy.sparse.issparse",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.sparsefuncs._sparse_min_max": {
  "data": {
   "lineno": 390,
   "symbols_in_volume": [
    "numpy.maximum",
    "numpy.minimum",
    "sklearn.utils.sparsefuncs._sparse_min_or_max"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.sparsefuncs._sparse_min_or_max": {
  "data": {
   "lineno": 371,
   "symbols_in_volume": [
    "ValueError",
    "min_or_max",
    "min_or_max.reduce",
    "numpy.product",
    "sklearn.utils.sparsefuncs._min_or_max_axis"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.sparsefuncs._sparse_nan_min_max": {
  "data": {
   "lineno": 395,
   "symbols_in_volume": [
    "numpy.fmax",
    "numpy.fmin",
    "sklearn.utils.sparsefuncs._sparse_min_or_max"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.sparsefuncs.count_nonzero": {
  "data": {
   "lineno": 435,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "numpy.bincount",
    "numpy.diff",
    "numpy.dot",
    "numpy.repeat"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.sparsefuncs.csc_median_axis_0": {
  "data": {
   "lineno": 511,
   "symbols_in_volume": [
    "TypeError",
    "enumerate",
    "isinstance",
    "numpy.copy",
    "numpy.zeros",
    "scipy.sparse.csc_matrix",
    "sklearn.utils.sparsefuncs._get_median",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.sparsefuncs.incr_mean_variance_axis": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "isinstance",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "sklearn.utils.sparsefuncs._raise_error_wrong_axis",
    "sklearn.utils.sparsefuncs._raise_typeerror"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.sparsefuncs.inplace_column_scale": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "isinstance",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "sklearn.utils.sparsefuncs._raise_typeerror",
    "sklearn.utils.sparsefuncs.inplace_csr_column_scale",
    "sklearn.utils.sparsefuncs.inplace_csr_row_scale"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.sparsefuncs.inplace_csr_column_scale": {
  "data": {
   "lineno": 28
  },
  "type": "function"
 },
 "sklearn.utils.sparsefuncs.inplace_csr_row_scale": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "numpy.diff",
    "numpy.repeat"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.sparsefuncs.inplace_row_scale": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "isinstance",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "sklearn.utils.sparsefuncs._raise_typeerror",
    "sklearn.utils.sparsefuncs.inplace_csr_column_scale",
    "sklearn.utils.sparsefuncs.inplace_csr_row_scale"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.sparsefuncs.inplace_swap_column": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": [
    "isinstance",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "sklearn.utils.sparsefuncs._raise_typeerror",
    "sklearn.utils.sparsefuncs.inplace_swap_row_csc",
    "sklearn.utils.sparsefuncs.inplace_swap_row_csr"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.sparsefuncs.inplace_swap_row": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": [
    "isinstance",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "sklearn.utils.sparsefuncs._raise_typeerror",
    "sklearn.utils.sparsefuncs.inplace_swap_row_csc",
    "sklearn.utils.sparsefuncs.inplace_swap_row_csr"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.sparsefuncs.inplace_swap_row_csc": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.sparsefuncs.inplace_swap_row_csr": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "numpy.concatenate",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.sparsefuncs.mean_variance_axis": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "isinstance",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "sklearn.utils.sparsefuncs._raise_error_wrong_axis",
    "sklearn.utils.sparsefuncs._raise_typeerror"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.sparsefuncs.min_max_axis": {
  "data": {
   "lineno": 400,
   "symbols_in_volume": [
    "isinstance",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "sklearn.utils.sparsefuncs._raise_typeerror",
    "sklearn.utils.sparsefuncs._sparse_min_max",
    "sklearn.utils.sparsefuncs._sparse_nan_min_max"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.sparsefuncs.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.utils.sparsefuncs.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.utils.sparsetools": {
  "data": {},
  "type": "module"
 },
 "sklearn.utils.sparsetools.connected_components": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "scipy.sparse.csgraph.connected_components",
    "sklearn.utils.deprecation.deprecated"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.sparsetools.deprecated": {
  "data": {
   "shadows": "sklearn.utils.deprecation.deprecated"
  },
  "type": "import"
 },
 "sklearn.utils.sparsetools.scipy_connected_components": {
  "data": {
   "shadows": "scipy.sparse.csgraph.connected_components"
  },
  "type": "import"
 },
 "sklearn.utils.sparsetools.setup": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.distutils.core.setup",
    "sklearn.utils.sparsetools.setup.configuration"
   ]
  },
  "type": "module"
 },
 "sklearn.utils.sparsetools.setup.Configuration": {
  "data": {
   "shadows": "numpy.distutils.misc_util.Configuration"
  },
  "type": "import"
 },
 "sklearn.utils.sparsetools.setup.configuration": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "numpy.distutils.misc_util.Configuration"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.sparsetools.setup.setup": {
  "data": {
   "shadows": "numpy.distutils.core.setup"
  },
  "type": "import"
 },
 "sklearn.utils.sparsetools.tests": {
  "data": {},
  "type": "module"
 },
 "sklearn.utils.stats": {
  "data": {},
  "type": "module"
 },
 "sklearn.utils.stats._weighted_percentile": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "len",
    "numpy.argsort",
    "numpy.clip",
    "numpy.searchsorted",
    "sklearn.utils.extmath.stable_cumsum"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.stats.deprecated": {
  "data": {
   "shadows": "sklearn.utils.deprecation.deprecated"
  },
  "type": "import"
 },
 "sklearn.utils.stats.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.utils.stats.rankdata": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "scipy.stats.rankdata",
    "sklearn.utils.deprecation.deprecated"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.stats.scipy_rankdata": {
  "data": {
   "shadows": "scipy.stats.rankdata"
  },
  "type": "import"
 },
 "sklearn.utils.stats.stable_cumsum": {
  "data": {
   "shadows": "sklearn.utils.extmath.stable_cumsum"
  },
  "type": "import"
 },
 "sklearn.utils.struct": {
  "data": {
   "shadows": "struct"
  },
  "type": "import"
 },
 "sklearn.utils.tests": {
  "data": {},
  "type": "module"
 },
 "sklearn.utils.tests.test_bench": {
  "data": {},
  "type": "module"
 },
 "sklearn.utils.tests.test_bench.assert_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_bench.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_bench.test_total_seconds": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "sklearn.utils.bench.total_seconds",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.tests.test_bench.datetime"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_bench.total_seconds": {
  "data": {
   "shadows": "sklearn.utils.bench.total_seconds"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_class_weight": {
  "data": {},
  "type": "module"
 },
 "sklearn.utils.tests.test_class_weight.LogisticRegression": {
  "data": {
   "shadows": "sklearn.linear_model.LogisticRegression"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_class_weight.assert_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_class_weight.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_class_weight.assert_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_class_weight.assert_raise_message": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raise_message"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_class_weight.assert_raises": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_class_weight.assert_true": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_true"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_class_weight.compute_class_weight": {
  "data": {
   "shadows": "sklearn.utils.class_weight.compute_class_weight"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_class_weight.compute_sample_weight": {
  "data": {
   "shadows": "sklearn.utils.class_weight.compute_sample_weight"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_class_weight.make_blobs": {
  "data": {
   "shadows": "sklearn.datasets.make_blobs"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_class_weight.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_class_weight.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_class_weight.test_compute_class_weight": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.bincount",
    "numpy.dot",
    "numpy.unique",
    "sklearn.utils.class_weight.compute_class_weight",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_class_weight.test_compute_class_weight_balanced_negative": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "numpy.asarray",
    "numpy.bincount",
    "numpy.dot",
    "sklearn.utils.class_weight.compute_class_weight",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_class_weight.test_compute_class_weight_balanced_unordered": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.asarray",
    "numpy.bincount",
    "numpy.dot",
    "sklearn.utils.class_weight.compute_class_weight",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_class_weight.test_compute_class_weight_default": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "len",
    "numpy.asarray",
    "numpy.ones",
    "numpy.unique",
    "sklearn.utils.class_weight.compute_class_weight",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_class_weight.test_compute_class_weight_dict": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "ValueError",
    "numpy.arange",
    "numpy.asarray",
    "sklearn.utils.class_weight.compute_class_weight",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_class_weight.test_compute_class_weight_invariance": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "numpy.hstack",
    "numpy.vstack",
    "sklearn.datasets.make_blobs",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.tests.test_class_weight.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_class_weight.test_compute_class_weight_not_present": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "ValueError",
    "numpy.arange",
    "numpy.asarray",
    "sklearn.utils.class_weight.compute_class_weight",
    "sklearn.utils.testing.assert_raise_message",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_class_weight.test_compute_sample_weight": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.asarray",
    "sklearn.utils.class_weight.compute_sample_weight",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_class_weight.test_compute_sample_weight_errors": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "ValueError",
    "numpy.asarray",
    "range",
    "sklearn.utils.class_weight.compute_sample_weight",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_class_weight.test_compute_sample_weight_with_subsample": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "numpy.asarray",
    "range",
    "sklearn.utils.class_weight.compute_sample_weight",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_deprecation": {
  "data": {},
  "type": "module"
 },
 "sklearn.utils.tests.test_deprecation.DeprecationDict": {
  "data": {
   "shadows": "sklearn.utils.deprecation.DeprecationDict"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_deprecation.MockClass1": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "sklearn.utils.deprecation.deprecated"
   ]
  },
  "type": "class"
 },
 "sklearn.utils.tests.test_deprecation.MockClass2": {
  "data": {
   "lineno": 21
  },
  "type": "class"
 },
 "sklearn.utils.tests.test_deprecation.MockClass2.method": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "sklearn.utils.deprecation.deprecated"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_deprecation.MockClass3": {
  "data": {
   "lineno": 27
  },
  "type": "class"
 },
 "sklearn.utils.tests.test_deprecation.MockClass3.__init__": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "sklearn.utils.deprecation.deprecated"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_deprecation.MockClass4": {
  "data": {
   "lineno": 33
  },
  "type": "class"
 },
 "sklearn.utils.tests.test_deprecation.SkipTest": {
  "data": {
   "shadows": "sklearn.utils.testing.SkipTest"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_deprecation._is_deprecated": {
  "data": {
   "shadows": "sklearn.utils.deprecation._is_deprecated"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_deprecation.assert_no_warnings": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_no_warnings"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_deprecation.assert_warns_message": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_warns_message"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_deprecation.deprecated": {
  "data": {
   "shadows": "sklearn.utils.deprecation.deprecated"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_deprecation.mock_function": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "sklearn.utils.deprecation.deprecated"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_deprecation.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_deprecation.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_deprecation.test_deprecated": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "DeprecationWarning",
    "sklearn.utils.testing.assert_warns_message",
    "sklearn.utils.tests.test_deprecation.MockClass1",
    "sklearn.utils.tests.test_deprecation.MockClass2",
    "sklearn.utils.tests.test_deprecation.MockClass3",
    "sklearn.utils.tests.test_deprecation.mock_function"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_deprecation.test_deprecationdict": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "DeprecationWarning",
    "UserWarning",
    "sklearn.utils.deprecation.DeprecationDict",
    "sklearn.utils.testing.assert_no_warnings",
    "sklearn.utils.testing.assert_warns_message"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_deprecation.test_is_deprecated": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "sklearn.utils.deprecation._is_deprecated",
    "sklearn.utils.testing.SkipTest",
    "sklearn.utils.tests.test_deprecation.MockClass1",
    "sklearn.utils.tests.test_deprecation.MockClass2",
    "sklearn.utils.tests.test_deprecation.MockClass3",
    "sklearn.utils.tests.test_deprecation.MockClass4",
    "sklearn.utils.tests.test_deprecation.mock_function",
    "sklearn.utils.tests.test_deprecation.sys"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_deprecation.test_pickle": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "sklearn.utils.tests.test_deprecation.mock_function",
    "sklearn.utils.tests.test_deprecation.pickle"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "sklearn.utils.tests.test_estimator_checks.run_tests_without_pytest"
   ]
  },
  "type": "module"
 },
 "sklearn.utils.tests.test_estimator_checks.AdaBoostClassifier": {
  "data": {
   "shadows": "sklearn.ensemble.AdaBoostClassifier"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_estimator_checks.BadTransformerWithoutMixin": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator"
   ]
  },
  "type": "class"
 },
 "sklearn.utils.tests.test_estimator_checks.BadTransformerWithoutMixin.fit": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "sklearn.utils.validation.check_array"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks.BadTransformerWithoutMixin.transform": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "sklearn.utils.validation.check_array"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks.BaseBadClassifier": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator",
    "sklearn.base.ClassifierMixin"
   ]
  },
  "type": "class"
 },
 "sklearn.utils.tests.test_estimator_checks.BaseBadClassifier.fit": {
  "data": {
   "lineno": 42
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks.BaseBadClassifier.predict": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_estimator_checks.ChangesDict": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator"
   ]
  },
  "type": "class"
 },
 "sklearn.utils.tests.test_estimator_checks.ChangesDict.__init__": {
  "data": {
   "lineno": 50
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks.ChangesDict.fit": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "sklearn.utils.validation.check_X_y"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks.ChangesDict.predict": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "numpy.ones",
    "sklearn.utils.validation.check_array"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks.ChangesUnderscoreAttribute": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator"
   ]
  },
  "type": "class"
 },
 "sklearn.utils.tests.test_estimator_checks.ChangesUnderscoreAttribute.fit": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "sklearn.utils.validation.check_X_y"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks.ChangesWrongAttribute": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator"
   ]
  },
  "type": "class"
 },
 "sklearn.utils.tests.test_estimator_checks.ChangesWrongAttribute.__init__": {
  "data": {
   "lineno": 74
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks.ChangesWrongAttribute.fit": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "sklearn.utils.validation.check_X_y"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks.ClassifierMixin": {
  "data": {
   "shadows": "sklearn.base.ClassifierMixin"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_estimator_checks.CorrectNotFittedError": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "class"
 },
 "sklearn.utils.tests.test_estimator_checks.CorrectNotFittedErrorClassifier": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "sklearn.utils.tests.test_estimator_checks.BaseBadClassifier"
   ]
  },
  "type": "class"
 },
 "sklearn.utils.tests.test_estimator_checks.CorrectNotFittedErrorClassifier.fit": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "numpy.ones",
    "sklearn.utils.validation.check_X_y"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks.CorrectNotFittedErrorClassifier.predict": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "hasattr",
    "numpy.ones",
    "sklearn.utils.tests.test_estimator_checks.CorrectNotFittedError",
    "sklearn.utils.validation.check_array"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks.GaussianMixture": {
  "data": {
   "shadows": "sklearn.mixture.GaussianMixture"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_estimator_checks.KNeighborsRegressor": {
  "data": {
   "shadows": "sklearn.neighbors.KNeighborsRegressor"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_estimator_checks.LARGE_SPARSE_SUPPORTED": {
  "data": {
   "shadows": "sklearn.utils.validation.LARGE_SPARSE_SUPPORTED"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_estimator_checks.LargeSparseNotSupportedClassifier": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator"
   ]
  },
  "type": "class"
 },
 "sklearn.utils.tests.test_estimator_checks.LargeSparseNotSupportedClassifier.fit": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "ValueError",
    "scipy.sparse.issparse",
    "sklearn.utils.validation.check_X_y"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks.LinearRegression": {
  "data": {
   "shadows": "sklearn.linear_model.LinearRegression"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_estimator_checks.MiniBatchKMeans": {
  "data": {
   "shadows": "sklearn.cluster.MiniBatchKMeans"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_estimator_checks.ModifiesAnotherValue": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator"
   ]
  },
  "type": "class"
 },
 "sklearn.utils.tests.test_estimator_checks.ModifiesAnotherValue.__init__": {
  "data": {
   "lineno": 126
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks.ModifiesAnotherValue.fit": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "sklearn.utils.validation.check_X_y"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks.ModifiesAnotherValue.set_params": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "sklearn.utils.tests.test_estimator_checks.ModifiesAnotherValue",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks.ModifiesValueInsteadOfRaisingError": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator"
   ]
  },
  "type": "class"
 },
 "sklearn.utils.tests.test_estimator_checks.ModifiesValueInsteadOfRaisingError.__init__": {
  "data": {
   "lineno": 108
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks.ModifiesValueInsteadOfRaisingError.fit": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "sklearn.utils.validation.check_X_y"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks.ModifiesValueInsteadOfRaisingError.set_params": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "sklearn.utils.tests.test_estimator_checks.ModifiesValueInsteadOfRaisingError",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks.MultiTaskElasticNet": {
  "data": {
   "shadows": "sklearn.linear_model.MultiTaskElasticNet"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_estimator_checks.NMF": {
  "data": {
   "shadows": "sklearn.decomposition.NMF"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_estimator_checks.NoCheckinPredict": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "sklearn.utils.tests.test_estimator_checks.BaseBadClassifier"
   ]
  },
  "type": "class"
 },
 "sklearn.utils.tests.test_estimator_checks.NoCheckinPredict.fit": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "sklearn.utils.validation.check_X_y"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks.NoSampleWeightPandasSeriesType": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator"
   ]
  },
  "type": "class"
 },
 "sklearn.utils.tests.test_estimator_checks.NoSampleWeightPandasSeriesType.fit": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "pandas.Series",
    "sklearn.utils.validation.check_X_y"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks.NoSampleWeightPandasSeriesType.predict": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "numpy.ones",
    "sklearn.utils.validation.check_array"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks.NoSparseClassifier": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "sklearn.utils.tests.test_estimator_checks.BaseBadClassifier"
   ]
  },
  "type": "class"
 },
 "sklearn.utils.tests.test_estimator_checks.NoSparseClassifier.fit": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "ValueError",
    "scipy.sparse.issparse",
    "sklearn.utils.validation.check_X_y"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks.NoSparseClassifier.predict": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "numpy.ones",
    "sklearn.utils.validation.check_array"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks.NotInvariantPredict": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator"
   ]
  },
  "type": "class"
 },
 "sklearn.utils.tests.test_estimator_checks.NotInvariantPredict.fit": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "sklearn.utils.validation.check_X_y"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks.NotInvariantPredict.predict": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "numpy.ones",
    "numpy.zeros",
    "sklearn.utils.validation.check_array"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks.RaisesErrorInSetParams": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator"
   ]
  },
  "type": "class"
 },
 "sklearn.utils.tests.test_estimator_checks.RaisesErrorInSetParams.__init__": {
  "data": {
   "lineno": 91
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks.RaisesErrorInSetParams.fit": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "sklearn.utils.validation.check_X_y"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks.RaisesErrorInSetParams.set_params": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.utils.tests.test_estimator_checks.RaisesErrorInSetParams",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks.RandomForestClassifier": {
  "data": {
   "shadows": "sklearn.ensemble.RandomForestClassifier"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_estimator_checks.SGDClassifier": {
  "data": {
   "shadows": "sklearn.linear_model.SGDClassifier"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_estimator_checks.SVC": {
  "data": {
   "shadows": "sklearn.svm.SVC"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_estimator_checks.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_estimator_checks.SetsWrongAttribute": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator"
   ]
  },
  "type": "class"
 },
 "sklearn.utils.tests.test_estimator_checks.SetsWrongAttribute.__init__": {
  "data": {
   "lineno": 64
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks.SetsWrongAttribute.fit": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "sklearn.utils.validation.check_X_y"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks.SparseTransformer": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator"
   ]
  },
  "type": "class"
 },
 "sklearn.utils.tests.test_estimator_checks.SparseTransformer.fit": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "sklearn.utils.validation.check_array"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks.SparseTransformer.fit_transform": {
  "data": {
   "lineno": 247
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks.SparseTransformer.transform": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "ValueError",
    "scipy.sparse.csr_matrix",
    "sklearn.utils.validation.check_array"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks.StringIO": {
  "data": {
   "shadows": "sklearn.externals.six.moves.cStringIO"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_estimator_checks.assert_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_estimator_checks.assert_raises_regex": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises_regex"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_estimator_checks.assert_true": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_true"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_estimator_checks.assert_warns": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_warns"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_estimator_checks.check_X_y": {
  "data": {
   "shadows": "sklearn.utils.validation.check_X_y"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_estimator_checks.check_array": {
  "data": {
   "shadows": "sklearn.utils.validation.check_array"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_estimator_checks.check_estimator": {
  "data": {
   "shadows": "sklearn.utils.estimator_checks.check_estimator"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_estimator_checks.check_estimators_unfitted": {
  "data": {
   "shadows": "sklearn.utils.estimator_checks.check_estimators_unfitted"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_estimator_checks.check_fit_score_takes_y": {
  "data": {
   "shadows": "sklearn.utils.estimator_checks.check_fit_score_takes_y"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_estimator_checks.check_no_attributes_set_in_init": {
  "data": {
   "shadows": "sklearn.utils.estimator_checks.check_no_attributes_set_in_init"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_estimator_checks.deprecated": {
  "data": {
   "shadows": "sklearn.utils.deprecated"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_estimator_checks.ignore_warnings": {
  "data": {
   "shadows": "sklearn.utils.testing.ignore_warnings"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_estimator_checks.joblib": {
  "data": {
   "shadows": "sklearn.externals.joblib"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_estimator_checks.load_iris": {
  "data": {
   "shadows": "sklearn.datasets.load_iris"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_estimator_checks.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_estimator_checks.run_tests_without_pytest": {
  "data": {
   "lineno": 456,
   "symbols_in_volume": [
    "dir",
    "getattr",
    "sklearn.utils.tests.test_estimator_checks.sys",
    "sklearn.utils.tests.test_estimator_checks.unittest"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks.set_checking_parameters": {
  "data": {
   "shadows": "sklearn.utils.estimator_checks.set_checking_parameters"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_estimator_checks.set_random_state": {
  "data": {
   "shadows": "sklearn.utils.estimator_checks.set_random_state"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_estimator_checks.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_estimator_checks.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_estimator_checks.test_check_estimator": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "AssertionError",
    "AttributeError",
    "ImportError",
    "TypeError",
    "UserWarning",
    "ValueError",
    "object",
    "sklearn.base.BaseEstimator",
    "sklearn.ensemble.AdaBoostClassifier",
    "sklearn.externals.six.moves.cStringIO",
    "sklearn.linear_model.MultiTaskElasticNet",
    "sklearn.utils.estimator_checks.check_estimator",
    "sklearn.utils.testing.assert_raises_regex",
    "sklearn.utils.testing.assert_true",
    "sklearn.utils.testing.assert_warns",
    "sklearn.utils.tests.test_estimator_checks.BaseBadClassifier",
    "sklearn.utils.tests.test_estimator_checks.ChangesDict",
    "sklearn.utils.tests.test_estimator_checks.ChangesUnderscoreAttribute",
    "sklearn.utils.tests.test_estimator_checks.ChangesWrongAttribute",
    "sklearn.utils.tests.test_estimator_checks.LargeSparseNotSupportedClassifier",
    "sklearn.utils.tests.test_estimator_checks.ModifiesAnotherValue",
    "sklearn.utils.tests.test_estimator_checks.ModifiesValueInsteadOfRaisingError",
    "sklearn.utils.tests.test_estimator_checks.NoCheckinPredict",
    "sklearn.utils.tests.test_estimator_checks.NoSampleWeightPandasSeriesType",
    "sklearn.utils.tests.test_estimator_checks.NoSparseClassifier",
    "sklearn.utils.tests.test_estimator_checks.NotInvariantPredict",
    "sklearn.utils.tests.test_estimator_checks.RaisesErrorInSetParams",
    "sklearn.utils.tests.test_estimator_checks.SetsWrongAttribute",
    "sklearn.utils.tests.test_estimator_checks.SparseTransformer",
    "sklearn.utils.tests.test_estimator_checks.sys",
    "sklearn.utils.validation.LARGE_SPARSE_SUPPORTED"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks.test_check_estimator_clones": {
  "data": {
   "lineno": 375,
   "symbols_in_volume": [
    "DeprecationWarning",
    "Estimator",
    "FutureWarning",
    "sklearn.cluster.MiniBatchKMeans",
    "sklearn.datasets.load_iris",
    "sklearn.decomposition.NMF",
    "sklearn.ensemble.RandomForestClassifier",
    "sklearn.externals.joblib.hash",
    "sklearn.linear_model.LinearRegression",
    "sklearn.linear_model.SGDClassifier",
    "sklearn.mixture.GaussianMixture",
    "sklearn.utils.estimator_checks.check_estimator",
    "sklearn.utils.estimator_checks.set_checking_parameters",
    "sklearn.utils.estimator_checks.set_random_state",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks.test_check_estimator_pairwise": {
  "data": {
   "lineno": 443,
   "symbols_in_volume": [
    "sklearn.neighbors.KNeighborsRegressor",
    "sklearn.svm.SVC",
    "sklearn.utils.estimator_checks.check_estimator"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks.test_check_estimator_transformer_no_mixin": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": [
    "AttributeError",
    "sklearn.utils.estimator_checks.check_estimator",
    "sklearn.utils.testing.assert_raises_regex",
    "sklearn.utils.tests.test_estimator_checks.BadTransformerWithoutMixin"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks.test_check_estimators_unfitted": {
  "data": {
   "lineno": 405,
   "symbols_in_volume": [
    "AssertionError",
    "sklearn.utils.estimator_checks.check_estimators_unfitted",
    "sklearn.utils.testing.assert_raises_regex",
    "sklearn.utils.tests.test_estimator_checks.CorrectNotFittedErrorClassifier",
    "sklearn.utils.tests.test_estimator_checks.NoSparseClassifier"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks.test_check_fit_score_takes_y_works_on_deprecated_fit": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "TestEstimatorWithDeprecatedFitMethod",
    "sklearn.utils.estimator_checks.check_fit_score_takes_y"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks.test_check_fit_score_takes_y_works_on_deprecated_fit.TestEstimatorWithDeprecatedFitMethod": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator"
   ]
  },
  "type": "class"
 },
 "sklearn.utils.tests.test_estimator_checks.test_check_fit_score_takes_y_works_on_deprecated_fit.TestEstimatorWithDeprecatedFitMethod.fit": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "sklearn.utils.deprecated"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks.test_check_no_attributes_set_in_init": {
  "data": {
   "lineno": 417,
   "symbols_in_volume": [
    "AssertionError",
    "NonConformantEstimatorNoParamSet",
    "NonConformantEstimatorPrivateSet",
    "sklearn.utils.estimator_checks.check_no_attributes_set_in_init",
    "sklearn.utils.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks.test_check_no_attributes_set_in_init.NonConformantEstimatorNoParamSet": {
  "data": {
   "lineno": 422,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "sklearn.utils.tests.test_estimator_checks.test_check_no_attributes_set_in_init.NonConformantEstimatorNoParamSet.__init__": {
  "data": {
   "lineno": 423
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks.test_check_no_attributes_set_in_init.NonConformantEstimatorPrivateSet": {
  "data": {
   "lineno": 418,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "sklearn.utils.tests.test_estimator_checks.test_check_no_attributes_set_in_init.NonConformantEstimatorPrivateSet.__init__": {
  "data": {
   "lineno": 419
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_extmath": {
  "data": {},
  "type": "module"
 },
 "sklearn.utils.tests.test_extmath.SkipTest": {
  "data": {
   "shadows": "sklearn.utils.testing.SkipTest"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_extmath._deterministic_vector_sign_flip": {
  "data": {
   "shadows": "sklearn.utils.extmath._deterministic_vector_sign_flip"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_extmath._incremental_mean_and_var": {
  "data": {
   "shadows": "sklearn.utils.extmath._incremental_mean_and_var"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_extmath.assert_allclose": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_allclose"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_extmath.assert_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_extmath.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_extmath.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_extmath.assert_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_extmath.assert_false": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_false"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_extmath.assert_greater": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_greater"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_extmath.assert_true": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_true"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_extmath.assert_warns": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_warns"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_extmath.assert_warns_message": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_warns_message"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_extmath.cartesian": {
  "data": {
   "shadows": "sklearn.utils.extmath.cartesian"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_extmath.check_randomized_svd_low_rank": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.dtype",
    "numpy.float32",
    "numpy.float64",
    "scipy.linalg.svd",
    "scipy.sparse.csr_matrix",
    "sklearn.datasets.samples_generator.make_low_rank_matrix",
    "sklearn.utils.extmath.randomized_svd",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_extmath.density": {
  "data": {
   "shadows": "sklearn.utils.extmath.density"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_extmath.ignore_warnings": {
  "data": {
   "shadows": "sklearn.utils.testing.ignore_warnings"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_extmath.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_extmath.log_logistic": {
  "data": {
   "shadows": "sklearn.utils.extmath.log_logistic"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_extmath.logsumexp": {
  "data": {
   "shadows": "sklearn.utils.extmath.logsumexp"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_extmath.make_low_rank_matrix": {
  "data": {
   "shadows": "sklearn.datasets.samples_generator.make_low_rank_matrix"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_extmath.norm": {
  "data": {
   "shadows": "sklearn.utils.extmath.norm"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_extmath.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_extmath.np_version": {
  "data": {
   "shadows": "sklearn.utils.fixes.np_version"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_extmath.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_extmath.randomized_svd": {
  "data": {
   "shadows": "sklearn.utils.extmath.randomized_svd"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_extmath.row_norms": {
  "data": {
   "shadows": "sklearn.utils.extmath.row_norms"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_extmath.skip_if_32bit": {
  "data": {
   "shadows": "sklearn.utils.testing.skip_if_32bit"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_extmath.softmax": {
  "data": {
   "shadows": "sklearn.utils.extmath.softmax"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_extmath.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_extmath.squared_norm": {
  "data": {
   "shadows": "sklearn.utils.extmath.squared_norm"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_extmath.stable_cumsum": {
  "data": {
   "shadows": "sklearn.utils.extmath.stable_cumsum"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_extmath.stats": {
  "data": {
   "shadows": "scipy.stats"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_extmath.svd_flip": {
  "data": {
   "shadows": "sklearn.utils.extmath.svd_flip"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_extmath.test_cartesian": {
  "data": {
   "lineno": 452,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "numpy.newaxis",
    "sklearn.utils.extmath.cartesian",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_extmath.test_density": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "scipy.sparse.coo_matrix",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.lil_matrix",
    "sklearn.utils.extmath.density",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_extmath.test_incremental_mean_and_variance_ignore_nan": {
  "data": {
   "lineno": 512,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.int32",
    "numpy.nan",
    "sklearn.utils.extmath._incremental_mean_and_var",
    "sklearn.utils.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_extmath.test_incremental_variance_ddof": {
  "data": {
   "lineno": 616,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.full",
    "numpy.hstack",
    "numpy.int32",
    "numpy.mean",
    "numpy.random.RandomState",
    "numpy.var",
    "sklearn.utils.extmath._incremental_mean_and_var",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_array_equal",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_extmath.test_incremental_variance_numerical_stability": {
  "data": {
   "lineno": 536,
   "symbols_in_volume": [
    "naive_mean_variance_update",
    "np_var",
    "numpy.abs",
    "numpy.array",
    "numpy.float64",
    "numpy.full",
    "numpy.int32",
    "numpy.log",
    "numpy.vstack",
    "numpy.zeros",
    "one_pass_var",
    "range",
    "sklearn.utils.extmath._incremental_mean_and_var",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_greater",
    "sklearn.utils.testing.skip_if_32bit",
    "stable_var",
    "two_pass_var"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_extmath.test_incremental_variance_numerical_stability.naive_mean_variance_update": {
  "data": {
   "lineno": 562,
   "symbols_in_volume": [
    "float"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_extmath.test_incremental_variance_numerical_stability.np_var": {
  "data": {
   "lineno": 540
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_extmath.test_incremental_variance_numerical_stability.one_pass_var": {
  "data": {
   "lineno": 545
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_extmath.test_incremental_variance_numerical_stability.two_pass_var": {
  "data": {
   "lineno": 554,
   "symbols_in_volume": [
    "numpy.mean"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_extmath.test_incremental_variance_update_formulas": {
  "data": {
   "lineno": 490,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.full",
    "numpy.int32",
    "sklearn.utils.extmath._incremental_mean_and_var",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_extmath.test_logistic_sigmoid": {
  "data": {
   "lineno": 478,
   "symbols_in_volume": [
    "naive_log_logistic",
    "numpy.array",
    "numpy.linspace",
    "sklearn.utils.extmath.log_logistic",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_extmath.test_logistic_sigmoid.naive_log_logistic": {
  "data": {
   "lineno": 480,
   "symbols_in_volume": [
    "numpy.exp",
    "numpy.log"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_extmath.test_logsumexp": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.exp",
    "numpy.log",
    "numpy.vstack",
    "sklearn.utils.extmath.logsumexp",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_extmath.test_norm_squared_norm": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "UserWarning",
    "int",
    "numpy.linalg.norm",
    "numpy.random.RandomState",
    "numpy.sqrt",
    "sklearn.utils.extmath.norm",
    "sklearn.utils.extmath.squared_norm",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_warns_message",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_extmath.test_random_weights": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.utils.extmath.weighted_mode",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_extmath.test_randomized_svd_infinite_rank": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "numpy.abs",
    "scipy.linalg.svd",
    "sklearn.datasets.samples_generator.make_low_rank_matrix",
    "sklearn.utils.extmath.randomized_svd",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_greater"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_extmath.test_randomized_svd_low_rank_all_dtypes": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.float64",
    "numpy.int32",
    "numpy.int64",
    "sklearn.utils.tests.test_extmath.check_randomized_svd_low_rank",
    "sklearn.utils.tests.test_extmath.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_extmath.test_randomized_svd_low_rank_with_noise": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "numpy.abs",
    "scipy.linalg.svd",
    "sklearn.datasets.samples_generator.make_low_rank_matrix",
    "sklearn.utils.extmath.randomized_svd",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_greater"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_extmath.test_randomized_svd_power_iteration_normalizer": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.diag",
    "numpy.random.RandomState",
    "scipy.linalg.norm",
    "sklearn.datasets.samples_generator.make_low_rank_matrix",
    "sklearn.utils.extmath.randomized_svd",
    "sklearn.utils.testing.assert_greater"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_extmath.test_randomized_svd_sign_flip": {
  "data": {
   "lineno": 409,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.dot",
    "numpy.eye",
    "range",
    "sklearn.utils.extmath.randomized_svd",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_extmath.test_randomized_svd_sign_flip_with_transpose": {
  "data": {
   "lineno": 421,
   "symbols_in_volume": [
    "max_loading_is_positive",
    "numpy.arange",
    "sklearn.utils.extmath.randomized_svd",
    "sklearn.utils.testing.assert_false",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_extmath.test_randomized_svd_sign_flip_with_transpose.max_loading_is_positive": {
  "data": {
   "lineno": 426,
   "symbols_in_volume": [
    "numpy.abs"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_extmath.test_randomized_svd_sparse_warnings": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": [
    "cls",
    "cls.__name__",
    "numpy.random.RandomState",
    "scipy.sparse.SparseEfficiencyWarning",
    "scipy.sparse.dok_matrix",
    "scipy.sparse.lil_matrix",
    "sklearn.datasets.samples_generator.make_low_rank_matrix",
    "sklearn.utils.extmath.randomized_svd",
    "sklearn.utils.testing.assert_warns_message"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_extmath.test_randomized_svd_transpose_consistency": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "numpy.dot",
    "scipy.linalg.svd",
    "sklearn.datasets.samples_generator.make_low_rank_matrix",
    "sklearn.utils.extmath.randomized_svd",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_extmath.test_row_norms": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.float64",
    "numpy.int32",
    "numpy.int64",
    "numpy.random.RandomState",
    "numpy.sqrt",
    "scipy.sparse.csr_matrix",
    "sklearn.utils.extmath.row_norms",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.tests.test_extmath.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_extmath.test_softmax": {
  "data": {
   "lineno": 662,
   "symbols_in_volume": [
    "numpy.exp",
    "numpy.random.RandomState",
    "numpy.sum",
    "sklearn.utils.extmath.softmax",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_extmath.test_stable_cumsum": {
  "data": {
   "lineno": 670,
   "symbols_in_volume": [
    "RuntimeWarning",
    "numpy.cumsum",
    "numpy.random.RandomState",
    "sklearn.utils.extmath.stable_cumsum",
    "sklearn.utils.fixes.np_version",
    "sklearn.utils.testing.SkipTest",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_warns"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_extmath.test_svd_flip": {
  "data": {
   "lineno": 384,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.random.RandomState",
    "scipy.linalg.svd",
    "sklearn.utils.extmath.svd_flip",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_extmath.test_uniform_weights": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "numpy.ones",
    "numpy.random.RandomState",
    "scipy.stats.mode",
    "sklearn.utils.extmath.weighted_mode",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_extmath.test_vector_sign_flip": {
  "data": {
   "lineno": 651,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.argmax",
    "numpy.newaxis",
    "numpy.random.RandomState",
    "numpy.sign",
    "range",
    "sklearn.utils.extmath._deterministic_vector_sign_flip",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_extmath.weighted_mode": {
  "data": {
   "shadows": "sklearn.utils.extmath.weighted_mode"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_fast_dict": {
  "data": {},
  "type": "module"
 },
 "sklearn.utils.tests.test_fast_dict.IntFloatDict": {
  "data": {
   "shadows": "sklearn.utils.fast_dict.IntFloatDict"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_fast_dict.argmin": {
  "data": {
   "shadows": "sklearn.utils.fast_dict.argmin"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_fast_dict.assert_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_fast_dict.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_fast_dict.test_int_float_dict": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "len",
    "numpy.intp",
    "numpy.random.RandomState",
    "numpy.unique",
    "sklearn.externals.six.moves.xrange",
    "sklearn.utils.fast_dict.IntFloatDict",
    "sklearn.utils.testing.assert_equal",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_fast_dict.test_int_float_dict_argmin": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.float64",
    "numpy.intp",
    "sklearn.utils.fast_dict.IntFloatDict",
    "sklearn.utils.fast_dict.argmin",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_fast_dict.xrange": {
  "data": {
   "shadows": "sklearn.externals.six.moves.xrange"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_fixes": {
  "data": {},
  "type": "module"
 },
 "sklearn.utils.tests.test_fixes.MaskedArray": {
  "data": {
   "shadows": "sklearn.utils.fixes.MaskedArray"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_fixes.assert_allclose": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_allclose"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_fixes.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_fixes.assert_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_fixes.divide": {
  "data": {
   "shadows": "sklearn.utils.fixes.divide"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_fixes.nanmedian": {
  "data": {
   "shadows": "sklearn.utils.fixes.nanmedian"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_fixes.nanpercentile": {
  "data": {
   "shadows": "sklearn.utils.fixes.nanpercentile"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_fixes.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_fixes.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_fixes.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_fixes.test_divide": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "sklearn.utils.fixes.divide",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_fixes.test_masked_array_obj_dtype_pickleable": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "object",
    "sklearn.utils.fixes.MaskedArray",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.tests.test_fixes.pickle"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_fixes.test_nanmedian": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "sklearn.utils.fixes.nanmedian",
    "sklearn.utils.testing.assert_allclose",
    "sklearn.utils.tests.test_fixes.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_fixes.test_nanpercentile": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "sklearn.utils.fixes.nanpercentile",
    "sklearn.utils.testing.assert_allclose",
    "sklearn.utils.tests.test_fixes.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_graph": {
  "data": {},
  "type": "module"
 },
 "sklearn.utils.tests.test_graph.graph_laplacian": {
  "data": {
   "shadows": "sklearn.utils.graph.graph_laplacian"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_graph.ignore_warnings": {
  "data": {
   "shadows": "sklearn.utils.testing.ignore_warnings"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_graph.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_graph.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_graph.test_graph_laplacian": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "DeprecationWarning",
    "numpy.arange",
    "numpy.eye",
    "numpy.newaxis",
    "numpy.ones",
    "numpy.testing.assert_array_almost_equal",
    "numpy.vander",
    "numpy.zeros",
    "scipy.sparse.csr_matrix",
    "sklearn.utils.graph.graph_laplacian",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_linear_assignment": {
  "data": {},
  "type": "module"
 },
 "sklearn.utils.tests.test_linear_assignment._hungarian": {
  "data": {
   "shadows": "sklearn.utils.linear_assignment_._hungarian"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_linear_assignment.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_linear_assignment.test_hungarian": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.utils.linear_assignment_._hungarian"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_metaestimators": {
  "data": {},
  "type": "module"
 },
 "sklearn.utils.tests.test_metaestimators.HasNoPredict": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "sklearn.utils.tests.test_metaestimators.HasPredict": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "sklearn.utils.tests.test_metaestimators.HasPredict.predict": {
  "data": {
   "lineno": 59
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_metaestimators.MetaEst": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "sklearn.utils.tests.test_metaestimators.MetaEst.__init__": {
  "data": {
   "lineno": 31
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_metaestimators.MetaEst.predict": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "sklearn.utils.metaestimators.if_delegate_has_method"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_metaestimators.MetaEstTestList": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "sklearn.utils.tests.test_metaestimators.MetaEst"
   ]
  },
  "type": "class"
 },
 "sklearn.utils.tests.test_metaestimators.MetaEstTestList.predict": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "sklearn.utils.metaestimators.if_delegate_has_method"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_metaestimators.MetaEstTestTuple": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "sklearn.utils.tests.test_metaestimators.MetaEst"
   ]
  },
  "type": "class"
 },
 "sklearn.utils.tests.test_metaestimators.MetaEstTestTuple.predict": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "sklearn.utils.metaestimators.if_delegate_has_method"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_metaestimators.MockMetaEstimator": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "object",
    "sklearn.utils.tests.test_metaestimators.Prefix"
   ]
  },
  "type": "class"
 },
 "sklearn.utils.tests.test_metaestimators.MockMetaEstimator.func": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "sklearn.utils.metaestimators.if_delegate_has_method"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_metaestimators.Prefix": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "sklearn.utils.tests.test_metaestimators.Prefix.func": {
  "data": {
   "lineno": 6
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_metaestimators.assert_false": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_false"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_metaestimators.assert_true": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_true"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_metaestimators.if_delegate_has_method": {
  "data": {
   "shadows": "sklearn.utils.metaestimators.if_delegate_has_method"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_metaestimators.test_delegated_docstring": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "sklearn.utils.testing.assert_true",
    "sklearn.utils.tests.test_metaestimators.MockMetaEstimator",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_metaestimators.test_if_delegate_has_method": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "hasattr",
    "sklearn.utils.testing.assert_false",
    "sklearn.utils.testing.assert_true",
    "sklearn.utils.tests.test_metaestimators.HasNoPredict",
    "sklearn.utils.tests.test_metaestimators.HasPredict",
    "sklearn.utils.tests.test_metaestimators.MetaEst",
    "sklearn.utils.tests.test_metaestimators.MetaEstTestList",
    "sklearn.utils.tests.test_metaestimators.MetaEstTestTuple"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_multiclass": {
  "data": {
   "symbols_in_volume": [
    "frozenset",
    "numpy.array",
    "numpy.bool",
    "numpy.float",
    "numpy.float32",
    "numpy.int8",
    "numpy.random.RandomState",
    "numpy.uint8",
    "object",
    "scipy.sparse.csr_matrix",
    "set",
    "sklearn.utils.tests.test_multiclass.NotAnArray"
   ]
  },
  "type": "module"
 },
 "sklearn.utils.tests.test_multiclass.EXAMPLES": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "sklearn.utils.tests.test_multiclass.MULTILABEL_SEQUENCES": {
  "data": {
   "lineno": 156
  },
  "type": "constant"
 },
 "sklearn.utils.tests.test_multiclass.NON_ARRAY_LIKE_EXAMPLES": {
  "data": {
   "lineno": 147
  },
  "type": "constant"
 },
 "sklearn.utils.tests.test_multiclass.NotAnArray": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "sklearn.utils.tests.test_multiclass.NotAnArray.__array__": {
  "data": {
   "lineno": 45
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_multiclass.NotAnArray.__init__": {
  "data": {
   "lineno": 42
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_multiclass.SVC": {
  "data": {
   "shadows": "sklearn.svm.SVC"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_multiclass.ShuffleSplit": {
  "data": {
   "shadows": "sklearn.model_selection.ShuffleSplit"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_multiclass.SkipTest": {
  "data": {
   "shadows": "sklearn.utils.testing.SkipTest"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_multiclass.SparseSeries": {
  "data": {
   "shadows": "pandas.SparseSeries"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_multiclass._safe_split": {
  "data": {
   "shadows": "sklearn.utils.metaestimators._safe_split"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_multiclass.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_multiclass.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_multiclass.assert_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_multiclass.assert_false": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_false"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_multiclass.assert_raises": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_multiclass.assert_raises_regex": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises_regex"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_multiclass.assert_true": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_true"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_multiclass.check_classification_targets": {
  "data": {
   "shadows": "sklearn.utils.multiclass.check_classification_targets"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_multiclass.class_distribution": {
  "data": {
   "shadows": "sklearn.utils.multiclass.class_distribution"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_multiclass.coo_matrix": {
  "data": {
   "shadows": "scipy.sparse.coo_matrix"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_multiclass.csc_matrix": {
  "data": {
   "shadows": "scipy.sparse.csc_matrix"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_multiclass.csr_matrix": {
  "data": {
   "shadows": "scipy.sparse.csr_matrix"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_multiclass.datasets": {
  "data": {
   "shadows": "sklearn.datasets"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_multiclass.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_multiclass.dok_matrix": {
  "data": {
   "shadows": "scipy.sparse.dok_matrix"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_multiclass.is_multilabel": {
  "data": {
   "shadows": "sklearn.utils.multiclass.is_multilabel"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_multiclass.issparse": {
  "data": {
   "shadows": "scipy.sparse.issparse"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_multiclass.iteritems": {
  "data": {
   "shadows": "sklearn.externals.six.iteritems"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_multiclass.lil_matrix": {
  "data": {
   "shadows": "scipy.sparse.lil_matrix"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_multiclass.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_multiclass.product": {
  "data": {
   "shadows": "itertools.product"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_multiclass.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_multiclass.test_check_classification_targets": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.utils.multiclass.check_classification_targets",
    "sklearn.utils.testing.assert_raises_regex",
    "sklearn.utils.tests.test_multiclass.EXAMPLES"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_multiclass.test_class_distribution": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": [
    "numpy.array",
    "range",
    "scipy.sparse.csc_matrix",
    "sklearn.utils.multiclass.class_distribution",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_multiclass.test_is_multilabel": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "dense_assert_",
    "hasattr",
    "numpy.asarray",
    "scipy.sparse.coo_matrix",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.dok_matrix",
    "scipy.sparse.issparse",
    "scipy.sparse.lil_matrix",
    "sklearn.externals.six.iteritems",
    "sklearn.utils.multiclass.is_multilabel",
    "sklearn.utils.testing.assert_false",
    "sklearn.utils.testing.assert_true",
    "sklearn.utils.tests.test_multiclass.EXAMPLES",
    "sparse_assert_",
    "sparse_matrix"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_multiclass.test_safe_split_with_precomputed_kernel": {
  "data": {
   "lineno": 364,
   "symbols_in_volume": [
    "list",
    "numpy.dot",
    "sklearn.datasets.load_iris",
    "sklearn.model_selection.ShuffleSplit",
    "sklearn.svm.SVC",
    "sklearn.utils.metaestimators._safe_split",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_multiclass.test_type_of_target": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "ImportError",
    "ValueError",
    "pandas.SparseSeries",
    "sklearn.externals.six.iteritems",
    "sklearn.utils.multiclass.type_of_target",
    "sklearn.utils.testing.SkipTest",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_raises_regex",
    "sklearn.utils.tests.test_multiclass.EXAMPLES",
    "sklearn.utils.tests.test_multiclass.MULTILABEL_SEQUENCES",
    "sklearn.utils.tests.test_multiclass.NON_ARRAY_LIKE_EXAMPLES"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_multiclass.test_unique_labels": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "ValueError",
    "numpy.arange",
    "numpy.array",
    "numpy.ones",
    "sklearn.externals.six.moves.xrange",
    "sklearn.utils.multiclass.unique_labels",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_multiclass.test_unique_labels_mixed_types": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "ValueError",
    "itertools.product",
    "sklearn.utils.multiclass.unique_labels",
    "sklearn.utils.testing.assert_raises",
    "sklearn.utils.tests.test_multiclass.EXAMPLES"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_multiclass.test_unique_labels_non_specific": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "ValueError",
    "format",
    "sklearn.utils.multiclass.unique_labels",
    "sklearn.utils.testing.assert_raises",
    "sklearn.utils.tests.test_multiclass.EXAMPLES",
    "sklearn.utils.tests.test_multiclass.NON_ARRAY_LIKE_EXAMPLES"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_multiclass.type_of_target": {
  "data": {
   "shadows": "sklearn.utils.multiclass.type_of_target"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_multiclass.unique_labels": {
  "data": {
   "shadows": "sklearn.utils.multiclass.unique_labels"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_multiclass.xrange": {
  "data": {
   "shadows": "sklearn.externals.six.moves.xrange"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_murmurhash": {
  "data": {},
  "type": "module"
 },
 "sklearn.utils.tests.test_murmurhash.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_murmurhash.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_murmurhash.assert_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_murmurhash.assert_true": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_true"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_murmurhash.b": {
  "data": {
   "shadows": "sklearn.externals.six.b"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_murmurhash.murmurhash3_32": {
  "data": {
   "shadows": "sklearn.utils.murmurhash.murmurhash3_32"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_murmurhash.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_murmurhash.test_mmhash3_bytes": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "sklearn.externals.six.b",
    "sklearn.utils.murmurhash.murmurhash3_32",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_murmurhash.test_mmhash3_int": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "sklearn.utils.murmurhash.murmurhash3_32",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_murmurhash.test_mmhash3_int_array": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "int",
    "numpy.array",
    "numpy.int32",
    "numpy.random.RandomState",
    "numpy.testing.assert_array_equal",
    "sklearn.utils.murmurhash.murmurhash3_32"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_murmurhash.test_mmhash3_unicode": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "sklearn.externals.six.u",
    "sklearn.utils.murmurhash.murmurhash3_32",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_murmurhash.test_no_collision_on_byte_range": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "range",
    "set",
    "sklearn.utils.murmurhash.murmurhash3_32",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_murmurhash.test_uniform_distribution": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "numpy.float64",
    "numpy.full",
    "numpy.ones",
    "numpy.testing.assert_array_almost_equal",
    "numpy.zeros",
    "range",
    "sklearn.utils.murmurhash.murmurhash3_32"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_murmurhash.u": {
  "data": {
   "shadows": "sklearn.externals.six.u"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_optimize": {
  "data": {},
  "type": "module"
 },
 "sklearn.utils.tests.test_optimize.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_optimize.fmin_ncg": {
  "data": {
   "shadows": "scipy.optimize.fmin_ncg"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_optimize.newton_cg": {
  "data": {
   "shadows": "sklearn.utils.optimize.newton_cg"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_optimize.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_optimize.test_newton_cg": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "grad",
    "numpy.ones",
    "numpy.random.RandomState",
    "scipy.optimize.fmin_ncg",
    "sklearn.utils.optimize.newton_cg",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_optimize.test_newton_cg.func": {
  "data": {
   "lineno": 16
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_optimize.test_newton_cg.grad": {
  "data": {
   "lineno": 20
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_optimize.test_newton_cg.grad_hess": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "grad"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_optimize.test_newton_cg.hess": {
  "data": {
   "lineno": 23
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_random": {
  "data": {},
  "type": "module"
 },
 "sklearn.utils.tests.test_random.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_random.assert_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_random.assert_raises": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_random.assert_true": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_true"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_random.check_edge_case_of_sample_int": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.utils.random.sample_without_replacement",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_random.check_sample_int": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "len",
    "numpy.all",
    "numpy.size",
    "numpy.unique",
    "range",
    "sklearn.utils.random.sample_without_replacement",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_random.check_sample_int_distribution": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "AssertionError",
    "frozenset",
    "len",
    "range",
    "sklearn.utils.fixes.comb",
    "sklearn.utils.random.sample_without_replacement"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_random.comb": {
  "data": {
   "shadows": "sklearn.utils.fixes.comb"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_random.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_random.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_random.random_choice_csc": {
  "data": {
   "shadows": "sklearn.utils.random.random_choice_csc"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_random.sample_without_replacement": {
  "data": {
   "shadows": "sklearn.utils.random.sample_without_replacement"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_random.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_random.test_invalid_sample_without_replacement_algorithm": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.utils.random.sample_without_replacement",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_random.test_random_choice_csc": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "float",
    "len",
    "numpy.array",
    "numpy.bincount",
    "numpy.testing.assert_array_almost_equal",
    "range",
    "scipy.sparse.issparse",
    "sklearn.utils.random.random_choice_csc",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_random.test_random_choice_csc_errors": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "sklearn.utils.random.random_choice_csc",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_random.test_sample_without_replacement_algorithms": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "sklearn.utils.tests.test_random.check_edge_case_of_sample_int",
    "sklearn.utils.tests.test_random.check_sample_int",
    "sklearn.utils.tests.test_random.check_sample_int_distribution"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_random.test_sample_without_replacement_algorithms.sample_without_replacement_method": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "sklearn.utils.random.sample_without_replacement"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_seq_dataset": {
  "data": {
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.float64",
    "scipy.sparse.csr_matrix",
    "sklearn.datasets.load_iris",
    "sklearn.utils.tests.test_seq_dataset.X",
    "sklearn.utils.tests.test_seq_dataset.iris",
    "sklearn.utils.tests.test_seq_dataset.y"
   ]
  },
  "type": "module"
 },
 "sklearn.utils.tests.test_seq_dataset.ArrayDataset": {
  "data": {
   "shadows": "sklearn.utils.seq_dataset.ArrayDataset"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_seq_dataset.CSRDataset": {
  "data": {
   "shadows": "sklearn.utils.seq_dataset.CSRDataset"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_seq_dataset.X": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "sklearn.utils.tests.test_seq_dataset.X_csr": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "sklearn.utils.tests.test_seq_dataset.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_seq_dataset.assert_csr_equal": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "numpy.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.tests.test_seq_dataset.X"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_seq_dataset.assert_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_seq_dataset.iris": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "sklearn.utils.tests.test_seq_dataset.load_iris": {
  "data": {
   "shadows": "sklearn.datasets.load_iris"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_seq_dataset.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_seq_dataset.sample_weight": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "sklearn.utils.tests.test_seq_dataset.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_seq_dataset.test_seq_dataset": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "range",
    "scipy.sparse.csr_matrix",
    "sklearn.utils.seq_dataset.ArrayDataset",
    "sklearn.utils.seq_dataset.CSRDataset",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.tests.test_seq_dataset.X",
    "sklearn.utils.tests.test_seq_dataset.X_csr",
    "sklearn.utils.tests.test_seq_dataset.assert_csr_equal",
    "sklearn.utils.tests.test_seq_dataset.sample_weight",
    "sklearn.utils.tests.test_seq_dataset.y"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_seq_dataset.test_seq_dataset_shuffle": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "range",
    "sklearn.utils.seq_dataset.ArrayDataset",
    "sklearn.utils.seq_dataset.CSRDataset",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.tests.test_seq_dataset.X",
    "sklearn.utils.tests.test_seq_dataset.X_csr",
    "sklearn.utils.tests.test_seq_dataset.sample_weight",
    "sklearn.utils.tests.test_seq_dataset.y"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_seq_dataset.y": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "sklearn.utils.tests.test_shortest_path": {
  "data": {},
  "type": "module"
 },
 "sklearn.utils.tests.test_shortest_path.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_shortest_path.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_shortest_path.floyd_warshall_slow": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "min",
    "numpy.inf",
    "numpy.isinf",
    "numpy.minimum",
    "numpy.where",
    "range"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_shortest_path.generate_graph": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "numpy.random.RandomState"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_shortest_path.graph_shortest_path": {
  "data": {
   "shadows": "sklearn.utils.graph.graph_shortest_path"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_shortest_path.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_shortest_path.single_source_shortest_path_length": {
  "data": {
   "shadows": "sklearn.utils.graph.single_source_shortest_path_length"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_shortest_path.test_dijkstra": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "numpy.testing.assert_array_almost_equal",
    "sklearn.utils.graph.graph_shortest_path",
    "sklearn.utils.tests.test_shortest_path.floyd_warshall_slow",
    "sklearn.utils.tests.test_shortest_path.generate_graph"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_shortest_path.test_dijkstra_bug_fix": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.assert_array_almost_equal",
    "sklearn.utils.graph.graph_shortest_path"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_shortest_path.test_floyd_warshall": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "numpy.testing.assert_array_almost_equal",
    "sklearn.utils.graph.graph_shortest_path",
    "sklearn.utils.tests.test_shortest_path.floyd_warshall_slow",
    "sklearn.utils.tests.test_shortest_path.generate_graph"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_shortest_path.test_shortest_path": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "collections.defaultdict",
    "int",
    "numpy.minimum",
    "numpy.testing.assert_array_almost_equal",
    "range",
    "sklearn.utils.graph.single_source_shortest_path_length",
    "sklearn.utils.tests.test_shortest_path.floyd_warshall_slow",
    "sklearn.utils.tests.test_shortest_path.generate_graph"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_show_versions": {
  "data": {},
  "type": "module"
 },
 "sklearn.utils.tests.test_show_versions._get_deps_info": {
  "data": {
   "shadows": "sklearn.utils._show_versions._get_deps_info"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_show_versions._get_sys_info": {
  "data": {
   "shadows": "sklearn.utils._show_versions._get_sys_info"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_show_versions.show_versions": {
  "data": {
   "shadows": "sklearn.utils._show_versions.show_versions"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_show_versions.test_get_deps_info": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "sklearn.utils._show_versions._get_deps_info"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_show_versions.test_get_sys_info": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "sklearn.utils._show_versions._get_sys_info"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_show_versions.test_show_versions_with_blas": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "sklearn.utils._show_versions.show_versions"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_sparsefuncs": {
  "data": {},
  "type": "module"
 },
 "sklearn.utils.tests.test_sparsefuncs.RandomState": {
  "data": {
   "shadows": "numpy.random.RandomState"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_sparsefuncs.assert_allclose": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_allclose"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_sparsefuncs.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_sparsefuncs.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_sparsefuncs.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_sparsefuncs.assert_raises": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_sparsefuncs.assign_rows_csr": {
  "data": {
   "shadows": "sklearn.utils.sparsefuncs_fast.assign_rows_csr"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_sparsefuncs.count_nonzero": {
  "data": {
   "shadows": "sklearn.utils.sparsefuncs.count_nonzero"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_sparsefuncs.csc_median_axis_0": {
  "data": {
   "shadows": "sklearn.utils.sparsefuncs.csc_median_axis_0"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_sparsefuncs.incr_mean_variance_axis": {
  "data": {
   "shadows": "sklearn.utils.sparsefuncs.incr_mean_variance_axis"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_sparsefuncs.inplace_column_scale": {
  "data": {
   "shadows": "sklearn.utils.sparsefuncs.inplace_column_scale"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_sparsefuncs.inplace_csr_row_normalize_l1": {
  "data": {
   "shadows": "sklearn.utils.sparsefuncs_fast.inplace_csr_row_normalize_l1"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_sparsefuncs.inplace_csr_row_normalize_l2": {
  "data": {
   "shadows": "sklearn.utils.sparsefuncs_fast.inplace_csr_row_normalize_l2"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_sparsefuncs.inplace_row_scale": {
  "data": {
   "shadows": "sklearn.utils.sparsefuncs.inplace_row_scale"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_sparsefuncs.inplace_swap_column": {
  "data": {
   "shadows": "sklearn.utils.sparsefuncs.inplace_swap_column"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_sparsefuncs.inplace_swap_row": {
  "data": {
   "shadows": "sklearn.utils.sparsefuncs.inplace_swap_row"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_sparsefuncs.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_sparsefuncs.make_classification": {
  "data": {
   "shadows": "sklearn.datasets.make_classification"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_sparsefuncs.mean_variance_axis": {
  "data": {
   "shadows": "sklearn.utils.sparsefuncs.mean_variance_axis"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_sparsefuncs.min_max_axis": {
  "data": {
   "shadows": "sklearn.utils.sparsefuncs.min_max_axis"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_sparsefuncs.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_sparsefuncs.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_sparsefuncs.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_sparsefuncs.test_count_nonzero": {
  "data": {
   "lineno": 424,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "numpy.array",
    "numpy.float64",
    "numpy.testing.assert_array_almost_equal",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "sklearn.utils.sparsefuncs.count_nonzero",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_sparsefuncs.test_csc_row_median": {
  "data": {
   "lineno": 447,
   "symbols_in_volume": [
    "TypeError",
    "numpy.array",
    "numpy.median",
    "numpy.random.RandomState",
    "numpy.testing.assert_array_equal",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "sklearn.utils.sparsefuncs.csc_median_axis_0",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_sparsefuncs.test_densify_rows": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.float32",
    "numpy.float64",
    "numpy.intp",
    "numpy.ones",
    "numpy.ones_like",
    "numpy.testing.assert_array_equal",
    "scipy.sparse.csr_matrix",
    "sklearn.utils.sparsefuncs_fast.assign_rows_csr"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_sparsefuncs.test_incr_mean_variance_axis": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "TypeError",
    "numpy.array",
    "numpy.atleast_2d",
    "numpy.float32",
    "numpy.float64",
    "numpy.int32",
    "numpy.int64",
    "numpy.random.RandomState",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_equal",
    "numpy.vstack",
    "numpy.zeros",
    "numpy.zeros_like",
    "range",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.lil_matrix",
    "sklearn.utils.sparsefuncs.incr_mean_variance_axis",
    "sklearn.utils.sparsefuncs.mean_variance_axis",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_sparsefuncs.test_incr_mean_variance_axis_ignore_nan": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.int64",
    "numpy.nan",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "sklearn.utils.sparsefuncs.incr_mean_variance_axis",
    "sklearn.utils.testing.assert_allclose",
    "sklearn.utils.tests.test_sparsefuncs.pytest",
    "sparse_constructor"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_sparsefuncs.test_inplace_column_scale": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "TypeError",
    "numpy.float32",
    "numpy.random.RandomState",
    "numpy.testing.assert_array_almost_equal",
    "scipy.sparse.rand",
    "sklearn.utils.sparsefuncs.inplace_column_scale",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_sparsefuncs.test_inplace_normalize": {
  "data": {
   "lineno": 480,
   "symbols_in_volume": [
    "inplace_csr_row_normalize",
    "numpy.abs",
    "numpy.float32",
    "numpy.float64",
    "numpy.int32",
    "numpy.int64",
    "numpy.ones",
    "numpy.random.RandomState",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_equal",
    "scipy.sparse.csr_matrix",
    "sklearn.utils.sparsefuncs_fast.inplace_csr_row_normalize_l1",
    "sklearn.utils.sparsefuncs_fast.inplace_csr_row_normalize_l2"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_sparsefuncs.test_inplace_row_scale": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "TypeError",
    "numpy.float32",
    "numpy.random.RandomState",
    "numpy.testing.assert_array_almost_equal",
    "scipy.sparse.rand",
    "sklearn.utils.sparsefuncs.inplace_column_scale",
    "sklearn.utils.sparsefuncs.inplace_row_scale",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_sparsefuncs.test_inplace_swap_column": {
  "data": {
   "lineno": 338,
   "symbols_in_volume": [
    "TypeError",
    "numpy.array",
    "numpy.float32",
    "numpy.float64",
    "numpy.testing.assert_array_equal",
    "scipy.linalg.get_blas_funcs",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "sklearn.utils.sparsefuncs.inplace_swap_column",
    "sklearn.utils.testing.assert_raises",
    "swap"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_sparsefuncs.test_inplace_swap_row": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "TypeError",
    "numpy.array",
    "numpy.float32",
    "numpy.float64",
    "numpy.testing.assert_array_equal",
    "scipy.linalg.get_blas_funcs",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "sklearn.utils.sparsefuncs.inplace_swap_row",
    "sklearn.utils.testing.assert_raises",
    "swap"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_sparsefuncs.test_mean_variance_axis0": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "TypeError",
    "numpy.float32",
    "numpy.float64",
    "numpy.int32",
    "numpy.int64",
    "numpy.mean",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_equal",
    "numpy.var",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.lil_matrix",
    "sklearn.datasets.make_classification",
    "sklearn.utils.sparsefuncs.mean_variance_axis",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_sparsefuncs.test_mean_variance_axis1": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "TypeError",
    "numpy.float32",
    "numpy.float64",
    "numpy.int32",
    "numpy.int64",
    "numpy.mean",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_equal",
    "numpy.var",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.lil_matrix",
    "sklearn.datasets.make_classification",
    "sklearn.utils.sparsefuncs.mean_variance_axis",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_sparsefuncs.test_mean_variance_illegal_axis": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "ValueError",
    "scipy.sparse.csr_matrix",
    "sklearn.datasets.make_classification",
    "sklearn.utils.sparsefuncs.incr_mean_variance_axis",
    "sklearn.utils.sparsefuncs.mean_variance_axis",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_sparsefuncs.test_min_max": {
  "data": {
   "lineno": 388,
   "symbols_in_volume": [
    "max_func",
    "min_func",
    "numpy.array",
    "numpy.float32",
    "numpy.float64",
    "numpy.max",
    "numpy.min",
    "numpy.nan",
    "numpy.nanmax",
    "numpy.nanmin",
    "numpy.testing.assert_array_equal",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "sklearn.utils.sparsefuncs.min_max_axis",
    "sklearn.utils.tests.test_sparsefuncs.pytest",
    "sparse_format"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_sparsefuncs.test_min_max_axis_errors": {
  "data": {
   "lineno": 411,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "numpy.array",
    "numpy.float64",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "sklearn.utils.sparsefuncs.min_max_axis",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_stats": {
  "data": {},
  "type": "module"
 },
 "sklearn.utils.tests.test_stats._cases": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "sklearn.utils.tests.test_stats.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_stats.ignore_warnings": {
  "data": {
   "shadows": "sklearn.utils.testing.ignore_warnings"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_stats.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_stats.rankdata": {
  "data": {
   "shadows": "sklearn.utils.stats.rankdata"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_stats.test_cases_rankdata": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "sklearn.utils.stats.rankdata",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.ignore_warnings",
    "sklearn.utils.tests.test_stats._cases",
    "sklearn.utils.tests.test_stats.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_testing": {
  "data": {},
  "type": "module"
 },
 "sklearn.utils.tests.test_testing.DecisionTreeClassifier": {
  "data": {
   "shadows": "sklearn.tree.DecisionTreeClassifier"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_testing.Klass": {
  "data": {
   "lineno": 362,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "sklearn.utils.tests.test_testing.Klass.f_bad_sections": {
  "data": {
   "lineno": 366
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_testing.Klass.f_missing": {
  "data": {
   "lineno": 363
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_testing.LinearDiscriminantAnalysis": {
  "data": {
   "shadows": "sklearn.discriminant_analysis.LinearDiscriminantAnalysis"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_testing.MockEst": {
  "data": {
   "lineno": 384,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "sklearn.utils.tests.test_testing.MockEst.__init__": {
  "data": {
   "lineno": 385
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_testing.MockEst.fit": {
  "data": {
   "lineno": 387
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_testing.MockEst.predict": {
  "data": {
   "lineno": 390
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_testing.MockEst.predict_proba": {
  "data": {
   "lineno": 393
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_testing.MockEst.score": {
  "data": {
   "lineno": 396
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_testing.MockMetaEstimator": {
  "data": {
   "lineno": 400,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "sklearn.utils.tests.test_testing.MockMetaEstimator.__init__": {
  "data": {
   "lineno": 401
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_testing.MockMetaEstimator.fit": {
  "data": {
   "lineno": 444,
   "symbols_in_volume": [
    "sklearn.utils.deprecation.deprecated"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_testing.MockMetaEstimator.predict": {
  "data": {
   "lineno": 411,
   "symbols_in_volume": [
    "sklearn.utils.metaestimators.if_delegate_has_method"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_testing.MockMetaEstimator.predict_proba": {
  "data": {
   "lineno": 433,
   "symbols_in_volume": [
    "sklearn.utils.metaestimators.if_delegate_has_method"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_testing.MockMetaEstimator.score": {
  "data": {
   "lineno": 422,
   "symbols_in_volume": [
    "sklearn.utils.deprecation.deprecated",
    "sklearn.utils.metaestimators.if_delegate_has_method"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_testing.RegistrationCounter": {
  "data": {
   "lineno": 498,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "sklearn.utils.tests.test_testing.RegistrationCounter.__call__": {
  "data": {
   "lineno": 502,
   "symbols_in_volume": [
    "sklearn.utils.testing._delete_folder"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_testing.RegistrationCounter.__init__": {
  "data": {
   "lineno": 499
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_testing.SkipTest": {
  "data": {
   "shadows": "sklearn.utils.testing.SkipTest"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_testing.TempMemmap": {
  "data": {
   "shadows": "sklearn.utils.testing.TempMemmap"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_testing.TestWarns": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "sklearn.utils.tests.test_testing.unittest"
   ]
  },
  "type": "class"
 },
 "sklearn.utils.tests.test_testing.TestWarns.test_warn": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "AssertionError",
    "UserWarning",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_no_warnings",
    "sklearn.utils.testing.assert_raises",
    "sklearn.utils.testing.assert_warns",
    "sklearn.utils.tests.test_testing.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_testing.TestWarns.test_warn.f": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "sklearn.utils.tests.test_testing.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_testing.TestWarns.test_warn_wrong_warning": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "AssertionError",
    "UserWarning",
    "sklearn.utils.testing.assert_warns",
    "sklearn.utils.tests.test_testing.sys"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_testing.TestWarns.test_warn_wrong_warning.f": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "DeprecationWarning",
    "sklearn.utils.tests.test_testing.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_testing._delete_folder": {
  "data": {
   "shadows": "sklearn.utils.testing._delete_folder"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_testing.assert_allclose_dense_sparse": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_allclose_dense_sparse"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_testing.assert_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_testing.assert_greater": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_greater"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_testing.assert_greater_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_greater_equal"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_testing.assert_less": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_less"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_testing.assert_less_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_less_equal"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_testing.assert_no_warnings": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_no_warnings"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_testing.assert_raise_message": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raise_message"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_testing.assert_raises": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_testing.assert_raises_regex": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises_regex"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_testing.assert_warns": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_warns"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_testing.atexit": {
  "data": {
   "shadows": "atexit"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_testing.check_docstring_parameters": {
  "data": {
   "shadows": "sklearn.utils.testing.check_docstring_parameters"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_testing.check_memmap": {
  "data": {
   "lineno": 507,
   "symbols_in_volume": [
    "isinstance",
    "numpy.memmap",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_testing.create_memmap_backed_data": {
  "data": {
   "shadows": "sklearn.utils.testing.create_memmap_backed_data"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_testing.deprecated": {
  "data": {
   "shadows": "sklearn.utils.deprecation.deprecated"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_testing.f_bad_order": {
  "data": {
   "lineno": 307
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_testing.f_bad_sections": {
  "data": {
   "lineno": 288
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_testing.f_check_param_definition": {
  "data": {
   "lineno": 343
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_testing.f_missing": {
  "data": {
   "lineno": 326
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_testing.f_ok": {
  "data": {
   "lineno": 269
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_testing.if_delegate_has_method": {
  "data": {
   "shadows": "sklearn.utils.metaestimators.if_delegate_has_method"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_testing.ignore_warnings": {
  "data": {
   "shadows": "sklearn.utils.testing.ignore_warnings"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_testing.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_testing.numpydoc": {
  "data": {
   "shadows": "numpydoc"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_testing.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_testing.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_testing.set_random_state": {
  "data": {
   "shadows": "sklearn.utils.testing.set_random_state"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_testing.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_testing.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_testing.test_assert_allclose_dense_sparse": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "AssertionError",
    "ValueError",
    "numpy.arange",
    "numpy.ones",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.diags",
    "sklearn.utils.testing.assert_allclose_dense_sparse",
    "sklearn.utils.testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_testing.test_assert_greater": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "AssertionError",
    "sklearn.utils.testing.assert_greater",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_testing.test_assert_greater_equal": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "AssertionError",
    "sklearn.utils.testing.assert_greater_equal",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_testing.test_assert_less": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "AssertionError",
    "sklearn.utils.testing.assert_less",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_testing.test_assert_less_equal": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "AssertionError",
    "sklearn.utils.testing.assert_less_equal",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_testing.test_assert_raise_message": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "AssertionError",
    "AttributeError",
    "TypeError",
    "ValueError",
    "sklearn.utils.testing.assert_raise_message",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_testing.test_assert_raise_message._no_raise": {
  "data": {
   "lineno": 100
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_testing.test_assert_raise_message._raise_ValueError": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_testing.test_assert_raises_msg": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "AssertionError",
    "ValueError",
    "sklearn.utils.testing.assert_raises",
    "sklearn.utils.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_testing.test_check_docstring_parameters": {
  "data": {
   "lineno": 449,
   "symbols_in_volume": [
    "AssertionError",
    "ImportError",
    "RuntimeError",
    "len",
    "sklearn.utils.testing.SkipTest",
    "sklearn.utils.testing.assert_raise_message",
    "sklearn.utils.testing.check_docstring_parameters",
    "sklearn.utils.tests.test_testing.Klass",
    "sklearn.utils.tests.test_testing.MockEst",
    "sklearn.utils.tests.test_testing.MockMetaEstimator",
    "sklearn.utils.tests.test_testing.f_bad_order",
    "sklearn.utils.tests.test_testing.f_bad_sections",
    "sklearn.utils.tests.test_testing.f_check_param_definition",
    "sklearn.utils.tests.test_testing.f_missing",
    "sklearn.utils.tests.test_testing.f_ok",
    "sklearn.utils.tests.test_testing.sys",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_testing.test_create_memmap_backed_data": {
  "data": {
   "lineno": 535,
   "symbols_in_volume": [
    "numpy.ones",
    "sklearn.utils.testing.create_memmap_backed_data",
    "sklearn.utils.tests.test_testing.RegistrationCounter",
    "sklearn.utils.tests.test_testing.atexit",
    "sklearn.utils.tests.test_testing.check_memmap",
    "sklearn.utils.tests.test_testing.os",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_testing.test_ignore_warning": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "DeprecationWarning",
    "UserWarning",
    "ValueError",
    "_warning_function",
    "silence_warnings_func",
    "sklearn.utils.testing.assert_no_warnings",
    "sklearn.utils.testing.assert_warns",
    "sklearn.utils.testing.ignore_warnings",
    "sklearn.utils.tests.test_testing.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_testing.test_ignore_warning._multiple_warning_function": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "DeprecationWarning",
    "sklearn.utils.tests.test_testing.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_testing.test_ignore_warning._warning_function": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "DeprecationWarning",
    "sklearn.utils.tests.test_testing.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_testing.test_ignore_warning.context_manager_no_deprecation_multiple_warning": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "DeprecationWarning",
    "_multiple_warning_function",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_testing.test_ignore_warning.context_manager_no_deprecation_warning": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "DeprecationWarning",
    "_warning_function",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_testing.test_ignore_warning.context_manager_no_user_multiple_warning": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "UserWarning",
    "_multiple_warning_function",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_testing.test_ignore_warning.context_manager_no_user_warning": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "UserWarning",
    "_warning_function",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_testing.test_ignore_warning.context_manager_no_warning": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "_warning_function",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_testing.test_ignore_warning.context_manager_no_warning_multiple": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "DeprecationWarning",
    "UserWarning",
    "_multiple_warning_function",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_testing.test_ignore_warning.decorator_no_deprecation_multiple_warning": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "DeprecationWarning",
    "_multiple_warning_function",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_testing.test_ignore_warning.decorator_no_deprecation_warning": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "DeprecationWarning",
    "_warning_function",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_testing.test_ignore_warning.decorator_no_user_multiple_warning": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "UserWarning",
    "_multiple_warning_function",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_testing.test_ignore_warning.decorator_no_user_warning": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "UserWarning",
    "_warning_function",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_testing.test_ignore_warning.decorator_no_warning": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "_multiple_warning_function",
    "_warning_function",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_testing.test_ignore_warning.decorator_no_warning_multiple": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "DeprecationWarning",
    "UserWarning",
    "_multiple_warning_function",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_testing.test_ignore_warning.test": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_testing.test_set_random_state": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "sklearn.discriminant_analysis.LinearDiscriminantAnalysis",
    "sklearn.tree.DecisionTreeClassifier",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.set_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_testing.test_tempmemmap": {
  "data": {
   "lineno": 514,
   "symbols_in_volume": [
    "numpy.ones",
    "sklearn.utils.testing.TempMemmap",
    "sklearn.utils.tests.test_testing.RegistrationCounter",
    "sklearn.utils.tests.test_testing.atexit",
    "sklearn.utils.tests.test_testing.check_memmap",
    "sklearn.utils.tests.test_testing.os"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_testing.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_testing.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_utils": {
  "data": {},
  "type": "module"
 },
 "sklearn.utils.tests.test_utils.MockDataFrame": {
  "data": {
   "shadows": "sklearn.utils.mocking.MockDataFrame"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_utils.SkipTest": {
  "data": {
   "shadows": "sklearn.utils.testing.SkipTest"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_utils.assert_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_utils.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_utils.assert_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_utils.assert_greater_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_greater_equal"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_utils.assert_no_warnings": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_no_warnings"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_utils.assert_raises": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_utils.assert_raises_regex": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises_regex"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_utils.assert_true": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_true"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_utils.assert_warns_message": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_warns_message"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_utils.chain": {
  "data": {
   "shadows": "itertools.chain"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_utils.check_random_state": {
  "data": {
   "shadows": "sklearn.utils.check_random_state"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_utils.column_or_1d": {
  "data": {
   "shadows": "sklearn.utils.column_or_1d"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_utils.config_context": {
  "data": {
   "shadows": "sklearn.config_context"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_utils.deprecated": {
  "data": {
   "shadows": "sklearn.utils.deprecated"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_utils.eigsh": {
  "data": {
   "shadows": "sklearn.utils.arpack.eigsh"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_utils.gen_even_slices": {
  "data": {
   "shadows": "sklearn.utils.gen_even_slices"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_utils.get_chunk_n_rows": {
  "data": {
   "shadows": "sklearn.utils.get_chunk_n_rows"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_utils.ignore_warnings": {
  "data": {
   "shadows": "sklearn.utils.testing.ignore_warnings"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_utils.is_scalar_nan": {
  "data": {
   "shadows": "sklearn.utils.is_scalar_nan"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_utils.laplacian": {
  "data": {
   "shadows": "scipy.sparse.csgraph.laplacian"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_utils.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_utils.pinv2": {
  "data": {
   "shadows": "scipy.linalg.pinv2"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_utils.pinvh": {
  "data": {
   "shadows": "sklearn.utils.extmath.pinvh"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_utils.product": {
  "data": {
   "shadows": "itertools.product"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_utils.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_utils.resample": {
  "data": {
   "shadows": "sklearn.utils.resample"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_utils.safe_indexing": {
  "data": {
   "shadows": "sklearn.utils.safe_indexing"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_utils.safe_mask": {
  "data": {
   "shadows": "sklearn.utils.safe_mask"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_utils.shuffle": {
  "data": {
   "shadows": "sklearn.utils.shuffle"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_utils.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_utils.test_arpack_eigsh_initialization": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.identity",
    "scipy.sparse.csgraph.laplacian",
    "sklearn.utils.arpack.eigsh",
    "sklearn.utils.check_random_state",
    "sklearn.utils.testing.assert_greater_equal",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_utils.test_column_or_1d": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "ValueError",
    "numpy.arange",
    "numpy.ravel",
    "sklearn.utils.column_or_1d",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_utils.test_deprecated": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "DeprecationWarning",
    "Ham",
    "ham",
    "hasattr",
    "issubclass",
    "len",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_true",
    "sklearn.utils.tests.test_utils.warnings",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_utils.test_deprecated.Ham": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "object",
    "sklearn.utils.deprecated"
   ]
  },
  "type": "class"
 },
 "sklearn.utils.tests.test_utils.test_deprecated.ham": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "sklearn.utils.deprecated"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_utils.test_gen_even_slices": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "ValueError",
    "itertools.chain",
    "list",
    "next",
    "range",
    "sklearn.utils.gen_even_slices",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_raises_regex",
    "slice"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_utils.test_get_chunk_n_rows": {
  "data": {
   "lineno": 284,
   "symbols_in_volume": [
    "check_warning",
    "sklearn.config_context",
    "sklearn.utils.get_chunk_n_rows",
    "sklearn.utils.testing.assert_no_warnings",
    "sklearn.utils.tests.test_utils.pytest",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_utils.test_get_chunk_n_rows.check_warning": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "UserWarning",
    "sklearn.utils.testing.assert_warns_message"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_utils.test_is_scalar_nan": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": [
    "float",
    "numpy.float",
    "numpy.float32",
    "numpy.float64",
    "numpy.nan",
    "sklearn.utils.is_scalar_nan",
    "sklearn.utils.tests.test_utils.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_utils.test_make_rng": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "ValueError",
    "numpy.random",
    "numpy.random.RandomState",
    "numpy.random.mtrand._rand",
    "sklearn.utils.check_random_state",
    "sklearn.utils.testing.assert_raises",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_utils.test_pinvh_nonpositive": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.dot",
    "numpy.float64",
    "numpy.linalg.svd",
    "scipy.linalg.pinv2",
    "sklearn.utils.extmath.pinvh",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_utils.test_pinvh_simple_complex": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.dot",
    "numpy.eye",
    "sklearn.utils.extmath.pinvh",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_utils.test_pinvh_simple_real": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.dot",
    "numpy.eye",
    "numpy.float64",
    "sklearn.utils.extmath.pinvh",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_utils.test_resample": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "sklearn.utils.resample",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_raises",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_utils.test_safe_indexing": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.utils.safe_indexing",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_utils.test_safe_indexing_mock_pandas": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.utils.mocking.MockDataFrame",
    "sklearn.utils.safe_indexing",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_utils.test_safe_indexing_pandas": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "ImportError",
    "itertools.product",
    "numpy.array",
    "pandas.DataFrame",
    "sklearn.utils.safe_indexing",
    "sklearn.utils.testing.SkipTest",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.tests.test_utils.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_utils.test_safe_mask": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "scipy.sparse.csr_matrix",
    "sklearn.utils.check_random_state",
    "sklearn.utils.safe_mask",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_utils.test_shuffle_dont_convert_to_array": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "list",
    "numpy.arange",
    "numpy.array",
    "object",
    "scipy.sparse.csc_matrix",
    "sklearn.utils.mocking.MockDataFrame",
    "sklearn.utils.shuffle",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_utils.test_shuffle_on_ndim_equals_three": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "numpy.array",
    "set",
    "sklearn.utils.shuffle",
    "sklearn.utils.testing.assert_equal",
    "to_tuple"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_utils.test_shuffle_on_ndim_equals_three.to_tuple": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "tuple"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_utils.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_validation": {
  "data": {},
  "type": "module"
 },
 "sklearn.utils.tests.test_validation.ARDRegression": {
  "data": {
   "shadows": "sklearn.linear_model.ARDRegression"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_validation.DataConversionWarning": {
  "data": {
   "shadows": "sklearn.exceptions.DataConversionWarning"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_validation.DummyMemory": {
  "data": {
   "lineno": 727,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "sklearn.utils.tests.test_validation.DummyMemory.cache": {
  "data": {
   "lineno": 728
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_validation.KNeighborsClassifier": {
  "data": {
   "shadows": "sklearn.neighbors.KNeighborsClassifier"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_validation.LARGE_SPARSE_SUPPORTED": {
  "data": {
   "shadows": "sklearn.utils.validation.LARGE_SPARSE_SUPPORTED"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_validation.MockDataFrame": {
  "data": {
   "shadows": "sklearn.utils.mocking.MockDataFrame"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_validation.NamedTemporaryFile": {
  "data": {
   "shadows": "tempfile.NamedTemporaryFile"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_validation.NotAnArray": {
  "data": {
   "shadows": "sklearn.utils.estimator_checks.NotAnArray"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_validation.NotFittedError": {
  "data": {
   "shadows": "sklearn.exceptions.NotFittedError"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_validation.RandomForestRegressor": {
  "data": {
   "shadows": "sklearn.ensemble.RandomForestRegressor"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_validation.SVR": {
  "data": {
   "shadows": "sklearn.svm.SVR"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_validation.SkipTest": {
  "data": {
   "shadows": "sklearn.utils.testing.SkipTest"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_validation.TempMemmap": {
  "data": {
   "shadows": "sklearn.utils.testing.TempMemmap"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_validation.WrongDummyMemory": {
  "data": {
   "lineno": 732,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "sklearn.utils.tests.test_validation.X_64bit": {
  "data": {
   "lineno": 449,
   "symbols_in_volume": [
    "getattr",
    "hasattr",
    "scipy.sparse.rand",
    "setattr",
    "sklearn.utils.tests.test_validation.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_validation.as_float_array": {
  "data": {
   "shadows": "sklearn.utils.as_float_array"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_validation.assert_all_finite": {
  "data": {
   "shadows": "sklearn.utils.validation.assert_all_finite"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_validation.assert_allclose_dense_sparse": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_allclose_dense_sparse"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_validation.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_validation.assert_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_validation.assert_false": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_false"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_validation.assert_no_warnings": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_no_warnings"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_validation.assert_raise_message": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raise_message"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_validation.assert_raises": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_validation.assert_raises_regex": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises_regex"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_validation.assert_true": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_true"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_validation.assert_warns": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_warns"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_validation.assert_warns_message": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_warns_message"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_validation.check_X_y": {
  "data": {
   "shadows": "sklearn.utils.check_X_y"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_validation.check_array": {
  "data": {
   "shadows": "sklearn.utils.check_array"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_validation.check_consistent_length": {
  "data": {
   "shadows": "sklearn.utils.validation.check_consistent_length"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_validation.check_is_fitted": {
  "data": {
   "shadows": "sklearn.utils.validation.check_is_fitted"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_validation.check_memory": {
  "data": {
   "shadows": "sklearn.utils.validation.check_memory"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_validation.check_symmetric": {
  "data": {
   "shadows": "sklearn.utils.check_symmetric"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_validation.deprecated": {
  "data": {
   "shadows": "sklearn.utils.deprecated"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_validation.has_fit_parameter": {
  "data": {
   "shadows": "sklearn.utils.validation.has_fit_parameter"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_validation.ignore_warnings": {
  "data": {
   "shadows": "sklearn.utils.testing.ignore_warnings"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_validation.importorskip": {
  "data": {
   "shadows": "pytest.importorskip"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_validation.make_blobs": {
  "data": {
   "shadows": "sklearn.datasets.make_blobs"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_validation.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_validation.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_validation.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_validation.product": {
  "data": {
   "shadows": "itertools.product"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_validation.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_validation.scipy_version": {
  "data": {
   "shadows": "scipy.__version__"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_validation.sklearn": {
  "data": {
   "shadows": "sklearn"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_validation.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_validation.sparse_random_matrix": {
  "data": {
   "shadows": "sklearn.random_projection.sparse_random_matrix"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_validation.test_as_float_array": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.asfortranarray",
    "numpy.bool",
    "numpy.float32",
    "numpy.float64",
    "numpy.int16",
    "numpy.int32",
    "numpy.int64",
    "numpy.int8",
    "numpy.isfortran",
    "numpy.isnan",
    "numpy.matrix",
    "numpy.nan",
    "numpy.ones",
    "numpy.uint16",
    "numpy.uint32",
    "numpy.uint8",
    "object",
    "scipy.sparse.csc_matrix",
    "sklearn.random_projection.sparse_random_matrix",
    "sklearn.utils.as_float_array",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_false",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_validation.test_as_float_array_nan": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "numpy.nan",
    "numpy.random.random",
    "scipy.sparse.rand",
    "sklearn.utils.as_float_array",
    "sklearn.utils.testing.assert_allclose_dense_sparse",
    "sklearn.utils.tests.test_validation.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_validation.test_check_array": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "FutureWarning",
    "TypeError",
    "ValueError",
    "isinstance",
    "itertools.product",
    "len",
    "numpy.arange",
    "numpy.array",
    "numpy.bool",
    "numpy.float",
    "numpy.float32",
    "numpy.int",
    "numpy.int32",
    "numpy.ndarray",
    "object",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.isspmatrix_dok",
    "sklearn.utils.check_array",
    "sklearn.utils.estimator_checks.NotAnArray",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_false",
    "sklearn.utils.testing.assert_raise_message",
    "sklearn.utils.testing.assert_raises",
    "sklearn.utils.testing.assert_true",
    "sklearn.utils.testing.ignore_warnings",
    "sklearn.utils.tests.test_validation.pytest",
    "sklearn.utils.tests.test_validation.warnings",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_validation.test_check_array_accept_large_sparse_no_exception": {
  "data": {
   "lineno": 458,
   "symbols_in_volume": [
    "sklearn.utils.check_array",
    "sklearn.utils.tests.test_validation.X_64bit",
    "sklearn.utils.validation.LARGE_SPARSE_SUPPORTED"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_validation.test_check_array_accept_large_sparse_raise_exception": {
  "data": {
   "lineno": 464,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.utils.check_array",
    "sklearn.utils.testing.assert_raise_message",
    "sklearn.utils.tests.test_validation.X_64bit",
    "sklearn.utils.validation.LARGE_SPARSE_SUPPORTED"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_validation.test_check_array_accept_sparse_no_exception": {
  "data": {
   "lineno": 439,
   "symbols_in_volume": [
    "scipy.sparse.csr_matrix",
    "sklearn.utils.check_array"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_validation.test_check_array_accept_sparse_type_exception": {
  "data": {
   "lineno": 407,
   "symbols_in_volume": [
    "DeprecationWarning",
    "TypeError",
    "ValueError",
    "scipy.sparse.csr_matrix",
    "sklearn.svm.SVR",
    "sklearn.utils.check_array",
    "sklearn.utils.testing.assert_raise_message",
    "sklearn.utils.testing.assert_warns",
    "sklearn.utils.tests.test_validation.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_validation.test_check_array_complex_data_error": {
  "data": {
   "lineno": 539,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "scipy.sparse.coo_matrix",
    "sklearn.utils.check_array",
    "sklearn.utils.mocking.MockDataFrame",
    "sklearn.utils.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_validation.test_check_array_dtype_stability": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": [
    "sklearn.utils.check_array",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_validation.test_check_array_dtype_warning": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.float32",
    "numpy.float64",
    "numpy.int32",
    "numpy.int64",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "sklearn.exceptions.DataConversionWarning",
    "sklearn.neighbors.KNeighborsClassifier",
    "sklearn.utils.check_X_y",
    "sklearn.utils.check_array",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_false",
    "sklearn.utils.testing.assert_no_warnings",
    "sklearn.utils.testing.assert_true",
    "sklearn.utils.testing.assert_warns",
    "sklearn.utils.testing.assert_warns_message"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_validation.test_check_array_force_all_finite_valid": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.asarray",
    "numpy.float",
    "numpy.inf",
    "numpy.nan",
    "retype",
    "scipy.sparse.csr_matrix",
    "sklearn.utils.check_array",
    "sklearn.utils.testing.assert_allclose_dense_sparse",
    "sklearn.utils.tests.test_validation.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_validation.test_check_array_force_all_finiteinvalid": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "ValueError",
    "numpy.arange",
    "numpy.asarray",
    "numpy.float",
    "numpy.inf",
    "numpy.nan",
    "retype",
    "scipy.sparse.csr_matrix",
    "sklearn.utils.check_array",
    "sklearn.utils.tests.test_validation.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_validation.test_check_array_large_indices_non_supported_scipy_version": {
  "data": {
   "lineno": 475,
   "symbols_in_volume": [
    "ValueError",
    "scipy.__version__",
    "sklearn.utils.check_array",
    "sklearn.utils.testing.assert_raise_message",
    "sklearn.utils.tests.test_validation.X_64bit",
    "sklearn.utils.validation.LARGE_SPARSE_SUPPORTED"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_validation.test_check_array_memmap": {
  "data": {
   "lineno": 756,
   "symbols_in_volume": [
    "numpy.may_share_memory",
    "numpy.ones",
    "sklearn.utils.check_array",
    "sklearn.utils.testing.TempMemmap",
    "sklearn.utils.tests.test_validation.pytest"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_validation.test_check_array_min_samples_and_features_messages": {
  "data": {
   "lineno": 485,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "numpy.empty",
    "numpy.ones",
    "sklearn.utils.check_X_y",
    "sklearn.utils.check_array",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_validation.test_check_array_on_mock_dataframe": {
  "data": {
   "lineno": 319,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.dtype",
    "numpy.float32",
    "sklearn.utils.check_array",
    "sklearn.utils.mocking.MockDataFrame",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_validation.test_check_array_pandas_dtype_object_conversion": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.object",
    "sklearn.utils.check_array",
    "sklearn.utils.mocking.MockDataFrame",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_validation.test_check_consistent_length": {
  "data": {
   "lineno": 656,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "numpy.array",
    "object",
    "scipy.sparse.csr_matrix",
    "sklearn.ensemble.RandomForestRegressor",
    "sklearn.utils.testing.assert_raises",
    "sklearn.utils.testing.assert_raises_regex",
    "sklearn.utils.validation.check_consistent_length"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_validation.test_check_dataframe_fit_attribute": {
  "data": {
   "lineno": 674,
   "symbols_in_volume": [
    "ImportError",
    "numpy.array",
    "pandas.DataFrame",
    "sklearn.utils.testing.SkipTest",
    "sklearn.utils.validation.check_consistent_length"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_validation.test_check_dataframe_warns_on_dtype": {
  "data": {
   "lineno": 695,
   "symbols_in_volume": [
    "int",
    "numpy.float64",
    "object",
    "pandas",
    "pandas.DataFrame",
    "pytest.importorskip",
    "sklearn.exceptions.DataConversionWarning",
    "sklearn.utils.check_array",
    "sklearn.utils.testing.assert_no_warnings",
    "sklearn.utils.testing.assert_warns",
    "sklearn.utils.testing.assert_warns_message"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_validation.test_check_is_fitted": {
  "data": {
   "lineno": 624,
   "symbols_in_volume": [
    "AttributeError",
    "TypeError",
    "ValueError",
    "sklearn.datasets.make_blobs",
    "sklearn.exceptions.NotFittedError",
    "sklearn.linear_model.ARDRegression",
    "sklearn.svm.SVR",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_raises",
    "sklearn.utils.validation.check_is_fitted",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_validation.test_check_memory": {
  "data": {
   "lineno": 736,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_raises_regex",
    "sklearn.utils.tests.test_validation.DummyMemory",
    "sklearn.utils.tests.test_validation.WrongDummyMemory",
    "sklearn.utils.tests.test_validation.os",
    "sklearn.utils.tests.test_validation.pytest",
    "sklearn.utils.validation.check_memory"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_validation.test_check_symmetric": {
  "data": {
   "lineno": 594,
   "symbols_in_volume": [
    "UserWarning",
    "ValueError",
    "numpy.array",
    "numpy.ones",
    "scipy.sparse.bsr_matrix",
    "scipy.sparse.coo_matrix",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.dok_matrix",
    "scipy.sparse.issparse",
    "scipy.sparse.lil_matrix",
    "sklearn.utils.check_symmetric",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_raises",
    "sklearn.utils.testing.assert_warns"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_validation.test_has_fit_parameter": {
  "data": {
   "lineno": 578,
   "symbols_in_volume": [
    "sklearn.ensemble.RandomForestRegressor",
    "sklearn.neighbors.KNeighborsClassifier",
    "sklearn.svm.SVR",
    "sklearn.utils.testing.assert_false",
    "sklearn.utils.testing.assert_true",
    "sklearn.utils.validation.has_fit_parameter"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_validation.test_has_fit_parameter.TestClassWithDeprecatedFitMethod": {
  "data": {
   "lineno": 584
  },
  "type": "class"
 },
 "sklearn.utils.tests.test_validation.test_has_fit_parameter.TestClassWithDeprecatedFitMethod.fit": {
  "data": {
   "lineno": 585,
   "symbols_in_volume": [
    "sklearn.utils.deprecated"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_validation.test_memmap": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "f",
    "numpy.asarray",
    "numpy.float32",
    "numpy.memmap",
    "sklearn.utils.as_float_array",
    "sklearn.utils.check_array",
    "sklearn.utils.testing.assert_array_equal",
    "tempfile.NamedTemporaryFile"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_validation.test_np_matrix": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "isinstance",
    "numpy.arange",
    "numpy.matrix",
    "scipy.sparse.csc_matrix",
    "sklearn.utils.as_float_array",
    "sklearn.utils.testing.assert_false"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_validation.test_ordering": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "numpy.ones",
    "scipy.sparse.csr_matrix",
    "sklearn.utils.check_array",
    "sklearn.utils.testing.assert_false",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_validation.test_suppress_validation": {
  "data": {
   "lineno": 686,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "numpy.inf",
    "sklearn.utils.testing.assert_raises",
    "sklearn.utils.tests.test_validation.sklearn",
    "sklearn.utils.validation.assert_all_finite"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_validation.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.utils.tosequence": {
  "data": {
   "lineno": 483,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "numpy.asarray",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.validation": {
  "data": {
   "symbols_in_volume": [
    "distutils.version.LooseVersion",
    "numpy.float16",
    "numpy.float32",
    "numpy.float64",
    "scipy.__version__",
    "sklearn.utils.validation.warnings"
   ]
  },
  "type": "module"
 },
 "sklearn.utils.validation.ComplexWarning": {
  "data": {
   "shadows": "numpy.core.numeric.ComplexWarning"
  },
  "type": "import"
 },
 "sklearn.utils.validation.FLOAT_DTYPES": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "sklearn.utils.validation.LARGE_SPARSE_SUPPORTED": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "sklearn.utils.validation.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "sklearn.utils.validation._assert_all_finite": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "ValueError",
    "numpy.asanyarray",
    "numpy.isfinite",
    "numpy.isinf"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.validation._check_large_sparse": {
  "data": {
   "lineno": 608,
   "symbols_in_volume": [
    "ValueError",
    "getattr",
    "scipy.__version__",
    "sklearn.utils.validation.LARGE_SPARSE_SUPPORTED"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.validation._ensure_no_complex_data": {
  "data": {
   "lineno": 350,
   "symbols_in_volume": [
    "ValueError",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.validation._ensure_sparse_format": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "hasattr",
    "isinstance",
    "len",
    "list",
    "sklearn.utils.validation._assert_all_finite",
    "sklearn.utils.validation._check_large_sparse",
    "sklearn.utils.validation.warnings",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.validation._get_config": {
  "data": {
   "shadows": "get_config"
  },
  "type": "import"
 },
 "sklearn.utils.validation._is_arraylike": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.validation._num_samples": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "TypeError",
    "callable",
    "hasattr",
    "len",
    "numpy.asarray",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.validation._shape_repr": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.validation.as_float_array": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "isinstance",
    "numpy.float32",
    "numpy.float64",
    "numpy.matrix",
    "numpy.ndarray",
    "scipy.sparse.issparse",
    "sklearn.utils.validation.check_array"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.validation.assert_all_finite": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "scipy.sparse.issparse",
    "sklearn.utils.validation._assert_all_finite"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.validation.check_X_y": {
  "data": {
   "lineno": 631,
   "symbols_in_volume": [
    "numpy.float64",
    "sklearn.utils.validation._assert_all_finite",
    "sklearn.utils.validation.check_array",
    "sklearn.utils.validation.check_consistent_length",
    "sklearn.utils.validation.column_or_1d"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.validation.check_array": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "DeprecationWarning",
    "FutureWarning",
    "ValueError",
    "getattr",
    "hasattr",
    "isinstance",
    "list",
    "map",
    "numpy.array",
    "numpy.asarray",
    "numpy.core.numeric.ComplexWarning",
    "numpy.flexible",
    "numpy.float64",
    "numpy.issubdtype",
    "numpy.may_share_memory",
    "scipy.sparse.issparse",
    "set",
    "sklearn.utils.validation._assert_all_finite",
    "sklearn.utils.validation._ensure_no_complex_data",
    "sklearn.utils.validation._ensure_sparse_format",
    "sklearn.utils.validation._num_samples",
    "sklearn.utils.validation._shape_repr",
    "sklearn.utils.validation.warnings",
    "sorted",
    "str",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.validation.check_consistent_length": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "len",
    "numpy.unique",
    "sklearn.utils.validation._num_samples"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.validation.check_is_fitted": {
  "data": {
   "lineno": 894,
   "symbols_in_volume": [
    "NotFittedError",
    "TypeError",
    "all",
    "all_or_any",
    "hasattr",
    "isinstance",
    "list",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.validation.check_memory": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "Memory",
    "ValueError",
    "distutils.version.LooseVersion",
    "hasattr",
    "isinstance",
    "scipy.__version__"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.validation.check_non_negative": {
  "data": {
   "lineno": 945,
   "symbols_in_volume": [
    "ValueError",
    "scipy.sparse.issparse"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.validation.check_random_state": {
  "data": {
   "lineno": 791,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "numpy.integer",
    "numpy.random",
    "numpy.random.RandomState",
    "numpy.random.mtrand._rand",
    "sklearn.utils.validation.numbers"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.validation.check_symmetric": {
  "data": {
   "lineno": 839,
   "symbols_in_volume": [
    "ValueError",
    "abs",
    "getattr",
    "numpy.all",
    "numpy.allclose",
    "scipy.sparse.issparse",
    "sklearn.utils.validation.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.validation.column_or_1d": {
  "data": {
   "lineno": 762,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.ravel",
    "numpy.shape",
    "sklearn.utils.validation.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.validation.has_fit_parameter": {
  "data": {
   "lineno": 812,
   "symbols_in_volume": [
    "signature"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.validation.indexable": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "hasattr",
    "numpy.array",
    "scipy.sparse.issparse",
    "sklearn.utils.validation.check_consistent_length"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.validation.joblib_version": {
  "data": {
   "shadows": "scipy.__version__"
  },
  "type": "import"
 },
 "sklearn.utils.validation.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.utils.validation.numbers": {
  "data": {
   "shadows": "numbers"
  },
  "type": "import"
 },
 "sklearn.utils.validation.scipy_version": {
  "data": {
   "shadows": "scipy.__version__"
  },
  "type": "import"
 },
 "sklearn.utils.validation.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.utils.validation.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.utils.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 }
}