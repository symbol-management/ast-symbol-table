{
 "*": {
  "data": {
   "imports": [
    "sklearn"
   ]
  },
  "type": "star-import"
 },
 "sklearn": {
  "data": {
   "symbols_in_volume": [
    "DeprecationWarning",
    "NameError",
    "__name__",
    "sklearn.__SKLEARN_SETUP__",
    "sklearn.re",
    "sklearn.sys",
    "sklearn.warnings"
   ]
  },
  "type": "module"
 },
 "sklearn.__SKLEARN_SETUP__": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "sklearn.__all__": {
  "data": {
   "lineno": 60
  },
  "type": "constant"
 },
 "sklearn.__check_build": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "sklearn.__check_build.raise_build_error"
   ]
  },
  "type": "module"
 },
 "sklearn.__check_build.INPLACE_MSG": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "sklearn.__check_build.STANDARD_MSG": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "sklearn.__check_build.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "sklearn.__check_build.raise_build_error": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "ImportError",
    "enumerate",
    "list",
    "sklearn.__check_build.INPLACE_MSG",
    "sklearn.__check_build.STANDARD_MSG",
    "sklearn.__check_build.os"
   ]
  },
  "type": "function"
 },
 "sklearn.__check_build.setup": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.distutils.core.setup",
    "sklearn.__check_build.setup.configuration"
   ]
  },
  "type": "module"
 },
 "sklearn.__check_build.setup.Configuration": {
  "data": {
   "shadows": "numpy.distutils.misc_util.Configuration"
  },
  "type": "import"
 },
 "sklearn.__check_build.setup.configuration": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "numpy.distutils.misc_util.Configuration",
    "sklearn.__check_build.setup.numpy"
   ]
  },
  "type": "function"
 },
 "sklearn.__check_build.setup.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.__check_build.setup.setup": {
  "data": {
   "shadows": "numpy.distutils.core.setup"
  },
  "type": "import"
 },
 "sklearn.__version__": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "sklearn._build_utils": {
  "data": {},
  "type": "module"
 },
 "sklearn._build_utils.get_blas_info": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "atlas_not_found",
    "numpy.distutils.system_info.get_info"
   ]
  },
  "type": "function"
 },
 "sklearn._build_utils.get_blas_info.atlas_not_found": {
  "data": {
   "lineno": 12
  },
  "type": "function"
 },
 "sklearn._build_utils.get_info": {
  "data": {
   "shadows": "numpy.distutils.system_info.get_info"
  },
  "type": "import"
 },
 "sklearn.base": {
  "data": {},
  "type": "module"
 },
 "sklearn.base.BaseEstimator": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "sklearn.base.BaseEstimator.__repr__": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "len",
    "sklearn.base._pprint"
   ]
  },
  "type": "function"
 },
 "sklearn.base.BaseEstimator._get_param_names": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "RuntimeError",
    "classmethod",
    "getattr",
    "object.__init__",
    "signature",
    "sorted"
   ]
  },
  "type": "function"
 },
 "sklearn.base.BaseEstimator.get_params": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "DeprecationWarning",
    "dict",
    "getattr",
    "hasattr",
    "len",
    "sklearn.base.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.base.BaseEstimator.set_params": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "setattr"
   ]
  },
  "type": "function"
 },
 "sklearn.base.BiclusterMixin": {
  "data": {
   "lineno": 375,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "sklearn.base.BiclusterMixin.biclusters_": {
  "data": {
   "lineno": 378,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.base.BiclusterMixin.get_indices": {
  "data": {
   "lineno": 386,
   "symbols_in_volume": [
    "numpy.nonzero"
   ]
  },
  "type": "function"
 },
 "sklearn.base.BiclusterMixin.get_shape": {
  "data": {
   "lineno": 403,
   "symbols_in_volume": [
    "len",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sklearn.base.BiclusterMixin.get_submatrix": {
  "data": {
   "lineno": 414,
   "symbols_in_volume": [
    "check_array",
    "numpy.newaxis"
   ]
  },
  "type": "function"
 },
 "sklearn.base.ChangedBehaviorWarning": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "UserWarning"
   ]
  },
  "type": "class"
 },
 "sklearn.base.ClassifierMixin": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "sklearn.base.ClassifierMixin.score": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "accuracy_score"
   ]
  },
  "type": "function"
 },
 "sklearn.base.ClusterMixin": {
  "data": {
   "lineno": 352,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "sklearn.base.ClusterMixin.fit_predict": {
  "data": {
   "lineno": 356
  },
  "type": "function"
 },
 "sklearn.base.MetaEstimatorMixin": {
  "data": {
   "lineno": 462,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "sklearn.base.RegressorMixin": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "sklearn.base.RegressorMixin.score": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": [
    "r2_score"
   ]
  },
  "type": "function"
 },
 "sklearn.base.TransformerMixin": {
  "data": {
   "lineno": 428,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "sklearn.base.TransformerMixin.fit_transform": {
  "data": {
   "lineno": 431
  },
  "type": "function"
 },
 "sklearn.base._pprint": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "enumerate",
    "float",
    "len",
    "list",
    "numpy.get_printoptions",
    "numpy.set_printoptions",
    "printer",
    "repr",
    "sorted",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.base.clone": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "RuntimeError",
    "TypeError",
    "estimator_type",
    "frozenset",
    "hasattr",
    "isinstance",
    "klass",
    "list",
    "numpy.all",
    "numpy.ndarray",
    "repr",
    "scipy.sparse.issparse",
    "set",
    "sklearn.base.copy",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.base.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "sklearn.base.is_classifier": {
  "data": {
   "lineno": 469,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "sklearn.base.is_regressor": {
  "data": {
   "lineno": 474,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "sklearn.base.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.base.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.base.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.calibration": {
  "data": {},
  "type": "module"
 },
 "sklearn.calibration.CalibratedClassifierCV": {
  "data": {
   "lineno": 29
  },
  "type": "class"
 },
 "sklearn.calibration.CalibratedClassifierCV.__init__": {
  "data": {
   "lineno": 99
  },
  "type": "function"
 },
 "sklearn.calibration.CalibratedClassifierCV.fit": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "LabelBinarizer",
    "LinearSVC",
    "ValueError",
    "check_X_y",
    "check_cv",
    "clone",
    "hasattr",
    "indexable",
    "int",
    "isinstance",
    "numpy.any",
    "numpy.sum",
    "signature",
    "sklearn.calibration._CalibratedClassifier",
    "sklearn.calibration.warnings",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.calibration.CalibratedClassifierCV.predict": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "check_is_fitted",
    "numpy.argmax"
   ]
  },
  "type": "function"
 },
 "sklearn.calibration.CalibratedClassifierCV.predict_proba": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "check_array",
    "check_is_fitted",
    "len",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "sklearn.calibration._CalibratedClassifier": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "sklearn.calibration._CalibratedClassifier.__init__": {
  "data": {
   "lineno": 269
  },
  "type": "function"
 },
 "sklearn.calibration._CalibratedClassifier._preproc": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "RuntimeError",
    "hasattr",
    "len",
    "numpy.arange",
    "numpy.newaxis"
   ]
  },
  "type": "function"
 },
 "sklearn.calibration._CalibratedClassifier.fit": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "IsotonicRegression",
    "LabelBinarizer",
    "ValueError",
    "sklearn.calibration._SigmoidCalibration",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.calibration._CalibratedClassifier.predict_proba": {
  "data": {
   "lineno": 330,
   "symbols_in_volume": [
    "len",
    "numpy.isnan",
    "numpy.newaxis",
    "numpy.sum",
    "numpy.zeros",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.calibration._SigmoidCalibration": {
  "data": {
   "lineno": 438
  },
  "type": "class"
 },
 "sklearn.calibration._SigmoidCalibration.fit": {
  "data": {
   "lineno": 449,
   "symbols_in_volume": [
    "column_or_1d",
    "indexable",
    "sklearn.calibration._sigmoid_calibration"
   ]
  },
  "type": "function"
 },
 "sklearn.calibration._SigmoidCalibration.predict": {
  "data": {
   "lineno": 475,
   "symbols_in_volume": [
    "column_or_1d",
    "numpy.exp"
   ]
  },
  "type": "function"
 },
 "sklearn.calibration._sigmoid_calibration": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": [
    "column_or_1d",
    "float",
    "math.log",
    "numpy.array",
    "numpy.finfo",
    "numpy.float",
    "numpy.sum",
    "numpy.zeros",
    "scipy.optimize.fmin_bfgs"
   ]
  },
  "type": "function"
 },
 "sklearn.calibration._sigmoid_calibration.grad": {
  "data": {
   "lineno": 422,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.dot",
    "numpy.exp",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "sklearn.calibration._sigmoid_calibration.objective": {
  "data": {
   "lineno": 412,
   "symbols_in_volume": [
    "numpy.exp",
    "numpy.log"
   ]
  },
  "type": "function"
 },
 "sklearn.calibration.calibration_curve": {
  "data": {
   "lineno": 492,
   "symbols_in_volume": [
    "ValueError",
    "_check_binary_probabilistic_predictions",
    "column_or_1d",
    "len",
    "numpy.bincount",
    "numpy.digitize",
    "numpy.linspace"
   ]
  },
  "type": "function"
 },
 "sklearn.calibration.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sklearn.calibration.fmin_bfgs": {
  "data": {
   "shadows": "scipy.optimize.fmin_bfgs"
  },
  "type": "import"
 },
 "sklearn.calibration.log": {
  "data": {
   "shadows": "math.log"
  },
  "type": "import"
 },
 "sklearn.calibration.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.calibration.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.cluster": {
  "data": {},
  "type": "module"
 },
 "sklearn.cluster.__all__": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "sklearn.cluster._feature_agglomeration": {
  "data": {},
  "type": "module"
 },
 "sklearn.cluster._feature_agglomeration.AgglomerationTransform": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "numpy.mean"
   ]
  },
  "type": "class"
 },
 "sklearn.cluster._feature_agglomeration.AgglomerationTransform.inverse_transform": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "check_is_fitted",
    "numpy.unique"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster._feature_agglomeration.AgglomerationTransform.transform": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "DeprecationWarning",
    "ValueError",
    "check_array",
    "check_is_fitted",
    "len",
    "numpy.array",
    "numpy.unique",
    "pooling_func",
    "sklearn.cluster._feature_agglomeration.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster._feature_agglomeration.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.cluster._feature_agglomeration.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.cluster.affinity_propagation_": {
  "data": {},
  "type": "module"
 },
 "sklearn.cluster.affinity_propagation_.AffinityPropagation": {
  "data": {
   "lineno": 193
  },
  "type": "class"
 },
 "sklearn.cluster.affinity_propagation_.AffinityPropagation.__init__": {
  "data": {
   "lineno": 260
  },
  "type": "function"
 },
 "sklearn.cluster.affinity_propagation_.AffinityPropagation._pairwise": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.affinity_propagation_.AffinityPropagation.fit": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": [
    "ValueError",
    "check_array",
    "euclidean_distances",
    "sklearn.cluster.affinity_propagation_.affinity_propagation",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.affinity_propagation_.AffinityPropagation.predict": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": [
    "ValueError",
    "check_is_fitted",
    "hasattr",
    "pairwise_distances_argmin"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.affinity_propagation_.affinity_propagation": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "ValueError",
    "as_float_array",
    "numpy.add",
    "numpy.arange",
    "numpy.argmax",
    "numpy.diag",
    "numpy.double",
    "numpy.empty",
    "numpy.finfo",
    "numpy.inf",
    "numpy.max",
    "numpy.maximum",
    "numpy.median",
    "numpy.nan",
    "numpy.newaxis",
    "numpy.random.RandomState",
    "numpy.searchsorted",
    "numpy.subtract",
    "numpy.sum",
    "numpy.unique",
    "numpy.where",
    "numpy.zeros",
    "print",
    "range",
    "repr"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.affinity_propagation_.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.cluster.bicluster": {
  "data": {},
  "type": "module"
 },
 "sklearn.cluster.bicluster.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "sklearn.cluster.bicluster.BaseSpectral": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "abc.ABCMeta"
   ]
  },
  "type": "class"
 },
 "sklearn.cluster.bicluster.BaseSpectral.__init__": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.bicluster.BaseSpectral._check_parameters": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.bicluster.BaseSpectral._k_means": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "KMeans",
    "MiniBatchKMeans"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.bicluster.BaseSpectral._svd": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "assert_all_finite",
    "eigsh",
    "numpy.any",
    "numpy.isnan",
    "randomized_svd",
    "safe_sparse_dot",
    "svds"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.bicluster.BaseSpectral.fit": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "check_array",
    "numpy.float64"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.bicluster.SpectralBiclustering": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "sklearn.cluster.bicluster.BaseSpectral"
   ]
  },
  "type": "class"
 },
 "sklearn.cluster.bicluster.SpectralBiclustering.__init__": {
  "data": {
   "lineno": 388,
   "symbols_in_volume": [
    "sklearn.cluster.bicluster.SpectralBiclustering",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.bicluster.SpectralBiclustering._check_parameters": {
  "data": {
   "lineno": 404,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "int",
    "sklearn.cluster.bicluster.SpectralBiclustering",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.bicluster.SpectralBiclustering._fit": {
  "data": {
   "lineno": 433,
   "symbols_in_volume": [
    "TypeError",
    "numpy.vstack",
    "range",
    "sklearn.cluster.bicluster._bistochastic_normalize",
    "sklearn.cluster.bicluster._log_normalize",
    "sklearn.cluster.bicluster._scale_normalize"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.bicluster.SpectralBiclustering._fit_best_piecewise": {
  "data": {
   "lineno": 472,
   "symbols_in_volume": [
    "norm",
    "numpy.apply_along_axis",
    "numpy.argsort"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.bicluster.SpectralBiclustering._fit_best_piecewise.make_piecewise": {
  "data": {
   "lineno": 480
  },
  "type": "function"
 },
 "sklearn.cluster.bicluster.SpectralBiclustering._project_and_cluster": {
  "data": {
   "lineno": 490,
   "symbols_in_volume": [
    "safe_sparse_dot"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.bicluster.SpectralCoclustering": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "sklearn.cluster.bicluster.BaseSpectral"
   ]
  },
  "type": "class"
 },
 "sklearn.cluster.bicluster.SpectralCoclustering.__init__": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "sklearn.cluster.bicluster.SpectralCoclustering",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.bicluster.SpectralCoclustering._fit": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "int",
    "numpy.ceil",
    "numpy.log2",
    "numpy.newaxis",
    "numpy.vstack",
    "range",
    "sklearn.cluster.bicluster._scale_normalize"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.bicluster.__all__": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "sklearn.cluster.bicluster._bistochastic_normalize": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "make_nonnegative",
    "norm",
    "range",
    "scipy.sparse.issparse",
    "sklearn.cluster.bicluster._scale_normalize"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.bicluster._log_normalize": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "ValueError",
    "make_nonnegative",
    "numpy.log",
    "numpy.newaxis",
    "scipy.sparse.issparse"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.bicluster._scale_normalize": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "make_nonnegative",
    "numpy.asarray",
    "numpy.isnan",
    "numpy.newaxis",
    "numpy.sqrt",
    "numpy.where",
    "scipy.sparse.dia_matrix",
    "scipy.sparse.issparse"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.bicluster.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "sklearn.cluster.bicluster.dia_matrix": {
  "data": {
   "shadows": "scipy.sparse.dia_matrix"
  },
  "type": "import"
 },
 "sklearn.cluster.bicluster.issparse": {
  "data": {
   "shadows": "scipy.sparse.issparse"
  },
  "type": "import"
 },
 "sklearn.cluster.bicluster.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.cluster.birch": {
  "data": {},
  "type": "module"
 },
 "sklearn.cluster.birch.Birch": {
  "data": {
   "lineno": 323
  },
  "type": "class"
 },
 "sklearn.cluster.birch.Birch.__init__": {
  "data": {
   "lineno": 406
  },
  "type": "function"
 },
 "sklearn.cluster.birch.Birch._check_fit": {
  "data": {
   "lineno": 512,
   "symbols_in_volume": [
    "NotFittedError",
    "ValueError",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.birch.Birch._fit": {
  "data": {
   "lineno": 426,
   "symbols_in_volume": [
    "ValueError",
    "check_array",
    "getattr",
    "iter",
    "iter_func",
    "numpy.concatenate",
    "scipy.sparse.issparse",
    "sklearn.cluster.birch._CFNode",
    "sklearn.cluster.birch._CFSubcluster",
    "sklearn.cluster.birch._iterate_sparse_X",
    "sklearn.cluster.birch._split_node"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.birch.Birch._get_leaves": {
  "data": {
   "lineno": 477
  },
  "type": "function"
 },
 "sklearn.cluster.birch.Birch._global_clustering": {
  "data": {
   "lineno": 570,
   "symbols_in_volume": [
    "AgglomerativeClustering",
    "ValueError",
    "hasattr",
    "int",
    "isinstance",
    "len",
    "numpy.arange",
    "row_norms",
    "sklearn.cluster.birch.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.birch.Birch.fit": {
  "data": {
   "lineno": 414
  },
  "type": "function"
 },
 "sklearn.cluster.birch.Birch.partial_fit": {
  "data": {
   "lineno": 493
  },
  "type": "function"
 },
 "sklearn.cluster.birch.Birch.predict": {
  "data": {
   "lineno": 527,
   "symbols_in_volume": [
    "check_array",
    "numpy.argmin",
    "safe_sparse_dot"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.birch.Birch.transform": {
  "data": {
   "lineno": 550,
   "symbols_in_volume": [
    "check_is_fitted",
    "euclidean_distances"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.birch._CFNode": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "sklearn.cluster.birch._CFNode.__init__": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.birch._CFNode.append_subcluster": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.birch._CFNode.insert_cf_subcluster": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "len",
    "numpy.argmin",
    "numpy.dot",
    "sklearn.cluster.birch._split_node"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.birch._CFNode.update_split_subclusters": {
  "data": {
   "lineno": 163
  },
  "type": "function"
 },
 "sklearn.cluster.birch._CFSubcluster": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "sklearn.cluster.birch._CFSubcluster.__init__": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "numpy.dot"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.birch._CFSubcluster.merge_subcluster": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": [
    "numpy.dot"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.birch._CFSubcluster.radius": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": [
    "math.sqrt",
    "numpy.dot",
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.birch._CFSubcluster.update": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "numpy.dot"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.birch._iterate_sparse_X": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "numpy.zeros",
    "xrange"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.birch._split_node": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "enumerate",
    "euclidean_distances",
    "numpy.unravel_index",
    "sklearn.cluster.birch._CFNode",
    "sklearn.cluster.birch._CFSubcluster"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.birch.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sklearn.cluster.birch.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.cluster.birch.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.cluster.birch.sqrt": {
  "data": {
   "shadows": "math.sqrt"
  },
  "type": "import"
 },
 "sklearn.cluster.birch.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.cluster.dbscan_": {
  "data": {},
  "type": "module"
 },
 "sklearn.cluster.dbscan_.DBSCAN": {
  "data": {
   "lineno": 164
  },
  "type": "class"
 },
 "sklearn.cluster.dbscan_.DBSCAN.__init__": {
  "data": {
   "lineno": 239
  },
  "type": "function"
 },
 "sklearn.cluster.dbscan_.DBSCAN.fit": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "check_array",
    "len",
    "numpy.empty",
    "sklearn.cluster.dbscan_.dbscan"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.dbscan_.DBSCAN.fit_predict": {
  "data": {
   "lineno": 275
  },
  "type": "function"
 },
 "sklearn.cluster.dbscan_.dbscan": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "DeprecationWarning",
    "NearestNeighbors",
    "ValueError",
    "astype",
    "check_array",
    "check_consistent_length",
    "dbscan_inner",
    "len",
    "numpy.arange",
    "numpy.array",
    "numpy.asarray",
    "numpy.cumsum",
    "numpy.empty",
    "numpy.insert",
    "numpy.intp",
    "numpy.ones",
    "numpy.split",
    "numpy.sum",
    "numpy.uint8",
    "numpy.where",
    "object",
    "scipy.sparse.issparse",
    "sklearn.cluster.dbscan_.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.dbscan_.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.cluster.dbscan_.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.cluster.dbscan_.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.cluster.hierarchical": {
  "data": {
   "symbols_in_volume": [
    "dict",
    "range",
    "sklearn.cluster.hierarchical._average_linkage",
    "sklearn.cluster.hierarchical._complete_linkage",
    "sklearn.cluster.hierarchical.sys",
    "sklearn.cluster.hierarchical.ward_tree"
   ]
  },
  "type": "module"
 },
 "sklearn.cluster.hierarchical.AgglomerativeClustering": {
  "data": {
   "lineno": 607
  },
  "type": "class"
 },
 "sklearn.cluster.hierarchical.AgglomerativeClustering.__init__": {
  "data": {
   "lineno": 690,
   "symbols_in_volume": [
    "Memory",
    "affinity",
    "numpy.mean"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.hierarchical.AgglomerativeClustering.fit": {
  "data": {
   "lineno": 704,
   "symbols_in_volume": [
    "Memory",
    "ValueError",
    "callable",
    "check_array",
    "isinstance",
    "len",
    "max",
    "numpy.copy",
    "numpy.searchsorted",
    "numpy.unique",
    "sklearn.cluster.hierarchical._TREE_BUILDERS",
    "sklearn.cluster.hierarchical._hc_cut",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.hierarchical.FeatureAgglomeration": {
  "data": {
   "lineno": 779,
   "symbols_in_volume": [
    "sklearn.cluster.hierarchical.AgglomerativeClustering"
   ]
  },
  "type": "class"
 },
 "sklearn.cluster.hierarchical.FeatureAgglomeration.fit": {
  "data": {
   "lineno": 860,
   "symbols_in_volume": [
    "check_array",
    "sklearn.cluster.hierarchical.AgglomerativeClustering"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.hierarchical.FeatureAgglomeration.fit_predict": {
  "data": {
   "lineno": 876,
   "symbols_in_volume": [
    "AttributeError",
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.hierarchical._TREE_BUILDERS": {
  "data": {
   "lineno": 552
  },
  "type": "constant"
 },
 "sklearn.cluster.hierarchical._average_linkage": {
  "data": {
   "lineno": 547,
   "symbols_in_volume": [
    "sklearn.cluster.hierarchical.linkage_tree"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.hierarchical._complete_linkage": {
  "data": {
   "lineno": 542,
   "symbols_in_volume": [
    "sklearn.cluster.hierarchical.linkage_tree"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.hierarchical._fix_connectivity": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "ValueError",
    "connected_components",
    "numpy.min",
    "numpy.where",
    "pairwise_distances",
    "scipy.sparse.isspmatrix",
    "scipy.sparse.isspmatrix_lil",
    "scipy.sparse.lil_matrix",
    "sklearn.cluster.hierarchical.warnings",
    "sklearn.cluster.hierarchical.xrange"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.hierarchical._hc_cut": {
  "data": {
   "lineno": 561,
   "symbols_in_volume": [
    "ValueError",
    "enumerate",
    "heapq.heappush",
    "heapq.heappushpop",
    "max",
    "numpy.intp",
    "numpy.zeros",
    "sklearn.cluster.hierarchical.xrange"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.hierarchical.heapify": {
  "data": {
   "shadows": "heapq.heapify"
  },
  "type": "import"
 },
 "sklearn.cluster.hierarchical.heappop": {
  "data": {
   "shadows": "heapq.heappop"
  },
  "type": "import"
 },
 "sklearn.cluster.hierarchical.heappush": {
  "data": {
   "shadows": "heapq.heappush"
  },
  "type": "import"
 },
 "sklearn.cluster.hierarchical.heappushpop": {
  "data": {
   "shadows": "heapq.heappushpop"
  },
  "type": "import"
 },
 "sklearn.cluster.hierarchical.hierarchy": {
  "data": {
   "shadows": "scipy.cluster.hierarchy"
  },
  "type": "import"
 },
 "sklearn.cluster.hierarchical.linkage_tree": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": [
    "DeprecationWarning",
    "IntFloatDict",
    "KeyError",
    "ValueError",
    "affinity",
    "callable",
    "enumerate",
    "heapq.heapify",
    "heapq.heappop",
    "heapq.heappush",
    "join_func",
    "list",
    "numpy.arange",
    "numpy.array",
    "numpy.asarray",
    "numpy.empty",
    "numpy.float64",
    "numpy.int",
    "numpy.intp",
    "numpy.ones",
    "numpy.reshape",
    "numpy.triu_indices",
    "object",
    "paired_distances",
    "scipy.cluster.hierarchy.linkage",
    "sklearn.cluster.hierarchical._fix_connectivity",
    "sklearn.cluster.hierarchical.warnings",
    "sklearn.cluster.hierarchical.xrange",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.hierarchical.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.cluster.hierarchical.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.cluster.hierarchical.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "sklearn.cluster.hierarchical.ward_tree": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "DeprecationWarning",
    "ValueError",
    "bool",
    "enumerate",
    "heapq.heapify",
    "heapq.heappop",
    "heapq.heappush",
    "len",
    "list",
    "numpy.arange",
    "numpy.array",
    "numpy.asarray",
    "numpy.empty",
    "numpy.float",
    "numpy.int8",
    "numpy.intp",
    "numpy.ones",
    "numpy.reshape",
    "numpy.sqrt",
    "numpy.zeros",
    "range",
    "scipy.cluster.hierarchy.ward",
    "sklearn.cluster.hierarchical._fix_connectivity",
    "sklearn.cluster.hierarchical.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.hierarchical.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.cluster.hierarchical.xrange": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "sklearn.cluster.k_means_": {
  "data": {},
  "type": "module"
 },
 "sklearn.cluster.k_means_.KMeans": {
  "data": {
   "lineno": 660
  },
  "type": "class"
 },
 "sklearn.cluster.k_means_.KMeans.__init__": {
  "data": {
   "lineno": 769,
   "symbols_in_volume": [
    "init"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.k_means_.KMeans._check_fit_data": {
  "data": {
   "lineno": 784,
   "symbols_in_volume": [
    "ValueError",
    "check_array",
    "numpy.float64"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.k_means_.KMeans._check_test_data": {
  "data": {
   "lineno": 792,
   "symbols_in_volume": [
    "ValueError",
    "check_array"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.k_means_.KMeans._transform": {
  "data": {
   "lineno": 866,
   "symbols_in_volume": [
    "euclidean_distances"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.k_means_.KMeans.fit": {
  "data": {
   "lineno": 804,
   "symbols_in_volume": [
    "check_random_state",
    "sklearn.cluster.k_means_.k_means"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.k_means_.KMeans.fit_predict": {
  "data": {
   "lineno": 824
  },
  "type": "function"
 },
 "sklearn.cluster.k_means_.KMeans.fit_transform": {
  "data": {
   "lineno": 832
  },
  "type": "function"
 },
 "sklearn.cluster.k_means_.KMeans.predict": {
  "data": {
   "lineno": 870,
   "symbols_in_volume": [
    "check_is_fitted",
    "row_norms",
    "sklearn.cluster.k_means_._labels_inertia"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.k_means_.KMeans.score": {
  "data": {
   "lineno": 893,
   "symbols_in_volume": [
    "check_is_fitted",
    "row_norms",
    "sklearn.cluster.k_means_._labels_inertia"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.k_means_.KMeans.transform": {
  "data": {
   "lineno": 844,
   "symbols_in_volume": [
    "check_is_fitted"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.k_means_.MiniBatchKMeans": {
  "data": {
   "lineno": 1113,
   "symbols_in_volume": [
    "sklearn.cluster.k_means_.KMeans"
   ]
  },
  "type": "class"
 },
 "sklearn.cluster.k_means_.MiniBatchKMeans.__init__": {
  "data": {
   "lineno": 1211,
   "symbols_in_volume": [
    "init",
    "sklearn.cluster.k_means_.MiniBatchKMeans",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.k_means_.MiniBatchKMeans._labels_inertia_minibatch": {
  "data": {
   "lineno": 1360,
   "symbols_in_volume": [
    "gen_batches",
    "numpy.hstack",
    "numpy.sum",
    "print",
    "row_norms",
    "sklearn.cluster.k_means_._labels_inertia",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.k_means_.MiniBatchKMeans.fit": {
  "data": {
   "lineno": 1226,
   "symbols_in_volume": [
    "RuntimeWarning",
    "ValueError",
    "check_array",
    "check_random_state",
    "float",
    "hasattr",
    "int",
    "numpy.ascontiguousarray",
    "numpy.ceil",
    "numpy.double",
    "numpy.float64",
    "numpy.int32",
    "numpy.zeros",
    "print",
    "range",
    "row_norms",
    "sklearn.cluster.k_means_._init_centroids",
    "sklearn.cluster.k_means_._labels_inertia",
    "sklearn.cluster.k_means_._mini_batch_convergence",
    "sklearn.cluster.k_means_._mini_batch_step",
    "sklearn.cluster.k_means_._tolerance",
    "sklearn.cluster.k_means_.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.k_means_.MiniBatchKMeans.partial_fit": {
  "data": {
   "lineno": 1388,
   "symbols_in_volume": [
    "check_array",
    "check_random_state",
    "getattr",
    "hasattr",
    "numpy.ascontiguousarray",
    "numpy.double",
    "numpy.float64",
    "numpy.int32",
    "numpy.zeros",
    "row_norms",
    "sklearn.cluster.k_means_._init_centroids",
    "sklearn.cluster.k_means_._labels_inertia",
    "sklearn.cluster.k_means_._mini_batch_step"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.k_means_.MiniBatchKMeans.predict": {
  "data": {
   "lineno": 1441,
   "symbols_in_volume": [
    "check_is_fitted"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.k_means_._init_centroids": {
  "data": {
   "lineno": 582,
   "symbols_in_volume": [
    "RuntimeWarning",
    "ValueError",
    "callable",
    "check_random_state",
    "hasattr",
    "init",
    "isinstance",
    "row_norms",
    "scipy.sparse.issparse",
    "sklearn.cluster.k_means_._k_init",
    "sklearn.cluster.k_means_._validate_center_shape",
    "sklearn.cluster.k_means_.warnings",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.k_means_._k_init": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "euclidean_distances",
    "int",
    "numpy.empty",
    "numpy.log",
    "numpy.minimum",
    "numpy.newaxis",
    "numpy.searchsorted",
    "range",
    "scipy.sparse.issparse"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.k_means_._kmeans_single": {
  "data": {
   "lineno": 361,
   "symbols_in_volume": [
    "check_random_state",
    "numpy.float64",
    "numpy.zeros",
    "print",
    "range",
    "scipy.sparse.issparse",
    "sklearn.cluster.k_means_._init_centroids",
    "sklearn.cluster.k_means_._labels_inertia",
    "squared_norm"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.k_means_._labels_inertia": {
  "data": {
   "lineno": 529,
   "symbols_in_volume": [
    "numpy.float64",
    "numpy.int32",
    "numpy.ones",
    "numpy.zeros",
    "scipy.sparse.issparse",
    "sklearn.cluster.k_means_._labels_inertia_precompute_dense"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.k_means_._labels_inertia_precompute_dense": {
  "data": {
   "lineno": 482,
   "symbols_in_volume": [
    "euclidean_distances",
    "numpy.empty",
    "numpy.infty",
    "numpy.int32",
    "numpy.minimum",
    "range"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.k_means_._mini_batch_convergence": {
  "data": {
   "lineno": 1047,
   "symbols_in_volume": [
    "float",
    "print"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.k_means_._mini_batch_step": {
  "data": {
   "lineno": 913,
   "symbols_in_volume": [
    "assign_rows_csr",
    "astype",
    "check_random_state",
    "choice",
    "int",
    "numpy.argsort",
    "numpy.dot",
    "numpy.intp",
    "numpy.min",
    "numpy.sum",
    "numpy.where",
    "print",
    "range",
    "scipy.sparse.issparse",
    "sklearn.cluster.k_means_._labels_inertia"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.k_means_._tolerance": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "mean_variance_axis",
    "numpy.mean",
    "numpy.var",
    "scipy.sparse.issparse"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.k_means_._validate_center_shape": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "ValueError",
    "len"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.k_means_.k_means": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "Parallel",
    "RuntimeWarning",
    "ValueError",
    "as_float_array",
    "bool",
    "check_array",
    "check_random_state",
    "delayed",
    "hasattr",
    "isinstance",
    "numpy.argmin",
    "numpy.float64",
    "numpy.iinfo",
    "numpy.infty",
    "numpy.int32",
    "range",
    "row_norms",
    "scipy.sparse.issparse",
    "sklearn.cluster.k_means_._kmeans_single",
    "sklearn.cluster.k_means_._tolerance",
    "sklearn.cluster.k_means_._validate_center_shape",
    "sklearn.cluster.k_means_.warnings",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.k_means_.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.cluster.k_means_.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.cluster.k_means_.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.cluster.mean_shift_": {
  "data": {},
  "type": "module"
 },
 "sklearn.cluster.mean_shift_.MeanShift": {
  "data": {
   "lineno": 281
  },
  "type": "class"
 },
 "sklearn.cluster.mean_shift_.MeanShift.__init__": {
  "data": {
   "lineno": 369
  },
  "type": "function"
 },
 "sklearn.cluster.mean_shift_.MeanShift.fit": {
  "data": {
   "lineno": 378,
   "symbols_in_volume": [
    "check_array",
    "sklearn.cluster.mean_shift_.mean_shift"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.mean_shift_.MeanShift.predict": {
  "data": {
   "lineno": 394,
   "symbols_in_volume": [
    "check_is_fitted",
    "pairwise_distances_argmin"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.mean_shift_._mean_shift_single_seed": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "len",
    "numpy.mean",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.mean_shift_.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "sklearn.cluster.mean_shift_.estimate_bandwidth": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "NearestNeighbors",
    "check_random_state",
    "gen_batches",
    "int",
    "len",
    "numpy.max"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.mean_shift_.get_bin_seeds": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "collections.defaultdict",
    "int",
    "len",
    "numpy.array",
    "numpy.float32",
    "numpy.round",
    "sklearn.cluster.mean_shift_.warnings",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.mean_shift_.mean_shift": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "DeprecationWarning",
    "NearestNeighbors",
    "Parallel",
    "ValueError",
    "delayed",
    "enumerate",
    "len",
    "numpy.array",
    "numpy.bool",
    "numpy.int",
    "numpy.ones",
    "numpy.zeros",
    "range",
    "sklearn.cluster.mean_shift_._mean_shift_single_seed",
    "sklearn.cluster.mean_shift_.estimate_bandwidth",
    "sklearn.cluster.mean_shift_.get_bin_seeds",
    "sklearn.cluster.mean_shift_.warnings",
    "sorted"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.mean_shift_.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.cluster.mean_shift_.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.cluster.setup": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.distutils.core.setup",
    "sklearn.cluster.setup.configuration"
   ]
  },
  "type": "module"
 },
 "sklearn.cluster.setup.Configuration": {
  "data": {
   "shadows": "numpy.distutils.misc_util.Configuration"
  },
  "type": "import"
 },
 "sklearn.cluster.setup.configuration": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "numpy.distutils.misc_util.Configuration",
    "os.path.join",
    "sklearn._build_utils.get_blas_info",
    "sklearn.cluster.setup.numpy",
    "sklearn.cluster.setup.os"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.setup.get_blas_info": {
  "data": {
   "shadows": "sklearn._build_utils.get_blas_info"
  },
  "type": "import"
 },
 "sklearn.cluster.setup.join": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "sklearn.cluster.setup.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.cluster.setup.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "sklearn.cluster.setup.setup": {
  "data": {
   "shadows": "numpy.distutils.core.setup"
  },
  "type": "import"
 },
 "sklearn.cluster.spectral": {
  "data": {},
  "type": "module"
 },
 "sklearn.cluster.spectral.LinAlgError": {
  "data": {
   "shadows": "scipy.linalg.LinAlgError"
  },
  "type": "import"
 },
 "sklearn.cluster.spectral.SpectralClustering": {
  "data": {
   "lineno": 269
  },
  "type": "class"
 },
 "sklearn.cluster.spectral.SpectralClustering.__init__": {
  "data": {
   "lineno": 395
  },
  "type": "function"
 },
 "sklearn.cluster.spectral.SpectralClustering._pairwise": {
  "data": {
   "lineno": 457,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.spectral.SpectralClustering.fit": {
  "data": {
   "lineno": 412,
   "symbols_in_volume": [
    "callable",
    "check_array",
    "check_random_state",
    "kneighbors_graph",
    "numpy.float64",
    "pairwise_kernels",
    "sklearn.cluster.spectral.spectral_clustering",
    "sklearn.cluster.spectral.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.spectral.csc_matrix": {
  "data": {
   "shadows": "scipy.sparse.csc_matrix"
  },
  "type": "import"
 },
 "sklearn.cluster.spectral.discretize": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "abs",
    "as_float_array",
    "check_random_state",
    "float",
    "len",
    "norm",
    "numpy.abs",
    "numpy.arange",
    "numpy.dot",
    "numpy.finfo",
    "numpy.linalg.svd",
    "numpy.newaxis",
    "numpy.ones",
    "numpy.sign",
    "numpy.sqrt",
    "numpy.zeros",
    "print",
    "range",
    "scipy.linalg.LinAlgError",
    "scipy.sparse.csc_matrix"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.spectral.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.cluster.spectral.spectral_clustering": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "ValueError",
    "check_random_state",
    "k_means",
    "sklearn.cluster.spectral.discretize",
    "spectral_embedding"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.spectral.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.cluster.tests": {
  "data": {},
  "type": "module"
 },
 "sklearn.cluster.tests.common": {
  "data": {},
  "type": "module"
 },
 "sklearn.cluster.tests.common.generate_clustered_data": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.empty",
    "numpy.r_",
    "numpy.random.RandomState",
    "range"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.common.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_affinity_propagation": {
  "data": {
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.cluster.tests.test_affinity_propagation.centers",
    "sklearn.datasets.samples_generator.make_blobs"
   ]
  },
  "type": "module"
 },
 "sklearn.cluster.tests.test_affinity_propagation.AffinityPropagation": {
  "data": {
   "shadows": "sklearn.cluster.affinity_propagation_.AffinityPropagation"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_affinity_propagation.affinity_propagation": {
  "data": {
   "shadows": "sklearn.cluster.affinity_propagation_.affinity_propagation"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_affinity_propagation.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_affinity_propagation.assert_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_affinity_propagation.assert_raises": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_affinity_propagation.centers": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "sklearn.cluster.tests.test_affinity_propagation.euclidean_distances": {
  "data": {
   "shadows": "sklearn.metrics.euclidean_distances"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_affinity_propagation.make_blobs": {
  "data": {
   "shadows": "sklearn.datasets.samples_generator.make_blobs"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_affinity_propagation.n_clusters": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "sklearn.cluster.tests.test_affinity_propagation.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_affinity_propagation.test_affinity_propagation": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.median",
    "numpy.unique",
    "sklearn.cluster.affinity_propagation_.AffinityPropagation",
    "sklearn.cluster.affinity_propagation_.affinity_propagation",
    "sklearn.cluster.tests.test_affinity_propagation.n_clusters",
    "sklearn.metrics.euclidean_distances",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_affinity_propagation.test_affinity_propagation_predict": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "sklearn.cluster.affinity_propagation_.AffinityPropagation",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_affinity_propagation.test_affinity_propagation_predict_error": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "ValueError",
    "numpy.dot",
    "sklearn.cluster.affinity_propagation_.AffinityPropagation",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_bicluster": {
  "data": {},
  "type": "module"
 },
 "sklearn.cluster.tests.test_bicluster.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_bicluster.BiclusterMixin": {
  "data": {
   "shadows": "sklearn.base.BiclusterMixin"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_bicluster.MockBiclustering": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator",
    "sklearn.base.BiclusterMixin"
   ]
  },
  "type": "class"
 },
 "sklearn.cluster.tests.test_bicluster.MockBiclustering.__init__": {
  "data": {
   "lineno": 31
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_bicluster.MockBiclustering.get_indices": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_bicluster.ParameterGrid": {
  "data": {
   "shadows": "sklearn.grid_search.ParameterGrid"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_bicluster.SkipTest": {
  "data": {
   "shadows": "sklearn.utils.testing.SkipTest"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_bicluster.SpectralBiclustering": {
  "data": {
   "shadows": "sklearn.cluster.bicluster.SpectralBiclustering"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_bicluster.SpectralCoclustering": {
  "data": {
   "shadows": "sklearn.cluster.bicluster.SpectralCoclustering"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_bicluster._bistochastic_normalize": {
  "data": {
   "shadows": "sklearn.cluster.bicluster._bistochastic_normalize"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_bicluster._do_bistochastic_test": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "sklearn.cluster.tests.test_bicluster._do_scale_test",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_bicluster._do_scale_test": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.tile",
    "scipy.sparse.issparse",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_bicluster._log_normalize": {
  "data": {
   "shadows": "sklearn.cluster.bicluster._log_normalize"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_bicluster._scale_normalize": {
  "data": {
   "shadows": "sklearn.cluster.bicluster._scale_normalize"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_bicluster._test_shape_indices": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "len",
    "range",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_bicluster.assert_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_bicluster.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_bicluster.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_bicluster.assert_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_bicluster.assert_raises": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_bicluster.assert_true": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_true"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_bicluster.consensus_score": {
  "data": {
   "shadows": "sklearn.metrics.consensus_score"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_bicluster.csr_matrix": {
  "data": {
   "shadows": "scipy.sparse.csr_matrix"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_bicluster.issparse": {
  "data": {
   "shadows": "scipy.sparse.issparse"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_bicluster.make_biclusters": {
  "data": {
   "shadows": "sklearn.datasets.make_biclusters"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_bicluster.make_checkerboard": {
  "data": {
   "shadows": "sklearn.datasets.make_checkerboard"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_bicluster.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_bicluster.test_bistochastic_normalize": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.issparse",
    "sklearn.cluster.bicluster._bistochastic_normalize",
    "sklearn.cluster.tests.test_bicluster._do_bistochastic_test"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_bicluster.test_errors": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "ValueError",
    "numpy.arange",
    "sklearn.cluster.bicluster.SpectralBiclustering",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_bicluster.test_fit_best_piecewise": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.cluster.bicluster.SpectralBiclustering",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_bicluster.test_get_submatrix": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.arange",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.issparse",
    "sklearn.cluster.tests.test_bicluster.MockBiclustering",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_bicluster.test_log_normalize": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.cluster.bicluster._log_normalize",
    "sklearn.cluster.tests.test_bicluster._do_bistochastic_test"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_bicluster.test_perfect_checkerboard": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "sklearn.cluster.bicluster.SpectralBiclustering",
    "sklearn.datasets.make_checkerboard",
    "sklearn.metrics.consensus_score",
    "sklearn.utils.testing.SkipTest",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_bicluster.test_project_and_cluster": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "numpy.array",
    "scipy.sparse.csr_matrix",
    "sklearn.cluster.bicluster.SpectralBiclustering",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_bicluster.test_scale_normalize": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.issparse",
    "sklearn.cluster.bicluster._scale_normalize",
    "sklearn.cluster.tests.test_bicluster._do_scale_test"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_bicluster.test_spectral_biclustering": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "numpy.repeat",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.issparse",
    "sklearn.cluster.bicluster.SpectralBiclustering",
    "sklearn.cluster.tests.test_bicluster._test_shape_indices",
    "sklearn.datasets.make_checkerboard",
    "sklearn.metrics.consensus_score",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_bicluster.test_spectral_coclustering": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "numpy.ones",
    "numpy.where",
    "scipy.sparse.csr_matrix",
    "sklearn.cluster.bicluster.SpectralCoclustering",
    "sklearn.cluster.tests.test_bicluster._test_shape_indices",
    "sklearn.datasets.make_biclusters",
    "sklearn.grid_search.ParameterGrid",
    "sklearn.metrics.consensus_score",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_birch": {
  "data": {},
  "type": "module"
 },
 "sklearn.cluster.tests.test_birch.AgglomerativeClustering": {
  "data": {
   "shadows": "sklearn.cluster.hierarchical.AgglomerativeClustering"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_birch.Birch": {
  "data": {
   "shadows": "sklearn.cluster.birch.Birch"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_birch.ElasticNet": {
  "data": {
   "shadows": "sklearn.linear_model.ElasticNet"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_birch.assert_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_birch.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_birch.assert_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_birch.assert_greater": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_greater"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_birch.assert_greater_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_greater_equal"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_birch.assert_raises": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_birch.assert_warns": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_warns"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_birch.check_branching_factor": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "len",
    "sklearn.utils.testing.assert_greater_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_birch.check_threshold": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "sklearn.utils.testing.assert_greater_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_birch.generate_clustered_data": {
  "data": {
   "shadows": "sklearn.cluster.tests.common.generate_clustered_data"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_birch.make_blobs": {
  "data": {
   "shadows": "sklearn.datasets.make_blobs"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_birch.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_birch.pairwise_distances_argmin": {
  "data": {
   "shadows": "sklearn.metrics.pairwise_distances_argmin"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_birch.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_birch.test_birch_predict": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.random.RandomState",
    "sklearn.cluster.birch.Birch",
    "sklearn.cluster.tests.common.generate_clustered_data",
    "sklearn.metrics.pairwise_distances_argmin",
    "sklearn.metrics.v_measure_score",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_birch.test_branching_factor": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.cluster.birch.Birch",
    "sklearn.cluster.tests.test_birch.check_branching_factor",
    "sklearn.datasets.make_blobs",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_birch.test_n_clusters": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "UserWarning",
    "ValueError",
    "len",
    "numpy.unique",
    "sklearn.cluster.birch.Birch",
    "sklearn.cluster.hierarchical.AgglomerativeClustering",
    "sklearn.datasets.make_blobs",
    "sklearn.linear_model.ElasticNet",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_greater",
    "sklearn.utils.testing.assert_raises",
    "sklearn.utils.testing.assert_warns"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_birch.test_n_samples_leaves_roots": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "sklearn.cluster.birch.Birch",
    "sklearn.datasets.make_blobs",
    "sklearn.utils.testing.assert_equal",
    "sum"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_birch.test_partial_fit": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "sklearn.cluster.birch.Birch",
    "sklearn.datasets.make_blobs",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_birch.test_sparse_X": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "scipy.sparse.csr_matrix",
    "sklearn.cluster.birch.Birch",
    "sklearn.datasets.make_blobs",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_birch.test_threshold": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "sklearn.cluster.birch.Birch",
    "sklearn.cluster.tests.test_birch.check_threshold",
    "sklearn.datasets.make_blobs"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_birch.v_measure_score": {
  "data": {
   "shadows": "sklearn.metrics.v_measure_score"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_dbscan": {
  "data": {
   "symbols_in_volume": [
    "sklearn.cluster.tests.common.generate_clustered_data",
    "sklearn.cluster.tests.test_dbscan.n_clusters"
   ]
  },
  "type": "module"
 },
 "sklearn.cluster.tests.test_dbscan.DBSCAN": {
  "data": {
   "shadows": "sklearn.cluster.dbscan_.DBSCAN"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_dbscan.NearestNeighbors": {
  "data": {
   "shadows": "sklearn.neighbors.NearestNeighbors"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_dbscan.X": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "sklearn.cluster.tests.test_dbscan.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_dbscan.assert_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_dbscan.assert_in": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_in"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_dbscan.assert_not_in": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_not_in"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_dbscan.assert_raises": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_dbscan.dbscan": {
  "data": {
   "shadows": "sklearn.cluster.dbscan_.dbscan"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_dbscan.distance": {
  "data": {
   "shadows": "scipy.spatial.distance"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_dbscan.generate_clustered_data": {
  "data": {
   "shadows": "sklearn.cluster.tests.common.generate_clustered_data"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_dbscan.n_clusters": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "sklearn.cluster.tests.test_dbscan.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_dbscan.pairwise_distances": {
  "data": {
   "shadows": "sklearn.metrics.pairwise.pairwise_distances"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_dbscan.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_dbscan.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_dbscan.test_boundaries": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "sklearn.cluster.dbscan_.dbscan",
    "sklearn.utils.testing.assert_in",
    "sklearn.utils.testing.assert_not_in"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_dbscan.test_dbscan_badargs": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.cluster.dbscan_.dbscan",
    "sklearn.cluster.tests.test_dbscan.X",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_dbscan.test_dbscan_balltree": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "int",
    "len",
    "set",
    "sklearn.cluster.dbscan_.DBSCAN",
    "sklearn.cluster.dbscan_.dbscan",
    "sklearn.cluster.tests.test_dbscan.X",
    "sklearn.cluster.tests.test_dbscan.n_clusters",
    "sklearn.metrics.pairwise.pairwise_distances",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_dbscan.test_dbscan_callable": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "int",
    "len",
    "scipy.spatial.distance.euclidean",
    "set",
    "sklearn.cluster.dbscan_.DBSCAN",
    "sklearn.cluster.dbscan_.dbscan",
    "sklearn.cluster.tests.test_dbscan.X",
    "sklearn.cluster.tests.test_dbscan.n_clusters",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_dbscan.test_dbscan_core_samples_toy": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "numpy.ones",
    "sklearn.cluster.dbscan_.dbscan",
    "sklearn.cluster.tests.test_dbscan.X",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_dbscan.test_dbscan_feature": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "int",
    "len",
    "set",
    "sklearn.cluster.dbscan_.DBSCAN",
    "sklearn.cluster.dbscan_.dbscan",
    "sklearn.cluster.tests.test_dbscan.X",
    "sklearn.cluster.tests.test_dbscan.n_clusters",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_dbscan.test_dbscan_no_core_samples": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "numpy.empty",
    "numpy.random.RandomState",
    "scipy.sparse.csr_matrix",
    "sklearn.cluster.dbscan_.DBSCAN",
    "sklearn.cluster.tests.test_dbscan.X",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_dbscan.test_dbscan_precomputed_metric_with_degenerate_input_arrays": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": [
    "len",
    "numpy.eye",
    "numpy.zeros",
    "set",
    "sklearn.cluster.dbscan_.DBSCAN",
    "sklearn.cluster.tests.test_dbscan.X",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_dbscan.test_dbscan_similarity": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "int",
    "len",
    "numpy.max",
    "scipy.spatial.distance.pdist",
    "scipy.spatial.distance.squareform",
    "set",
    "sklearn.cluster.dbscan_.DBSCAN",
    "sklearn.cluster.dbscan_.dbscan",
    "sklearn.cluster.tests.test_dbscan.X",
    "sklearn.cluster.tests.test_dbscan.n_clusters",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_dbscan.test_dbscan_sparse": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "scipy.sparse.lil_matrix",
    "sklearn.cluster.dbscan_.dbscan",
    "sklearn.cluster.tests.test_dbscan.X",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_dbscan.test_dbscan_sparse_precomputed": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "sklearn.cluster.dbscan_.dbscan",
    "sklearn.cluster.tests.test_dbscan.X",
    "sklearn.metrics.pairwise.pairwise_distances",
    "sklearn.neighbors.NearestNeighbors",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_dbscan.test_input_validation": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "sklearn.cluster.dbscan_.DBSCAN",
    "sklearn.cluster.tests.test_dbscan.X"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_dbscan.test_pickle": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "sklearn.cluster.dbscan_.DBSCAN",
    "sklearn.cluster.tests.test_dbscan.pickle",
    "sklearn.utils.testing.assert_equal",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_dbscan.test_weighted_dbscan": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "len",
    "numpy.random.RandomState",
    "numpy.repeat",
    "numpy.zeros",
    "sklearn.cluster.dbscan_.DBSCAN",
    "sklearn.cluster.dbscan_.dbscan",
    "sklearn.cluster.tests.test_dbscan.X",
    "sklearn.metrics.pairwise.pairwise_distances",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_hierarchical": {
  "data": {},
  "type": "module"
 },
 "sklearn.cluster.tests.test_hierarchical.AgglomerativeClustering": {
  "data": {
   "shadows": "sklearn.cluster.AgglomerativeClustering"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_hierarchical.FeatureAgglomeration": {
  "data": {
   "shadows": "sklearn.cluster.FeatureAgglomeration"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_hierarchical.IntFloatDict": {
  "data": {
   "shadows": "sklearn.utils.fast_dict.IntFloatDict"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_hierarchical.PAIRED_DISTANCES": {
  "data": {
   "shadows": "sklearn.metrics.pairwise.PAIRED_DISTANCES"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_hierarchical._TREE_BUILDERS": {
  "data": {
   "shadows": "sklearn.cluster.hierarchical._TREE_BUILDERS"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_hierarchical._hc_cut": {
  "data": {
   "shadows": "sklearn.cluster.hierarchical._hc_cut"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_hierarchical.assert_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_hierarchical.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_hierarchical.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_hierarchical.assert_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_hierarchical.assert_raise_message": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raise_message"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_hierarchical.assert_raises": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_hierarchical.assert_true": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_true"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_hierarchical.assert_warns": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_warns"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_hierarchical.assess_same_labelling": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "numpy.dot",
    "numpy.zeros",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_hierarchical.average_merge": {
  "data": {
   "shadows": "sklearn.cluster._hierarchical.average_merge"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_hierarchical.cosine_distances": {
  "data": {
   "shadows": "sklearn.metrics.pairwise.cosine_distances"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_hierarchical.grid_to_graph": {
  "data": {
   "shadows": "sklearn.feature_extraction.image.grid_to_graph"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_hierarchical.hierarchy": {
  "data": {
   "shadows": "scipy.cluster.hierarchy"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_hierarchical.ignore_warnings": {
  "data": {
   "shadows": "sklearn.utils.testing.ignore_warnings"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_hierarchical.kneighbors_graph": {
  "data": {
   "shadows": "sklearn.neighbors.graph.kneighbors_graph"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_hierarchical.linkage_tree": {
  "data": {
   "shadows": "sklearn.cluster.hierarchical.linkage_tree"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_hierarchical.manhattan_distances": {
  "data": {
   "shadows": "sklearn.metrics.pairwise.manhattan_distances"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_hierarchical.max_merge": {
  "data": {
   "shadows": "sklearn.cluster._hierarchical.max_merge"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_hierarchical.mkdtemp": {
  "data": {
   "shadows": "tempfile.mkdtemp"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_hierarchical.normalized_mutual_info_score": {
  "data": {
   "shadows": "sklearn.metrics.cluster.normalized_mutual_info_score"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_hierarchical.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_hierarchical.pairwise_distances": {
  "data": {
   "shadows": "sklearn.metrics.pairwise.pairwise_distances"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_hierarchical.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_hierarchical.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_hierarchical.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_hierarchical.test_agg_n_clusters": {
  "data": {
   "lineno": 500,
   "symbols_in_volume": [
    "ValueError",
    "numpy.random.RandomState",
    "sklearn.cluster.AgglomerativeClustering",
    "sklearn.utils.testing.assert_raise_message",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_hierarchical.test_agglomerative_clustering": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "ValueError",
    "numpy.bool",
    "numpy.ones",
    "numpy.random.RandomState",
    "numpy.size",
    "numpy.unique",
    "scipy.sparse.lil_matrix",
    "sklearn.cluster.AgglomerativeClustering",
    "sklearn.cluster.tests.test_hierarchical.shutil",
    "sklearn.feature_extraction.image.grid_to_graph",
    "sklearn.metrics.cluster.normalized_mutual_info_score",
    "sklearn.metrics.pairwise.PAIRED_DISTANCES.keys",
    "sklearn.metrics.pairwise.pairwise_distances",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_raises",
    "sklearn.utils.testing.assert_true",
    "tempfile.mkdtemp"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_hierarchical.test_compute_full_tree": {
  "data": {
   "lineno": 461,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.cluster.AgglomerativeClustering",
    "sklearn.neighbors.graph.kneighbors_graph",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_hierarchical.test_connectivity_callable": {
  "data": {
   "lineno": 437,
   "symbols_in_volume": [
    "functools.partial",
    "numpy.random.RandomState",
    "sklearn.cluster.AgglomerativeClustering",
    "sklearn.neighbors.graph.kneighbors_graph",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_hierarchical.test_connectivity_fixing_non_lil": {
  "data": {
   "lineno": 408,
   "symbols_in_volume": [
    "UserWarning",
    "numpy.array",
    "sklearn.cluster.AgglomerativeClustering",
    "sklearn.feature_extraction.image.grid_to_graph",
    "sklearn.utils.testing.assert_warns"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_hierarchical.test_connectivity_ignores_diagonal": {
  "data": {
   "lineno": 449,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.cluster.AgglomerativeClustering",
    "sklearn.neighbors.graph.kneighbors_graph",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_hierarchical.test_connectivity_propagation": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.cluster.AgglomerativeClustering",
    "sklearn.neighbors.graph.kneighbors_graph"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_hierarchical.test_height_linkage_tree": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "len",
    "linkage_func",
    "numpy.bool",
    "numpy.ones",
    "numpy.random.RandomState",
    "sklearn.cluster.hierarchical._TREE_BUILDERS.values",
    "sklearn.feature_extraction.image.grid_to_graph",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_hierarchical.test_int_float_dict": {
  "data": {
   "lineno": 420,
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "numpy.intp",
    "numpy.ones",
    "numpy.random.RandomState",
    "numpy.unique",
    "sklearn.cluster._hierarchical.average_merge",
    "sklearn.cluster._hierarchical.max_merge",
    "sklearn.utils.fast_dict.IntFloatDict",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_hierarchical.test_linkage_misc": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "ValueError",
    "numpy.ones",
    "numpy.random.RandomState",
    "sklearn.cluster.AgglomerativeClustering",
    "sklearn.cluster.FeatureAgglomeration",
    "sklearn.cluster.hierarchical.linkage_tree",
    "sklearn.metrics.pairwise.cosine_distances",
    "sklearn.metrics.pairwise.manhattan_distances",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_hierarchical.test_n_components": {
  "data": {
   "lineno": 488,
   "symbols_in_volume": [
    "linkage_func",
    "numpy.eye",
    "numpy.random.RandomState",
    "sklearn.cluster.hierarchical._TREE_BUILDERS.values",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_hierarchical.test_scikit_vs_scipy": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "ValueError",
    "numpy.arange",
    "numpy.int",
    "numpy.newaxis",
    "numpy.ones",
    "numpy.random.RandomState",
    "range",
    "scipy.cluster.hierarchy.linkage",
    "sklearn.cluster.hierarchical._TREE_BUILDERS",
    "sklearn.cluster.hierarchical._TREE_BUILDERS.keys",
    "sklearn.cluster.hierarchical._hc_cut",
    "sklearn.cluster.tests.test_hierarchical.assess_same_labelling",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_hierarchical.test_structured_linkage_tree": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.bool",
    "numpy.ones",
    "numpy.random.RandomState",
    "sklearn.cluster.hierarchical._TREE_BUILDERS.values",
    "sklearn.feature_extraction.image.grid_to_graph",
    "sklearn.utils.testing.assert_raises",
    "sklearn.utils.testing.assert_true",
    "tree_builder"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_hierarchical.test_unstructured_linkage_tree": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "UserWarning",
    "len",
    "numpy.random.RandomState",
    "sklearn.cluster.hierarchical._TREE_BUILDERS.values",
    "sklearn.cluster.ward_tree",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_warns",
    "sklearn.utils.testing.ignore_warnings",
    "tree_builder"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_hierarchical.test_ward_agglomeration": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "ValueError",
    "numpy.bool",
    "numpy.ones",
    "numpy.random.RandomState",
    "numpy.size",
    "numpy.unique",
    "sklearn.cluster.FeatureAgglomeration",
    "sklearn.feature_extraction.image.grid_to_graph",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_raises",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_hierarchical.test_ward_linkage_tree_return_distance": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "numpy.newaxis",
    "numpy.ones",
    "numpy.random.RandomState",
    "numpy.shape",
    "range",
    "sklearn.cluster.hierarchical.linkage_tree",
    "sklearn.cluster.ward_tree",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_array_equal",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_hierarchical.test_ward_tree_children_order": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.newaxis",
    "numpy.ones",
    "numpy.random.RandomState",
    "range",
    "sklearn.cluster.ward_tree",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_hierarchical.ward_tree": {
  "data": {
   "shadows": "sklearn.cluster.ward_tree"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_k_means": {
  "data": {
   "symbols_in_volume": [
    "numpy.array",
    "scipy.sparse.csr_matrix",
    "sklearn.cluster.tests.test_k_means.centers",
    "sklearn.cluster.tests.test_k_means.n_samples",
    "sklearn.datasets.samples_generator.make_blobs"
   ]
  },
  "type": "module"
 },
 "sklearn.cluster.tests.test_k_means.DataConversionWarning": {
  "data": {
   "shadows": "sklearn.utils.validation.DataConversionWarning"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_k_means.KMeans": {
  "data": {
   "shadows": "sklearn.cluster.KMeans"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_k_means.MiniBatchKMeans": {
  "data": {
   "shadows": "sklearn.cluster.MiniBatchKMeans"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_k_means.SkipTest": {
  "data": {
   "shadows": "sklearn.utils.testing.SkipTest"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_k_means.StringIO": {
  "data": {
   "shadows": "sklearn.externals.six.moves.cStringIO"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_k_means.X_csr": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "sklearn.cluster.tests.test_k_means._check_fitted_model": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "ValueError",
    "numpy.unique",
    "sklearn.cluster.tests.test_k_means.centers",
    "sklearn.metrics.cluster.v_measure_score",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_greater",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means._init_centroids": {
  "data": {
   "shadows": "sklearn.cluster.k_means_._init_centroids"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_k_means._labels_inertia": {
  "data": {
   "shadows": "sklearn.cluster.k_means_._labels_inertia"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_k_means._mini_batch_step": {
  "data": {
   "shadows": "sklearn.cluster.k_means_._mini_batch_step"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_k_means.assert_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_k_means.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_k_means.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_k_means.assert_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_k_means.assert_greater": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_greater"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_k_means.assert_less": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_less"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_k_means.assert_raise_message": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raise_message"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_k_means.assert_raises": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_k_means.assert_raises_regex": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises_regex"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_k_means.assert_true": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_true"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_k_means.assert_warns": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_warns"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_k_means.centers": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "sklearn.cluster.tests.test_k_means.if_not_mac_os": {
  "data": {
   "shadows": "sklearn.utils.testing.if_not_mac_os"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_k_means.if_safe_multiprocessing_with_blas": {
  "data": {
   "shadows": "sklearn.utils.testing.if_safe_multiprocessing_with_blas"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_k_means.k_means": {
  "data": {
   "shadows": "sklearn.cluster.k_means"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_k_means.make_blobs": {
  "data": {
   "shadows": "sklearn.datasets.samples_generator.make_blobs"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_k_means.n_samples": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "sklearn.cluster.tests.test_k_means.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_k_means.row_norms": {
  "data": {
   "shadows": "sklearn.utils.extmath.row_norms"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_k_means.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_k_means.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_k_means.test_fit_transform": {
  "data": {
   "lineno": 660,
   "symbols_in_volume": [
    "sklearn.cluster.KMeans",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_input_dtypes": {
  "data": {
   "lineno": 619,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.int32",
    "numpy.ones",
    "scipy.sparse.csr_matrix",
    "sklearn.cluster.KMeans",
    "sklearn.cluster.MiniBatchKMeans",
    "sklearn.metrics.cluster.v_measure_score",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_k_means_copyx": {
  "data": {
   "lineno": 518,
   "symbols_in_volume": [
    "sklearn.cluster.KMeans",
    "sklearn.cluster.tests.test_k_means._check_fitted_model",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_k_means_explicit_init_shape": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "Class",
    "ValueError",
    "len",
    "numpy.random.RandomState",
    "sklearn.cluster.KMeans",
    "sklearn.cluster.MiniBatchKMeans",
    "sklearn.utils.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_k_means_fortran_aligned_data": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.asfortranarray",
    "sklearn.cluster.KMeans",
    "sklearn.cluster.tests.test_k_means.centers",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_k_means_function": {
  "data": {
   "lineno": 690,
   "symbols_in_volume": [
    "RuntimeWarning",
    "ValueError",
    "numpy.unique",
    "sklearn.cluster.k_means",
    "sklearn.cluster.tests.test_k_means.centers",
    "sklearn.cluster.tests.test_k_means.sys",
    "sklearn.externals.six.moves.cStringIO",
    "sklearn.metrics.cluster.v_measure_score",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_greater",
    "sklearn.utils.testing.assert_raises",
    "sklearn.utils.testing.assert_warns"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_k_means_invalid_init": {
  "data": {
   "lineno": 508,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.cluster.KMeans",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_k_means_n_init": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "ValueError",
    "numpy.random.RandomState",
    "sklearn.cluster.KMeans",
    "sklearn.utils.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_k_means_new_centers": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.assert_array_equal",
    "numpy.unique",
    "scipy.sparse.coo_matrix",
    "sklearn.cluster.KMeans"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_k_means_non_collapsed": {
  "data": {
   "lineno": 529,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "numpy.linalg.norm",
    "numpy.unique",
    "sklearn.cluster.KMeans",
    "sklearn.cluster.tests.test_k_means.centers",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_k_means_perfect_init": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "sklearn.cluster.KMeans",
    "sklearn.cluster.tests.test_k_means._check_fitted_model",
    "sklearn.cluster.tests.test_k_means.centers"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_k_means_plus_plus_init": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "sklearn.cluster.KMeans",
    "sklearn.cluster.tests.test_k_means._check_fitted_model"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_k_means_plus_plus_init_2_jobs": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "sklearn.cluster.KMeans",
    "sklearn.cluster.tests.test_k_means._check_fitted_model",
    "sklearn.cluster.tests.test_k_means.sys",
    "sklearn.utils.testing.SkipTest",
    "sklearn.utils.testing.if_safe_multiprocessing_with_blas"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_k_means_plus_plus_init_not_precomputed": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "sklearn.cluster.KMeans",
    "sklearn.cluster.tests.test_k_means._check_fitted_model"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_k_means_plus_plus_init_sparse": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "sklearn.cluster.KMeans",
    "sklearn.cluster.tests.test_k_means.X_csr",
    "sklearn.cluster.tests.test_k_means._check_fitted_model"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_k_means_precompute_distances_flag": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.cluster.KMeans",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_k_means_random_init": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "sklearn.cluster.KMeans",
    "sklearn.cluster.tests.test_k_means._check_fitted_model"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_k_means_random_init_not_precomputed": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "sklearn.cluster.KMeans",
    "sklearn.cluster.tests.test_k_means._check_fitted_model"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_k_means_random_init_sparse": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "sklearn.cluster.KMeans",
    "sklearn.cluster.tests.test_k_means.X_csr",
    "sklearn.cluster.tests.test_k_means._check_fitted_model"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_kmeans_dtype": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "numpy.uint8",
    "sklearn.cluster.KMeans",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_warns",
    "sklearn.utils.validation.DataConversionWarning"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_labels_assignment_and_inertia": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "numpy.empty",
    "numpy.infty",
    "numpy.int",
    "numpy.minimum",
    "numpy.ones",
    "numpy.random.RandomState",
    "numpy.sum",
    "range",
    "sklearn.cluster.k_means_._labels_inertia",
    "sklearn.cluster.tests.test_k_means.X_csr",
    "sklearn.cluster.tests.test_k_means.centers",
    "sklearn.cluster.tests.test_k_means.n_samples",
    "sklearn.utils.extmath.row_norms",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_max_iter_error": {
  "data": {
   "lineno": 730,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.cluster.KMeans",
    "sklearn.utils.testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_mb_k_means_plus_plus_init_dense_array": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "sklearn.cluster.MiniBatchKMeans",
    "sklearn.cluster.tests.test_k_means._check_fitted_model"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_mb_k_means_plus_plus_init_sparse_matrix": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": [
    "sklearn.cluster.MiniBatchKMeans",
    "sklearn.cluster.tests.test_k_means.X_csr",
    "sklearn.cluster.tests.test_k_means._check_fitted_model"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_mb_kmeans_verbose": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "sklearn.cluster.MiniBatchKMeans",
    "sklearn.cluster.tests.test_k_means.sys",
    "sklearn.externals.six.moves.cStringIO"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_mini_batch_k_means_random_init_partial_fit": {
  "data": {
   "lineno": 473,
   "symbols_in_volume": [
    "numpy.array_split",
    "sklearn.cluster.MiniBatchKMeans",
    "sklearn.metrics.cluster.v_measure_score",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_mini_match_k_means_invalid_init": {
  "data": {
   "lineno": 513,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.cluster.MiniBatchKMeans",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_minibatch_default_init_size": {
  "data": {
   "lineno": 485,
   "symbols_in_volume": [
    "sklearn.cluster.MiniBatchKMeans",
    "sklearn.cluster.tests.test_k_means._check_fitted_model",
    "sklearn.cluster.tests.test_k_means.centers",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_minibatch_init_with_large_k": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": [
    "RuntimeWarning",
    "sklearn.cluster.MiniBatchKMeans",
    "sklearn.utils.testing.assert_warns"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_minibatch_k_means_init_multiple_runs_with_explicit_centers": {
  "data": {
   "lineno": 350,
   "symbols_in_volume": [
    "RuntimeWarning",
    "sklearn.cluster.MiniBatchKMeans",
    "sklearn.cluster.tests.test_k_means.centers",
    "sklearn.utils.testing.assert_warns"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_minibatch_k_means_perfect_init_dense_array": {
  "data": {
   "lineno": 344,
   "symbols_in_volume": [
    "sklearn.cluster.MiniBatchKMeans",
    "sklearn.cluster.tests.test_k_means._check_fitted_model",
    "sklearn.cluster.tests.test_k_means.centers"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_minibatch_k_means_perfect_init_sparse_csr": {
  "data": {
   "lineno": 356,
   "symbols_in_volume": [
    "sklearn.cluster.MiniBatchKMeans",
    "sklearn.cluster.tests.test_k_means.X_csr",
    "sklearn.cluster.tests.test_k_means._check_fitted_model",
    "sklearn.cluster.tests.test_k_means.centers"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_minibatch_k_means_random_init_dense_array": {
  "data": {
   "lineno": 330,
   "symbols_in_volume": [
    "sklearn.cluster.MiniBatchKMeans",
    "sklearn.cluster.tests.test_k_means._check_fitted_model"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_minibatch_k_means_random_init_sparse_csr": {
  "data": {
   "lineno": 337,
   "symbols_in_volume": [
    "sklearn.cluster.MiniBatchKMeans",
    "sklearn.cluster.tests.test_k_means.X_csr",
    "sklearn.cluster.tests.test_k_means._check_fitted_model"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_minibatch_reassign": {
  "data": {
   "lineno": 394,
   "symbols_in_volume": [
    "numpy.double",
    "numpy.zeros",
    "sklearn.cluster.MiniBatchKMeans",
    "sklearn.cluster.k_means_._mini_batch_step",
    "sklearn.cluster.tests.test_k_means.X_csr",
    "sklearn.cluster.tests.test_k_means.centers",
    "sklearn.cluster.tests.test_k_means.sys",
    "sklearn.externals.six.moves.cStringIO",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_greater"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_minibatch_sensible_reassign_fit": {
  "data": {
   "lineno": 362,
   "symbols_in_volume": [
    "sklearn.cluster.MiniBatchKMeans",
    "sklearn.datasets.samples_generator.make_blobs",
    "sklearn.utils.testing.assert_greater"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_minibatch_sensible_reassign_partial_fit": {
  "data": {
   "lineno": 383,
   "symbols_in_volume": [
    "range",
    "sklearn.cluster.MiniBatchKMeans",
    "sklearn.cluster.tests.test_k_means.n_samples",
    "sklearn.datasets.samples_generator.make_blobs",
    "sklearn.utils.testing.assert_greater"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_minibatch_set_init_size": {
  "data": {
   "lineno": 499,
   "symbols_in_volume": [
    "sklearn.cluster.MiniBatchKMeans",
    "sklearn.cluster.tests.test_k_means._check_fitted_model",
    "sklearn.cluster.tests.test_k_means.centers",
    "sklearn.cluster.tests.test_k_means.n_samples",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_minibatch_tol": {
  "data": {
   "lineno": 493,
   "symbols_in_volume": [
    "sklearn.cluster.MiniBatchKMeans",
    "sklearn.cluster.tests.test_k_means._check_fitted_model"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_minibatch_update_consistency": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "numpy.double",
    "numpy.int32",
    "numpy.random.RandomState",
    "numpy.sum",
    "numpy.zeros",
    "sklearn.cluster.k_means_._labels_inertia",
    "sklearn.cluster.k_means_._mini_batch_step",
    "sklearn.cluster.tests.test_k_means.X_csr",
    "sklearn.cluster.tests.test_k_means.centers",
    "sklearn.utils.extmath.row_norms",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_greater",
    "sklearn.utils.testing.assert_less"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_minibatch_with_many_reassignments": {
  "data": {
   "lineno": 438,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.cluster.MiniBatchKMeans",
    "sklearn.cluster.tests.test_k_means.n_samples"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_n_init": {
  "data": {
   "lineno": 672,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "list",
    "numpy.zeros",
    "range",
    "sklearn.cluster.KMeans",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_predict": {
  "data": {
   "lineno": 549,
   "symbols_in_volume": [
    "numpy.arange",
    "sklearn.cluster.KMeans",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_predict_equal_labels": {
  "data": {
   "lineno": 666,
   "symbols_in_volume": [
    "sklearn.cluster.KMeans",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_predict_minibatch_dense_input": {
  "data": {
   "lineno": 575,
   "symbols_in_volume": [
    "numpy.arange",
    "sklearn.cluster.MiniBatchKMeans",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_predict_minibatch_kmeanspp_init_sparse_input": {
  "data": {
   "lineno": 587,
   "symbols_in_volume": [
    "numpy.arange",
    "sklearn.cluster.MiniBatchKMeans",
    "sklearn.cluster.tests.test_k_means.X_csr",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_predict_minibatch_random_init_sparse_input": {
  "data": {
   "lineno": 603,
   "symbols_in_volume": [
    "numpy.arange",
    "sklearn.cluster.MiniBatchKMeans",
    "sklearn.cluster.tests.test_k_means.X_csr",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_score": {
  "data": {
   "lineno": 567,
   "symbols_in_volume": [
    "sklearn.cluster.KMeans",
    "sklearn.utils.testing.assert_greater"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_sparse_mb_k_means_callable_init": {
  "data": {
   "lineno": 455,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.cluster.MiniBatchKMeans",
    "sklearn.cluster.tests.test_k_means.X_csr",
    "sklearn.cluster.tests.test_k_means._check_fitted_model",
    "sklearn.utils.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_sparse_mb_k_means_callable_init.test_init": {
  "data": {
   "lineno": 457,
   "symbols_in_volume": [
    "sklearn.cluster.tests.test_k_means.centers"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_transform": {
  "data": {
   "lineno": 648,
   "symbols_in_volume": [
    "range",
    "sklearn.cluster.KMeans",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_greater"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_x_squared_norms_init_centroids": {
  "data": {
   "lineno": 718,
   "symbols_in_volume": [
    "numpy.sum",
    "sklearn.cluster.k_means_._init_centroids",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.v_measure_score": {
  "data": {
   "shadows": "sklearn.metrics.cluster.v_measure_score"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_mean_shift": {
  "data": {
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.cluster.tests.test_mean_shift.centers",
    "sklearn.datasets.samples_generator.make_blobs"
   ]
  },
  "type": "module"
 },
 "sklearn.cluster.tests.test_mean_shift.MeanShift": {
  "data": {
   "shadows": "sklearn.cluster.MeanShift"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_mean_shift.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_mean_shift.assert_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_mean_shift.assert_false": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_false"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_mean_shift.assert_raise_message": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raise_message"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_mean_shift.assert_true": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_true"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_mean_shift.centers": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "sklearn.cluster.tests.test_mean_shift.estimate_bandwidth": {
  "data": {
   "shadows": "sklearn.cluster.estimate_bandwidth"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_mean_shift.get_bin_seeds": {
  "data": {
   "shadows": "sklearn.cluster.get_bin_seeds"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_mean_shift.make_blobs": {
  "data": {
   "shadows": "sklearn.datasets.samples_generator.make_blobs"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_mean_shift.mean_shift": {
  "data": {
   "shadows": "sklearn.cluster.mean_shift"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_mean_shift.n_clusters": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "sklearn.cluster.tests.test_mean_shift.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_mean_shift.test_bin_seeds": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "set",
    "sklearn.cluster.get_bin_seeds",
    "sklearn.cluster.tests.test_mean_shift.warnings",
    "sklearn.datasets.samples_generator.make_blobs",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_true",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_mean_shift.test_estimate_bandwidth": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "sklearn.cluster.estimate_bandwidth",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_mean_shift.test_mean_shift": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "len",
    "numpy.unique",
    "sklearn.cluster.MeanShift",
    "sklearn.cluster.mean_shift",
    "sklearn.cluster.tests.test_mean_shift.n_clusters",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_mean_shift.test_meanshift_all_orphans": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.cluster.MeanShift",
    "sklearn.utils.testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_mean_shift.test_meanshift_predict": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "sklearn.cluster.MeanShift",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_mean_shift.test_parallel": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "sklearn.cluster.MeanShift",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_mean_shift.test_unfitted": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "hasattr",
    "sklearn.cluster.MeanShift",
    "sklearn.utils.testing.assert_false"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_mean_shift.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_spectral": {
  "data": {
   "symbols_in_volume": [
    "sklearn.externals.six.moves.cPickle.dumps",
    "sklearn.externals.six.moves.cPickle.loads"
   ]
  },
  "type": "module"
 },
 "sklearn.cluster.tests.test_spectral.SpectralClustering": {
  "data": {
   "shadows": "sklearn.cluster.SpectralClustering"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_spectral.adjusted_rand_score": {
  "data": {
   "shadows": "sklearn.metrics.adjusted_rand_score"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_spectral.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_spectral.assert_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_spectral.assert_greater": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_greater"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_spectral.assert_raises": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_spectral.assert_warns_message": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_warns_message"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_spectral.cPickle": {
  "data": {
   "shadows": "sklearn.externals.six.moves.cPickle"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_spectral.check_random_state": {
  "data": {
   "shadows": "sklearn.utils.check_random_state"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_spectral.discretize": {
  "data": {
   "shadows": "sklearn.cluster.spectral.discretize"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_spectral.kernel_metrics": {
  "data": {
   "shadows": "sklearn.metrics.pairwise.kernel_metrics"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_spectral.make_blobs": {
  "data": {
   "shadows": "sklearn.datasets.samples_generator.make_blobs"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_spectral.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_spectral.pairwise_distances": {
  "data": {
   "shadows": "sklearn.metrics.pairwise_distances"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_spectral.rbf_kernel": {
  "data": {
   "shadows": "sklearn.metrics.pairwise.rbf_kernel"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_spectral.smoothed_aggregation_solver": {
  "data": {
   "shadows": "pyamg.smoothed_aggregation_solver"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_spectral.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_spectral.spectral_clustering": {
  "data": {
   "shadows": "sklearn.cluster.spectral_clustering"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_spectral.spectral_embedding": {
  "data": {
   "shadows": "sklearn.cluster.spectral.spectral_embedding"
  },
  "type": "import"
 },
 "sklearn.cluster.tests.test_spectral.test_affinities": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "UserWarning",
    "ValueError",
    "sklearn.cluster.SpectralClustering",
    "sklearn.datasets.samples_generator.make_blobs",
    "sklearn.metrics.adjusted_rand_score",
    "sklearn.metrics.pairwise.kernel_metrics",
    "sklearn.utils.check_random_state",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_raises",
    "sklearn.utils.testing.assert_warns_message"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_spectral.test_affinities.histogram": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "numpy.minimum",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_spectral.test_discretize": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "numpy.float",
    "numpy.ones",
    "numpy.random.RandomState",
    "range",
    "scipy.sparse.coo_matrix",
    "sklearn.cluster.spectral.discretize",
    "sklearn.metrics.adjusted_rand_score",
    "sklearn.utils.testing.assert_greater"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_spectral.test_spectral_amg_mode": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "ImportError",
    "ValueError",
    "len",
    "numpy.array",
    "numpy.max",
    "numpy.mean",
    "scipy.sparse.coo_matrix",
    "sklearn.cluster.spectral.spectral_embedding",
    "sklearn.cluster.spectral_clustering",
    "sklearn.datasets.samples_generator.make_blobs",
    "sklearn.metrics.pairwise_distances",
    "sklearn.utils.testing.assert_greater",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_spectral.test_spectral_clustering": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "dumps",
    "loads",
    "numpy.array",
    "scipy.sparse.csr_matrix",
    "sklearn.cluster.SpectralClustering",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_spectral.test_spectral_clustering_sparse": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "numpy.maximum",
    "scipy.sparse.coo_matrix",
    "sklearn.cluster.SpectralClustering",
    "sklearn.datasets.samples_generator.make_blobs",
    "sklearn.metrics.adjusted_rand_score",
    "sklearn.metrics.pairwise.rbf_kernel",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_spectral.test_spectral_unknown_assign_labels": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "numpy.max",
    "scipy.sparse.coo_matrix",
    "sklearn.cluster.spectral_clustering",
    "sklearn.datasets.samples_generator.make_blobs",
    "sklearn.metrics.pairwise_distances",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.cluster.tests.test_spectral.test_spectral_unknown_mode": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "numpy.max",
    "scipy.sparse.coo_matrix",
    "sklearn.cluster.spectral_clustering",
    "sklearn.datasets.samples_generator.make_blobs",
    "sklearn.metrics.pairwise_distances",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance": {
  "data": {},
  "type": "module"
 },
 "sklearn.covariance.__all__": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "sklearn.covariance.empirical_covariance_": {
  "data": {},
  "type": "module"
 },
 "sklearn.covariance.empirical_covariance_.EmpiricalCovariance": {
  "data": {
   "lineno": 88
  },
  "type": "class"
 },
 "sklearn.covariance.empirical_covariance_.EmpiricalCovariance.__init__": {
  "data": {
   "lineno": 114
  },
  "type": "function"
 },
 "sklearn.covariance.empirical_covariance_.EmpiricalCovariance._set_covariance": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "check_array",
    "pinvh"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance.empirical_covariance_.EmpiricalCovariance.error_norm": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "NotImplementedError",
    "numpy.amax",
    "numpy.dot",
    "numpy.sqrt",
    "numpy.sum",
    "scipy.linalg.svdvals"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance.empirical_covariance_.EmpiricalCovariance.fit": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "check_array",
    "numpy.zeros",
    "sklearn.covariance.empirical_covariance_.empirical_covariance"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance.empirical_covariance_.EmpiricalCovariance.get_precision": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "pinvh"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance.empirical_covariance_.EmpiricalCovariance.mahalanobis": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance.empirical_covariance_.EmpiricalCovariance.score": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "sklearn.covariance.empirical_covariance_.empirical_covariance",
    "sklearn.covariance.empirical_covariance_.log_likelihood"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance.empirical_covariance_.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sklearn.covariance.empirical_covariance_.empirical_covariance": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.asarray",
    "numpy.cov",
    "numpy.dot",
    "numpy.reshape",
    "sklearn.covariance.empirical_covariance_.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance.empirical_covariance_.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "sklearn.covariance.empirical_covariance_.log_likelihood": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "fast_logdet",
    "numpy.log",
    "numpy.pi",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance.empirical_covariance_.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.covariance.empirical_covariance_.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.covariance.graph_lasso_": {
  "data": {},
  "type": "module"
 },
 "sklearn.covariance.graph_lasso_.GraphLasso": {
  "data": {
   "lineno": 270
  },
  "type": "class"
 },
 "sklearn.covariance.graph_lasso_.GraphLasso.__init__": {
  "data": {
   "lineno": 325
  },
  "type": "function"
 },
 "sklearn.covariance.graph_lasso_.GraphLasso.fit": {
  "data": {
   "lineno": 337,
   "symbols_in_volume": [
    "check_array",
    "empirical_covariance",
    "numpy.zeros",
    "sklearn.covariance.graph_lasso_.graph_lasso"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance.graph_lasso_.GraphLassoCV": {
  "data": {
   "lineno": 451,
   "symbols_in_volume": [
    "sklearn.covariance.graph_lasso_.GraphLasso"
   ]
  },
  "type": "class"
 },
 "sklearn.covariance.graph_lasso_.GraphLassoCV.__init__": {
  "data": {
   "lineno": 551
  },
  "type": "function"
 },
 "sklearn.covariance.graph_lasso_.GraphLassoCV.fit": {
  "data": {
   "lineno": 567,
   "symbols_in_volume": [
    "EmpiricalCovariance",
    "Parallel",
    "check_array",
    "check_cv",
    "cross_val_score",
    "delayed",
    "empirical_covariance",
    "enumerate",
    "int",
    "isinstance",
    "len",
    "list",
    "max",
    "numpy.array",
    "numpy.finfo",
    "numpy.float64",
    "numpy.inf",
    "numpy.isfinite",
    "numpy.log10",
    "numpy.logspace",
    "numpy.mean",
    "numpy.nan",
    "numpy.zeros",
    "print",
    "range",
    "sklearn.covariance.graph_lasso_.alpha_max",
    "sklearn.covariance.graph_lasso_.collections",
    "sklearn.covariance.graph_lasso_.graph_lasso",
    "sklearn.covariance.graph_lasso_.graph_lasso_path",
    "sklearn.covariance.graph_lasso_.operator",
    "sklearn.covariance.graph_lasso_.time",
    "sklearn.covariance.graph_lasso_.warnings",
    "sorted",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance.graph_lasso_._dual_gap": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.diag",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance.graph_lasso_._objective": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "log_likelihood",
    "numpy.abs",
    "numpy.diag",
    "numpy.log",
    "numpy.pi"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance.graph_lasso_.alpha_max": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.copy",
    "numpy.max"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance.graph_lasso_.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "sklearn.covariance.graph_lasso_.graph_lasso": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "FloatingPointError",
    "check_random_state",
    "dict",
    "lars_path",
    "list",
    "log_likelihood",
    "numpy.abs",
    "numpy.arange",
    "numpy.ascontiguousarray",
    "numpy.dot",
    "numpy.errstate",
    "numpy.finfo",
    "numpy.float64",
    "numpy.inf",
    "numpy.isfinite",
    "numpy.log",
    "numpy.pi",
    "numpy.sum",
    "pinvh",
    "print",
    "range",
    "scipy.linalg.inv",
    "sklearn.covariance.graph_lasso_._dual_gap",
    "sklearn.covariance.graph_lasso_._objective",
    "sklearn.covariance.graph_lasso_.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance.graph_lasso_.graph_lasso_path": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "FloatingPointError",
    "empirical_covariance",
    "list",
    "log_likelihood",
    "max",
    "numpy.inf",
    "numpy.isfinite",
    "numpy.nan",
    "print",
    "sklearn.covariance.graph_lasso_.graph_lasso",
    "sklearn.covariance.graph_lasso_.sys"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance.graph_lasso_.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "sklearn.covariance.graph_lasso_.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.covariance.graph_lasso_.operator": {
  "data": {
   "shadows": "operator"
  },
  "type": "import"
 },
 "sklearn.covariance.graph_lasso_.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "sklearn.covariance.graph_lasso_.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "sklearn.covariance.graph_lasso_.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.covariance.outlier_detection": {
  "data": {},
  "type": "module"
 },
 "sklearn.covariance.outlier_detection.EllipticEnvelope": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "sklearn.covariance.outlier_detection.OutlierDetectionMixin"
   ]
  },
  "type": "class"
 },
 "sklearn.covariance.outlier_detection.EllipticEnvelope.__init__": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "sklearn.covariance.outlier_detection.OutlierDetectionMixin"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance.outlier_detection.EllipticEnvelope.fit": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "scipy.stats.scoreatpercentile"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance.outlier_detection.OutlierDetectionMixin": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "sklearn.covariance.outlier_detection.OutlierDetectionMixin.__init__": {
  "data": {
   "lineno": 39
  },
  "type": "function"
 },
 "sklearn.covariance.outlier_detection.OutlierDetectionMixin.decision_function": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "check_is_fitted"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance.outlier_detection.OutlierDetectionMixin.predict": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "NotImplementedError",
    "check_is_fitted",
    "int",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance.outlier_detection.OutlierDetectionMixin.threshold": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "DeprecationWarning",
    "getattr",
    "property",
    "sklearn.covariance.outlier_detection.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance.outlier_detection.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.covariance.outlier_detection.sp": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "sklearn.covariance.outlier_detection.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.covariance.robust_covariance": {
  "data": {},
  "type": "module"
 },
 "sklearn.covariance.robust_covariance.MinCovDet": {
  "data": {
   "lineno": 501,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "class"
 },
 "sklearn.covariance.robust_covariance.MinCovDet.__init__": {
  "data": {
   "lineno": 584
  },
  "type": "function"
 },
 "sklearn.covariance.robust_covariance.MinCovDet.correct_covariance": {
  "data": {
   "lineno": 640,
   "symbols_in_volume": [
    "numpy.median",
    "scipy.stats.chi2"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance.robust_covariance.MinCovDet.fit": {
  "data": {
   "lineno": 591,
   "symbols_in_volume": [
    "check_array",
    "check_random_state",
    "numpy.dot",
    "numpy.sum",
    "numpy.zeros",
    "pinvh",
    "scipy.linalg.svdvals",
    "sklearn.covariance.robust_covariance.fast_mcd",
    "sklearn.covariance.robust_covariance.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance.robust_covariance.MinCovDet.reweight_covariance": {
  "data": {
   "lineno": 664,
   "symbols_in_volume": [
    "bool",
    "numpy.dot",
    "numpy.sum",
    "numpy.zeros",
    "scipy.stats.chi2"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance.robust_covariance._c_step": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "RuntimeWarning",
    "ValueError",
    "bool",
    "cov_computation_method",
    "fast_logdet",
    "numpy.allclose",
    "numpy.argsort",
    "numpy.dot",
    "numpy.inf",
    "numpy.isinf",
    "numpy.zeros",
    "pinvh",
    "print",
    "sklearn.covariance.robust_covariance.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance.robust_covariance.c_step": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "check_random_state",
    "numpy.asarray",
    "sklearn.covariance.robust_covariance._c_step"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance.robust_covariance.chi2": {
  "data": {
   "shadows": "scipy.stats.chi2"
  },
  "type": "import"
 },
 "sklearn.covariance.robust_covariance.fast_mcd": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": [
    "MemoryError",
    "bool",
    "check_array",
    "check_random_state",
    "cov_computation_method",
    "float",
    "int",
    "max",
    "min",
    "numpy.abs",
    "numpy.arange",
    "numpy.argsort",
    "numpy.array",
    "numpy.asarray",
    "numpy.ceil",
    "numpy.dot",
    "numpy.mean",
    "numpy.min",
    "numpy.ones",
    "numpy.ravel",
    "numpy.sort",
    "numpy.var",
    "numpy.where",
    "numpy.zeros",
    "pinvh",
    "range",
    "sklearn.covariance.robust_covariance.select_candidates"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance.robust_covariance.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "sklearn.covariance.robust_covariance.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.covariance.robust_covariance.numbers": {
  "data": {
   "shadows": "numbers"
  },
  "type": "import"
 },
 "sklearn.covariance.robust_covariance.select_candidates": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "TypeError",
    "check_random_state",
    "cov_computation_method",
    "isinstance",
    "numpy.argsort",
    "numpy.asarray",
    "range",
    "sklearn.covariance.robust_covariance._c_step",
    "sklearn.covariance.robust_covariance.numbers",
    "tuple",
    "type",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance.robust_covariance.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.covariance.shrunk_covariance_": {
  "data": {},
  "type": "module"
 },
 "sklearn.covariance.shrunk_covariance_.LedoitWolf": {
  "data": {
   "lineno": 306
  },
  "type": "class"
 },
 "sklearn.covariance.shrunk_covariance_.LedoitWolf.__init__": {
  "data": {
   "lineno": 363
  },
  "type": "function"
 },
 "sklearn.covariance.shrunk_covariance_.LedoitWolf.fit": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": [
    "check_array",
    "numpy.zeros",
    "sklearn.covariance.shrunk_covariance_.ledoit_wolf"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance.shrunk_covariance_.OAS": {
  "data": {
   "lineno": 472
  },
  "type": "class"
 },
 "sklearn.covariance.shrunk_covariance_.OAS.fit": {
  "data": {
   "lineno": 526,
   "symbols_in_volume": [
    "check_array",
    "numpy.zeros",
    "sklearn.covariance.shrunk_covariance_.oas"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance.shrunk_covariance_.ShrunkCovariance": {
  "data": {
   "lineno": 66
  },
  "type": "class"
 },
 "sklearn.covariance.shrunk_covariance_.ShrunkCovariance.__init__": {
  "data": {
   "lineno": 109
  },
  "type": "function"
 },
 "sklearn.covariance.shrunk_covariance_.ShrunkCovariance.fit": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "check_array",
    "empirical_covariance",
    "numpy.zeros",
    "sklearn.covariance.shrunk_covariance_.shrunk_covariance"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance.shrunk_covariance_.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sklearn.covariance.shrunk_covariance_.ledoit_wolf": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "empirical_covariance",
    "len",
    "numpy.asarray",
    "numpy.atleast_2d",
    "numpy.reshape",
    "numpy.sum",
    "numpy.trace",
    "sklearn.covariance.shrunk_covariance_.ledoit_wolf_shrinkage",
    "sklearn.covariance.shrunk_covariance_.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance.shrunk_covariance_.ledoit_wolf_shrinkage": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "int",
    "len",
    "min",
    "numpy.asarray",
    "numpy.dot",
    "numpy.reshape",
    "numpy.sum",
    "sklearn.covariance.shrunk_covariance_.warnings",
    "slice",
    "xrange"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance.shrunk_covariance_.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.covariance.shrunk_covariance_.oas": {
  "data": {
   "lineno": 404,
   "symbols_in_volume": [
    "empirical_covariance",
    "len",
    "min",
    "numpy.asarray",
    "numpy.atleast_2d",
    "numpy.mean",
    "numpy.reshape",
    "numpy.trace",
    "sklearn.covariance.shrunk_covariance_.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance.shrunk_covariance_.shrunk_covariance": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "check_array",
    "numpy.trace"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance.shrunk_covariance_.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.covariance.tests": {
  "data": {},
  "type": "module"
 },
 "sklearn.covariance.tests.test_covariance": {
  "data": {
   "symbols_in_volume": [
    "sklearn.covariance.tests.test_covariance.X",
    "sklearn.datasets.load_diabetes"
   ]
  },
  "type": "module"
 },
 "sklearn.covariance.tests.test_covariance.EmpiricalCovariance": {
  "data": {
   "shadows": "sklearn.covariance.EmpiricalCovariance"
  },
  "type": "import"
 },
 "sklearn.covariance.tests.test_covariance.LedoitWolf": {
  "data": {
   "shadows": "sklearn.covariance.LedoitWolf"
  },
  "type": "import"
 },
 "sklearn.covariance.tests.test_covariance.OAS": {
  "data": {
   "shadows": "sklearn.covariance.OAS"
  },
  "type": "import"
 },
 "sklearn.covariance.tests.test_covariance.ShrunkCovariance": {
  "data": {
   "shadows": "sklearn.covariance.ShrunkCovariance"
  },
  "type": "import"
 },
 "sklearn.covariance.tests.test_covariance.X": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "sklearn.covariance.tests.test_covariance.X_1d": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "sklearn.covariance.tests.test_covariance.assert_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "sklearn.covariance.tests.test_covariance.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.covariance.tests.test_covariance.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.covariance.tests.test_covariance.assert_greater": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_greater"
  },
  "type": "import"
 },
 "sklearn.covariance.tests.test_covariance.assert_raises": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.covariance.tests.test_covariance.assert_warns": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_warns"
  },
  "type": "import"
 },
 "sklearn.covariance.tests.test_covariance.datasets": {
  "data": {
   "shadows": "sklearn.datasets"
  },
  "type": "import"
 },
 "sklearn.covariance.tests.test_covariance.empirical_covariance": {
  "data": {
   "shadows": "sklearn.covariance.empirical_covariance"
  },
  "type": "import"
 },
 "sklearn.covariance.tests.test_covariance.ledoit_wolf": {
  "data": {
   "shadows": "sklearn.covariance.ledoit_wolf"
  },
  "type": "import"
 },
 "sklearn.covariance.tests.test_covariance.ledoit_wolf_shrinkage": {
  "data": {
   "shadows": "sklearn.covariance.ledoit_wolf_shrinkage"
  },
  "type": "import"
 },
 "sklearn.covariance.tests.test_covariance.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.covariance.tests.test_covariance.oas": {
  "data": {
   "shadows": "sklearn.covariance.oas"
  },
  "type": "import"
 },
 "sklearn.covariance.tests.test_covariance.shrunk_covariance": {
  "data": {
   "shadows": "sklearn.covariance.shrunk_covariance"
  },
  "type": "import"
 },
 "sklearn.covariance.tests.test_covariance.test_covariance": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "NotImplementedError",
    "UserWarning",
    "numpy.amin",
    "numpy.arange",
    "numpy.asarray",
    "numpy.float64",
    "numpy.zeros",
    "sklearn.covariance.EmpiricalCovariance",
    "sklearn.covariance.empirical_covariance",
    "sklearn.covariance.tests.test_covariance.X",
    "sklearn.covariance.tests.test_covariance.X_1d",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_greater",
    "sklearn.utils.testing.assert_raises",
    "sklearn.utils.testing.assert_warns"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance.tests.test_covariance.test_ledoit_wolf": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "UserWarning",
    "numpy.arange",
    "numpy.float64",
    "numpy.zeros",
    "sklearn.covariance.LedoitWolf",
    "sklearn.covariance.ShrunkCovariance",
    "sklearn.covariance.empirical_covariance",
    "sklearn.covariance.ledoit_wolf",
    "sklearn.covariance.ledoit_wolf_shrinkage",
    "sklearn.covariance.tests.test_covariance.X",
    "sklearn.covariance.tests.test_covariance.X_1d",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_warns"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance.tests.test_covariance.test_ledoit_wolf_large": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "numpy.eye",
    "numpy.random.RandomState",
    "sklearn.covariance.LedoitWolf",
    "sklearn.covariance.tests.test_covariance.X",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance.tests.test_covariance.test_oas": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "UserWarning",
    "numpy.arange",
    "numpy.float64",
    "numpy.zeros",
    "sklearn.covariance.OAS",
    "sklearn.covariance.ShrunkCovariance",
    "sklearn.covariance.empirical_covariance",
    "sklearn.covariance.oas",
    "sklearn.covariance.tests.test_covariance.X",
    "sklearn.covariance.tests.test_covariance.X_1d",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_warns"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance.tests.test_covariance.test_shrunk_covariance": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "sklearn.covariance.ShrunkCovariance",
    "sklearn.covariance.empirical_covariance",
    "sklearn.covariance.shrunk_covariance",
    "sklearn.covariance.tests.test_covariance.X",
    "sklearn.covariance.tests.test_covariance.X_1d",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance.tests.test_graph_lasso": {
  "data": {},
  "type": "module"
 },
 "sklearn.covariance.tests.test_graph_lasso.GraphLasso": {
  "data": {
   "shadows": "sklearn.covariance.GraphLasso"
  },
  "type": "import"
 },
 "sklearn.covariance.tests.test_graph_lasso.GraphLassoCV": {
  "data": {
   "shadows": "sklearn.covariance.GraphLassoCV"
  },
  "type": "import"
 },
 "sklearn.covariance.tests.test_graph_lasso.StringIO": {
  "data": {
   "shadows": "sklearn.externals.six.moves.StringIO"
  },
  "type": "import"
 },
 "sklearn.covariance.tests.test_graph_lasso.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.covariance.tests.test_graph_lasso.assert_array_less": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_less"
  },
  "type": "import"
 },
 "sklearn.covariance.tests.test_graph_lasso.check_random_state": {
  "data": {
   "shadows": "sklearn.utils.check_random_state"
  },
  "type": "import"
 },
 "sklearn.covariance.tests.test_graph_lasso.datasets": {
  "data": {
   "shadows": "sklearn.datasets"
  },
  "type": "import"
 },
 "sklearn.covariance.tests.test_graph_lasso.empirical_covariance": {
  "data": {
   "shadows": "sklearn.covariance.empirical_covariance"
  },
  "type": "import"
 },
 "sklearn.covariance.tests.test_graph_lasso.graph_lasso": {
  "data": {
   "shadows": "sklearn.covariance.graph_lasso"
  },
  "type": "import"
 },
 "sklearn.covariance.tests.test_graph_lasso.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "sklearn.covariance.tests.test_graph_lasso.make_sparse_spd_matrix": {
  "data": {
   "shadows": "sklearn.datasets.samples_generator.make_sparse_spd_matrix"
  },
  "type": "import"
 },
 "sklearn.covariance.tests.test_graph_lasso.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.covariance.tests.test_graph_lasso.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "sklearn.covariance.tests.test_graph_lasso.test_graph_lasso": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "dict",
    "list",
    "numpy.array",
    "numpy.diff",
    "numpy.zeros",
    "scipy.linalg.inv",
    "sklearn.covariance.GraphLasso",
    "sklearn.covariance.empirical_covariance",
    "sklearn.covariance.graph_lasso",
    "sklearn.datasets.samples_generator.make_sparse_spd_matrix",
    "sklearn.utils.check_random_state",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_array_less"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance.tests.test_graph_lasso.test_graph_lasso_cv": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "numpy.zeros",
    "scipy.linalg.inv",
    "sklearn.covariance.GraphLassoCV",
    "sklearn.covariance.tests.test_graph_lasso.sys",
    "sklearn.datasets.samples_generator.make_sparse_spd_matrix",
    "sklearn.externals.six.moves.StringIO",
    "sklearn.utils.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance.tests.test_graph_lasso.test_graph_lasso_iris": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.covariance.empirical_covariance",
    "sklearn.covariance.graph_lasso",
    "sklearn.datasets.load_iris",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance.tests.test_graph_lasso.test_graph_lasso_iris_singular": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "sklearn.covariance.empirical_covariance",
    "sklearn.covariance.graph_lasso",
    "sklearn.datasets.load_iris",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance.tests.test_robust_covariance": {
  "data": {
   "symbols_in_volume": [
    "sklearn.covariance.tests.test_robust_covariance.X",
    "sklearn.datasets.load_iris"
   ]
  },
  "type": "module"
 },
 "sklearn.covariance.tests.test_robust_covariance.EllipticEnvelope": {
  "data": {
   "shadows": "sklearn.covariance.EllipticEnvelope"
  },
  "type": "import"
 },
 "sklearn.covariance.tests.test_robust_covariance.MinCovDet": {
  "data": {
   "shadows": "sklearn.covariance.MinCovDet"
  },
  "type": "import"
 },
 "sklearn.covariance.tests.test_robust_covariance.NotFittedError": {
  "data": {
   "shadows": "sklearn.utils.validation.NotFittedError"
  },
  "type": "import"
 },
 "sklearn.covariance.tests.test_robust_covariance.X": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "sklearn.covariance.tests.test_robust_covariance.X_1d": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "sklearn.covariance.tests.test_robust_covariance.assert_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "sklearn.covariance.tests.test_robust_covariance.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.covariance.tests.test_robust_covariance.assert_raise_message": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raise_message"
  },
  "type": "import"
 },
 "sklearn.covariance.tests.test_robust_covariance.assert_raises": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.covariance.tests.test_robust_covariance.assert_warns": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_warns"
  },
  "type": "import"
 },
 "sklearn.covariance.tests.test_robust_covariance.datasets": {
  "data": {
   "shadows": "sklearn.datasets"
  },
  "type": "import"
 },
 "sklearn.covariance.tests.test_robust_covariance.empirical_covariance": {
  "data": {
   "shadows": "sklearn.covariance.empirical_covariance"
  },
  "type": "import"
 },
 "sklearn.covariance.tests.test_robust_covariance.fast_mcd": {
  "data": {
   "shadows": "sklearn.covariance.fast_mcd"
  },
  "type": "import"
 },
 "sklearn.covariance.tests.test_robust_covariance.launch_mcd_on_dataset": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "bool",
    "numpy.mean",
    "numpy.ones",
    "numpy.random.RandomState",
    "numpy.sum",
    "sklearn.covariance.MinCovDet",
    "sklearn.covariance.empirical_covariance",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance.tests.test_robust_covariance.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.covariance.tests.test_robust_covariance.test_fast_mcd_on_invalid_input": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "ValueError",
    "numpy.arange",
    "sklearn.covariance.fast_mcd",
    "sklearn.covariance.tests.test_robust_covariance.X",
    "sklearn.utils.testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance.tests.test_robust_covariance.test_mcd": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "sklearn.covariance.tests.test_robust_covariance.launch_mcd_on_dataset"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance.tests.test_robust_covariance.test_mcd_class_on_invalid_input": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "ValueError",
    "numpy.arange",
    "sklearn.covariance.MinCovDet",
    "sklearn.covariance.tests.test_robust_covariance.X",
    "sklearn.utils.testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance.tests.test_robust_covariance.test_mcd_issue1127": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.covariance.MinCovDet",
    "sklearn.covariance.tests.test_robust_covariance.X"
   ]
  },
  "type": "function"
 },
 "sklearn.covariance.tests.test_robust_covariance.test_outlier_detection": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "numpy.ones",
    "numpy.random.RandomState",
    "sklearn.covariance.EllipticEnvelope",
    "sklearn.covariance.tests.test_robust_covariance.X",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_raises",
    "sklearn.utils.validation.NotFittedError",
    "sum"
   ]
  },
  "type": "function"
 },
 "sklearn.cross_decomposition": {
  "data": {},
  "type": "module"
 },
 "sklearn.cross_decomposition.cca_": {
  "data": {},
  "type": "module"
 },
 "sklearn.cross_decomposition.cca_.CCA": {
  "data": {
   "lineno": 6
  },
  "type": "class"
 },
 "sklearn.cross_decomposition.cca_.CCA.__init__": {
  "data": {
   "lineno": 102
  },
  "type": "function"
 },
 "sklearn.cross_decomposition.cca_.__all__": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "sklearn.cross_decomposition.pls_": {
  "data": {
   "symbols_in_volume": [
    "distutils.version.LooseVersion",
    "sklearn.cross_decomposition.pls_.scipy"
   ]
  },
  "type": "module"
 },
 "sklearn.cross_decomposition.pls_.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "sklearn.cross_decomposition.pls_.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "sklearn.cross_decomposition.pls_.PLSCanonical": {
  "data": {
   "lineno": 597,
   "symbols_in_volume": [
    "sklearn.cross_decomposition.pls_._PLS"
   ]
  },
  "type": "class"
 },
 "sklearn.cross_decomposition.pls_.PLSCanonical.__init__": {
  "data": {
   "lineno": 731,
   "symbols_in_volume": [
    "sklearn.cross_decomposition.pls_._PLS"
   ]
  },
  "type": "function"
 },
 "sklearn.cross_decomposition.pls_.PLSRegression": {
  "data": {
   "lineno": 460,
   "symbols_in_volume": [
    "sklearn.cross_decomposition.pls_._PLS"
   ]
  },
  "type": "class"
 },
 "sklearn.cross_decomposition.pls_.PLSRegression.__init__": {
  "data": {
   "lineno": 589,
   "symbols_in_volume": [
    "sklearn.cross_decomposition.pls_._PLS"
   ]
  },
  "type": "function"
 },
 "sklearn.cross_decomposition.pls_.PLSSVD": {
  "data": {
   "lineno": 739
  },
  "type": "class"
 },
 "sklearn.cross_decomposition.pls_.PLSSVD.__init__": {
  "data": {
   "lineno": 778
  },
  "type": "function"
 },
 "sklearn.cross_decomposition.pls_.PLSSVD.fit": {
  "data": {
   "lineno": 783,
   "symbols_in_volume": [
    "ValueError",
    "check_array",
    "check_consistent_length",
    "max",
    "numpy.dot",
    "numpy.float64",
    "numpy.min",
    "scipy.linalg.svd",
    "sklearn.cross_decomposition.pls_._center_scale_xy",
    "sklearn.utils.extmath.svd_flip",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.cross_decomposition.pls_.PLSSVD.fit_transform": {
  "data": {
   "lineno": 833
  },
  "type": "function"
 },
 "sklearn.cross_decomposition.pls_.PLSSVD.transform": {
  "data": {
   "lineno": 819,
   "symbols_in_volume": [
    "check_array",
    "check_is_fitted",
    "numpy.dot",
    "numpy.float64"
   ]
  },
  "type": "function"
 },
 "sklearn.cross_decomposition.pls_._PLS": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "abc.ABCMeta"
   ]
  },
  "type": "class"
 },
 "sklearn.cross_decomposition.pls_._PLS.__init__": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "sklearn.cross_decomposition.pls_._PLS.fit": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "ValueError",
    "check_array",
    "check_consistent_length",
    "numpy.all",
    "numpy.dot",
    "numpy.double",
    "numpy.finfo",
    "numpy.float64",
    "numpy.ones",
    "numpy.zeros",
    "range",
    "scipy.linalg.pinv2",
    "sklearn.cross_decomposition.pls_._center_scale_xy",
    "sklearn.cross_decomposition.pls_._nipals_twoblocks_inner_loop",
    "sklearn.cross_decomposition.pls_._svd_cross_product",
    "sklearn.cross_decomposition.pls_.pinv2_args",
    "sklearn.cross_decomposition.pls_.warnings",
    "sklearn.utils.extmath.svd_flip"
   ]
  },
  "type": "function"
 },
 "sklearn.cross_decomposition.pls_._PLS.fit_transform": {
  "data": {
   "lineno": 437
  },
  "type": "function"
 },
 "sklearn.cross_decomposition.pls_._PLS.predict": {
  "data": {
   "lineno": 412,
   "symbols_in_volume": [
    "check_array",
    "check_is_fitted",
    "numpy.dot"
   ]
  },
  "type": "function"
 },
 "sklearn.cross_decomposition.pls_._PLS.transform": {
  "data": {
   "lineno": 374,
   "symbols_in_volume": [
    "check_array",
    "check_is_fitted",
    "numpy.dot"
   ]
  },
  "type": "function"
 },
 "sklearn.cross_decomposition.pls_.__all__": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "sklearn.cross_decomposition.pls_._center_scale_xy": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "sklearn.cross_decomposition.pls_._nipals_twoblocks_inner_loop": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.finfo",
    "numpy.sqrt",
    "scipy.linalg.pinv2",
    "sklearn.cross_decomposition.pls_.pinv2_args",
    "sklearn.cross_decomposition.pls_.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.cross_decomposition.pls_._svd_cross_product": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "numpy.dot",
    "scipy.linalg.svd"
   ]
  },
  "type": "function"
 },
 "sklearn.cross_decomposition.pls_.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "sklearn.cross_decomposition.pls_.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "sklearn.cross_decomposition.pls_.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.cross_decomposition.pls_.pinv2_args": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "sklearn.cross_decomposition.pls_.scipy": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "sklearn.cross_decomposition.pls_.svd_flip": {
  "data": {
   "shadows": "sklearn.utils.extmath.svd_flip"
  },
  "type": "import"
 },
 "sklearn.cross_decomposition.pls_.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.datasets": {
  "data": {},
  "type": "module"
 },
 "sklearn.datasets.__all__": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "sklearn.datasets.base": {
  "data": {},
  "type": "module"
 },
 "sklearn.datasets.base.Bunch": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "class"
 },
 "sklearn.datasets.base.Bunch.__getattr__": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "AttributeError",
    "KeyError"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.base.Bunch.__init__": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "dict.__init__"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.base.Bunch.__setattr__": {
  "data": {
   "lineno": 51
  },
  "type": "function"
 },
 "sklearn.datasets.base.Bunch.__setstate__": {
  "data": {
   "lineno": 60
  },
  "type": "function"
 },
 "sklearn.datasets.base._pkl_filepath": {
  "data": {
   "lineno": 646,
   "symbols_in_volume": [
    "os.path.join",
    "os.path.splitext",
    "sklearn.datasets.base.sys"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.base.clear_data_home": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "sklearn.datasets.base.get_data_home",
    "sklearn.datasets.base.shutil"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.base.csv": {
  "data": {
   "shadows": "csv"
  },
  "type": "import"
 },
 "sklearn.datasets.base.dirname": {
  "data": {
   "shadows": "os.path.dirname"
  },
  "type": "import"
 },
 "sklearn.datasets.base.environ": {
  "data": {
   "shadows": "os.environ"
  },
  "type": "import"
 },
 "sklearn.datasets.base.exists": {
  "data": {
   "shadows": "os.path.exists"
  },
  "type": "import"
 },
 "sklearn.datasets.base.expanduser": {
  "data": {
   "shadows": "os.path.expanduser"
  },
  "type": "import"
 },
 "sklearn.datasets.base.get_data_home": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "os.environ.get",
    "os.makedirs",
    "os.path.exists",
    "os.path.expanduser",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.base.imread": {
  "data": {
   "shadows": "scipy.misc.pilutil.imread"
  },
  "type": "import"
 },
 "sklearn.datasets.base.isdir": {
  "data": {
   "shadows": "os.path.isdir"
  },
  "type": "import"
 },
 "sklearn.datasets.base.join": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "sklearn.datasets.base.listdir": {
  "data": {
   "shadows": "os.listdir"
  },
  "type": "import"
 },
 "sklearn.datasets.base.load_boston": {
  "data": {
   "lineno": 505,
   "symbols_in_volume": [
    "enumerate",
    "int",
    "next",
    "numpy.array",
    "numpy.asarray",
    "numpy.empty",
    "numpy.float",
    "open",
    "os.path.dirname",
    "os.path.join",
    "sklearn.datasets.base.Bunch",
    "sklearn.datasets.base.csv"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.base.load_breast_cancer": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "enumerate",
    "int",
    "next",
    "numpy.array",
    "numpy.asarray",
    "numpy.empty",
    "numpy.float",
    "numpy.int",
    "open",
    "os.path.dirname",
    "os.path.join",
    "sklearn.datasets.base.Bunch",
    "sklearn.datasets.base.csv"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.base.load_diabetes": {
  "data": {
   "lineno": 445,
   "symbols_in_volume": [
    "numpy.loadtxt",
    "os.path.dirname",
    "os.path.join",
    "sklearn.datasets.base.Bunch"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.base.load_digits": {
  "data": {
   "lineno": 381,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.int",
    "numpy.loadtxt",
    "open",
    "os.path.dirname",
    "os.path.join",
    "sklearn.datasets.base.Bunch"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.base.load_files": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "check_random_state",
    "enumerate",
    "len",
    "numpy.arange",
    "numpy.array",
    "open",
    "os.listdir",
    "os.path.isdir",
    "os.path.join",
    "sklearn.datasets.base.Bunch",
    "sorted"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.base.load_iris": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "enumerate",
    "int",
    "next",
    "numpy.array",
    "numpy.asarray",
    "numpy.empty",
    "numpy.float",
    "numpy.int",
    "open",
    "os.path.dirname",
    "os.path.join",
    "sklearn.datasets.base.Bunch",
    "sklearn.datasets.base.csv"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.base.load_linnerud": {
  "data": {
   "lineno": 470,
   "symbols_in_volume": [
    "numpy.loadtxt",
    "open",
    "os.path.dirname",
    "os.path.join",
    "sklearn.datasets.base.Bunch"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.base.load_sample_image": {
  "data": {
   "lineno": 607,
   "symbols_in_volume": [
    "AttributeError",
    "enumerate",
    "sklearn.datasets.base.load_sample_images"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.base.load_sample_images": {
  "data": {
   "lineno": 557,
   "symbols_in_volume": [
    "ImportError",
    "open",
    "os.path.dirname",
    "os.path.join",
    "scipy.misc.pilutil.imread",
    "sklearn.datasets.base.Bunch",
    "sklearn.datasets.base.os"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.base.makedirs": {
  "data": {
   "shadows": "os.makedirs"
  },
  "type": "import"
 },
 "sklearn.datasets.base.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.datasets.base.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "sklearn.datasets.base.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "sklearn.datasets.base.splitext": {
  "data": {
   "shadows": "os.path.splitext"
  },
  "type": "import"
 },
 "sklearn.datasets.base.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "sklearn.datasets.california_housing": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__doc__"
   ]
  },
  "type": "module"
 },
 "sklearn.datasets.california_housing.BytesIO": {
  "data": {
   "shadows": "io.BytesIO"
  },
  "type": "import"
 },
 "sklearn.datasets.california_housing.DATA_URL": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "sklearn.datasets.california_housing.MODULE_DOCS": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "sklearn.datasets.california_housing.TARGET_FILENAME": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "sklearn.datasets.california_housing.exists": {
  "data": {
   "shadows": "os.path.exists"
  },
  "type": "import"
 },
 "sklearn.datasets.california_housing.fetch_california_housing": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "Bunch",
    "_pkl_filepath",
    "get_data_home",
    "io.BytesIO",
    "numpy.loadtxt",
    "os.makedirs",
    "os.path.exists",
    "print",
    "sklearn.datasets.california_housing.DATA_URL",
    "sklearn.datasets.california_housing.MODULE_DOCS",
    "sklearn.datasets.california_housing.TARGET_FILENAME",
    "sklearn.datasets.california_housing.tarfile",
    "urllib.request.urlopen"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.california_housing.makedirs": {
  "data": {
   "shadows": "os.makedirs"
  },
  "type": "import"
 },
 "sklearn.datasets.california_housing.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.datasets.california_housing.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "sklearn.datasets.california_housing.tarfile": {
  "data": {
   "shadows": "tarfile"
  },
  "type": "import"
 },
 "sklearn.datasets.california_housing.urlopen": {
  "data": {
   "shadows": "urllib.request.urlopen"
  },
  "type": "import"
 },
 "sklearn.datasets.covtype": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "sklearn.datasets.covtype.logging"
   ]
  },
  "type": "module"
 },
 "sklearn.datasets.covtype.BytesIO": {
  "data": {
   "shadows": "io.BytesIO"
  },
  "type": "import"
 },
 "sklearn.datasets.covtype.GzipFile": {
  "data": {
   "shadows": "gzip.GzipFile"
  },
  "type": "import"
 },
 "sklearn.datasets.covtype.URL": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "sklearn.datasets.covtype.exists": {
  "data": {
   "shadows": "os.path.exists"
  },
  "type": "import"
 },
 "sklearn.datasets.covtype.fetch_covtype": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "Bunch",
    "NameError",
    "__doc__",
    "_pkl_filepath",
    "check_random_state",
    "get_data_home",
    "gzip.GzipFile",
    "io.BytesIO",
    "makedirs",
    "numpy.arange",
    "numpy.genfromtxt",
    "numpy.int32",
    "os.path.exists",
    "os.path.join",
    "sklearn.datasets.covtype.URL",
    "sklearn.datasets.covtype.logger",
    "urllib.request.urlopen"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.covtype.join": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "sklearn.datasets.covtype.logger": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "sklearn.datasets.covtype.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "sklearn.datasets.covtype.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.datasets.covtype.urlopen": {
  "data": {
   "shadows": "urllib.request.urlopen"
  },
  "type": "import"
 },
 "sklearn.datasets.lfw": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "sklearn.datasets.lfw.logging"
   ]
  },
  "type": "module"
 },
 "sklearn.datasets.lfw.ARCHIVE_NAME": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "sklearn.datasets.lfw.BASE_URL": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "sklearn.datasets.lfw.FUNNELED_ARCHIVE_NAME": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "sklearn.datasets.lfw.TARGET_FILENAMES": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "sklearn.datasets.lfw._fetch_lfw_pairs": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "b",
    "enumerate",
    "int",
    "len",
    "list",
    "numpy.array",
    "numpy.int",
    "numpy.zeros",
    "open",
    "os.listdir",
    "os.path.join",
    "sklearn.datasets.lfw._load_imgs",
    "sorted",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.lfw._fetch_lfw_people": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.arange",
    "numpy.random.RandomState",
    "numpy.searchsorted",
    "numpy.unique",
    "os.listdir",
    "os.path.isdir",
    "os.path.join",
    "sklearn.datasets.lfw._load_imgs",
    "sorted"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.lfw._load_imgs": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "ImportError",
    "RuntimeError",
    "enumerate",
    "float",
    "int",
    "len",
    "numpy.asarray",
    "numpy.float32",
    "numpy.zeros",
    "scipy.misc.imresize",
    "scipy.misc.pilutil.imread",
    "sklearn.datasets.lfw.logger",
    "slice",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.lfw.check_fetch_lfw": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "IOError",
    "get_data_home",
    "os.makedirs",
    "os.path.exists",
    "os.path.join",
    "os.remove",
    "sklearn.datasets.lfw.ARCHIVE_NAME",
    "sklearn.datasets.lfw.BASE_URL",
    "sklearn.datasets.lfw.FUNNELED_ARCHIVE_NAME",
    "sklearn.datasets.lfw.TARGET_FILENAMES",
    "sklearn.datasets.lfw.logger",
    "sklearn.datasets.lfw.tarfile",
    "urllib.request.urlretrieve"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.lfw.deprecated": {
  "data": {
   "shadows": "sklearn.utils.deprecated"
  },
  "type": "import"
 },
 "sklearn.datasets.lfw.exists": {
  "data": {
   "shadows": "os.path.exists"
  },
  "type": "import"
 },
 "sklearn.datasets.lfw.fetch_lfw_pairs": {
  "data": {
   "lineno": 387,
   "symbols_in_volume": [
    "Bunch",
    "Memory",
    "ValueError",
    "len",
    "list",
    "load_func",
    "os.path.join",
    "sklearn.datasets.lfw._fetch_lfw_pairs",
    "sklearn.datasets.lfw.check_fetch_lfw",
    "sklearn.datasets.lfw.logger",
    "slice",
    "sorted"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.lfw.fetch_lfw_people": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "Bunch",
    "Memory",
    "len",
    "load_func",
    "sklearn.datasets.lfw._fetch_lfw_people",
    "sklearn.datasets.lfw.check_fetch_lfw",
    "sklearn.datasets.lfw.logger",
    "slice"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.lfw.imread": {
  "data": {
   "shadows": "scipy.misc.pilutil.imread"
  },
  "type": "import"
 },
 "sklearn.datasets.lfw.imresize": {
  "data": {
   "shadows": "scipy.misc.imresize"
  },
  "type": "import"
 },
 "sklearn.datasets.lfw.isdir": {
  "data": {
   "shadows": "os.path.isdir"
  },
  "type": "import"
 },
 "sklearn.datasets.lfw.join": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "sklearn.datasets.lfw.listdir": {
  "data": {
   "shadows": "os.listdir"
  },
  "type": "import"
 },
 "sklearn.datasets.lfw.load_lfw_pairs": {
  "data": {
   "lineno": 503,
   "symbols_in_volume": [
    "sklearn.datasets.lfw.fetch_lfw_pairs",
    "sklearn.utils.deprecated"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.lfw.load_lfw_people": {
  "data": {
   "lineno": 376,
   "symbols_in_volume": [
    "sklearn.datasets.lfw.fetch_lfw_people",
    "sklearn.utils.deprecated"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.lfw.logger": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "sklearn.datasets.lfw.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "sklearn.datasets.lfw.makedirs": {
  "data": {
   "shadows": "os.makedirs"
  },
  "type": "import"
 },
 "sklearn.datasets.lfw.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.datasets.lfw.remove": {
  "data": {
   "shadows": "os.remove"
  },
  "type": "import"
 },
 "sklearn.datasets.lfw.scale_face": {
  "data": {
   "lineno": 57
  },
  "type": "function"
 },
 "sklearn.datasets.lfw.tarfile": {
  "data": {
   "shadows": "tarfile"
  },
  "type": "import"
 },
 "sklearn.datasets.lfw.urllib": {
  "data": {
   "shadows": "urllib"
  },
  "type": "import"
 },
 "sklearn.datasets.mlcomp": {
  "data": {
   "symbols_in_volume": [
    "sklearn.datasets.mlcomp._load_document_classification"
   ]
  },
  "type": "module"
 },
 "sklearn.datasets.mlcomp.LOADERS": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "sklearn.datasets.mlcomp._load_document_classification": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "sklearn.datasets.base.load_files",
    "sklearn.datasets.mlcomp.os"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.mlcomp.load_files": {
  "data": {
   "shadows": "sklearn.datasets.base.load_files"
  },
  "type": "import"
 },
 "sklearn.datasets.mlcomp.load_mlcomp": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "dict",
    "format",
    "isinstance",
    "loader",
    "open",
    "sklearn.datasets.mlcomp.LOADERS",
    "sklearn.datasets.mlcomp.numbers",
    "sklearn.datasets.mlcomp.os",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.mlcomp.numbers": {
  "data": {
   "shadows": "numbers"
  },
  "type": "import"
 },
 "sklearn.datasets.mlcomp.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "sklearn.datasets.mldata": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "sklearn.datasets.mldata.HTTPError": {
  "data": {
   "shadows": "urllib.error.HTTPError"
  },
  "type": "import"
 },
 "sklearn.datasets.mldata.MLDATA_BASE_URL": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "sklearn.datasets.mldata.copyfileobj": {
  "data": {
   "shadows": "shutil.copyfileobj"
  },
  "type": "import"
 },
 "sklearn.datasets.mldata.exists": {
  "data": {
   "shadows": "os.path.exists"
  },
  "type": "import"
 },
 "sklearn.datasets.mldata.fetch_mldata": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "Bunch",
    "get_data_home",
    "isinstance",
    "len",
    "open",
    "os.path.exists",
    "os.path.join",
    "scipy.io.loadmat",
    "scipy.sparse.issparse",
    "shutil.copyfileobj",
    "sklearn.datasets.mldata.MLDATA_BASE_URL",
    "sklearn.datasets.mldata.mldata_filename",
    "sklearn.datasets.mldata.numbers",
    "sklearn.datasets.mldata.os",
    "str",
    "urllib.error.HTTPError",
    "urllib.parse.quote",
    "urllib.request.urlopen"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.mldata.install_mldata_mock": {
  "data": {
   "shadows": "sklearn.utils.testing.install_mldata_mock"
  },
  "type": "import"
 },
 "sklearn.datasets.mldata.io": {
  "data": {
   "shadows": "scipy.io"
  },
  "type": "import"
 },
 "sklearn.datasets.mldata.join": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "sklearn.datasets.mldata.mldata_filename": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "sklearn.datasets.mldata.re"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.mldata.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.datasets.mldata.numbers": {
  "data": {
   "shadows": "numbers"
  },
  "type": "import"
 },
 "sklearn.datasets.mldata.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "sklearn.datasets.mldata.quote": {
  "data": {
   "shadows": "urllib.parse.quote"
  },
  "type": "import"
 },
 "sklearn.datasets.mldata.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "sklearn.datasets.mldata.setup_module": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "numpy.empty",
    "sklearn.utils.testing.install_mldata_mock"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.mldata.sp": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "sklearn.datasets.mldata.teardown_module": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "sklearn.utils.testing.uninstall_mldata_mock"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.mldata.uninstall_mldata_mock": {
  "data": {
   "shadows": "sklearn.utils.testing.uninstall_mldata_mock"
  },
  "type": "import"
 },
 "sklearn.datasets.mldata.urlopen": {
  "data": {
   "shadows": "urllib.request.urlopen"
  },
  "type": "import"
 },
 "sklearn.datasets.olivetti_faces": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__doc__",
    "sklearn.datasets.olivetti_faces.urllib2"
   ]
  },
  "type": "module"
 },
 "sklearn.datasets.olivetti_faces.BytesIO": {
  "data": {
   "shadows": "io.BytesIO"
  },
  "type": "import"
 },
 "sklearn.datasets.olivetti_faces.DATA_URL": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "sklearn.datasets.olivetti_faces.MODULE_DOCS": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "sklearn.datasets.olivetti_faces.TARGET_FILENAME": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "sklearn.datasets.olivetti_faces.exists": {
  "data": {
   "shadows": "os.path.exists"
  },
  "type": "import"
 },
 "sklearn.datasets.olivetti_faces.fetch_olivetti_faces": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "Bunch",
    "_pkl_filepath",
    "check_random_state",
    "get_data_home",
    "io.BytesIO",
    "len",
    "numpy.array",
    "numpy.float32",
    "os.makedirs",
    "os.path.exists",
    "print",
    "range",
    "scipy.io.matlab.loadmat",
    "sklearn.datasets.olivetti_faces.DATA_URL",
    "sklearn.datasets.olivetti_faces.MODULE_DOCS",
    "sklearn.datasets.olivetti_faces.TARGET_FILENAME",
    "sklearn.datasets.olivetti_faces.urlopen"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.olivetti_faces.loadmat": {
  "data": {
   "shadows": "scipy.io.matlab.loadmat"
  },
  "type": "import"
 },
 "sklearn.datasets.olivetti_faces.makedirs": {
  "data": {
   "shadows": "os.makedirs"
  },
  "type": "import"
 },
 "sklearn.datasets.olivetti_faces.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.datasets.olivetti_faces.urllib.request": {
  "data": {
   "shadows": "urllib.request"
  },
  "type": "import"
 },
 "sklearn.datasets.olivetti_faces.urllib2": {
  "data": {
   "shadows": "urllib2"
  },
  "type": "import"
 },
 "sklearn.datasets.olivetti_faces.urlopen": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "sklearn.datasets.rcv1": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "sklearn.datasets.rcv1.logging"
   ]
  },
  "type": "module"
 },
 "sklearn.datasets.rcv1.BytesIO": {
  "data": {
   "shadows": "io.BytesIO"
  },
  "type": "import"
 },
 "sklearn.datasets.rcv1.GzipFile": {
  "data": {
   "shadows": "gzip.GzipFile"
  },
  "type": "import"
 },
 "sklearn.datasets.rcv1.URL": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "sklearn.datasets.rcv1.URL_topics": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "sklearn.datasets.rcv1._find_permutation": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "numpy.argsort",
    "sklearn.datasets.rcv1._inverse_permutation"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.rcv1._inverse_permutation": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.int32",
    "numpy.put",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.rcv1.closing": {
  "data": {
   "shadows": "contextlib.closing"
  },
  "type": "import"
 },
 "sklearn.datasets.rcv1.exists": {
  "data": {
   "shadows": "os.path.exists"
  },
  "type": "import"
 },
 "sklearn.datasets.rcv1.fetch_rcv1": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "Bunch",
    "ValueError",
    "__doc__",
    "_pkl_filepath",
    "contextlib.closing",
    "get_data_home",
    "gzip.GzipFile",
    "int",
    "io.BytesIO",
    "len",
    "load_svmlight_files",
    "makedirs",
    "numpy.argsort",
    "numpy.empty",
    "numpy.hstack",
    "numpy.int32",
    "numpy.uint32",
    "numpy.uint8",
    "numpy.zeros",
    "object",
    "os.path.exists",
    "os.path.join",
    "range",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.vstack",
    "sklearn.datasets.rcv1.URL",
    "sklearn.datasets.rcv1.URL_topics",
    "sklearn.datasets.rcv1._find_permutation",
    "sklearn.datasets.rcv1.logger",
    "urllib.request.urlopen"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.rcv1.join": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "sklearn.datasets.rcv1.logger": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "sklearn.datasets.rcv1.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "sklearn.datasets.rcv1.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.datasets.rcv1.shuffle_": {
  "data": {
   "shadows": "shuffle"
  },
  "type": "import"
 },
 "sklearn.datasets.rcv1.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.datasets.rcv1.urlopen": {
  "data": {
   "shadows": "urllib.request.urlopen"
  },
  "type": "import"
 },
 "sklearn.datasets.samples_generator": {
  "data": {},
  "type": "module"
 },
 "sklearn.datasets.samples_generator._generate_hypercube": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "astype",
    "numpy.hstack",
    "numpy.unpackbits",
    "sample_without_replacement"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.samples_generator._shuffle": {
  "data": {
   "lineno": 1443,
   "symbols_in_volume": [
    "check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.samples_generator.array": {
  "data": {
   "shadows": "array"
  },
  "type": "import"
 },
 "sklearn.datasets.samples_generator.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "sklearn.datasets.samples_generator.make_biclusters": {
  "data": {
   "lineno": 1452,
   "symbols_in_volume": [
    "check_random_state",
    "list",
    "numpy.float64",
    "numpy.hstack",
    "numpy.outer",
    "numpy.repeat",
    "numpy.vstack",
    "numpy.zeros",
    "range",
    "sklearn.datasets.samples_generator._shuffle",
    "sklearn.datasets.samples_generator.zip"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.samples_generator.make_blobs": {
  "data": {
   "lineno": 682,
   "symbols_in_volume": [
    "check_array",
    "check_random_state",
    "enumerate",
    "int",
    "isinstance",
    "len",
    "numpy.arange",
    "numpy.array",
    "numpy.concatenate",
    "numpy.ones",
    "range",
    "sklearn.datasets.samples_generator.numbers",
    "sklearn.datasets.samples_generator.zip"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.samples_generator.make_checkerboard": {
  "data": {
   "lineno": 1544,
   "symbols_in_volume": [
    "check_random_state",
    "hasattr",
    "list",
    "numpy.float64",
    "numpy.hstack",
    "numpy.outer",
    "numpy.repeat",
    "numpy.vstack",
    "numpy.zeros",
    "range",
    "sklearn.datasets.samples_generator._shuffle",
    "sklearn.datasets.samples_generator.zip"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.samples_generator.make_circles": {
  "data": {
   "lineno": 573,
   "symbols_in_volume": [
    "ValueError",
    "check_random_state",
    "numpy.append",
    "numpy.cos",
    "numpy.hstack",
    "numpy.intp",
    "numpy.linspace",
    "numpy.ones",
    "numpy.pi",
    "numpy.sin",
    "numpy.vstack",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.samples_generator.make_classification": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "ValueError",
    "check_random_state",
    "enumerate",
    "float",
    "int",
    "len",
    "numpy.arange",
    "numpy.dot",
    "numpy.int",
    "numpy.intp",
    "numpy.zeros",
    "range",
    "sklearn.datasets.samples_generator._generate_hypercube",
    "sum"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.samples_generator.make_friedman1": {
  "data": {
   "lineno": 776,
   "symbols_in_volume": [
    "ValueError",
    "check_random_state",
    "numpy.pi",
    "numpy.sin"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.samples_generator.make_friedman2": {
  "data": {
   "lineno": 839,
   "symbols_in_volume": [
    "check_random_state",
    "numpy.pi"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.samples_generator.make_friedman3": {
  "data": {
   "lineno": 905,
   "symbols_in_volume": [
    "check_random_state",
    "numpy.arctan",
    "numpy.pi"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.samples_generator.make_gaussian_quantiles": {
  "data": {
   "lineno": 1356,
   "symbols_in_volume": [
    "ValueError",
    "check_random_state",
    "numpy.arange",
    "numpy.argsort",
    "numpy.array",
    "numpy.hstack",
    "numpy.identity",
    "numpy.newaxis",
    "numpy.repeat",
    "numpy.sum",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.samples_generator.make_hastie_10_2": {
  "data": {
   "lineno": 401,
   "symbols_in_volume": [
    "check_random_state",
    "numpy.float64"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.samples_generator.make_low_rank_matrix": {
  "data": {
   "lineno": 970,
   "symbols_in_volume": [
    "check_random_state",
    "min",
    "numpy.arange",
    "numpy.dot",
    "numpy.exp",
    "numpy.float64",
    "numpy.identity",
    "scipy.linalg.qr"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.samples_generator.make_moons": {
  "data": {
   "lineno": 630,
   "symbols_in_volume": [
    "check_random_state",
    "numpy.append",
    "numpy.cos",
    "numpy.hstack",
    "numpy.intp",
    "numpy.linspace",
    "numpy.ones",
    "numpy.pi",
    "numpy.sin",
    "numpy.vstack",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.samples_generator.make_multilabel_classification": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "MultiLabelBinarizer",
    "ValueError",
    "check_random_state",
    "len",
    "numpy.cumsum",
    "numpy.float64",
    "numpy.ones",
    "numpy.sum",
    "range",
    "sample_example",
    "scipy.sparse.csr_matrix",
    "sklearn.datasets.samples_generator.array"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.samples_generator.make_multilabel_classification.sample_example": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": [
    "len",
    "list",
    "numpy.searchsorted",
    "set"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.samples_generator.make_regression": {
  "data": {
   "lineno": 450,
   "symbols_in_volume": [
    "check_random_state",
    "min",
    "numpy.arange",
    "numpy.dot",
    "numpy.squeeze",
    "numpy.zeros",
    "sklearn.datasets.samples_generator.make_low_rank_matrix"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.samples_generator.make_s_curve": {
  "data": {
   "lineno": 1313,
   "symbols_in_volume": [
    "check_random_state",
    "numpy.concatenate",
    "numpy.cos",
    "numpy.pi",
    "numpy.sign",
    "numpy.sin",
    "numpy.squeeze"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.samples_generator.make_sparse_coded_signal": {
  "data": {
   "lineno": 1040,
   "symbols_in_volume": [
    "check_random_state",
    "numpy.arange",
    "numpy.dot",
    "numpy.sqrt",
    "numpy.squeeze",
    "numpy.sum",
    "numpy.zeros",
    "range",
    "sklearn.datasets.samples_generator.map"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.samples_generator.make_sparse_spd_matrix": {
  "data": {
   "lineno": 1186,
   "symbols_in_volume": [
    "check_random_state",
    "numpy.diag",
    "numpy.dot",
    "numpy.eye",
    "numpy.sqrt",
    "numpy.sum",
    "numpy.tril"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.samples_generator.make_sparse_uncorrelated": {
  "data": {
   "lineno": 1100,
   "symbols_in_volume": [
    "check_random_state",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.samples_generator.make_spd_matrix": {
  "data": {
   "lineno": 1152,
   "symbols_in_volume": [
    "check_random_state",
    "numpy.diag",
    "numpy.dot",
    "scipy.linalg.svd"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.samples_generator.make_swiss_roll": {
  "data": {
   "lineno": 1260,
   "symbols_in_volume": [
    "check_random_state",
    "numpy.concatenate",
    "numpy.cos",
    "numpy.pi",
    "numpy.sin",
    "numpy.squeeze"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.samples_generator.map": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "sklearn.datasets.samples_generator.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.datasets.samples_generator.numbers": {
  "data": {
   "shadows": "numbers"
  },
  "type": "import"
 },
 "sklearn.datasets.samples_generator.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.datasets.samples_generator.util_shuffle": {
  "data": {
   "shadows": "shuffle"
  },
  "type": "import"
 },
 "sklearn.datasets.samples_generator.zip": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "sklearn.datasets.setup": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.distutils.core.setup",
    "sklearn.datasets.setup.configuration"
   ]
  },
  "type": "module"
 },
 "sklearn.datasets.setup.Configuration": {
  "data": {
   "shadows": "numpy.distutils.misc_util.Configuration"
  },
  "type": "import"
 },
 "sklearn.datasets.setup.configuration": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "numpy.distutils.misc_util.Configuration",
    "sklearn.datasets.setup.numpy",
    "sklearn.datasets.setup.os"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.setup.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.datasets.setup.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "sklearn.datasets.setup.setup": {
  "data": {
   "shadows": "numpy.distutils.core.setup"
  },
  "type": "import"
 },
 "sklearn.datasets.species_distributions": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "sklearn.datasets.species_distributions.DIRECTORY_URL"
   ]
  },
  "type": "module"
 },
 "sklearn.datasets.species_distributions.Bunch": {
  "data": {
   "shadows": "sklearn.datasets.base.Bunch"
  },
  "type": "import"
 },
 "sklearn.datasets.species_distributions.BytesIO": {
  "data": {
   "shadows": "io.BytesIO"
  },
  "type": "import"
 },
 "sklearn.datasets.species_distributions.COVERAGES_URL": {
  "data": {
   "lineno": 60
  },
  "type": "constant"
 },
 "sklearn.datasets.species_distributions.DATA_ARCHIVE_NAME": {
  "data": {
   "lineno": 62
  },
  "type": "constant"
 },
 "sklearn.datasets.species_distributions.DIRECTORY_URL": {
  "data": {
   "lineno": 57
  },
  "type": "constant"
 },
 "sklearn.datasets.species_distributions.PY2": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "sklearn.datasets.species_distributions.SAMPLES_URL": {
  "data": {
   "lineno": 59
  },
  "type": "constant"
 },
 "sklearn.datasets.species_distributions._load_coverage": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "dict",
    "float",
    "int",
    "make_tuple",
    "numpy.int16",
    "numpy.loadtxt",
    "range"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.species_distributions._load_csv": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "numpy.loadtxt",
    "sklearn.datasets.species_distributions.PY2"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.species_distributions._pkl_filepath": {
  "data": {
   "shadows": "sklearn.datasets.base._pkl_filepath"
  },
  "type": "import"
 },
 "sklearn.datasets.species_distributions.construct_grids": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.species_distributions.exists": {
  "data": {
   "shadows": "os.path.exists"
  },
  "type": "import"
 },
 "sklearn.datasets.species_distributions.fetch_species_distributions": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "dict",
    "io.BytesIO",
    "numpy.asarray",
    "numpy.int16",
    "numpy.load",
    "os.makedirs",
    "os.path.exists",
    "print",
    "sklearn.datasets.base.Bunch",
    "sklearn.datasets.base._pkl_filepath",
    "sklearn.datasets.base.get_data_home",
    "sklearn.datasets.species_distributions.COVERAGES_URL",
    "sklearn.datasets.species_distributions.DATA_ARCHIVE_NAME",
    "sklearn.datasets.species_distributions.SAMPLES_URL",
    "sklearn.datasets.species_distributions._load_coverage",
    "sklearn.datasets.species_distributions._load_csv",
    "sklearn.externals.joblib.dump",
    "sklearn.externals.joblib.load",
    "urllib.request.urlopen"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.species_distributions.get_data_home": {
  "data": {
   "shadows": "sklearn.datasets.base.get_data_home"
  },
  "type": "import"
 },
 "sklearn.datasets.species_distributions.joblib": {
  "data": {
   "shadows": "sklearn.externals.joblib"
  },
  "type": "import"
 },
 "sklearn.datasets.species_distributions.makedirs": {
  "data": {
   "shadows": "os.makedirs"
  },
  "type": "import"
 },
 "sklearn.datasets.species_distributions.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.datasets.species_distributions.urlopen": {
  "data": {
   "shadows": "urllib.request.urlopen"
  },
  "type": "import"
 },
 "sklearn.datasets.svmlight_format": {
  "data": {},
  "type": "module"
 },
 "sklearn.datasets.svmlight_format.BZ2File": {
  "data": {
   "shadows": "bz2.BZ2File"
  },
  "type": "import"
 },
 "sklearn.datasets.svmlight_format._dump_svmlight": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "b",
    "hasattr",
    "int",
    "numpy.where",
    "range",
    "slice",
    "u",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.svmlight_format._gen_open": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "TypeError",
    "bz2.BZ2File",
    "int",
    "isinstance",
    "open",
    "sklearn.datasets.svmlight_format.gzip",
    "sklearn.datasets.svmlight_format.io",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.svmlight_format._open_and_load": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "_load_svmlight_file",
    "contextlib.closing",
    "frombuffer_empty",
    "hasattr",
    "numpy.asarray",
    "numpy.float64",
    "numpy.frombuffer",
    "numpy.intc",
    "sklearn.datasets.svmlight_format._gen_open"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.svmlight_format.closing": {
  "data": {
   "shadows": "contextlib.closing"
  },
  "type": "import"
 },
 "sklearn.datasets.svmlight_format.dump_svmlight_file": {
  "data": {
   "lineno": 328,
   "symbols_in_volume": [
    "ValueError",
    "bytes",
    "check_array",
    "hasattr",
    "isinstance",
    "numpy.asarray",
    "open",
    "sklearn.datasets.svmlight_format._dump_svmlight"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.svmlight_format.gzip": {
  "data": {
   "shadows": "gzip"
  },
  "type": "import"
 },
 "sklearn.datasets.svmlight_format.io": {
  "data": {
   "shadows": "io"
  },
  "type": "import"
 },
 "sklearn.datasets.svmlight_format.load_svmlight_file": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "numpy.float64",
    "sklearn.datasets.svmlight_format.load_svmlight_files",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.svmlight_format.load_svmlight_files": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "ValueError",
    "all",
    "bool",
    "max",
    "numpy.float64",
    "numpy.min",
    "scipy.sparse.csr_matrix",
    "sklearn.datasets.svmlight_format._open_and_load"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.svmlight_format.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.datasets.svmlight_format.os.path": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "sklearn.datasets.svmlight_format.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.datasets.tests": {
  "data": {},
  "type": "module"
 },
 "sklearn.datasets.tests.test_20news": {
  "data": {},
  "type": "module"
 },
 "sklearn.datasets.tests.test_20news.SkipTest": {
  "data": {
   "shadows": "sklearn.utils.testing.SkipTest"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_20news.assert_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_20news.assert_true": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_true"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_20news.datasets": {
  "data": {
   "shadows": "sklearn.datasets"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_20news.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_20news.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_20news.test_20news": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "IOError",
    "len",
    "numpy.unique",
    "numpy.where",
    "sklearn.datasets.fetch_20newsgroups",
    "sklearn.utils.testing.SkipTest",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_20news.test_20news_length_consistency": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "IOError",
    "len",
    "sklearn.datasets.fetch_20newsgroups",
    "sklearn.utils.testing.SkipTest",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_20news.test_20news_vectorized": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "numpy.float64",
    "scipy.sparse.isspmatrix_csr",
    "sklearn.datasets.fetch_20newsgroups_vectorized",
    "sklearn.utils.testing.SkipTest",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_base": {
  "data": {
   "symbols_in_volume": [
    "sklearn.datasets.tests.test_base.tempfile"
   ]
  },
  "type": "module"
 },
 "sklearn.datasets.tests.test_base.Bunch": {
  "data": {
   "shadows": "sklearn.datasets.base.Bunch"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_base.DATA_HOME": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "sklearn.datasets.tests.test_base.LOAD_FILES_ROOT": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "sklearn.datasets.tests.test_base.TEST_CATEGORY_DIR1": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "sklearn.datasets.tests.test_base.TEST_CATEGORY_DIR2": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "sklearn.datasets.tests.test_base._remove_dir": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "sklearn.datasets.tests.test_base.os",
    "sklearn.datasets.tests.test_base.shutil"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_base.assert_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_base.assert_false": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_false"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_base.assert_raises": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_base.assert_true": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_true"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_base.b": {
  "data": {
   "shadows": "sklearn.externals.six.b"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_base.clear_data_home": {
  "data": {
   "shadows": "sklearn.datasets.clear_data_home"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_base.dumps": {
  "data": {
   "shadows": "pickle.dumps"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_base.get_data_home": {
  "data": {
   "shadows": "sklearn.datasets.get_data_home"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_base.imread": {
  "data": {
   "shadows": "scipy.misc.pilutil.imread"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_base.load_boston": {
  "data": {
   "shadows": "sklearn.datasets.load_boston"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_base.load_breast_cancer": {
  "data": {
   "shadows": "sklearn.datasets.load_breast_cancer"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_base.load_diabetes": {
  "data": {
   "shadows": "sklearn.datasets.load_diabetes"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_base.load_digits": {
  "data": {
   "shadows": "sklearn.datasets.load_digits"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_base.load_files": {
  "data": {
   "shadows": "sklearn.datasets.load_files"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_base.load_iris": {
  "data": {
   "shadows": "sklearn.datasets.load_iris"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_base.load_linnerud": {
  "data": {
   "shadows": "sklearn.datasets.load_linnerud"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_base.load_sample_image": {
  "data": {
   "shadows": "sklearn.datasets.load_sample_image"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_base.load_sample_images": {
  "data": {
   "shadows": "sklearn.datasets.load_sample_images"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_base.loads": {
  "data": {
   "shadows": "pickle.loads"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_base.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_base.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_base.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_base.setup_load_files": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "sklearn.datasets.tests.test_base.LOAD_FILES_ROOT",
    "sklearn.datasets.tests.test_base.TEST_CATEGORY_DIR1",
    "sklearn.datasets.tests.test_base.TEST_CATEGORY_DIR2",
    "sklearn.datasets.tests.test_base.tempfile",
    "sklearn.externals.six.b"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_base.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_base.teardown_load_files": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "sklearn.datasets.tests.test_base.TEST_CATEGORY_DIR1",
    "sklearn.datasets.tests.test_base.TEST_CATEGORY_DIR2",
    "sklearn.datasets.tests.test_base._remove_dir"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_base.teardown_module": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "sklearn.datasets.tests.test_base.DATA_HOME",
    "sklearn.datasets.tests.test_base.LOAD_FILES_ROOT",
    "sklearn.datasets.tests.test_base._remove_dir"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_base.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_base.test_bunch_pickle_generated_with_0_16_and_read_with_0_17": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "pickle.dumps",
    "pickle.loads",
    "sklearn.datasets.base.Bunch",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_base.test_data_home": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "sklearn.datasets.clear_data_home",
    "sklearn.datasets.get_data_home",
    "sklearn.datasets.tests.test_base.DATA_HOME",
    "sklearn.datasets.tests.test_base.os",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_false",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_base.test_default_empty_load_files": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "len",
    "sklearn.datasets.load_files",
    "sklearn.datasets.tests.test_base.LOAD_FILES_ROOT",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_base.test_default_load_files": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "len",
    "sklearn.datasets.load_files",
    "sklearn.datasets.tests.test_base.LOAD_FILES_ROOT",
    "sklearn.datasets.tests.test_base.nose",
    "sklearn.datasets.tests.test_base.setup_load_files",
    "sklearn.datasets.tests.test_base.teardown_load_files",
    "sklearn.externals.six.b",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_base.test_load_boston": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "sklearn.datasets.load_boston",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_base.test_load_breast_cancer": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "sklearn.datasets.load_breast_cancer",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_base.test_load_diabetes": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "sklearn.datasets.load_diabetes",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_base.test_load_digits": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "sklearn.datasets.load_digits",
    "sklearn.datasets.tests.test_base.numpy",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_base.test_load_digits_n_class_lt_10": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "sklearn.datasets.load_digits",
    "sklearn.datasets.tests.test_base.numpy",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_base.test_load_files_w_categories_desc_and_encoding": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "len",
    "sklearn.datasets.load_files",
    "sklearn.datasets.tests.test_base.LOAD_FILES_ROOT",
    "sklearn.datasets.tests.test_base.TEST_CATEGORY_DIR1",
    "sklearn.datasets.tests.test_base.nose",
    "sklearn.datasets.tests.test_base.os",
    "sklearn.datasets.tests.test_base.setup_load_files",
    "sklearn.datasets.tests.test_base.teardown_load_files",
    "sklearn.externals.six.u",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_base.test_load_files_wo_load_content": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "len",
    "sklearn.datasets.load_files",
    "sklearn.datasets.tests.test_base.LOAD_FILES_ROOT",
    "sklearn.datasets.tests.test_base.nose",
    "sklearn.datasets.tests.test_base.setup_load_files",
    "sklearn.datasets.tests.test_base.teardown_load_files",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_base.test_load_iris": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "sklearn.datasets.load_iris",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_base.test_load_linnerud": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "len",
    "sklearn.datasets.load_linnerud",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_base.test_load_missing_sample_image_error": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "AttributeError",
    "ImportError",
    "sklearn.datasets.load_sample_image",
    "sklearn.datasets.tests.test_base.warnings",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_base.test_load_sample_image": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "ImportError",
    "sklearn.datasets.load_sample_image",
    "sklearn.datasets.tests.test_base.warnings",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_base.test_load_sample_images": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "ImportError",
    "len",
    "sklearn.datasets.load_sample_images",
    "sklearn.datasets.tests.test_base.warnings",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_base.test_loads_dumps_bunch": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "pickle.dumps",
    "pickle.loads",
    "sklearn.datasets.base.Bunch",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_base.u": {
  "data": {
   "shadows": "sklearn.externals.six.u"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_base.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_covtype": {
  "data": {},
  "type": "module"
 },
 "sklearn.datasets.tests.test_covtype.SkipTest": {
  "data": {
   "shadows": "sklearn.utils.testing.SkipTest"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_covtype.assert_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_covtype.errno": {
  "data": {
   "shadows": "errno"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_covtype.fetch": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "sklearn.datasets.fetch_covtype"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_covtype.fetch_covtype": {
  "data": {
   "shadows": "sklearn.datasets.fetch_covtype"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_covtype.test_fetch": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "IOError",
    "sklearn.datasets.tests.test_covtype.errno",
    "sklearn.datasets.tests.test_covtype.fetch",
    "sklearn.utils.testing.SkipTest",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_lfw": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "scipy.misc.pilutil.imsave",
    "sklearn.datasets.tests.test_lfw.SCIKIT_LEARN_DATA",
    "sklearn.datasets.tests.test_lfw.os",
    "sklearn.datasets.tests.test_lfw.tempfile"
   ]
  },
  "type": "module"
 },
 "sklearn.datasets.tests.test_lfw.FAKE_NAMES": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "sklearn.datasets.tests.test_lfw.LFW_HOME": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "sklearn.datasets.tests.test_lfw.SCIKIT_LEARN_DATA": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "sklearn.datasets.tests.test_lfw.SCIKIT_LEARN_EMPTY_DATA": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "sklearn.datasets.tests.test_lfw.SkipTest": {
  "data": {
   "shadows": "sklearn.utils.testing.SkipTest"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_lfw.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_lfw.assert_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_lfw.assert_warns_message": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_warns_message"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_lfw.fetch_lfw_pairs": {
  "data": {
   "shadows": "sklearn.datasets.fetch_lfw_pairs"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_lfw.fetch_lfw_people": {
  "data": {
   "shadows": "sklearn.datasets.fetch_lfw_people"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_lfw.imsave": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "sklearn.datasets.tests.test_lfw.load_lfw_pairs": {
  "data": {
   "shadows": "sklearn.datasets.load_lfw_pairs"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_lfw.load_lfw_people": {
  "data": {
   "shadows": "sklearn.datasets.load_lfw_people"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_lfw.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_lfw.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_lfw.raises": {
  "data": {
   "shadows": "sklearn.utils.testing.raises"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_lfw.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_lfw.setup_module": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "ImportError",
    "numpy.arange",
    "numpy.random.RandomState",
    "open",
    "range",
    "scipy.misc.pilutil.imsave",
    "sklearn.datasets.tests.test_lfw.FAKE_NAMES",
    "sklearn.datasets.tests.test_lfw.LFW_HOME",
    "sklearn.datasets.tests.test_lfw.os",
    "sklearn.datasets.tests.test_lfw.random",
    "sklearn.externals.six.b",
    "sklearn.externals.six.iteritems",
    "sklearn.utils.testing.SkipTest"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_lfw.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_lfw.six": {
  "data": {
   "shadows": "sklearn.externals.six"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_lfw.teardown_module": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "sklearn.datasets.tests.test_lfw.SCIKIT_LEARN_DATA",
    "sklearn.datasets.tests.test_lfw.SCIKIT_LEARN_EMPTY_DATA",
    "sklearn.datasets.tests.test_lfw.os",
    "sklearn.datasets.tests.test_lfw.shutil"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_lfw.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_lfw.test_load_empty_lfw_pairs": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "IOError",
    "sklearn.datasets.fetch_lfw_pairs",
    "sklearn.datasets.tests.test_lfw.SCIKIT_LEARN_EMPTY_DATA",
    "sklearn.utils.testing.raises"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_lfw.test_load_empty_lfw_people": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "IOError",
    "sklearn.datasets.fetch_lfw_people",
    "sklearn.datasets.tests.test_lfw.SCIKIT_LEARN_EMPTY_DATA",
    "sklearn.utils.testing.raises"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_lfw.test_load_fake_lfw_pairs": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "sklearn.datasets.fetch_lfw_pairs",
    "sklearn.datasets.tests.test_lfw.SCIKIT_LEARN_DATA",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_lfw.test_load_fake_lfw_people": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "sklearn.datasets.fetch_lfw_people",
    "sklearn.datasets.tests.test_lfw.SCIKIT_LEARN_DATA",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_lfw.test_load_fake_lfw_people_too_restrictive": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.datasets.fetch_lfw_people",
    "sklearn.datasets.tests.test_lfw.SCIKIT_LEARN_DATA",
    "sklearn.utils.testing.raises"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_lfw.test_load_lfw_pairs_deprecation": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "DeprecationWarning",
    "sklearn.datasets.load_lfw_pairs",
    "sklearn.datasets.tests.test_lfw.SCIKIT_LEARN_DATA",
    "sklearn.utils.testing.assert_warns_message"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_lfw.test_load_lfw_people_deprecation": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "DeprecationWarning",
    "sklearn.datasets.load_lfw_people",
    "sklearn.datasets.tests.test_lfw.SCIKIT_LEARN_DATA",
    "sklearn.utils.testing.assert_warns_message"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_mldata": {
  "data": {},
  "type": "module"
 },
 "sklearn.datasets.tests.test_mldata.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_mldata.assert_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_mldata.assert_in": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_in"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_mldata.assert_not_in": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_not_in"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_mldata.assert_raises": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_mldata.datasets": {
  "data": {
   "shadows": "sklearn.datasets"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_mldata.fetch_mldata": {
  "data": {
   "shadows": "sklearn.datasets.fetch_mldata"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_mldata.mldata_filename": {
  "data": {
   "shadows": "sklearn.datasets.mldata_filename"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_mldata.mock_mldata_urlopen": {
  "data": {
   "shadows": "sklearn.utils.testing.mock_mldata_urlopen"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_mldata.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_mldata.setup_tmpdata": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "sklearn.datasets.tests.test_mldata.os",
    "sklearn.datasets.tests.test_mldata.tempfile",
    "sklearn.datasets.tests.test_mldata.tmpdir"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_mldata.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_mldata.sp": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_mldata.teardown_tmpdata": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "sklearn.datasets.tests.test_mldata.shutil",
    "sklearn.datasets.tests.test_mldata.tmpdir"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_mldata.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_mldata.test_download": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "scipy.ones",
    "sklearn.datasets.fetch_mldata",
    "sklearn.datasets.mldata.HTTPError",
    "sklearn.datasets.mldata.urlopen",
    "sklearn.datasets.tests.test_mldata.setup_tmpdata",
    "sklearn.datasets.tests.test_mldata.teardown_tmpdata",
    "sklearn.datasets.tests.test_mldata.tmpdir",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_in",
    "sklearn.utils.testing.assert_raises",
    "sklearn.utils.testing.mock_mldata_urlopen",
    "sklearn.utils.testing.with_setup"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_mldata.test_fetch_multiple_column": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "scipy.arange",
    "scipy.array",
    "sklearn.datasets.fetch_mldata",
    "sklearn.datasets.mldata.urlopen",
    "sklearn.datasets.tests.test_mldata.setup_tmpdata",
    "sklearn.datasets.tests.test_mldata.teardown_tmpdata",
    "sklearn.datasets.tests.test_mldata.tmpdir",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_in",
    "sklearn.utils.testing.assert_not_in",
    "sklearn.utils.testing.mock_mldata_urlopen",
    "sklearn.utils.testing.with_setup"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_mldata.test_fetch_one_column": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "scipy.arange",
    "sklearn.datasets.fetch_mldata",
    "sklearn.datasets.mldata.urlopen",
    "sklearn.datasets.tests.test_mldata.setup_tmpdata",
    "sklearn.datasets.tests.test_mldata.teardown_tmpdata",
    "sklearn.datasets.tests.test_mldata.tmpdir",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_in",
    "sklearn.utils.testing.assert_not_in",
    "sklearn.utils.testing.mock_mldata_urlopen",
    "sklearn.utils.testing.with_setup"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_mldata.test_mldata_filename": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "sklearn.datasets.mldata_filename",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_mldata.tmpdir": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "sklearn.datasets.tests.test_mldata.with_setup": {
  "data": {
   "shadows": "sklearn.utils.testing.with_setup"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_rcv1": {
  "data": {},
  "type": "module"
 },
 "sklearn.datasets.tests.test_rcv1.SkipTest": {
  "data": {
   "shadows": "sklearn.utils.testing.SkipTest"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_rcv1.assert_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_rcv1.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_rcv1.assert_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_rcv1.assert_true": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_true"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_rcv1.errno": {
  "data": {
   "shadows": "errno"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_rcv1.fetch_rcv1": {
  "data": {
   "shadows": "sklearn.datasets.fetch_rcv1"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_rcv1.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_rcv1.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_rcv1.test_fetch_rcv1": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "IOError",
    "len",
    "numpy.sort",
    "scipy.sparse.issparse",
    "sklearn.datasets.fetch_rcv1",
    "sklearn.datasets.tests.test_rcv1.errno",
    "sklearn.utils.testing.SkipTest",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_true",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_samples_generator": {
  "data": {},
  "type": "module"
 },
 "sklearn.datasets.tests.test_samples_generator.assert_all_finite": {
  "data": {
   "shadows": "sklearn.utils.validation.assert_all_finite"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_samples_generator.assert_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_samples_generator.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_samples_generator.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_samples_generator.assert_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_samples_generator.assert_less": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_less"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_samples_generator.assert_raises": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_samples_generator.assert_true": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_true"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_samples_generator.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_samples_generator.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_samples_generator.eig": {
  "data": {
   "shadows": "numpy.linalg.eig"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_samples_generator.make_biclusters": {
  "data": {
   "shadows": "sklearn.datasets.make_biclusters"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_samples_generator.make_blobs": {
  "data": {
   "shadows": "sklearn.datasets.make_blobs"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_samples_generator.make_checkerboard": {
  "data": {
   "shadows": "sklearn.datasets.make_checkerboard"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_samples_generator.make_classification": {
  "data": {
   "shadows": "sklearn.datasets.make_classification"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_samples_generator.make_friedman1": {
  "data": {
   "shadows": "sklearn.datasets.make_friedman1"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_samples_generator.make_friedman2": {
  "data": {
   "shadows": "sklearn.datasets.make_friedman2"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_samples_generator.make_friedman3": {
  "data": {
   "shadows": "sklearn.datasets.make_friedman3"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_samples_generator.make_hastie_10_2": {
  "data": {
   "shadows": "sklearn.datasets.make_hastie_10_2"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_samples_generator.make_low_rank_matrix": {
  "data": {
   "shadows": "sklearn.datasets.make_low_rank_matrix"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_samples_generator.make_multilabel_classification": {
  "data": {
   "shadows": "sklearn.datasets.make_multilabel_classification"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_samples_generator.make_regression": {
  "data": {
   "shadows": "sklearn.datasets.make_regression"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_samples_generator.make_s_curve": {
  "data": {
   "shadows": "sklearn.datasets.make_s_curve"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_samples_generator.make_sparse_coded_signal": {
  "data": {
   "shadows": "sklearn.datasets.make_sparse_coded_signal"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_samples_generator.make_sparse_uncorrelated": {
  "data": {
   "shadows": "sklearn.datasets.make_sparse_uncorrelated"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_samples_generator.make_spd_matrix": {
  "data": {
   "shadows": "sklearn.datasets.make_spd_matrix"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_samples_generator.make_swiss_roll": {
  "data": {
   "shadows": "sklearn.datasets.make_swiss_roll"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_samples_generator.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_samples_generator.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_samples_generator.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_samples_generator.svd": {
  "data": {
   "shadows": "numpy.linalg.svd"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_samples_generator.test_make_biclusters": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": [
    "sklearn.datasets.make_biclusters",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.validation.assert_all_finite"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_samples_generator.test_make_blobs": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "enumerate",
    "numpy.array",
    "numpy.unique",
    "sklearn.datasets.make_blobs",
    "sklearn.externals.six.moves.zip",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_samples_generator.test_make_checkerboard": {
  "data": {
   "lineno": 344,
   "symbols_in_volume": [
    "sklearn.datasets.make_checkerboard",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.validation.assert_all_finite"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_samples_generator.test_make_classification": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "numpy.unique",
    "sklearn.datasets.make_classification",
    "sklearn.utils.testing.assert_equal",
    "sum"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_samples_generator.test_make_classification_informative_features": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "AssertionError",
    "ValueError",
    "collections.defaultdict",
    "functools.partial",
    "len",
    "make",
    "numpy.abs",
    "numpy.bincount",
    "numpy.sign",
    "numpy.unique",
    "range",
    "set",
    "sklearn.datasets.make_classification",
    "sklearn.externals.six.moves.zip",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_samples_generator.test_make_friedman1": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "numpy.pi",
    "numpy.sin",
    "sklearn.datasets.make_friedman1",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_samples_generator.test_make_friedman2": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "sklearn.datasets.make_friedman2",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_samples_generator.test_make_friedman3": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "numpy.arctan",
    "sklearn.datasets.make_friedman3",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_samples_generator.test_make_hastie_10_2": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "numpy.unique",
    "sklearn.datasets.make_hastie_10_2",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_samples_generator.test_make_low_rank_matrix": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "numpy.linalg.svd",
    "sklearn.datasets.make_low_rank_matrix",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_less",
    "sum"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_samples_generator.test_make_multilabel_classification_return_indicator": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.sum",
    "sklearn.datasets.make_multilabel_classification",
    "sklearn.externals.six.moves.zip",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_samples_generator.test_make_multilabel_classification_return_indicator_sparse": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "scipy.sparse.issparse",
    "sklearn.datasets.make_multilabel_classification",
    "sklearn.externals.six.moves.zip",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_samples_generator.test_make_multilabel_classification_return_sequences": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "len",
    "max",
    "min",
    "sklearn.datasets.make_multilabel_classification",
    "sklearn.externals.six.moves.zip",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_samples_generator.test_make_regression": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.std",
    "sklearn.datasets.make_regression",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_equal",
    "sum"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_samples_generator.test_make_regression_multitarget": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.std",
    "sklearn.datasets.make_regression",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal",
    "sum"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_samples_generator.test_make_s_curve": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": [
    "numpy.cos",
    "numpy.sign",
    "numpy.sin",
    "sklearn.datasets.make_s_curve",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_samples_generator.test_make_sparse_coded_signal": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "len",
    "numpy.dot",
    "numpy.flatnonzero",
    "numpy.ones",
    "numpy.sqrt",
    "sklearn.datasets.make_sparse_coded_signal",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_samples_generator.test_make_sparse_uncorrelated": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": [
    "sklearn.datasets.make_sparse_uncorrelated",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_samples_generator.test_make_spd_matrix": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.linalg.eig",
    "sklearn.datasets.make_spd_matrix",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_samples_generator.test_make_swiss_roll": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "numpy.cos",
    "numpy.sin",
    "sklearn.datasets.make_swiss_roll",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_samples_generator.zip": {
  "data": {
   "shadows": "sklearn.externals.six.moves.zip"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_svmlight_format": {
  "data": {
   "symbols_in_volume": [
    "sklearn.datasets.tests.test_svmlight_format.currdir",
    "sklearn.datasets.tests.test_svmlight_format.os"
   ]
  },
  "type": "module"
 },
 "sklearn.datasets.tests.test_svmlight_format.BZ2File": {
  "data": {
   "shadows": "bz2.BZ2File"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_svmlight_format.BytesIO": {
  "data": {
   "shadows": "io.BytesIO"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_svmlight_format.NamedTemporaryFile": {
  "data": {
   "shadows": "tempfile.NamedTemporaryFile"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_svmlight_format.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_svmlight_format.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_svmlight_format.assert_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_svmlight_format.assert_in": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_in"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_svmlight_format.assert_raises": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_svmlight_format.b": {
  "data": {
   "shadows": "sklearn.externals.six.b"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_svmlight_format.currdir": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "sklearn.datasets.tests.test_svmlight_format.datafile": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "sklearn.datasets.tests.test_svmlight_format.dump_svmlight_file": {
  "data": {
   "shadows": "sklearn.datasets.dump_svmlight_file"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_svmlight_format.gzip": {
  "data": {
   "shadows": "gzip"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_svmlight_format.invalidfile": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "sklearn.datasets.tests.test_svmlight_format.invalidfile2": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "sklearn.datasets.tests.test_svmlight_format.load_svmlight_file": {
  "data": {
   "shadows": "sklearn.datasets.load_svmlight_file"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_svmlight_format.load_svmlight_files": {
  "data": {
   "shadows": "sklearn.datasets.load_svmlight_files"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_svmlight_format.multifile": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "sklearn.datasets.tests.test_svmlight_format.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_svmlight_format.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_svmlight_format.raises": {
  "data": {
   "shadows": "sklearn.utils.testing.raises"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_svmlight_format.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_svmlight_format.sklearn": {
  "data": {
   "shadows": "sklearn"
  },
  "type": "import"
 },
 "sklearn.datasets.tests.test_svmlight_format.test_dump": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "TypeError",
    "io.BytesIO",
    "numpy.arange",
    "numpy.float32",
    "numpy.float64",
    "numpy.int32",
    "sklearn.datasets.dump_svmlight_file",
    "sklearn.datasets.load_svmlight_file",
    "sklearn.datasets.tests.test_svmlight_format.datafile",
    "sklearn.datasets.tests.test_svmlight_format.sklearn",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_in",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_svmlight_format.test_dump_comment": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": [
    "UnicodeDecodeError",
    "ValueError",
    "io.BytesIO",
    "sklearn.datasets.dump_svmlight_file",
    "sklearn.datasets.load_svmlight_file",
    "sklearn.datasets.tests.test_svmlight_format.datafile",
    "sklearn.externals.six.b",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_svmlight_format.test_dump_concise": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "io.BytesIO",
    "sklearn.datasets.dump_svmlight_file",
    "sklearn.datasets.load_svmlight_file",
    "sklearn.externals.six.b",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_svmlight_format.test_dump_invalid": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": [
    "ValueError",
    "io.BytesIO",
    "sklearn.datasets.dump_svmlight_file",
    "sklearn.datasets.load_svmlight_file",
    "sklearn.datasets.tests.test_svmlight_format.datafile",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_svmlight_format.test_dump_multilabel": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "io.BytesIO",
    "sklearn.datasets.dump_svmlight_file",
    "sklearn.externals.six.b",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_svmlight_format.test_dump_query_id": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": [
    "io.BytesIO",
    "numpy.arange",
    "sklearn.datasets.dump_svmlight_file",
    "sklearn.datasets.load_svmlight_file",
    "sklearn.datasets.tests.test_svmlight_format.datafile",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_svmlight_format.test_invalid_filename": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "IOError",
    "sklearn.datasets.load_svmlight_file",
    "sklearn.utils.testing.raises"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_svmlight_format.test_load_compressed": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "bz2.BZ2File",
    "open",
    "sklearn.datasets.load_svmlight_file",
    "sklearn.datasets.tests.test_svmlight_format.datafile",
    "sklearn.datasets.tests.test_svmlight_format.gzip",
    "sklearn.datasets.tests.test_svmlight_format.os",
    "sklearn.datasets.tests.test_svmlight_format.shutil",
    "sklearn.utils.testing.assert_array_equal",
    "tempfile.NamedTemporaryFile"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_svmlight_format.test_load_invalid_file": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.datasets.load_svmlight_file",
    "sklearn.datasets.tests.test_svmlight_format.invalidfile",
    "sklearn.utils.testing.raises"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_svmlight_format.test_load_invalid_file2": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.datasets.load_svmlight_files",
    "sklearn.datasets.tests.test_svmlight_format.datafile",
    "sklearn.datasets.tests.test_svmlight_format.invalidfile",
    "sklearn.utils.testing.raises"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_svmlight_format.test_load_invalid_order_file": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.datasets.load_svmlight_file",
    "sklearn.datasets.tests.test_svmlight_format.invalidfile2",
    "sklearn.utils.testing.raises"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_svmlight_format.test_load_svmlight_file": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "sklearn.datasets.load_svmlight_file",
    "sklearn.datasets.tests.test_svmlight_format.datafile",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_svmlight_format.test_load_svmlight_file_fd": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "sklearn.datasets.load_svmlight_file",
    "sklearn.datasets.tests.test_svmlight_format.datafile",
    "sklearn.datasets.tests.test_svmlight_format.os",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_svmlight_format.test_load_svmlight_file_multilabel": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "sklearn.datasets.load_svmlight_file",
    "sklearn.datasets.tests.test_svmlight_format.multifile",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_svmlight_format.test_load_svmlight_file_n_features": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.datasets.load_svmlight_file",
    "sklearn.datasets.tests.test_svmlight_format.datafile",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_svmlight_format.test_load_svmlight_files": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.float64",
    "sklearn.datasets.load_svmlight_files",
    "sklearn.datasets.tests.test_svmlight_format.datafile",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_svmlight_format.test_load_with_qid": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "io.BytesIO",
    "sklearn.datasets.load_svmlight_file",
    "sklearn.datasets.load_svmlight_files",
    "sklearn.externals.six.b",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_svmlight_format.test_load_zero_based": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "ValueError",
    "io.BytesIO",
    "sklearn.datasets.load_svmlight_file",
    "sklearn.externals.six.b",
    "sklearn.utils.testing.raises"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_svmlight_format.test_load_zero_based_auto": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "io.BytesIO",
    "sklearn.datasets.load_svmlight_file",
    "sklearn.datasets.load_svmlight_files",
    "sklearn.externals.six.b",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.tests.test_svmlight_format.test_not_a_filename": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "TypeError",
    "sklearn.datasets.load_svmlight_file",
    "sklearn.utils.testing.raises"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.twenty_newsgroups": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "sklearn.datasets.twenty_newsgroups.logging",
    "sklearn.datasets.twenty_newsgroups.re"
   ]
  },
  "type": "module"
 },
 "sklearn.datasets.twenty_newsgroups.ARCHIVE_NAME": {
  "data": {
   "lineno": 69
  },
  "type": "constant"
 },
 "sklearn.datasets.twenty_newsgroups.CACHE_NAME": {
  "data": {
   "lineno": 70
  },
  "type": "constant"
 },
 "sklearn.datasets.twenty_newsgroups.TEST_FOLDER": {
  "data": {
   "lineno": 72
  },
  "type": "constant"
 },
 "sklearn.datasets.twenty_newsgroups.TRAIN_FOLDER": {
  "data": {
   "lineno": 71
  },
  "type": "constant"
 },
 "sklearn.datasets.twenty_newsgroups.URL": {
  "data": {
   "lineno": 67
  },
  "type": "constant"
 },
 "sklearn.datasets.twenty_newsgroups._QUOTE_RE": {
  "data": {
   "lineno": 119
  },
  "type": "constant"
 },
 "sklearn.datasets.twenty_newsgroups.codecs": {
  "data": {
   "shadows": "codecs"
  },
  "type": "import"
 },
 "sklearn.datasets.twenty_newsgroups.download_20newsgroups": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "dict",
    "load_files",
    "open",
    "sklearn.datasets.twenty_newsgroups.ARCHIVE_NAME",
    "sklearn.datasets.twenty_newsgroups.TEST_FOLDER",
    "sklearn.datasets.twenty_newsgroups.TRAIN_FOLDER",
    "sklearn.datasets.twenty_newsgroups.URL",
    "sklearn.datasets.twenty_newsgroups.codecs",
    "sklearn.datasets.twenty_newsgroups.logger",
    "sklearn.datasets.twenty_newsgroups.os",
    "sklearn.datasets.twenty_newsgroups.pickle",
    "sklearn.datasets.twenty_newsgroups.shutil",
    "sklearn.datasets.twenty_newsgroups.tarfile",
    "urllib2.urlopen"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.twenty_newsgroups.fetch_20newsgroups": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "Exception",
    "IOError",
    "ValueError",
    "_pkl_filepath",
    "check_random_state",
    "get_data_home",
    "list",
    "numpy.arange",
    "numpy.array",
    "numpy.in1d",
    "numpy.searchsorted",
    "object",
    "open",
    "print",
    "sklearn.datasets.twenty_newsgroups.CACHE_NAME",
    "sklearn.datasets.twenty_newsgroups.codecs",
    "sklearn.datasets.twenty_newsgroups.download_20newsgroups",
    "sklearn.datasets.twenty_newsgroups.os",
    "sklearn.datasets.twenty_newsgroups.pickle",
    "sklearn.datasets.twenty_newsgroups.strip_newsgroup_footer",
    "sklearn.datasets.twenty_newsgroups.strip_newsgroup_header",
    "sklearn.datasets.twenty_newsgroups.strip_newsgroup_quoting",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.twenty_newsgroups.fetch_20newsgroups_vectorized": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "Bunch",
    "CountVectorizer",
    "ValueError",
    "_pkl_filepath",
    "get_data_home",
    "normalize",
    "numpy.concatenate",
    "numpy.float64",
    "numpy.int16",
    "scipy.sparse.vstack",
    "sklearn.datasets.twenty_newsgroups.fetch_20newsgroups",
    "sklearn.datasets.twenty_newsgroups.os"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.twenty_newsgroups.logger": {
  "data": {
   "lineno": 64
  },
  "type": "constant"
 },
 "sklearn.datasets.twenty_newsgroups.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "sklearn.datasets.twenty_newsgroups.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.datasets.twenty_newsgroups.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "sklearn.datasets.twenty_newsgroups.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "sklearn.datasets.twenty_newsgroups.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "sklearn.datasets.twenty_newsgroups.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "sklearn.datasets.twenty_newsgroups.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.datasets.twenty_newsgroups.strip_newsgroup_footer": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.twenty_newsgroups.strip_newsgroup_header": {
  "data": {
   "lineno": 110
  },
  "type": "function"
 },
 "sklearn.datasets.twenty_newsgroups.strip_newsgroup_quoting": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "sklearn.datasets.twenty_newsgroups._QUOTE_RE"
   ]
  },
  "type": "function"
 },
 "sklearn.datasets.twenty_newsgroups.tarfile": {
  "data": {
   "shadows": "tarfile"
  },
  "type": "import"
 },
 "sklearn.datasets.twenty_newsgroups.urlopen": {
  "data": {
   "shadows": "urllib2.urlopen"
  },
  "type": "import"
 },
 "sklearn.decomposition": {
  "data": {},
  "type": "module"
 },
 "sklearn.decomposition.__all__": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "sklearn.decomposition.base": {
  "data": {},
  "type": "module"
 },
 "sklearn.decomposition.base.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "sklearn.decomposition.base._BasePCA": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "abc.ABCMeta"
   ]
  },
  "type": "class"
 },
 "sklearn.decomposition.base._BasePCA.fit": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.base._BasePCA.get_covariance": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "len",
    "numpy.dot",
    "numpy.maximum",
    "numpy.newaxis",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.base._BasePCA.get_precision": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "len",
    "numpy.dot",
    "numpy.eye",
    "numpy.maximum",
    "numpy.newaxis",
    "numpy.sqrt",
    "scipy.linalg.inv"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.base._BasePCA.inverse_transform": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "fast_dot",
    "numpy.newaxis",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.base._BasePCA.transform": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "all",
    "check_array",
    "check_is_fitted",
    "fast_dot",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.base.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "sklearn.decomposition.base.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "sklearn.decomposition.base.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.decomposition.dict_learning": {
  "data": {},
  "type": "module"
 },
 "sklearn.decomposition.dict_learning.DictionaryLearning": {
  "data": {
   "lineno": 916,
   "symbols_in_volume": [
    "sklearn.decomposition.dict_learning.SparseCodingMixin"
   ]
  },
  "type": "class"
 },
 "sklearn.decomposition.dict_learning.DictionaryLearning.__init__": {
  "data": {
   "lineno": 1028
  },
  "type": "function"
 },
 "sklearn.decomposition.dict_learning.DictionaryLearning.fit": {
  "data": {
   "lineno": 1046,
   "symbols_in_volume": [
    "check_array",
    "check_random_state",
    "sklearn.decomposition.dict_learning.dict_learning"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.dict_learning.MiniBatchDictionaryLearning": {
  "data": {
   "lineno": 1082,
   "symbols_in_volume": [
    "sklearn.decomposition.dict_learning.SparseCodingMixin"
   ]
  },
  "type": "class"
 },
 "sklearn.decomposition.dict_learning.MiniBatchDictionaryLearning.__init__": {
  "data": {
   "lineno": 1194
  },
  "type": "function"
 },
 "sklearn.decomposition.dict_learning.MiniBatchDictionaryLearning.fit": {
  "data": {
   "lineno": 1213,
   "symbols_in_volume": [
    "check_array",
    "check_random_state",
    "sklearn.decomposition.dict_learning.dict_learning_online"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.dict_learning.MiniBatchDictionaryLearning.partial_fit": {
  "data": {
   "lineno": 1246,
   "symbols_in_volume": [
    "check_array",
    "check_random_state",
    "getattr",
    "hasattr",
    "len",
    "sklearn.decomposition.dict_learning.dict_learning_online"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.dict_learning.SparseCoder": {
  "data": {
   "lineno": 831,
   "symbols_in_volume": [
    "sklearn.decomposition.dict_learning.SparseCodingMixin"
   ]
  },
  "type": "class"
 },
 "sklearn.decomposition.dict_learning.SparseCoder.__init__": {
  "data": {
   "lineno": 898
  },
  "type": "function"
 },
 "sklearn.decomposition.dict_learning.SparseCoder.fit": {
  "data": {
   "lineno": 907
  },
  "type": "function"
 },
 "sklearn.decomposition.dict_learning.SparseCodingMixin": {
  "data": {
   "lineno": 776
  },
  "type": "class"
 },
 "sklearn.decomposition.dict_learning.SparseCodingMixin._set_sparse_coding_params": {
  "data": {
   "lineno": 779
  },
  "type": "function"
 },
 "sklearn.decomposition.dict_learning.SparseCodingMixin.transform": {
  "data": {
   "lineno": 791,
   "symbols_in_volume": [
    "check_array",
    "check_is_fitted",
    "numpy.empty",
    "numpy.maximum",
    "numpy.minimum",
    "sklearn.decomposition.dict_learning.sparse_encode"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.dict_learning._sparse_encode": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "Lars",
    "Lasso",
    "LassoLars",
    "ValueError",
    "float",
    "int",
    "numpy.abs",
    "numpy.dot",
    "numpy.maximum",
    "numpy.newaxis",
    "numpy.seterr",
    "numpy.sign",
    "orthogonal_mp_gram",
    "row_norms"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.dict_learning._update_dict": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": [
    "check_random_state",
    "ger",
    "len",
    "math.sqrt",
    "numpy.asfortranarray",
    "numpy.dot",
    "numpy.lib.stride_tricks.as_strided",
    "numpy.sum",
    "print",
    "range",
    "scipy.linalg.get_blas_funcs",
    "sklearn.decomposition.dict_learning.sys"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.dict_learning.as_strided": {
  "data": {
   "shadows": "numpy.lib.stride_tricks.as_strided"
  },
  "type": "import"
 },
 "sklearn.decomposition.dict_learning.ceil": {
  "data": {
   "shadows": "math.ceil"
  },
  "type": "import"
 },
 "sklearn.decomposition.dict_learning.dict_learning": {
  "data": {
   "lineno": 378,
   "symbols_in_volume": [
    "ValueError",
    "callback",
    "check_random_state",
    "cpu_count",
    "float",
    "len",
    "locals",
    "numpy.abs",
    "numpy.array",
    "numpy.c_",
    "numpy.nan",
    "numpy.newaxis",
    "numpy.r_",
    "numpy.sum",
    "numpy.zeros",
    "print",
    "range",
    "scipy.linalg.svd",
    "sklearn.decomposition.dict_learning._update_dict",
    "sklearn.decomposition.dict_learning.sparse_encode",
    "sklearn.decomposition.dict_learning.sys",
    "sklearn.decomposition.dict_learning.time"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.dict_learning.dict_learning_online": {
  "data": {
   "lineno": 549,
   "symbols_in_volume": [
    "ValueError",
    "callback",
    "check_array",
    "check_random_state",
    "cpu_count",
    "float",
    "gen_batches",
    "len",
    "locals",
    "math.ceil",
    "numpy.dot",
    "numpy.float64",
    "numpy.newaxis",
    "numpy.r_",
    "numpy.zeros",
    "print",
    "randomized_svd",
    "range",
    "sklearn.decomposition.dict_learning._update_dict",
    "sklearn.decomposition.dict_learning.itertools",
    "sklearn.decomposition.dict_learning.sparse_encode",
    "sklearn.decomposition.dict_learning.sys",
    "sklearn.decomposition.dict_learning.time",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.dict_learning.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "sklearn.decomposition.dict_learning.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "sklearn.decomposition.dict_learning.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.decomposition.dict_learning.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "sklearn.decomposition.dict_learning.sparse_encode": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "Parallel",
    "_get_n_jobs",
    "check_array",
    "delayed",
    "gen_even_slices",
    "list",
    "max",
    "min",
    "numpy.dot",
    "numpy.empty",
    "numpy.newaxis",
    "sklearn.decomposition.dict_learning._sparse_encode",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.dict_learning.sqrt": {
  "data": {
   "shadows": "math.sqrt"
  },
  "type": "import"
 },
 "sklearn.decomposition.dict_learning.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "sklearn.decomposition.dict_learning.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "sklearn.decomposition.factor_analysis": {
  "data": {},
  "type": "module"
 },
 "sklearn.decomposition.factor_analysis.FactorAnalysis": {
  "data": {
   "lineno": 36
  },
  "type": "class"
 },
 "sklearn.decomposition.factor_analysis.FactorAnalysis.__init__": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.factor_analysis.FactorAnalysis.fit": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "ValueError",
    "check_array",
    "check_random_state",
    "len",
    "math.log",
    "math.sqrt",
    "my_svd",
    "numpy.array",
    "numpy.float",
    "numpy.inf",
    "numpy.log",
    "numpy.maximum",
    "numpy.mean",
    "numpy.newaxis",
    "numpy.ones",
    "numpy.pi",
    "numpy.sqrt",
    "numpy.sum",
    "numpy.var",
    "sklearn.decomposition.factor_analysis.warnings",
    "xrange"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.factor_analysis.FactorAnalysis.fit.my_svd": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "randomized_svd",
    "squared_norm"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.factor_analysis.FactorAnalysis.get_covariance": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "check_is_fitted",
    "len",
    "numpy.dot"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.factor_analysis.FactorAnalysis.get_precision": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "check_is_fitted",
    "len",
    "numpy.diag",
    "numpy.dot",
    "numpy.newaxis",
    "scipy.linalg.inv"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.factor_analysis.FactorAnalysis.score": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": [
    "numpy.mean"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.factor_analysis.FactorAnalysis.score_samples": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": [
    "check_is_fitted",
    "fast_logdet",
    "math.log",
    "numpy.dot",
    "numpy.pi",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.factor_analysis.FactorAnalysis.transform": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "check_array",
    "check_is_fitted",
    "fast_dot",
    "len",
    "numpy.dot",
    "numpy.eye",
    "scipy.linalg.inv"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.factor_analysis.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "sklearn.decomposition.factor_analysis.log": {
  "data": {
   "shadows": "math.log"
  },
  "type": "import"
 },
 "sklearn.decomposition.factor_analysis.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.decomposition.factor_analysis.sqrt": {
  "data": {
   "shadows": "math.sqrt"
  },
  "type": "import"
 },
 "sklearn.decomposition.factor_analysis.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.decomposition.fastica_": {
  "data": {},
  "type": "module"
 },
 "sklearn.decomposition.fastica_.FastICA": {
  "data": {
   "lineno": 376
  },
  "type": "class"
 },
 "sklearn.decomposition.fastica_.FastICA.__init__": {
  "data": {
   "lineno": 442,
   "symbols_in_volume": [
    "fun",
    "sklearn.decomposition.fastica_.FastICA",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.fastica_.FastICA._fit": {
  "data": {
   "lineno": 456,
   "symbols_in_volume": [
    "numpy.dot",
    "scipy.linalg.pinv",
    "sklearn.decomposition.fastica_.fastica"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.fastica_.FastICA.fit": {
  "data": {
   "lineno": 510
  },
  "type": "function"
 },
 "sklearn.decomposition.fastica_.FastICA.fit_transform": {
  "data": {
   "lineno": 495
  },
  "type": "function"
 },
 "sklearn.decomposition.fastica_.FastICA.inverse_transform": {
  "data": {
   "lineno": 550,
   "symbols_in_volume": [
    "check_array",
    "check_is_fitted",
    "fast_dot"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.fastica_.FastICA.transform": {
  "data": {
   "lineno": 526,
   "symbols_in_volume": [
    "check_array",
    "check_is_fitted",
    "fast_dot"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.fastica_.__all__": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "sklearn.decomposition.fastica_._cube": {
  "data": {
   "lineno": 143
  },
  "type": "function"
 },
 "sklearn.decomposition.fastica_._exp": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "numpy.exp"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.fastica_._gs_decorrelation": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "numpy.dot"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.fastica_._ica_def": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "fast_dot",
    "g",
    "max",
    "numpy.abs",
    "numpy.sqrt",
    "numpy.zeros",
    "range",
    "sklearn.decomposition.fastica_._gs_decorrelation"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.fastica_._ica_par": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "abs",
    "fast_dot",
    "float",
    "g",
    "max",
    "numpy.diag",
    "numpy.newaxis",
    "sklearn.decomposition.fastica_._sym_decorrelation",
    "sklearn.decomposition.fastica_.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.fastica_._logcosh": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "enumerate",
    "numpy.empty",
    "numpy.tanh"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.fastica_._sym_decorrelation": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.sqrt",
    "scipy.linalg.eigh"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.fastica_.fastica": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "as_float_array",
    "callable",
    "check_array",
    "check_random_state",
    "exc",
    "fast_dot",
    "fun",
    "g",
    "isinstance",
    "min",
    "numpy.asarray",
    "numpy.dot",
    "numpy.newaxis",
    "numpy.sqrt",
    "print",
    "scipy.linalg.svd",
    "sklearn.decomposition.fastica_._cube",
    "sklearn.decomposition.fastica_._exp",
    "sklearn.decomposition.fastica_._ica_def",
    "sklearn.decomposition.fastica_._ica_par",
    "sklearn.decomposition.fastica_._logcosh",
    "sklearn.decomposition.fastica_.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.fastica_.fastica.g": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "fun"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.fastica_.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "sklearn.decomposition.fastica_.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.decomposition.fastica_.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.decomposition.incremental_pca": {
  "data": {},
  "type": "module"
 },
 "sklearn.decomposition.incremental_pca.IncrementalPCA": {
  "data": {
   "lineno": 15
  },
  "type": "class"
 },
 "sklearn.decomposition.incremental_pca.IncrementalPCA.__init__": {
  "data": {
   "lineno": 139
  },
  "type": "function"
 },
 "sklearn.decomposition.incremental_pca.IncrementalPCA.fit": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "check_array",
    "gen_batches",
    "numpy.float32",
    "numpy.float64"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.incremental_pca.IncrementalPCA.partial_fit": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "ValueError",
    "_incremental_mean_and_var",
    "check_array",
    "hasattr",
    "numpy.float32",
    "numpy.float64",
    "numpy.mean",
    "numpy.sqrt",
    "numpy.sum",
    "numpy.vstack",
    "scipy.linalg.svd",
    "svd_flip"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.incremental_pca.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "sklearn.decomposition.incremental_pca.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.decomposition.kernel_pca": {
  "data": {},
  "type": "module"
 },
 "sklearn.decomposition.kernel_pca.KernelPCA": {
  "data": {
   "lineno": 16
  },
  "type": "class"
 },
 "sklearn.decomposition.kernel_pca.KernelPCA.__init__": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "KernelCenterer",
    "ValueError"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.kernel_pca.KernelPCA._fit_inverse_transform": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "NotImplementedError",
    "hasattr",
    "scipy.linalg.solve"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.kernel_pca.KernelPCA._fit_transform": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "eigsh",
    "min",
    "scipy.linalg.eigh"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.kernel_pca.KernelPCA._get_kernel": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "callable",
    "pairwise_kernels"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.kernel_pca.KernelPCA._pairwise": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.kernel_pca.KernelPCA.fit": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "numpy.diag",
    "numpy.dot",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.kernel_pca.KernelPCA.fit_transform": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.kernel_pca.KernelPCA.inverse_transform": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "NotFittedError",
    "numpy.dot"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.kernel_pca.KernelPCA.transform": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "check_is_fitted",
    "numpy.dot",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.kernel_pca.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "sklearn.decomposition.kernel_pca.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.decomposition.nmf": {
  "data": {},
  "type": "module"
 },
 "sklearn.decomposition.nmf.NMF": {
  "data": {
   "lineno": 808
  },
  "type": "class"
 },
 "sklearn.decomposition.nmf.NMF.__init__": {
  "data": {
   "lineno": 976,
   "symbols_in_volume": [
    "DeprecationWarning",
    "sklearn.decomposition.nmf.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.nmf.NMF.fit": {
  "data": {
   "lineno": 1055
  },
  "type": "function"
 },
 "sklearn.decomposition.nmf.NMF.fit_transform": {
  "data": {
   "lineno": 1002,
   "symbols_in_volume": [
    "check_array",
    "sklearn.decomposition.nmf._safe_compute_error",
    "sklearn.decomposition.nmf._sparseness",
    "sklearn.decomposition.nmf.non_negative_factorization"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.nmf.NMF.transform": {
  "data": {
   "lineno": 1078,
   "symbols_in_volume": [
    "check_is_fitted",
    "sklearn.decomposition.nmf.non_negative_factorization"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.nmf.ProjectedGradientNMF": {
  "data": {
   "lineno": 1112,
   "symbols_in_volume": [
    "deprecated",
    "sklearn.decomposition.nmf.NMF"
   ]
  },
  "type": "class"
 },
 "sklearn.decomposition.nmf.ProjectedGradientNMF.__init__": {
  "data": {
   "lineno": 1282,
   "symbols_in_volume": [
    "sklearn.decomposition.nmf.ProjectedGradientNMF",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.nmf._check_init": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "ValueError",
    "check_array",
    "check_non_negative",
    "numpy.max",
    "numpy.shape"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.nmf._check_string_param": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.nmf._fit_coordinate_descent": {
  "data": {
   "lineno": 488,
   "symbols_in_volume": [
    "check_array",
    "check_random_state",
    "float",
    "print",
    "range",
    "sklearn.decomposition.nmf._update_coordinate_descent"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.nmf._fit_projected_gradient": {
  "data": {
   "lineno": 398,
   "symbols_in_volume": [
    "max",
    "numpy.dot",
    "numpy.logical_or",
    "numpy.sqrt",
    "range",
    "safe_sparse_dot",
    "sklearn.decomposition.nmf._update_projected_gradient_h",
    "sklearn.decomposition.nmf._update_projected_gradient_w",
    "squared_norm"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.nmf._initialize_nmf": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "ValueError",
    "abs",
    "check_non_negative",
    "check_random_state",
    "len",
    "numpy.abs",
    "numpy.maximum",
    "numpy.minimum",
    "numpy.sqrt",
    "numpy.zeros",
    "randomized_svd",
    "range",
    "sklearn.decomposition.nmf.norm"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.nmf._nls_subproblem": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "fast_dot",
    "numpy.dot",
    "numpy.logical_or",
    "range",
    "safe_sparse_dot",
    "sklearn.decomposition.nmf.norm",
    "sklearn.decomposition.nmf.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.nmf._safe_compute_error": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "math.sqrt",
    "numpy.dot",
    "scipy.sparse.issparse",
    "sklearn.decomposition.nmf.norm",
    "sklearn.decomposition.nmf.trace_dot"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.nmf._sparseness": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "len",
    "numpy.linalg.norm",
    "numpy.sqrt",
    "sklearn.decomposition.nmf.norm"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.nmf._update_coordinate_descent": {
  "data": {
   "lineno": 457,
   "symbols_in_volume": [
    "_update_cdnmf_fast",
    "fast_dot",
    "numpy.arange",
    "numpy.asarray",
    "numpy.intp",
    "safe_sparse_dot"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.nmf._update_projected_gradient_h": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": [
    "numpy.eye",
    "numpy.ones",
    "numpy.sqrt",
    "numpy.zeros",
    "sklearn.decomposition.nmf._nls_subproblem",
    "sklearn.decomposition.nmf.safe_vstack"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.nmf._update_projected_gradient_w": {
  "data": {
   "lineno": 346,
   "symbols_in_volume": [
    "numpy.eye",
    "numpy.ones",
    "numpy.sqrt",
    "numpy.zeros",
    "sklearn.decomposition.nmf._nls_subproblem",
    "sklearn.decomposition.nmf.safe_vstack"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.nmf.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sklearn.decomposition.nmf.non_negative_factorization": {
  "data": {
   "lineno": 603,
   "symbols_in_volume": [
    "DeprecationWarning",
    "ValueError",
    "check_array",
    "check_non_negative",
    "isinstance",
    "numpy.zeros",
    "sklearn.decomposition.nmf._check_init",
    "sklearn.decomposition.nmf._check_string_param",
    "sklearn.decomposition.nmf._fit_coordinate_descent",
    "sklearn.decomposition.nmf._fit_projected_gradient",
    "sklearn.decomposition.nmf._initialize_nmf",
    "sklearn.decomposition.nmf._update_projected_gradient_w",
    "sklearn.decomposition.nmf.numbers",
    "sklearn.decomposition.nmf.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.nmf.norm": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "math.sqrt",
    "squared_norm"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.nmf.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.decomposition.nmf.numbers": {
  "data": {
   "shadows": "numbers"
  },
  "type": "import"
 },
 "sklearn.decomposition.nmf.safe_vstack": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "any",
    "numpy.vstack",
    "scipy.sparse.issparse",
    "scipy.sparse.vstack"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.nmf.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.decomposition.nmf.sqrt": {
  "data": {
   "shadows": "math.sqrt"
  },
  "type": "import"
 },
 "sklearn.decomposition.nmf.trace_dot": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "numpy.dot"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.nmf.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.decomposition.online_lda": {
  "data": {
   "symbols_in_volume": [
    "numpy.finfo",
    "numpy.float"
   ]
  },
  "type": "module"
 },
 "sklearn.decomposition.online_lda.EPS": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "sklearn.decomposition.online_lda.LatentDirichletAllocation": {
  "data": {
   "lineno": 135
  },
  "type": "class"
 },
 "sklearn.decomposition.online_lda.LatentDirichletAllocation.__init__": {
  "data": {
   "lineno": 245
  },
  "type": "function"
 },
 "sklearn.decomposition.online_lda.LatentDirichletAllocation._approx_bound": {
  "data": {
   "lineno": 565,
   "symbols_in_volume": [
    "_dirichlet_expectation_2d",
    "_loglikelihood",
    "float",
    "logsumexp",
    "numpy.dot",
    "numpy.newaxis",
    "numpy.nonzero",
    "scipy.sparse.issparse",
    "xrange"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.online_lda.LatentDirichletAllocation._approx_bound._loglikelihood": {
  "data": {
   "lineno": 591,
   "symbols_in_volume": [
    "numpy.sum",
    "scipy.special.gammaln"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.online_lda.LatentDirichletAllocation._check_non_neg_array": {
  "data": {
   "lineno": 426,
   "symbols_in_volume": [
    "check_array",
    "check_non_negative"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.online_lda.LatentDirichletAllocation._check_params": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.online_lda.LatentDirichletAllocation._e_step": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": [
    "Parallel",
    "_get_n_jobs",
    "delayed",
    "gen_even_slices",
    "numpy.vstack",
    "numpy.zeros",
    "parallel",
    "sklearn.decomposition.online_lda._update_doc_distribution",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.online_lda.LatentDirichletAllocation._em_step": {
  "data": {
   "lineno": 376,
   "symbols_in_volume": [
    "_dirichlet_expectation_2d",
    "float",
    "numpy.exp",
    "numpy.power",
    "parallel"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.online_lda.LatentDirichletAllocation._init_latent_vars": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "_dirichlet_expectation_2d",
    "check_random_state",
    "numpy.exp"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.online_lda.LatentDirichletAllocation.fit": {
  "data": {
   "lineno": 478,
   "symbols_in_volume": [
    "Parallel",
    "_get_n_jobs",
    "abs",
    "gen_batches",
    "parallel",
    "print",
    "xrange"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.online_lda.LatentDirichletAllocation.partial_fit": {
  "data": {
   "lineno": 440,
   "symbols_in_volume": [
    "Parallel",
    "ValueError",
    "_get_n_jobs",
    "gen_batches",
    "hasattr",
    "parallel"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.online_lda.LatentDirichletAllocation.perplexity": {
  "data": {
   "lineno": 661,
   "symbols_in_volume": [
    "NotFittedError",
    "ValueError",
    "float",
    "hasattr",
    "numpy.exp"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.online_lda.LatentDirichletAllocation.score": {
  "data": {
   "lineno": 641
  },
  "type": "function"
 },
 "sklearn.decomposition.online_lda.LatentDirichletAllocation.transform": {
  "data": {
   "lineno": 534,
   "symbols_in_volume": [
    "NotFittedError",
    "ValueError",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.online_lda._update_doc_distribution": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "_dirichlet_expectation_1d",
    "_dirichlet_expectation_2d",
    "mean_change",
    "numpy.dot",
    "numpy.exp",
    "numpy.nonzero",
    "numpy.ones",
    "numpy.outer",
    "numpy.zeros",
    "scipy.sparse.issparse",
    "sklearn.decomposition.online_lda.EPS",
    "xrange"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.online_lda.gammaln": {
  "data": {
   "shadows": "scipy.special.gammaln"
  },
  "type": "import"
 },
 "sklearn.decomposition.online_lda.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.decomposition.online_lda.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.decomposition.pca": {
  "data": {},
  "type": "module"
 },
 "sklearn.decomposition.pca.PCA": {
  "data": {
   "lineno": 99
  },
  "type": "class"
 },
 "sklearn.decomposition.pca.PCA.__init__": {
  "data": {
   "lineno": 205
  },
  "type": "function"
 },
 "sklearn.decomposition.pca.PCA._fit": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "ValueError",
    "as_float_array",
    "check_array",
    "min",
    "numpy.mean",
    "numpy.sum",
    "scipy.linalg.svd",
    "sklearn.decomposition.pca._infer_dimension_"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.pca.PCA.fit": {
  "data": {
   "lineno": 210
  },
  "type": "function"
 },
 "sklearn.decomposition.pca.PCA.fit_transform": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "math.sqrt"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.pca.PCA.get_covariance": {
  "data": {
   "lineno": 319,
   "symbols_in_volume": [
    "len",
    "numpy.dot",
    "numpy.maximum",
    "numpy.newaxis",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.pca.PCA.get_precision": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": [
    "len",
    "numpy.dot",
    "numpy.eye",
    "numpy.maximum",
    "scipy.linalg.inv"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.pca.PCA.inverse_transform": {
  "data": {
   "lineno": 397,
   "symbols_in_volume": [
    "check_is_fitted",
    "fast_dot",
    "numpy.newaxis",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.pca.PCA.score": {
  "data": {
   "lineno": 450,
   "symbols_in_volume": [
    "numpy.mean"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.pca.PCA.score_samples": {
  "data": {
   "lineno": 421,
   "symbols_in_volume": [
    "check_array",
    "check_is_fitted",
    "fast_logdet",
    "math.log",
    "numpy.dot",
    "numpy.pi",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.pca.PCA.transform": {
  "data": {
   "lineno": 370,
   "symbols_in_volume": [
    "check_array",
    "check_is_fitted",
    "fast_dot",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.pca.RandomizedPCA": {
  "data": {
   "lineno": 470
  },
  "type": "class"
 },
 "sklearn.decomposition.pca.RandomizedPCA.__init__": {
  "data": {
   "lineno": 549
  },
  "type": "function"
 },
 "sklearn.decomposition.pca.RandomizedPCA._fit": {
  "data": {
   "lineno": 574,
   "symbols_in_volume": [
    "as_float_array",
    "check_random_state",
    "math.sqrt",
    "numpy.atleast_2d",
    "numpy.mean",
    "numpy.newaxis",
    "numpy.var",
    "randomized_svd"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.pca.RandomizedPCA.fit": {
  "data": {
   "lineno": 557,
   "symbols_in_volume": [
    "check_array"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.pca.RandomizedPCA.fit_transform": {
  "data": {
   "lineno": 642,
   "symbols_in_volume": [
    "check_array",
    "fast_dot"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.pca.RandomizedPCA.inverse_transform": {
  "data": {
   "lineno": 660,
   "symbols_in_volume": [
    "check_is_fitted",
    "fast_dot"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.pca.RandomizedPCA.transform": {
  "data": {
   "lineno": 616,
   "symbols_in_volume": [
    "check_array",
    "check_is_fitted",
    "fast_dot"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.pca._assess_dimension_": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "math.log",
    "numpy.log",
    "numpy.pi",
    "numpy.sum",
    "range",
    "scipy.special.gammaln"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.pca._infer_dimension_": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "len",
    "numpy.empty",
    "range",
    "sklearn.decomposition.pca._assess_dimension_"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.pca.gammaln": {
  "data": {
   "shadows": "scipy.special.gammaln"
  },
  "type": "import"
 },
 "sklearn.decomposition.pca.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "sklearn.decomposition.pca.log": {
  "data": {
   "shadows": "math.log"
  },
  "type": "import"
 },
 "sklearn.decomposition.pca.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.decomposition.pca.sqrt": {
  "data": {
   "shadows": "math.sqrt"
  },
  "type": "import"
 },
 "sklearn.decomposition.setup": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.distutils.core.setup",
    "sklearn.decomposition.setup.configuration"
   ]
  },
  "type": "module"
 },
 "sklearn.decomposition.setup.Configuration": {
  "data": {
   "shadows": "numpy.distutils.misc_util.Configuration"
  },
  "type": "import"
 },
 "sklearn.decomposition.setup.configuration": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "numpy.distutils.misc_util.Configuration",
    "sklearn.decomposition.setup.numpy",
    "sklearn.decomposition.setup.os"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.setup.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.decomposition.setup.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "sklearn.decomposition.setup.setup": {
  "data": {
   "shadows": "numpy.distutils.core.setup"
  },
  "type": "import"
 },
 "sklearn.decomposition.sparse_pca": {
  "data": {},
  "type": "module"
 },
 "sklearn.decomposition.sparse_pca.MiniBatchSparsePCA": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "sklearn.decomposition.sparse_pca.SparsePCA"
   ]
  },
  "type": "class"
 },
 "sklearn.decomposition.sparse_pca.MiniBatchSparsePCA.__init__": {
  "data": {
   "lineno": 237
  },
  "type": "function"
 },
 "sklearn.decomposition.sparse_pca.MiniBatchSparsePCA.fit": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "check_array",
    "check_random_state",
    "dict_learning_online"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.sparse_pca.SparsePCA": {
  "data": {
   "lineno": 14
  },
  "type": "class"
 },
 "sklearn.decomposition.sparse_pca.SparsePCA.__init__": {
  "data": {
   "lineno": 81
  },
  "type": "function"
 },
 "sklearn.decomposition.sparse_pca.SparsePCA.fit": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "check_array",
    "check_random_state",
    "dict_learning"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.sparse_pca.SparsePCA.transform": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "check_array",
    "check_is_fitted",
    "numpy.sqrt",
    "ridge_regression"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.sparse_pca.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests": {
  "data": {},
  "type": "module"
 },
 "sklearn.decomposition.tests.test_dict_learning": {
  "data": {
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.decomposition.tests.test_dict_learning.rng_global"
   ]
  },
  "type": "module"
 },
 "sklearn.decomposition.tests.test_dict_learning.DictionaryLearning": {
  "data": {
   "shadows": "sklearn.decomposition.DictionaryLearning"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_dict_learning.MiniBatchDictionaryLearning": {
  "data": {
   "shadows": "sklearn.decomposition.MiniBatchDictionaryLearning"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_dict_learning.SparseCoder": {
  "data": {
   "shadows": "sklearn.decomposition.SparseCoder"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_dict_learning.StringIO": {
  "data": {
   "shadows": "sklearn.externals.six.moves.cStringIO"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_dict_learning.TempMemmap": {
  "data": {
   "shadows": "sklearn.utils.testing.TempMemmap"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_dict_learning.X": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "sklearn.decomposition.tests.test_dict_learning.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_dict_learning.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_dict_learning.assert_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_dict_learning.assert_less": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_less"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_dict_learning.assert_raises": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_dict_learning.assert_true": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_true"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_dict_learning.check_array": {
  "data": {
   "shadows": "sklearn.utils.check_array"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_dict_learning.dict_learning_online": {
  "data": {
   "shadows": "sklearn.decomposition.dict_learning_online"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_dict_learning.ignore_warnings": {
  "data": {
   "shadows": "sklearn.utils.testing.ignore_warnings"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_dict_learning.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_dict_learning.rng_global": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "sklearn.decomposition.tests.test_dict_learning.sparse_encode": {
  "data": {
   "shadows": "sklearn.decomposition.sparse_encode"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_dict_learning.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_dict_learning.test_dict_learning_lassocd_readonly_data": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "numpy.dot",
    "sklearn.decomposition.DictionaryLearning",
    "sklearn.decomposition.tests.test_dict_learning.X",
    "sklearn.utils.testing.TempMemmap",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_dict_learning.test_dict_learning_nonzero_coefs": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "len",
    "numpy.flatnonzero",
    "numpy.newaxis",
    "sklearn.decomposition.DictionaryLearning",
    "sklearn.decomposition.tests.test_dict_learning.X",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_dict_learning.test_dict_learning_online_estimator_shapes": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "sklearn.decomposition.MiniBatchDictionaryLearning",
    "sklearn.decomposition.tests.test_dict_learning.X",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_dict_learning.test_dict_learning_online_initialization": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.decomposition.MiniBatchDictionaryLearning",
    "sklearn.decomposition.tests.test_dict_learning.X",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_dict_learning.test_dict_learning_online_overcomplete": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "sklearn.decomposition.MiniBatchDictionaryLearning",
    "sklearn.decomposition.tests.test_dict_learning.X",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_dict_learning.test_dict_learning_online_partial_fit": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "len",
    "numpy.all",
    "numpy.newaxis",
    "numpy.random.RandomState",
    "numpy.sum",
    "range",
    "sklearn.decomposition.MiniBatchDictionaryLearning",
    "sklearn.decomposition.sparse_encode",
    "sklearn.decomposition.tests.test_dict_learning.X",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_dict_learning.test_dict_learning_online_shapes": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.random.RandomState",
    "sklearn.decomposition.dict_learning_online",
    "sklearn.decomposition.tests.test_dict_learning.X",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_dict_learning.test_dict_learning_online_verbosity": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "sklearn.decomposition.MiniBatchDictionaryLearning",
    "sklearn.decomposition.dict_learning_online",
    "sklearn.decomposition.tests.test_dict_learning.X",
    "sklearn.decomposition.tests.test_dict_learning.sys",
    "sklearn.externals.six.moves.cStringIO",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_dict_learning.test_dict_learning_overcomplete": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "sklearn.decomposition.DictionaryLearning",
    "sklearn.decomposition.tests.test_dict_learning.X",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_dict_learning.test_dict_learning_reconstruction": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "numpy.dot",
    "sklearn.decomposition.DictionaryLearning",
    "sklearn.decomposition.tests.test_dict_learning.X",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_dict_learning.test_dict_learning_reconstruction_parallel": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "numpy.dot",
    "sklearn.decomposition.DictionaryLearning",
    "sklearn.decomposition.tests.test_dict_learning.X",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_dict_learning.test_dict_learning_shapes": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "sklearn.decomposition.DictionaryLearning",
    "sklearn.decomposition.tests.test_dict_learning.X",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_dict_learning.test_dict_learning_split": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "sklearn.decomposition.DictionaryLearning",
    "sklearn.decomposition.tests.test_dict_learning.X",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_dict_learning.test_dict_learning_unknown_fit_algorithm": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.decomposition.DictionaryLearning",
    "sklearn.decomposition.tests.test_dict_learning.X",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_dict_learning.test_sparse_coder_estimator": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.dot",
    "numpy.newaxis",
    "numpy.random.RandomState",
    "numpy.sqrt",
    "numpy.sum",
    "sklearn.decomposition.SparseCoder",
    "sklearn.decomposition.tests.test_dict_learning.X",
    "sklearn.utils.testing.assert_less",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_dict_learning.test_sparse_encode_error": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.dot",
    "numpy.newaxis",
    "numpy.random.RandomState",
    "numpy.sqrt",
    "numpy.sum",
    "sklearn.decomposition.sparse_encode",
    "sklearn.decomposition.tests.test_dict_learning.X",
    "sklearn.utils.testing.assert_less",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_dict_learning.test_sparse_encode_error_default_sparsity": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.decomposition.sparse_encode",
    "sklearn.decomposition.tests.test_dict_learning.X",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_dict_learning.test_sparse_encode_input": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "numpy.newaxis",
    "numpy.random.RandomState",
    "numpy.sum",
    "sklearn.decomposition.sparse_encode",
    "sklearn.decomposition.tests.test_dict_learning.X",
    "sklearn.utils.check_array",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_dict_learning.test_sparse_encode_shapes": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "numpy.newaxis",
    "numpy.random.RandomState",
    "numpy.sum",
    "sklearn.decomposition.sparse_encode",
    "sklearn.decomposition.tests.test_dict_learning.X",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_dict_learning.test_unknown_method": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "ValueError",
    "numpy.random.RandomState",
    "sklearn.decomposition.sparse_encode",
    "sklearn.decomposition.tests.test_dict_learning.X",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_factor_analysis": {
  "data": {},
  "type": "module"
 },
 "sklearn.decomposition.tests.test_factor_analysis.ConvergenceWarning": {
  "data": {
   "shadows": "sklearn.utils.ConvergenceWarning"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_factor_analysis.FactorAnalysis": {
  "data": {
   "shadows": "sklearn.decomposition.FactorAnalysis"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_factor_analysis.assert_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_factor_analysis.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_factor_analysis.assert_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_factor_analysis.assert_greater": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_greater"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_factor_analysis.assert_less": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_less"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_factor_analysis.assert_raises": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_factor_analysis.assert_warns": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_warns"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_factor_analysis.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_factor_analysis.test_factor_analysis": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "ValueError",
    "f",
    "getattr",
    "numpy.abs",
    "numpy.all",
    "numpy.cov",
    "numpy.diff",
    "numpy.dot",
    "numpy.eye",
    "numpy.ones",
    "numpy.random.RandomState",
    "numpy.sum",
    "sklearn.decomposition.FactorAnalysis",
    "sklearn.utils.ConvergenceWarning",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_greater",
    "sklearn.utils.testing.assert_less",
    "sklearn.utils.testing.assert_raises",
    "sklearn.utils.testing.assert_warns"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_fastica": {
  "data": {},
  "type": "module"
 },
 "sklearn.decomposition.tests.test_fastica.FastICA": {
  "data": {
   "shadows": "sklearn.decomposition.FastICA"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_fastica.PCA": {
  "data": {
   "shadows": "sklearn.decomposition.PCA"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_fastica._gs_decorrelation": {
  "data": {
   "shadows": "sklearn.decomposition.fastica_._gs_decorrelation"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_fastica.assert_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_fastica.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_fastica.assert_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_fastica.assert_less": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_less"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_fastica.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_fastica.assert_true": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_true"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_fastica.assert_warns": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_warns"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_fastica.center_and_norm": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "numpy.rollaxis"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_fastica.fastica": {
  "data": {
   "shadows": "sklearn.decomposition.fastica"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_fastica.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_fastica.moves": {
  "data": {
   "shadows": "sklearn.externals.six.moves"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_fastica.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_fastica.stats": {
  "data": {
   "shadows": "scipy.stats"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_fastica.test_fastica_nowhiten": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "UserWarning",
    "hasattr",
    "sklearn.decomposition.FastICA",
    "sklearn.utils.testing.assert_true",
    "sklearn.utils.testing.assert_warns"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_fastica.test_fastica_simple": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "abs",
    "nose.tools.assert_raises",
    "numpy.array",
    "numpy.c_.T",
    "numpy.cos",
    "numpy.dot",
    "numpy.linspace",
    "numpy.random.RandomState",
    "numpy.random.seed",
    "numpy.sign",
    "numpy.sin",
    "numpy.tanh",
    "scipy.stats.t.rvs",
    "sklearn.decomposition.FastICA",
    "sklearn.decomposition.PCA",
    "sklearn.decomposition.fastica",
    "sklearn.decomposition.tests.test_fastica.center_and_norm",
    "sklearn.decomposition.tests.test_fastica.itertools",
    "sklearn.externals.six.moves.xrange",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_fastica.test_fastica_simple.g_test": {
  "data": {
   "lineno": 79
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_fastica.test_fit_transform": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.decomposition.FastICA",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_fastica.test_gs": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.linalg.svd",
    "numpy.random.RandomState",
    "sklearn.decomposition.fastica_._gs_decorrelation",
    "sklearn.utils.testing.assert_less"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_fastica.test_inverse_transform": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.decomposition.FastICA",
    "sklearn.decomposition.tests.test_fastica.warnings",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_fastica.test_non_square_fastica": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "abs",
    "numpy.c_.T",
    "numpy.ceil",
    "numpy.dot",
    "numpy.linspace",
    "numpy.pi",
    "numpy.random.RandomState",
    "numpy.sign",
    "numpy.sin",
    "sklearn.decomposition.fastica",
    "sklearn.decomposition.tests.test_fastica.center_and_norm",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_fastica.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_incremental_pca": {
  "data": {
   "symbols_in_volume": [
    "sklearn.datasets.load_iris"
   ]
  },
  "type": "module"
 },
 "sklearn.decomposition.tests.test_incremental_pca.IncrementalPCA": {
  "data": {
   "shadows": "sklearn.decomposition.IncrementalPCA"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_incremental_pca.PCA": {
  "data": {
   "shadows": "sklearn.decomposition.PCA"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_incremental_pca.assert_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_incremental_pca.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_incremental_pca.assert_raises": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_incremental_pca.datasets": {
  "data": {
   "shadows": "sklearn.datasets"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_incremental_pca.iris": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "sklearn.decomposition.tests.test_incremental_pca.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_incremental_pca.test_explained_variances": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "sklearn.datasets.make_low_rank_matrix",
    "sklearn.decomposition.IncrementalPCA",
    "sklearn.decomposition.PCA",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_incremental_pca.test_incremental_pca": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.eye",
    "numpy.testing.assert_equal",
    "sklearn.decomposition.IncrementalPCA",
    "sklearn.decomposition.PCA",
    "sklearn.decomposition.tests.test_incremental_pca.iris",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_incremental_pca.test_incremental_pca_against_pca_iris": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "numpy.abs",
    "sklearn.decomposition.IncrementalPCA",
    "sklearn.decomposition.PCA",
    "sklearn.decomposition.tests.test_incremental_pca.iris",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_incremental_pca.test_incremental_pca_against_pca_random_data": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.random.RandomState",
    "sklearn.decomposition.IncrementalPCA",
    "sklearn.decomposition.PCA",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_incremental_pca.test_incremental_pca_batch_signs": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.random.RandomState",
    "numpy.sign",
    "sklearn.decomposition.IncrementalPCA",
    "sklearn.utils.testing.assert_almost_equal",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_incremental_pca.test_incremental_pca_batch_values": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.random.RandomState",
    "sklearn.decomposition.IncrementalPCA",
    "sklearn.utils.testing.assert_almost_equal",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_incremental_pca.test_incremental_pca_check_projection": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.array",
    "numpy.random.RandomState",
    "numpy.sqrt",
    "sklearn.decomposition.IncrementalPCA",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_incremental_pca.test_incremental_pca_inverse": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.decomposition.IncrementalPCA",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_incremental_pca.test_incremental_pca_num_features_change": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "ValueError",
    "numpy.random.RandomState",
    "sklearn.decomposition.IncrementalPCA",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_incremental_pca.test_incremental_pca_partial_fit": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.random.RandomState",
    "sklearn.decomposition.IncrementalPCA",
    "sklearn.utils.testing.assert_almost_equal",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_incremental_pca.test_incremental_pca_set_params": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "ValueError",
    "numpy.random.RandomState",
    "sklearn.decomposition.IncrementalPCA",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_incremental_pca.test_incremental_pca_validation": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.decomposition.IncrementalPCA",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_incremental_pca.test_whitening": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "numpy.abs",
    "sklearn.datasets.make_low_rank_matrix",
    "sklearn.decomposition.IncrementalPCA",
    "sklearn.decomposition.PCA",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_kernel_pca": {
  "data": {},
  "type": "module"
 },
 "sklearn.decomposition.tests.test_kernel_pca.GridSearchCV": {
  "data": {
   "shadows": "sklearn.grid_search.GridSearchCV"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_kernel_pca.KernelPCA": {
  "data": {
   "shadows": "sklearn.decomposition.KernelPCA"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_kernel_pca.PCA": {
  "data": {
   "shadows": "sklearn.decomposition.PCA"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_kernel_pca.Perceptron": {
  "data": {
   "shadows": "sklearn.linear_model.Perceptron"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_kernel_pca.Pipeline": {
  "data": {
   "shadows": "sklearn.pipeline.Pipeline"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_kernel_pca.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_kernel_pca.assert_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_kernel_pca.assert_less": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_less"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_kernel_pca.assert_not_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_not_equal"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_kernel_pca.assert_raises": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_kernel_pca.make_circles": {
  "data": {
   "shadows": "sklearn.datasets.make_circles"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_kernel_pca.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_kernel_pca.rbf_kernel": {
  "data": {
   "shadows": "sklearn.metrics.pairwise.rbf_kernel"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_kernel_pca.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_kernel_pca.test_gridsearch_pipeline": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "dict",
    "numpy.arange",
    "sklearn.datasets.make_circles",
    "sklearn.decomposition.KernelPCA",
    "sklearn.grid_search.GridSearchCV",
    "sklearn.linear_model.Perceptron",
    "sklearn.pipeline.Pipeline",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_kernel_pca.test_gridsearch_pipeline_precomputed": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "dict",
    "numpy.arange",
    "sklearn.datasets.make_circles",
    "sklearn.decomposition.KernelPCA",
    "sklearn.grid_search.GridSearchCV",
    "sklearn.linear_model.Perceptron",
    "sklearn.metrics.pairwise.rbf_kernel",
    "sklearn.pipeline.Pipeline",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_kernel_pca.test_invalid_parameters": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.decomposition.KernelPCA",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_kernel_pca.test_kernel_pca": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "callable",
    "numpy.abs",
    "numpy.random.RandomState",
    "sklearn.decomposition.KernelPCA",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_not_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_kernel_pca.test_kernel_pca.histogram": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "numpy.minimum",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_kernel_pca.test_kernel_pca_invalid_kernel": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "ValueError",
    "numpy.random.RandomState",
    "sklearn.decomposition.KernelPCA",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_kernel_pca.test_kernel_pca_linear_kernel": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.random.RandomState",
    "sklearn.decomposition.KernelPCA",
    "sklearn.decomposition.PCA",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_kernel_pca.test_kernel_pca_n_components": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.decomposition.KernelPCA",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_kernel_pca.test_kernel_pca_precomputed": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.dot",
    "numpy.random.RandomState",
    "sklearn.decomposition.KernelPCA",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_kernel_pca.test_kernel_pca_sparse": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.random.RandomState",
    "scipy.sparse.csr_matrix",
    "sklearn.decomposition.KernelPCA",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_kernel_pca.test_nested_circles": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "sklearn.datasets.make_circles",
    "sklearn.decomposition.KernelPCA",
    "sklearn.linear_model.Perceptron",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_less"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_kernel_pca.test_remove_zero_eig": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.decomposition.KernelPCA",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_nmf": {
  "data": {
   "symbols_in_volume": [
    "numpy.random.mtrand.RandomState"
   ]
  },
  "type": "module"
 },
 "sklearn.decomposition.tests.test_nmf.assert_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_nmf.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_nmf.assert_false": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_false"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_nmf.assert_greater": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_greater"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_nmf.assert_less": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_less"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_nmf.assert_raise_message": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raise_message"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_nmf.assert_true": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_true"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_nmf.clone": {
  "data": {
   "shadows": "sklearn.base.clone"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_nmf.csc_matrix": {
  "data": {
   "shadows": "scipy.sparse.csc_matrix"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_nmf.ignore_warnings": {
  "data": {
   "shadows": "sklearn.utils.testing.ignore_warnings"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_nmf.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_nmf.nmf": {
  "data": {
   "shadows": "sklearn.decomposition.nmf"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_nmf.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_nmf.random_state": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "sklearn.decomposition.tests.test_nmf.test_initialize_close": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.dot",
    "scipy.linalg.norm",
    "sklearn.decomposition.nmf._initialize_nmf",
    "sklearn.decomposition.tests.test_nmf.random_state",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_nmf.test_initialize_nn_output": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "numpy.abs",
    "sklearn.decomposition.nmf._initialize_nmf",
    "sklearn.decomposition.tests.test_nmf.random_state",
    "sklearn.utils.testing.assert_false"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_nmf.test_initialize_variants": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.allclose",
    "sklearn.decomposition.nmf._initialize_nmf",
    "sklearn.decomposition.tests.test_nmf.random_state",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_nmf.test_n_components_greater_n_features": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "numpy.abs",
    "sklearn.decomposition.nmf.NMF",
    "sklearn.decomposition.tests.test_nmf.random_state",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_nmf.test_nls_close": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.arange",
    "numpy.dot",
    "numpy.zeros_like",
    "sklearn.decomposition.nmf._nls_subproblem",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_nmf.test_nls_nn_output": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.dot",
    "sklearn.decomposition.nmf._nls_subproblem",
    "sklearn.utils.testing.assert_false"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_nmf.test_nmf_fit_close": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "numpy.abs",
    "sklearn.decomposition.nmf.NMF",
    "sklearn.decomposition.tests.test_nmf.random_state",
    "sklearn.utils.testing.assert_less",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_nmf.test_nmf_fit_nn_output": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.c_",
    "numpy.ones",
    "sklearn.decomposition.nmf.NMF",
    "sklearn.utils.testing.assert_false",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_nmf.test_nmf_transform": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "numpy.abs",
    "sklearn.decomposition.nmf.NMF",
    "sklearn.decomposition.tests.test_nmf.random_state",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_nmf.test_non_negative_factorization_checking": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "ValueError",
    "numpy.ones",
    "sklearn.decomposition.nmf.non_negative_factorization",
    "sklearn.utils.testing.assert_raise_message",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_nmf.test_non_negative_factorization_consistency": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.arange",
    "sklearn.decomposition.nmf.NMF",
    "sklearn.decomposition.nmf.non_negative_factorization",
    "sklearn.decomposition.tests.test_nmf.random_state",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_nmf.test_parameter_checking": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "ValueError",
    "numpy.ones",
    "sklearn.decomposition.nmf.NMF",
    "sklearn.decomposition.nmf._initialize_nmf",
    "sklearn.utils.testing.assert_raise_message",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_nmf.test_projgrad_nmf_sparseness": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "numpy.abs",
    "sklearn.decomposition.nmf.ProjectedGradientNMF",
    "sklearn.decomposition.tests.test_nmf.random_state",
    "sklearn.utils.testing.assert_greater",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_nmf.test_safe_compute_error": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.arange",
    "scipy.sparse.csc_matrix",
    "sklearn.decomposition.nmf._initialize_nmf",
    "sklearn.decomposition.nmf._safe_compute_error",
    "sklearn.decomposition.tests.test_nmf.random_state",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_nmf.test_sparse_input": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.arange",
    "scipy.sparse.csc_matrix",
    "sklearn.base.clone",
    "sklearn.decomposition.nmf.NMF",
    "sklearn.decomposition.tests.test_nmf.random_state",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_nmf.test_sparse_transform": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "numpy.abs",
    "scipy.sparse.csc_matrix",
    "sklearn.decomposition.nmf.NMF",
    "sklearn.decomposition.tests.test_nmf.random_state",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_online_lda": {
  "data": {},
  "type": "module"
 },
 "sklearn.decomposition.tests.test_online_lda.LatentDirichletAllocation": {
  "data": {
   "shadows": "sklearn.decomposition.LatentDirichletAllocation"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_online_lda.NotFittedError": {
  "data": {
   "shadows": "sklearn.utils.validation.NotFittedError"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_online_lda._build_sparse_mtx": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "numpy.ones",
    "scipy.linalg.block_diag",
    "scipy.sparse.csr_matrix"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_online_lda._dirichlet_expectation_1d": {
  "data": {
   "shadows": "sklearn.decomposition._online_lda._dirichlet_expectation_1d"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_online_lda._dirichlet_expectation_2d": {
  "data": {
   "shadows": "sklearn.decomposition._online_lda._dirichlet_expectation_2d"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_online_lda.assert_allclose": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_allclose"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_online_lda.assert_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_online_lda.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_online_lda.assert_greater_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_greater_equal"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_online_lda.assert_raises_regexp": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises_regexp"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_online_lda.assert_true": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_true"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_online_lda.block_diag": {
  "data": {
   "shadows": "scipy.linalg.block_diag"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_online_lda.csr_matrix": {
  "data": {
   "shadows": "scipy.sparse.csr_matrix"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_online_lda.if_safe_multiprocessing_with_blas": {
  "data": {
   "shadows": "sklearn.utils.testing.if_safe_multiprocessing_with_blas"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_online_lda.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_online_lda.psi": {
  "data": {
   "shadows": "scipy.special.psi"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_online_lda.test_dirichlet_expectation": {
  "data": {
   "lineno": 327,
   "symbols_in_volume": [
    "numpy.empty_like",
    "numpy.exp",
    "numpy.logspace",
    "numpy.newaxis",
    "numpy.sum",
    "scipy.special.psi",
    "sklearn.decomposition._online_lda._dirichlet_expectation_1d",
    "sklearn.decomposition._online_lda._dirichlet_expectation_2d",
    "sklearn.utils.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_online_lda.test_invalid_params": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "ValueError",
    "numpy.ones",
    "sklearn.decomposition.LatentDirichletAllocation",
    "sklearn.utils.testing.assert_raises_regexp"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_online_lda.test_lda_default_prior_params": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "sklearn.decomposition.LatentDirichletAllocation",
    "sklearn.decomposition.tests.test_online_lda._build_sparse_mtx",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_online_lda.test_lda_dense_input": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "set",
    "sklearn.decomposition.LatentDirichletAllocation",
    "sklearn.decomposition.tests.test_online_lda._build_sparse_mtx",
    "sklearn.utils.testing.assert_true",
    "sorted",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_online_lda.test_lda_empty_docs": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": [
    "numpy.ones",
    "numpy.zeros",
    "scipy.sparse.csr_matrix",
    "sklearn.decomposition.LatentDirichletAllocation",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_online_lda.test_lda_fit_batch": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "set",
    "sklearn.decomposition.LatentDirichletAllocation",
    "sklearn.decomposition.tests.test_online_lda._build_sparse_mtx",
    "sklearn.utils.testing.assert_true",
    "sorted",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_online_lda.test_lda_fit_online": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "set",
    "sklearn.decomposition.LatentDirichletAllocation",
    "sklearn.decomposition.tests.test_online_lda._build_sparse_mtx",
    "sklearn.utils.testing.assert_true",
    "sorted",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_online_lda.test_lda_fit_transform": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.decomposition.LatentDirichletAllocation",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_online_lda.test_lda_multi_jobs": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "set",
    "sklearn.decomposition.LatentDirichletAllocation",
    "sklearn.decomposition.tests.test_online_lda._build_sparse_mtx",
    "sklearn.utils.testing.assert_true",
    "sklearn.utils.testing.if_safe_multiprocessing_with_blas",
    "sorted",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_online_lda.test_lda_negative_input": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "ValueError",
    "numpy.ones",
    "sklearn.decomposition.LatentDirichletAllocation",
    "sklearn.utils.testing.assert_raises_regexp"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_online_lda.test_lda_no_component_error": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.decomposition.LatentDirichletAllocation",
    "sklearn.utils.testing.assert_raises_regexp",
    "sklearn.utils.validation.NotFittedError"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_online_lda.test_lda_partial_fit": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "set",
    "sklearn.decomposition.LatentDirichletAllocation",
    "sklearn.decomposition.tests.test_online_lda._build_sparse_mtx",
    "sklearn.externals.six.moves.xrange",
    "sklearn.utils.testing.assert_true",
    "sorted",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_online_lda.test_lda_partial_fit_dim_mismatch": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "ValueError",
    "numpy.random.RandomState",
    "numpy.random.randint",
    "sklearn.decomposition.LatentDirichletAllocation",
    "sklearn.utils.testing.assert_raises_regexp"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_online_lda.test_lda_partial_fit_multi_jobs": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "range",
    "set",
    "sklearn.decomposition.LatentDirichletAllocation",
    "sklearn.decomposition.tests.test_online_lda._build_sparse_mtx",
    "sklearn.utils.testing.assert_true",
    "sklearn.utils.testing.if_safe_multiprocessing_with_blas",
    "sorted",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_online_lda.test_lda_perplexity": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "sklearn.decomposition.LatentDirichletAllocation",
    "sklearn.decomposition.tests.test_online_lda._build_sparse_mtx",
    "sklearn.utils.testing.assert_greater_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_online_lda.test_lda_preplexity_mismatch": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "ValueError",
    "numpy.random.RandomState",
    "numpy.random.randint",
    "sklearn.decomposition.LatentDirichletAllocation",
    "sklearn.utils.testing.assert_raises_regexp"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_online_lda.test_lda_score": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "sklearn.decomposition.LatentDirichletAllocation",
    "sklearn.decomposition.tests.test_online_lda._build_sparse_mtx",
    "sklearn.utils.testing.assert_greater_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_online_lda.test_lda_score_perplexity": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "numpy.exp",
    "numpy.sum",
    "sklearn.decomposition.LatentDirichletAllocation",
    "sklearn.decomposition.tests.test_online_lda._build_sparse_mtx",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_online_lda.test_lda_transform": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.decomposition.LatentDirichletAllocation",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_online_lda.test_lda_transform_mismatch": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "ValueError",
    "numpy.random.RandomState",
    "sklearn.decomposition.LatentDirichletAllocation",
    "sklearn.utils.testing.assert_raises_regexp"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_online_lda.test_perplexity_input_format": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "sklearn.decomposition.LatentDirichletAllocation",
    "sklearn.decomposition.tests.test_online_lda._build_sparse_mtx",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_online_lda.xrange": {
  "data": {
   "shadows": "sklearn.externals.six.moves.xrange"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_pca": {
  "data": {
   "symbols_in_volume": [
    "sklearn.datasets.load_iris"
   ]
  },
  "type": "module"
 },
 "sklearn.decomposition.tests.test_pca.PCA": {
  "data": {
   "shadows": "sklearn.decomposition.PCA"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_pca.RandomizedPCA": {
  "data": {
   "shadows": "sklearn.decomposition.RandomizedPCA"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_pca._assess_dimension_": {
  "data": {
   "shadows": "sklearn.decomposition.pca._assess_dimension_"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_pca._infer_dimension_": {
  "data": {
   "shadows": "sklearn.decomposition.pca._infer_dimension_"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_pca.assert_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_pca.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_pca.assert_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_pca.assert_greater": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_greater"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_pca.assert_no_warnings": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_no_warnings"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_pca.assert_raises": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_pca.assert_true": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_true"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_pca.datasets": {
  "data": {
   "shadows": "sklearn.datasets"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_pca.iris": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "sklearn.decomposition.tests.test_pca.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_pca.test_explained_variance": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "numpy.var",
    "sklearn.decomposition.PCA",
    "sklearn.decomposition.RandomizedPCA",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_pca.test_infer_dim_1": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.random.RandomState",
    "range",
    "sklearn.decomposition.PCA",
    "sklearn.decomposition.pca._assess_dimension_",
    "sklearn.utils.testing.assert_greater"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_pca.test_infer_dim_2": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.random.RandomState",
    "sklearn.decomposition.PCA",
    "sklearn.decomposition.pca._infer_dimension_",
    "sklearn.utils.testing.assert_greater"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_pca.test_infer_dim_3": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.random.RandomState",
    "sklearn.decomposition.PCA",
    "sklearn.decomposition.pca._infer_dimension_",
    "sklearn.utils.testing.assert_greater"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_pca.test_infer_dim_by_explained_variance": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.decomposition.PCA",
    "sklearn.decomposition.tests.test_pca.iris",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_pca.test_no_empty_slice_warning": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "numpy.random.uniform",
    "sklearn.decomposition.PCA",
    "sklearn.utils.testing.assert_no_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_pca.test_pca": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.eye",
    "numpy.testing.assert_equal",
    "sklearn.decomposition.PCA",
    "sklearn.decomposition.tests.test_pca.iris",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_pca.test_pca_check_projection": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.array",
    "numpy.random.RandomState",
    "numpy.sqrt",
    "sklearn.decomposition.PCA",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_pca.test_pca_dim": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.random.RandomState",
    "sklearn.decomposition.PCA",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_pca.test_pca_inverse": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.decomposition.PCA",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_pca.test_pca_score": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.exp",
    "numpy.log",
    "numpy.pi",
    "numpy.random.RandomState",
    "numpy.testing.assert_almost_equal",
    "sklearn.decomposition.PCA"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_pca.test_pca_score2": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.random.RandomState",
    "sklearn.decomposition.PCA",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_greater"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_pca.test_pca_score3": {
  "data": {
   "lineno": 327,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.random.RandomState",
    "numpy.zeros",
    "range",
    "sklearn.decomposition.PCA",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_pca.test_pca_validation": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.decomposition.PCA",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_pca.test_randomized_pca_check_list": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "sklearn.decomposition.RandomizedPCA",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_pca.test_randomized_pca_check_projection": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.array",
    "numpy.random.RandomState",
    "numpy.sqrt",
    "sklearn.decomposition.RandomizedPCA",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_pca.test_randomized_pca_inverse": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.random.RandomState",
    "sklearn.decomposition.RandomizedPCA",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_pca.test_whitening": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "numpy.diag",
    "numpy.dot",
    "numpy.linspace",
    "numpy.ones",
    "numpy.random.RandomState",
    "numpy.zeros",
    "sklearn.decomposition.PCA",
    "sklearn.decomposition.RandomizedPCA",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_equal",
    "this_PCA"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_sparse_pca": {
  "data": {},
  "type": "module"
 },
 "sklearn.decomposition.tests.test_sparse_pca.MiniBatchSparsePCA": {
  "data": {
   "shadows": "sklearn.decomposition.MiniBatchSparsePCA"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_sparse_pca.SkipTest": {
  "data": {
   "shadows": "sklearn.utils.testing.SkipTest"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_sparse_pca.SparsePCA": {
  "data": {
   "shadows": "sklearn.decomposition.SparsePCA"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_sparse_pca.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_sparse_pca.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_sparse_pca.assert_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_sparse_pca.assert_false": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_false"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_sparse_pca.assert_true": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_true"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_sparse_pca.check_random_state": {
  "data": {
   "shadows": "sklearn.utils.check_random_state"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_sparse_pca.generate_toy_data": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.zeros",
    "range",
    "sklearn.utils.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_sparse_pca.if_safe_multiprocessing_with_blas": {
  "data": {
   "shadows": "sklearn.utils.testing.if_safe_multiprocessing_with_blas"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_sparse_pca.joblib_par": {
  "data": {
   "shadows": "sklearn.externals.joblib.parallel"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_sparse_pca.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_sparse_pca.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_sparse_pca.test_correct_shapes": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.decomposition.SparsePCA",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_sparse_pca.test_fit_transform": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.decomposition.SparsePCA",
    "sklearn.decomposition.tests.test_sparse_pca.generate_toy_data",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_sparse_pca.test_fit_transform_parallel": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.random.RandomState",
    "sklearn.decomposition.SparsePCA",
    "sklearn.decomposition.tests.test_sparse_pca.generate_toy_data",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_true",
    "sklearn.utils.testing.if_safe_multiprocessing_with_blas"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_sparse_pca.test_fit_transform_tall": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.decomposition.SparsePCA",
    "sklearn.decomposition.tests.test_sparse_pca.generate_toy_data",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_sparse_pca.test_initialization": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.decomposition.SparsePCA",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_sparse_pca.test_mini_batch_correct_shapes": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.decomposition.MiniBatchSparsePCA",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_sparse_pca.test_mini_batch_fit_transform": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.random.RandomState",
    "sklearn.decomposition.MiniBatchSparsePCA",
    "sklearn.decomposition.tests.test_sparse_pca.generate_toy_data",
    "sklearn.decomposition.tests.test_sparse_pca.sys",
    "sklearn.externals.joblib.parallel.multiprocessing",
    "sklearn.utils.testing.SkipTest",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_sparse_pca.test_transform_nan": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "numpy.any",
    "numpy.isnan",
    "numpy.random.RandomState",
    "sklearn.decomposition.SparsePCA",
    "sklearn.decomposition.tests.test_sparse_pca.generate_toy_data",
    "sklearn.utils.testing.assert_false"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_truncated_svd": {
  "data": {
   "symbols_in_volume": [
    "numpy.float64",
    "numpy.log",
    "numpy.maximum",
    "numpy.product",
    "scipy.sparse.csr_matrix",
    "sklearn.decomposition.tests.test_truncated_svd.X",
    "sklearn.decomposition.tests.test_truncated_svd.rng",
    "sklearn.decomposition.tests.test_truncated_svd.shape",
    "sklearn.utils.check_random_state"
   ]
  },
  "type": "module"
 },
 "sklearn.decomposition.tests.test_truncated_svd.TruncatedSVD": {
  "data": {
   "shadows": "sklearn.decomposition.TruncatedSVD"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_truncated_svd.X": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "sklearn.decomposition.tests.test_truncated_svd.Xdense": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "sklearn.decomposition.tests.test_truncated_svd.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_truncated_svd.assert_array_less": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_less"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_truncated_svd.assert_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_truncated_svd.assert_greater": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_greater"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_truncated_svd.assert_raises": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_truncated_svd.check_random_state": {
  "data": {
   "shadows": "sklearn.utils.check_random_state"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_truncated_svd.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_truncated_svd.rng": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "sklearn.decomposition.tests.test_truncated_svd.shape": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "sklearn.decomposition.tests.test_truncated_svd.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.decomposition.tests.test_truncated_svd.test_algorithms": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "numpy.abs",
    "sklearn.decomposition.TruncatedSVD",
    "sklearn.decomposition.tests.test_truncated_svd.X",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_truncated_svd.test_attributes": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "sklearn.decomposition.TruncatedSVD",
    "sklearn.decomposition.tests.test_truncated_svd.X",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_truncated_svd.test_explained_variance": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "numpy.var",
    "sklearn.decomposition.TruncatedSVD",
    "sklearn.decomposition.tests.test_truncated_svd.X",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_array_less",
    "sklearn.utils.testing.assert_greater"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_truncated_svd.test_integers": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "numpy.int64",
    "sklearn.decomposition.TruncatedSVD",
    "sklearn.decomposition.tests.test_truncated_svd.X",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_truncated_svd.test_inverse_transform": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "sklearn.decomposition.TruncatedSVD",
    "sklearn.decomposition.tests.test_truncated_svd.X",
    "sklearn.decomposition.tests.test_truncated_svd.Xdense",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_truncated_svd.test_sparse_formats": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "getattr",
    "sklearn.decomposition.TruncatedSVD",
    "sklearn.decomposition.tests.test_truncated_svd.X",
    "sklearn.decomposition.tests.test_truncated_svd.Xdense",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.tests.test_truncated_svd.test_too_many_components": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.decomposition.TruncatedSVD",
    "sklearn.decomposition.tests.test_truncated_svd.X",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.truncated_svd": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "sklearn.decomposition.truncated_svd.TruncatedSVD": {
  "data": {
   "lineno": 25
  },
  "type": "class"
 },
 "sklearn.decomposition.truncated_svd.TruncatedSVD.__init__": {
  "data": {
   "lineno": 111
  },
  "type": "function"
 },
 "sklearn.decomposition.truncated_svd.TruncatedSVD.fit": {
  "data": {
   "lineno": 119
  },
  "type": "function"
 },
 "sklearn.decomposition.truncated_svd.TruncatedSVD.fit_transform": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "ValueError",
    "as_float_array",
    "check_random_state",
    "mean_variance_axis",
    "numpy.diag",
    "numpy.dot",
    "numpy.var",
    "randomized_svd",
    "scipy.sparse.issparse",
    "scipy.sparse.linalg.svds",
    "svd_flip"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.truncated_svd.TruncatedSVD.inverse_transform": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "check_array",
    "numpy.dot"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.truncated_svd.TruncatedSVD.transform": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "check_array",
    "safe_sparse_dot"
   ]
  },
  "type": "function"
 },
 "sklearn.decomposition.truncated_svd.__all__": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "sklearn.decomposition.truncated_svd.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.decomposition.truncated_svd.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.decomposition.truncated_svd.svds": {
  "data": {
   "shadows": "scipy.sparse.linalg.svds"
  },
  "type": "import"
 },
 "sklearn.discriminant_analysis": {
  "data": {},
  "type": "module"
 },
 "sklearn.discriminant_analysis.LinearDiscriminantAnalysis": {
  "data": {
   "lineno": 130
  },
  "type": "class"
 },
 "sklearn.discriminant_analysis.LinearDiscriminantAnalysis.__init__": {
  "data": {
   "lineno": 249
  },
  "type": "function"
 },
 "sklearn.discriminant_analysis.LinearDiscriminantAnalysis._solve_eigen": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "numpy.apply_along_axis",
    "numpy.argsort",
    "numpy.diag",
    "numpy.dot",
    "numpy.linalg.norm",
    "numpy.log",
    "numpy.sort",
    "numpy.sum",
    "scipy.linalg.eigh",
    "sklearn.discriminant_analysis._class_cov",
    "sklearn.discriminant_analysis._class_means",
    "sklearn.discriminant_analysis._cov"
   ]
  },
  "type": "function"
 },
 "sklearn.discriminant_analysis.LinearDiscriminantAnalysis._solve_lsqr": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "numpy.diag",
    "numpy.dot",
    "numpy.log",
    "scipy.linalg.lstsq",
    "sklearn.discriminant_analysis._class_cov",
    "sklearn.discriminant_analysis._class_means"
   ]
  },
  "type": "function"
 },
 "sklearn.discriminant_analysis.LinearDiscriminantAnalysis._solve_svd": {
  "data": {
   "lineno": 347,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "numpy.concatenate",
    "numpy.dot",
    "numpy.log",
    "numpy.sqrt",
    "numpy.sum",
    "scipy.linalg.svd",
    "sklearn.discriminant_analysis._class_cov",
    "sklearn.discriminant_analysis._class_means",
    "sklearn.discriminant_analysis.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.discriminant_analysis.LinearDiscriminantAnalysis.fit": {
  "data": {
   "lineno": 408,
   "symbols_in_volume": [
    "DeprecationWarning",
    "NotImplementedError",
    "UserWarning",
    "ValueError",
    "bincount",
    "check_X_y",
    "float",
    "len",
    "numpy.array",
    "numpy.asarray",
    "numpy.unique",
    "sklearn.discriminant_analysis.warnings",
    "unique_labels"
   ]
  },
  "type": "function"
 },
 "sklearn.discriminant_analysis.LinearDiscriminantAnalysis.predict_log_proba": {
  "data": {
   "lineno": 525,
   "symbols_in_volume": [
    "numpy.log"
   ]
  },
  "type": "function"
 },
 "sklearn.discriminant_analysis.LinearDiscriminantAnalysis.predict_proba": {
  "data": {
   "lineno": 500,
   "symbols_in_volume": [
    "len",
    "numpy.column_stack",
    "numpy.exp",
    "numpy.reciprocal"
   ]
  },
  "type": "function"
 },
 "sklearn.discriminant_analysis.LinearDiscriminantAnalysis.transform": {
  "data": {
   "lineno": 473,
   "symbols_in_volume": [
    "NotImplementedError",
    "any",
    "check_array",
    "check_is_fitted",
    "numpy.dot"
   ]
  },
  "type": "function"
 },
 "sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis": {
  "data": {
   "lineno": 541
  },
  "type": "class"
 },
 "sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis.__init__": {
  "data": {
   "lineno": 619,
   "symbols_in_volume": [
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis._decision_function": {
  "data": {
   "lineno": 703,
   "symbols_in_volume": [
    "check_array",
    "check_is_fitted",
    "len",
    "numpy.array",
    "numpy.asarray",
    "numpy.dot",
    "numpy.log",
    "numpy.sum",
    "range"
   ]
  },
  "type": "function"
 },
 "sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis.decision_function": {
  "data": {
   "lineno": 718,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis.fit": {
  "data": {
   "lineno": 626,
   "symbols_in_volume": [
    "DeprecationWarning",
    "ValueError",
    "bincount",
    "check_X_y",
    "check_classification_targets",
    "float",
    "len",
    "numpy.asarray",
    "numpy.dot",
    "numpy.linalg.svd",
    "numpy.sum",
    "numpy.unique",
    "sklearn.discriminant_analysis.warnings",
    "str",
    "xrange"
   ]
  },
  "type": "function"
 },
 "sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis.predict": {
  "data": {
   "lineno": 739
  },
  "type": "function"
 },
 "sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis.predict_log_proba": {
  "data": {
   "lineno": 776,
   "symbols_in_volume": [
    "numpy.log"
   ]
  },
  "type": "function"
 },
 "sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis.predict_proba": {
  "data": {
   "lineno": 756,
   "symbols_in_volume": [
    "numpy.exp",
    "numpy.newaxis"
   ]
  },
  "type": "function"
 },
 "sklearn.discriminant_analysis.__all__": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "sklearn.discriminant_analysis._class_cov": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "numpy.atleast_2d",
    "numpy.average",
    "numpy.unique",
    "sklearn.discriminant_analysis._cov"
   ]
  },
  "type": "function"
 },
 "sklearn.discriminant_analysis._class_means": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.unique"
   ]
  },
  "type": "function"
 },
 "sklearn.discriminant_analysis._cov": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "StandardScaler",
    "TypeError",
    "ValueError",
    "empirical_covariance",
    "float",
    "int",
    "isinstance",
    "ledoit_wolf",
    "numpy.newaxis",
    "shrunk_covariance"
   ]
  },
  "type": "function"
 },
 "sklearn.discriminant_analysis.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "sklearn.discriminant_analysis.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.discriminant_analysis.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "sklearn.discriminant_analysis.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.dummy": {
  "data": {},
  "type": "module"
 },
 "sklearn.dummy.DummyClassifier": {
  "data": {
   "lineno": 20
  },
  "type": "class"
 },
 "sklearn.dummy.DummyClassifier.__init__": {
  "data": {
   "lineno": 79
  },
  "type": "function"
 },
 "sklearn.dummy.DummyClassifier.fit": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "UserWarning",
    "ValueError",
    "any",
    "class_distribution",
    "numpy.atleast_1d",
    "numpy.reshape",
    "range",
    "scipy.sparse.issparse",
    "sklearn.dummy.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.dummy.DummyClassifier.predict": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "ValueError",
    "check_array",
    "check_random_state",
    "hasattr",
    "int",
    "numpy.array",
    "numpy.ravel",
    "numpy.tile",
    "numpy.vstack",
    "random_choice_csc",
    "range"
   ]
  },
  "type": "function"
 },
 "sklearn.dummy.DummyClassifier.predict_log_proba": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "numpy.log"
   ]
  },
  "type": "function"
 },
 "sklearn.dummy.DummyClassifier.predict_proba": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "ValueError",
    "check_array",
    "check_random_state",
    "hasattr",
    "int",
    "numpy.float64",
    "numpy.ones",
    "numpy.where",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "sklearn.dummy.DummyRegressor": {
  "data": {
   "lineno": 324
  },
  "type": "class"
 },
 "sklearn.dummy.DummyRegressor.__init__": {
  "data": {
   "lineno": 368
  },
  "type": "function"
 },
 "sklearn.dummy.DummyRegressor.fit": {
  "data": {
   "lineno": 373,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "_weighted_percentile",
    "check_array",
    "check_consistent_length",
    "len",
    "numpy.average",
    "numpy.isscalar",
    "numpy.median",
    "numpy.percentile",
    "numpy.reshape",
    "range"
   ]
  },
  "type": "function"
 },
 "sklearn.dummy.DummyRegressor.predict": {
  "data": {
   "lineno": 453,
   "symbols_in_volume": [
    "ValueError",
    "check_array",
    "hasattr",
    "numpy.ones",
    "numpy.ravel"
   ]
  },
  "type": "function"
 },
 "sklearn.dummy.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sklearn.dummy.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.dummy.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.dummy.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.ensemble": {
  "data": {},
  "type": "module"
 },
 "sklearn.ensemble.__all__": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "sklearn.ensemble.bagging": {
  "data": {
   "symbols_in_volume": [
    "numpy.iinfo",
    "numpy.int32"
   ]
  },
  "type": "module"
 },
 "sklearn.ensemble.bagging.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "sklearn.ensemble.bagging.BaggingClassifier": {
  "data": {
   "lineno": 361,
   "symbols_in_volume": [
    "sklearn.ensemble.bagging.BaseBagging"
   ]
  },
  "type": "class"
 },
 "sklearn.ensemble.bagging.BaggingClassifier.__init__": {
  "data": {
   "lineno": 479,
   "symbols_in_volume": [
    "sklearn.ensemble.bagging.BaggingClassifier",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.bagging.BaggingClassifier._set_oob_score": {
  "data": {
   "lineno": 510,
   "symbols_in_volume": [
    "accuracy_score",
    "hasattr",
    "numpy.argmax",
    "numpy.bool",
    "numpy.newaxis",
    "numpy.ones",
    "numpy.zeros",
    "range",
    "warnings.warn",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.bagging.BaggingClassifier._validate_estimator": {
  "data": {
   "lineno": 505,
   "symbols_in_volume": [
    "DecisionTreeClassifier",
    "sklearn.ensemble.bagging.BaggingClassifier",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.bagging.BaggingClassifier._validate_y": {
  "data": {
   "lineno": 549,
   "symbols_in_volume": [
    "check_classification_targets",
    "column_or_1d",
    "len",
    "numpy.unique"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.bagging.BaggingClassifier.decision_function": {
  "data": {
   "lineno": 683,
   "symbols_in_volume": [
    "Parallel",
    "ValueError",
    "_partition_estimators",
    "check_array",
    "check_is_fitted",
    "delayed",
    "if_delegate_has_method",
    "range",
    "sklearn.ensemble.bagging._parallel_decision_function",
    "sum"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.bagging.BaggingClassifier.predict": {
  "data": {
   "lineno": 557,
   "symbols_in_volume": [
    "numpy.argmax"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.bagging.BaggingClassifier.predict_log_proba": {
  "data": {
   "lineno": 628,
   "symbols_in_volume": [
    "Parallel",
    "ValueError",
    "_partition_estimators",
    "check_array",
    "check_is_fitted",
    "delayed",
    "hasattr",
    "len",
    "numpy.log",
    "numpy.logaddexp",
    "range",
    "sklearn.ensemble.bagging._parallel_predict_log_proba"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.bagging.BaggingClassifier.predict_proba": {
  "data": {
   "lineno": 579,
   "symbols_in_volume": [
    "Parallel",
    "ValueError",
    "_partition_estimators",
    "check_array",
    "check_is_fitted",
    "delayed",
    "range",
    "sklearn.ensemble.bagging._parallel_predict_proba",
    "sum"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.bagging.BaggingRegressor": {
  "data": {
   "lineno": 730,
   "symbols_in_volume": [
    "sklearn.ensemble.bagging.BaseBagging"
   ]
  },
  "type": "class"
 },
 "sklearn.ensemble.bagging.BaggingRegressor.__init__": {
  "data": {
   "lineno": 837,
   "symbols_in_volume": [
    "sklearn.ensemble.bagging.BaggingRegressor",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.bagging.BaggingRegressor._set_oob_score": {
  "data": {
   "lineno": 904,
   "symbols_in_volume": [
    "numpy.bool",
    "numpy.ones",
    "numpy.zeros",
    "r2_score",
    "warnings.warn",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.bagging.BaggingRegressor._validate_estimator": {
  "data": {
   "lineno": 899,
   "symbols_in_volume": [
    "DecisionTreeRegressor",
    "sklearn.ensemble.bagging.BaggingRegressor",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.bagging.BaggingRegressor.predict": {
  "data": {
   "lineno": 862,
   "symbols_in_volume": [
    "Parallel",
    "_partition_estimators",
    "check_array",
    "check_is_fitted",
    "delayed",
    "range",
    "sklearn.ensemble.bagging._parallel_predict_regression",
    "sum"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.bagging.BaseBagging": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "abc.ABCMeta",
    "with_metaclass"
   ]
  },
  "type": "class"
 },
 "sklearn.ensemble.bagging.BaseBagging.__init__": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "sklearn.ensemble.bagging.BaseBagging",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.bagging.BaseBagging._set_oob_score": {
  "data": {
   "lineno": 352,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.bagging.BaseBagging._validate_y": {
  "data": {
   "lineno": 356,
   "symbols_in_volume": [
    "column_or_1d"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.bagging.BaseBagging.fit": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "Parallel",
    "ValueError",
    "_partition_estimators",
    "check_X_y",
    "check_random_state",
    "delayed",
    "hasattr",
    "int",
    "isinstance",
    "len",
    "list",
    "numpy.integer",
    "range",
    "sklearn.ensemble.bagging.MAX_INT",
    "sklearn.ensemble.bagging._parallel_build_estimators",
    "sklearn.ensemble.bagging.itertools",
    "sklearn.ensemble.bagging.numbers",
    "warnings.warn"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.bagging.MAX_INT": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "sklearn.ensemble.bagging.__all__": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "sklearn.ensemble.bagging._parallel_build_estimators": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "ValueError",
    "bincount",
    "check_random_state",
    "has_fit_parameter",
    "int",
    "isinstance",
    "numpy.integer",
    "numpy.ones",
    "print",
    "range",
    "sample_without_replacement",
    "sklearn.ensemble.bagging.MAX_INT",
    "sklearn.ensemble.bagging.numbers"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.bagging._parallel_decision_function": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "sum",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.bagging._parallel_predict_log_proba": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "numpy.empty",
    "numpy.inf",
    "numpy.int",
    "numpy.logaddexp",
    "numpy.setdiff1d",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.bagging._parallel_predict_proba": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "hasattr",
    "len",
    "numpy.zeros",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.bagging._parallel_predict_regression": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "sum",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.bagging.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "sklearn.ensemble.bagging.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sklearn.ensemble.bagging.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "sklearn.ensemble.bagging.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.ensemble.bagging.numbers": {
  "data": {
   "shadows": "numbers"
  },
  "type": "import"
 },
 "sklearn.ensemble.bagging.warn": {
  "data": {
   "shadows": "warnings.warn"
  },
  "type": "import"
 },
 "sklearn.ensemble.base": {
  "data": {},
  "type": "module"
 },
 "sklearn.ensemble.base.BaseEnsemble": {
  "data": {
   "lineno": 16
  },
  "type": "class"
 },
 "sklearn.ensemble.base.BaseEnsemble.__getitem__": {
  "data": {
   "lineno": 89
  },
  "type": "function"
 },
 "sklearn.ensemble.base.BaseEnsemble.__init__": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "tuple"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.base.BaseEnsemble.__iter__": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "iter"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.base.BaseEnsemble.__len__": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.base.BaseEnsemble._make_estimator": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "clone",
    "dict",
    "getattr"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.base.BaseEnsemble._validate_estimator": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.base._partition_estimators": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "_get_n_jobs",
    "min",
    "numpy.cumsum",
    "numpy.int",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.base.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.ensemble.forest": {
  "data": {
   "symbols_in_volume": [
    "numpy.iinfo",
    "numpy.int32"
   ]
  },
  "type": "module"
 },
 "sklearn.ensemble.forest.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "sklearn.ensemble.forest.BaseForest": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "abc.ABCMeta"
   ]
  },
  "type": "class"
 },
 "sklearn.ensemble.forest.BaseForest.__init__": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "sklearn.ensemble.forest.BaseForest",
    "super",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.forest.BaseForest._set_oob_score": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.forest.BaseForest._validate_X_predict": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": [
    "NotFittedError",
    "len"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.forest.BaseForest._validate_y_class_weight": {
  "data": {
   "lineno": 309
  },
  "type": "function"
 },
 "sklearn.ensemble.forest.BaseForest.apply": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "Parallel",
    "delayed",
    "numpy.array",
    "sklearn.ensemble.forest._parallel_helper"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.forest.BaseForest.feature_importances_": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "NotFittedError",
    "Parallel",
    "delayed",
    "getattr",
    "len",
    "property",
    "sum"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.forest.BaseForest.fit": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "Parallel",
    "ValueError",
    "check_array",
    "check_random_state",
    "delayed",
    "enumerate",
    "getattr",
    "hasattr",
    "len",
    "numpy.ascontiguousarray",
    "numpy.atleast_1d",
    "numpy.reshape",
    "range",
    "scipy.sparse.issparse",
    "sklearn.ensemble.forest.MAX_INT",
    "sklearn.ensemble.forest._parallel_build_trees",
    "warnings.warn"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.forest.ExtraTreesClassifier": {
  "data": {
   "lineno": 1060,
   "symbols_in_volume": [
    "sklearn.ensemble.forest.ForestClassifier"
   ]
  },
  "type": "class"
 },
 "sklearn.ensemble.forest.ExtraTreesClassifier.__init__": {
  "data": {
   "lineno": 1213,
   "symbols_in_volume": [
    "ExtraTreeClassifier",
    "sklearn.ensemble.forest.ExtraTreesClassifier",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.forest.ExtraTreesRegressor": {
  "data": {
   "lineno": 1252,
   "symbols_in_volume": [
    "sklearn.ensemble.forest.ForestRegressor"
   ]
  },
  "type": "class"
 },
 "sklearn.ensemble.forest.ExtraTreesRegressor.__init__": {
  "data": {
   "lineno": 1375,
   "symbols_in_volume": [
    "ExtraTreeRegressor",
    "sklearn.ensemble.forest.ExtraTreesRegressor",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.forest.ForestClassifier": {
  "data": {
   "lineno": 342,
   "symbols_in_volume": [
    "abc.ABCMeta",
    "sklearn.ensemble.forest.BaseForest"
   ]
  },
  "type": "class"
 },
 "sklearn.ensemble.forest.ForestClassifier.__init__": {
  "data": {
   "lineno": 350,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "sklearn.ensemble.forest.ForestClassifier",
    "super",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.forest.ForestClassifier._set_oob_score": {
  "data": {
   "lineno": 375,
   "symbols_in_volume": [
    "check_array",
    "numpy.argmax",
    "numpy.mean",
    "numpy.newaxis",
    "numpy.zeros",
    "range",
    "sklearn.ensemble.forest._generate_unsampled_indices",
    "warnings.warn"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.forest.ForestClassifier._validate_y_class_weight": {
  "data": {
   "lineno": 420,
   "symbols_in_volume": [
    "DeprecationWarning",
    "ValueError",
    "check_classification_targets",
    "compute_sample_weight",
    "isinstance",
    "numpy.copy",
    "numpy.int",
    "numpy.unique",
    "numpy.zeros",
    "range",
    "sklearn.ensemble.forest.warnings",
    "warnings.warn"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.forest.ForestClassifier.predict": {
  "data": {
   "lineno": 478,
   "symbols_in_volume": [
    "numpy.argmax",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.forest.ForestClassifier.predict_log_proba": {
  "data": {
   "lineno": 568,
   "symbols_in_volume": [
    "numpy.log",
    "range"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.forest.ForestClassifier.predict_proba": {
  "data": {
   "lineno": 514,
   "symbols_in_volume": [
    "Parallel",
    "_partition_estimators",
    "delayed",
    "len",
    "range",
    "sklearn.ensemble.forest._parallel_helper"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.forest.ForestRegressor": {
  "data": {
   "lineno": 601,
   "symbols_in_volume": [
    "abc.ABCMeta",
    "sklearn.ensemble.forest.BaseForest"
   ]
  },
  "type": "class"
 },
 "sklearn.ensemble.forest.ForestRegressor.__init__": {
  "data": {
   "lineno": 608,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "sklearn.ensemble.forest.ForestRegressor",
    "super",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.forest.ForestRegressor._set_oob_score": {
  "data": {
   "lineno": 665,
   "symbols_in_volume": [
    "check_array",
    "numpy.newaxis",
    "numpy.zeros",
    "r2_score",
    "range",
    "sklearn.ensemble.forest._generate_unsampled_indices",
    "warnings.warn"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.forest.ForestRegressor.predict": {
  "data": {
   "lineno": 630,
   "symbols_in_volume": [
    "Parallel",
    "_partition_estimators",
    "delayed",
    "len",
    "sklearn.ensemble.forest._parallel_helper",
    "sum"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.forest.MAX_INT": {
  "data": {
   "lineno": 73
  },
  "type": "constant"
 },
 "sklearn.ensemble.forest.RandomForestClassifier": {
  "data": {
   "lineno": 708,
   "symbols_in_volume": [
    "sklearn.ensemble.forest.ForestClassifier"
   ]
  },
  "type": "class"
 },
 "sklearn.ensemble.forest.RandomForestClassifier.__init__": {
  "data": {
   "lineno": 860,
   "symbols_in_volume": [
    "DecisionTreeClassifier",
    "sklearn.ensemble.forest.RandomForestClassifier",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.forest.RandomForestRegressor": {
  "data": {
   "lineno": 900,
   "symbols_in_volume": [
    "sklearn.ensemble.forest.ForestRegressor"
   ]
  },
  "type": "class"
 },
 "sklearn.ensemble.forest.RandomForestRegressor.__init__": {
  "data": {
   "lineno": 1022,
   "symbols_in_volume": [
    "DecisionTreeRegressor",
    "sklearn.ensemble.forest.RandomForestRegressor",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.forest.RandomTreesEmbedding": {
  "data": {
   "lineno": 1413,
   "symbols_in_volume": [
    "sklearn.ensemble.forest.BaseForest"
   ]
  },
  "type": "class"
 },
 "sklearn.ensemble.forest.RandomTreesEmbedding.__init__": {
  "data": {
   "lineno": 1494,
   "symbols_in_volume": [
    "ExtraTreeRegressor",
    "sklearn.ensemble.forest.RandomTreesEmbedding",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.forest.RandomTreesEmbedding._set_oob_score": {
  "data": {
   "lineno": 1529,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.forest.RandomTreesEmbedding.fit": {
  "data": {
   "lineno": 1532
  },
  "type": "function"
 },
 "sklearn.ensemble.forest.RandomTreesEmbedding.fit_transform": {
  "data": {
   "lineno": 1551,
   "symbols_in_volume": [
    "OneHotEncoder",
    "check_array",
    "check_random_state",
    "scipy.sparse.issparse",
    "sklearn.ensemble.forest.RandomTreesEmbedding",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.forest.RandomTreesEmbedding.transform": {
  "data": {
   "lineno": 1581
  },
  "type": "function"
 },
 "sklearn.ensemble.forest.__all__": {
  "data": {
   "lineno": 67
  },
  "type": "constant"
 },
 "sklearn.ensemble.forest._generate_sample_indices": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.forest._generate_unsampled_indices": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "bincount",
    "numpy.arange",
    "sklearn.ensemble.forest._generate_sample_indices"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.forest._parallel_build_trees": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "DeprecationWarning",
    "bincount",
    "compute_sample_weight",
    "numpy.float64",
    "numpy.ones",
    "print",
    "sklearn.ensemble.forest._generate_sample_indices",
    "sklearn.ensemble.forest.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.forest._parallel_helper": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.forest.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "sklearn.ensemble.forest.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sklearn.ensemble.forest.issparse": {
  "data": {
   "shadows": "scipy.sparse.issparse"
  },
  "type": "import"
 },
 "sklearn.ensemble.forest.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.ensemble.forest.warn": {
  "data": {
   "shadows": "warnings.warn"
  },
  "type": "import"
 },
 "sklearn.ensemble.forest.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.ensemble.gradient_boosting": {
  "data": {
   "symbols_in_volume": [
    "sklearn.ensemble.gradient_boosting.ExponentialLoss",
    "sklearn.ensemble.gradient_boosting.HuberLossFunction",
    "sklearn.ensemble.gradient_boosting.LeastAbsoluteError",
    "sklearn.ensemble.gradient_boosting.LeastSquaresError",
    "sklearn.ensemble.gradient_boosting.QuantileLossFunction",
    "sklearn.ensemble.gradient_boosting.ZeroEstimator"
   ]
  },
  "type": "module"
 },
 "sklearn.ensemble.gradient_boosting.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "sklearn.ensemble.gradient_boosting.BaseGradientBoosting": {
  "data": {
   "lineno": 717,
   "symbols_in_volume": [
    "abc.ABCMeta"
   ]
  },
  "type": "class"
 },
 "sklearn.ensemble.gradient_boosting.BaseGradientBoosting.__init__": {
  "data": {
   "lineno": 721,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "numpy.empty",
    "numpy.object"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.BaseGradientBoosting._check_initialized": {
  "data": {
   "lineno": 924,
   "symbols_in_volume": [
    "NotFittedError",
    "len"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.BaseGradientBoosting._check_params": {
  "data": {
   "lineno": 801,
   "symbols_in_volume": [
    "ValueError",
    "hasattr",
    "int",
    "isinstance",
    "len",
    "loss_class",
    "max",
    "numpy.integer",
    "numpy.log2",
    "numpy.sqrt",
    "sklearn.ensemble.gradient_boosting.BinomialDeviance",
    "sklearn.ensemble.gradient_boosting.INIT_ESTIMATORS",
    "sklearn.ensemble.gradient_boosting.LOSS_FUNCTIONS",
    "sklearn.ensemble.gradient_boosting.MultinomialDeviance",
    "sklearn.ensemble.gradient_boosting.numbers"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.BaseGradientBoosting._clear_state": {
  "data": {
   "lineno": 892,
   "symbols_in_volume": [
    "hasattr",
    "numpy.empty",
    "numpy.object"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.BaseGradientBoosting._decision_function": {
  "data": {
   "lineno": 1118,
   "symbols_in_volume": [
    "predict_stages"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.BaseGradientBoosting._fit_stage": {
  "data": {
   "lineno": 747,
   "symbols_in_volume": [
    "DecisionTreeRegressor",
    "numpy.array",
    "numpy.bool",
    "numpy.float64",
    "range"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.BaseGradientBoosting._fit_stages": {
  "data": {
   "lineno": 1035,
   "symbols_in_volume": [
    "_random_sample_mask",
    "int",
    "locals",
    "loss_",
    "max",
    "monitor",
    "numpy.bool",
    "numpy.ones",
    "numpy.sum",
    "range",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.issparse",
    "sklearn.ensemble.gradient_boosting.VerboseReporter"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.BaseGradientBoosting._init_decision_function": {
  "data": {
   "lineno": 1108,
   "symbols_in_volume": [
    "ValueError",
    "numpy.float64"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.BaseGradientBoosting._init_state": {
  "data": {
   "lineno": 874,
   "symbols_in_volume": [
    "isinstance",
    "numpy.empty",
    "numpy.float64",
    "numpy.object",
    "numpy.zeros",
    "sklearn.ensemble.gradient_boosting.INIT_ESTIMATORS"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.BaseGradientBoosting._is_initialized": {
  "data": {
   "lineno": 921,
   "symbols_in_volume": [
    "getattr",
    "len"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.BaseGradientBoosting._make_estimator": {
  "data": {
   "lineno": 1104,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.BaseGradientBoosting._resize_state": {
  "data": {
   "lineno": 903,
   "symbols_in_volume": [
    "ValueError",
    "hasattr",
    "numpy.float64",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.BaseGradientBoosting._staged_decision_function": {
  "data": {
   "lineno": 1150,
   "symbols_in_volume": [
    "check_array",
    "predict_stage",
    "range"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.BaseGradientBoosting._validate_y": {
  "data": {
   "lineno": 1219,
   "symbols_in_volume": [
    "numpy.float64"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.BaseGradientBoosting.apply": {
  "data": {
   "lineno": 1226,
   "symbols_in_volume": [
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.BaseGradientBoosting.decision_function": {
  "data": {
   "lineno": 1125,
   "symbols_in_volume": [
    "deprecated"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.BaseGradientBoosting.feature_importances_": {
  "data": {
   "lineno": 1199,
   "symbols_in_volume": [
    "len",
    "numpy.float64",
    "numpy.zeros",
    "property",
    "sum"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.BaseGradientBoosting.fit": {
  "data": {
   "lineno": 930,
   "symbols_in_volume": [
    "ValueError",
    "check_X_y",
    "check_consistent_length",
    "check_random_state",
    "column_or_1d",
    "hasattr",
    "numpy.argsort",
    "numpy.asfortranarray",
    "numpy.float32",
    "numpy.int32",
    "numpy.ones",
    "scipy.sparse.issparse"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.BaseGradientBoosting.staged_decision_function": {
  "data": {
   "lineno": 1175,
   "symbols_in_volume": [
    "deprecated"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.BinomialDeviance": {
  "data": {
   "lineno": 465,
   "symbols_in_volume": [
    "sklearn.ensemble.gradient_boosting.ClassificationLossFunction"
   ]
  },
  "type": "class"
 },
 "sklearn.ensemble.gradient_boosting.BinomialDeviance.__call__": {
  "data": {
   "lineno": 481,
   "symbols_in_volume": [
    "numpy.logaddexp",
    "numpy.mean",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.BinomialDeviance.__init__": {
  "data": {
   "lineno": 471,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.ensemble.gradient_boosting.BinomialDeviance",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.BinomialDeviance._score_to_decision": {
  "data": {
   "lineno": 524,
   "symbols_in_volume": [
    "numpy.argmax"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.BinomialDeviance._score_to_proba": {
  "data": {
   "lineno": 518,
   "symbols_in_volume": [
    "expit",
    "numpy.float64",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.BinomialDeviance._update_terminal_region": {
  "data": {
   "lineno": 495,
   "symbols_in_volume": [
    "numpy.sum",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.BinomialDeviance.init_estimator": {
  "data": {
   "lineno": 478,
   "symbols_in_volume": [
    "sklearn.ensemble.gradient_boosting.LogOddsEstimator"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.BinomialDeviance.negative_gradient": {
  "data": {
   "lineno": 491,
   "symbols_in_volume": [
    "expit"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.ClassificationLossFunction": {
  "data": {
   "lineno": 447,
   "symbols_in_volume": [
    "abc.ABCMeta",
    "sklearn.ensemble.gradient_boosting.LossFunction"
   ]
  },
  "type": "class"
 },
 "sklearn.ensemble.gradient_boosting.ClassificationLossFunction._score_to_decision": {
  "data": {
   "lineno": 457,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.ClassificationLossFunction._score_to_proba": {
  "data": {
   "lineno": 450,
   "symbols_in_volume": [
    "TypeError",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.ExponentialLoss": {
  "data": {
   "lineno": 593,
   "symbols_in_volume": [
    "sklearn.ensemble.gradient_boosting.ClassificationLossFunction"
   ]
  },
  "type": "class"
 },
 "sklearn.ensemble.gradient_boosting.ExponentialLoss.__call__": {
  "data": {
   "lineno": 612,
   "symbols_in_volume": [
    "numpy.exp",
    "numpy.mean",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.ExponentialLoss.__init__": {
  "data": {
   "lineno": 602,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.ensemble.gradient_boosting.ExponentialLoss",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.ExponentialLoss._score_to_decision": {
  "data": {
   "lineno": 647,
   "symbols_in_volume": [
    "numpy.int"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.ExponentialLoss._score_to_proba": {
  "data": {
   "lineno": 641,
   "symbols_in_volume": [
    "expit",
    "numpy.float64",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.ExponentialLoss._update_terminal_region": {
  "data": {
   "lineno": 624,
   "symbols_in_volume": [
    "numpy.exp",
    "numpy.sum",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.ExponentialLoss.init_estimator": {
  "data": {
   "lineno": 609,
   "symbols_in_volume": [
    "sklearn.ensemble.gradient_boosting.ScaledLogOddsEstimator"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.ExponentialLoss.negative_gradient": {
  "data": {
   "lineno": 620,
   "symbols_in_volume": [
    "numpy.exp"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.GradientBoostingClassifier": {
  "data": {
   "lineno": 1262,
   "symbols_in_volume": [
    "sklearn.ensemble.gradient_boosting.BaseGradientBoosting"
   ]
  },
  "type": "class"
 },
 "sklearn.ensemble.gradient_boosting.GradientBoostingClassifier.__init__": {
  "data": {
   "lineno": 1415,
   "symbols_in_volume": [
    "sklearn.ensemble.gradient_boosting.GradientBoostingClassifier",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.GradientBoostingClassifier._validate_y": {
  "data": {
   "lineno": 1434,
   "symbols_in_volume": [
    "check_classification_targets",
    "len",
    "numpy.unique"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.GradientBoostingClassifier.decision_function": {
  "data": {
   "lineno": 1440,
   "symbols_in_volume": [
    "check_array"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.GradientBoostingClassifier.predict": {
  "data": {
   "lineno": 1485
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.GradientBoostingClassifier.predict_log_proba": {
  "data": {
   "lineno": 1550,
   "symbols_in_volume": [
    "numpy.log"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.GradientBoostingClassifier.predict_proba": {
  "data": {
   "lineno": 1522,
   "symbols_in_volume": [
    "AttributeError",
    "NotFittedError"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.GradientBoostingClassifier.staged_decision_function": {
  "data": {
   "lineno": 1462
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.GradientBoostingClassifier.staged_predict": {
  "data": {
   "lineno": 1502
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.GradientBoostingClassifier.staged_predict_proba": {
  "data": {
   "lineno": 1572,
   "symbols_in_volume": [
    "AttributeError",
    "NotFittedError"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.GradientBoostingRegressor": {
  "data": {
   "lineno": 1598,
   "symbols_in_volume": [
    "sklearn.ensemble.gradient_boosting.BaseGradientBoosting"
   ]
  },
  "type": "class"
 },
 "sklearn.ensemble.gradient_boosting.GradientBoostingRegressor.__init__": {
  "data": {
   "lineno": 1750,
   "symbols_in_volume": [
    "sklearn.ensemble.gradient_boosting.GradientBoostingRegressor",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.GradientBoostingRegressor.apply": {
  "data": {
   "lineno": 1803,
   "symbols_in_volume": [
    "sklearn.ensemble.gradient_boosting.GradientBoostingRegressor",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.GradientBoostingRegressor.predict": {
  "data": {
   "lineno": 1768,
   "symbols_in_volume": [
    "check_array"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.GradientBoostingRegressor.staged_predict": {
  "data": {
   "lineno": 1784
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.HuberLossFunction": {
  "data": {
   "lineno": 330,
   "symbols_in_volume": [
    "sklearn.ensemble.gradient_boosting.RegressionLossFunction"
   ]
  },
  "type": "class"
 },
 "sklearn.ensemble.gradient_boosting.HuberLossFunction.__call__": {
  "data": {
   "lineno": 349,
   "symbols_in_volume": [
    "_weighted_percentile",
    "numpy.abs",
    "numpy.sum",
    "scipy.stats.scoreatpercentile"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.HuberLossFunction.__init__": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": [
    "sklearn.ensemble.gradient_boosting.HuberLossFunction",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.HuberLossFunction._update_terminal_region": {
  "data": {
   "lineno": 385,
   "symbols_in_volume": [
    "_weighted_percentile",
    "numpy.abs",
    "numpy.mean",
    "numpy.minimum",
    "numpy.sign",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.HuberLossFunction.init_estimator": {
  "data": {
   "lineno": 346,
   "symbols_in_volume": [
    "sklearn.ensemble.gradient_boosting.QuantileEstimator"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.HuberLossFunction.negative_gradient": {
  "data": {
   "lineno": 371,
   "symbols_in_volume": [
    "_weighted_percentile",
    "numpy.abs",
    "numpy.float64",
    "numpy.sign",
    "numpy.zeros",
    "scipy.stats.scoreatpercentile"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.INIT_ESTIMATORS": {
  "data": {
   "lineno": 660
  },
  "type": "constant"
 },
 "sklearn.ensemble.gradient_boosting.LOSS_FUNCTIONS": {
  "data": {
   "lineno": 651
  },
  "type": "constant"
 },
 "sklearn.ensemble.gradient_boosting.LeastAbsoluteError": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "sklearn.ensemble.gradient_boosting.RegressionLossFunction"
   ]
  },
  "type": "class"
 },
 "sklearn.ensemble.gradient_boosting.LeastAbsoluteError.__call__": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.LeastAbsoluteError._update_terminal_region": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "_weighted_percentile",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.LeastAbsoluteError.init_estimator": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": [
    "sklearn.ensemble.gradient_boosting.QuantileEstimator"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.LeastAbsoluteError.negative_gradient": {
  "data": {
   "lineno": 316
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.LeastSquaresError": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "sklearn.ensemble.gradient_boosting.RegressionLossFunction"
   ]
  },
  "type": "class"
 },
 "sklearn.ensemble.gradient_boosting.LeastSquaresError.__call__": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": [
    "numpy.mean",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.LeastSquaresError._update_terminal_region": {
  "data": {
   "lineno": 299
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.LeastSquaresError.init_estimator": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": [
    "sklearn.ensemble.gradient_boosting.MeanEstimator"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.LeastSquaresError.negative_gradient": {
  "data": {
   "lineno": 286
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.LeastSquaresError.update_terminal_regions": {
  "data": {
   "lineno": 289
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.LogOddsEstimator": {
  "data": {
   "lineno": 105
  },
  "type": "class"
 },
 "sklearn.ensemble.gradient_boosting.LogOddsEstimator.fit": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "ValueError",
    "numpy.log",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.LogOddsEstimator.predict": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "check_is_fitted",
    "numpy.empty",
    "numpy.float64"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.LossFunction": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "abc.ABCMeta",
    "object"
   ]
  },
  "type": "class"
 },
 "sklearn.ensemble.gradient_boosting.LossFunction.__call__": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.LossFunction.__init__": {
  "data": {
   "lineno": 187
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.LossFunction._update_terminal_region": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.LossFunction.init_estimator": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.LossFunction.negative_gradient": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.LossFunction.update_terminal_regions": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.MeanEstimator": {
  "data": {
   "lineno": 89
  },
  "type": "class"
 },
 "sklearn.ensemble.gradient_boosting.MeanEstimator.fit": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "numpy.average",
    "numpy.mean"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.MeanEstimator.predict": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "check_is_fitted",
    "numpy.empty",
    "numpy.float64"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.MultinomialDeviance": {
  "data": {
   "lineno": 529,
   "symbols_in_volume": [
    "sklearn.ensemble.gradient_boosting.ClassificationLossFunction"
   ]
  },
  "type": "class"
 },
 "sklearn.ensemble.gradient_boosting.MultinomialDeviance.__call__": {
  "data": {
   "lineno": 547,
   "symbols_in_volume": [
    "logsumexp",
    "numpy.float64",
    "numpy.sum",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.MultinomialDeviance.__init__": {
  "data": {
   "lineno": 538,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.ensemble.gradient_boosting.MultinomialDeviance",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.MultinomialDeviance._score_to_decision": {
  "data": {
   "lineno": 588,
   "symbols_in_volume": [
    "numpy.argmax"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.MultinomialDeviance._score_to_proba": {
  "data": {
   "lineno": 584,
   "symbols_in_volume": [
    "logsumexp",
    "numpy.exp",
    "numpy.nan_to_num",
    "numpy.newaxis"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.MultinomialDeviance._update_terminal_region": {
  "data": {
   "lineno": 565,
   "symbols_in_volume": [
    "numpy.sum",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.MultinomialDeviance.init_estimator": {
  "data": {
   "lineno": 544,
   "symbols_in_volume": [
    "sklearn.ensemble.gradient_boosting.PriorProbabilityEstimator"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.MultinomialDeviance.negative_gradient": {
  "data": {
   "lineno": 560,
   "symbols_in_volume": [
    "logsumexp",
    "numpy.exp",
    "numpy.nan_to_num"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.PriorProbabilityEstimator": {
  "data": {
   "lineno": 135
  },
  "type": "class"
 },
 "sklearn.ensemble.gradient_boosting.PriorProbabilityEstimator.fit": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "bincount",
    "numpy.float64",
    "numpy.ones_like"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.PriorProbabilityEstimator.predict": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "check_is_fitted",
    "numpy.empty",
    "numpy.float64"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.QuantileEstimator": {
  "data": {
   "lineno": 68
  },
  "type": "class"
 },
 "sklearn.ensemble.gradient_boosting.QuantileEstimator.__init__": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.QuantileEstimator.fit": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "_weighted_percentile",
    "scipy.stats.scoreatpercentile"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.QuantileEstimator.predict": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "check_is_fitted",
    "numpy.empty",
    "numpy.float64"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.QuantileLossFunction": {
  "data": {
   "lineno": 399,
   "symbols_in_volume": [
    "sklearn.ensemble.gradient_boosting.RegressionLossFunction"
   ]
  },
  "type": "class"
 },
 "sklearn.ensemble.gradient_boosting.QuantileLossFunction.__call__": {
  "data": {
   "lineno": 415,
   "symbols_in_volume": [
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.QuantileLossFunction.__init__": {
  "data": {
   "lineno": 406,
   "symbols_in_volume": [
    "sklearn.ensemble.gradient_boosting.QuantileLossFunction",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.QuantileLossFunction._update_terminal_region": {
  "data": {
   "lineno": 436,
   "symbols_in_volume": [
    "_weighted_percentile",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.QuantileLossFunction.init_estimator": {
  "data": {
   "lineno": 412,
   "symbols_in_volume": [
    "sklearn.ensemble.gradient_boosting.QuantileEstimator"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.QuantileLossFunction.negative_gradient": {
  "data": {
   "lineno": 430
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.RegressionLossFunction": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "abc.ABCMeta",
    "sklearn.ensemble.gradient_boosting.LossFunction"
   ]
  },
  "type": "class"
 },
 "sklearn.ensemble.gradient_boosting.RegressionLossFunction.__init__": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.ensemble.gradient_boosting.RegressionLossFunction",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.ScaledLogOddsEstimator": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "sklearn.ensemble.gradient_boosting.LogOddsEstimator"
   ]
  },
  "type": "class"
 },
 "sklearn.ensemble.gradient_boosting.VerboseReporter": {
  "data": {
   "lineno": 663,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "sklearn.ensemble.gradient_boosting.VerboseReporter.__init__": {
  "data": {
   "lineno": 671
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.VerboseReporter.init": {
  "data": {
   "lineno": 674,
   "symbols_in_volume": [
    "len",
    "print",
    "time.time",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.VerboseReporter.update": {
  "data": {
   "lineno": 695,
   "symbols_in_volume": [
    "float",
    "print",
    "time.time"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.ZeroEstimator": {
  "data": {
   "lineno": 153
  },
  "type": "class"
 },
 "sklearn.ensemble.gradient_boosting.ZeroEstimator.fit": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "int",
    "numpy.issubdtype",
    "numpy.unique"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.ZeroEstimator.predict": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "check_is_fitted",
    "numpy.empty",
    "numpy.float64"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "sklearn.ensemble.gradient_boosting.csc_matrix": {
  "data": {
   "shadows": "scipy.sparse.csc_matrix"
  },
  "type": "import"
 },
 "sklearn.ensemble.gradient_boosting.csr_matrix": {
  "data": {
   "shadows": "scipy.sparse.csr_matrix"
  },
  "type": "import"
 },
 "sklearn.ensemble.gradient_boosting.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sklearn.ensemble.gradient_boosting.issparse": {
  "data": {
   "shadows": "scipy.sparse.issparse"
  },
  "type": "import"
 },
 "sklearn.ensemble.gradient_boosting.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.ensemble.gradient_boosting.numbers": {
  "data": {
   "shadows": "numbers"
  },
  "type": "import"
 },
 "sklearn.ensemble.gradient_boosting.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "sklearn.ensemble.gradient_boosting.stats": {
  "data": {
   "shadows": "scipy.stats"
  },
  "type": "import"
 },
 "sklearn.ensemble.gradient_boosting.time": {
  "data": {
   "shadows": "time.time"
  },
  "type": "import"
 },
 "sklearn.ensemble.partial_dependence": {
  "data": {},
  "type": "module"
 },
 "sklearn.ensemble.partial_dependence.MaxNLocator": {
  "data": {
   "shadows": "matplotlib.ticker.MaxNLocator"
  },
  "type": "import"
 },
 "sklearn.ensemble.partial_dependence.ScalarFormatter": {
  "data": {
   "shadows": "matplotlib.ticker.ScalarFormatter"
  },
  "type": "import"
 },
 "sklearn.ensemble.partial_dependence._grid_from_X": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "ValueError",
    "all",
    "cartesian",
    "len",
    "numpy.linspace",
    "numpy.unique",
    "range",
    "scipy.stats.mstats.mquantiles"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.partial_dependence.count": {
  "data": {
   "shadows": "itertools.count"
  },
  "type": "import"
 },
 "sklearn.ensemble.partial_dependence.mquantiles": {
  "data": {
   "shadows": "scipy.stats.mstats.mquantiles"
  },
  "type": "import"
 },
 "sklearn.ensemble.partial_dependence.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.ensemble.partial_dependence.numbers": {
  "data": {
   "shadows": "numbers"
  },
  "type": "import"
 },
 "sklearn.ensemble.partial_dependence.partial_dependence": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "ValueError",
    "_partial_dependence_tree",
    "any",
    "check_array",
    "isinstance",
    "numpy.asarray",
    "numpy.float64",
    "numpy.int32",
    "numpy.newaxis",
    "numpy.zeros",
    "range",
    "sklearn.ensemble.partial_dependence._grid_from_X"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.partial_dependence.plot_partial_dependence": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "IndexError",
    "Parallel",
    "TypeError",
    "ValueError",
    "check_array",
    "convert_feature",
    "delayed",
    "float",
    "hasattr",
    "int",
    "isinstance",
    "itertools.count",
    "len",
    "list",
    "map",
    "matplotlib.pyplot.figure",
    "matplotlib.ticker.MaxNLocator",
    "matplotlib.ticker.ScalarFormatter",
    "matplotlib.transforms.blended_transform_factory",
    "max",
    "min",
    "numpy.arange",
    "numpy.array",
    "numpy.ceil",
    "numpy.int32",
    "numpy.linspace",
    "numpy.meshgrid",
    "numpy.ndarray",
    "numpy.searchsorted",
    "numpy.size",
    "range",
    "scipy.stats.mstats.mquantiles",
    "sklearn.ensemble.partial_dependence.numbers",
    "sklearn.ensemble.partial_dependence.partial_dependence",
    "str",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.partial_dependence.plot_partial_dependence.convert_feature": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "ValueError",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.partial_dependence.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "sklearn.ensemble.partial_dependence.transforms": {
  "data": {
   "shadows": "matplotlib.transforms"
  },
  "type": "import"
 },
 "sklearn.ensemble.setup": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.distutils.core.setup",
    "sklearn.ensemble.setup.configuration"
   ]
  },
  "type": "module"
 },
 "sklearn.ensemble.setup.Configuration": {
  "data": {
   "shadows": "numpy.distutils.misc_util.Configuration"
  },
  "type": "import"
 },
 "sklearn.ensemble.setup.configuration": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "numpy.distutils.misc_util.Configuration",
    "sklearn.ensemble.setup.numpy"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.setup.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.ensemble.setup.setup": {
  "data": {
   "shadows": "numpy.distutils.core.setup"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests": {
  "data": {},
  "type": "module"
 },
 "sklearn.ensemble.tests.test_bagging": {
  "data": {
   "symbols_in_volume": [
    "sklearn.datasets.load_boston",
    "sklearn.datasets.load_iris",
    "sklearn.ensemble.tests.test_bagging.boston",
    "sklearn.ensemble.tests.test_bagging.iris",
    "sklearn.ensemble.tests.test_bagging.perm",
    "sklearn.ensemble.tests.test_bagging.rng",
    "sklearn.utils.check_random_state"
   ]
  },
  "type": "module"
 },
 "sklearn.ensemble.tests.test_bagging.BaggingClassifier": {
  "data": {
   "shadows": "sklearn.ensemble.BaggingClassifier"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_bagging.BaggingRegressor": {
  "data": {
   "shadows": "sklearn.ensemble.BaggingRegressor"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_bagging.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_bagging.DecisionTreeClassifier": {
  "data": {
   "shadows": "sklearn.tree.DecisionTreeClassifier"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_bagging.DecisionTreeRegressor": {
  "data": {
   "shadows": "sklearn.tree.DecisionTreeRegressor"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_bagging.DummyClassifier": {
  "data": {
   "shadows": "sklearn.dummy.DummyClassifier"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_bagging.DummyRegressor": {
  "data": {
   "shadows": "sklearn.dummy.DummyRegressor"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_bagging.DummyZeroEstimator": {
  "data": {
   "lineno": 558,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator"
   ]
  },
  "type": "class"
 },
 "sklearn.ensemble.tests.test_bagging.DummyZeroEstimator.fit": {
  "data": {
   "lineno": 560,
   "symbols_in_volume": [
    "numpy.unique"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_bagging.DummyZeroEstimator.predict": {
  "data": {
   "lineno": 564,
   "symbols_in_volume": [
    "int",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_bagging.GridSearchCV": {
  "data": {
   "shadows": "sklearn.grid_search.GridSearchCV"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_bagging.KNeighborsClassifier": {
  "data": {
   "shadows": "sklearn.neighbors.KNeighborsClassifier"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_bagging.KNeighborsRegressor": {
  "data": {
   "shadows": "sklearn.neighbors.KNeighborsRegressor"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_bagging.LogisticRegression": {
  "data": {
   "shadows": "sklearn.linear_model.LogisticRegression"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_bagging.ParameterGrid": {
  "data": {
   "shadows": "sklearn.grid_search.ParameterGrid"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_bagging.Perceptron": {
  "data": {
   "shadows": "sklearn.linear_model.Perceptron"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_bagging.SVC": {
  "data": {
   "shadows": "sklearn.svm.SVC"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_bagging.SVR": {
  "data": {
   "shadows": "sklearn.svm.SVR"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_bagging.SelectKBest": {
  "data": {
   "shadows": "sklearn.feature_selection.SelectKBest"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_bagging.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_bagging.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_bagging.assert_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_bagging.assert_false": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_false"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_bagging.assert_greater": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_greater"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_bagging.assert_less": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_less"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_bagging.assert_raises": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_bagging.assert_true": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_true"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_bagging.assert_warns": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_warns"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_bagging.assert_warns_message": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_warns_message"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_bagging.boston": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "sklearn.ensemble.tests.test_bagging.check_random_state": {
  "data": {
   "shadows": "sklearn.utils.check_random_state"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_bagging.csc_matrix": {
  "data": {
   "shadows": "scipy.sparse.csc_matrix"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_bagging.csr_matrix": {
  "data": {
   "shadows": "scipy.sparse.csr_matrix"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_bagging.iris": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "sklearn.ensemble.tests.test_bagging.load_boston": {
  "data": {
   "shadows": "sklearn.datasets.load_boston"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_bagging.load_iris": {
  "data": {
   "shadows": "sklearn.datasets.load_iris"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_bagging.make_hastie_10_2": {
  "data": {
   "shadows": "sklearn.datasets.make_hastie_10_2"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_bagging.make_pipeline": {
  "data": {
   "shadows": "sklearn.pipeline.make_pipeline"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_bagging.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_bagging.perm": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "sklearn.ensemble.tests.test_bagging.rng": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "sklearn.ensemble.tests.test_bagging.test_bagging_sample_weight_unsupported_but_passed": {
  "data": {
   "lineno": 568,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.ensemble.BaggingClassifier",
    "sklearn.ensemble.tests.test_bagging.DummyZeroEstimator",
    "sklearn.ensemble.tests.test_bagging.iris",
    "sklearn.ensemble.tests.test_bagging.rng",
    "sklearn.utils.check_random_state",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_bagging.test_bagging_with_pipeline": {
  "data": {
   "lineno": 551,
   "symbols_in_volume": [
    "sklearn.ensemble.BaggingClassifier",
    "sklearn.ensemble.tests.test_bagging.iris",
    "sklearn.feature_selection.SelectKBest",
    "sklearn.pipeline.make_pipeline",
    "sklearn.tree.DecisionTreeClassifier"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_bagging.test_base_estimator": {
  "data": {
   "lineno": 501,
   "symbols_in_volume": [
    "isinstance",
    "sklearn.cross_validation.train_test_split",
    "sklearn.ensemble.BaggingClassifier",
    "sklearn.ensemble.BaggingRegressor",
    "sklearn.ensemble.tests.test_bagging.boston",
    "sklearn.ensemble.tests.test_bagging.iris",
    "sklearn.ensemble.tests.test_bagging.rng",
    "sklearn.linear_model.Perceptron",
    "sklearn.svm.SVR",
    "sklearn.tree.DecisionTreeClassifier",
    "sklearn.tree.DecisionTreeRegressor",
    "sklearn.utils.check_random_state",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_bagging.test_bootstrap_features": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "numpy.unique",
    "sklearn.cross_validation.train_test_split",
    "sklearn.ensemble.BaggingRegressor",
    "sklearn.ensemble.tests.test_bagging.boston",
    "sklearn.ensemble.tests.test_bagging.rng",
    "sklearn.tree.DecisionTreeRegressor",
    "sklearn.utils.check_random_state",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_greater"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_bagging.test_bootstrap_samples": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "sklearn.cross_validation.train_test_split",
    "sklearn.ensemble.BaggingRegressor",
    "sklearn.ensemble.tests.test_bagging.boston",
    "sklearn.ensemble.tests.test_bagging.rng",
    "sklearn.tree.DecisionTreeRegressor",
    "sklearn.utils.check_random_state",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_greater"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_bagging.test_classification": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "sklearn.cross_validation.train_test_split",
    "sklearn.dummy.DummyClassifier",
    "sklearn.ensemble.BaggingClassifier",
    "sklearn.ensemble.tests.test_bagging.iris",
    "sklearn.ensemble.tests.test_bagging.rng",
    "sklearn.grid_search.ParameterGrid",
    "sklearn.linear_model.Perceptron",
    "sklearn.neighbors.KNeighborsClassifier",
    "sklearn.svm.SVC",
    "sklearn.tree.DecisionTreeClassifier",
    "sklearn.utils.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_bagging.test_error": {
  "data": {
   "lineno": 381,
   "symbols_in_volume": [
    "ValueError",
    "hasattr",
    "sklearn.ensemble.BaggingClassifier",
    "sklearn.ensemble.tests.test_bagging.iris",
    "sklearn.tree.DecisionTreeClassifier",
    "sklearn.utils.testing.assert_false",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_bagging.test_gridsearch": {
  "data": {
   "lineno": 486,
   "symbols_in_volume": [
    "sklearn.ensemble.BaggingClassifier",
    "sklearn.ensemble.tests.test_bagging.iris",
    "sklearn.grid_search.GridSearchCV",
    "sklearn.svm.SVC"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_bagging.test_oob_score_classification": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "UserWarning",
    "abs",
    "sklearn.cross_validation.train_test_split",
    "sklearn.ensemble.BaggingClassifier",
    "sklearn.ensemble.tests.test_bagging.iris",
    "sklearn.ensemble.tests.test_bagging.rng",
    "sklearn.svm.SVC",
    "sklearn.tree.DecisionTreeClassifier",
    "sklearn.utils.check_random_state",
    "sklearn.utils.testing.assert_less",
    "sklearn.utils.testing.assert_warns"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_bagging.test_oob_score_regression": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": [
    "UserWarning",
    "abs",
    "sklearn.cross_validation.train_test_split",
    "sklearn.ensemble.BaggingRegressor",
    "sklearn.ensemble.tests.test_bagging.boston",
    "sklearn.ensemble.tests.test_bagging.rng",
    "sklearn.tree.DecisionTreeRegressor",
    "sklearn.utils.check_random_state",
    "sklearn.utils.testing.assert_less",
    "sklearn.utils.testing.assert_warns"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_bagging.test_oob_score_removed_on_warm_start": {
  "data": {
   "lineno": 656,
   "symbols_in_volume": [
    "AttributeError",
    "getattr",
    "sklearn.datasets.make_hastie_10_2",
    "sklearn.ensemble.BaggingClassifier",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_bagging.test_parallel_classification": {
  "data": {
   "lineno": 414,
   "symbols_in_volume": [
    "sklearn.cross_validation.train_test_split",
    "sklearn.ensemble.BaggingClassifier",
    "sklearn.ensemble.tests.test_bagging.iris",
    "sklearn.ensemble.tests.test_bagging.rng",
    "sklearn.svm.SVC",
    "sklearn.tree.DecisionTreeClassifier",
    "sklearn.utils.check_random_state",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_bagging.test_parallel_regression": {
  "data": {
   "lineno": 460,
   "symbols_in_volume": [
    "sklearn.cross_validation.train_test_split",
    "sklearn.ensemble.BaggingRegressor",
    "sklearn.ensemble.tests.test_bagging.boston",
    "sklearn.ensemble.tests.test_bagging.rng",
    "sklearn.tree.DecisionTreeRegressor",
    "sklearn.utils.check_random_state",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_bagging.test_probability": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "len",
    "numpy.errstate",
    "numpy.exp",
    "numpy.ones",
    "numpy.sum",
    "sklearn.cross_validation.train_test_split",
    "sklearn.ensemble.BaggingClassifier",
    "sklearn.ensemble.tests.test_bagging.iris",
    "sklearn.ensemble.tests.test_bagging.rng",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.tree.DecisionTreeClassifier",
    "sklearn.utils.check_random_state",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_bagging.test_regression": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "sklearn.cross_validation.train_test_split",
    "sklearn.dummy.DummyRegressor",
    "sklearn.ensemble.BaggingRegressor",
    "sklearn.ensemble.tests.test_bagging.boston",
    "sklearn.ensemble.tests.test_bagging.rng",
    "sklearn.grid_search.ParameterGrid",
    "sklearn.neighbors.KNeighborsRegressor",
    "sklearn.svm.SVR",
    "sklearn.tree.DecisionTreeRegressor",
    "sklearn.utils.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_bagging.test_single_estimator": {
  "data": {
   "lineno": 363,
   "symbols_in_volume": [
    "sklearn.cross_validation.train_test_split",
    "sklearn.ensemble.BaggingRegressor",
    "sklearn.ensemble.tests.test_bagging.boston",
    "sklearn.ensemble.tests.test_bagging.rng",
    "sklearn.neighbors.KNeighborsRegressor",
    "sklearn.utils.check_random_state",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_bagging.test_sparse_classification": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "CustomSVC",
    "all",
    "getattr",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "sklearn.cross_validation.train_test_split",
    "sklearn.ensemble.BaggingClassifier",
    "sklearn.ensemble.tests.test_bagging.iris",
    "sklearn.ensemble.tests.test_bagging.rng",
    "sklearn.utils.check_random_state",
    "sklearn.utils.testing.assert_array_equal",
    "sparse_format",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_bagging.test_sparse_classification.CustomSVC": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "sklearn.svm.SVC"
   ]
  },
  "type": "class"
 },
 "sklearn.ensemble.tests.test_bagging.test_sparse_classification.CustomSVC.fit": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "super",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_bagging.test_sparse_regression": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "CustomSVR",
    "all",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "sklearn.cross_validation.train_test_split",
    "sklearn.ensemble.BaggingRegressor",
    "sklearn.ensemble.tests.test_bagging.boston",
    "sklearn.ensemble.tests.test_bagging.rng",
    "sklearn.utils.check_random_state",
    "sklearn.utils.testing.assert_array_equal",
    "sparse_format",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_bagging.test_sparse_regression.CustomSVR": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "sklearn.svm.SVR"
   ]
  },
  "type": "class"
 },
 "sklearn.ensemble.tests.test_bagging.test_sparse_regression.CustomSVR.fit": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "super",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_bagging.test_warm_start": {
  "data": {
   "lineno": 577,
   "symbols_in_volume": [
    "len",
    "set",
    "sklearn.datasets.make_hastie_10_2",
    "sklearn.ensemble.BaggingClassifier",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_bagging.test_warm_start_equal_n_estimators": {
  "data": {
   "lineno": 610,
   "symbols_in_volume": [
    "UserWarning",
    "sklearn.cross_validation.train_test_split",
    "sklearn.datasets.make_hastie_10_2",
    "sklearn.ensemble.BaggingClassifier",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_warns_message"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_bagging.test_warm_start_equivalence": {
  "data": {
   "lineno": 628,
   "symbols_in_volume": [
    "sklearn.cross_validation.train_test_split",
    "sklearn.datasets.make_hastie_10_2",
    "sklearn.ensemble.BaggingClassifier",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_bagging.test_warm_start_smaller_n_estimators": {
  "data": {
   "lineno": 601,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.datasets.make_hastie_10_2",
    "sklearn.ensemble.BaggingClassifier",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_bagging.test_warm_start_with_oob_score_fails": {
  "data": {
   "lineno": 649,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.datasets.make_hastie_10_2",
    "sklearn.ensemble.BaggingClassifier",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_bagging.train_test_split": {
  "data": {
   "shadows": "sklearn.cross_validation.train_test_split"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_base": {
  "data": {},
  "type": "module"
 },
 "sklearn.ensemble.tests.test_base.BaggingClassifier": {
  "data": {
   "shadows": "sklearn.ensemble.BaggingClassifier"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_base.Perceptron": {
  "data": {
   "shadows": "sklearn.linear_model.Perceptron"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_base.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_base.assert_raise_message": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raise_message"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_base.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_base.load_iris": {
  "data": {
   "shadows": "sklearn.datasets.load_iris"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_base.test_base": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "nose.tools.assert_true",
    "numpy.testing.assert_equal",
    "sklearn.datasets.load_iris",
    "sklearn.ensemble.BaggingClassifier",
    "sklearn.linear_model.Perceptron"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_base.test_base_zero_n_estimators": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.datasets.load_iris",
    "sklearn.ensemble.BaggingClassifier",
    "sklearn.linear_model.Perceptron",
    "sklearn.utils.testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest": {
  "data": {
   "symbols_in_volume": [
    "dict",
    "sklearn.datasets.load_boston",
    "sklearn.datasets.load_iris",
    "sklearn.ensemble.ExtraTreesClassifier",
    "sklearn.ensemble.ExtraTreesRegressor",
    "sklearn.ensemble.RandomForestClassifier",
    "sklearn.ensemble.RandomForestRegressor",
    "sklearn.ensemble.RandomTreesEmbedding",
    "sklearn.ensemble.tests.test_forest.FOREST_CLASSIFIERS",
    "sklearn.ensemble.tests.test_forest.FOREST_ESTIMATORS",
    "sklearn.ensemble.tests.test_forest.FOREST_REGRESSORS",
    "sklearn.ensemble.tests.test_forest.FOREST_TRANSFORMERS",
    "sklearn.ensemble.tests.test_forest.boston",
    "sklearn.ensemble.tests.test_forest.iris",
    "sklearn.ensemble.tests.test_forest.perm",
    "sklearn.ensemble.tests.test_forest.rng",
    "sklearn.utils.validation.check_random_state"
   ]
  },
  "type": "module"
 },
 "sklearn.ensemble.tests.test_forest.ExtraTreesClassifier": {
  "data": {
   "shadows": "sklearn.ensemble.ExtraTreesClassifier"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_forest.ExtraTreesRegressor": {
  "data": {
   "shadows": "sklearn.ensemble.ExtraTreesRegressor"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_forest.FOREST_CLASSIFIERS": {
  "data": {
   "lineno": 71
  },
  "type": "constant"
 },
 "sklearn.ensemble.tests.test_forest.FOREST_ESTIMATORS": {
  "data": {
   "lineno": 85
  },
  "type": "constant"
 },
 "sklearn.ensemble.tests.test_forest.FOREST_REGRESSORS": {
  "data": {
   "lineno": 76
  },
  "type": "constant"
 },
 "sklearn.ensemble.tests.test_forest.FOREST_TRANSFORMERS": {
  "data": {
   "lineno": 81
  },
  "type": "constant"
 },
 "sklearn.ensemble.tests.test_forest.GridSearchCV": {
  "data": {
   "shadows": "sklearn.grid_search.GridSearchCV"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_forest.LinearSVC": {
  "data": {
   "shadows": "sklearn.svm.LinearSVC"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_forest.RandomForestClassifier": {
  "data": {
   "shadows": "sklearn.ensemble.RandomForestClassifier"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_forest.RandomForestRegressor": {
  "data": {
   "shadows": "sklearn.ensemble.RandomForestRegressor"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_forest.RandomTreesEmbedding": {
  "data": {
   "shadows": "sklearn.ensemble.RandomTreesEmbedding"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_forest.SPARSE_SPLITTERS": {
  "data": {
   "shadows": "sklearn.tree.tree.SPARSE_SPLITTERS"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_forest.T": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "sklearn.ensemble.tests.test_forest.TruncatedSVD": {
  "data": {
   "shadows": "sklearn.decomposition.TruncatedSVD"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_forest.X": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "sklearn.ensemble.tests.test_forest.assert_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_forest.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_forest.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_forest.assert_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_forest.assert_false": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_false"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_forest.assert_greater": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_greater"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_forest.assert_greater_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_greater_equal"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_forest.assert_less": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_less"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_forest.assert_raises": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_forest.assert_true": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_true"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_forest.assert_warns": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_warns"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_forest.bincount": {
  "data": {
   "shadows": "sklearn.utils.fixes.bincount"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_forest.boston": {
  "data": {
   "lineno": 66
  },
  "type": "constant"
 },
 "sklearn.ensemble.tests.test_forest.check_1d_input": {
  "data": {
   "lineno": 840,
   "symbols_in_volume": [
    "ForestEstimator",
    "ValueError",
    "sklearn.ensemble.tests.test_forest.FOREST_CLASSIFIERS",
    "sklearn.ensemble.tests.test_forest.FOREST_ESTIMATORS",
    "sklearn.ensemble.tests.test_forest.FOREST_REGRESSORS",
    "sklearn.ensemble.tests.test_forest.X",
    "sklearn.ensemble.tests.test_forest.y",
    "sklearn.utils.testing.assert_raises",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.check_boston_criterion": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "ForestRegressor",
    "sklearn.ensemble.tests.test_forest.FOREST_REGRESSORS",
    "sklearn.ensemble.tests.test_forest.boston",
    "sklearn.utils.testing.assert_greater"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.check_class_weight_balanced_and_bootstrap_multi_output": {
  "data": {
   "lineno": 910,
   "symbols_in_volume": [
    "ForestClassifier",
    "numpy.array",
    "numpy.vstack",
    "sklearn.ensemble.tests.test_forest.FOREST_CLASSIFIERS",
    "sklearn.ensemble.tests.test_forest.X",
    "sklearn.ensemble.tests.test_forest.y",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.check_class_weight_errors": {
  "data": {
   "lineno": 931,
   "symbols_in_volume": [
    "ForestClassifier",
    "UserWarning",
    "ValueError",
    "numpy.array",
    "numpy.vstack",
    "sklearn.ensemble.tests.test_forest.FOREST_CLASSIFIERS",
    "sklearn.ensemble.tests.test_forest.X",
    "sklearn.ensemble.tests.test_forest.y",
    "sklearn.utils.testing.assert_raises",
    "sklearn.utils.testing.assert_warns"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.check_class_weights": {
  "data": {
   "lineno": 862,
   "symbols_in_volume": [
    "ForestClassifier",
    "numpy.ones",
    "numpy.vstack",
    "sklearn.ensemble.tests.test_forest.FOREST_CLASSIFIERS",
    "sklearn.ensemble.tests.test_forest.iris",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.check_classes_shape": {
  "data": {
   "lineno": 512,
   "symbols_in_volume": [
    "ForestClassifier",
    "numpy.array",
    "numpy.vstack",
    "sklearn.ensemble.tests.test_forest.FOREST_CLASSIFIERS",
    "sklearn.ensemble.tests.test_forest.X",
    "sklearn.ensemble.tests.test_forest.y",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.check_classification_toy": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "ForestClassifier",
    "len",
    "sklearn.ensemble.tests.test_forest.FOREST_CLASSIFIERS",
    "sklearn.ensemble.tests.test_forest.T",
    "sklearn.ensemble.tests.test_forest.X",
    "sklearn.ensemble.tests.test_forest.true_result",
    "sklearn.ensemble.tests.test_forest.y",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.check_gridsearch": {
  "data": {
   "lineno": 419,
   "symbols_in_volume": [
    "sklearn.ensemble.tests.test_forest.FOREST_CLASSIFIERS",
    "sklearn.ensemble.tests.test_forest.iris",
    "sklearn.grid_search.GridSearchCV"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.check_importances": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "DeprecationWarning",
    "ForestEstimator",
    "len",
    "numpy.abs",
    "numpy.all",
    "numpy.sum",
    "sklearn.ensemble.tests.test_forest.FOREST_ESTIMATORS",
    "sklearn.ensemble.tests.test_forest.X",
    "sklearn.ensemble.tests.test_forest.y",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_less",
    "sklearn.utils.testing.assert_true",
    "sklearn.utils.testing.assert_warns",
    "sklearn.utils.validation.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.check_iris_criterion": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "ForestClassifier",
    "sklearn.ensemble.tests.test_forest.FOREST_CLASSIFIERS",
    "sklearn.ensemble.tests.test_forest.iris",
    "sklearn.utils.testing.assert_greater"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.check_max_leaf_nodes_max_depth": {
  "data": {
   "lineno": 669,
   "symbols_in_volume": [
    "ForestEstimator",
    "sklearn.ensemble.tests.test_forest.FOREST_ESTIMATORS",
    "sklearn.ensemble.tests.test_forest.X",
    "sklearn.ensemble.tests.test_forest.y",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_greater"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.check_memory_layout": {
  "data": {
   "lineno": 785,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.ascontiguousarray",
    "scipy.sparse.coo_matrix",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "sklearn.ensemble.tests.test_forest.FOREST_ESTIMATORS",
    "sklearn.ensemble.tests.test_forest.X",
    "sklearn.ensemble.tests.test_forest.iris",
    "sklearn.ensemble.tests.test_forest.y",
    "sklearn.tree.tree.SPARSE_SPLITTERS",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.check_min_samples_leaf": {
  "data": {
   "lineno": 686,
   "symbols_in_volume": [
    "ForestEstimator",
    "numpy.min",
    "sklearn.ensemble.tests.test_forest.FOREST_ESTIMATORS",
    "sklearn.ensemble.tests.test_forest.X",
    "sklearn.ensemble.tests.test_forest.y",
    "sklearn.utils.fixes.bincount",
    "sklearn.utils.testing.assert_greater"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.check_min_weight_fraction_leaf": {
  "data": {
   "lineno": 712,
   "symbols_in_volume": [
    "ForestEstimator",
    "isinstance",
    "numpy.linspace",
    "numpy.min",
    "numpy.random.RandomState",
    "numpy.sum",
    "sklearn.ensemble.RandomForestClassifier",
    "sklearn.ensemble.RandomForestRegressor",
    "sklearn.ensemble.tests.test_forest.FOREST_ESTIMATORS",
    "sklearn.ensemble.tests.test_forest.X",
    "sklearn.ensemble.tests.test_forest.rng",
    "sklearn.ensemble.tests.test_forest.y",
    "sklearn.utils.fixes.bincount",
    "sklearn.utils.testing.assert_greater_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.check_multioutput": {
  "data": {
   "lineno": 477,
   "symbols_in_volume": [
    "len",
    "numpy.errstate",
    "sklearn.ensemble.tests.test_forest.FOREST_CLASSIFIERS",
    "sklearn.ensemble.tests.test_forest.FOREST_ESTIMATORS",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.check_oob_score": {
  "data": {
   "lineno": 350,
   "symbols_in_volume": [
    "UserWarning",
    "abs",
    "numpy.errstate",
    "sklearn.ensemble.tests.test_forest.FOREST_CLASSIFIERS",
    "sklearn.ensemble.tests.test_forest.FOREST_ESTIMATORS",
    "sklearn.ensemble.tests.test_forest.X",
    "sklearn.ensemble.tests.test_forest.y",
    "sklearn.utils.testing.assert_greater",
    "sklearn.utils.testing.assert_less",
    "sklearn.utils.testing.assert_warns"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.check_oob_score_raise_error": {
  "data": {
   "lineno": 391,
   "symbols_in_volume": [
    "ForestEstimator",
    "NotImplementedError",
    "TypeError",
    "ValueError",
    "hasattr",
    "sklearn.ensemble.tests.test_forest.FOREST_ESTIMATORS",
    "sklearn.ensemble.tests.test_forest.FOREST_TRANSFORMERS",
    "sklearn.ensemble.tests.test_forest.X",
    "sklearn.ensemble.tests.test_forest.y",
    "sklearn.utils.testing.assert_false",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.check_parallel": {
  "data": {
   "lineno": 431,
   "symbols_in_volume": [
    "ForestEstimator",
    "len",
    "sklearn.ensemble.tests.test_forest.FOREST_ESTIMATORS",
    "sklearn.ensemble.tests.test_forest.X",
    "sklearn.ensemble.tests.test_forest.y",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.check_pickle": {
  "data": {
   "lineno": 454,
   "symbols_in_volume": [
    "ForestEstimator",
    "sklearn.ensemble.tests.test_forest.FOREST_ESTIMATORS",
    "sklearn.ensemble.tests.test_forest.X",
    "sklearn.ensemble.tests.test_forest.pickle",
    "sklearn.ensemble.tests.test_forest.y",
    "sklearn.utils.testing.assert_equal",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.check_probability": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "ForestClassifier",
    "numpy.errstate",
    "numpy.exp",
    "numpy.ones",
    "numpy.sum",
    "sklearn.ensemble.tests.test_forest.FOREST_CLASSIFIERS",
    "sklearn.ensemble.tests.test_forest.iris",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.check_random_state": {
  "data": {
   "shadows": "sklearn.utils.validation.check_random_state"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_forest.check_regressor_attributes": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "hasattr",
    "sklearn.ensemble.tests.test_forest.FOREST_REGRESSORS",
    "sklearn.utils.testing.assert_false"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.check_sparse_input": {
  "data": {
   "lineno": 750,
   "symbols_in_volume": [
    "ForestEstimator",
    "sklearn.ensemble.tests.test_forest.FOREST_CLASSIFIERS",
    "sklearn.ensemble.tests.test_forest.FOREST_ESTIMATORS",
    "sklearn.ensemble.tests.test_forest.FOREST_REGRESSORS",
    "sklearn.ensemble.tests.test_forest.FOREST_TRANSFORMERS",
    "sklearn.ensemble.tests.test_forest.X",
    "sklearn.ensemble.tests.test_forest.y",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.check_unfitted_feature_importances": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": [
    "ValueError",
    "getattr",
    "sklearn.ensemble.tests.test_forest.FOREST_ESTIMATORS",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.check_warm_start": {
  "data": {
   "lineno": 961,
   "symbols_in_volume": [
    "ForestEstimator",
    "len",
    "set",
    "sklearn.datasets.make_hastie_10_2",
    "sklearn.ensemble.tests.test_forest.FOREST_ESTIMATORS",
    "sklearn.ensemble.tests.test_forest.X",
    "sklearn.ensemble.tests.test_forest.y",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.check_warm_start_clear": {
  "data": {
   "lineno": 993,
   "symbols_in_volume": [
    "ForestEstimator",
    "sklearn.datasets.make_hastie_10_2",
    "sklearn.ensemble.tests.test_forest.FOREST_ESTIMATORS",
    "sklearn.ensemble.tests.test_forest.X",
    "sklearn.ensemble.tests.test_forest.y",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.check_warm_start_equal_n_estimators": {
  "data": {
   "lineno": 1030,
   "symbols_in_volume": [
    "ForestEstimator",
    "UserWarning",
    "sklearn.datasets.make_hastie_10_2",
    "sklearn.ensemble.tests.test_forest.FOREST_ESTIMATORS",
    "sklearn.ensemble.tests.test_forest.X",
    "sklearn.ensemble.tests.test_forest.y",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_warns"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.check_warm_start_oob": {
  "data": {
   "lineno": 1056,
   "symbols_in_volume": [
    "ForestEstimator",
    "hasattr",
    "sklearn.datasets.make_hastie_10_2",
    "sklearn.ensemble.tests.test_forest.FOREST_ESTIMATORS",
    "sklearn.ensemble.tests.test_forest.X",
    "sklearn.ensemble.tests.test_forest.y",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_true",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.check_warm_start_smaller_n_estimators": {
  "data": {
   "lineno": 1015,
   "symbols_in_volume": [
    "ForestEstimator",
    "ValueError",
    "sklearn.datasets.make_hastie_10_2",
    "sklearn.ensemble.tests.test_forest.FOREST_ESTIMATORS",
    "sklearn.ensemble.tests.test_forest.X",
    "sklearn.ensemble.tests.test_forest.y",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.comb": {
  "data": {
   "shadows": "scipy.misc.comb"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_forest.combinations": {
  "data": {
   "shadows": "itertools.combinations"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_forest.coo_matrix": {
  "data": {
   "shadows": "scipy.sparse.coo_matrix"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_forest.csc_matrix": {
  "data": {
   "shadows": "scipy.sparse.csc_matrix"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_forest.csr_matrix": {
  "data": {
   "shadows": "scipy.sparse.csr_matrix"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_forest.datasets": {
  "data": {
   "shadows": "sklearn.datasets"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_forest.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_forest.ignore_warnings": {
  "data": {
   "shadows": "sklearn.utils.testing.ignore_warnings"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_forest.iris": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "sklearn.ensemble.tests.test_forest.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_forest.perm": {
  "data": {
   "lineno": 67
  },
  "type": "constant"
 },
 "sklearn.ensemble.tests.test_forest.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_forest.product": {
  "data": {
   "shadows": "itertools.product"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_forest.rng": {
  "data": {
   "lineno": 59
  },
  "type": "constant"
 },
 "sklearn.ensemble.tests.test_forest.skip_if_32bit": {
  "data": {
   "shadows": "sklearn.utils.testing.skip_if_32bit"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_forest.test_1d_input": {
  "data": {
   "lineno": 852,
   "symbols_in_volume": [
    "sklearn.ensemble.tests.test_forest.FOREST_ESTIMATORS",
    "sklearn.ensemble.tests.test_forest.X",
    "sklearn.ensemble.tests.test_forest.check_1d_input",
    "sklearn.ensemble.tests.test_forest.iris",
    "sklearn.ensemble.tests.test_forest.y",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_boston": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "itertools.product",
    "sklearn.ensemble.tests.test_forest.FOREST_REGRESSORS",
    "sklearn.ensemble.tests.test_forest.check_boston_criterion"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_class_weight_balanced_and_bootstrap_multi_output": {
  "data": {
   "lineno": 926,
   "symbols_in_volume": [
    "sklearn.ensemble.tests.test_forest.FOREST_CLASSIFIERS",
    "sklearn.ensemble.tests.test_forest.check_class_weight_balanced_and_bootstrap_multi_output"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_class_weight_errors": {
  "data": {
   "lineno": 956,
   "symbols_in_volume": [
    "sklearn.ensemble.tests.test_forest.FOREST_CLASSIFIERS",
    "sklearn.ensemble.tests.test_forest.check_class_weight_errors"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_class_weights": {
  "data": {
   "lineno": 905,
   "symbols_in_volume": [
    "sklearn.ensemble.tests.test_forest.FOREST_CLASSIFIERS",
    "sklearn.ensemble.tests.test_forest.check_class_weights"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_classes_shape": {
  "data": {
   "lineno": 530,
   "symbols_in_volume": [
    "sklearn.ensemble.tests.test_forest.FOREST_CLASSIFIERS",
    "sklearn.ensemble.tests.test_forest.check_classes_shape"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_classification_toy": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "sklearn.ensemble.tests.test_forest.FOREST_CLASSIFIERS",
    "sklearn.ensemble.tests.test_forest.check_classification_toy"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_distribution": {
  "data": {
   "lineno": 615,
   "symbols_in_volume": [
    "collections.defaultdict",
    "int",
    "len",
    "numpy.empty",
    "numpy.random.randint",
    "sklearn.ensemble.ExtraTreesRegressor",
    "sklearn.ensemble.tests.test_forest.X",
    "sklearn.ensemble.tests.test_forest.rng",
    "sklearn.ensemble.tests.test_forest.y",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_greater",
    "sklearn.utils.validation.check_random_state",
    "sorted",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_dtype_convert": {
  "data": {
   "lineno": 1095,
   "symbols_in_volume": [
    "numpy.eye",
    "sklearn.ensemble.RandomForestClassifier",
    "sklearn.ensemble.tests.test_forest.X",
    "sklearn.ensemble.tests.test_forest.y",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_gridsearch": {
  "data": {
   "lineno": 425,
   "symbols_in_volume": [
    "sklearn.ensemble.tests.test_forest.FOREST_CLASSIFIERS",
    "sklearn.ensemble.tests.test_forest.check_gridsearch"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_importances": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "itertools.product",
    "sklearn.datasets.make_classification",
    "sklearn.ensemble.tests.test_forest.FOREST_CLASSIFIERS",
    "sklearn.ensemble.tests.test_forest.FOREST_REGRESSORS",
    "sklearn.ensemble.tests.test_forest.X",
    "sklearn.ensemble.tests.test_forest.check_importances",
    "sklearn.ensemble.tests.test_forest.y",
    "sklearn.utils.testing.skip_if_32bit"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_importances_asymptotic": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "entropy",
    "mdi_importance",
    "numpy.abs",
    "numpy.array",
    "numpy.bool",
    "numpy.zeros",
    "range",
    "sklearn.ensemble.ExtraTreesClassifier",
    "sklearn.ensemble.tests.test_forest.X",
    "sklearn.ensemble.tests.test_forest.y",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_less",
    "sum"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_importances_asymptotic.binomial": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "int",
    "scipy.misc.comb"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_importances_asymptotic.entropy": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "len",
    "numpy.log2",
    "sklearn.utils.fixes.bincount"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_importances_asymptotic.mdi_importance": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "binomial",
    "entropy",
    "itertools.combinations",
    "itertools.product",
    "len",
    "list",
    "numpy.bool",
    "numpy.ones",
    "numpy.unique",
    "range",
    "sklearn.ensemble.tests.test_forest.X",
    "sklearn.ensemble.tests.test_forest.y",
    "sum"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_iris": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "itertools.product",
    "sklearn.ensemble.tests.test_forest.FOREST_CLASSIFIERS",
    "sklearn.ensemble.tests.test_forest.check_iris_criterion"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_max_leaf_nodes_max_depth": {
  "data": {
   "lineno": 680,
   "symbols_in_volume": [
    "sklearn.datasets.make_hastie_10_2",
    "sklearn.ensemble.tests.test_forest.FOREST_ESTIMATORS",
    "sklearn.ensemble.tests.test_forest.X",
    "sklearn.ensemble.tests.test_forest.check_max_leaf_nodes_max_depth",
    "sklearn.ensemble.tests.test_forest.y"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_memory_layout": {
  "data": {
   "lineno": 832,
   "symbols_in_volume": [
    "itertools.product",
    "numpy.float32",
    "numpy.float64",
    "sklearn.ensemble.tests.test_forest.FOREST_CLASSIFIERS",
    "sklearn.ensemble.tests.test_forest.FOREST_REGRESSORS",
    "sklearn.ensemble.tests.test_forest.check_memory_layout"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_min_samples_leaf": {
  "data": {
   "lineno": 705,
   "symbols_in_volume": [
    "numpy.float32",
    "sklearn.datasets.make_hastie_10_2",
    "sklearn.ensemble.tests.test_forest.FOREST_ESTIMATORS",
    "sklearn.ensemble.tests.test_forest.X",
    "sklearn.ensemble.tests.test_forest.check_min_samples_leaf",
    "sklearn.ensemble.tests.test_forest.y"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_min_weight_fraction_leaf": {
  "data": {
   "lineno": 743,
   "symbols_in_volume": [
    "numpy.float32",
    "sklearn.datasets.make_hastie_10_2",
    "sklearn.ensemble.tests.test_forest.FOREST_ESTIMATORS",
    "sklearn.ensemble.tests.test_forest.X",
    "sklearn.ensemble.tests.test_forest.check_min_weight_fraction_leaf",
    "sklearn.ensemble.tests.test_forest.y"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_multioutput": {
  "data": {
   "lineno": 504,
   "symbols_in_volume": [
    "sklearn.ensemble.tests.test_forest.FOREST_CLASSIFIERS",
    "sklearn.ensemble.tests.test_forest.FOREST_REGRESSORS",
    "sklearn.ensemble.tests.test_forest.check_multioutput"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_oob_score": {
  "data": {
   "lineno": 374,
   "symbols_in_volume": [
    "scipy.sparse.csc_matrix",
    "sklearn.ensemble.tests.test_forest.FOREST_CLASSIFIERS",
    "sklearn.ensemble.tests.test_forest.FOREST_REGRESSORS",
    "sklearn.ensemble.tests.test_forest.boston",
    "sklearn.ensemble.tests.test_forest.check_oob_score",
    "sklearn.ensemble.tests.test_forest.iris"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_oob_score_raise_error": {
  "data": {
   "lineno": 414,
   "symbols_in_volume": [
    "sklearn.ensemble.tests.test_forest.FOREST_ESTIMATORS",
    "sklearn.ensemble.tests.test_forest.check_oob_score_raise_error"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_parallel": {
  "data": {
   "lineno": 446,
   "symbols_in_volume": [
    "sklearn.ensemble.tests.test_forest.FOREST_CLASSIFIERS",
    "sklearn.ensemble.tests.test_forest.FOREST_REGRESSORS",
    "sklearn.ensemble.tests.test_forest.boston",
    "sklearn.ensemble.tests.test_forest.check_parallel",
    "sklearn.ensemble.tests.test_forest.iris"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_parallel_train": {
  "data": {
   "lineno": 597,
   "symbols_in_volume": [
    "sklearn.ensemble.RandomForestClassifier",
    "sklearn.ensemble.tests.test_forest.rng",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.validation.check_random_state",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_pickle": {
  "data": {
   "lineno": 469,
   "symbols_in_volume": [
    "sklearn.ensemble.tests.test_forest.FOREST_CLASSIFIERS",
    "sklearn.ensemble.tests.test_forest.FOREST_REGRESSORS",
    "sklearn.ensemble.tests.test_forest.boston",
    "sklearn.ensemble.tests.test_forest.check_pickle",
    "sklearn.ensemble.tests.test_forest.iris"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_probability": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "sklearn.ensemble.tests.test_forest.FOREST_CLASSIFIERS",
    "sklearn.ensemble.tests.test_forest.check_probability"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_random_hasher": {
  "data": {
   "lineno": 565,
   "symbols_in_volume": [
    "sklearn.datasets.make_circles",
    "sklearn.decomposition.TruncatedSVD",
    "sklearn.ensemble.RandomTreesEmbedding",
    "sklearn.ensemble.tests.test_forest.X",
    "sklearn.ensemble.tests.test_forest.y",
    "sklearn.svm.LinearSVC",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_random_hasher_sparse_data": {
  "data": {
   "lineno": 589,
   "symbols_in_volume": [
    "scipy.sparse.csc_matrix",
    "sklearn.datasets.make_multilabel_classification",
    "sklearn.ensemble.RandomTreesEmbedding",
    "sklearn.ensemble.tests.test_forest.X",
    "sklearn.ensemble.tests.test_forest.y",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_random_trees_dense_equal": {
  "data": {
   "lineno": 548,
   "symbols_in_volume": [
    "sklearn.datasets.make_circles",
    "sklearn.ensemble.RandomTreesEmbedding",
    "sklearn.ensemble.tests.test_forest.X",
    "sklearn.ensemble.tests.test_forest.y",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_random_trees_dense_type": {
  "data": {
   "lineno": 535,
   "symbols_in_volume": [
    "numpy.ndarray",
    "sklearn.datasets.make_circles",
    "sklearn.ensemble.RandomTreesEmbedding",
    "sklearn.ensemble.tests.test_forest.X",
    "sklearn.ensemble.tests.test_forest.y",
    "sklearn.utils.testing.assert_equal",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_regressor_attributes": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "sklearn.ensemble.tests.test_forest.FOREST_REGRESSORS",
    "sklearn.ensemble.tests.test_forest.check_regressor_attributes"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_sparse_input": {
  "data": {
   "lineno": 776,
   "symbols_in_volume": [
    "itertools.product",
    "scipy.sparse.coo_matrix",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "sklearn.datasets.make_multilabel_classification",
    "sklearn.ensemble.tests.test_forest.FOREST_ESTIMATORS",
    "sklearn.ensemble.tests.test_forest.X",
    "sklearn.ensemble.tests.test_forest.check_sparse_input",
    "sklearn.ensemble.tests.test_forest.y",
    "sparse_matrix"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_unfitted_feature_importances": {
  "data": {
   "lineno": 345,
   "symbols_in_volume": [
    "sklearn.ensemble.tests.test_forest.FOREST_ESTIMATORS",
    "sklearn.ensemble.tests.test_forest.check_unfitted_feature_importances"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_warm_start": {
  "data": {
   "lineno": 988,
   "symbols_in_volume": [
    "sklearn.ensemble.tests.test_forest.FOREST_ESTIMATORS",
    "sklearn.ensemble.tests.test_forest.check_warm_start"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_warm_start_clear": {
  "data": {
   "lineno": 1010,
   "symbols_in_volume": [
    "sklearn.ensemble.tests.test_forest.FOREST_ESTIMATORS",
    "sklearn.ensemble.tests.test_forest.check_warm_start_clear"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_warm_start_equal_n_estimators": {
  "data": {
   "lineno": 1051,
   "symbols_in_volume": [
    "sklearn.ensemble.tests.test_forest.FOREST_ESTIMATORS",
    "sklearn.ensemble.tests.test_forest.check_warm_start_equal_n_estimators"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_warm_start_oob": {
  "data": {
   "lineno": 1088,
   "symbols_in_volume": [
    "sklearn.ensemble.tests.test_forest.FOREST_CLASSIFIERS",
    "sklearn.ensemble.tests.test_forest.FOREST_REGRESSORS",
    "sklearn.ensemble.tests.test_forest.check_warm_start_oob"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_warm_start_smaller_n_estimators": {
  "data": {
   "lineno": 1025,
   "symbols_in_volume": [
    "sklearn.ensemble.tests.test_forest.FOREST_ESTIMATORS",
    "sklearn.ensemble.tests.test_forest.check_warm_start_smaller_n_estimators"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.true_result": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "sklearn.ensemble.tests.test_forest.warnings": {
  "data": {
   "shadows": "sklearn.utils.warnings"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_forest.y": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "sklearn.ensemble.tests.test_gradient_boosting": {
  "data": {
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.datasets.load_boston",
    "sklearn.datasets.load_iris",
    "sklearn.ensemble.tests.test_gradient_boosting.boston",
    "sklearn.ensemble.tests.test_gradient_boosting.iris",
    "sklearn.ensemble.tests.test_gradient_boosting.perm",
    "sklearn.ensemble.tests.test_gradient_boosting.rng"
   ]
  },
  "type": "module"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.DataConversionWarning": {
  "data": {
   "shadows": "sklearn.utils.validation.DataConversionWarning"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.GradientBoostingClassifier": {
  "data": {
   "shadows": "sklearn.ensemble.GradientBoostingClassifier"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.GradientBoostingRegressor": {
  "data": {
   "shadows": "sklearn.ensemble.GradientBoostingRegressor"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.NotFittedError": {
  "data": {
   "shadows": "sklearn.utils.validation.NotFittedError"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.StringIO": {
  "data": {
   "shadows": "sklearn.externals.six.moves.cStringIO"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.T": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.TREE_LEAF": {
  "data": {
   "shadows": "sklearn.tree._tree.TREE_LEAF"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.X": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.ZeroEstimator": {
  "data": {
   "shadows": "sklearn.ensemble.gradient_boosting.ZeroEstimator"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.assert_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.assert_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.assert_greater": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_greater"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.assert_less": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_less"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.assert_raises": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.assert_true": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_true"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.assert_warns": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_warns"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.boston": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.check_boston": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.ones",
    "sklearn.ensemble.GradientBoostingRegressor",
    "sklearn.ensemble.tests.test_gradient_boosting.boston",
    "sklearn.metrics.mean_squared_error",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_less",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.check_classification_synthetic": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "sklearn.datasets.make_hastie_10_2",
    "sklearn.ensemble.GradientBoostingClassifier",
    "sklearn.ensemble.tests.test_gradient_boosting.X",
    "sklearn.ensemble.tests.test_gradient_boosting.y",
    "sklearn.utils.testing.assert_less"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.check_classification_toy": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.any",
    "sklearn.ensemble.GradientBoostingClassifier",
    "sklearn.ensemble.tests.test_gradient_boosting.T",
    "sklearn.ensemble.tests.test_gradient_boosting.X",
    "sklearn.ensemble.tests.test_gradient_boosting.true_result",
    "sklearn.ensemble.tests.test_gradient_boosting.y",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_raises",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.check_iris": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "sklearn.ensemble.GradientBoostingClassifier",
    "sklearn.ensemble.tests.test_gradient_boosting.iris",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_greater"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.check_random_state": {
  "data": {
   "shadows": "sklearn.utils.check_random_state"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.check_sparse_input": {
  "data": {
   "lineno": 1032,
   "symbols_in_volume": [
    "EstimatorClass",
    "isinstance",
    "sklearn.ensemble.GradientBoostingClassifier",
    "sklearn.ensemble.tests.test_gradient_boosting.X",
    "sklearn.ensemble.tests.test_gradient_boosting.y",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.clone": {
  "data": {
   "shadows": "sklearn.base.clone"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.coo_matrix": {
  "data": {
   "shadows": "scipy.sparse.coo_matrix"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.csc_matrix": {
  "data": {
   "shadows": "scipy.sparse.csc_matrix"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.csr_matrix": {
  "data": {
   "shadows": "scipy.sparse.csr_matrix"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.datasets": {
  "data": {
   "shadows": "sklearn.datasets"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.early_stopping_monitor": {
  "data": {
   "lineno": 829
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.iris": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.mean_squared_error": {
  "data": {
   "shadows": "sklearn.metrics.mean_squared_error"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.perm": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.product": {
  "data": {
   "shadows": "itertools.product"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.rng": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.skip_if_32bit": {
  "data": {
   "shadows": "sklearn.utils.testing.skip_if_32bit"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_boston": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "itertools.product",
    "sklearn.ensemble.tests.test_gradient_boosting.check_boston"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_check_inputs": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "sklearn.ensemble.GradientBoostingClassifier",
    "sklearn.ensemble.tests.test_gradient_boosting.X",
    "sklearn.ensemble.tests.test_gradient_boosting.y",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_check_inputs_predict": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.array",
    "numpy.newaxis",
    "sklearn.ensemble.GradientBoostingClassifier",
    "sklearn.ensemble.GradientBoostingRegressor",
    "sklearn.ensemble.tests.test_gradient_boosting.X",
    "sklearn.ensemble.tests.test_gradient_boosting.rng",
    "sklearn.ensemble.tests.test_gradient_boosting.y",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_check_max_features": {
  "data": {
   "lineno": 366,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "sklearn.ensemble.GradientBoostingRegressor",
    "sklearn.ensemble.tests.test_gradient_boosting.X",
    "sklearn.ensemble.tests.test_gradient_boosting.y",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_classification_synthetic": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "itertools.product",
    "sklearn.ensemble.tests.test_gradient_boosting.check_classification_synthetic"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_classification_toy": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "itertools.product",
    "sklearn.ensemble.tests.test_gradient_boosting.check_classification_toy"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_complete_classification": {
  "data": {
   "lineno": 873,
   "symbols_in_volume": [
    "sklearn.datasets.make_hastie_10_2",
    "sklearn.ensemble.GradientBoostingClassifier",
    "sklearn.ensemble.tests.test_gradient_boosting.X",
    "sklearn.ensemble.tests.test_gradient_boosting.y",
    "sklearn.tree._tree.TREE_LEAF.shape",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_complete_regression": {
  "data": {
   "lineno": 889,
   "symbols_in_volume": [
    "sklearn.ensemble.GradientBoostingRegressor",
    "sklearn.ensemble.tests.test_gradient_boosting.boston",
    "sklearn.tree._tree.TREE_LEAF.shape",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_degenerate_targets": {
  "data": {
   "lineno": 519,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.float64",
    "numpy.ones",
    "sklearn.ensemble.GradientBoostingClassifier",
    "sklearn.ensemble.GradientBoostingRegressor",
    "sklearn.ensemble.tests.test_gradient_boosting.X",
    "sklearn.ensemble.tests.test_gradient_boosting.rng",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_feature_importances": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "DeprecationWarning",
    "hasattr",
    "numpy.array",
    "numpy.float32",
    "sklearn.ensemble.GradientBoostingRegressor",
    "sklearn.ensemble.tests.test_gradient_boosting.X",
    "sklearn.ensemble.tests.test_gradient_boosting.boston",
    "sklearn.ensemble.tests.test_gradient_boosting.y",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_less",
    "sklearn.utils.testing.assert_true",
    "sklearn.utils.testing.assert_warns"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_float_class_labels": {
  "data": {
   "lineno": 561,
   "symbols_in_volume": [
    "len",
    "numpy.asarray",
    "numpy.float32",
    "sklearn.ensemble.GradientBoostingClassifier",
    "sklearn.ensemble.tests.test_gradient_boosting.T",
    "sklearn.ensemble.tests.test_gradient_boosting.X",
    "sklearn.ensemble.tests.test_gradient_boosting.true_result",
    "sklearn.ensemble.tests.test_gradient_boosting.y",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_iris": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "itertools.product",
    "len",
    "numpy.ones",
    "sklearn.ensemble.tests.test_gradient_boosting.check_iris",
    "sklearn.ensemble.tests.test_gradient_boosting.iris"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_loss_function": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.ensemble.GradientBoostingClassifier",
    "sklearn.ensemble.GradientBoostingRegressor",
    "sklearn.ensemble.tests.test_gradient_boosting.X",
    "sklearn.ensemble.tests.test_gradient_boosting.y",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_max_feature_auto": {
  "data": {
   "lineno": 396,
   "symbols_in_volume": [
    "int",
    "numpy.log2",
    "numpy.sqrt",
    "sklearn.datasets.make_hastie_10_2",
    "sklearn.ensemble.GradientBoostingClassifier",
    "sklearn.ensemble.GradientBoostingRegressor",
    "sklearn.ensemble.tests.test_gradient_boosting.X",
    "sklearn.ensemble.tests.test_gradient_boosting.y",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_max_feature_regression": {
  "data": {
   "lineno": 381,
   "symbols_in_volume": [
    "sklearn.datasets.make_hastie_10_2",
    "sklearn.ensemble.GradientBoostingClassifier",
    "sklearn.ensemble.tests.test_gradient_boosting.X",
    "sklearn.ensemble.tests.test_gradient_boosting.y",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_max_leaf_nodes_max_depth": {
  "data": {
   "lineno": 954,
   "symbols_in_volume": [
    "GBEstimator",
    "sklearn.datasets.make_hastie_10_2",
    "sklearn.ensemble.GradientBoostingClassifier",
    "sklearn.ensemble.GradientBoostingRegressor",
    "sklearn.ensemble.tests.test_gradient_boosting.X",
    "sklearn.ensemble.tests.test_gradient_boosting.y",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_greater"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_mem_layout": {
  "data": {
   "lineno": 588,
   "symbols_in_volume": [
    "len",
    "numpy.asarray",
    "numpy.ascontiguousarray",
    "numpy.asfortranarray",
    "numpy.int32",
    "sklearn.ensemble.GradientBoostingClassifier",
    "sklearn.ensemble.tests.test_gradient_boosting.T",
    "sklearn.ensemble.tests.test_gradient_boosting.X",
    "sklearn.ensemble.tests.test_gradient_boosting.true_result",
    "sklearn.ensemble.tests.test_gradient_boosting.y",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_monitor_early_stopping": {
  "data": {
   "lineno": 837,
   "symbols_in_volume": [
    "Cls",
    "sklearn.datasets.make_hastie_10_2",
    "sklearn.ensemble.GradientBoostingClassifier",
    "sklearn.ensemble.GradientBoostingRegressor",
    "sklearn.ensemble.tests.test_gradient_boosting.X",
    "sklearn.ensemble.tests.test_gradient_boosting.early_stopping_monitor",
    "sklearn.ensemble.tests.test_gradient_boosting.y",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_more_verbose_output": {
  "data": {
   "lineno": 677,
   "symbols_in_volume": [
    "sklearn.ensemble.GradientBoostingClassifier",
    "sklearn.ensemble.tests.test_gradient_boosting.X",
    "sklearn.ensemble.tests.test_gradient_boosting.sys",
    "sklearn.ensemble.tests.test_gradient_boosting.y",
    "sklearn.externals.six.moves.cStringIO",
    "sklearn.utils.testing.assert_equal",
    "sum"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_non_uniform_weights_toy_edge_case_clf": {
  "data": {
   "lineno": 1018,
   "symbols_in_volume": [
    "sklearn.ensemble.GradientBoostingClassifier",
    "sklearn.ensemble.tests.test_gradient_boosting.X",
    "sklearn.ensemble.tests.test_gradient_boosting.y",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_non_uniform_weights_toy_edge_case_reg": {
  "data": {
   "lineno": 1004,
   "symbols_in_volume": [
    "sklearn.ensemble.GradientBoostingRegressor",
    "sklearn.ensemble.tests.test_gradient_boosting.X",
    "sklearn.ensemble.tests.test_gradient_boosting.y",
    "sklearn.utils.testing.assert_greater"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_oob_improvement": {
  "data": {
   "lineno": 617,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.ensemble.GradientBoostingClassifier",
    "sklearn.ensemble.tests.test_gradient_boosting.X",
    "sklearn.ensemble.tests.test_gradient_boosting.y",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_oob_improvement_raise": {
  "data": {
   "lineno": 629,
   "symbols_in_volume": [
    "AttributeError",
    "sklearn.ensemble.GradientBoostingClassifier",
    "sklearn.ensemble.tests.test_gradient_boosting.X",
    "sklearn.ensemble.tests.test_gradient_boosting.y",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_oob_multilcass_iris": {
  "data": {
   "lineno": 637,
   "symbols_in_volume": [
    "sklearn.ensemble.GradientBoostingClassifier",
    "sklearn.ensemble.tests.test_gradient_boosting.iris",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_greater"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_parameter_checks": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.ensemble.GradientBoostingClassifier",
    "sklearn.ensemble.tests.test_gradient_boosting.X",
    "sklearn.ensemble.tests.test_gradient_boosting.y",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_probability_exponential": {
  "data": {
   "lineno": 981,
   "symbols_in_volume": [
    "ValueError",
    "numpy.all",
    "numpy.exp",
    "sklearn.ensemble.GradientBoostingClassifier",
    "sklearn.ensemble.tests.test_gradient_boosting.T",
    "sklearn.ensemble.tests.test_gradient_boosting.X",
    "sklearn.ensemble.tests.test_gradient_boosting.true_result",
    "sklearn.ensemble.tests.test_gradient_boosting.y",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_raises",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_probability_log": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": [
    "ValueError",
    "numpy.all",
    "sklearn.ensemble.GradientBoostingClassifier",
    "sklearn.ensemble.tests.test_gradient_boosting.T",
    "sklearn.ensemble.tests.test_gradient_boosting.X",
    "sklearn.ensemble.tests.test_gradient_boosting.true_result",
    "sklearn.ensemble.tests.test_gradient_boosting.y",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_raises",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_quantile_loss": {
  "data": {
   "lineno": 533,
   "symbols_in_volume": [
    "sklearn.ensemble.GradientBoostingRegressor",
    "sklearn.ensemble.tests.test_gradient_boosting.boston",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_regression_synthetic": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "sklearn.datasets.make_friedman1",
    "sklearn.datasets.make_friedman2",
    "sklearn.datasets.make_friedman3",
    "sklearn.ensemble.GradientBoostingRegressor",
    "sklearn.ensemble.tests.test_gradient_boosting.X",
    "sklearn.ensemble.tests.test_gradient_boosting.y",
    "sklearn.metrics.mean_squared_error",
    "sklearn.utils.check_random_state",
    "sklearn.utils.testing.assert_less"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_serialization": {
  "data": {
   "lineno": 499,
   "symbols_in_volume": [
    "ImportError",
    "cPickle.HIGHEST_PROTOCOL",
    "cPickle.dumps",
    "cPickle.loads",
    "len",
    "sklearn.ensemble.GradientBoostingClassifier",
    "sklearn.ensemble.tests.test_gradient_boosting.T",
    "sklearn.ensemble.tests.test_gradient_boosting.X",
    "sklearn.ensemble.tests.test_gradient_boosting.true_result",
    "sklearn.ensemble.tests.test_gradient_boosting.y",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_shape_y": {
  "data": {
   "lineno": 573,
   "symbols_in_volume": [
    "len",
    "numpy.asarray",
    "numpy.int32",
    "numpy.newaxis",
    "sklearn.ensemble.GradientBoostingClassifier",
    "sklearn.ensemble.tests.test_gradient_boosting.T",
    "sklearn.ensemble.tests.test_gradient_boosting.X",
    "sklearn.ensemble.tests.test_gradient_boosting.true_result",
    "sklearn.ensemble.tests.test_gradient_boosting.y",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_warns",
    "sklearn.utils.validation.DataConversionWarning"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_sparse_input": {
  "data": {
   "lineno": 1061,
   "symbols_in_volume": [
    "EstimatorClass",
    "itertools.product",
    "scipy.sparse.coo_matrix",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "sklearn.datasets.make_multilabel_classification",
    "sklearn.ensemble.GradientBoostingClassifier",
    "sklearn.ensemble.GradientBoostingRegressor",
    "sklearn.ensemble.tests.test_gradient_boosting.X",
    "sklearn.ensemble.tests.test_gradient_boosting.check_sparse_input",
    "sklearn.ensemble.tests.test_gradient_boosting.y",
    "sklearn.utils.testing.skip_if_32bit",
    "sparse_matrix"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_staged_functions_defensive": {
  "data": {
   "lineno": 480,
   "symbols_in_volume": [
    "getattr",
    "list",
    "numpy.all",
    "numpy.int",
    "numpy.random.RandomState",
    "sklearn.ensemble.GradientBoostingClassifier",
    "sklearn.ensemble.GradientBoostingRegressor",
    "sklearn.ensemble.tests.test_gradient_boosting.X",
    "sklearn.ensemble.tests.test_gradient_boosting.rng",
    "sklearn.ensemble.tests.test_gradient_boosting.warnings",
    "sklearn.ensemble.tests.test_gradient_boosting.y",
    "sklearn.utils.testing.assert_true",
    "staged_func"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_staged_predict": {
  "data": {
   "lineno": 430,
   "symbols_in_volume": [
    "ValueError",
    "numpy.float64",
    "numpy.fromiter",
    "sklearn.datasets.make_friedman1",
    "sklearn.ensemble.GradientBoostingRegressor",
    "sklearn.ensemble.tests.test_gradient_boosting.X",
    "sklearn.ensemble.tests.test_gradient_boosting.y",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_staged_predict_proba": {
  "data": {
   "lineno": 452,
   "symbols_in_volume": [
    "numpy.float64",
    "numpy.fromiter",
    "sklearn.datasets.make_hastie_10_2",
    "sklearn.ensemble.GradientBoostingClassifier",
    "sklearn.ensemble.tests.test_gradient_boosting.X",
    "sklearn.ensemble.tests.test_gradient_boosting.y",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_raises",
    "sklearn.utils.validation.NotFittedError"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_symbol_labels": {
  "data": {
   "lineno": 550,
   "symbols_in_volume": [
    "len",
    "map",
    "sklearn.ensemble.GradientBoostingClassifier",
    "sklearn.ensemble.tests.test_gradient_boosting.T",
    "sklearn.ensemble.tests.test_gradient_boosting.X",
    "sklearn.ensemble.tests.test_gradient_boosting.true_result",
    "sklearn.ensemble.tests.test_gradient_boosting.y",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.tosequence",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_verbose_output": {
  "data": {
   "lineno": 652,
   "symbols_in_volume": [
    "sklearn.ensemble.GradientBoostingClassifier",
    "sklearn.ensemble.tests.test_gradient_boosting.X",
    "sklearn.ensemble.tests.test_gradient_boosting.sys",
    "sklearn.ensemble.tests.test_gradient_boosting.y",
    "sklearn.externals.six.moves.cStringIO",
    "sklearn.utils.testing.assert_equal",
    "sum"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_warm_start": {
  "data": {
   "lineno": 702,
   "symbols_in_volume": [
    "Cls",
    "sklearn.datasets.make_hastie_10_2",
    "sklearn.ensemble.GradientBoostingClassifier",
    "sklearn.ensemble.GradientBoostingRegressor",
    "sklearn.ensemble.tests.test_gradient_boosting.X",
    "sklearn.ensemble.tests.test_gradient_boosting.y",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_warm_start_clear": {
  "data": {
   "lineno": 747,
   "symbols_in_volume": [
    "Cls",
    "sklearn.datasets.make_hastie_10_2",
    "sklearn.ensemble.GradientBoostingClassifier",
    "sklearn.ensemble.GradientBoostingRegressor",
    "sklearn.ensemble.tests.test_gradient_boosting.X",
    "sklearn.ensemble.tests.test_gradient_boosting.y",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_warm_start_equal_n_estimators": {
  "data": {
   "lineno": 782,
   "symbols_in_volume": [
    "Cls",
    "sklearn.base.clone",
    "sklearn.datasets.make_hastie_10_2",
    "sklearn.ensemble.GradientBoostingClassifier",
    "sklearn.ensemble.GradientBoostingRegressor",
    "sklearn.ensemble.tests.test_gradient_boosting.X",
    "sklearn.ensemble.tests.test_gradient_boosting.y",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_warm_start_max_depth": {
  "data": {
   "lineno": 732,
   "symbols_in_volume": [
    "Cls",
    "range",
    "sklearn.datasets.make_hastie_10_2",
    "sklearn.ensemble.GradientBoostingClassifier",
    "sklearn.ensemble.GradientBoostingRegressor",
    "sklearn.ensemble.tests.test_gradient_boosting.X",
    "sklearn.ensemble.tests.test_gradient_boosting.y",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_warm_start_n_estimators": {
  "data": {
   "lineno": 717,
   "symbols_in_volume": [
    "Cls",
    "sklearn.datasets.make_hastie_10_2",
    "sklearn.ensemble.GradientBoostingClassifier",
    "sklearn.ensemble.GradientBoostingRegressor",
    "sklearn.ensemble.tests.test_gradient_boosting.X",
    "sklearn.ensemble.tests.test_gradient_boosting.y",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_warm_start_oob": {
  "data": {
   "lineno": 811,
   "symbols_in_volume": [
    "Cls",
    "sklearn.datasets.make_hastie_10_2",
    "sklearn.ensemble.GradientBoostingClassifier",
    "sklearn.ensemble.GradientBoostingRegressor",
    "sklearn.ensemble.tests.test_gradient_boosting.X",
    "sklearn.ensemble.tests.test_gradient_boosting.y",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_warm_start_oob_switch": {
  "data": {
   "lineno": 796,
   "symbols_in_volume": [
    "Cls",
    "numpy.bool",
    "numpy.zeros",
    "sklearn.datasets.make_hastie_10_2",
    "sklearn.ensemble.GradientBoostingClassifier",
    "sklearn.ensemble.GradientBoostingRegressor",
    "sklearn.ensemble.tests.test_gradient_boosting.X",
    "sklearn.ensemble.tests.test_gradient_boosting.y",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_warm_start_smaller_n_estimators": {
  "data": {
   "lineno": 772,
   "symbols_in_volume": [
    "Cls",
    "ValueError",
    "sklearn.datasets.make_hastie_10_2",
    "sklearn.ensemble.GradientBoostingClassifier",
    "sklearn.ensemble.GradientBoostingRegressor",
    "sklearn.ensemble.tests.test_gradient_boosting.X",
    "sklearn.ensemble.tests.test_gradient_boosting.y",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_warm_start_wo_nestimators_change": {
  "data": {
   "lineno": 971,
   "symbols_in_volume": [
    "sklearn.ensemble.GradientBoostingClassifier",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_warm_start_zero_n_estimators": {
  "data": {
   "lineno": 762,
   "symbols_in_volume": [
    "Cls",
    "ValueError",
    "sklearn.datasets.make_hastie_10_2",
    "sklearn.ensemble.GradientBoostingClassifier",
    "sklearn.ensemble.GradientBoostingRegressor",
    "sklearn.ensemble.tests.test_gradient_boosting.X",
    "sklearn.ensemble.tests.test_gradient_boosting.y",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_zero_estimator_clf": {
  "data": {
   "lineno": 924,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "sklearn.ensemble.GradientBoostingClassifier",
    "sklearn.ensemble.gradient_boosting.ZeroEstimator",
    "sklearn.ensemble.tests.test_gradient_boosting.X",
    "sklearn.ensemble.tests.test_gradient_boosting.iris",
    "sklearn.ensemble.tests.test_gradient_boosting.y",
    "sklearn.utils.testing.assert_greater",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_zero_estimator_reg": {
  "data": {
   "lineno": 903,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.ensemble.GradientBoostingRegressor",
    "sklearn.ensemble.gradient_boosting.ZeroEstimator",
    "sklearn.ensemble.tests.test_gradient_boosting.boston",
    "sklearn.metrics.mean_squared_error",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.tosequence": {
  "data": {
   "shadows": "sklearn.utils.tosequence"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.true_result": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.y": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "sklearn.ensemble.tests.test_gradient_boosting_loss_functions": {
  "data": {},
  "type": "module"
 },
 "sklearn.ensemble.tests.test_gradient_boosting_loss_functions.BinomialDeviance": {
  "data": {
   "shadows": "sklearn.ensemble.gradient_boosting.BinomialDeviance"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_gradient_boosting_loss_functions.LOSS_FUNCTIONS": {
  "data": {
   "shadows": "sklearn.ensemble.gradient_boosting.LOSS_FUNCTIONS"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_gradient_boosting_loss_functions.LeastSquaresError": {
  "data": {
   "shadows": "sklearn.ensemble.gradient_boosting.LeastSquaresError"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_gradient_boosting_loss_functions.LogOddsEstimator": {
  "data": {
   "shadows": "sklearn.ensemble.gradient_boosting.LogOddsEstimator"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_gradient_boosting_loss_functions.RegressionLossFunction": {
  "data": {
   "shadows": "sklearn.ensemble.gradient_boosting.RegressionLossFunction"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_gradient_boosting_loss_functions._weighted_percentile": {
  "data": {
   "shadows": "sklearn.ensemble.gradient_boosting._weighted_percentile"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_gradient_boosting_loss_functions.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_gradient_boosting_loss_functions.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_gradient_boosting_loss_functions.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_gradient_boosting_loss_functions.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_gradient_boosting_loss_functions.check_random_state": {
  "data": {
   "shadows": "sklearn.utils.check_random_state"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_gradient_boosting_loss_functions.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_gradient_boosting_loss_functions.test_binomial_deviance": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "alt_dev",
    "alt_ng",
    "bd",
    "bd.negative_gradient",
    "numpy.array",
    "numpy.exp",
    "numpy.logaddexp",
    "numpy.mean",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_equal",
    "sklearn.ensemble.gradient_boosting.BinomialDeviance"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting_loss_functions.test_log_odds_estimator": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "ValueError",
    "nose.tools.assert_raises",
    "numpy.array",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "sklearn.ensemble.gradient_boosting.LogOddsEstimator"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting_loss_functions.test_sample_weight_deviance": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "Loss",
    "Loss.is_multi_class",
    "issubclass",
    "loss",
    "numpy.float64",
    "numpy.ones",
    "numpy.zeros",
    "range",
    "sklearn.ensemble.gradient_boosting.LOSS_FUNCTIONS.values",
    "sklearn.ensemble.gradient_boosting.RegressionLossFunction",
    "sklearn.utils.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting_loss_functions.test_sample_weight_init_estimators": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "Loss",
    "issubclass",
    "loss",
    "loss.init_estimator",
    "numpy.ones",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "sklearn.ensemble.gradient_boosting.LOSS_FUNCTIONS.values",
    "sklearn.ensemble.gradient_boosting.RegressionLossFunction",
    "sklearn.utils.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting_loss_functions.test_sample_weight_smoke": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "loss",
    "numpy.float32",
    "numpy.ones",
    "numpy.testing.assert_almost_equal",
    "sklearn.ensemble.gradient_boosting.LeastSquaresError",
    "sklearn.utils.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting_loss_functions.test_weighted_percentile": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "numpy.empty",
    "numpy.float",
    "numpy.ones",
    "sklearn.ensemble.gradient_boosting._weighted_percentile"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting_loss_functions.test_weighted_percentile_equal": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "numpy.empty",
    "numpy.float",
    "numpy.ones",
    "sklearn.ensemble.gradient_boosting._weighted_percentile"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting_loss_functions.test_weighted_percentile_zero_weight": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "numpy.empty",
    "numpy.float",
    "numpy.ones",
    "sklearn.ensemble.gradient_boosting._weighted_percentile"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_partial_dependence": {
  "data": {
   "symbols_in_volume": [
    "sklearn.datasets.load_boston",
    "sklearn.datasets.load_iris"
   ]
  },
  "type": "module"
 },
 "sklearn.ensemble.tests.test_partial_dependence.GradientBoostingClassifier": {
  "data": {
   "shadows": "sklearn.ensemble.GradientBoostingClassifier"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_partial_dependence.GradientBoostingRegressor": {
  "data": {
   "shadows": "sklearn.ensemble.GradientBoostingRegressor"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_partial_dependence.T": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "sklearn.ensemble.tests.test_partial_dependence.X": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "sklearn.ensemble.tests.test_partial_dependence.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_partial_dependence.assert_raises": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_partial_dependence.boston": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "sklearn.ensemble.tests.test_partial_dependence.datasets": {
  "data": {
   "shadows": "sklearn.datasets"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_partial_dependence.if_matplotlib": {
  "data": {
   "shadows": "sklearn.utils.testing.if_matplotlib"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_partial_dependence.iris": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "sklearn.ensemble.tests.test_partial_dependence.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_partial_dependence.partial_dependence": {
  "data": {
   "shadows": "sklearn.ensemble.partial_dependence.partial_dependence"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_partial_dependence.plot_partial_dependence": {
  "data": {
   "shadows": "sklearn.ensemble.partial_dependence.plot_partial_dependence"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_partial_dependence.test_partial_dependecy_input": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "ValueError",
    "numpy.random.rand",
    "sklearn.ensemble.GradientBoostingClassifier",
    "sklearn.ensemble.partial_dependence.partial_dependence",
    "sklearn.ensemble.tests.test_partial_dependence.X",
    "sklearn.ensemble.tests.test_partial_dependence.y",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_partial_dependence.test_partial_dependence_classifier": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.testing.assert_array_equal",
    "numpy.unique",
    "sklearn.ensemble.GradientBoostingClassifier",
    "sklearn.ensemble.partial_dependence.partial_dependence",
    "sklearn.ensemble.tests.test_partial_dependence.X",
    "sklearn.ensemble.tests.test_partial_dependence.y"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_partial_dependence.test_partial_dependence_multiclass": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "len",
    "sklearn.ensemble.GradientBoostingClassifier",
    "sklearn.ensemble.partial_dependence.partial_dependence",
    "sklearn.ensemble.tests.test_partial_dependence.iris"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_partial_dependence.test_partial_dependence_regressor": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "sklearn.ensemble.GradientBoostingRegressor",
    "sklearn.ensemble.partial_dependence.partial_dependence",
    "sklearn.ensemble.tests.test_partial_dependence.boston"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_partial_dependence.test_plot_partial_dependence": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "all",
    "len",
    "sklearn.ensemble.GradientBoostingRegressor",
    "sklearn.ensemble.partial_dependence.plot_partial_dependence",
    "sklearn.ensemble.tests.test_partial_dependence.boston",
    "sklearn.utils.testing.if_matplotlib"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_partial_dependence.test_plot_partial_dependence_input": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "sklearn.ensemble.GradientBoostingClassifier",
    "sklearn.ensemble.partial_dependence.plot_partial_dependence",
    "sklearn.ensemble.tests.test_partial_dependence.X",
    "sklearn.ensemble.tests.test_partial_dependence.y",
    "sklearn.utils.testing.assert_raises",
    "sklearn.utils.testing.if_matplotlib"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_partial_dependence.test_plot_partial_dependence_multiclass": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "ValueError",
    "all",
    "len",
    "sklearn.ensemble.GradientBoostingClassifier",
    "sklearn.ensemble.partial_dependence.plot_partial_dependence",
    "sklearn.ensemble.tests.test_partial_dependence.iris",
    "sklearn.utils.testing.assert_raises",
    "sklearn.utils.testing.if_matplotlib"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_partial_dependence.true_result": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "sklearn.ensemble.tests.test_partial_dependence.y": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "sklearn.ensemble.tests.test_voting_classifier": {
  "data": {
   "symbols_in_volume": [
    "sklearn.datasets.load_iris",
    "sklearn.ensemble.tests.test_voting_classifier.iris"
   ]
  },
  "type": "module"
 },
 "sklearn.ensemble.tests.test_voting_classifier.GaussianNB": {
  "data": {
   "shadows": "sklearn.naive_bayes.GaussianNB"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_voting_classifier.GridSearchCV": {
  "data": {
   "shadows": "sklearn.grid_search.GridSearchCV"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_voting_classifier.LogisticRegression": {
  "data": {
   "shadows": "sklearn.linear_model.LogisticRegression"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_voting_classifier.OneVsRestClassifier": {
  "data": {
   "shadows": "sklearn.multiclass.OneVsRestClassifier"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_voting_classifier.RandomForestClassifier": {
  "data": {
   "shadows": "sklearn.ensemble.RandomForestClassifier"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_voting_classifier.SVC": {
  "data": {
   "shadows": "sklearn.svm.SVC"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_voting_classifier.VotingClassifier": {
  "data": {
   "shadows": "sklearn.ensemble.VotingClassifier"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_voting_classifier.assert_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_voting_classifier.assert_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_voting_classifier.cross_validation": {
  "data": {
   "shadows": "sklearn.cross_validation"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_voting_classifier.datasets": {
  "data": {
   "shadows": "sklearn.datasets"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_voting_classifier.iris": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "sklearn.ensemble.tests.test_voting_classifier.make_multilabel_classification": {
  "data": {
   "shadows": "sklearn.datasets.make_multilabel_classification"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_voting_classifier.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_voting_classifier.test_gridsearch": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "sklearn.ensemble.RandomForestClassifier",
    "sklearn.ensemble.VotingClassifier",
    "sklearn.ensemble.tests.test_voting_classifier.iris",
    "sklearn.grid_search.GridSearchCV",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.naive_bayes.GaussianNB"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_voting_classifier.test_majority_label_iris": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "sklearn.cross_validation.cross_val_score",
    "sklearn.ensemble.RandomForestClassifier",
    "sklearn.ensemble.VotingClassifier",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.naive_bayes.GaussianNB",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_voting_classifier.test_multilabel": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "NotImplementedError",
    "sklearn.datasets.make_multilabel_classification",
    "sklearn.ensemble.VotingClassifier",
    "sklearn.multiclass.OneVsRestClassifier",
    "sklearn.svm.SVC"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_voting_classifier.test_predict_on_toy_problem": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "all",
    "numpy.array",
    "sklearn.ensemble.RandomForestClassifier",
    "sklearn.ensemble.VotingClassifier",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.naive_bayes.GaussianNB",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_voting_classifier.test_predict_proba_on_toy_problem": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "AssertionError",
    "AttributeError",
    "numpy.array",
    "sklearn.ensemble.RandomForestClassifier",
    "sklearn.ensemble.VotingClassifier",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.naive_bayes.GaussianNB",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_voting_classifier.test_tie_situation": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "sklearn.ensemble.RandomForestClassifier",
    "sklearn.ensemble.VotingClassifier",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_voting_classifier.test_weights_iris": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "sklearn.cross_validation.cross_val_score",
    "sklearn.ensemble.RandomForestClassifier",
    "sklearn.ensemble.VotingClassifier",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.naive_bayes.GaussianNB",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_weight_boosting": {
  "data": {
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.datasets.load_boston",
    "sklearn.datasets.load_iris",
    "sklearn.ensemble.tests.test_weight_boosting.boston",
    "sklearn.ensemble.tests.test_weight_boosting.iris",
    "sklearn.ensemble.tests.test_weight_boosting.rng",
    "sklearn.utils.shuffle"
   ]
  },
  "type": "module"
 },
 "sklearn.ensemble.tests.test_weight_boosting.AdaBoostClassifier": {
  "data": {
   "shadows": "sklearn.ensemble.AdaBoostClassifier"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_weight_boosting.AdaBoostRegressor": {
  "data": {
   "shadows": "sklearn.ensemble.AdaBoostRegressor"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_weight_boosting.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_weight_boosting.DecisionTreeClassifier": {
  "data": {
   "shadows": "sklearn.tree.DecisionTreeClassifier"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_weight_boosting.DecisionTreeRegressor": {
  "data": {
   "shadows": "sklearn.tree.DecisionTreeRegressor"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_weight_boosting.GridSearchCV": {
  "data": {
   "shadows": "sklearn.grid_search.GridSearchCV"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_weight_boosting.KMeans": {
  "data": {
   "shadows": "sklearn.cluster.KMeans"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_weight_boosting.LogisticRegression": {
  "data": {
   "shadows": "sklearn.linear_model.LogisticRegression"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_weight_boosting.RandomForestClassifier": {
  "data": {
   "shadows": "sklearn.ensemble.RandomForestClassifier"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_weight_boosting.RandomForestRegressor": {
  "data": {
   "shadows": "sklearn.ensemble.RandomForestRegressor"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_weight_boosting.SVC": {
  "data": {
   "shadows": "sklearn.svm.SVC"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_weight_boosting.SVR": {
  "data": {
   "shadows": "sklearn.svm.SVR"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_weight_boosting.T": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "sklearn.ensemble.tests.test_weight_boosting.X": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "sklearn.ensemble.tests.test_weight_boosting.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_weight_boosting.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_weight_boosting.assert_array_less": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_less"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_weight_boosting.assert_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_weight_boosting.assert_raises": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_weight_boosting.assert_raises_regexp": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises_regexp"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_weight_boosting.assert_true": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_true"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_weight_boosting.boston": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "sklearn.ensemble.tests.test_weight_boosting.coo_matrix": {
  "data": {
   "shadows": "scipy.sparse.coo_matrix"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_weight_boosting.csc_matrix": {
  "data": {
   "shadows": "scipy.sparse.csc_matrix"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_weight_boosting.csr_matrix": {
  "data": {
   "shadows": "scipy.sparse.csr_matrix"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_weight_boosting.datasets": {
  "data": {
   "shadows": "sklearn.datasets"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_weight_boosting.dok_matrix": {
  "data": {
   "shadows": "scipy.sparse.dok_matrix"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_weight_boosting.iris": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "sklearn.ensemble.tests.test_weight_boosting.lil_matrix": {
  "data": {
   "shadows": "scipy.sparse.lil_matrix"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_weight_boosting.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_weight_boosting.perm": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "sklearn.ensemble.tests.test_weight_boosting.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_weight_boosting.rng": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "sklearn.ensemble.tests.test_weight_boosting.shuffle": {
  "data": {
   "shadows": "sklearn.utils.shuffle"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_weight_boosting.test_base_estimator": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.ensemble.AdaBoostClassifier",
    "sklearn.ensemble.AdaBoostRegressor",
    "sklearn.ensemble.RandomForestClassifier",
    "sklearn.ensemble.RandomForestRegressor",
    "sklearn.ensemble.tests.test_weight_boosting.X",
    "sklearn.ensemble.tests.test_weight_boosting.y_class",
    "sklearn.ensemble.tests.test_weight_boosting.y_regr",
    "sklearn.svm.SVC",
    "sklearn.svm.SVR",
    "sklearn.utils.testing.assert_raises_regexp"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_weight_boosting.test_boston": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "sklearn.ensemble.AdaBoostRegressor",
    "sklearn.ensemble.tests.test_weight_boosting.boston"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_weight_boosting.test_classification_toy": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "len",
    "numpy.asarray",
    "numpy.unique",
    "sklearn.ensemble.AdaBoostClassifier",
    "sklearn.ensemble.tests.test_weight_boosting.T",
    "sklearn.ensemble.tests.test_weight_boosting.X",
    "sklearn.ensemble.tests.test_weight_boosting.y_class",
    "sklearn.ensemble.tests.test_weight_boosting.y_t_class",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_weight_boosting.test_error": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "ValueError",
    "numpy.asarray",
    "sklearn.ensemble.AdaBoostClassifier",
    "sklearn.ensemble.tests.test_weight_boosting.X",
    "sklearn.ensemble.tests.test_weight_boosting.y_class",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_weight_boosting.test_gridsearch": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "sklearn.ensemble.AdaBoostClassifier",
    "sklearn.ensemble.AdaBoostRegressor",
    "sklearn.ensemble.tests.test_weight_boosting.boston",
    "sklearn.ensemble.tests.test_weight_boosting.iris",
    "sklearn.grid_search.GridSearchCV",
    "sklearn.tree.DecisionTreeClassifier",
    "sklearn.tree.DecisionTreeRegressor"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_weight_boosting.test_importances": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "numpy.newaxis.all",
    "sklearn.datasets.make_classification",
    "sklearn.ensemble.AdaBoostClassifier",
    "sklearn.ensemble.tests.test_weight_boosting.X",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_weight_boosting.test_iris": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "len",
    "numpy.abs",
    "numpy.unique",
    "sklearn.ensemble.AdaBoostClassifier",
    "sklearn.ensemble.tests.test_weight_boosting.iris",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_array_less",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_weight_boosting.test_pickle": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "sklearn.ensemble.AdaBoostClassifier",
    "sklearn.ensemble.AdaBoostRegressor",
    "sklearn.ensemble.tests.test_weight_boosting.boston",
    "sklearn.ensemble.tests.test_weight_boosting.iris",
    "sklearn.ensemble.tests.test_weight_boosting.pickle",
    "sklearn.utils.testing.assert_equal",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_weight_boosting.test_regression_toy": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "sklearn.ensemble.AdaBoostRegressor",
    "sklearn.ensemble.tests.test_weight_boosting.T",
    "sklearn.ensemble.tests.test_weight_boosting.X",
    "sklearn.ensemble.tests.test_weight_boosting.y_regr",
    "sklearn.ensemble.tests.test_weight_boosting.y_t_regr",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_weight_boosting.test_samme_proba": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "MockEstimator",
    "numpy.abs",
    "numpy.argmax",
    "numpy.argmin",
    "numpy.array",
    "numpy.isfinite",
    "numpy.newaxis",
    "numpy.ones_like",
    "sklearn.ensemble.weight_boosting._samme_proba",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_weight_boosting.test_samme_proba.MockEstimator": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "sklearn.ensemble.tests.test_weight_boosting.test_samme_proba.MockEstimator.predict_proba": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "sklearn.ensemble.tests.test_weight_boosting.X",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_weight_boosting.test_sample_weight_adaboost_regressor": {
  "data": {
   "lineno": 451,
   "symbols_in_volume": [
    "DummyEstimator",
    "len",
    "sklearn.ensemble.AdaBoostRegressor",
    "sklearn.ensemble.tests.test_weight_boosting.X",
    "sklearn.ensemble.tests.test_weight_boosting.y_regr",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_weight_boosting.test_sample_weight_adaboost_regressor.DummyEstimator": {
  "data": {
   "lineno": 458,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator"
   ]
  },
  "type": "class"
 },
 "sklearn.ensemble.tests.test_weight_boosting.test_sample_weight_adaboost_regressor.DummyEstimator.fit": {
  "data": {
   "lineno": 460
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_weight_boosting.test_sample_weight_adaboost_regressor.DummyEstimator.predict": {
  "data": {
   "lineno": 463,
   "symbols_in_volume": [
    "numpy.zeros",
    "sklearn.ensemble.tests.test_weight_boosting.X"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_weight_boosting.test_sample_weight_missing": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.cluster.KMeans",
    "sklearn.ensemble.AdaBoostClassifier",
    "sklearn.ensemble.AdaBoostRegressor",
    "sklearn.ensemble.tests.test_weight_boosting.X",
    "sklearn.ensemble.tests.test_weight_boosting.y_regr",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_weight_boosting.test_sparse_classification": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "CustomSVC",
    "all",
    "numpy.ravel",
    "scipy.sparse.coo_matrix",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.dok_matrix",
    "scipy.sparse.lil_matrix",
    "sklearn.cross_validation.train_test_split",
    "sklearn.datasets.make_multilabel_classification",
    "sklearn.ensemble.AdaBoostClassifier",
    "sklearn.ensemble.tests.test_weight_boosting.X",
    "sklearn.utils.testing.assert_array_equal",
    "sparse_format",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_weight_boosting.test_sparse_classification.CustomSVC": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": [
    "sklearn.svm.SVC"
   ]
  },
  "type": "class"
 },
 "sklearn.ensemble.tests.test_weight_boosting.test_sparse_classification.CustomSVC.fit": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": [
    "sklearn.ensemble.tests.test_weight_boosting.X",
    "super",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_weight_boosting.test_sparse_regression": {
  "data": {
   "lineno": 400,
   "symbols_in_volume": [
    "CustomSVR",
    "all",
    "scipy.sparse.coo_matrix",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.dok_matrix",
    "scipy.sparse.lil_matrix",
    "sklearn.cross_validation.train_test_split",
    "sklearn.datasets.make_regression",
    "sklearn.ensemble.AdaBoostRegressor",
    "sklearn.ensemble.tests.test_weight_boosting.X",
    "sklearn.utils.testing.assert_array_equal",
    "sparse_format",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_weight_boosting.test_sparse_regression.CustomSVR": {
  "data": {
   "lineno": 403,
   "symbols_in_volume": [
    "sklearn.svm.SVR"
   ]
  },
  "type": "class"
 },
 "sklearn.ensemble.tests.test_weight_boosting.test_sparse_regression.CustomSVR.fit": {
  "data": {
   "lineno": 406,
   "symbols_in_volume": [
    "sklearn.ensemble.tests.test_weight_boosting.X",
    "super",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_weight_boosting.test_staged_predict": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "len",
    "numpy.random.RandomState",
    "sklearn.ensemble.AdaBoostClassifier",
    "sklearn.ensemble.AdaBoostRegressor",
    "sklearn.ensemble.tests.test_weight_boosting.boston",
    "sklearn.ensemble.tests.test_weight_boosting.iris",
    "sklearn.ensemble.tests.test_weight_boosting.rng",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.tests.test_weight_boosting.train_test_split": {
  "data": {
   "shadows": "sklearn.cross_validation.train_test_split"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_weight_boosting.weight_boosting": {
  "data": {
   "shadows": "sklearn.ensemble.weight_boosting"
  },
  "type": "import"
 },
 "sklearn.ensemble.tests.test_weight_boosting.y_class": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "sklearn.ensemble.tests.test_weight_boosting.y_regr": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "sklearn.ensemble.tests.test_weight_boosting.y_t_class": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "sklearn.ensemble.tests.test_weight_boosting.y_t_regr": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "sklearn.ensemble.voting_classifier": {
  "data": {},
  "type": "module"
 },
 "sklearn.ensemble.voting_classifier.VotingClassifier": {
  "data": {
   "lineno": 24
  },
  "type": "class"
 },
 "sklearn.ensemble.voting_classifier.VotingClassifier.__init__": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.voting_classifier.VotingClassifier._collect_probas": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.voting_classifier.VotingClassifier._predict": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.voting_classifier.VotingClassifier._predict_proba": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "numpy.average"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.voting_classifier.VotingClassifier.fit": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "LabelEncoder",
    "NotImplementedError",
    "ValueError",
    "clone",
    "isinstance",
    "len",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.voting_classifier.VotingClassifier.get_params": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "sklearn.ensemble.voting_classifier.VotingClassifier",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.voting_classifier.VotingClassifier.predict": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "numpy.apply_along_axis",
    "numpy.argmax",
    "numpy.bincount"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.voting_classifier.VotingClassifier.predict_proba": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "AttributeError",
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.voting_classifier.VotingClassifier.transform": {
  "data": {
   "lineno": 189
  },
  "type": "function"
 },
 "sklearn.ensemble.voting_classifier.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.ensemble.weight_boosting": {
  "data": {},
  "type": "module"
 },
 "sklearn.ensemble.weight_boosting.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "sklearn.ensemble.weight_boosting.AdaBoostClassifier": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "sklearn.ensemble.weight_boosting.BaseWeightBoosting"
   ]
  },
  "type": "class"
 },
 "sklearn.ensemble.weight_boosting.AdaBoostClassifier.__init__": {
  "data": {
   "lineno": 364,
   "symbols_in_volume": [
    "sklearn.ensemble.weight_boosting.AdaBoostClassifier",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.weight_boosting.AdaBoostClassifier._boost": {
  "data": {
   "lineno": 425
  },
  "type": "function"
 },
 "sklearn.ensemble.weight_boosting.AdaBoostClassifier._boost_discrete": {
  "data": {
   "lineno": 530,
   "symbols_in_volume": [
    "ValueError",
    "getattr",
    "len",
    "numpy.average",
    "numpy.exp",
    "numpy.log",
    "numpy.mean"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.weight_boosting.AdaBoostClassifier._boost_real": {
  "data": {
   "lineno": 467,
   "symbols_in_volume": [
    "ValueError",
    "getattr",
    "len",
    "numpy.argmax",
    "numpy.array",
    "numpy.average",
    "numpy.core.umath_tests.inner1d",
    "numpy.exp",
    "numpy.finfo",
    "numpy.log",
    "numpy.mean",
    "numpy.newaxis"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.weight_boosting.AdaBoostClassifier._validate_estimator": {
  "data": {
   "lineno": 407,
   "symbols_in_volume": [
    "DecisionTreeClassifier",
    "TypeError",
    "ValueError",
    "hasattr",
    "sklearn.ensemble.weight_boosting.AdaBoostClassifier",
    "sklearn.utils.validation.has_fit_parameter",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.weight_boosting.AdaBoostClassifier.decision_function": {
  "data": {
   "lineno": 639,
   "symbols_in_volume": [
    "numpy.newaxis",
    "sklearn.ensemble.weight_boosting._samme_proba",
    "sklearn.utils.validation.check_is_fitted",
    "sum",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.weight_boosting.AdaBoostClassifier.fit": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.ensemble.weight_boosting.AdaBoostClassifier",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.weight_boosting.AdaBoostClassifier.predict": {
  "data": {
   "lineno": 583,
   "symbols_in_volume": [
    "numpy.argmax"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.weight_boosting.AdaBoostClassifier.predict_log_proba": {
  "data": {
   "lineno": 826,
   "symbols_in_volume": [
    "numpy.log"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.weight_boosting.AdaBoostClassifier.predict_proba": {
  "data": {
   "lineno": 733,
   "symbols_in_volume": [
    "numpy.exp",
    "numpy.newaxis",
    "sklearn.ensemble.weight_boosting._samme_proba",
    "sklearn.utils.validation.check_is_fitted",
    "sum",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.weight_boosting.AdaBoostClassifier.staged_decision_function": {
  "data": {
   "lineno": 680,
   "symbols_in_volume": [
    "numpy.copy",
    "numpy.newaxis",
    "sklearn.ensemble.weight_boosting._samme_proba",
    "sklearn.utils.validation.check_is_fitted",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.weight_boosting.AdaBoostClassifier.staged_predict": {
  "data": {
   "lineno": 607,
   "symbols_in_volume": [
    "numpy.argmax",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.weight_boosting.AdaBoostClassifier.staged_predict_proba": {
  "data": {
   "lineno": 774,
   "symbols_in_volume": [
    "numpy.exp",
    "numpy.newaxis",
    "sklearn.ensemble.weight_boosting._samme_proba",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.weight_boosting.AdaBoostRegressor": {
  "data": {
   "lineno": 848,
   "symbols_in_volume": [
    "sklearn.ensemble.weight_boosting.BaseWeightBoosting"
   ]
  },
  "type": "class"
 },
 "sklearn.ensemble.weight_boosting.AdaBoostRegressor.__init__": {
  "data": {
   "lineno": 912,
   "symbols_in_volume": [
    "sklearn.ensemble.weight_boosting.AdaBoostRegressor",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.weight_boosting.AdaBoostRegressor._boost": {
  "data": {
   "lineno": 962,
   "symbols_in_volume": [
    "ValueError",
    "check_random_state",
    "len",
    "numpy.abs",
    "numpy.array",
    "numpy.exp",
    "numpy.log",
    "numpy.power"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.weight_boosting.AdaBoostRegressor._get_median_predict": {
  "data": {
   "lineno": 1057,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.argsort",
    "numpy.array",
    "numpy.newaxis"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.weight_boosting.AdaBoostRegressor._validate_estimator": {
  "data": {
   "lineno": 957,
   "symbols_in_volume": [
    "DecisionTreeRegressor",
    "sklearn.ensemble.weight_boosting.AdaBoostRegressor",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.weight_boosting.AdaBoostRegressor.fit": {
  "data": {
   "lineno": 928,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.ensemble.weight_boosting.AdaBoostRegressor",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.weight_boosting.AdaBoostRegressor.predict": {
  "data": {
   "lineno": 1075,
   "symbols_in_volume": [
    "len",
    "sklearn.utils.validation.check_is_fitted"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.weight_boosting.AdaBoostRegressor.staged_predict": {
  "data": {
   "lineno": 1097,
   "symbols_in_volume": [
    "enumerate",
    "sklearn.utils.validation.check_is_fitted"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.weight_boosting.BaseWeightBoosting": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "abc.ABCMeta"
   ]
  },
  "type": "class"
 },
 "sklearn.ensemble.weight_boosting.BaseWeightBoosting.__init__": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "sklearn.ensemble.weight_boosting.BaseWeightBoosting",
    "super",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.weight_boosting.BaseWeightBoosting._boost": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.weight_boosting.BaseWeightBoosting._validate_X_predict": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "check_array",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.weight_boosting.BaseWeightBoosting.feature_importances_": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "AttributeError",
    "ValueError",
    "len",
    "property",
    "sum",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.weight_boosting.BaseWeightBoosting.fit": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "ValueError",
    "check_X_y",
    "is_regressor",
    "isinstance",
    "numpy.empty",
    "numpy.float",
    "numpy.float64",
    "numpy.ones",
    "numpy.sum",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.weight_boosting.BaseWeightBoosting.staged_score": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "accuracy_score",
    "isinstance",
    "r2_score"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.weight_boosting.__all__": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "sklearn.ensemble.weight_boosting._samme_proba": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "numpy.finfo",
    "numpy.log",
    "numpy.newaxis"
   ]
  },
  "type": "function"
 },
 "sklearn.ensemble.weight_boosting.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "sklearn.ensemble.weight_boosting.check_is_fitted": {
  "data": {
   "shadows": "sklearn.utils.validation.check_is_fitted"
  },
  "type": "import"
 },
 "sklearn.ensemble.weight_boosting.has_fit_parameter": {
  "data": {
   "shadows": "sklearn.utils.validation.has_fit_parameter"
  },
  "type": "import"
 },
 "sklearn.ensemble.weight_boosting.inner1d": {
  "data": {
   "shadows": "numpy.core.umath_tests.inner1d"
  },
  "type": "import"
 },
 "sklearn.ensemble.weight_boosting.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.ensemble.weight_boosting.range": {
  "data": {
   "shadows": "xrange"
  },
  "type": "import"
 },
 "sklearn.externals": {
  "data": {},
  "type": "module"
 },
 "sklearn.externals.funcsigs": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "all.__call__",
    "sklearn.externals.funcsigs._MethodWrapper",
    "sklearn.externals.funcsigs._ParameterKind",
    "sklearn.externals.funcsigs._WrapperDescriptor",
    "sklearn.externals.funcsigs.types",
    "type",
    "type.__call__"
   ]
  },
  "type": "module"
 },
 "sklearn.externals.funcsigs.BoundArguments": {
  "data": {
   "lineno": 347,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "sklearn.externals.funcsigs.BoundArguments.__eq__": {
  "data": {
   "lineno": 435,
   "symbols_in_volume": [
    "issubclass",
    "sklearn.externals.funcsigs.BoundArguments"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.funcsigs.BoundArguments.__hash__": {
  "data": {
   "lineno": 431,
   "symbols_in_volume": [
    "TypeError"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.funcsigs.BoundArguments.__init__": {
  "data": {
   "lineno": 364,
   "symbols_in_volume": [
    "sklearn.externals.funcsigs.signature"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.funcsigs.BoundArguments.__ne__": {
  "data": {
   "lineno": 440
  },
  "type": "function"
 },
 "sklearn.externals.funcsigs.BoundArguments.args": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": [
    "KeyError",
    "property",
    "sklearn.externals.funcsigs._KEYWORD_ONLY",
    "sklearn.externals.funcsigs._VAR_KEYWORD",
    "sklearn.externals.funcsigs._VAR_POSITIONAL",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.funcsigs.BoundArguments.kwargs": {
  "data": {
   "lineno": 400,
   "symbols_in_volume": [
    "KeyError",
    "property",
    "sklearn.externals.funcsigs._KEYWORD_ONLY",
    "sklearn.externals.funcsigs._VAR_KEYWORD"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.funcsigs.BoundArguments.signature": {
  "data": {
   "lineno": 368,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.funcsigs.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "sklearn.externals.funcsigs.Parameter": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "object",
    "sklearn.externals.funcsigs._KEYWORD_ONLY",
    "sklearn.externals.funcsigs._POSITIONAL_ONLY",
    "sklearn.externals.funcsigs._POSITIONAL_OR_KEYWORD",
    "sklearn.externals.funcsigs._VAR_KEYWORD",
    "sklearn.externals.funcsigs._VAR_POSITIONAL",
    "sklearn.externals.funcsigs._empty"
   ]
  },
  "type": "class"
 },
 "sklearn.externals.funcsigs.Parameter.__eq__": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": [
    "issubclass",
    "sklearn.externals.funcsigs.Parameter"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.funcsigs.Parameter.__hash__": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": [
    "TypeError"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.funcsigs.Parameter.__init__": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.externals.funcsigs._KEYWORD_ONLY",
    "sklearn.externals.funcsigs._POSITIONAL_ONLY",
    "sklearn.externals.funcsigs._POSITIONAL_OR_KEYWORD",
    "sklearn.externals.funcsigs._VAR_KEYWORD",
    "sklearn.externals.funcsigs._VAR_POSITIONAL",
    "sklearn.externals.funcsigs._empty",
    "sklearn.externals.funcsigs.re",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.funcsigs.Parameter.__ne__": {
  "data": {
   "lineno": 343
  },
  "type": "function"
 },
 "sklearn.externals.funcsigs.Parameter.__repr__": {
  "data": {
   "lineno": 328,
   "symbols_in_volume": [
    "id"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.funcsigs.Parameter.__str__": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "repr",
    "sklearn.externals.funcsigs._POSITIONAL_ONLY",
    "sklearn.externals.funcsigs._VAR_KEYWORD",
    "sklearn.externals.funcsigs._VAR_POSITIONAL",
    "sklearn.externals.funcsigs._empty",
    "sklearn.externals.funcsigs.formatannotation"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.funcsigs.Parameter.annotation": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.funcsigs.Parameter.default": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.funcsigs.Parameter.kind": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.funcsigs.Parameter.name": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.funcsigs.Parameter.replace": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "sklearn.externals.funcsigs._void",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.funcsigs.Signature": {
  "data": {
   "lineno": 444,
   "symbols_in_volume": [
    "object",
    "sklearn.externals.funcsigs.BoundArguments",
    "sklearn.externals.funcsigs.Parameter",
    "sklearn.externals.funcsigs._empty"
   ]
  },
  "type": "class"
 },
 "sklearn.externals.funcsigs.Signature.__eq__": {
  "data": {
   "lineno": 615,
   "symbols_in_volume": [
    "KeyError",
    "dict",
    "enumerate",
    "issubclass",
    "len",
    "sklearn.externals.funcsigs.Signature",
    "sklearn.externals.funcsigs._KEYWORD_ONLY",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.funcsigs.Signature.__hash__": {
  "data": {
   "lineno": 611,
   "symbols_in_volume": [
    "TypeError"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.funcsigs.Signature.__init__": {
  "data": {
   "lineno": 474,
   "symbols_in_volume": [
    "ValueError",
    "collections.OrderedDict",
    "enumerate",
    "sklearn.externals.funcsigs._POSITIONAL_ONLY",
    "sklearn.externals.funcsigs._empty",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.funcsigs.Signature.__ne__": {
  "data": {
   "lineno": 645
  },
  "type": "function"
 },
 "sklearn.externals.funcsigs.Signature.__str__": {
  "data": {
   "lineno": 790,
   "symbols_in_volume": [
    "enumerate",
    "sklearn.externals.funcsigs._KEYWORD_ONLY",
    "sklearn.externals.funcsigs._VAR_POSITIONAL",
    "sklearn.externals.funcsigs._empty",
    "sklearn.externals.funcsigs.formatannotation",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.funcsigs.Signature._bind": {
  "data": {
   "lineno": 648,
   "symbols_in_volume": [
    "KeyError",
    "StopIteration",
    "TypeError",
    "collections.OrderedDict",
    "iter",
    "next",
    "sklearn.externals.funcsigs._KEYWORD_ONLY",
    "sklearn.externals.funcsigs._POSITIONAL_ONLY",
    "sklearn.externals.funcsigs._VAR_KEYWORD",
    "sklearn.externals.funcsigs._VAR_POSITIONAL",
    "sklearn.externals.funcsigs._empty",
    "sklearn.externals.funcsigs.itertools",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.funcsigs.Signature.bind": {
  "data": {
   "lineno": 776
  },
  "type": "function"
 },
 "sklearn.externals.funcsigs.Signature.bind_partial": {
  "data": {
   "lineno": 783
  },
  "type": "function"
 },
 "sklearn.externals.funcsigs.Signature.from_function": {
  "data": {
   "lineno": 512,
   "symbols_in_volume": [
    "TypeError",
    "classmethod",
    "cls",
    "enumerate",
    "getattr",
    "isinstance",
    "len",
    "sklearn.externals.funcsigs.Parameter",
    "sklearn.externals.funcsigs._KEYWORD_ONLY",
    "sklearn.externals.funcsigs._POSITIONAL_OR_KEYWORD",
    "sklearn.externals.funcsigs._VAR_KEYWORD",
    "sklearn.externals.funcsigs._VAR_POSITIONAL",
    "sklearn.externals.funcsigs._empty",
    "sklearn.externals.funcsigs.types",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.funcsigs.Signature.parameters": {
  "data": {
   "lineno": 585,
   "symbols_in_volume": [
    "AttributeError",
    "collections.OrderedDict",
    "property",
    "sklearn.externals.funcsigs.types"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.funcsigs.Signature.replace": {
  "data": {
   "lineno": 596,
   "symbols_in_volume": [
    "sklearn.externals.funcsigs._void",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.funcsigs.Signature.return_annotation": {
  "data": {
   "lineno": 592,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.funcsigs._KEYWORD_ONLY": {
  "data": {
   "lineno": 203
  },
  "type": "constant"
 },
 "sklearn.externals.funcsigs._MethodWrapper": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "sklearn.externals.funcsigs._NonUserDefinedCallables": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "sklearn.externals.funcsigs._POSITIONAL_ONLY": {
  "data": {
   "lineno": 200
  },
  "type": "constant"
 },
 "sklearn.externals.funcsigs._POSITIONAL_OR_KEYWORD": {
  "data": {
   "lineno": 201
  },
  "type": "constant"
 },
 "sklearn.externals.funcsigs._ParameterKind": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "class"
 },
 "sklearn.externals.funcsigs._ParameterKind.__new__": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "int.__new__"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.funcsigs._ParameterKind.__repr__": {
  "data": {
   "lineno": 196
  },
  "type": "function"
 },
 "sklearn.externals.funcsigs._ParameterKind.__str__": {
  "data": {
   "lineno": 193
  },
  "type": "function"
 },
 "sklearn.externals.funcsigs._VAR_KEYWORD": {
  "data": {
   "lineno": 204
  },
  "type": "constant"
 },
 "sklearn.externals.funcsigs._VAR_POSITIONAL": {
  "data": {
   "lineno": 202
  },
  "type": "constant"
 },
 "sklearn.externals.funcsigs._WrapperDescriptor": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "sklearn.externals.funcsigs.__all__": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "sklearn.externals.funcsigs.__version__": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "sklearn.externals.funcsigs._empty": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "sklearn.externals.funcsigs._get_user_defined_method": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "AttributeError",
    "getattr",
    "isinstance",
    "sklearn.externals.funcsigs._NonUserDefinedCallables",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.funcsigs._void": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "sklearn.externals.funcsigs.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "sklearn.externals.funcsigs.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sklearn.externals.funcsigs.formatannotation": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "isinstance",
    "repr",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.funcsigs.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "sklearn.externals.funcsigs.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "sklearn.externals.funcsigs.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "sklearn.externals.funcsigs.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "sklearn.externals.funcsigs.signature": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "AttributeError",
    "TypeError",
    "ValueError",
    "callable",
    "collections.OrderedDict",
    "isinstance",
    "sklearn.externals.funcsigs._NonUserDefinedCallables",
    "sklearn.externals.funcsigs._get_user_defined_method",
    "sklearn.externals.funcsigs.functools",
    "sklearn.externals.funcsigs.types",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.funcsigs.types": {
  "data": {
   "shadows": "types"
  },
  "type": "import"
 },
 "sklearn.externals.joblib": {
  "data": {},
  "type": "module"
 },
 "sklearn.externals.joblib.__version__": {
  "data": {
   "lineno": 118
  },
  "type": "constant"
 },
 "sklearn.externals.joblib._compat": {
  "data": {
   "symbols_in_volume": [
    "NameError",
    "bytes",
    "sklearn.externals.joblib._compat.sys",
    "str"
   ]
  },
  "type": "module"
 },
 "sklearn.externals.joblib._compat.PY3_OR_LATER": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "sklearn.externals.joblib._compat._basestring": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "sklearn.externals.joblib._compat._bytes_or_unicode": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "sklearn.externals.joblib._compat.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "sklearn.externals.joblib._memory_helpers": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "sklearn.externals.joblib._memory_helpers.re"
   ]
  },
  "type": "module"
 },
 "sklearn.externals.joblib._memory_helpers.BOM_UTF8": {
  "data": {
   "shadows": "codecs.BOM_UTF8"
  },
  "type": "import"
 },
 "sklearn.externals.joblib._memory_helpers.TextIOWrapper": {
  "data": {
   "shadows": "io.TextIOWrapper"
  },
  "type": "import"
 },
 "sklearn.externals.joblib._memory_helpers._detect_encoding": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "codecs.BOM_UTF8",
    "find_cookie",
    "read_or_stop"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib._memory_helpers._detect_encoding.find_cookie": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "LookupError",
    "SyntaxError",
    "UnicodeDecodeError",
    "codecs.lookup",
    "sklearn.externals.joblib._memory_helpers._get_normal_name",
    "sklearn.externals.joblib._memory_helpers.cookie_re"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib._memory_helpers._detect_encoding.read_or_stop": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "StopIteration",
    "readline"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib._memory_helpers._get_normal_name": {
  "data": {
   "lineno": 12
  },
  "type": "function"
 },
 "sklearn.externals.joblib._memory_helpers.cookie_re": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "sklearn.externals.joblib._memory_helpers.lookup": {
  "data": {
   "shadows": "codecs.lookup"
  },
  "type": "import"
 },
 "sklearn.externals.joblib._memory_helpers.open": {
  "data": {
   "shadows": "io.open"
  },
  "type": "import"
 },
 "sklearn.externals.joblib._memory_helpers.open_py_source": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "io.TextIOWrapper",
    "io.open",
    "sklearn.externals.joblib._memory_helpers._detect_encoding"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib._memory_helpers.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "sklearn.externals.joblib._multiprocessing_helpers": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "OSError",
    "int",
    "multiprocessing",
    "multiprocessing.Semaphore",
    "multiprocessing.forking.assert_spawning",
    "sklearn.externals.joblib._multiprocessing_helpers._sem",
    "sklearn.externals.joblib._multiprocessing_helpers.mp",
    "sklearn.externals.joblib._multiprocessing_helpers.os",
    "sklearn.externals.joblib._multiprocessing_helpers.warnings"
   ]
  },
  "type": "module"
 },
 "sklearn.externals.joblib._multiprocessing_helpers._sem": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "sklearn.externals.joblib._multiprocessing_helpers.assert_spawning": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "sklearn.externals.joblib._multiprocessing_helpers.mp": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "sklearn.externals.joblib._multiprocessing_helpers.multiprocessing.pool": {
  "data": {
   "shadows": "multiprocessing.pool"
  },
  "type": "import"
 },
 "sklearn.externals.joblib._multiprocessing_helpers.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "sklearn.externals.joblib._multiprocessing_helpers.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.disk": {
  "data": {},
  "type": "module"
 },
 "sklearn.externals.joblib.disk.RM_SUBDIRS_RETRY_TIME": {
  "data": {
   "lineno": 62
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.disk.disk_used": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "hasattr",
    "int",
    "sklearn.externals.joblib.disk.os"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.disk.errno": {
  "data": {
   "shadows": "errno"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.disk.memstr_to_kbytes": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "dict",
    "float",
    "int",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.disk.mkdirp": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "OSError",
    "sklearn.externals.joblib.disk.errno",
    "sklearn.externals.joblib.disk.os"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.disk.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.disk.rm_subdirs": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "onerror",
    "sklearn.externals.joblib.disk.RM_SUBDIRS_RETRY_TIME",
    "sklearn.externals.joblib.disk.os",
    "sklearn.externals.joblib.disk.shutil",
    "sklearn.externals.joblib.disk.sys",
    "sklearn.externals.joblib.disk.time"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.disk.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.disk.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.disk.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.format_stack": {
  "data": {
   "symbols_in_volume": [
    "AttributeError",
    "sklearn.externals.joblib.format_stack.tokenize"
   ]
  },
  "type": "module"
 },
 "sklearn.externals.joblib.format_stack.INDENT": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.format_stack._fixed_getframes": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "IndexError",
    "enumerate",
    "len",
    "list",
    "max",
    "sklearn.externals.joblib.format_stack.fix_frame_records_filenames",
    "sklearn.externals.joblib.format_stack.inspect",
    "sklearn.externals.joblib.format_stack.linecache",
    "sklearn.externals.joblib.format_stack.traceback",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.format_stack._format_traceback_lines": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.format_stack.eq_repr": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "repr",
    "sklearn.externals.joblib.format_stack.safe_repr"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.format_stack.fix_frame_records_filenames": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.format_stack.format_exc": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": [
    "AttributeError",
    "len",
    "map",
    "print",
    "sklearn.externals.joblib.format_stack._fixed_getframes",
    "sklearn.externals.joblib.format_stack.format_records",
    "sklearn.externals.joblib.format_stack.os",
    "sklearn.externals.joblib.format_stack.sys",
    "sklearn.externals.joblib.format_stack.time",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.format_stack.format_outer_frames": {
  "data": {
   "lineno": 378,
   "symbols_in_volume": [
    "enumerate",
    "isinstance",
    "len",
    "list",
    "max",
    "sklearn.externals.joblib.format_stack.format_records",
    "sklearn.externals.joblib.format_stack.inspect",
    "sklearn.externals.joblib.format_stack.linecache",
    "sklearn.externals.joblib.format_stack.os",
    "str",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.format_stack.format_records": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "IndexError",
    "KeyError",
    "OSError",
    "UnicodeDecodeError",
    "abspath",
    "eval",
    "locals",
    "locals.keys",
    "print",
    "sklearn.externals.joblib.format_stack.INDENT",
    "sklearn.externals.joblib.format_stack._format_traceback_lines",
    "sklearn.externals.joblib.format_stack.eq_repr",
    "sklearn.externals.joblib.format_stack.generate_tokens",
    "sklearn.externals.joblib.format_stack.inspect",
    "sklearn.externals.joblib.format_stack.os",
    "sklearn.externals.joblib.format_stack.safe_repr",
    "sklearn.externals.joblib.format_stack.tokenize",
    "sklearn.externals.joblib.format_stack.uniq_stable",
    "tokeneater"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.format_stack.format_records.linereader": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "getline",
    "sklearn.externals.joblib.format_stack.linecache"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.format_stack.format_records.tokeneater": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "IndexError",
    "sklearn.externals.joblib.format_stack.keyword",
    "sklearn.externals.joblib.format_stack.tokenize"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.format_stack.generate_tokens": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.format_stack.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.format_stack.keyword": {
  "data": {
   "shadows": "keyword"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.format_stack.linecache": {
  "data": {
   "shadows": "linecache"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.format_stack.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.format_stack.pydoc": {
  "data": {
   "shadows": "pydoc"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.format_stack.safe_repr": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "KeyboardInterrupt",
    "getattr",
    "repr",
    "sklearn.externals.joblib.format_stack.pydoc"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.format_stack.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.format_stack.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.format_stack.tokenize": {
  "data": {
   "shadows": "tokenize"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.format_stack.traceback": {
  "data": {
   "shadows": "traceback"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.format_stack.uniq_stable": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.func_inspect": {
  "data": {},
  "type": "module"
 },
 "sklearn.externals.joblib.func_inspect._clean_win_chars": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "hasattr",
    "quote",
    "sklearn.externals.joblib.func_inspect.urllib"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.func_inspect._function_called_str": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "repr"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.func_inspect._signature_str": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "sklearn.externals.joblib.func_inspect.inspect"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.func_inspect.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.func_inspect.filter_args": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "IndexError",
    "KeyError",
    "TypeError",
    "ValueError",
    "dict",
    "enumerate",
    "isinstance",
    "len",
    "list",
    "sklearn.externals.joblib.func_inspect._function_called_str",
    "sklearn.externals.joblib.func_inspect._signature_str",
    "sklearn.externals.joblib.func_inspect.get_func_name",
    "sklearn.externals.joblib.func_inspect.getfullargspec",
    "sklearn.externals.joblib.func_inspect.inspect",
    "sklearn.externals.joblib.func_inspect.warnings",
    "sorted",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.func_inspect.format_call": {
  "data": {
   "lineno": 346,
   "symbols_in_volume": [
    "sklearn.externals.joblib.func_inspect.format_signature"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.func_inspect.format_signature": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": [
    "len",
    "list",
    "pformat",
    "sklearn.externals.joblib.func_inspect.get_func_name"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.func_inspect.get_func_code": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "hasattr",
    "int",
    "itertools.islice",
    "list",
    "open_py_source",
    "repr",
    "sklearn.externals.joblib.func_inspect.inspect",
    "sklearn.externals.joblib.func_inspect.os",
    "sklearn.externals.joblib.func_inspect.re",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.func_inspect.get_func_name": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "TypeError",
    "hasattr",
    "sklearn.externals.joblib.func_inspect._clean_win_chars",
    "sklearn.externals.joblib.func_inspect.inspect",
    "sklearn.externals.joblib.func_inspect.os"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.func_inspect.getfullargspec": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "AttributeError",
    "sklearn.externals.joblib.func_inspect.collections",
    "sklearn.externals.joblib.func_inspect.inspect",
    "tuple_type"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.func_inspect.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.func_inspect.islice": {
  "data": {
   "shadows": "itertools.islice"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.func_inspect.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.func_inspect.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.func_inspect.urllib": {
  "data": {
   "shadows": "urllib"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.func_inspect.urllib.parse": {
  "data": {
   "shadows": "urllib.parse"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.func_inspect.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.logger": {
  "data": {},
  "type": "module"
 },
 "sklearn.externals.joblib.logger.Logger": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "sklearn.externals.joblib.logger.Logger.__init__": {
  "data": {
   "lineno": 67
  },
  "type": "function"
 },
 "sklearn.externals.joblib.logger.Logger.debug": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "sklearn.externals.joblib.logger.logging"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.logger.Logger.format": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "sklearn.externals.joblib.logger.pformat"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.logger.Logger.warn": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "sklearn.externals.joblib.logger.logging"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.logger.PrintTime": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "sklearn.externals.joblib.logger.PrintTime.__call__": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "open",
    "print",
    "sklearn.externals.joblib.logger.format_time",
    "sklearn.externals.joblib.logger.sys",
    "sklearn.externals.joblib.logger.time"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.logger.PrintTime.__init__": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "ValueError",
    "mkdirp",
    "open",
    "range",
    "sklearn.externals.joblib.logger.os",
    "sklearn.externals.joblib.logger.shutil",
    "sklearn.externals.joblib.logger.time"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.logger._squeeze_time": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "max",
    "sklearn.externals.joblib.logger.sys"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.logger.format_time": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "sklearn.externals.joblib.logger._squeeze_time"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.logger.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.logger.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.logger.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.logger.pformat": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "numpy.get_printoptions",
    "numpy.set_printoptions",
    "sklearn.externals.joblib.logger.pprint",
    "sklearn.externals.joblib.logger.sys"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.logger.pprint": {
  "data": {
   "shadows": "pprint"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.logger.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.logger.short_format_time": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "sklearn.externals.joblib.logger._squeeze_time"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.logger.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.logger.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.logger.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.memory": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "sklearn.externals.joblib.memory.weakref"
   ]
  },
  "type": "module"
 },
 "sklearn.externals.joblib.memory.FIRST_LINE_TEXT": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.memory.JobLibCollisionWarning": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "UserWarning"
   ]
  },
  "type": "class"
 },
 "sklearn.externals.joblib.memory.MemorizedFunc": {
  "data": {
   "lineno": 305
  },
  "type": "class"
 },
 "sklearn.externals.joblib.memory.MemorizedFunc.__call__": {
  "data": {
   "lineno": 482
  },
  "type": "function"
 },
 "sklearn.externals.joblib.memory.MemorizedFunc.__init__": {
  "data": {
   "lineno": 343,
   "symbols_in_volume": [
    "mkdirp",
    "sklearn.externals.joblib.memory.functools",
    "sklearn.externals.joblib.memory.inspect",
    "sklearn.externals.joblib.memory.pydoc",
    "sklearn.externals.joblib.memory.re",
    "sklearn.externals.joblib.memory.time",
    "sklearn.externals.joblib.memory.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.memory.MemorizedFunc.__reduce__": {
  "data": {
   "lineno": 485
  },
  "type": "function"
 },
 "sklearn.externals.joblib.memory.MemorizedFunc.__repr__": {
  "data": {
   "lineno": 772,
   "symbols_in_volume": [
    "repr"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.memory.MemorizedFunc._cached_call": {
  "data": {
   "lineno": 402,
   "symbols_in_volume": [
    "Exception",
    "format_time",
    "get_func_name",
    "len",
    "max",
    "print",
    "sklearn.externals.joblib.memory._get_func_fullname",
    "sklearn.externals.joblib.memory._load_output",
    "sklearn.externals.joblib.memory.os",
    "sklearn.externals.joblib.memory.shutil",
    "sklearn.externals.joblib.memory.time",
    "sklearn.externals.joblib.memory.traceback"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.memory.MemorizedFunc._check_previous_func_code": {
  "data": {
   "lineno": 566,
   "symbols_in_volume": [
    "IOError",
    "TypeError",
    "get_func_code",
    "get_func_name",
    "len",
    "open_py_source",
    "sklearn.externals.joblib.memory.JobLibCollisionWarning",
    "sklearn.externals.joblib.memory._FUNCTION_HASHES",
    "sklearn.externals.joblib.memory.extract_first_line",
    "sklearn.externals.joblib.memory.io",
    "sklearn.externals.joblib.memory.os",
    "sklearn.externals.joblib.memory.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.memory.MemorizedFunc._get_argument_hash": {
  "data": {
   "lineno": 507,
   "symbols_in_volume": [
    "filter_args"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.memory.MemorizedFunc._get_func_dir": {
  "data": {
   "lineno": 523,
   "symbols_in_volume": [
    "mkdirp",
    "sklearn.externals.joblib.memory._cache_key_to_dir"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.memory.MemorizedFunc._get_output_dir": {
  "data": {
   "lineno": 512,
   "symbols_in_volume": [
    "sklearn.externals.joblib.memory.os"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.memory.MemorizedFunc._hash_func": {
  "data": {
   "lineno": 532,
   "symbols_in_volume": [
    "getattr",
    "hash",
    "id"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.memory.MemorizedFunc._persist_input": {
  "data": {
   "lineno": 699,
   "symbols_in_volume": [
    "dict",
    "filter_args",
    "mkdirp",
    "open",
    "repr",
    "sklearn.externals.joblib.memory.json",
    "sklearn.externals.joblib.memory.os",
    "sklearn.externals.joblib.memory.time",
    "sklearn.externals.joblib.memory.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.memory.MemorizedFunc._persist_output": {
  "data": {
   "lineno": 687,
   "symbols_in_volume": [
    "OSError",
    "dir",
    "mkdirp",
    "print",
    "sklearn.externals.joblib.memory.os"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.memory.MemorizedFunc._write_func_code": {
  "data": {
   "lineno": 537,
   "symbols_in_volume": [
    "TypeError",
    "hasattr",
    "sklearn.externals.joblib.memory.FIRST_LINE_TEXT",
    "sklearn.externals.joblib.memory._FUNCTION_HASHES",
    "sklearn.externals.joblib.memory.io"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.memory.MemorizedFunc.call": {
  "data": {
   "lineno": 667,
   "symbols_in_volume": [
    "format_call",
    "format_time",
    "get_func_name",
    "len",
    "max",
    "print",
    "sklearn.externals.joblib.memory.time"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.memory.MemorizedFunc.call_and_shelve": {
  "data": {
   "lineno": 461,
   "symbols_in_volume": [
    "sklearn.externals.joblib.memory.MemorizedResult"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.memory.MemorizedFunc.clear": {
  "data": {
   "lineno": 654,
   "symbols_in_volume": [
    "get_func_code",
    "mkdirp",
    "sklearn.externals.joblib.memory.os",
    "sklearn.externals.joblib.memory.shutil"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.memory.MemorizedFunc.format_call": {
  "data": {
   "lineno": 498,
   "symbols_in_volume": [
    "DeprecationWarning",
    "format_call",
    "sklearn.externals.joblib.memory.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.memory.MemorizedFunc.format_signature": {
  "data": {
   "lineno": 493,
   "symbols_in_volume": [
    "DeprecationWarning",
    "format_signature",
    "sklearn.externals.joblib.memory.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.memory.MemorizedFunc.load_output": {
  "data": {
   "lineno": 753,
   "symbols_in_volume": [
    "DeprecationWarning",
    "sklearn.externals.joblib.memory._get_func_fullname",
    "sklearn.externals.joblib.memory._load_output",
    "sklearn.externals.joblib.memory.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.memory.MemorizedResult": {
  "data": {
   "lineno": 144
  },
  "type": "class"
 },
 "sklearn.externals.joblib.memory.MemorizedResult.__init__": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "isinstance",
    "open",
    "sklearn.externals.joblib.memory._cache_key_to_dir",
    "sklearn.externals.joblib.memory._get_func_fullname",
    "sklearn.externals.joblib.memory.json",
    "sklearn.externals.joblib.memory.os"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.memory.MemorizedResult.__reduce__": {
  "data": {
   "lineno": 220
  },
  "type": "function"
 },
 "sklearn.externals.joblib.memory.MemorizedResult.__repr__": {
  "data": {
   "lineno": 211
  },
  "type": "function"
 },
 "sklearn.externals.joblib.memory.MemorizedResult.clear": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "sklearn.externals.joblib.memory.shutil"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.memory.MemorizedResult.get": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "sklearn.externals.joblib.memory._get_func_fullname",
    "sklearn.externals.joblib.memory._load_output"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.memory.Memory": {
  "data": {
   "lineno": 783
  },
  "type": "class"
 },
 "sklearn.externals.joblib.memory.Memory.__init__": {
  "data": {
   "lineno": 796,
   "symbols_in_volume": [
    "mkdirp",
    "sklearn.externals.joblib.memory.os",
    "sklearn.externals.joblib.memory.time",
    "sklearn.externals.joblib.memory.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.memory.Memory.__reduce__": {
  "data": {
   "lineno": 910
  },
  "type": "function"
 },
 "sklearn.externals.joblib.memory.Memory.__repr__": {
  "data": {
   "lineno": 904,
   "symbols_in_volume": [
    "repr"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.memory.Memory.cache": {
  "data": {
   "lineno": 832,
   "symbols_in_volume": [
    "isinstance",
    "sklearn.externals.joblib.memory.MemorizedFunc",
    "sklearn.externals.joblib.memory.NotMemorizedFunc",
    "sklearn.externals.joblib.memory.functools"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.memory.Memory.clear": {
  "data": {
   "lineno": 879,
   "symbols_in_volume": [
    "rm_subdirs"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.memory.Memory.eval": {
  "data": {
   "lineno": 887,
   "symbols_in_volume": [
    "func"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.memory.NotMemorizedFunc": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "sklearn.externals.joblib.memory.NotMemorizedFunc.__call__": {
  "data": {
   "lineno": 282
  },
  "type": "function"
 },
 "sklearn.externals.joblib.memory.NotMemorizedFunc.__init__": {
  "data": {
   "lineno": 279
  },
  "type": "function"
 },
 "sklearn.externals.joblib.memory.NotMemorizedFunc.__reduce__": {
  "data": {
   "lineno": 288
  },
  "type": "function"
 },
 "sklearn.externals.joblib.memory.NotMemorizedFunc.__repr__": {
  "data": {
   "lineno": 291
  },
  "type": "function"
 },
 "sklearn.externals.joblib.memory.NotMemorizedFunc.call_and_shelve": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "sklearn.externals.joblib.memory.NotMemorizedResult"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.memory.NotMemorizedFunc.clear": {
  "data": {
   "lineno": 297
  },
  "type": "function"
 },
 "sklearn.externals.joblib.memory.NotMemorizedResult": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "sklearn.externals.joblib.memory.NotMemorizedResult.__getstate__": {
  "data": {
   "lineno": 256
  },
  "type": "function"
 },
 "sklearn.externals.joblib.memory.NotMemorizedResult.__init__": {
  "data": {
   "lineno": 232
  },
  "type": "function"
 },
 "sklearn.externals.joblib.memory.NotMemorizedResult.__repr__": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "pformat"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.memory.NotMemorizedResult.__setstate__": {
  "data": {
   "lineno": 259
  },
  "type": "function"
 },
 "sklearn.externals.joblib.memory.NotMemorizedResult.clear": {
  "data": {
   "lineno": 242
  },
  "type": "function"
 },
 "sklearn.externals.joblib.memory.NotMemorizedResult.get": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "KeyError"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.memory._FUNCTION_HASHES": {
  "data": {
   "lineno": 138
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.memory._cache_key_to_dir": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "isinstance",
    "sklearn.externals.joblib.memory._get_func_fullname",
    "sklearn.externals.joblib.memory.os"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.memory._get_func_fullname": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "get_func_name",
    "sklearn.externals.joblib.memory.os"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.memory._load_output": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "KeyError",
    "format_time",
    "print",
    "sklearn.externals.joblib.memory.os",
    "sklearn.externals.joblib.memory.time",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.memory.extract_first_line": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "int",
    "len",
    "sklearn.externals.joblib.memory.FIRST_LINE_TEXT"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.memory.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.memory.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.memory.io": {
  "data": {
   "shadows": "io"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.memory.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.memory.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.memory.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.memory.pydoc": {
  "data": {
   "shadows": "pydoc"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.memory.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.memory.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.memory.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.memory.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.memory.traceback": {
  "data": {
   "shadows": "traceback"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.memory.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.memory.weakref": {
  "data": {
   "shadows": "weakref"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.memory.with_statement": {
  "data": {
   "shadows": "__future__.with_statement"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.my_exceptions": {
  "data": {
   "symbols_in_volume": [
    "dict",
    "locals",
    "sklearn.externals.joblib.my_exceptions._mk_common_exceptions"
   ]
  },
  "type": "module"
 },
 "sklearn.externals.joblib.my_exceptions.JoblibException": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "sklearn.externals.joblib.my_exceptions.JoblibException.__init__": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "Exception.__init__"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.my_exceptions.JoblibException.__repr__": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "hasattr",
    "len"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.my_exceptions.TransportableException": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "sklearn.externals.joblib.my_exceptions.JoblibException"
   ]
  },
  "type": "class"
 },
 "sklearn.externals.joblib.my_exceptions.TransportableException.__init__": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "sklearn.externals.joblib.my_exceptions.JoblibException"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.my_exceptions._builtin_exceptions": {
  "data": {
   "shadows": "exceptions"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.my_exceptions._exception_mapping": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.my_exceptions._mk_common_exceptions": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "BaseException",
    "builtins",
    "dict",
    "dir",
    "exceptions",
    "filter",
    "getattr",
    "isinstance",
    "issubclass",
    "sklearn.externals.joblib.my_exceptions._mk_exception",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.my_exceptions._mk_exception": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "Exception",
    "TypeError",
    "sklearn.externals.joblib.my_exceptions.JoblibException",
    "sklearn.externals.joblib.my_exceptions._exception_mapping",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.my_exceptions.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.numpy_pickle": {
  "data": {
   "symbols_in_volume": [
    "len",
    "sklearn.externals.joblib.numpy_pickle.asbytes",
    "sklearn.externals.joblib.numpy_pickle.hex_str",
    "sklearn.externals.joblib.numpy_pickle.pickle",
    "str"
   ]
  },
  "type": "module"
 },
 "sklearn.externals.joblib.numpy_pickle.BytesIO": {
  "data": {
   "shadows": "io.BytesIO"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.numpy_pickle.NDArrayWrapper": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "sklearn.externals.joblib.numpy_pickle.NDArrayWrapper.__init__": {
  "data": {
   "lineno": 119
  },
  "type": "function"
 },
 "sklearn.externals.joblib.numpy_pickle.NDArrayWrapper.read": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "getattr",
    "hasattr",
    "int",
    "sklearn.externals.joblib.numpy_pickle.os"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.numpy_pickle.NumpyPickler": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "sklearn.externals.joblib.numpy_pickle.Pickler"
   ]
  },
  "type": "class"
 },
 "sklearn.externals.joblib.numpy_pickle.NumpyPickler.__init__": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "ImportError",
    "io.BytesIO",
    "numpy",
    "open",
    "sklearn.externals.joblib.numpy_pickle.Pickler",
    "sklearn.externals.joblib.numpy_pickle.pickle"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.numpy_pickle.NumpyPickler._write_array": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "open",
    "sklearn.externals.joblib.numpy_pickle.NDArrayWrapper",
    "sklearn.externals.joblib.numpy_pickle.ZNDArrayWrapper",
    "sklearn.externals.joblib.numpy_pickle.os",
    "sklearn.externals.joblib.numpy_pickle.write_zfile",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.numpy_pickle.NumpyPickler.close": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "open",
    "sklearn.externals.joblib.numpy_pickle.write_zfile"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.numpy_pickle.NumpyPickler.save": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "Exception",
    "print",
    "sklearn.externals.joblib.numpy_pickle.Pickler",
    "sklearn.externals.joblib.numpy_pickle._MEGA",
    "sklearn.externals.joblib.numpy_pickle.traceback",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.numpy_pickle.NumpyUnpickler": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "sklearn.externals.joblib.numpy_pickle.Unpickler",
    "sklearn.externals.joblib.numpy_pickle.pickle"
   ]
  },
  "type": "class"
 },
 "sklearn.externals.joblib.numpy_pickle.NumpyUnpickler.__init__": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "ImportError",
    "numpy",
    "sklearn.externals.joblib.numpy_pickle.Unpickler",
    "sklearn.externals.joblib.numpy_pickle.os"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.numpy_pickle.NumpyUnpickler._open_pickle": {
  "data": {
   "lineno": 305
  },
  "type": "function"
 },
 "sklearn.externals.joblib.numpy_pickle.NumpyUnpickler.load_build": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": [
    "ImportError",
    "isinstance",
    "sklearn.externals.joblib.numpy_pickle.NDArrayWrapper",
    "sklearn.externals.joblib.numpy_pickle.Unpickler"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.numpy_pickle.Pickler": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.numpy_pickle.Unpickler": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.numpy_pickle.ZNDArrayWrapper": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "sklearn.externals.joblib.numpy_pickle.NDArrayWrapper"
   ]
  },
  "type": "class"
 },
 "sklearn.externals.joblib.numpy_pickle.ZNDArrayWrapper.__init__": {
  "data": {
   "lineno": 168
  },
  "type": "function"
 },
 "sklearn.externals.joblib.numpy_pickle.ZNDArrayWrapper.read": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "open",
    "sklearn.externals.joblib.numpy_pickle.os",
    "sklearn.externals.joblib.numpy_pickle.read_zfile"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.numpy_pickle.ZipNumpyUnpickler": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": [
    "sklearn.externals.joblib.numpy_pickle.NumpyUnpickler"
   ]
  },
  "type": "class"
 },
 "sklearn.externals.joblib.numpy_pickle.ZipNumpyUnpickler.__init__": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": [
    "sklearn.externals.joblib.numpy_pickle.NumpyUnpickler"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.numpy_pickle.ZipNumpyUnpickler._open_pickle": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": [
    "io.BytesIO",
    "sklearn.externals.joblib.numpy_pickle.read_zfile"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.numpy_pickle._MAX_LEN": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.numpy_pickle._MEGA": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.numpy_pickle._ZFILE_PREFIX": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.numpy_pickle._read_magic": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "len",
    "sklearn.externals.joblib.numpy_pickle._ZFILE_PREFIX"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.numpy_pickle.asbytes": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.numpy_pickle.dump": {
  "data": {
   "lineno": 348,
   "symbols_in_volume": [
    "ValueError",
    "hasattr",
    "isinstance",
    "locals",
    "sklearn.externals.joblib.numpy_pickle.NumpyPickler",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.numpy_pickle.hex_str": {
  "data": {
   "lineno": 33
  },
  "type": "function"
 },
 "sklearn.externals.joblib.numpy_pickle.load": {
  "data": {
   "lineno": 412,
   "symbols_in_volume": [
    "UnicodeDecodeError",
    "ValueError",
    "Warning",
    "hasattr",
    "locals",
    "open",
    "sklearn.externals.joblib.numpy_pickle.NumpyUnpickler",
    "sklearn.externals.joblib.numpy_pickle.ZipNumpyUnpickler",
    "sklearn.externals.joblib.numpy_pickle._ZFILE_PREFIX",
    "sklearn.externals.joblib.numpy_pickle._read_magic",
    "sklearn.externals.joblib.numpy_pickle.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.numpy_pickle.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.numpy_pickle.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.numpy_pickle.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.numpy_pickle.read_zfile": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "int",
    "len",
    "sklearn.externals.joblib.numpy_pickle._MAX_LEN",
    "sklearn.externals.joblib.numpy_pickle._ZFILE_PREFIX",
    "sklearn.externals.joblib.numpy_pickle._read_magic",
    "sklearn.externals.joblib.numpy_pickle.zlib"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.numpy_pickle.traceback": {
  "data": {
   "shadows": "traceback"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.numpy_pickle.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.numpy_pickle.write_zfile": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "len",
    "sklearn.externals.joblib.numpy_pickle._MAX_LEN",
    "sklearn.externals.joblib.numpy_pickle._ZFILE_PREFIX",
    "sklearn.externals.joblib.numpy_pickle.asbytes",
    "sklearn.externals.joblib.numpy_pickle.hex_str",
    "sklearn.externals.joblib.numpy_pickle.zlib"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.numpy_pickle.zlib": {
  "data": {
   "shadows": "zlib"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.parallel": {
  "data": {
   "symbols_in_volume": [
    "hasattr",
    "sklearn.externals.joblib.parallel.method",
    "sklearn.externals.joblib.parallel.os"
   ]
  },
  "type": "module"
 },
 "sklearn.externals.joblib.parallel.BatchCompletionCallBack": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "sklearn.externals.joblib.parallel.BatchCompletionCallBack.__call__": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "sklearn.externals.joblib.parallel.time"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.parallel.BatchCompletionCallBack.__init__": {
  "data": {
   "lineno": 198
  },
  "type": "function"
 },
 "sklearn.externals.joblib.parallel.BatchedCalls": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "sklearn.externals.joblib.parallel.BatchedCalls.__call__": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "func"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.parallel.BatchedCalls.__init__": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "len",
    "list"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.parallel.BatchedCalls.__len__": {
  "data": {
   "lineno": 74
  },
  "type": "function"
 },
 "sklearn.externals.joblib.parallel.DEFAULT_MP_CONTEXT": {
  "data": {
   "lineno": 61
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.parallel.ImmediateComputeBatch": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "sklearn.externals.joblib.parallel.ImmediateComputeBatch.__init__": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "batch"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.parallel.ImmediateComputeBatch.get": {
  "data": {
   "lineno": 182
  },
  "type": "function"
 },
 "sklearn.externals.joblib.parallel.Integral": {
  "data": {
   "shadows": "numbers.Integral"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.parallel.JOBLIB_SPAWNED_PROCESS": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.parallel.MAX_IDEAL_BATCH_DURATION": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.parallel.MIN_IDEAL_BATCH_DURATION": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.parallel.Parallel": {
  "data": {
   "lineno": 228
  },
  "type": "class"
 },
 "sklearn.externals.joblib.parallel.Parallel.__call__": {
  "data": {
   "lineno": 759,
   "symbols_in_volume": [
    "ValueError",
    "eval",
    "hasattr",
    "int",
    "iter",
    "len",
    "list",
    "short_format_time",
    "sklearn.externals.joblib.parallel.itertools",
    "sklearn.externals.joblib.parallel.time"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.parallel.Parallel.__enter__": {
  "data": {
   "lineno": 462
  },
  "type": "function"
 },
 "sklearn.externals.joblib.parallel.Parallel.__exit__": {
  "data": {
   "lineno": 467
  },
  "type": "function"
 },
 "sklearn.externals.joblib.parallel.Parallel.__init__": {
  "data": {
   "lineno": 416,
   "symbols_in_volume": [
    "ValueError",
    "hasattr",
    "isinstance",
    "list",
    "memstr_to_kbytes",
    "numbers.Integral",
    "sklearn.externals.joblib.parallel.DEFAULT_MP_CONTEXT",
    "sklearn.externals.joblib.parallel.VALID_BACKENDS",
    "sklearn.externals.joblib.parallel.threading"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.parallel.Parallel.__repr__": {
  "data": {
   "lineno": 824
  },
  "type": "function"
 },
 "sklearn.externals.joblib.parallel.Parallel._dispatch": {
  "data": {
   "lineno": 554,
   "symbols_in_volume": [
    "batch",
    "len",
    "short_format_time",
    "sklearn.externals.joblib.parallel.BatchCompletionCallBack",
    "sklearn.externals.joblib.parallel.ImmediateComputeBatch",
    "sklearn.externals.joblib.parallel.SafeFunction",
    "sklearn.externals.joblib.parallel._verbosity_filter",
    "sklearn.externals.joblib.parallel.time"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.parallel.Parallel._effective_n_jobs": {
  "data": {
   "lineno": 471,
   "symbols_in_volume": [
    "ValueError",
    "max"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.parallel.Parallel._initialize_pool": {
  "data": {
   "lineno": 483,
   "symbols_in_volume": [
    "ImportError",
    "KeyboardInterrupt",
    "MemmapingPool",
    "TransportableException",
    "ValueError",
    "dict",
    "int",
    "max",
    "multiprocessing.pool.ThreadPool",
    "sklearn.externals.joblib.parallel.JOBLIB_SPAWNED_PROCESS",
    "sklearn.externals.joblib.parallel.WorkerInterrupt",
    "sklearn.externals.joblib.parallel.gc",
    "sklearn.externals.joblib.parallel.os",
    "sklearn.externals.joblib.parallel.threading",
    "sklearn.externals.joblib.parallel.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.parallel.Parallel._print": {
  "data": {
   "lineno": 661,
   "symbols_in_volume": [
    "sklearn.externals.joblib.parallel.sys",
    "writer"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.parallel.Parallel._terminate_pool": {
  "data": {
   "lineno": 546,
   "symbols_in_volume": [
    "sklearn.externals.joblib.parallel.JOBLIB_SPAWNED_PROCESS",
    "sklearn.externals.joblib.parallel.os"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.parallel.Parallel.dispatch_next": {
  "data": {
   "lineno": 584
  },
  "type": "function"
 },
 "sklearn.externals.joblib.parallel.Parallel.dispatch_one_batch": {
  "data": {
   "lineno": 596,
   "symbols_in_volume": [
    "int",
    "max",
    "sklearn.externals.joblib.parallel.BatchedCalls",
    "sklearn.externals.joblib.parallel.MAX_IDEAL_BATCH_DURATION",
    "sklearn.externals.joblib.parallel.MIN_IDEAL_BATCH_DURATION",
    "sklearn.externals.joblib.parallel.itertools"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.parallel.Parallel.print_progress": {
  "data": {
   "lineno": 674,
   "symbols_in_volume": [
    "short_format_time",
    "sklearn.externals.joblib.parallel._verbosity_filter",
    "sklearn.externals.joblib.parallel.time"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.parallel.Parallel.retrieve": {
  "data": {
   "lineno": 714,
   "symbols_in_volume": [
    "TransportableException",
    "_mk_exception",
    "exception_type",
    "format_outer_frames",
    "isinstance",
    "len",
    "list",
    "sklearn.externals.joblib.parallel.time",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.parallel.SafeFunction": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "sklearn.externals.joblib.parallel.SafeFunction.__call__": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "KeyboardInterrupt",
    "TransportableException",
    "format_exc",
    "sklearn.externals.joblib.parallel.WorkerInterrupt",
    "sklearn.externals.joblib.parallel.sys"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.parallel.SafeFunction.__init__": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "func"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.parallel.ThreadPool": {
  "data": {
   "shadows": "multiprocessing.pool.ThreadPool"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.parallel.VALID_BACKENDS": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.parallel.WorkerInterrupt": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "sklearn.externals.joblib.parallel._verbosity_filter": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "int",
    "math.sqrt"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.parallel.cpu_count": {
  "data": {
   "lineno": 81
  },
  "type": "function"
 },
 "sklearn.externals.joblib.parallel.delayed": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "AttributeError",
    "cPickle.dumps",
    "sklearn.externals.joblib.parallel.functools"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.parallel.delayed.delayed_function": {
  "data": {
   "lineno": 160
  },
  "type": "function"
 },
 "sklearn.externals.joblib.parallel.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.parallel.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.parallel.gc": {
  "data": {
   "shadows": "gc"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.parallel.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.parallel.method": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.parallel.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.parallel.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.parallel.sqrt": {
  "data": {
   "shadows": "math.sqrt"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.parallel.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.parallel.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.parallel.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.parallel.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.pool": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "NameError",
    "numpy",
    "sklearn.externals.joblib.pool.stat"
   ]
  },
  "type": "module"
 },
 "sklearn.externals.joblib.pool.ArrayMemmapReducer": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "sklearn.externals.joblib.pool.ArrayMemmapReducer.__call__": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "OSError",
    "dump",
    "hash",
    "id",
    "load",
    "pickle.HIGHEST_PROTOCOL",
    "pickle.dumps",
    "pickle.loads",
    "print",
    "sklearn.externals.joblib.pool.FILE_PERMISSIONS",
    "sklearn.externals.joblib.pool.FOLDER_PERMISSIONS",
    "sklearn.externals.joblib.pool._get_backing_memmap",
    "sklearn.externals.joblib.pool._reduce_memmap_backed",
    "sklearn.externals.joblib.pool.errno",
    "sklearn.externals.joblib.pool.os",
    "sklearn.externals.joblib.pool.threading"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.pool.ArrayMemmapReducer.__init__": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "DeprecationWarning",
    "int",
    "sklearn.externals.joblib.pool.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.pool.BytesIO": {
  "data": {
   "shadows": "io.BytesIO"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.pool.CustomizablePickler": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "pickle.Pickler"
   ]
  },
  "type": "class"
 },
 "sklearn.externals.joblib.pool.CustomizablePickler.__init__": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "hasattr",
    "pickle.HIGHEST_PROTOCOL",
    "pickle.Pickler",
    "pickle.Pickler.__init__",
    "pickle.Pickler.dispatch.copy",
    "sklearn.externals.joblib.pool.copyreg",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.pool.CustomizablePickler.register": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "hasattr",
    "pickle.Pickler",
    "reduce_func",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.pool.CustomizablePickler.register.dispatcher": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "reduce_func"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.pool.CustomizablePicklingQueue": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "sklearn.externals.joblib.pool.CustomizablePicklingQueue.__getstate__": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": [
    "assert_spawning"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.pool.CustomizablePicklingQueue.__init__": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": [
    "sklearn.externals.joblib.pool.sys"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.pool.CustomizablePicklingQueue.__setstate__": {
  "data": {
   "lineno": 344
  },
  "type": "function"
 },
 "sklearn.externals.joblib.pool.CustomizablePicklingQueue._make_methods": {
  "data": {
   "lineno": 352
  },
  "type": "function"
 },
 "sklearn.externals.joblib.pool.CustomizablePicklingQueue._make_methods.get": {
  "data": {
   "lineno": 356,
   "symbols_in_volume": [
    "racquire",
    "recv",
    "rrelease"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.pool.CustomizablePicklingQueue._make_methods.put": {
  "data": {
   "lineno": 380,
   "symbols_in_volume": [
    "send",
    "wlock_acquire",
    "wlock_release"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.pool.CustomizablePicklingQueue._make_methods.send": {
  "data": {
   "lineno": 366,
   "symbols_in_volume": [
    "io.BytesIO",
    "sklearn.externals.joblib.pool.CustomizablePickler"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.pool.CustomizablePicklingQueue.empty": {
  "data": {
   "lineno": 349
  },
  "type": "function"
 },
 "sklearn.externals.joblib.pool.FILE_PERMISSIONS": {
  "data": {
   "lineno": 72
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.pool.FOLDER_PERMISSIONS": {
  "data": {
   "lineno": 71
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.pool.HIGHEST_PROTOCOL": {
  "data": {
   "shadows": "pickle.HIGHEST_PROTOCOL"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.pool.MemmapingPool": {
  "data": {
   "lineno": 439,
   "symbols_in_volume": [
    "sklearn.externals.joblib.pool.PicklingPool"
   ]
  },
  "type": "class"
 },
 "sklearn.externals.joblib.pool.MemmapingPool.__init__": {
  "data": {
   "lineno": 508,
   "symbols_in_volume": [
    "DeprecationWarning",
    "IOError",
    "dict",
    "id",
    "numpy",
    "numpy.memmap",
    "numpy.ndarray",
    "sklearn.externals.joblib.pool.ArrayMemmapReducer",
    "sklearn.externals.joblib.pool.MemmapingPool",
    "sklearn.externals.joblib.pool.SYSTEM_SHARED_MEM_FS",
    "sklearn.externals.joblib.pool.atexit",
    "sklearn.externals.joblib.pool.delete_folder",
    "sklearn.externals.joblib.pool.os",
    "sklearn.externals.joblib.pool.reduce_memmap",
    "sklearn.externals.joblib.pool.tempfile",
    "sklearn.externals.joblib.pool.warnings",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.pool.MemmapingPool.terminate": {
  "data": {
   "lineno": 582,
   "symbols_in_volume": [
    "sklearn.externals.joblib.pool.MemmapingPool",
    "sklearn.externals.joblib.pool.delete_folder",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.pool.Pickler": {
  "data": {
   "shadows": "pickle.Pickler"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.pool.PicklingPool": {
  "data": {
   "lineno": 390,
   "symbols_in_volume": [
    "multiprocessing.pool.Pool"
   ]
  },
  "type": "class"
 },
 "sklearn.externals.joblib.pool.PicklingPool.__init__": {
  "data": {
   "lineno": 408,
   "symbols_in_volume": [
    "dict",
    "sklearn.externals.joblib.pool.PicklingPool",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.pool.PicklingPool._setup_queues": {
  "data": {
   "lineno": 420,
   "symbols_in_volume": [
    "getattr",
    "sklearn.externals.joblib.pool.CustomizablePicklingQueue"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.pool.Pool": {
  "data": {
   "shadows": "multiprocessing.pool.Pool"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.pool.SYSTEM_SHARED_MEM_FS": {
  "data": {
   "lineno": 66
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.pool.WindowsError": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.pool._get_backing_memmap": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "getattr",
    "isinstance",
    "mmap.mmap"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.pool._reduce_memmap_backed": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "numpy.byte_bounds",
    "sklearn.externals.joblib.pool._strided_from_memmap"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.pool._strided_from_memmap": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "numpy.lib.stride_tricks.as_strided",
    "numpy.memmap"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.pool.as_strided": {
  "data": {
   "shadows": "numpy.lib.stride_tricks.as_strided"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.pool.atexit": {
  "data": {
   "shadows": "atexit"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.pool.copyreg": {
  "data": {
   "shadows": "copyreg"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.pool.delete_folder": {
  "data": {
   "lineno": 430,
   "symbols_in_volume": [
    "sklearn.externals.joblib.pool.WindowsError",
    "sklearn.externals.joblib.pool.os",
    "sklearn.externals.joblib.pool.shutil",
    "sklearn.externals.joblib.pool.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.pool.dumps": {
  "data": {
   "shadows": "pickle.dumps"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.pool.errno": {
  "data": {
   "shadows": "errno"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.pool.has_shareable_memory": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "sklearn.externals.joblib.pool._get_backing_memmap"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.pool.loads": {
  "data": {
   "shadows": "pickle.loads"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.pool.mmap": {
  "data": {
   "shadows": "mmap.mmap"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.pool.np": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "sklearn.externals.joblib.pool.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.pool.reduce_memmap": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "numpy.asarray",
    "pickle.HIGHEST_PROTOCOL",
    "pickle.dumps",
    "pickle.loads",
    "sklearn.externals.joblib.pool._get_backing_memmap",
    "sklearn.externals.joblib.pool._reduce_memmap_backed"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.pool.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.pool.sleep": {
  "data": {
   "shadows": "time.sleep"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.pool.stat": {
  "data": {
   "shadows": "stat"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.pool.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.pool.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.pool.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.pool.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.testing": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "sklearn.externals.joblib.testing.PY3_OR_LATER": {
  "data": {
   "shadows": "sklearn.externals.joblib._compat.PY3_OR_LATER"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.testing.assert_raises_regex": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "AssertionError",
    "Exception",
    "callable_obj",
    "expected_exception",
    "sklearn.externals.joblib.testing.re",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.testing.check_subprocess_call": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.externals.joblib._compat.PY3_OR_LATER",
    "sklearn.externals.joblib.testing.re",
    "sklearn.externals.joblib.testing.subprocess",
    "sklearn.externals.joblib.testing.threading"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.testing.check_subprocess_call.kill_process": {
  "data": {
   "lineno": 62
  },
  "type": "function"
 },
 "sklearn.externals.joblib.testing.os.path": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.testing.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.testing.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.testing.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.testing.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.testing.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.externals.joblib.testing.warnings_to_stdout": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "sklearn.externals.joblib.testing.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.joblib.testing.warnings_to_stdout.showwarning": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "showwarning_orig",
    "sklearn.externals.joblib.testing.sys"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.odict": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "sklearn.externals.odict.ItemsView": {
  "data": {
   "shadows": "_abcoll.ItemsView"
  },
  "type": "import"
 },
 "sklearn.externals.odict.KeysView": {
  "data": {
   "shadows": "_abcoll.KeysView"
  },
  "type": "import"
 },
 "sklearn.externals.odict.OrderedDict": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "dict",
    "object"
   ]
  },
  "type": "class"
 },
 "sklearn.externals.odict.OrderedDict.__delitem__": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "dict.__delitem__",
    "dict_delitem"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.odict.OrderedDict.__eq__": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "dict.__eq__",
    "isinstance",
    "len",
    "sklearn.externals.odict.OrderedDict"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.odict.OrderedDict.__init__": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "AttributeError",
    "TypeError",
    "len"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.odict.OrderedDict.__iter__": {
  "data": {
   "lineno": 70
  },
  "type": "function"
 },
 "sklearn.externals.odict.OrderedDict.__ne__": {
  "data": {
   "lineno": 251
  },
  "type": "function"
 },
 "sklearn.externals.odict.OrderedDict.__reduce__": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "sklearn.externals.odict.OrderedDict",
    "vars"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.odict.OrderedDict.__repr__": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "_dummy_thread.get_ident",
    "id"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.odict.OrderedDict.__reversed__": {
  "data": {
   "lineno": 78
  },
  "type": "function"
 },
 "sklearn.externals.odict.OrderedDict.__setitem__": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "dict.__setitem__",
    "dict_setitem"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.odict.OrderedDict.clear": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "AttributeError",
    "dict.clear"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.odict.OrderedDict.copy": {
  "data": {
   "lineno": 227
  },
  "type": "function"
 },
 "sklearn.externals.odict.OrderedDict.fromkeys": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "classmethod",
    "cls"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.odict.OrderedDict.items": {
  "data": {
   "lineno": 131
  },
  "type": "function"
 },
 "sklearn.externals.odict.OrderedDict.iteritems": {
  "data": {
   "lineno": 144
  },
  "type": "function"
 },
 "sklearn.externals.odict.OrderedDict.iterkeys": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "iter"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.odict.OrderedDict.itervalues": {
  "data": {
   "lineno": 139
  },
  "type": "function"
 },
 "sklearn.externals.odict.OrderedDict.keys": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.odict.OrderedDict.pop": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "KeyError"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.odict.OrderedDict.popitem": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "KeyError",
    "dict.pop"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.odict.OrderedDict.setdefault": {
  "data": {
   "lineno": 197
  },
  "type": "function"
 },
 "sklearn.externals.odict.OrderedDict.update": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "TypeError",
    "dict",
    "hasattr",
    "isinstance",
    "len"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.odict.OrderedDict.values": {
  "data": {
   "lineno": 127
  },
  "type": "function"
 },
 "sklearn.externals.odict.OrderedDict.viewitems": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "_abcoll.ItemsView"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.odict.OrderedDict.viewkeys": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "_abcoll.KeysView"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.odict.OrderedDict.viewvalues": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "_abcoll.ValuesView"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.odict.ValuesView": {
  "data": {
   "shadows": "_abcoll.ValuesView"
  },
  "type": "import"
 },
 "sklearn.externals.odict._get_ident": {
  "data": {
   "shadows": "_dummy_thread.get_ident"
  },
  "type": "import"
 },
 "sklearn.externals.setup": {
  "data": {},
  "type": "module"
 },
 "sklearn.externals.setup.Configuration": {
  "data": {
   "shadows": "numpy.distutils.misc_util.Configuration"
  },
  "type": "import"
 },
 "sklearn.externals.setup.configuration": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "numpy.distutils.misc_util.Configuration"
   ]
  },
  "type": "function"
 },
 "sklearn.externals.test_externals_setup": {
  "data": {
   "symbols_in_volume": [
    "sklearn.externals.test_externals_setup.os",
    "sklearn.externals.test_externals_setup.sys"
   ]
  },
  "type": "module"
 },
 "sklearn.externals.test_externals_setup.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "sklearn.externals.test_externals_setup.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "sklearn.feature_extraction": {
  "data": {},
  "type": "module"
 },
 "sklearn.feature_extraction.__all__": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "sklearn.feature_extraction.dict_vectorizer": {
  "data": {},
  "type": "module"
 },
 "sklearn.feature_extraction.dict_vectorizer.DictVectorizer": {
  "data": {
   "lineno": 27
  },
  "type": "class"
 },
 "sklearn.feature_extraction.dict_vectorizer.DictVectorizer.__init__": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "numpy.float64"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.dict_vectorizer.DictVectorizer._transform": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "ValueError",
    "array.array",
    "collections.Mapping",
    "dtype",
    "enumerate",
    "frombuffer_empty",
    "isinstance",
    "len",
    "numpy.empty",
    "numpy.frombuffer",
    "numpy.int32",
    "numpy.intc",
    "scipy.sparse.csr_matrix"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.dict_vectorizer.DictVectorizer.fit": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "dict",
    "enumerate",
    "isinstance",
    "len"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.dict_vectorizer.DictVectorizer.fit_transform": {
  "data": {
   "lineno": 208
  },
  "type": "function"
 },
 "sklearn.feature_extraction.dict_vectorizer.DictVectorizer.get_feature_names": {
  "data": {
   "lineno": 308
  },
  "type": "function"
 },
 "sklearn.feature_extraction.dict_vectorizer.DictVectorizer.inverse_transform": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "check_array",
    "dict",
    "dict_type",
    "enumerate",
    "scipy.sparse.issparse",
    "xrange",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.dict_vectorizer.DictVectorizer.restrict": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": [
    "len",
    "numpy.where",
    "operator.itemgetter",
    "sorted"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.dict_vectorizer.DictVectorizer.transform": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "KeyError",
    "dtype",
    "enumerate",
    "isinstance",
    "len",
    "numpy.zeros",
    "sklearn.feature_extraction.dict_vectorizer._tosequence"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.dict_vectorizer.Mapping": {
  "data": {
   "shadows": "collections.Mapping"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.dict_vectorizer._tosequence": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "collections.Mapping",
    "isinstance",
    "tosequence"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.dict_vectorizer.array": {
  "data": {
   "shadows": "array.array"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.dict_vectorizer.itemgetter": {
  "data": {
   "shadows": "operator.itemgetter"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.dict_vectorizer.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.dict_vectorizer.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.hashing": {
  "data": {},
  "type": "module"
 },
 "sklearn.feature_extraction.hashing.FeatureHasher": {
  "data": {
   "lineno": 18
  },
  "type": "class"
 },
 "sklearn.feature_extraction.hashing.FeatureHasher.__init__": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "numpy.float64"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.hashing.FeatureHasher._validate_params": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "isinstance",
    "numpy.integer",
    "sklearn.feature_extraction.hashing.numbers",
    "staticmethod",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.hashing.FeatureHasher.fit": {
  "data": {
   "lineno": 102
  },
  "type": "function"
 },
 "sklearn.feature_extraction.hashing.FeatureHasher.transform": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "ValueError",
    "iter",
    "numpy.abs",
    "scipy.sparse.csr_matrix",
    "sklearn.feature_extraction.hashing._iteritems"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.hashing._iteritems": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.hashing.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.hashing.numbers": {
  "data": {
   "shadows": "numbers"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.hashing.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.image": {
  "data": {},
  "type": "module"
 },
 "sklearn.feature_extraction.image.PatchExtractor": {
  "data": {
   "lineno": 438
  },
  "type": "class"
 },
 "sklearn.feature_extraction.image.PatchExtractor.__init__": {
  "data": {
   "lineno": 457
  },
  "type": "function"
 },
 "sklearn.feature_extraction.image.PatchExtractor.fit": {
  "data": {
   "lineno": 462
  },
  "type": "function"
 },
 "sklearn.feature_extraction.image.PatchExtractor.transform": {
  "data": {
   "lineno": 470,
   "symbols_in_volume": [
    "check_random_state",
    "enumerate",
    "numpy.empty",
    "numpy.reshape",
    "sklearn.feature_extraction.image._compute_n_patches",
    "sklearn.feature_extraction.image.extract_patches_2d"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.image.__all__": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "sklearn.feature_extraction.image._compute_gradient_3d": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "numpy.abs"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.image._compute_n_patches": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "isinstance",
    "sklearn.feature_extraction.image.numbers"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.image._make_edges_3d": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.hstack",
    "numpy.vstack"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.image._mask_edges_weights": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "numpy.in1d",
    "numpy.logical_and",
    "numpy.searchsorted",
    "numpy.unique"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.image._to_graph": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "astype",
    "numpy.arange",
    "numpy.asarray",
    "numpy.atleast_3d",
    "numpy.bool",
    "numpy.hstack",
    "numpy.int",
    "numpy.ndarray",
    "numpy.ones",
    "numpy.sum",
    "return_as",
    "scipy.sparse.coo_matrix",
    "sklearn.feature_extraction.image._compute_gradient_3d",
    "sklearn.feature_extraction.image._make_edges_3d",
    "sklearn.feature_extraction.image._mask_edges_weights"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.image.as_strided": {
  "data": {
   "shadows": "numpy.lib.stride_tricks.as_strided"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.image.extract_patches": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "numpy.array",
    "numpy.lib.stride_tricks.as_strided",
    "sklearn.feature_extraction.image.numbers",
    "slice",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.image.extract_patches_2d": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "ValueError",
    "check_array",
    "check_random_state",
    "sklearn.feature_extraction.image._compute_n_patches",
    "sklearn.feature_extraction.image.extract_patches"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.image.grid_to_graph": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "numpy.int",
    "return_as",
    "scipy.sparse.coo_matrix",
    "sklearn.feature_extraction.image._to_graph"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.image.img_to_graph": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "numpy.atleast_3d",
    "return_as",
    "scipy.sparse.coo_matrix",
    "sklearn.feature_extraction.image._to_graph"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.image.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.image.numbers": {
  "data": {
   "shadows": "numbers"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.image.product": {
  "data": {
   "shadows": "itertools.product"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.image.reconstruct_from_patches_2d": {
  "data": {
   "lineno": 393,
   "symbols_in_volume": [
    "float",
    "itertools.product",
    "min",
    "numpy.zeros",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.image.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.setup": {
  "data": {},
  "type": "module"
 },
 "sklearn.feature_extraction.setup.Configuration": {
  "data": {
   "shadows": "numpy.distutils.misc_util.Configuration"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.setup.configuration": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "numpy.distutils.misc_util.Configuration",
    "sklearn.feature_extraction.setup.numpy",
    "sklearn.feature_extraction.setup.os"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.setup.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.setup.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.stop_words": {
  "data": {
   "symbols_in_volume": [
    "frozenset"
   ]
  },
  "type": "module"
 },
 "sklearn.feature_extraction.stop_words.ENGLISH_STOP_WORDS": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "sklearn.feature_extraction.tests": {
  "data": {},
  "type": "module"
 },
 "sklearn.feature_extraction.tests.test_dict_vectorizer": {
  "data": {},
  "type": "module"
 },
 "sklearn.feature_extraction.tests.test_dict_vectorizer.DictVectorizer": {
  "data": {
   "shadows": "sklearn.feature_extraction.DictVectorizer"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_dict_vectorizer.Random": {
  "data": {
   "shadows": "random.Random"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_dict_vectorizer.SelectKBest": {
  "data": {
   "shadows": "sklearn.feature_selection.SelectKBest"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_dict_vectorizer.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_dict_vectorizer.assert_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_dict_vectorizer.assert_false": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_false"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_dict_vectorizer.assert_in": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_in"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_dict_vectorizer.assert_true": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_true"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_dict_vectorizer.chi2": {
  "data": {
   "shadows": "sklearn.feature_selection.chi2"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_dict_vectorizer.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_dict_vectorizer.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_dict_vectorizer.test_deterministic_vocabulary": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "dict",
    "random.Random",
    "range",
    "sklearn.feature_extraction.DictVectorizer",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_dict_vectorizer.test_dictvectorizer": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "int",
    "iter",
    "numpy.float32",
    "numpy.int16",
    "numpy.testing.assert_array_equal",
    "scipy.sparse.issparse",
    "sklearn.feature_extraction.DictVectorizer",
    "sklearn.utils.testing.assert_equal",
    "sorted"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_dict_vectorizer.test_feature_selection": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "dict",
    "range",
    "sklearn.feature_extraction.DictVectorizer",
    "sklearn.feature_selection.SelectKBest",
    "sklearn.feature_selection.chi2",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_dict_vectorizer.test_one_of_k": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "sklearn.feature_extraction.DictVectorizer",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_false",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_dict_vectorizer.test_unseen_or_no_features": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "ValueError",
    "numpy.testing.assert_array_equal",
    "numpy.zeros",
    "sklearn.feature_extraction.DictVectorizer",
    "sklearn.utils.testing.assert_in",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_feature_hasher": {
  "data": {},
  "type": "module"
 },
 "sklearn.feature_extraction.tests.test_feature_hasher.FeatureHasher": {
  "data": {
   "shadows": "sklearn.feature_extraction.FeatureHasher"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_feature_hasher.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_feature_hasher.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_feature_hasher.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_feature_hasher.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_feature_hasher.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_feature_hasher.test_feature_hasher_dicts": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "iter",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "sklearn.feature_extraction.FeatureHasher"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_feature_hasher.test_feature_hasher_pairs": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "iter",
    "numpy.abs",
    "numpy.testing.assert_equal",
    "sklearn.feature_extraction.FeatureHasher",
    "sorted"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_feature_hasher.test_feature_hasher_strings": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "len",
    "nose.tools.assert_true",
    "numpy.all",
    "numpy.testing.assert_equal",
    "sklearn.feature_extraction.FeatureHasher"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_feature_hasher.test_hash_empty_input": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "iter",
    "len",
    "numpy.testing.assert_array_equal",
    "numpy.zeros",
    "range",
    "sklearn.feature_extraction.FeatureHasher"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_feature_hasher.test_hasher_invalid_input": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "Exception",
    "TypeError",
    "ValueError",
    "nose.tools.assert_raises",
    "numpy.uint16",
    "sklearn.feature_extraction.FeatureHasher"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_feature_hasher.test_hasher_set_params": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "TypeError",
    "nose.tools.assert_raises",
    "numpy.inf",
    "sklearn.feature_extraction.FeatureHasher"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_feature_hasher.test_hasher_zeros": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "numpy.testing.assert_equal",
    "sklearn.feature_extraction.FeatureHasher"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_feature_hasher.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_image": {
  "data": {
   "symbols_in_volume": [
    "sklearn.feature_extraction.tests.test_image._downsampled_face",
    "sklearn.feature_extraction.tests.test_image._make_images",
    "sklearn.feature_extraction.tests.test_image._orange_face",
    "sklearn.feature_extraction.tests.test_image.downsampled_face",
    "sklearn.utils.fixes.sp_version",
    "sklearn.utils.testing.SkipTest"
   ]
  },
  "type": "module"
 },
 "sklearn.feature_extraction.tests.test_image.PatchExtractor": {
  "data": {
   "shadows": "sklearn.feature_extraction.image.PatchExtractor"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_image.SkipTest": {
  "data": {
   "shadows": "sklearn.utils.testing.SkipTest"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_image._downsampled_face": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "AttributeError",
    "numpy.float32",
    "scipy.face",
    "scipy.misc.face"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_image._make_images": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "numpy.zeros",
    "sklearn.feature_extraction.tests.test_image._downsampled_face"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_image._orange_face": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "numpy.zeros",
    "sklearn.feature_extraction.tests.test_image._downsampled_face"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_image.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_image.assert_raises": {
  "data": {
   "shadows": "numpy.testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_image.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_image.connected_components": {
  "data": {
   "shadows": "sklearn.utils.graph.connected_components"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_image.downsampled_face": {
  "data": {
   "lineno": 128
  },
  "type": "constant"
 },
 "sklearn.feature_extraction.tests.test_image.extract_patches": {
  "data": {
   "shadows": "sklearn.feature_extraction.image.extract_patches"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_image.extract_patches_2d": {
  "data": {
   "shadows": "sklearn.feature_extraction.image.extract_patches_2d"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_image.face_collection": {
  "data": {
   "lineno": 130
  },
  "type": "constant"
 },
 "sklearn.feature_extraction.tests.test_image.grid_to_graph": {
  "data": {
   "shadows": "sklearn.feature_extraction.image.grid_to_graph"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_image.img_to_graph": {
  "data": {
   "shadows": "sklearn.feature_extraction.image.img_to_graph"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_image.misc": {
  "data": {
   "shadows": "scipy.misc"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_image.ndimage": {
  "data": {
   "shadows": "scipy.ndimage"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_image.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_image.orange_face": {
  "data": {
   "lineno": 129
  },
  "type": "constant"
 },
 "sklearn.feature_extraction.tests.test_image.reconstruct_from_patches_2d": {
  "data": {
   "shadows": "sklearn.feature_extraction.image.reconstruct_from_patches_2d"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_image.sp": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_image.sp_version": {
  "data": {
   "shadows": "sklearn.utils.fixes.sp_version"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_image.test_connect_regions": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "AttributeError",
    "nose.tools.assert_equal",
    "scipy.face",
    "scipy.misc.face",
    "scipy.ndimage.label",
    "sklearn.feature_extraction.image.img_to_graph",
    "sklearn.utils.graph.connected_components"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_image.test_connect_regions_with_grid": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "AttributeError",
    "nose.tools.assert_equal",
    "scipy.face",
    "scipy.misc.face",
    "scipy.ndimage.label",
    "sklearn.feature_extraction.image.grid_to_graph",
    "sklearn.utils.graph.connected_components"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_image.test_extract_patches_all": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "nose.tools.assert_equal",
    "sklearn.feature_extraction.image.extract_patches_2d",
    "sklearn.feature_extraction.tests.test_image.downsampled_face"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_image.test_extract_patches_all_color": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "nose.tools.assert_equal",
    "sklearn.feature_extraction.image.extract_patches_2d",
    "sklearn.feature_extraction.tests.test_image.orange_face"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_image.test_extract_patches_all_rect": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "nose.tools.assert_equal",
    "sklearn.feature_extraction.image.extract_patches_2d",
    "sklearn.feature_extraction.tests.test_image.downsampled_face"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_image.test_extract_patches_max_patches": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "nose.tools.assert_equal",
    "numpy.testing.assert_raises",
    "sklearn.feature_extraction.image.extract_patches_2d",
    "sklearn.feature_extraction.tests.test_image.downsampled_face"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_image.test_extract_patches_square": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "nose.tools.assert_true",
    "sklearn.feature_extraction.image.extract_patches",
    "sklearn.feature_extraction.tests.test_image.downsampled_face"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_image.test_extract_patches_strided": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "len",
    "nose.tools.assert_true",
    "numpy.arange",
    "numpy.prod",
    "sklearn.feature_extraction.image.extract_patches",
    "slice",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_image.test_grid_to_graph": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "nose.tools.assert_true",
    "numpy.bool",
    "numpy.float",
    "numpy.int",
    "numpy.int16",
    "numpy.ndarray",
    "numpy.ones",
    "numpy.zeros",
    "sklearn.feature_extraction.image.grid_to_graph",
    "sklearn.utils.graph.connected_components"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_image.test_img_to_graph": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "nose.tools.assert_equal",
    "numpy.mgrid",
    "numpy.testing.assert_array_equal",
    "sklearn.feature_extraction.image.img_to_graph"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_image.test_patch_extractor_all_patches": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "len",
    "nose.tools.assert_true",
    "sklearn.feature_extraction.image.PatchExtractor",
    "sklearn.feature_extraction.tests.test_image.face_collection"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_image.test_patch_extractor_color": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "len",
    "nose.tools.assert_true",
    "sklearn.feature_extraction.image.PatchExtractor",
    "sklearn.feature_extraction.tests.test_image._make_images",
    "sklearn.feature_extraction.tests.test_image.orange_face"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_image.test_patch_extractor_fit": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "nose.tools.assert_true",
    "sklearn.feature_extraction.image.PatchExtractor",
    "sklearn.feature_extraction.tests.test_image.face_collection"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_image.test_patch_extractor_max_patches": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "int",
    "len",
    "nose.tools.assert_true",
    "sklearn.feature_extraction.image.PatchExtractor",
    "sklearn.feature_extraction.tests.test_image.face_collection"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_image.test_patch_extractor_max_patches_default": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "len",
    "nose.tools.assert_equal",
    "sklearn.feature_extraction.image.PatchExtractor",
    "sklearn.feature_extraction.tests.test_image.face_collection"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_image.test_reconstruct_patches_perfect": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "numpy.testing.assert_array_equal",
    "sklearn.feature_extraction.image.extract_patches_2d",
    "sklearn.feature_extraction.image.reconstruct_from_patches_2d",
    "sklearn.feature_extraction.tests.test_image.downsampled_face"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_image.test_reconstruct_patches_perfect_color": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "numpy.testing.assert_array_equal",
    "sklearn.feature_extraction.image.extract_patches_2d",
    "sklearn.feature_extraction.image.reconstruct_from_patches_2d",
    "sklearn.feature_extraction.tests.test_image.orange_face"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_image.test_width_patch": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "numpy.testing.assert_raises",
    "sklearn.feature_extraction.image.extract_patches_2d"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text": {
  "data": {
   "symbols_in_volume": [
    "sklearn.feature_extraction.tests.test_text.JUNK_FOOD_DOCS",
    "sklearn.feature_extraction.tests.test_text.NOTJUNK_FOOD_DOCS"
   ]
  },
  "type": "module"
 },
 "sklearn.feature_extraction.tests.test_text.ALL_FOOD_DOCS": {
  "data": {
   "lineno": 61
  },
  "type": "constant"
 },
 "sklearn.feature_extraction.tests.test_text.CountVectorizer": {
  "data": {
   "shadows": "sklearn.feature_extraction.text.CountVectorizer"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_text.ENGLISH_STOP_WORDS": {
  "data": {
   "shadows": "sklearn.feature_extraction.text.ENGLISH_STOP_WORDS"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_text.GridSearchCV": {
  "data": {
   "shadows": "sklearn.grid_search.GridSearchCV"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_text.HashingVectorizer": {
  "data": {
   "shadows": "sklearn.feature_extraction.text.HashingVectorizer"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_text.JUNK_FOOD_DOCS": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "sklearn.feature_extraction.tests.test_text.LinearSVC": {
  "data": {
   "shadows": "sklearn.svm.LinearSVC"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_text.Mapping": {
  "data": {
   "shadows": "collections.Mapping"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_text.NOTJUNK_FOOD_DOCS": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "sklearn.feature_extraction.tests.test_text.Pipeline": {
  "data": {
   "shadows": "sklearn.pipeline.Pipeline"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_text.SkipTest": {
  "data": {
   "shadows": "nose.SkipTest"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_text.StringIO": {
  "data": {
   "shadows": "io.StringIO"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_text.TfidfTransformer": {
  "data": {
   "shadows": "sklearn.feature_extraction.text.TfidfTransformer"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_text.TfidfVectorizer": {
  "data": {
   "shadows": "sklearn.feature_extraction.text.TfidfVectorizer"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_text.assert_almost_equal": {
  "data": {
   "shadows": "nose.tools.assert_almost_equal"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_text.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_text.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_text.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_text.assert_false": {
  "data": {
   "shadows": "nose.tools.assert_false"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_text.assert_greater": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_greater"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_text.assert_in": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_in"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_text.assert_less": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_less"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_text.assert_not_equal": {
  "data": {
   "shadows": "nose.tools.assert_not_equal"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_text.assert_raise_message": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raise_message"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_text.assert_raises": {
  "data": {
   "shadows": "numpy.testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_text.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_text.assert_warns_message": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_warns_message"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_text.choice": {
  "data": {
   "shadows": "sklearn.utils.random.choice"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_text.clean_warning_registry": {
  "data": {
   "shadows": "sklearn.utils.testing.clean_warning_registry"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_text.clone": {
  "data": {
   "shadows": "sklearn.base.clone"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_text.cross_val_score": {
  "data": {
   "shadows": "sklearn.cross_validation.cross_val_score"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_text.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_text.lazy_analyze": {
  "data": {
   "lineno": 76
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_text.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_text.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_text.split_tokenize": {
  "data": {
   "lineno": 72
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.strip_accents_ascii": {
  "data": {
   "shadows": "sklearn.feature_extraction.text.strip_accents_ascii"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_text.strip_accents_unicode": {
  "data": {
   "shadows": "sklearn.feature_extraction.text.strip_accents_unicode"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_text.strip_eacute": {
  "data": {
   "lineno": 68
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.strip_tags": {
  "data": {
   "shadows": "sklearn.feature_extraction.text.strip_tags"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_text.test_char_ngram_analyzer": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "cnga",
    "io.StringIO",
    "nose.tools.assert_equal",
    "sklearn.feature_extraction.text.CountVectorizer"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_char_wb_ngram_analyzer": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "cnga",
    "io.StringIO",
    "nose.tools.assert_equal",
    "sklearn.feature_extraction.text.CountVectorizer"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_count_binary_occurrences": {
  "data": {
   "lineno": 636,
   "symbols_in_volume": [
    "nose.tools.assert_equal",
    "numpy.float32",
    "numpy.testing.assert_array_equal",
    "sklearn.feature_extraction.text.CountVectorizer"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_count_vectorizer_max_features": {
  "data": {
   "lineno": 564,
   "symbols_in_volume": [
    "nose.tools.assert_equal",
    "numpy.argmax",
    "sklearn.feature_extraction.tests.test_text.JUNK_FOOD_DOCS",
    "sklearn.feature_extraction.text.CountVectorizer"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_count_vectorizer_pipeline_grid_selection": {
  "data": {
   "lineno": 703,
   "symbols_in_volume": [
    "len",
    "nose.tools.assert_equal",
    "numpy.testing.assert_array_equal",
    "sklearn.cross_validation.train_test_split",
    "sklearn.feature_extraction.tests.test_text.JUNK_FOOD_DOCS",
    "sklearn.feature_extraction.tests.test_text.NOTJUNK_FOOD_DOCS",
    "sklearn.feature_extraction.text.CountVectorizer",
    "sklearn.grid_search.GridSearchCV",
    "sklearn.pipeline.Pipeline",
    "sklearn.svm.LinearSVC"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_countvectorizer_custom_vocabulary": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "collections.Mapping",
    "collections.defaultdict",
    "dict",
    "functools.partial",
    "int",
    "isinstance",
    "iter",
    "len",
    "list",
    "nose.tools.assert_equal",
    "set",
    "sklearn.feature_extraction.tests.test_text.JUNK_FOOD_DOCS",
    "sklearn.feature_extraction.text.CountVectorizer",
    "typ"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_countvectorizer_custom_vocabulary_gap_index": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.feature_extraction.text.CountVectorizer",
    "sklearn.utils.testing.assert_in",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_countvectorizer_custom_vocabulary_pipeline": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "len",
    "nose.tools.assert_equal",
    "set",
    "sklearn.feature_extraction.tests.test_text.ALL_FOOD_DOCS",
    "sklearn.feature_extraction.text.CountVectorizer",
    "sklearn.feature_extraction.text.TfidfTransformer",
    "sklearn.pipeline.Pipeline"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_countvectorizer_custom_vocabulary_repeated_indeces": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.feature_extraction.text.CountVectorizer",
    "sklearn.utils.testing.assert_in",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_countvectorizer_empty_vocabulary": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.feature_extraction.text.CountVectorizer",
    "sklearn.utils.testing.assert_in",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_countvectorizer_stop_words": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "ValueError",
    "nose.tools.assert_equal",
    "numpy.testing.assert_raises",
    "set",
    "sklearn.feature_extraction.text.CountVectorizer",
    "sklearn.feature_extraction.text.ENGLISH_STOP_WORDS"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_countvectorizer_vocab_dicts_when_pickling": {
  "data": {
   "lineno": 879,
   "symbols_in_volume": [
    "dict",
    "nose.tools.assert_equal",
    "numpy.array",
    "numpy.random.RandomState",
    "range",
    "sklearn.feature_extraction.tests.test_text.ALL_FOOD_DOCS",
    "sklearn.feature_extraction.tests.test_text.pickle",
    "sklearn.feature_extraction.text.CountVectorizer",
    "sklearn.utils.random.choice"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_countvectorizer_vocab_sets_when_pickling": {
  "data": {
   "lineno": 863,
   "symbols_in_volume": [
    "nose.tools.assert_equal",
    "numpy.array",
    "numpy.random.RandomState",
    "range",
    "set",
    "sklearn.feature_extraction.tests.test_text.ALL_FOOD_DOCS",
    "sklearn.feature_extraction.tests.test_text.pickle",
    "sklearn.feature_extraction.text.CountVectorizer",
    "sklearn.utils.random.choice"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_feature_names": {
  "data": {
   "lineno": 526,
   "symbols_in_volume": [
    "ValueError",
    "enumerate",
    "len",
    "nose.tools.assert_equal",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_raises",
    "sklearn.feature_extraction.tests.test_text.ALL_FOOD_DOCS",
    "sklearn.feature_extraction.text.CountVectorizer"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_fit_countvectorizer_twice": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "nose.tools.assert_not_equal",
    "sklearn.feature_extraction.tests.test_text.ALL_FOOD_DOCS",
    "sklearn.feature_extraction.text.CountVectorizer"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_hashed_binary_occurrences": {
  "data": {
   "lineno": 659,
   "symbols_in_volume": [
    "nose.tools.assert_equal",
    "numpy.float64",
    "numpy.max",
    "sklearn.feature_extraction.text.HashingVectorizer"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_hashing_vectorizer": {
  "data": {
   "lineno": 488,
   "symbols_in_volume": [
    "len",
    "nose.tools.assert_almost_equal",
    "nose.tools.assert_equal",
    "nose.tools.assert_true",
    "numpy.linalg.norm",
    "numpy.max",
    "numpy.min",
    "range",
    "sklearn.feature_extraction.tests.test_text.ALL_FOOD_DOCS",
    "sklearn.feature_extraction.text.HashingVectorizer"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_hashingvectorizer_nan_in_docs": {
  "data": {
   "lineno": 934,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.utils.testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_hashingvectorizer_nan_in_docs.func": {
  "data": {
   "lineno": 940,
   "symbols_in_volume": [
    "numpy.nan",
    "sklearn.feature_extraction.text.HashingVectorizer"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_non_unique_vocab": {
  "data": {
   "lineno": 928,
   "symbols_in_volume": [
    "ValueError",
    "numpy.testing.assert_raises",
    "sklearn.feature_extraction.text.CountVectorizer"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_pickling_transformer": {
  "data": {
   "lineno": 917,
   "symbols_in_volume": [
    "nose.tools.assert_equal",
    "numpy.testing.assert_array_equal",
    "sklearn.feature_extraction.tests.test_text.JUNK_FOOD_DOCS",
    "sklearn.feature_extraction.tests.test_text.pickle",
    "sklearn.feature_extraction.text.CountVectorizer",
    "sklearn.feature_extraction.text.TfidfTransformer",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_pickling_vectorizer": {
  "data": {
   "lineno": 837,
   "symbols_in_volume": [
    "nose.tools.assert_equal",
    "numpy.testing.assert_array_equal",
    "sklearn.feature_extraction.tests.test_text.JUNK_FOOD_DOCS",
    "sklearn.feature_extraction.tests.test_text.lazy_analyze",
    "sklearn.feature_extraction.tests.test_text.pickle",
    "sklearn.feature_extraction.tests.test_text.strip_eacute",
    "sklearn.feature_extraction.text.CountVectorizer",
    "sklearn.feature_extraction.text.HashingVectorizer",
    "sklearn.feature_extraction.text.TfidfVectorizer",
    "sklearn.feature_extraction.text.strip_tags",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_stop_words_removal": {
  "data": {
   "lineno": 895,
   "symbols_in_volume": [
    "delattr",
    "numpy.testing.assert_array_equal",
    "sklearn.feature_extraction.tests.test_text.JUNK_FOOD_DOCS",
    "sklearn.feature_extraction.tests.test_text.strip_eacute",
    "sklearn.feature_extraction.text.CountVectorizer",
    "sklearn.feature_extraction.text.TfidfVectorizer",
    "sklearn.feature_extraction.text.strip_tags"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_strip_accents": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "nose.tools.assert_equal",
    "sklearn.feature_extraction.text.strip_accents_unicode"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_sublinear_tf": {
  "data": {
   "lineno": 361,
   "symbols_in_volume": [
    "nose.tools.assert_equal",
    "sklearn.feature_extraction.text.TfidfTransformer",
    "sklearn.utils.testing.assert_greater",
    "sklearn.utils.testing.assert_less"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_tf_idf_smoothing": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "nose.tools.assert_true",
    "numpy.testing.assert_array_almost_equal",
    "sklearn.feature_extraction.text.TfidfTransformer"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_tfidf_no_smoothing": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": [
    "RuntimeWarning",
    "len",
    "nose.SkipTest",
    "nose.tools.assert_true",
    "numpy.array",
    "numpy.testing.assert_array_almost_equal",
    "sklearn.feature_extraction.tests.test_text.warnings",
    "sklearn.feature_extraction.text.TfidfTransformer",
    "sklearn.utils.testing.assert_warns_message",
    "sklearn.utils.testing.clean_warning_registry"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_tfidf_vectorizer_setters": {
  "data": {
   "lineno": 475,
   "symbols_in_volume": [
    "nose.tools.assert_equal",
    "nose.tools.assert_true",
    "sklearn.feature_extraction.text.TfidfVectorizer"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_tfidf_vectorizer_with_fixed_vocabulary": {
  "data": {
   "lineno": 827,
   "symbols_in_volume": [
    "nose.tools.assert_true",
    "numpy.testing.assert_array_almost_equal",
    "sklearn.feature_extraction.tests.test_text.ALL_FOOD_DOCS",
    "sklearn.feature_extraction.text.TfidfVectorizer"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_tfidfvectorizer_binary": {
  "data": {
   "lineno": 947,
   "symbols_in_volume": [
    "nose.tools.assert_true",
    "numpy.testing.assert_array_equal",
    "sklearn.feature_extraction.text.TfidfVectorizer"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_tfidfvectorizer_export_idf": {
  "data": {
   "lineno": 958,
   "symbols_in_volume": [
    "numpy.testing.assert_array_almost_equal",
    "sklearn.feature_extraction.tests.test_text.JUNK_FOOD_DOCS",
    "sklearn.feature_extraction.text.TfidfVectorizer"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_to_ascii": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "nose.tools.assert_equal",
    "sklearn.feature_extraction.text.strip_accents_ascii"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_unicode_decode_error": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "UnicodeDecodeError",
    "numpy.testing.assert_raises",
    "sklearn.feature_extraction.text.CountVectorizer",
    "wa"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_vectorizer": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": [
    "ValueError",
    "hasattr",
    "iter",
    "len",
    "nose.tools.assert_equal",
    "nose.tools.assert_false",
    "numpy.sum",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_raises",
    "sklearn.feature_extraction.tests.test_text.ALL_FOOD_DOCS",
    "sklearn.feature_extraction.text.CountVectorizer",
    "sklearn.feature_extraction.text.TfidfTransformer",
    "sklearn.feature_extraction.text.TfidfVectorizer",
    "sklearn.feature_extraction.text.strip_accents_ascii"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_vectorizer_inverse_transform": {
  "data": {
   "lineno": 684,
   "symbols_in_volume": [
    "analyze",
    "numpy.sort",
    "numpy.testing.assert_array_equal",
    "numpy.unique",
    "sklearn.feature_extraction.tests.test_text.ALL_FOOD_DOCS",
    "sklearn.feature_extraction.text.CountVectorizer",
    "sklearn.feature_extraction.text.TfidfVectorizer",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_vectorizer_max_df": {
  "data": {
   "lineno": 590,
   "symbols_in_volume": [
    "len",
    "nose.tools.assert_equal",
    "nose.tools.assert_true",
    "sklearn.feature_extraction.text.CountVectorizer"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_vectorizer_max_features": {
  "data": {
   "lineno": 546,
   "symbols_in_volume": [
    "nose.tools.assert_equal",
    "set",
    "sklearn.feature_extraction.tests.test_text.ALL_FOOD_DOCS",
    "sklearn.feature_extraction.text.CountVectorizer",
    "sklearn.feature_extraction.text.TfidfVectorizer",
    "vec_factory"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_vectorizer_min_df": {
  "data": {
   "lineno": 613,
   "symbols_in_volume": [
    "len",
    "nose.tools.assert_equal",
    "nose.tools.assert_true",
    "sklearn.feature_extraction.text.CountVectorizer"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_vectorizer_pipeline_cross_validation": {
  "data": {
   "lineno": 778,
   "symbols_in_volume": [
    "len",
    "numpy.testing.assert_array_equal",
    "sklearn.cross_validation.cross_val_score",
    "sklearn.feature_extraction.tests.test_text.JUNK_FOOD_DOCS",
    "sklearn.feature_extraction.tests.test_text.NOTJUNK_FOOD_DOCS",
    "sklearn.feature_extraction.text.TfidfVectorizer",
    "sklearn.pipeline.Pipeline",
    "sklearn.svm.LinearSVC"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_vectorizer_pipeline_grid_selection": {
  "data": {
   "lineno": 739,
   "symbols_in_volume": [
    "len",
    "nose.tools.assert_equal",
    "nose.tools.assert_false",
    "numpy.testing.assert_array_equal",
    "sklearn.cross_validation.train_test_split",
    "sklearn.feature_extraction.tests.test_text.JUNK_FOOD_DOCS",
    "sklearn.feature_extraction.tests.test_text.NOTJUNK_FOOD_DOCS",
    "sklearn.feature_extraction.text.TfidfVectorizer",
    "sklearn.grid_search.GridSearchCV",
    "sklearn.pipeline.Pipeline",
    "sklearn.svm.LinearSVC"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_vectorizer_unicode": {
  "data": {
   "lineno": 792,
   "symbols_in_volume": [
    "nose.tools.assert_equal",
    "numpy.sort",
    "numpy.testing.assert_array_equal",
    "sklearn.feature_extraction.text.CountVectorizer",
    "sklearn.feature_extraction.text.HashingVectorizer"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_vectorizer_vocab_clone": {
  "data": {
   "lineno": 964,
   "symbols_in_volume": [
    "nose.tools.assert_equal",
    "sklearn.base.clone",
    "sklearn.feature_extraction.tests.test_text.ALL_FOOD_DOCS",
    "sklearn.feature_extraction.text.TfidfVectorizer"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_word_analyzer_unigrams": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "Vectorizer",
    "io.StringIO",
    "nose.tools.assert_equal",
    "sklearn.feature_extraction.tests.test_text.split_tokenize",
    "sklearn.feature_extraction.tests.test_text.uppercase",
    "sklearn.feature_extraction.text.CountVectorizer",
    "sklearn.feature_extraction.text.HashingVectorizer",
    "wa"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_word_analyzer_unigrams_and_bigrams": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "nose.tools.assert_equal",
    "sklearn.feature_extraction.text.CountVectorizer",
    "wa"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.train_test_split": {
  "data": {
   "shadows": "sklearn.cross_validation.train_test_split"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_text.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.tests.test_text.uppercase": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "sklearn.feature_extraction.text.strip_accents_unicode"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.text": {
  "data": {},
  "type": "module"
 },
 "sklearn.feature_extraction.text.CountVectorizer": {
  "data": {
   "lineno": 504,
   "symbols_in_volume": [
    "sklearn.feature_extraction.text.VectorizerMixin"
   ]
  },
  "type": "class"
 },
 "sklearn.feature_extraction.text.CountVectorizer.__init__": {
  "data": {
   "lineno": 651,
   "symbols_in_volume": [
    "ValueError",
    "analyzer",
    "input",
    "isinstance",
    "numpy.int64",
    "sklearn.feature_extraction.text.numbers",
    "strip_accents"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.text.CountVectorizer._count_vocab": {
  "data": {
   "lineno": 737,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "analyze",
    "collections.defaultdict",
    "dict",
    "frombuffer_empty",
    "len",
    "numpy.frombuffer",
    "numpy.intc",
    "numpy.ones",
    "scipy.sparse.csr_matrix",
    "sklearn.feature_extraction.text._make_int_array"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.text.CountVectorizer._limit_features": {
  "data": {
   "lineno": 696,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "len",
    "list",
    "numpy.asarray",
    "numpy.cumsum",
    "numpy.ones",
    "numpy.where",
    "numpy.zeros",
    "set",
    "sklearn.feature_extraction.text._document_frequency"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.text.CountVectorizer._sort_features": {
  "data": {
   "lineno": 684,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "numpy.empty",
    "numpy.int32",
    "sorted"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.text.CountVectorizer.fit": {
  "data": {
   "lineno": 777
  },
  "type": "function"
 },
 "sklearn.feature_extraction.text.CountVectorizer.fit_transform": {
  "data": {
   "lineno": 792,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "sklearn.feature_extraction.text.numbers"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.text.CountVectorizer.get_feature_names": {
  "data": {
   "lineno": 901,
   "symbols_in_volume": [
    "operator.itemgetter",
    "sorted"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.text.CountVectorizer.inverse_transform": {
  "data": {
   "lineno": 871,
   "symbols_in_volume": [
    "list",
    "numpy.argsort",
    "numpy.array",
    "numpy.asmatrix",
    "range",
    "scipy.sparse.issparse"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.text.CountVectorizer.transform": {
  "data": {
   "lineno": 844,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.text.HashingVectorizer": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "sklearn.feature_extraction.text.VectorizerMixin"
   ]
  },
  "type": "class"
 },
 "sklearn.feature_extraction.text.HashingVectorizer.__init__": {
  "data": {
   "lineno": 422,
   "symbols_in_volume": [
    "input",
    "numpy.float64",
    "strip_accents"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.text.HashingVectorizer._get_hasher": {
  "data": {
   "lineno": 490,
   "symbols_in_volume": [
    "FeatureHasher"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.text.HashingVectorizer.fit": {
  "data": {
   "lineno": 455
  },
  "type": "function"
 },
 "sklearn.feature_extraction.text.HashingVectorizer.partial_fit": {
  "data": {
   "lineno": 446
  },
  "type": "function"
 },
 "sklearn.feature_extraction.text.HashingVectorizer.transform": {
  "data": {
   "lineno": 461,
   "symbols_in_volume": [
    "analyzer",
    "normalize"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.text.Mapping": {
  "data": {
   "shadows": "collections.Mapping"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.text.TfidfTransformer": {
  "data": {
   "lineno": 914
  },
  "type": "class"
 },
 "sklearn.feature_extraction.text.TfidfTransformer.__init__": {
  "data": {
   "lineno": 966
  },
  "type": "function"
 },
 "sklearn.feature_extraction.text.TfidfTransformer.fit": {
  "data": {
   "lineno": 973,
   "symbols_in_volume": [
    "float",
    "int",
    "numpy.log",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.issparse",
    "scipy.sparse.spdiags",
    "sklearn.feature_extraction.text._document_frequency"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.text.TfidfTransformer.idf_": {
  "data": {
   "lineno": 1044,
   "symbols_in_volume": [
    "hasattr",
    "numpy.ravel",
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.text.TfidfTransformer.transform": {
  "data": {
   "lineno": 999,
   "symbols_in_volume": [
    "ValueError",
    "check_is_fitted",
    "hasattr",
    "normalize",
    "numpy.float",
    "numpy.float64",
    "numpy.issubdtype",
    "numpy.log",
    "scipy.sparse.csr_matrix"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.text.TfidfVectorizer": {
  "data": {
   "lineno": 1052,
   "symbols_in_volume": [
    "sklearn.feature_extraction.text.CountVectorizer"
   ]
  },
  "type": "class"
 },
 "sklearn.feature_extraction.text.TfidfVectorizer.__init__": {
  "data": {
   "lineno": 1212,
   "symbols_in_volume": [
    "analyzer",
    "input",
    "numpy.int64",
    "sklearn.feature_extraction.text.TfidfTransformer",
    "sklearn.feature_extraction.text.TfidfVectorizer",
    "strip_accents",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.text.TfidfVectorizer.fit": {
  "data": {
   "lineno": 1273,
   "symbols_in_volume": [
    "sklearn.feature_extraction.text.TfidfVectorizer",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.text.TfidfVectorizer.fit_transform": {
  "data": {
   "lineno": 1289,
   "symbols_in_volume": [
    "sklearn.feature_extraction.text.TfidfVectorizer",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.text.TfidfVectorizer.idf_": {
  "data": {
   "lineno": 1269,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.text.TfidfVectorizer.norm": {
  "data": {
   "lineno": 1241
  },
  "type": "function"
 },
 "sklearn.feature_extraction.text.TfidfVectorizer.smooth_idf": {
  "data": {
   "lineno": 1257
  },
  "type": "function"
 },
 "sklearn.feature_extraction.text.TfidfVectorizer.sublinear_tf": {
  "data": {
   "lineno": 1265
  },
  "type": "function"
 },
 "sklearn.feature_extraction.text.TfidfVectorizer.transform": {
  "data": {
   "lineno": 1311,
   "symbols_in_volume": [
    "check_is_fitted",
    "sklearn.feature_extraction.text.TfidfVectorizer",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.text.TfidfVectorizer.use_idf": {
  "data": {
   "lineno": 1249
  },
  "type": "function"
 },
 "sklearn.feature_extraction.text.VectorizerMixin": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "object",
    "sklearn.feature_extraction.text.re"
   ]
  },
  "type": "class"
 },
 "sklearn.feature_extraction.text.VectorizerMixin._char_ngrams": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "len",
    "min",
    "xrange"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.text.VectorizerMixin._char_wb_ngrams": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "len",
    "xrange"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.text.VectorizerMixin._check_vocabulary": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "ValueError",
    "check_is_fitted",
    "len"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.text.VectorizerMixin._validate_vocabulary": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "ValueError",
    "collections.Mapping",
    "dict",
    "enumerate",
    "isinstance",
    "len",
    "set",
    "sorted",
    "xrange"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.text.VectorizerMixin._word_ngrams": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "len",
    "min",
    "xrange"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.text.VectorizerMixin.build_analyzer": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "ValueError",
    "callable",
    "preprocess",
    "tokenize"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.text.VectorizerMixin.build_preprocessor": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "ValueError",
    "callable",
    "sklearn.feature_extraction.text.strip_accents_ascii",
    "sklearn.feature_extraction.text.strip_accents_unicode",
    "strip_accents"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.text.VectorizerMixin.build_tokenizer": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "sklearn.feature_extraction.text.re"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.text.VectorizerMixin.decode": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "ValueError",
    "bytes",
    "isinstance",
    "numpy.nan",
    "open"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.text.VectorizerMixin.fixed_vocabulary": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "deprecated",
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.text.VectorizerMixin.get_stop_words": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "sklearn.feature_extraction.text._check_stop_list"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.text.__all__": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "sklearn.feature_extraction.text._check_stop_list": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "ValueError",
    "frozenset",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.text._document_frequency": {
  "data": {
   "lineno": 496,
   "symbols_in_volume": [
    "bincount",
    "numpy.diff",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.isspmatrix_csr"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.text._make_int_array": {
  "data": {
   "lineno": 909,
   "symbols_in_volume": [
    "sklearn.feature_extraction.text.array",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.text.array": {
  "data": {
   "shadows": "array"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.text.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.text.itemgetter": {
  "data": {
   "shadows": "operator.itemgetter"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.text.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.text.numbers": {
  "data": {
   "shadows": "numbers"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.text.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.text.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.text.strip_accents_ascii": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "sklearn.feature_extraction.text.unicodedata"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.text.strip_accents_unicode": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "sklearn.feature_extraction.text.unicodedata"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.text.strip_tags": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "sklearn.feature_extraction.text.re"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_extraction.text.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "sklearn.feature_extraction.text.unicodedata": {
  "data": {
   "shadows": "unicodedata"
  },
  "type": "import"
 },
 "sklearn.feature_selection": {
  "data": {},
  "type": "module"
 },
 "sklearn.feature_selection.__all__": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "sklearn.feature_selection.base": {
  "data": {},
  "type": "module"
 },
 "sklearn.feature_selection.base.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "sklearn.feature_selection.base.SelectorMixin": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "abc.ABCMeta"
   ]
  },
  "type": "class"
 },
 "sklearn.feature_selection.base.SelectorMixin._get_support_mask": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.base.SelectorMixin.get_support": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.base.SelectorMixin.inverse_transform": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "ValueError",
    "check_array",
    "len",
    "numpy.concatenate",
    "numpy.cumsum",
    "numpy.diff",
    "numpy.zeros",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.issparse"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.base.SelectorMixin.transform": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "UserWarning",
    "ValueError",
    "check_array",
    "len",
    "numpy.empty",
    "safe_mask",
    "warnings.warn"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.base.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "sklearn.feature_selection.base.csc_matrix": {
  "data": {
   "shadows": "scipy.sparse.csc_matrix"
  },
  "type": "import"
 },
 "sklearn.feature_selection.base.issparse": {
  "data": {
   "shadows": "scipy.sparse.issparse"
  },
  "type": "import"
 },
 "sklearn.feature_selection.base.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.feature_selection.base.warn": {
  "data": {
   "shadows": "warnings.warn"
  },
  "type": "import"
 },
 "sklearn.feature_selection.from_model": {
  "data": {},
  "type": "module"
 },
 "sklearn.feature_selection.from_model.SelectFromModel": {
  "data": {
   "lineno": 146
  },
  "type": "class"
 },
 "sklearn.feature_selection.from_model.SelectFromModel.__init__": {
  "data": {
   "lineno": 186
  },
  "type": "function"
 },
 "sklearn.feature_selection.from_model.SelectFromModel._get_support_mask": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "ValueError",
    "hasattr",
    "sklearn.feature_selection.from_model._calculate_threshold",
    "sklearn.feature_selection.from_model._get_feature_importances"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.from_model.SelectFromModel.fit": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "NotFittedError",
    "clone",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.from_model.SelectFromModel.partial_fit": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "NotFittedError",
    "clone",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.from_model._LearntSelectorMixin": {
  "data": {
   "lineno": 81
  },
  "type": "class"
 },
 "sklearn.feature_selection.from_model._LearntSelectorMixin.transform": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "any",
    "check_array",
    "check_is_fitted",
    "deprecated",
    "getattr",
    "len",
    "numpy.any",
    "safe_mask",
    "sklearn.feature_selection.from_model._calculate_threshold",
    "sklearn.feature_selection.from_model._get_feature_importances"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.from_model._calculate_threshold": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "hasattr",
    "isinstance",
    "numpy.mean",
    "numpy.median"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.from_model._get_feature_importances": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "ValueError",
    "hasattr",
    "numpy.abs",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.from_model.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.feature_selection.rfe": {
  "data": {},
  "type": "module"
 },
 "sklearn.feature_selection.rfe.RFE": {
  "data": {
   "lineno": 23
  },
  "type": "class"
 },
 "sklearn.feature_selection.rfe.RFE.__init__": {
  "data": {
   "lineno": 107
  },
  "type": "function"
 },
 "sklearn.feature_selection.rfe.RFE._estimator_type": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.rfe.RFE._fit": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "DeprecationWarning",
    "RuntimeError",
    "ValueError",
    "check_X_y",
    "clone",
    "hasattr",
    "int",
    "max",
    "min",
    "numpy.arange",
    "numpy.argsort",
    "numpy.bool",
    "numpy.int",
    "numpy.logical_not",
    "numpy.ones",
    "numpy.ravel",
    "numpy.sum",
    "print",
    "safe_sqr",
    "sklearn.feature_selection.rfe.warnings",
    "step_score"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.rfe.RFE._get_support_mask": {
  "data": {
   "lineno": 254
  },
  "type": "function"
 },
 "sklearn.feature_selection.rfe.RFE.decision_function": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "if_delegate_has_method"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.rfe.RFE.fit": {
  "data": {
   "lineno": 119
  },
  "type": "function"
 },
 "sklearn.feature_selection.rfe.RFE.predict": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "if_delegate_has_method"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.rfe.RFE.predict_log_proba": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "if_delegate_has_method"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.rfe.RFE.predict_proba": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "if_delegate_has_method"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.rfe.RFE.score": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "if_delegate_has_method"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.rfe.RFECV": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "sklearn.feature_selection.rfe.RFE"
   ]
  },
  "type": "class"
 },
 "sklearn.feature_selection.rfe.RFECV.__init__": {
  "data": {
   "lineno": 375
  },
  "type": "function"
 },
 "sklearn.feature_selection.rfe.RFECV.fit": {
  "data": {
   "lineno": 384,
   "symbols_in_volume": [
    "DeprecationWarning",
    "_safe_split",
    "_score",
    "check_X_y",
    "check_cv",
    "check_scoring",
    "clone",
    "enumerate",
    "float",
    "is_classifier",
    "len",
    "max",
    "numpy.argmax",
    "numpy.array",
    "numpy.ceil",
    "numpy.concatenate",
    "numpy.sum",
    "sklearn.feature_selection.rfe.RFE",
    "sklearn.feature_selection.rfe.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.rfe.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.feature_selection.rfe.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests": {
  "data": {},
  "type": "module"
 },
 "sklearn.feature_selection.tests.test_base": {
  "data": {
   "symbols_in_volume": [
    "list",
    "numpy.arange",
    "numpy.array",
    "sklearn.feature_selection.tests.test_base.X",
    "sklearn.feature_selection.tests.test_base.Xinv",
    "sklearn.feature_selection.tests.test_base.feature_names",
    "sklearn.feature_selection.tests.test_base.feature_names_inv"
   ]
  },
  "type": "module"
 },
 "sklearn.feature_selection.tests.test_base.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_base.SelectorMixin": {
  "data": {
   "shadows": "sklearn.feature_selection.base.SelectorMixin"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_base.StepSelector": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator",
    "sklearn.feature_selection.base.SelectorMixin"
   ]
  },
  "type": "class"
 },
 "sklearn.feature_selection.tests.test_base.StepSelector.__init__": {
  "data": {
   "lineno": 14
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_base.StepSelector._get_support_mask": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "bool",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_base.StepSelector.fit": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "sklearn.utils.check_array"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_base.X": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "sklearn.feature_selection.tests.test_base.Xinv": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "sklearn.feature_selection.tests.test_base.Xt": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "sklearn.feature_selection.tests.test_base.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_base.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_base.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_base.check_array": {
  "data": {
   "shadows": "sklearn.utils.check_array"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_base.feature_names": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "sklearn.feature_selection.tests.test_base.feature_names_inv": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "sklearn.feature_selection.tests.test_base.feature_names_t": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "sklearn.feature_selection.tests.test_base.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_base.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_base.support": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "sklearn.feature_selection.tests.test_base.support_inds": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "sklearn.feature_selection.tests.test_base.test_get_support": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "numpy.testing.assert_array_equal",
    "sklearn.feature_selection.tests.test_base.StepSelector",
    "sklearn.feature_selection.tests.test_base.X",
    "sklearn.feature_selection.tests.test_base.support",
    "sklearn.feature_selection.tests.test_base.support_inds",
    "sklearn.feature_selection.tests.test_base.y"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_base.test_inverse_transform_dense": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "ValueError",
    "nose.tools.assert_equal",
    "nose.tools.assert_raises",
    "numpy.array",
    "numpy.float32",
    "numpy.int32",
    "numpy.testing.assert_array_equal",
    "sklearn.feature_selection.tests.test_base.StepSelector",
    "sklearn.feature_selection.tests.test_base.X",
    "sklearn.feature_selection.tests.test_base.Xinv",
    "sklearn.feature_selection.tests.test_base.Xt",
    "sklearn.feature_selection.tests.test_base.feature_names_inv",
    "sklearn.feature_selection.tests.test_base.feature_names_t",
    "sklearn.feature_selection.tests.test_base.y"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_base.test_inverse_transform_sparse": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "ValueError",
    "nose.tools.assert_equal",
    "nose.tools.assert_raises",
    "numpy.array",
    "numpy.float32",
    "numpy.int32",
    "numpy.testing.assert_array_equal",
    "scipy.sparse",
    "scipy.sparse.csc_matrix",
    "sklearn.feature_selection.tests.test_base.StepSelector",
    "sklearn.feature_selection.tests.test_base.X",
    "sklearn.feature_selection.tests.test_base.Xinv",
    "sklearn.feature_selection.tests.test_base.Xt"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_base.test_transform_dense": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "ValueError",
    "nose.tools.assert_equal",
    "nose.tools.assert_raises",
    "numpy.array",
    "numpy.float32",
    "numpy.int32",
    "numpy.testing.assert_array_equal",
    "sklearn.feature_selection.tests.test_base.StepSelector",
    "sklearn.feature_selection.tests.test_base.X",
    "sklearn.feature_selection.tests.test_base.Xt",
    "sklearn.feature_selection.tests.test_base.feature_names",
    "sklearn.feature_selection.tests.test_base.feature_names_t",
    "sklearn.feature_selection.tests.test_base.y"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_base.test_transform_sparse": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "ValueError",
    "nose.tools.assert_equal",
    "nose.tools.assert_raises",
    "numpy.array",
    "numpy.float32",
    "numpy.int32",
    "numpy.testing.assert_array_equal",
    "scipy.sparse",
    "scipy.sparse.csc_matrix",
    "sklearn.feature_selection.tests.test_base.StepSelector",
    "sklearn.feature_selection.tests.test_base.X",
    "sklearn.feature_selection.tests.test_base.Xt"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_base.y": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "sklearn.feature_selection.tests.test_chi2": {
  "data": {},
  "type": "module"
 },
 "sklearn.feature_selection.tests.test_chi2.SelectKBest": {
  "data": {
   "shadows": "sklearn.feature_selection.SelectKBest"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_chi2.X": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "sklearn.feature_selection.tests.test_chi2._chisquare": {
  "data": {
   "shadows": "sklearn.feature_selection.univariate_selection._chisquare"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_chi2.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_chi2.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_chi2.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_chi2.chi2": {
  "data": {
   "shadows": "sklearn.feature_selection.chi2"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_chi2.coo_matrix": {
  "data": {
   "shadows": "scipy.sparse.coo_matrix"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_chi2.csr_matrix": {
  "data": {
   "shadows": "scipy.sparse.csr_matrix"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_chi2.mkchi2": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "sklearn.feature_selection.SelectKBest",
    "sklearn.feature_selection.chi2"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_chi2.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_chi2.scipy.stats": {
  "data": {
   "shadows": "scipy.stats"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_chi2.test_chi2": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.float",
    "numpy.testing.assert_equal",
    "scipy.sparse.csr_matrix",
    "sklearn.feature_selection.chi2",
    "sklearn.feature_selection.chi2.get_support",
    "sklearn.feature_selection.chi2.transform",
    "sklearn.feature_selection.tests.test_chi2.X",
    "sklearn.feature_selection.tests.test_chi2.mkchi2",
    "sklearn.feature_selection.tests.test_chi2.y",
    "sorted"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_chi2.test_chi2_coo": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "scipy.sparse.coo_matrix",
    "sklearn.feature_selection.tests.test_chi2.X",
    "sklearn.feature_selection.tests.test_chi2.mkchi2",
    "sklearn.feature_selection.tests.test_chi2.y"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_chi2.test_chi2_negative": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "ValueError",
    "nose.tools.assert_raises",
    "numpy.array",
    "scipy.sparse.csr_matrix",
    "sklearn.feature_selection.chi2",
    "sklearn.feature_selection.tests.test_chi2.X",
    "sklearn.feature_selection.tests.test_chi2.y"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_chi2.test_chisquare": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.assert_array_almost_equal",
    "sklearn.feature_selection.univariate_selection._chisquare"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_chi2.y": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "sklearn.feature_selection.tests.test_feature_select": {
  "data": {},
  "type": "module"
 },
 "sklearn.feature_selection.tests.test_feature_select.GenericUnivariateSelect": {
  "data": {
   "shadows": "sklearn.feature_selection.GenericUnivariateSelect"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_feature_select.SelectFdr": {
  "data": {
   "shadows": "sklearn.feature_selection.SelectFdr"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_feature_select.SelectFpr": {
  "data": {
   "shadows": "sklearn.feature_selection.SelectFpr"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_feature_select.SelectFwe": {
  "data": {
   "shadows": "sklearn.feature_selection.SelectFwe"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_feature_select.SelectKBest": {
  "data": {
   "shadows": "sklearn.feature_selection.SelectKBest"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_feature_select.SelectPercentile": {
  "data": {
   "shadows": "sklearn.feature_selection.SelectPercentile"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_feature_select.assert_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_feature_select.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_feature_select.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_feature_select.assert_best_scores_kept": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "numpy.sort",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_feature_select.assert_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_feature_select.assert_greater": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_greater"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_feature_select.assert_greater_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_greater_equal"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_feature_select.assert_less": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_less"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_feature_select.assert_not_in": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_not_in"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_feature_select.assert_raises": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_feature_select.assert_true": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_true"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_feature_select.assert_warns": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_warns"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_feature_select.assert_warns_message": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_warns_message"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_feature_select.chi2": {
  "data": {
   "shadows": "sklearn.feature_selection.chi2"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_feature_select.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_feature_select.f_classif": {
  "data": {
   "shadows": "sklearn.feature_selection.f_classif"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_feature_select.f_oneway": {
  "data": {
   "shadows": "sklearn.feature_selection.f_oneway"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_feature_select.f_regression": {
  "data": {
   "shadows": "sklearn.feature_selection.f_regression"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_feature_select.ignore_warnings": {
  "data": {
   "shadows": "sklearn.utils.testing.ignore_warnings"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_feature_select.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_feature_select.make_classification": {
  "data": {
   "shadows": "sklearn.datasets.samples_generator.make_classification"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_feature_select.make_regression": {
  "data": {
   "shadows": "sklearn.datasets.samples_generator.make_regression"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_feature_select.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_feature_select.safe_mask": {
  "data": {
   "shadows": "sklearn.utils.safe_mask"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_feature_select.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_feature_select.stats": {
  "data": {
   "shadows": "scipy.stats"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_feature_select.test_f_classif": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "scipy.sparse.csr_matrix",
    "sklearn.datasets.samples_generator.make_classification",
    "sklearn.feature_selection.f_classif",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_feature_select.test_f_classif_constant_feature": {
  "data": {
   "lineno": 532,
   "symbols_in_volume": [
    "UserWarning",
    "sklearn.datasets.samples_generator.make_classification",
    "sklearn.feature_selection.f_classif",
    "sklearn.utils.testing.assert_warns"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_feature_select.test_f_classif_multi_class": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "sklearn.datasets.samples_generator.make_classification",
    "sklearn.feature_selection.f_classif",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_feature_select.test_f_oneway_ints": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.float",
    "numpy.random.RandomState",
    "sklearn.feature_selection.f_oneway",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_feature_select.test_f_oneway_vs_scipy_stats": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "numpy.allclose",
    "numpy.random.RandomState",
    "scipy.stats.f_oneway",
    "sklearn.feature_selection.f_oneway",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_feature_select.test_f_regression": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "scipy.sparse.csr_matrix",
    "sklearn.datasets.samples_generator.make_regression",
    "sklearn.feature_selection.f_regression",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_feature_select.test_f_regression_center": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.ones",
    "sklearn.feature_selection.f_regression",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_feature_select.test_f_regression_input_dtype": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.float",
    "numpy.int",
    "numpy.random.RandomState",
    "sklearn.feature_selection.f_regression",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_feature_select.test_invalid_k": {
  "data": {
   "lineno": 520,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.feature_selection.GenericUnivariateSelect",
    "sklearn.feature_selection.SelectKBest",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_feature_select.test_invalid_percentile": {
  "data": {
   "lineno": 322,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.datasets.samples_generator.make_regression",
    "sklearn.feature_selection.GenericUnivariateSelect",
    "sklearn.feature_selection.SelectPercentile",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_feature_select.test_nans": {
  "data": {
   "lineno": 498,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.feature_selection.SelectKBest",
    "sklearn.feature_selection.SelectPercentile",
    "sklearn.feature_selection.f_classif",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_feature_select.test_no_feature_selected": {
  "data": {
   "lineno": 540,
   "symbols_in_volume": [
    "UserWarning",
    "numpy.random.RandomState",
    "numpy.zeros",
    "sklearn.feature_selection.SelectFdr",
    "sklearn.feature_selection.SelectFpr",
    "sklearn.feature_selection.SelectFwe",
    "sklearn.feature_selection.SelectKBest",
    "sklearn.feature_selection.SelectPercentile",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_warns_message"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_feature_select.test_score_func_error": {
  "data": {
   "lineno": 511,
   "symbols_in_volume": [
    "SelectFeatures",
    "TypeError",
    "sklearn.feature_selection.GenericUnivariateSelect",
    "sklearn.feature_selection.SelectFdr",
    "sklearn.feature_selection.SelectFpr",
    "sklearn.feature_selection.SelectFwe",
    "sklearn.feature_selection.SelectKBest",
    "sklearn.feature_selection.SelectPercentile",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_feature_select.test_select_fdr_regression": {
  "data": {
   "lineno": 373,
   "symbols_in_volume": [
    "numpy.mean",
    "range",
    "single_fdr",
    "sklearn.utils.testing.assert_greater",
    "sklearn.utils.testing.assert_greater_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_feature_select.test_select_fdr_regression.single_fdr": {
  "data": {
   "lineno": 375,
   "symbols_in_volume": [
    "numpy.sum",
    "sklearn.datasets.samples_generator.make_regression",
    "sklearn.feature_selection.GenericUnivariateSelect",
    "sklearn.feature_selection.SelectFdr",
    "sklearn.feature_selection.f_regression",
    "sklearn.feature_selection.tests.test_feature_select.warnings",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_feature_select.test_select_fwe_regression": {
  "data": {
   "lineno": 415,
   "symbols_in_volume": [
    "numpy.bool",
    "numpy.ones",
    "numpy.sum",
    "numpy.zeros",
    "sklearn.datasets.samples_generator.make_regression",
    "sklearn.feature_selection.GenericUnivariateSelect",
    "sklearn.feature_selection.SelectFwe",
    "sklearn.feature_selection.f_regression",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_less"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_feature_select.test_select_heuristics_classif": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "numpy.zeros",
    "sklearn.datasets.samples_generator.make_classification",
    "sklearn.feature_selection.GenericUnivariateSelect",
    "sklearn.feature_selection.SelectFwe",
    "sklearn.feature_selection.f_classif",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_feature_select.test_select_heuristics_regression": {
  "data": {
   "lineno": 353,
   "symbols_in_volume": [
    "numpy.bool",
    "numpy.ones",
    "numpy.sum",
    "numpy.zeros",
    "sklearn.datasets.samples_generator.make_regression",
    "sklearn.feature_selection.GenericUnivariateSelect",
    "sklearn.feature_selection.SelectFpr",
    "sklearn.feature_selection.f_regression",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_less"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_feature_select.test_select_kbest_all": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "sklearn.datasets.samples_generator.make_classification",
    "sklearn.feature_selection.SelectKBest",
    "sklearn.feature_selection.f_classif",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_feature_select.test_select_kbest_classif": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "numpy.zeros",
    "sklearn.datasets.samples_generator.make_classification",
    "sklearn.feature_selection.GenericUnivariateSelect",
    "sklearn.feature_selection.SelectKBest",
    "sklearn.feature_selection.f_classif",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_feature_select.test_select_kbest_regression": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": [
    "numpy.zeros",
    "sklearn.datasets.samples_generator.make_regression",
    "sklearn.feature_selection.GenericUnivariateSelect",
    "sklearn.feature_selection.SelectKBest",
    "sklearn.feature_selection.f_regression",
    "sklearn.feature_selection.tests.test_feature_select.assert_best_scores_kept",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_feature_select.test_select_kbest_zero": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "UserWarning",
    "bool",
    "numpy.zeros",
    "sklearn.datasets.samples_generator.make_classification",
    "sklearn.feature_selection.SelectKBest",
    "sklearn.feature_selection.f_classif",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_warns_message"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_feature_select.test_select_percentile_classif": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "numpy.zeros",
    "sklearn.datasets.samples_generator.make_classification",
    "sklearn.feature_selection.GenericUnivariateSelect",
    "sklearn.feature_selection.SelectPercentile",
    "sklearn.feature_selection.f_classif",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_feature_select.test_select_percentile_classif_sparse": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "numpy.zeros",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.issparse",
    "sklearn.datasets.samples_generator.make_classification",
    "sklearn.feature_selection.GenericUnivariateSelect",
    "sklearn.feature_selection.SelectPercentile",
    "sklearn.feature_selection.f_classif",
    "sklearn.utils.safe_mask",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_feature_select.test_select_percentile_regression": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "bool",
    "numpy.logical_not",
    "numpy.zeros",
    "sklearn.datasets.samples_generator.make_regression",
    "sklearn.feature_selection.GenericUnivariateSelect",
    "sklearn.feature_selection.SelectPercentile",
    "sklearn.feature_selection.f_regression",
    "sklearn.feature_selection.tests.test_feature_select.assert_best_scores_kept",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_feature_select.test_select_percentile_regression_full": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "numpy.ones",
    "sklearn.datasets.samples_generator.make_regression",
    "sklearn.feature_selection.GenericUnivariateSelect",
    "sklearn.feature_selection.SelectPercentile",
    "sklearn.feature_selection.f_regression",
    "sklearn.feature_selection.tests.test_feature_select.assert_best_scores_kept",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_feature_select.test_selectkbest_tiebreaking": {
  "data": {
   "lineno": 434,
   "symbols_in_volume": [
    "sklearn.feature_selection.SelectKBest",
    "sklearn.feature_selection.tests.test_feature_select.assert_best_scores_kept",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_feature_select.test_selectpercentile_tiebreaking": {
  "data": {
   "lineno": 452,
   "symbols_in_volume": [
    "sklearn.feature_selection.SelectPercentile",
    "sklearn.feature_selection.tests.test_feature_select.assert_best_scores_kept",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_feature_select.test_tied_pvalues": {
  "data": {
   "lineno": 469,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.feature_selection.SelectKBest",
    "sklearn.feature_selection.SelectPercentile",
    "sklearn.feature_selection.chi2",
    "sklearn.feature_selection.tests.test_feature_select.itertools",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_not_in"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_feature_select.test_tied_scores": {
  "data": {
   "lineno": 487,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "sklearn.feature_selection.SelectKBest",
    "sklearn.feature_selection.chi2",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_feature_select.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_from_model": {
  "data": {
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.datasets.load_iris",
    "sklearn.feature_selection.tests.test_from_model.iris"
   ]
  },
  "type": "module"
 },
 "sklearn.feature_selection.tests.test_from_model.Lasso": {
  "data": {
   "shadows": "sklearn.linear_model.Lasso"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_from_model.LinearSVC": {
  "data": {
   "shadows": "sklearn.svm.LinearSVC"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_from_model.LogisticRegression": {
  "data": {
   "shadows": "sklearn.linear_model.LogisticRegression"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_from_model.PassiveAggressiveClassifier": {
  "data": {
   "shadows": "sklearn.linear_model.PassiveAggressiveClassifier"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_from_model.RandomForestClassifier": {
  "data": {
   "shadows": "sklearn.ensemble.RandomForestClassifier"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_from_model.SGDClassifier": {
  "data": {
   "shadows": "sklearn.linear_model.SGDClassifier"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_from_model.SelectFromModel": {
  "data": {
   "shadows": "sklearn.feature_selection.SelectFromModel"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_from_model.assert_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_from_model.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_from_model.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_from_model.assert_greater": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_greater"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_from_model.assert_less": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_less"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_from_model.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_from_model.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_from_model.assert_warns": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_warns"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_from_model.datasets": {
  "data": {
   "shadows": "sklearn.datasets"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_from_model.iris": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "sklearn.feature_selection.tests.test_from_model.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_from_model.rng": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "sklearn.feature_selection.tests.test_from_model.skip_if_32bit": {
  "data": {
   "shadows": "sklearn.utils.testing.skip_if_32bit"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_from_model.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_from_model.test_feature_importances": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "func",
    "hasattr",
    "nose.tools.assert_true",
    "numpy.abs",
    "numpy.mean",
    "numpy.median",
    "numpy.ones",
    "sklearn.datasets.make_classification",
    "sklearn.ensemble.RandomForestClassifier",
    "sklearn.feature_selection.SelectFromModel",
    "sklearn.linear_model.Lasso",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_less",
    "sklearn.utils.testing.skip_if_32bit",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_from_model.test_input_estimator_unchanged": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "nose.tools.assert_true",
    "sklearn.ensemble.RandomForestClassifier",
    "sklearn.feature_selection.SelectFromModel"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_from_model.test_invalid_input": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "ValueError",
    "nose.tools.assert_raises",
    "sklearn.feature_selection.SelectFromModel",
    "sklearn.linear_model.SGDClassifier"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_from_model.test_partial_fit": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "nose.tools.assert_true",
    "numpy.concatenate",
    "numpy.unique",
    "numpy.vstack",
    "sklearn.feature_selection.SelectFromModel",
    "sklearn.linear_model.PassiveAggressiveClassifier",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_from_model.test_prefit": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "ValueError",
    "nose.tools.assert_raises",
    "sklearn.feature_selection.SelectFromModel",
    "sklearn.linear_model.SGDClassifier",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_from_model.test_threshold_string": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "numpy.mean",
    "sklearn.ensemble.RandomForestClassifier",
    "sklearn.feature_selection.SelectFromModel",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_from_model.test_threshold_without_refitting": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "sklearn.feature_selection.SelectFromModel",
    "sklearn.linear_model.SGDClassifier",
    "sklearn.utils.testing.assert_greater"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_from_model.test_transform_linear_model": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "DeprecationWarning",
    "func",
    "isinstance",
    "nose.tools.assert_true",
    "numpy.array",
    "numpy.mean",
    "scipy.sparse.csr_matrix",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.linear_model.SGDClassifier",
    "sklearn.svm.LinearSVC",
    "sklearn.utils.testing.assert_greater",
    "sklearn.utils.testing.assert_less",
    "sklearn.utils.testing.assert_warns"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_from_model.test_warm_start": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "nose.tools.assert_true",
    "sklearn.feature_selection.SelectFromModel",
    "sklearn.linear_model.PassiveAggressiveClassifier"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_rfe": {
  "data": {},
  "type": "module"
 },
 "sklearn.feature_selection.tests.test_rfe.MockClassifier": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "sklearn.feature_selection.tests.test_rfe.MockClassifier.__init__": {
  "data": {
   "lineno": 31
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_rfe.MockClassifier.fit": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "len",
    "nose.tools.assert_true",
    "numpy.float64",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_rfe.MockClassifier.get_params": {
  "data": {
   "lineno": 53
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_rfe.MockClassifier.predict": {
  "data": {
   "lineno": 39
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_rfe.MockClassifier.score": {
  "data": {
   "lineno": 46
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_rfe.MockClassifier.set_params": {
  "data": {
   "lineno": 56
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_rfe.RFE": {
  "data": {
   "shadows": "sklearn.feature_selection.rfe.RFE"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_rfe.RFECV": {
  "data": {
   "shadows": "sklearn.feature_selection.rfe.RFECV"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_rfe.RandomForestClassifier": {
  "data": {
   "shadows": "sklearn.ensemble.RandomForestClassifier"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_rfe.SVC": {
  "data": {
   "shadows": "sklearn.svm.SVC"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_rfe.SVR": {
  "data": {
   "shadows": "sklearn.svm.SVR"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_rfe.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_rfe.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_rfe.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_rfe.assert_greater": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_greater"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_rfe.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_rfe.assert_warns_message": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_warns_message"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_rfe.check_random_state": {
  "data": {
   "shadows": "sklearn.utils.check_random_state"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_rfe.cross_val_score": {
  "data": {
   "shadows": "sklearn.cross_validation.cross_val_score"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_rfe.get_scorer": {
  "data": {
   "shadows": "sklearn.metrics.get_scorer"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_rfe.ignore_warnings": {
  "data": {
   "shadows": "sklearn.utils.testing.ignore_warnings"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_rfe.load_iris": {
  "data": {
   "shadows": "sklearn.datasets.load_iris"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_rfe.make_friedman1": {
  "data": {
   "shadows": "sklearn.datasets.make_friedman1"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_rfe.make_scorer": {
  "data": {
   "shadows": "sklearn.metrics.make_scorer"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_rfe.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_rfe.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_rfe.test_number_of_subsets_of_features": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "formula1",
    "formula2",
    "nose.tools.assert_equal",
    "numpy.max",
    "sklearn.feature_selection.rfe.RFE",
    "sklearn.feature_selection.rfe.RFECV",
    "sklearn.svm.SVC",
    "sklearn.utils.check_random_state",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_rfe.test_number_of_subsets_of_features.formula1": {
  "data": {
   "lineno": 283
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_rfe.test_number_of_subsets_of_features.formula2": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "float",
    "numpy.ceil"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_rfe.test_rfe": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "len",
    "nose.tools.assert_equal",
    "numpy.c_",
    "numpy.testing.assert_array_almost_equal",
    "scipy.sparse.csr_matrix",
    "sklearn.datasets.load_iris",
    "sklearn.feature_selection.rfe.RFE",
    "sklearn.svm.SVC",
    "sklearn.utils.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_rfe.test_rfe_deprecation_estimator_params": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "DeprecationWarning",
    "len",
    "numpy.c_",
    "sklearn.datasets.load_iris",
    "sklearn.feature_selection.rfe.RFE",
    "sklearn.feature_selection.rfe.RFECV",
    "sklearn.svm.SVC",
    "sklearn.utils.check_random_state",
    "sklearn.utils.testing.assert_warns_message"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_rfe.test_rfe_estimator_tags": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "nose.tools.assert_equal",
    "sklearn.cross_validation.cross_val_score",
    "sklearn.datasets.load_iris",
    "sklearn.feature_selection.rfe.RFE",
    "sklearn.svm.SVC",
    "sklearn.utils.testing.assert_greater"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_rfe.test_rfe_features_importance": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "len",
    "nose.tools.assert_equal",
    "numpy.c_",
    "numpy.testing.assert_array_equal",
    "sklearn.datasets.load_iris",
    "sklearn.ensemble.RandomForestClassifier",
    "sklearn.feature_selection.rfe.RFE",
    "sklearn.svm.SVC",
    "sklearn.utils.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_rfe.test_rfe_min_step": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "nose.tools.assert_equal",
    "sklearn.datasets.make_friedman1",
    "sklearn.feature_selection.rfe.RFE",
    "sklearn.svm.SVR"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_rfe.test_rfe_mockclassifier": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "len",
    "nose.tools.assert_equal",
    "numpy.c_",
    "sklearn.datasets.load_iris",
    "sklearn.feature_selection.rfe.RFE",
    "sklearn.feature_selection.tests.test_rfe.MockClassifier",
    "sklearn.utils.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_rfe.test_rfe_set_params": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "len",
    "numpy.c_",
    "numpy.testing.assert_array_equal",
    "sklearn.datasets.load_iris",
    "sklearn.feature_selection.rfe.RFE",
    "sklearn.feature_selection.tests.test_rfe.warnings",
    "sklearn.svm.SVC",
    "sklearn.utils.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_rfe.test_rfecv": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "len",
    "list",
    "nose.tools.assert_equal",
    "numpy.c_",
    "numpy.ones",
    "numpy.testing.assert_array_equal",
    "scipy.sparse.csr_matrix",
    "sklearn.datasets.load_iris",
    "sklearn.feature_selection.rfe.RFECV",
    "sklearn.metrics.get_scorer",
    "sklearn.metrics.make_scorer",
    "sklearn.metrics.zero_one_loss",
    "sklearn.svm.SVC",
    "sklearn.utils.check_random_state",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_rfe.test_rfecv.test_scorer": {
  "data": {
   "lineno": 207
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_rfe.test_rfecv_mockclassifier": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "len",
    "list",
    "nose.tools.assert_equal",
    "numpy.c_",
    "sklearn.datasets.load_iris",
    "sklearn.feature_selection.rfe.RFECV",
    "sklearn.feature_selection.tests.test_rfe.MockClassifier",
    "sklearn.utils.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_rfe.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_rfe.zero_one_loss": {
  "data": {
   "shadows": "sklearn.metrics.zero_one_loss"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_variance_threshold": {
  "data": {},
  "type": "module"
 },
 "sklearn.feature_selection.tests.test_variance_threshold.VarianceThreshold": {
  "data": {
   "shadows": "sklearn.feature_selection.VarianceThreshold"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_variance_threshold.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_variance_threshold.assert_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_variance_threshold.assert_raises": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_variance_threshold.bsr_matrix": {
  "data": {
   "shadows": "scipy.sparse.bsr_matrix"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_variance_threshold.csc_matrix": {
  "data": {
   "shadows": "scipy.sparse.csc_matrix"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_variance_threshold.csr_matrix": {
  "data": {
   "shadows": "scipy.sparse.csr_matrix"
  },
  "type": "import"
 },
 "sklearn.feature_selection.tests.test_variance_threshold.data": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "sklearn.feature_selection.tests.test_variance_threshold.test_variance_threshold": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "len",
    "scipy.sparse.csr_matrix",
    "sklearn.feature_selection.VarianceThreshold",
    "sklearn.feature_selection.tests.test_variance_threshold.data",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_variance_threshold.test_zero_variance": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "ValueError",
    "scipy.sparse.bsr_matrix",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "sklearn.feature_selection.VarianceThreshold",
    "sklearn.feature_selection.tests.test_variance_threshold.data",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.univariate_selection": {
  "data": {},
  "type": "module"
 },
 "sklearn.feature_selection.univariate_selection.GenericUnivariateSelect": {
  "data": {
   "lineno": 634,
   "symbols_in_volume": [
    "sklearn.feature_selection.univariate_selection.SelectFdr",
    "sklearn.feature_selection.univariate_selection.SelectFpr",
    "sklearn.feature_selection.univariate_selection.SelectFwe",
    "sklearn.feature_selection.univariate_selection.SelectKBest",
    "sklearn.feature_selection.univariate_selection.SelectPercentile",
    "sklearn.feature_selection.univariate_selection._BaseFilter"
   ]
  },
  "type": "class"
 },
 "sklearn.feature_selection.univariate_selection.GenericUnivariateSelect.__init__": {
  "data": {
   "lineno": 677,
   "symbols_in_volume": [
    "sklearn.feature_selection.univariate_selection.GenericUnivariateSelect",
    "sklearn.feature_selection.univariate_selection.f_classif",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.univariate_selection.GenericUnivariateSelect._check_params": {
  "data": {
   "lineno": 693,
   "symbols_in_volume": [
    "ValueError",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.univariate_selection.GenericUnivariateSelect._get_support_mask": {
  "data": {
   "lineno": 702,
   "symbols_in_volume": [
    "check_is_fitted"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.univariate_selection.GenericUnivariateSelect._make_selector": {
  "data": {
   "lineno": 682
  },
  "type": "function"
 },
 "sklearn.feature_selection.univariate_selection.SelectFdr": {
  "data": {
   "lineno": 526,
   "symbols_in_volume": [
    "sklearn.feature_selection.univariate_selection._BaseFilter"
   ]
  },
  "type": "class"
 },
 "sklearn.feature_selection.univariate_selection.SelectFdr.__init__": {
  "data": {
   "lineno": 568,
   "symbols_in_volume": [
    "sklearn.feature_selection.univariate_selection.SelectFdr",
    "sklearn.feature_selection.univariate_selection.f_classif",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.univariate_selection.SelectFdr._get_support_mask": {
  "data": {
   "lineno": 572,
   "symbols_in_volume": [
    "bool",
    "check_is_fitted",
    "float",
    "len",
    "numpy.arange",
    "numpy.sort",
    "numpy.zeros_like"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.univariate_selection.SelectFpr": {
  "data": {
   "lineno": 479,
   "symbols_in_volume": [
    "sklearn.feature_selection.univariate_selection._BaseFilter"
   ]
  },
  "type": "class"
 },
 "sklearn.feature_selection.univariate_selection.SelectFpr.__init__": {
  "data": {
   "lineno": 516,
   "symbols_in_volume": [
    "sklearn.feature_selection.univariate_selection.SelectFpr",
    "sklearn.feature_selection.univariate_selection.f_classif",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.univariate_selection.SelectFpr._get_support_mask": {
  "data": {
   "lineno": 520,
   "symbols_in_volume": [
    "check_is_fitted"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.univariate_selection.SelectFwe": {
  "data": {
   "lineno": 584,
   "symbols_in_volume": [
    "sklearn.feature_selection.univariate_selection._BaseFilter"
   ]
  },
  "type": "class"
 },
 "sklearn.feature_selection.univariate_selection.SelectFwe.__init__": {
  "data": {
   "lineno": 618,
   "symbols_in_volume": [
    "sklearn.feature_selection.univariate_selection.SelectFwe",
    "sklearn.feature_selection.univariate_selection.f_classif",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.univariate_selection.SelectFwe._get_support_mask": {
  "data": {
   "lineno": 622,
   "symbols_in_volume": [
    "check_is_fitted",
    "len"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.univariate_selection.SelectKBest": {
  "data": {
   "lineno": 412,
   "symbols_in_volume": [
    "sklearn.feature_selection.univariate_selection._BaseFilter"
   ]
  },
  "type": "class"
 },
 "sklearn.feature_selection.univariate_selection.SelectKBest.__init__": {
  "data": {
   "lineno": 452,
   "symbols_in_volume": [
    "sklearn.feature_selection.univariate_selection.SelectKBest",
    "sklearn.feature_selection.univariate_selection.f_classif",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.univariate_selection.SelectKBest._check_params": {
  "data": {
   "lineno": 456,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.univariate_selection.SelectKBest._get_support_mask": {
  "data": {
   "lineno": 462,
   "symbols_in_volume": [
    "bool",
    "check_is_fitted",
    "numpy.argsort",
    "numpy.ones",
    "numpy.zeros",
    "sklearn.feature_selection.univariate_selection._clean_nans"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.univariate_selection.SelectPercentile": {
  "data": {
   "lineno": 343,
   "symbols_in_volume": [
    "sklearn.feature_selection.univariate_selection._BaseFilter"
   ]
  },
  "type": "class"
 },
 "sklearn.feature_selection.univariate_selection.SelectPercentile.__init__": {
  "data": {
   "lineno": 382,
   "symbols_in_volume": [
    "sklearn.feature_selection.univariate_selection.SelectPercentile",
    "sklearn.feature_selection.univariate_selection.f_classif",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.univariate_selection.SelectPercentile._check_params": {
  "data": {
   "lineno": 386,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.univariate_selection.SelectPercentile._get_support_mask": {
  "data": {
   "lineno": 391,
   "symbols_in_volume": [
    "check_is_fitted",
    "len",
    "numpy.bool",
    "numpy.ones",
    "numpy.where",
    "numpy.zeros",
    "scipy.stats.scoreatpercentile",
    "sklearn.feature_selection.univariate_selection._clean_nans"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.univariate_selection._BaseFilter": {
  "data": {
   "lineno": 292
  },
  "type": "class"
 },
 "sklearn.feature_selection.univariate_selection._BaseFilter.__init__": {
  "data": {
   "lineno": 302
  },
  "type": "function"
 },
 "sklearn.feature_selection.univariate_selection._BaseFilter._check_params": {
  "data": {
   "lineno": 336
  },
  "type": "function"
 },
 "sklearn.feature_selection.univariate_selection._BaseFilter.fit": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "TypeError",
    "callable",
    "check_X_y",
    "numpy.asarray",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.univariate_selection._chisquare": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "len",
    "numpy.asarray",
    "numpy.float64",
    "scipy.special.chdtrc"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.univariate_selection._clean_nans": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "as_float_array",
    "numpy.finfo",
    "numpy.isnan"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.univariate_selection.chi2": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "LabelBinarizer",
    "ValueError",
    "check_array",
    "numpy.any",
    "numpy.append",
    "numpy.dot",
    "safe_sparse_dot",
    "scipy.sparse.issparse",
    "sklearn.feature_selection.univariate_selection._chisquare"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.univariate_selection.f_classif": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "check_X_y",
    "numpy.unique",
    "safe_mask",
    "sklearn.feature_selection.univariate_selection.f_oneway"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.univariate_selection.f_oneway": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "UserWarning",
    "as_float_array",
    "enumerate",
    "float",
    "len",
    "numpy.array",
    "numpy.asarray",
    "numpy.nonzero",
    "numpy.sum",
    "numpy.where",
    "safe_sqr",
    "scipy.special.fdtrc",
    "sklearn.feature_selection.univariate_selection.warnings",
    "sum"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.univariate_selection.f_regression": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "ValueError",
    "check_X_y",
    "norm",
    "numpy.asarray",
    "numpy.float",
    "numpy.mean",
    "numpy.sqrt",
    "safe_sparse_dot",
    "safe_sqr",
    "scipy.sparse.issparse",
    "scipy.stats.f.sf"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.univariate_selection.issparse": {
  "data": {
   "shadows": "scipy.sparse.issparse"
  },
  "type": "import"
 },
 "sklearn.feature_selection.univariate_selection.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.feature_selection.univariate_selection.special": {
  "data": {
   "shadows": "scipy.special"
  },
  "type": "import"
 },
 "sklearn.feature_selection.univariate_selection.stats": {
  "data": {
   "shadows": "scipy.stats"
  },
  "type": "import"
 },
 "sklearn.feature_selection.univariate_selection.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.feature_selection.variance_threshold": {
  "data": {},
  "type": "module"
 },
 "sklearn.feature_selection.variance_threshold.VarianceThreshold": {
  "data": {
   "lineno": 12
  },
  "type": "class"
 },
 "sklearn.feature_selection.variance_threshold.VarianceThreshold.__init__": {
  "data": {
   "lineno": 45
  },
  "type": "function"
 },
 "sklearn.feature_selection.variance_threshold.VarianceThreshold._get_support_mask": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "check_is_fitted"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.variance_threshold.VarianceThreshold.fit": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "ValueError",
    "check_array",
    "hasattr",
    "mean_variance_axis",
    "numpy.all",
    "numpy.float64",
    "numpy.var"
   ]
  },
  "type": "function"
 },
 "sklearn.feature_selection.variance_threshold.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.gaussian_process": {
  "data": {},
  "type": "module"
 },
 "sklearn.gaussian_process.__all__": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "sklearn.gaussian_process.correlation_models": {
  "data": {},
  "type": "module"
 },
 "sklearn.gaussian_process.correlation_models.absolute_exponential": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "ValueError",
    "numpy.abs",
    "numpy.asarray",
    "numpy.exp",
    "numpy.float",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "sklearn.gaussian_process.correlation_models.cubic": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "Exception",
    "numpy.abs",
    "numpy.asarray",
    "numpy.float",
    "numpy.prod",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.gaussian_process.correlation_models.generalized_exponential": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "Exception",
    "numpy.abs",
    "numpy.asarray",
    "numpy.exp",
    "numpy.float",
    "numpy.hstack",
    "numpy.repeat",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "sklearn.gaussian_process.correlation_models.linear": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "Exception",
    "numpy.abs",
    "numpy.asarray",
    "numpy.float",
    "numpy.prod"
   ]
  },
  "type": "function"
 },
 "sklearn.gaussian_process.correlation_models.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.gaussian_process.correlation_models.pure_nugget": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.asarray",
    "numpy.float",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "sklearn.gaussian_process.correlation_models.squared_exponential": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "ValueError",
    "numpy.asarray",
    "numpy.exp",
    "numpy.float",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "sklearn.gaussian_process.gaussian_process": {
  "data": {
   "symbols_in_volume": [
    "numpy.double",
    "numpy.finfo"
   ]
  },
  "type": "module"
 },
 "sklearn.gaussian_process.gaussian_process.GaussianProcess": {
  "data": {
   "lineno": 59
  },
  "type": "class"
 },
 "sklearn.gaussian_process.gaussian_process.GaussianProcess.__init__": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "sklearn.gaussian_process.gaussian_process.MACHINE_EPSILON"
   ]
  },
  "type": "function"
 },
 "sklearn.gaussian_process.gaussian_process.GaussianProcess._arg_max_reduced_likelihood_function": {
  "data": {
   "lineno": 660,
   "symbols_in_volume": [
    "NotImplementedError",
    "ValueError",
    "check_array",
    "corr",
    "numpy.log10",
    "numpy.zeros",
    "print",
    "range",
    "scipy.optimize.fmin_cobyla",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.gaussian_process.gaussian_process.GaussianProcess._arg_max_reduced_likelihood_function.corr_cut": {
  "data": {
   "lineno": 790,
   "symbols_in_volume": [
    "check_array",
    "corr",
    "numpy.hstack"
   ]
  },
  "type": "function"
 },
 "sklearn.gaussian_process.gaussian_process.GaussianProcess._arg_max_reduced_likelihood_function.minus_reduced_likelihood_function": {
  "data": {
   "lineno": 702
  },
  "type": "function"
 },
 "sklearn.gaussian_process.gaussian_process.GaussianProcess._check_params": {
  "data": {
   "lineno": 815,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "callable",
    "int",
    "numpy.any",
    "numpy.asarray",
    "numpy.atleast_2d"
   ]
  },
  "type": "function"
 },
 "sklearn.gaussian_process.gaussian_process.GaussianProcess.fit": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "Exception",
    "check_X_y",
    "check_random_state",
    "numpy.isinf",
    "numpy.mean",
    "numpy.min",
    "numpy.newaxis",
    "numpy.ones",
    "numpy.std",
    "numpy.sum",
    "numpy.zeros",
    "print",
    "sklearn.gaussian_process.gaussian_process.l1_cross_distances"
   ]
  },
  "type": "function"
 },
 "sklearn.gaussian_process.gaussian_process.GaussianProcess.predict": {
  "data": {
   "lineno": 378,
   "symbols_in_volume": [
    "Exception",
    "ValueError",
    "check_array",
    "check_is_fitted",
    "int",
    "manhattan_distances",
    "max",
    "min",
    "numpy.dot",
    "numpy.newaxis",
    "numpy.sqrt",
    "numpy.zeros",
    "print",
    "range",
    "scipy.linalg.solve_triangular",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.gaussian_process.gaussian_process.GaussianProcess.reduced_likelihood_function": {
  "data": {
   "lineno": 531,
   "symbols_in_volume": [
    "Exception",
    "check_is_fitted",
    "numpy.array",
    "numpy.diag",
    "numpy.dot",
    "numpy.eye",
    "numpy.inf",
    "numpy.min",
    "numpy.sum",
    "scipy.linalg.LinAlgError",
    "scipy.linalg.cholesky",
    "scipy.linalg.qr",
    "scipy.linalg.solve_triangular",
    "scipy.linalg.svd",
    "sklearn.gaussian_process.gaussian_process.l1_cross_distances"
   ]
  },
  "type": "function"
 },
 "sklearn.gaussian_process.gaussian_process.MACHINE_EPSILON": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "sklearn.gaussian_process.gaussian_process.correlation": {
  "data": {
   "shadows": "correlation_models"
  },
  "type": "import"
 },
 "sklearn.gaussian_process.gaussian_process.l1_cross_distances": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "check_array",
    "numpy.abs",
    "numpy.arange",
    "numpy.int",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "sklearn.gaussian_process.gaussian_process.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "sklearn.gaussian_process.gaussian_process.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.gaussian_process.gaussian_process.optimize": {
  "data": {
   "shadows": "scipy.optimize"
  },
  "type": "import"
 },
 "sklearn.gaussian_process.gaussian_process.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "sklearn.gaussian_process.gaussian_process.regression": {
  "data": {
   "shadows": "regression_models"
  },
  "type": "import"
 },
 "sklearn.gaussian_process.regression_models": {
  "data": {},
  "type": "module"
 },
 "sklearn.gaussian_process.regression_models.constant": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.float",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "sklearn.gaussian_process.regression_models.linear": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.float",
    "numpy.hstack",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "sklearn.gaussian_process.regression_models.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.gaussian_process.regression_models.quadratic": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.float",
    "numpy.hstack",
    "numpy.newaxis",
    "numpy.ones",
    "range"
   ]
  },
  "type": "function"
 },
 "sklearn.gaussian_process.tests": {
  "data": {},
  "type": "module"
 },
 "sklearn.gaussian_process.tests.test_gaussian_process": {
  "data": {
   "symbols_in_volume": [
    "numpy.atleast_2d",
    "numpy.sin",
    "sklearn.gaussian_process.tests.test_gaussian_process.X",
    "sklearn.gaussian_process.tests.test_gaussian_process.f"
   ]
  },
  "type": "module"
 },
 "sklearn.gaussian_process.tests.test_gaussian_process.GaussianProcess": {
  "data": {
   "shadows": "sklearn.gaussian_process.GaussianProcess"
  },
  "type": "import"
 },
 "sklearn.gaussian_process.tests.test_gaussian_process.X": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "sklearn.gaussian_process.tests.test_gaussian_process.X2": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "sklearn.gaussian_process.tests.test_gaussian_process.assert_greater": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_greater"
  },
  "type": "import"
 },
 "sklearn.gaussian_process.tests.test_gaussian_process.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "sklearn.gaussian_process.tests.test_gaussian_process.correlation": {
  "data": {
   "shadows": "sklearn.gaussian_process.correlation_models"
  },
  "type": "import"
 },
 "sklearn.gaussian_process.tests.test_gaussian_process.f": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "sklearn.gaussian_process.tests.test_gaussian_process.make_regression": {
  "data": {
   "shadows": "sklearn.datasets.make_regression"
  },
  "type": "import"
 },
 "sklearn.gaussian_process.tests.test_gaussian_process.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.gaussian_process.tests.test_gaussian_process.raises": {
  "data": {
   "shadows": "nose.tools.raises"
  },
  "type": "import"
 },
 "sklearn.gaussian_process.tests.test_gaussian_process.regression": {
  "data": {
   "shadows": "sklearn.gaussian_process.regression_models"
  },
  "type": "import"
 },
 "sklearn.gaussian_process.tests.test_gaussian_process.test_1d": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "nose.tools.assert_true",
    "numpy.allclose",
    "sklearn.gaussian_process.GaussianProcess",
    "sklearn.gaussian_process.correlation_models.squared_exponential",
    "sklearn.gaussian_process.regression_models.constant",
    "sklearn.gaussian_process.tests.test_gaussian_process.X",
    "sklearn.gaussian_process.tests.test_gaussian_process.X2",
    "sklearn.gaussian_process.tests.test_gaussian_process.y"
   ]
  },
  "type": "function"
 },
 "sklearn.gaussian_process.tests.test_gaussian_process.test_2d": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "g",
    "nose.tools.assert_true",
    "numpy.all",
    "numpy.allclose",
    "numpy.array",
    "numpy.finfo",
    "sklearn.gaussian_process.GaussianProcess",
    "sklearn.gaussian_process.correlation_models.squared_exponential",
    "sklearn.gaussian_process.regression_models.constant",
    "sklearn.gaussian_process.tests.test_gaussian_process.X",
    "sklearn.gaussian_process.tests.test_gaussian_process.y"
   ]
  },
  "type": "function"
 },
 "sklearn.gaussian_process.tests.test_gaussian_process.test_2d_2d": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "g",
    "nose.tools.assert_true",
    "numpy.allclose",
    "numpy.array",
    "numpy.vstack",
    "sklearn.gaussian_process.GaussianProcess",
    "sklearn.gaussian_process.correlation_models.squared_exponential",
    "sklearn.gaussian_process.regression_models.constant",
    "sklearn.gaussian_process.tests.test_gaussian_process.X",
    "sklearn.gaussian_process.tests.test_gaussian_process.f",
    "sklearn.gaussian_process.tests.test_gaussian_process.y"
   ]
  },
  "type": "function"
 },
 "sklearn.gaussian_process.tests.test_gaussian_process.test_more_builtin_correlation_models": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "sklearn.gaussian_process.tests.test_gaussian_process.test_1d",
    "sklearn.gaussian_process.tests.test_gaussian_process.test_2d",
    "sklearn.gaussian_process.tests.test_gaussian_process.test_2d_2d"
   ]
  },
  "type": "function"
 },
 "sklearn.gaussian_process.tests.test_gaussian_process.test_mse_solving": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "sklearn.datasets.make_regression",
    "sklearn.gaussian_process.GaussianProcess",
    "sklearn.gaussian_process.tests.test_gaussian_process.X",
    "sklearn.gaussian_process.tests.test_gaussian_process.y",
    "sklearn.utils.testing.assert_greater"
   ]
  },
  "type": "function"
 },
 "sklearn.gaussian_process.tests.test_gaussian_process.test_no_normalize": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "nose.tools.assert_true",
    "numpy.allclose",
    "sklearn.gaussian_process.GaussianProcess",
    "sklearn.gaussian_process.tests.test_gaussian_process.X",
    "sklearn.gaussian_process.tests.test_gaussian_process.y"
   ]
  },
  "type": "function"
 },
 "sklearn.gaussian_process.tests.test_gaussian_process.test_ordinary_kriging": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "sklearn.gaussian_process.tests.test_gaussian_process.test_1d",
    "sklearn.gaussian_process.tests.test_gaussian_process.test_2d",
    "sklearn.gaussian_process.tests.test_gaussian_process.test_2d_2d"
   ]
  },
  "type": "function"
 },
 "sklearn.gaussian_process.tests.test_gaussian_process.test_random_starts": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "numpy.finfo",
    "numpy.float32",
    "numpy.inf",
    "numpy.random.RandomState",
    "numpy.random.seed",
    "numpy.sin",
    "range",
    "sklearn.gaussian_process.GaussianProcess",
    "sklearn.gaussian_process.tests.test_gaussian_process.X",
    "sklearn.gaussian_process.tests.test_gaussian_process.y",
    "sklearn.utils.testing.assert_greater"
   ]
  },
  "type": "function"
 },
 "sklearn.gaussian_process.tests.test_gaussian_process.test_wrong_number_of_outputs": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "ValueError",
    "nose.tools.raises",
    "sklearn.gaussian_process.GaussianProcess"
   ]
  },
  "type": "function"
 },
 "sklearn.gaussian_process.tests.test_gaussian_process.y": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "sklearn.grid_search": {
  "data": {},
  "type": "module"
 },
 "sklearn.grid_search.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "sklearn.grid_search.BaseSearchCV": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "abc.ABCMeta"
   ]
  },
  "type": "class"
 },
 "sklearn.grid_search.BaseSearchCV.__init__": {
  "data": {
   "lineno": 361,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "sklearn.grid_search.BaseSearchCV._estimator_type": {
  "data": {
   "lineno": 378,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.grid_search.BaseSearchCV._fit": {
  "data": {
   "lineno": 517,
   "symbols_in_volume": [
    "Parallel",
    "ValueError",
    "_fit_and_score",
    "_num_samples",
    "check_cv",
    "check_scoring",
    "clone",
    "collections.Sized",
    "delayed",
    "float",
    "indexable",
    "is_classifier",
    "isinstance",
    "len",
    "list",
    "numpy.array",
    "print",
    "range",
    "sklearn.grid_search._CVScoreTuple",
    "sorted"
   ]
  },
  "type": "function"
 },
 "sklearn.grid_search.BaseSearchCV.decision_function": {
  "data": {
   "lineno": 469,
   "symbols_in_volume": [
    "if_delegate_has_method"
   ]
  },
  "type": "function"
 },
 "sklearn.grid_search.BaseSearchCV.inverse_transform": {
  "data": {
   "lineno": 501,
   "symbols_in_volume": [
    "if_delegate_has_method"
   ]
  },
  "type": "function"
 },
 "sklearn.grid_search.BaseSearchCV.predict": {
  "data": {
   "lineno": 421,
   "symbols_in_volume": [
    "if_delegate_has_method"
   ]
  },
  "type": "function"
 },
 "sklearn.grid_search.BaseSearchCV.predict_log_proba": {
  "data": {
   "lineno": 453,
   "symbols_in_volume": [
    "if_delegate_has_method"
   ]
  },
  "type": "function"
 },
 "sklearn.grid_search.BaseSearchCV.predict_proba": {
  "data": {
   "lineno": 437,
   "symbols_in_volume": [
    "if_delegate_has_method"
   ]
  },
  "type": "function"
 },
 "sklearn.grid_search.BaseSearchCV.score": {
  "data": {
   "lineno": 382,
   "symbols_in_volume": [
    "ValueError",
    "hasattr",
    "sklearn.grid_search.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.grid_search.BaseSearchCV.transform": {
  "data": {
   "lineno": 485,
   "symbols_in_volume": [
    "if_delegate_has_method"
   ]
  },
  "type": "function"
 },
 "sklearn.grid_search.GridSearchCV": {
  "data": {
   "lineno": 606,
   "symbols_in_volume": [
    "sklearn.grid_search.BaseSearchCV"
   ]
  },
  "type": "class"
 },
 "sklearn.grid_search.GridSearchCV.__init__": {
  "data": {
   "lineno": 779,
   "symbols_in_volume": [
    "sklearn.grid_search.GridSearchCV",
    "sklearn.grid_search._check_param_grid",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.grid_search.GridSearchCV.fit": {
  "data": {
   "lineno": 789,
   "symbols_in_volume": [
    "sklearn.grid_search.ParameterGrid"
   ]
  },
  "type": "function"
 },
 "sklearn.grid_search.Mapping": {
  "data": {
   "shadows": "collections.Mapping"
  },
  "type": "import"
 },
 "sklearn.grid_search.ParameterGrid": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "sklearn.grid_search.ParameterGrid.__getitem__": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "IndexError",
    "divmod",
    "len",
    "numpy.product",
    "sorted",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.grid_search.ParameterGrid.__init__": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "collections.Mapping",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "sklearn.grid_search.ParameterGrid.__iter__": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "dict",
    "itertools.product",
    "sorted",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.grid_search.ParameterGrid.__len__": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "functools.partial",
    "functools.reduce",
    "itertools.product",
    "len",
    "sklearn.grid_search.operator",
    "sum"
   ]
  },
  "type": "function"
 },
 "sklearn.grid_search.ParameterSampler": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "sklearn.grid_search.ParameterSampler.__init__": {
  "data": {
   "lineno": 214
  },
  "type": "function"
 },
 "sklearn.grid_search.ParameterSampler.__iter__": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "ValueError",
    "check_random_state",
    "dict",
    "hasattr",
    "len",
    "numpy.all",
    "sample_without_replacement",
    "sklearn.grid_search.ParameterGrid",
    "sorted"
   ]
  },
  "type": "function"
 },
 "sklearn.grid_search.ParameterSampler.__len__": {
  "data": {
   "lineno": 252
  },
  "type": "function"
 },
 "sklearn.grid_search.RandomizedSearchCV": {
  "data": {
   "lineno": 807,
   "symbols_in_volume": [
    "sklearn.grid_search.BaseSearchCV"
   ]
  },
  "type": "class"
 },
 "sklearn.grid_search.RandomizedSearchCV.__init__": {
  "data": {
   "lineno": 966,
   "symbols_in_volume": [
    "sklearn.grid_search.RandomizedSearchCV",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.grid_search.RandomizedSearchCV.fit": {
  "data": {
   "lineno": 979,
   "symbols_in_volume": [
    "sklearn.grid_search.ParameterSampler"
   ]
  },
  "type": "function"
 },
 "sklearn.grid_search.Sized": {
  "data": {
   "shadows": "collections.Sized"
  },
  "type": "import"
 },
 "sklearn.grid_search._CVScoreTuple": {
  "data": {
   "lineno": 335,
   "symbols_in_volume": [
    "collections.namedtuple"
   ]
  },
  "type": "class"
 },
 "sklearn.grid_search._CVScoreTuple.__repr__": {
  "data": {
   "lineno": 349,
   "symbols_in_volume": [
    "numpy.std"
   ]
  },
  "type": "function"
 },
 "sklearn.grid_search.__all__": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "sklearn.grid_search._check_param_grid": {
  "data": {
   "lineno": 317,
   "symbols_in_volume": [
    "ValueError",
    "hasattr",
    "isinstance",
    "len",
    "list",
    "numpy.ndarray",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sklearn.grid_search.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "sklearn.grid_search.fit_grid_point": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "_fit_and_score"
   ]
  },
  "type": "function"
 },
 "sklearn.grid_search.namedtuple": {
  "data": {
   "shadows": "collections.namedtuple"
  },
  "type": "import"
 },
 "sklearn.grid_search.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.grid_search.operator": {
  "data": {
   "shadows": "operator"
  },
  "type": "import"
 },
 "sklearn.grid_search.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "sklearn.grid_search.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "sklearn.grid_search.product": {
  "data": {
   "shadows": "itertools.product"
  },
  "type": "import"
 },
 "sklearn.grid_search.reduce": {
  "data": {
   "shadows": "functools.reduce"
  },
  "type": "import"
 },
 "sklearn.grid_search.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.isotonic": {
  "data": {},
  "type": "module"
 },
 "sklearn.isotonic.IsotonicRegression": {
  "data": {
   "lineno": 151
  },
  "type": "class"
 },
 "sklearn.isotonic.IsotonicRegression.__getstate__": {
  "data": {
   "lineno": 370,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "function"
 },
 "sklearn.isotonic.IsotonicRegression.__init__": {
  "data": {
   "lineno": 230
  },
  "type": "function"
 },
 "sklearn.isotonic.IsotonicRegression.__setstate__": {
  "data": {
   "lineno": 378
  },
  "type": "function"
 },
 "sklearn.isotonic.IsotonicRegression._build_f": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "scipy.interpolate.interp1d"
   ]
  },
  "type": "function"
 },
 "sklearn.isotonic.IsotonicRegression._build_y": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "_make_unique",
    "as_float_array",
    "astype",
    "check_array",
    "check_consistent_length",
    "len",
    "numpy.argsort",
    "numpy.float64",
    "numpy.lexsort",
    "numpy.ones",
    "sklearn.isotonic.check_increasing",
    "sklearn.isotonic.isotonic_regression"
   ]
  },
  "type": "function"
 },
 "sklearn.isotonic.IsotonicRegression._check_fit_data": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "ValueError",
    "len"
   ]
  },
  "type": "function"
 },
 "sklearn.isotonic.IsotonicRegression.fit": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "numpy.max",
    "numpy.min"
   ]
  },
  "type": "function"
 },
 "sklearn.isotonic.IsotonicRegression.predict": {
  "data": {
   "lineno": 355
  },
  "type": "function"
 },
 "sklearn.isotonic.IsotonicRegression.transform": {
  "data": {
   "lineno": 328,
   "symbols_in_volume": [
    "ValueError",
    "as_float_array",
    "len",
    "numpy.clip"
   ]
  },
  "type": "function"
 },
 "sklearn.isotonic.__all__": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "sklearn.isotonic.check_increasing": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "len",
    "numpy.sign",
    "scipy.stats.spearmanr",
    "sklearn.isotonic.math",
    "sklearn.isotonic.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.isotonic.interpolate": {
  "data": {
   "shadows": "scipy.interpolate"
  },
  "type": "import"
 },
 "sklearn.isotonic.isotonic_regression": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "_isotonic_regression",
    "len",
    "numpy.asarray",
    "numpy.copy",
    "numpy.dot",
    "numpy.empty",
    "numpy.float",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "sklearn.isotonic.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "sklearn.isotonic.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.isotonic.spearmanr": {
  "data": {
   "shadows": "scipy.stats.spearmanr"
  },
  "type": "import"
 },
 "sklearn.isotonic.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.kernel_approximation": {
  "data": {},
  "type": "module"
 },
 "sklearn.kernel_approximation.AdditiveChi2Sampler": {
  "data": {
   "lineno": 206
  },
  "type": "class"
 },
 "sklearn.kernel_approximation.AdditiveChi2Sampler.__init__": {
  "data": {
   "lineno": 253
  },
  "type": "function"
 },
 "sklearn.kernel_approximation.AdditiveChi2Sampler._transform_dense": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": [
    "numpy.cos",
    "numpy.cosh",
    "numpy.hstack",
    "numpy.log",
    "numpy.pi",
    "numpy.sin",
    "numpy.sqrt",
    "numpy.zeros_like",
    "range"
   ]
  },
  "type": "function"
 },
 "sklearn.kernel_approximation.AdditiveChi2Sampler._transform_sparse": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": [
    "numpy.cos",
    "numpy.cosh",
    "numpy.log",
    "numpy.pi",
    "numpy.sin",
    "numpy.sqrt",
    "range",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.hstack"
   ]
  },
  "type": "function"
 },
 "sklearn.kernel_approximation.AdditiveChi2Sampler.fit": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "ValueError",
    "check_array"
   ]
  },
  "type": "function"
 },
 "sklearn.kernel_approximation.AdditiveChi2Sampler.transform": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "ValueError",
    "check_array",
    "check_is_fitted",
    "scipy.sparse.issparse",
    "transf"
   ]
  },
  "type": "function"
 },
 "sklearn.kernel_approximation.Nystroem": {
  "data": {
   "lineno": 361
  },
  "type": "class"
 },
 "sklearn.kernel_approximation.Nystroem.__init__": {
  "data": {
   "lineno": 434
  },
  "type": "function"
 },
 "sklearn.kernel_approximation.Nystroem._get_kernel_params": {
  "data": {
   "lineno": 512,
   "symbols_in_volume": [
    "callable"
   ]
  },
  "type": "function"
 },
 "sklearn.kernel_approximation.Nystroem.fit": {
  "data": {
   "lineno": 444,
   "symbols_in_volume": [
    "check_array",
    "check_random_state",
    "min",
    "numpy.dot",
    "numpy.maximum",
    "numpy.sqrt",
    "pairwise_kernels",
    "scipy.linalg.svd",
    "sklearn.kernel_approximation.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.kernel_approximation.Nystroem.transform": {
  "data": {
   "lineno": 486,
   "symbols_in_volume": [
    "check_array",
    "check_is_fitted",
    "numpy.dot",
    "pairwise_kernels"
   ]
  },
  "type": "function"
 },
 "sklearn.kernel_approximation.RBFSampler": {
  "data": {
   "lineno": 24
  },
  "type": "class"
 },
 "sklearn.kernel_approximation.RBFSampler.__init__": {
  "data": {
   "lineno": 56
  },
  "type": "function"
 },
 "sklearn.kernel_approximation.RBFSampler.fit": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "check_array",
    "check_random_state",
    "numpy.pi",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "sklearn.kernel_approximation.RBFSampler.transform": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "check_array",
    "check_is_fitted",
    "numpy.cos",
    "numpy.sqrt",
    "safe_sparse_dot"
   ]
  },
  "type": "function"
 },
 "sklearn.kernel_approximation.SkewedChi2Sampler": {
  "data": {
   "lineno": 112
  },
  "type": "class"
 },
 "sklearn.kernel_approximation.SkewedChi2Sampler.__init__": {
  "data": {
   "lineno": 144
  },
  "type": "function"
 },
 "sklearn.kernel_approximation.SkewedChi2Sampler.fit": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "check_array",
    "check_random_state",
    "numpy.log",
    "numpy.pi",
    "numpy.tan"
   ]
  },
  "type": "function"
 },
 "sklearn.kernel_approximation.SkewedChi2Sampler.transform": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "ValueError",
    "as_float_array",
    "check_array",
    "check_is_fitted",
    "numpy.cos",
    "numpy.log",
    "numpy.sqrt",
    "safe_sparse_dot"
   ]
  },
  "type": "function"
 },
 "sklearn.kernel_approximation.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.kernel_approximation.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.kernel_approximation.svd": {
  "data": {
   "shadows": "scipy.linalg.svd"
  },
  "type": "import"
 },
 "sklearn.kernel_approximation.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.kernel_ridge": {
  "data": {},
  "type": "module"
 },
 "sklearn.kernel_ridge.KernelRidge": {
  "data": {
   "lineno": 16
  },
  "type": "class"
 },
 "sklearn.kernel_ridge.KernelRidge.__init__": {
  "data": {
   "lineno": 104
  },
  "type": "function"
 },
 "sklearn.kernel_ridge.KernelRidge._get_kernel": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "callable",
    "pairwise_kernels"
   ]
  },
  "type": "function"
 },
 "sklearn.kernel_ridge.KernelRidge._pairwise": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.kernel_ridge.KernelRidge.fit": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "_solve_cholesky_kernel",
    "check_X_y",
    "len",
    "numpy.atleast_1d"
   ]
  },
  "type": "function"
 },
 "sklearn.kernel_ridge.KernelRidge.predict": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "check_is_fitted",
    "numpy.dot"
   ]
  },
  "type": "function"
 },
 "sklearn.kernel_ridge.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.lda": {
  "data": {
   "symbols_in_volume": [
    "DeprecationWarning",
    "sklearn.lda.warnings"
   ]
  },
  "type": "module"
 },
 "sklearn.lda.LDA": {
  "data": {
   "shadows": "LinearDiscriminantAnalysis"
  },
  "type": "import"
 },
 "sklearn.lda.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.learning_curve": {
  "data": {},
  "type": "module"
 },
 "sklearn.learning_curve.__all__": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "sklearn.learning_curve._incremental_fit_estimator": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "_safe_split",
    "_score",
    "numpy.array",
    "numpy.split",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.learning_curve._translate_train_sizes": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "RuntimeWarning",
    "ValueError",
    "astype",
    "numpy.asarray",
    "numpy.clip",
    "numpy.float",
    "numpy.int",
    "numpy.issubdtype",
    "numpy.max",
    "numpy.min",
    "numpy.unique",
    "sklearn.learning_curve.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.learning_curve.learning_curve": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "Parallel",
    "ValueError",
    "bool",
    "check_cv",
    "check_scoring",
    "clone",
    "delayed",
    "hasattr",
    "indexable",
    "is_classifier",
    "len",
    "list",
    "numpy.array",
    "numpy.asarray",
    "numpy.linspace",
    "numpy.nonzero",
    "numpy.unique",
    "parallel",
    "print",
    "range",
    "sklearn.learning_curve._translate_train_sizes",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.learning_curve.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.learning_curve.validation_curve": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "Parallel",
    "check_cv",
    "check_scoring",
    "delayed",
    "indexable",
    "is_classifier",
    "len",
    "numpy.asarray",
    "parallel"
   ]
  },
  "type": "function"
 },
 "sklearn.learning_curve.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.linear_model": {
  "data": {},
  "type": "module"
 },
 "sklearn.linear_model.__all__": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "sklearn.linear_model.base": {
  "data": {},
  "type": "module"
 },
 "sklearn.linear_model.base.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "sklearn.linear_model.base.LinearClassifierMixin": {
  "data": {
   "lineno": 216
  },
  "type": "class"
 },
 "sklearn.linear_model.base.LinearClassifierMixin._predict_proba_lr": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "numpy.exp",
    "numpy.reciprocal",
    "numpy.vstack"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.base.LinearClassifierMixin.decision_function": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "NotFittedError",
    "ValueError",
    "check_array",
    "hasattr",
    "safe_sparse_dot",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.base.LinearClassifierMixin.predict": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "len",
    "numpy.int"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.base.LinearModel": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "abc.ABCMeta",
    "sklearn.linear_model.base.center_data",
    "staticmethod"
   ]
  },
  "type": "class"
 },
 "sklearn.linear_model.base.LinearModel._decision_function": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "check_array",
    "check_is_fitted",
    "safe_sparse_dot"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.base.LinearModel._set_intercept": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "numpy.dot"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.base.LinearModel.decision_function": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "deprecated"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.base.LinearModel.fit": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.base.LinearModel.predict": {
  "data": {
   "lineno": 187
  },
  "type": "function"
 },
 "sklearn.linear_model.base.LinearRegression": {
  "data": {
   "lineno": 349,
   "symbols_in_volume": [
    "sklearn.linear_model.base.LinearModel"
   ]
  },
  "type": "class"
 },
 "sklearn.linear_model.base.LinearRegression.__init__": {
  "data": {
   "lineno": 389
  },
  "type": "function"
 },
 "sklearn.linear_model.base.LinearRegression.fit": {
  "data": {
   "lineno": 402,
   "symbols_in_volume": [
    "Parallel",
    "check_X_y",
    "column_or_1d",
    "delayed",
    "numpy.atleast_1d",
    "numpy.ravel",
    "numpy.vstack",
    "range",
    "scipy.linalg.lstsq",
    "scipy.sparse.issparse",
    "sklearn.linear_model.base._rescale_data",
    "sparse_lsqr"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.base.LinearRegression.residues_": {
  "data": {
   "lineno": 396,
   "symbols_in_volume": [
    "deprecated",
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.base.SPARSE_INTERCEPT_DECAY": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "sklearn.linear_model.base.SparseCoefMixin": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "sklearn.linear_model.base.SparseCoefMixin.densify": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "check_is_fitted",
    "scipy.sparse.issparse"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.base.SparseCoefMixin.sparsify": {
  "data": {
   "lineno": 319,
   "symbols_in_volume": [
    "check_is_fitted",
    "scipy.sparse.csr_matrix"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.base._pre_fit": {
  "data": {
   "lineno": 463,
   "symbols_in_volume": [
    "UserWarning",
    "hasattr",
    "isinstance",
    "numpy.allclose",
    "numpy.dot",
    "numpy.empty",
    "numpy.find_common_type",
    "numpy.ones",
    "numpy.zeros",
    "scipy.sparse.isspmatrix",
    "sklearn.linear_model.base.center_data",
    "sklearn.linear_model.base.sparse_center_data",
    "sklearn.linear_model.base.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.base._rescale_data": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "numpy.ones",
    "numpy.sqrt",
    "safe_sparse_dot",
    "scipy.sparse.dia_matrix"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.base.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "sklearn.linear_model.base.center_data": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "as_float_array",
    "isinstance",
    "numpy.average",
    "numpy.ones",
    "numpy.sqrt",
    "numpy.sum",
    "numpy.zeros",
    "scipy.sparse.issparse",
    "sklearn.linear_model.base.numbers"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.base.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sklearn.linear_model.base.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "sklearn.linear_model.base.make_dataset": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "ArrayDataset",
    "CSRDataset",
    "check_random_state",
    "numpy.iinfo",
    "numpy.int32",
    "scipy.sparse.issparse",
    "sklearn.linear_model.base.SPARSE_INTERCEPT_DECAY"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.base.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.linear_model.base.numbers": {
  "data": {
   "shadows": "numbers"
  },
  "type": "import"
 },
 "sklearn.linear_model.base.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.linear_model.base.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.linear_model.base.sparse_center_data": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "inplace_column_scale",
    "mean_variance_axis",
    "numpy.float64",
    "numpy.ones",
    "numpy.sqrt",
    "numpy.zeros",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.isspmatrix"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.base.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.linear_model.bayes": {
  "data": {},
  "type": "module"
 },
 "sklearn.linear_model.bayes.ARDRegression": {
  "data": {
   "lineno": 221
  },
  "type": "class"
 },
 "sklearn.linear_model.bayes.ARDRegression.__init__": {
  "data": {
   "lineno": 314
  },
  "type": "function"
 },
 "sklearn.linear_model.bayes.ARDRegression.fit": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": [
    "bool",
    "check_X_y",
    "fast_logdet",
    "list",
    "math.log",
    "numpy.abs",
    "numpy.copy",
    "numpy.diag",
    "numpy.dot",
    "numpy.eye",
    "numpy.float64",
    "numpy.log",
    "numpy.ones",
    "numpy.reshape",
    "numpy.sum",
    "numpy.var",
    "numpy.zeros",
    "pinvh",
    "print",
    "range"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.bayes.BayesianRidge": {
  "data": {
   "lineno": 22
  },
  "type": "class"
 },
 "sklearn.linear_model.bayes.BayesianRidge.__init__": {
  "data": {
   "lineno": 107
  },
  "type": "function"
 },
 "sklearn.linear_model.bayes.BayesianRidge.fit": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "check_X_y",
    "list",
    "math.log",
    "numpy.abs",
    "numpy.copy",
    "numpy.dot",
    "numpy.float64",
    "numpy.log",
    "numpy.ones",
    "numpy.pi",
    "numpy.sum",
    "numpy.var",
    "print",
    "range",
    "scipy.linalg.svd",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.bayes.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "sklearn.linear_model.bayes.log": {
  "data": {
   "shadows": "math.log"
  },
  "type": "import"
 },
 "sklearn.linear_model.bayes.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.linear_model.bayes.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "sklearn.linear_model.coordinate_descent": {
  "data": {},
  "type": "module"
 },
 "sklearn.linear_model.coordinate_descent.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "sklearn.linear_model.coordinate_descent.ElasticNet": {
  "data": {
   "lineno": 485,
   "symbols_in_volume": [
    "sklearn.linear_model.coordinate_descent.enet_path",
    "staticmethod"
   ]
  },
  "type": "class"
 },
 "sklearn.linear_model.coordinate_descent.ElasticNet.__init__": {
  "data": {
   "lineno": 601
  },
  "type": "function"
 },
 "sklearn.linear_model.coordinate_descent.ElasticNet._decision_function": {
  "data": {
   "lineno": 738,
   "symbols_in_volume": [
    "check_is_fitted",
    "numpy.ravel",
    "safe_sparse_dot",
    "scipy.sparse.isspmatrix",
    "sklearn.linear_model.coordinate_descent.ElasticNet",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.coordinate_descent.ElasticNet.decision_function": {
  "data": {
   "lineno": 723,
   "symbols_in_volume": [
    "deprecated"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.coordinate_descent.ElasticNet.fit": {
  "data": {
   "lineno": 620,
   "symbols_in_volume": [
    "DeprecationWarning",
    "ValueError",
    "_pre_fit",
    "check_X_y",
    "check_array",
    "isinstance",
    "map",
    "numpy.asarray",
    "numpy.float64",
    "numpy.newaxis",
    "numpy.squeeze",
    "numpy.zeros",
    "sklearn.linear_model.coordinate_descent.warnings",
    "xrange"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.coordinate_descent.ElasticNet.sparse_coef_": {
  "data": {
   "lineno": 718,
   "symbols_in_volume": [
    "property",
    "scipy.sparse.csr_matrix"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.coordinate_descent.ElasticNetCV": {
  "data": {
   "lineno": 1329,
   "symbols_in_volume": [
    "path",
    "sklearn.linear_model.coordinate_descent.LinearModelCV",
    "sklearn.linear_model.coordinate_descent.enet_path",
    "staticmethod"
   ]
  },
  "type": "class"
 },
 "sklearn.linear_model.coordinate_descent.ElasticNetCV.__init__": {
  "data": {
   "lineno": 1480
  },
  "type": "function"
 },
 "sklearn.linear_model.coordinate_descent.Lasso": {
  "data": {
   "lineno": 761,
   "symbols_in_volume": [
    "sklearn.linear_model.coordinate_descent.ElasticNet",
    "sklearn.linear_model.coordinate_descent.enet_path",
    "staticmethod"
   ]
  },
  "type": "class"
 },
 "sklearn.linear_model.coordinate_descent.Lasso.__init__": {
  "data": {
   "lineno": 875,
   "symbols_in_volume": [
    "sklearn.linear_model.coordinate_descent.Lasso",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.coordinate_descent.LassoCV": {
  "data": {
   "lineno": 1190,
   "symbols_in_volume": [
    "path",
    "sklearn.linear_model.coordinate_descent.LinearModelCV",
    "sklearn.linear_model.coordinate_descent.lasso_path",
    "staticmethod"
   ]
  },
  "type": "class"
 },
 "sklearn.linear_model.coordinate_descent.LassoCV.__init__": {
  "data": {
   "lineno": 1317,
   "symbols_in_volume": [
    "sklearn.linear_model.coordinate_descent.LassoCV",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.coordinate_descent.LinearModelCV": {
  "data": {
   "lineno": 995,
   "symbols_in_volume": [
    "abc.ABCMeta"
   ]
  },
  "type": "class"
 },
 "sklearn.linear_model.coordinate_descent.LinearModelCV.__init__": {
  "data": {
   "lineno": 998,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.coordinate_descent.LinearModelCV.fit": {
  "data": {
   "lineno": 1019,
   "symbols_in_volume": [
    "Parallel",
    "TypeError",
    "ValueError",
    "check_array",
    "check_cv",
    "column_or_1d",
    "delayed",
    "dict",
    "hasattr",
    "isinstance",
    "len",
    "list",
    "numpy.argmin",
    "numpy.asarray",
    "numpy.atleast_1d",
    "numpy.float64",
    "numpy.inf",
    "numpy.may_share_memory",
    "numpy.mean",
    "numpy.ndarray",
    "numpy.reshape",
    "numpy.rollaxis",
    "numpy.sort",
    "numpy.squeeze",
    "numpy.tile",
    "scipy.sparse.isspmatrix",
    "sklearn.linear_model.coordinate_descent.ElasticNet",
    "sklearn.linear_model.coordinate_descent.Lasso",
    "sklearn.linear_model.coordinate_descent.MultiTaskElasticNet",
    "sklearn.linear_model.coordinate_descent.MultiTaskLasso",
    "sklearn.linear_model.coordinate_descent._alpha_grid",
    "sklearn.linear_model.coordinate_descent._path_residuals",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.coordinate_descent.MultiTaskElasticNet": {
  "data": {
   "lineno": 1507,
   "symbols_in_volume": [
    "sklearn.linear_model.coordinate_descent.Lasso"
   ]
  },
  "type": "class"
 },
 "sklearn.linear_model.coordinate_descent.MultiTaskElasticNet.__init__": {
  "data": {
   "lineno": 1609
  },
  "type": "function"
 },
 "sklearn.linear_model.coordinate_descent.MultiTaskElasticNet.fit": {
  "data": {
   "lineno": 1624,
   "symbols_in_volume": [
    "ValueError",
    "center_data",
    "check_array",
    "check_random_state",
    "hasattr",
    "numpy.asarray",
    "numpy.asfortranarray",
    "numpy.float64",
    "numpy.zeros",
    "sklearn.linear_model.coordinate_descent.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.coordinate_descent.MultiTaskElasticNetCV": {
  "data": {
   "lineno": 1802,
   "symbols_in_volume": [
    "path",
    "sklearn.linear_model.coordinate_descent.LinearModelCV",
    "sklearn.linear_model.coordinate_descent.enet_path",
    "staticmethod"
   ]
  },
  "type": "class"
 },
 "sklearn.linear_model.coordinate_descent.MultiTaskElasticNetCV.__init__": {
  "data": {
   "lineno": 1954
  },
  "type": "function"
 },
 "sklearn.linear_model.coordinate_descent.MultiTaskLasso": {
  "data": {
   "lineno": 1694,
   "symbols_in_volume": [
    "sklearn.linear_model.coordinate_descent.MultiTaskElasticNet"
   ]
  },
  "type": "class"
 },
 "sklearn.linear_model.coordinate_descent.MultiTaskLasso.__init__": {
  "data": {
   "lineno": 1786
  },
  "type": "function"
 },
 "sklearn.linear_model.coordinate_descent.MultiTaskLassoCV": {
  "data": {
   "lineno": 1974,
   "symbols_in_volume": [
    "path",
    "sklearn.linear_model.coordinate_descent.LinearModelCV",
    "sklearn.linear_model.coordinate_descent.lasso_path",
    "staticmethod"
   ]
  },
  "type": "class"
 },
 "sklearn.linear_model.coordinate_descent.MultiTaskLassoCV.__init__": {
  "data": {
   "lineno": 2091,
   "symbols_in_volume": [
    "sklearn.linear_model.coordinate_descent.MultiTaskLassoCV",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.coordinate_descent._alpha_grid": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "center_data",
    "check_array",
    "float",
    "len",
    "numpy.empty",
    "numpy.finfo",
    "numpy.log10",
    "numpy.logspace",
    "numpy.newaxis",
    "numpy.sqrt",
    "numpy.sum",
    "safe_sparse_dot",
    "scipy.sparse.isspmatrix",
    "sparse_center_data"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.coordinate_descent._path_residuals": {
  "data": {
   "lineno": 890,
   "symbols_in_volume": [
    "_pre_fit",
    "check_array",
    "numpy.atleast_1d",
    "numpy.dot",
    "numpy.flatnonzero",
    "numpy.newaxis",
    "numpy.reshape",
    "numpy.rollaxis",
    "path",
    "safe_sparse_dot",
    "scipy.sparse.issparse"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.coordinate_descent.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "sklearn.linear_model.coordinate_descent.enet_path": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "ValueError",
    "_pre_fit",
    "check_array",
    "check_random_state",
    "enumerate",
    "isinstance",
    "len",
    "numpy.asfortranarray",
    "numpy.empty",
    "numpy.float64",
    "numpy.ndarray",
    "numpy.sort",
    "numpy.zeros",
    "print",
    "scipy.sparse.isspmatrix",
    "sklearn.linear_model.coordinate_descent._alpha_grid",
    "sklearn.linear_model.coordinate_descent.sys",
    "sklearn.linear_model.coordinate_descent.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.coordinate_descent.lasso_path": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "sklearn.linear_model.coordinate_descent.enet_path"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.coordinate_descent.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.linear_model.coordinate_descent.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.linear_model.coordinate_descent.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "sklearn.linear_model.coordinate_descent.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.linear_model.least_angle": {
  "data": {
   "symbols_in_volume": [
    "distutils.version.LooseVersion",
    "sklearn.linear_model.least_angle.scipy"
   ]
  },
  "type": "module"
 },
 "sklearn.linear_model.least_angle.Lars": {
  "data": {
   "lineno": 492
  },
  "type": "class"
 },
 "sklearn.linear_model.least_angle.Lars.__init__": {
  "data": {
   "lineno": 581,
   "symbols_in_volume": [
    "numpy.finfo",
    "numpy.float"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.least_angle.Lars._get_gram": {
  "data": {
   "lineno": 596,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.least_angle.Lars.fit": {
  "data": {
   "lineno": 607,
   "symbols_in_volume": [
    "check_X_y",
    "getattr",
    "hasattr",
    "max",
    "numpy.dot",
    "numpy.empty",
    "numpy.newaxis",
    "sklearn.linear_model.least_angle.lars_path",
    "xrange"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.least_angle.LarsCV": {
  "data": {
   "lineno": 950,
   "symbols_in_volume": [
    "sklearn.linear_model.least_angle.Lars"
   ]
  },
  "type": "class"
 },
 "sklearn.linear_model.least_angle.LarsCV.__init__": {
  "data": {
   "lineno": 1045,
   "symbols_in_volume": [
    "numpy.finfo",
    "numpy.float"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.least_angle.LarsCV.alpha": {
  "data": {
   "lineno": 1135,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.least_angle.LarsCV.fit": {
  "data": {
   "lineno": 1061,
   "symbols_in_volume": [
    "Parallel",
    "as_float_array",
    "check_X_y",
    "check_cv",
    "delayed",
    "enumerate",
    "float",
    "int",
    "len",
    "list",
    "max",
    "numpy.all",
    "numpy.argmin",
    "numpy.concatenate",
    "numpy.empty",
    "numpy.isfinite",
    "numpy.mean",
    "numpy.newaxis",
    "numpy.r_",
    "numpy.unique",
    "scipy.interpolate.interp1d",
    "sklearn.linear_model.least_angle.Lars",
    "sklearn.linear_model.least_angle._lars_path_residues",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.least_angle.LassoLars": {
  "data": {
   "lineno": 702,
   "symbols_in_volume": [
    "sklearn.linear_model.least_angle.Lars"
   ]
  },
  "type": "class"
 },
 "sklearn.linear_model.least_angle.LassoLars.__init__": {
  "data": {
   "lineno": 816,
   "symbols_in_volume": [
    "numpy.finfo",
    "numpy.float"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.least_angle.LassoLarsCV": {
  "data": {
   "lineno": 1141,
   "symbols_in_volume": [
    "sklearn.linear_model.least_angle.LarsCV"
   ]
  },
  "type": "class"
 },
 "sklearn.linear_model.least_angle.LassoLarsIC": {
  "data": {
   "lineno": 1260,
   "symbols_in_volume": [
    "sklearn.linear_model.least_angle.LassoLars"
   ]
  },
  "type": "class"
 },
 "sklearn.linear_model.least_angle.LassoLarsIC.__init__": {
  "data": {
   "lineno": 1370,
   "symbols_in_volume": [
    "numpy.finfo",
    "numpy.float"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.least_angle.LassoLarsIC.fit": {
  "data": {
   "lineno": 1383,
   "symbols_in_volume": [
    "ValueError",
    "check_X_y",
    "enumerate",
    "math.log",
    "numpy.abs",
    "numpy.any",
    "numpy.argmin",
    "numpy.dot",
    "numpy.errstate",
    "numpy.finfo",
    "numpy.int",
    "numpy.log",
    "numpy.mean",
    "numpy.newaxis",
    "numpy.sum",
    "numpy.zeros",
    "sklearn.linear_model.least_angle.lars_path"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.least_angle.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "sklearn.linear_model.least_angle._check_copy_and_writeable": {
  "data": {
   "lineno": 836
  },
  "type": "function"
 },
 "sklearn.linear_model.least_angle._lars_path_residues": {
  "data": {
   "lineno": 842,
   "symbols_in_volume": [
    "as_float_array",
    "max",
    "numpy.dot",
    "numpy.finfo",
    "numpy.flatnonzero",
    "numpy.float",
    "numpy.newaxis",
    "numpy.sqrt",
    "numpy.sum",
    "sklearn.linear_model.least_angle._check_copy_and_writeable",
    "sklearn.linear_model.least_angle.lars_path"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.least_angle.get_lapack_funcs": {
  "data": {
   "shadows": "scipy.linalg.lapack.get_lapack_funcs"
  },
  "type": "import"
 },
 "sklearn.linear_model.least_angle.interpolate": {
  "data": {
   "shadows": "scipy.interpolate"
  },
  "type": "import"
 },
 "sklearn.linear_model.least_angle.lars_path": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "abs",
    "isinstance",
    "list",
    "max",
    "min",
    "nrm2",
    "numpy.abs",
    "numpy.append",
    "numpy.arange",
    "numpy.argmax",
    "numpy.array",
    "numpy.delete",
    "numpy.dot",
    "numpy.empty",
    "numpy.fabs",
    "numpy.finfo",
    "numpy.float",
    "numpy.float32",
    "numpy.int8",
    "numpy.isfinite",
    "numpy.newaxis",
    "numpy.ones_like",
    "numpy.r_",
    "numpy.resize",
    "numpy.sign",
    "numpy.sqrt",
    "numpy.sum",
    "numpy.where",
    "numpy.zeros",
    "numpy.zeros_like",
    "print",
    "range",
    "scipy.linalg.get_blas_funcs",
    "scipy.linalg.lapack.get_lapack_funcs",
    "scipy.linalg.solve_triangular",
    "sklearn.linear_model.least_angle.solve_triangular_args",
    "sklearn.linear_model.least_angle.sys",
    "sklearn.linear_model.least_angle.warnings",
    "solve_cholesky",
    "swap"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.least_angle.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "sklearn.linear_model.least_angle.log": {
  "data": {
   "shadows": "math.log"
  },
  "type": "import"
 },
 "sklearn.linear_model.least_angle.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.linear_model.least_angle.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "sklearn.linear_model.least_angle.scipy": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "sklearn.linear_model.least_angle.solve_triangular_args": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "sklearn.linear_model.least_angle.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "sklearn.linear_model.least_angle.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.linear_model.logistic": {
  "data": {},
  "type": "module"
 },
 "sklearn.linear_model.logistic.LogisticRegression": {
  "data": {
   "lineno": 925
  },
  "type": "class"
 },
 "sklearn.linear_model.logistic.LogisticRegression.__init__": {
  "data": {
   "lineno": 1087
  },
  "type": "function"
 },
 "sklearn.linear_model.logistic.LogisticRegression.fit": {
  "data": {
   "lineno": 1107,
   "symbols_in_volume": [
    "Parallel",
    "ValueError",
    "_fit_liblinear",
    "check_X_y",
    "check_classification_targets",
    "delayed",
    "get_max_squared_sum",
    "getattr",
    "int",
    "isinstance",
    "len",
    "list",
    "numpy.append",
    "numpy.array",
    "numpy.asarray",
    "numpy.float64",
    "numpy.int32",
    "numpy.newaxis",
    "numpy.unique",
    "numpy.zeros",
    "path_func",
    "sklearn.linear_model.logistic._check_solver_option",
    "sklearn.linear_model.logistic.logistic_regression_path",
    "sklearn.linear_model.logistic.numbers",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.logistic.LogisticRegression.predict_log_proba": {
  "data": {
   "lineno": 1256,
   "symbols_in_volume": [
    "numpy.log"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.logistic.LogisticRegression.predict_proba": {
  "data": {
   "lineno": 1225,
   "symbols_in_volume": [
    "NotFittedError",
    "hasattr",
    "sklearn.linear_model.logistic.LogisticRegression",
    "softmax",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.logistic.LogisticRegressionCV": {
  "data": {
   "lineno": 1275,
   "symbols_in_volume": [
    "sklearn.linear_model.logistic.LogisticRegression"
   ]
  },
  "type": "class"
 },
 "sklearn.linear_model.logistic.LogisticRegressionCV.__init__": {
  "data": {
   "lineno": 1455,
   "symbols_in_volume": [
    "scoring"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.logistic.LogisticRegressionCV.fit": {
  "data": {
   "lineno": 1477,
   "symbols_in_volume": [
    "LabelEncoder",
    "Parallel",
    "ValueError",
    "check_X_y",
    "check_classification_targets",
    "check_consistent_length",
    "check_cv",
    "compute_class_weight",
    "delayed",
    "dict",
    "enumerate",
    "get_max_squared_sum",
    "isinstance",
    "len",
    "list",
    "max",
    "numpy.argmax",
    "numpy.asarray",
    "numpy.empty",
    "numpy.float64",
    "numpy.mean",
    "numpy.ravel",
    "numpy.reshape",
    "numpy.rollaxis",
    "numpy.tile",
    "numpy.unique",
    "numpy.zeros",
    "path_func",
    "range",
    "sklearn.linear_model.logistic._check_solver_option",
    "sklearn.linear_model.logistic._log_reg_scoring_path",
    "sklearn.linear_model.logistic.logistic_regression_path",
    "sklearn.linear_model.logistic.numbers",
    "sklearn.linear_model.logistic.warnings",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.logistic._check_solver_option": {
  "data": {
   "lineno": 401,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.logistic._intercept_dot": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "safe_sparse_dot"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.logistic._log_reg_scoring_path": {
  "data": {
   "lineno": 743,
   "symbols_in_volume": [
    "ValueError",
    "check_array",
    "isinstance",
    "list",
    "numpy.array",
    "numpy.float64",
    "numpy.newaxis",
    "numpy.ones",
    "numpy.unique",
    "scoring",
    "sklearn.linear_model.logistic.LogisticRegression",
    "sklearn.linear_model.logistic._check_solver_option",
    "sklearn.linear_model.logistic.logistic_regression_path"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.logistic._logistic_grad_hess": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "expit",
    "numpy.array",
    "numpy.empty_like",
    "numpy.newaxis",
    "numpy.ones",
    "numpy.squeeze",
    "safe_sparse_dot",
    "scipy.sparse.dia_matrix",
    "scipy.sparse.issparse",
    "sklearn.linear_model.logistic._intercept_dot"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.logistic._logistic_grad_hess.Hs": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "numpy.empty_like"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.logistic._logistic_loss": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "log_logistic",
    "numpy.dot",
    "numpy.ones",
    "numpy.sum",
    "sklearn.linear_model.logistic._intercept_dot"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.logistic._logistic_loss_and_grad": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "expit",
    "log_logistic",
    "numpy.dot",
    "numpy.empty_like",
    "numpy.ones",
    "numpy.sum",
    "safe_sparse_dot",
    "sklearn.linear_model.logistic._intercept_dot"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.logistic._multinomial_grad_hess": {
  "data": {
   "lineno": 328,
   "symbols_in_volume": [
    "numpy.newaxis",
    "sklearn.linear_model.logistic._multinomial_loss_grad"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.logistic._multinomial_grad_hess.hessp": {
  "data": {
   "lineno": 377,
   "symbols_in_volume": [
    "bool",
    "numpy.newaxis",
    "numpy.zeros",
    "safe_sparse_dot"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.logistic._multinomial_loss": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "logsumexp",
    "numpy.exp",
    "numpy.newaxis",
    "safe_sparse_dot",
    "squared_norm"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.logistic._multinomial_loss_grad": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "bool",
    "numpy.newaxis",
    "numpy.zeros",
    "safe_sparse_dot",
    "sklearn.linear_model.logistic._multinomial_loss"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.logistic.logistic_regression_path": {
  "data": {
   "lineno": 427,
   "symbols_in_volume": [
    "DeprecationWarning",
    "LabelBinarizer",
    "LabelEncoder",
    "TypeError",
    "ValueError",
    "_fit_liblinear",
    "check_array",
    "check_consistent_length",
    "check_random_state",
    "compute_class_weight",
    "dict",
    "enumerate",
    "int",
    "isinstance",
    "len",
    "list",
    "newton_cg",
    "numpy.array",
    "numpy.concatenate",
    "numpy.float64",
    "numpy.hstack",
    "numpy.int32",
    "numpy.logspace",
    "numpy.newaxis",
    "numpy.ones",
    "numpy.reshape",
    "numpy.unique",
    "numpy.zeros",
    "sag_solver",
    "scipy.optimize.fmin_l_bfgs_b",
    "sklearn.linear_model.logistic._check_solver_option",
    "sklearn.linear_model.logistic._logistic_grad_hess",
    "sklearn.linear_model.logistic._logistic_loss",
    "sklearn.linear_model.logistic._logistic_loss_and_grad",
    "sklearn.linear_model.logistic._multinomial_grad_hess",
    "sklearn.linear_model.logistic._multinomial_loss",
    "sklearn.linear_model.logistic._multinomial_loss_grad",
    "sklearn.linear_model.logistic.numbers",
    "sklearn.linear_model.logistic.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.logistic.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.linear_model.logistic.numbers": {
  "data": {
   "shadows": "numbers"
  },
  "type": "import"
 },
 "sklearn.linear_model.logistic.optimize": {
  "data": {
   "shadows": "scipy.optimize"
  },
  "type": "import"
 },
 "sklearn.linear_model.logistic.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.linear_model.logistic.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.linear_model.omp": {
  "data": {
   "symbols_in_volume": [
    "distutils.version.LooseVersion",
    "sklearn.linear_model.omp.scipy"
   ]
  },
  "type": "module"
 },
 "sklearn.linear_model.omp.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "sklearn.linear_model.omp.OrthogonalMatchingPursuit": {
  "data": {
   "lineno": 543
  },
  "type": "class"
 },
 "sklearn.linear_model.omp.OrthogonalMatchingPursuit.__init__": {
  "data": {
   "lineno": 604
  },
  "type": "function"
 },
 "sklearn.linear_model.omp.OrthogonalMatchingPursuit.fit": {
  "data": {
   "lineno": 612,
   "symbols_in_volume": [
    "_pre_fit",
    "check_X_y",
    "int",
    "max",
    "numpy.newaxis",
    "numpy.sum",
    "sklearn.linear_model.omp.orthogonal_mp",
    "sklearn.linear_model.omp.orthogonal_mp_gram"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.omp.OrthogonalMatchingPursuitCV": {
  "data": {
   "lineno": 736
  },
  "type": "class"
 },
 "sklearn.linear_model.omp.OrthogonalMatchingPursuitCV.__init__": {
  "data": {
   "lineno": 810
  },
  "type": "function"
 },
 "sklearn.linear_model.omp.OrthogonalMatchingPursuitCV.fit": {
  "data": {
   "lineno": 820,
   "symbols_in_volume": [
    "Parallel",
    "as_float_array",
    "check_X_y",
    "check_cv",
    "delayed",
    "int",
    "max",
    "min",
    "numpy.argmin",
    "numpy.array",
    "sklearn.linear_model.omp.OrthogonalMatchingPursuit",
    "sklearn.linear_model.omp._omp_path_residues"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.omp._cholesky_omp": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "RuntimeWarning",
    "nrm2",
    "numpy.abs",
    "numpy.arange",
    "numpy.argmax",
    "numpy.asfortranarray",
    "numpy.dot",
    "numpy.empty",
    "numpy.empty_like",
    "numpy.finfo",
    "numpy.sqrt",
    "numpy.zeros",
    "potrs",
    "scipy.linalg.get_blas_funcs",
    "scipy.linalg.lapack.get_lapack_funcs",
    "scipy.linalg.solve_triangular",
    "sklearn.linear_model.omp.premature",
    "sklearn.linear_model.omp.solve_triangular_args",
    "sklearn.linear_model.omp.warnings",
    "swap"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.omp._gram_omp": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "RuntimeWarning",
    "abs",
    "len",
    "nrm2",
    "numpy.abs",
    "numpy.arange",
    "numpy.argmax",
    "numpy.asfortranarray",
    "numpy.dot",
    "numpy.empty",
    "numpy.empty_like",
    "numpy.finfo",
    "numpy.inner",
    "numpy.sqrt",
    "numpy.zeros",
    "potrs",
    "scipy.linalg.get_blas_funcs",
    "scipy.linalg.lapack.get_lapack_funcs",
    "scipy.linalg.solve_triangular",
    "sklearn.linear_model.omp.premature",
    "sklearn.linear_model.omp.solve_triangular_args",
    "sklearn.linear_model.omp.warnings",
    "swap"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.omp._omp_path_residues": {
  "data": {
   "lineno": 664,
   "symbols_in_volume": [
    "as_float_array",
    "numpy.dot",
    "numpy.flatnonzero",
    "numpy.newaxis",
    "numpy.sqrt",
    "numpy.sum",
    "sklearn.linear_model.omp.orthogonal_mp"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.omp.get_lapack_funcs": {
  "data": {
   "shadows": "scipy.linalg.lapack.get_lapack_funcs"
  },
  "type": "import"
 },
 "sklearn.linear_model.omp.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "sklearn.linear_model.omp.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.linear_model.omp.orthogonal_mp": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "ValueError",
    "check_array",
    "enumerate",
    "int",
    "len",
    "max",
    "numpy.asfortranarray",
    "numpy.dot",
    "numpy.squeeze",
    "numpy.sum",
    "numpy.zeros",
    "range",
    "sklearn.linear_model.omp._cholesky_omp",
    "sklearn.linear_model.omp.orthogonal_mp_gram"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.omp.orthogonal_mp_gram": {
  "data": {
   "lineno": 411,
   "symbols_in_volume": [
    "ValueError",
    "check_array",
    "enumerate",
    "int",
    "len",
    "numpy.asarray",
    "numpy.newaxis",
    "numpy.squeeze",
    "numpy.zeros",
    "range",
    "sklearn.linear_model.omp._gram_omp"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.omp.premature": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "sklearn.linear_model.omp.scipy": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "sklearn.linear_model.omp.solve_triangular_args": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "sklearn.linear_model.omp.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.linear_model.passive_aggressive": {
  "data": {},
  "type": "module"
 },
 "sklearn.linear_model.passive_aggressive.PassiveAggressiveClassifier": {
  "data": {
   "lineno": 9
  },
  "type": "class"
 },
 "sklearn.linear_model.passive_aggressive.PassiveAggressiveClassifier.__init__": {
  "data": {
   "lineno": 87
  },
  "type": "function"
 },
 "sklearn.linear_model.passive_aggressive.PassiveAggressiveClassifier.fit": {
  "data": {
   "lineno": 143
  },
  "type": "function"
 },
 "sklearn.linear_model.passive_aggressive.PassiveAggressiveClassifier.partial_fit": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.passive_aggressive.PassiveAggressiveRegressor": {
  "data": {
   "lineno": 170
  },
  "type": "class"
 },
 "sklearn.linear_model.passive_aggressive.PassiveAggressiveRegressor.__init__": {
  "data": {
   "lineno": 234
  },
  "type": "function"
 },
 "sklearn.linear_model.passive_aggressive.PassiveAggressiveRegressor.fit": {
  "data": {
   "lineno": 273
  },
  "type": "function"
 },
 "sklearn.linear_model.passive_aggressive.PassiveAggressiveRegressor.partial_fit": {
  "data": {
   "lineno": 251
  },
  "type": "function"
 },
 "sklearn.linear_model.perceptron": {
  "data": {},
  "type": "module"
 },
 "sklearn.linear_model.perceptron.Perceptron": {
  "data": {
   "lineno": 8
  },
  "type": "class"
 },
 "sklearn.linear_model.perceptron.Perceptron.__init__": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "sklearn.linear_model.perceptron.Perceptron",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.randomized_l1": {
  "data": {},
  "type": "module"
 },
 "sklearn.linear_model.randomized_l1.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "sklearn.linear_model.randomized_l1.BaseRandomizedLinearModel": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "abc.ABCMeta",
    "staticmethod"
   ]
  },
  "type": "class"
 },
 "sklearn.linear_model.randomized_l1.BaseRandomizedLinearModel.__init__": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.randomized_l1.BaseRandomizedLinearModel._make_estimator_and_params": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.randomized_l1.BaseRandomizedLinearModel.fit": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "Memory",
    "as_float_array",
    "check_X_y",
    "isinstance",
    "numpy.max",
    "numpy.newaxis",
    "sklearn.linear_model.randomized_l1._resample_model"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.randomized_l1.BaseRandomizedLinearModel.get_support": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "check_is_fitted",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.randomized_l1.BaseRandomizedLinearModel.inverse_transform": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.randomized_l1.BaseRandomizedLinearModel.transform": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "ValueError",
    "check_array",
    "len",
    "safe_mask"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.randomized_l1.RandomizedLasso": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "sklearn.linear_model.randomized_l1.BaseRandomizedLinearModel"
   ]
  },
  "type": "class"
 },
 "sklearn.linear_model.randomized_l1.RandomizedLasso.__init__": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "Memory",
    "numpy.finfo",
    "numpy.float"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.randomized_l1.RandomizedLasso._make_estimator_and_params": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": [
    "LassoLarsIC",
    "dict",
    "isinstance",
    "sklearn.linear_model.randomized_l1._randomized_lasso"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.randomized_l1.RandomizedLogisticRegression": {
  "data": {
   "lineno": 371,
   "symbols_in_volume": [
    "sklearn.linear_model.randomized_l1.BaseRandomizedLinearModel"
   ]
  },
  "type": "class"
 },
 "sklearn.linear_model.randomized_l1.RandomizedLogisticRegression.__init__": {
  "data": {
   "lineno": 475,
   "symbols_in_volume": [
    "Memory"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.randomized_l1.RandomizedLogisticRegression._center_data": {
  "data": {
   "lineno": 502,
   "symbols_in_volume": [
    "center_data"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.randomized_l1.RandomizedLogisticRegression._make_estimator_and_params": {
  "data": {
   "lineno": 497,
   "symbols_in_volume": [
    "dict",
    "sklearn.linear_model.randomized_l1._randomized_logistic"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.randomized_l1._lasso_stability_path": {
  "data": {
   "lineno": 511,
   "symbols_in_volume": [
    "lars_path",
    "numpy.abs",
    "numpy.dot",
    "numpy.max",
    "numpy.newaxis",
    "safe_mask",
    "sklearn.linear_model.randomized_l1.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.randomized_l1._randomized_lasso": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "interpolator",
    "lars_path",
    "len",
    "numpy.asarray",
    "numpy.atleast_1d",
    "numpy.bool",
    "numpy.finfo",
    "numpy.float",
    "numpy.min",
    "numpy.zeros",
    "safe_mask",
    "scipy.interpolate.interp1d",
    "sklearn.linear_model.randomized_l1.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.randomized_l1._randomized_logistic": {
  "data": {
   "lineno": 347,
   "symbols_in_volume": [
    "LogisticRegression",
    "len",
    "numpy.abs",
    "numpy.any",
    "numpy.asarray",
    "numpy.atleast_1d",
    "numpy.bool",
    "numpy.finfo",
    "numpy.float",
    "numpy.zeros",
    "safe_mask",
    "scipy.sparse.dia_matrix",
    "scipy.sparse.issparse",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.randomized_l1._resample_model": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "Parallel",
    "ValueError",
    "check_random_state",
    "delayed",
    "max",
    "range"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.randomized_l1.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "sklearn.linear_model.randomized_l1.interp1d": {
  "data": {
   "shadows": "scipy.interpolate.interp1d"
  },
  "type": "import"
 },
 "sklearn.linear_model.randomized_l1.issparse": {
  "data": {
   "shadows": "scipy.sparse.issparse"
  },
  "type": "import"
 },
 "sklearn.linear_model.randomized_l1.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "sklearn.linear_model.randomized_l1.lasso_stability_path": {
  "data": {
   "lineno": 538,
   "symbols_in_volume": [
    "Parallel",
    "ValueError",
    "check_random_state",
    "delayed",
    "float",
    "int",
    "len",
    "list",
    "max",
    "numpy.array",
    "numpy.c_",
    "numpy.finfo",
    "numpy.float",
    "numpy.ones",
    "numpy.r_",
    "numpy.zeros",
    "range",
    "scipy.interpolate.interp1d",
    "set",
    "sklearn.linear_model.randomized_l1._lasso_stability_path",
    "sklearn.linear_model.randomized_l1.itertools",
    "sorted"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.randomized_l1.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.linear_model.randomized_l1.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.linear_model.randomized_l1.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.linear_model.ransac": {
  "data": {
   "symbols_in_volume": [
    "numpy.spacing"
   ]
  },
  "type": "module"
 },
 "sklearn.linear_model.ransac.RANSACRegressor": {
  "data": {
   "lineno": 53
  },
  "type": "class"
 },
 "sklearn.linear_model.ransac.RANSACRegressor.__init__": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "numpy.inf"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.ransac.RANSACRegressor.fit": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "LinearRegression",
    "ValueError",
    "check_array",
    "check_consistent_length",
    "check_random_state",
    "clone",
    "numpy.abs",
    "numpy.arange",
    "numpy.ceil",
    "numpy.inf",
    "numpy.median",
    "numpy.sum",
    "range",
    "residual_metric",
    "sample_without_replacement",
    "sklearn.linear_model.ransac._dynamic_max_trials"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.ransac.RANSACRegressor.predict": {
  "data": {
   "lineno": 345,
   "symbols_in_volume": [
    "check_is_fitted"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.ransac.RANSACRegressor.score": {
  "data": {
   "lineno": 363,
   "symbols_in_volume": [
    "check_is_fitted"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.ransac._EPSILON": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "sklearn.linear_model.ransac._dynamic_max_trials": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "abs",
    "float",
    "max",
    "numpy.ceil",
    "numpy.log",
    "sklearn.linear_model.ransac._EPSILON"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.ransac.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.linear_model.ridge": {
  "data": {},
  "type": "module"
 },
 "sklearn.linear_model.ridge.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "sklearn.linear_model.ridge.Ridge": {
  "data": {
   "lineno": 482,
   "symbols_in_volume": [
    "sklearn.linear_model.ridge._BaseRidge"
   ]
  },
  "type": "class"
 },
 "sklearn.linear_model.ridge.Ridge.__init__": {
  "data": {
   "lineno": 593,
   "symbols_in_volume": [
    "sklearn.linear_model.ridge.Ridge",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.ridge.Ridge.fit": {
  "data": {
   "lineno": 601,
   "symbols_in_volume": [
    "sklearn.linear_model.ridge.Ridge",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.ridge.RidgeCV": {
  "data": {
   "lineno": 1044,
   "symbols_in_volume": [
    "sklearn.linear_model.ridge._BaseRidgeCV"
   ]
  },
  "type": "class"
 },
 "sklearn.linear_model.ridge.RidgeClassifier": {
  "data": {
   "lineno": 622,
   "symbols_in_volume": [
    "sklearn.linear_model.ridge._BaseRidge"
   ]
  },
  "type": "class"
 },
 "sklearn.linear_model.ridge.RidgeClassifier.__init__": {
  "data": {
   "lineno": 716,
   "symbols_in_volume": [
    "sklearn.linear_model.ridge.RidgeClassifier",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.ridge.RidgeClassifier.classes_": {
  "data": {
   "lineno": 761,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.ridge.RidgeClassifier.fit": {
  "data": {
   "lineno": 725,
   "symbols_in_volume": [
    "LabelBinarizer",
    "column_or_1d",
    "compute_sample_weight",
    "sklearn.linear_model.ridge.RidgeClassifier",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.ridge.RidgeClassifierCV": {
  "data": {
   "lineno": 1137,
   "symbols_in_volume": [
    "sklearn.linear_model.ridge._BaseRidgeCV"
   ]
  },
  "type": "class"
 },
 "sklearn.linear_model.ridge.RidgeClassifierCV.__init__": {
  "data": {
   "lineno": 1219,
   "symbols_in_volume": [
    "sklearn.linear_model.ridge.RidgeClassifierCV",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.ridge.RidgeClassifierCV.classes_": {
  "data": {
   "lineno": 1261,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.ridge.RidgeClassifierCV.fit": {
  "data": {
   "lineno": 1226,
   "symbols_in_volume": [
    "LabelBinarizer",
    "column_or_1d",
    "compute_sample_weight",
    "sklearn.linear_model.ridge._BaseRidgeCV"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.ridge._BaseRidge": {
  "data": {
   "lineno": 436,
   "symbols_in_volume": [
    "abc.ABCMeta"
   ]
  },
  "type": "class"
 },
 "sklearn.linear_model.ridge._BaseRidge.__init__": {
  "data": {
   "lineno": 438,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.ridge._BaseRidge.fit": {
  "data": {
   "lineno": 451,
   "symbols_in_volume": [
    "ValueError",
    "check_X_y",
    "numpy.atleast_1d",
    "numpy.float64",
    "scipy.sparse.issparse",
    "sklearn.linear_model.ridge.ridge_regression"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.ridge._BaseRidgeCV": {
  "data": {
   "lineno": 984
  },
  "type": "class"
 },
 "sklearn.linear_model.ridge._BaseRidgeCV.__init__": {
  "data": {
   "lineno": 985
  },
  "type": "function"
 },
 "sklearn.linear_model.ridge._BaseRidgeCV.fit": {
  "data": {
   "lineno": 997,
   "symbols_in_volume": [
    "GridSearchCV",
    "ValueError",
    "sklearn.linear_model.ridge.Ridge",
    "sklearn.linear_model.ridge._RidgeGCV"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.ridge._RidgeGCV": {
  "data": {
   "lineno": 766
  },
  "type": "class"
 },
 "sklearn.linear_model.ridge._RidgeGCV.__init__": {
  "data": {
   "lineno": 805,
   "symbols_in_volume": [
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.ridge._RidgeGCV._decomp_diag": {
  "data": {
   "lineno": 824
  },
  "type": "function"
 },
 "sklearn.linear_model.ridge._RidgeGCV._diag_dot": {
  "data": {
   "lineno": 828,
   "symbols_in_volume": [
    "len",
    "numpy.newaxis",
    "slice"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.ridge._RidgeGCV._errors": {
  "data": {
   "lineno": 835,
   "symbols_in_volume": [
    "len",
    "numpy.dot",
    "numpy.newaxis"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.ridge._RidgeGCV._errors_svd": {
  "data": {
   "lineno": 863,
   "symbols_in_volume": [
    "len",
    "numpy.dot",
    "numpy.newaxis"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.ridge._RidgeGCV._pre_compute": {
  "data": {
   "lineno": 817,
   "symbols_in_volume": [
    "numpy.dot",
    "safe_sparse_dot",
    "scipy.sparse.linalg.eigh"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.ridge._RidgeGCV._pre_compute_svd": {
  "data": {
   "lineno": 855,
   "symbols_in_volume": [
    "TypeError",
    "numpy.dot",
    "scipy.sparse.issparse",
    "scipy.sparse.linalg.svd"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.ridge._RidgeGCV._values": {
  "data": {
   "lineno": 845,
   "symbols_in_volume": [
    "len",
    "numpy.dot",
    "numpy.newaxis"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.ridge._RidgeGCV._values_svd": {
  "data": {
   "lineno": 872,
   "symbols_in_volume": [
    "len",
    "numpy.dot",
    "numpy.newaxis"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.ridge._RidgeGCV.fit": {
  "data": {
   "lineno": 881,
   "symbols_in_volume": [
    "ValueError",
    "_errors",
    "_pre_compute",
    "_values",
    "check_X_y",
    "check_scoring",
    "enumerate",
    "len",
    "numpy.argmax",
    "numpy.float64",
    "numpy.shape",
    "numpy.zeros",
    "range",
    "safe_sparse_dot",
    "scipy.sparse.issparse",
    "scorer",
    "sklearn.linear_model.ridge.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.ridge._RidgeGCV.fit.identity_estimator": {
  "data": {
   "lineno": 959
  },
  "type": "function"
 },
 "sklearn.linear_model.ridge._solve_cholesky": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "len",
    "numpy.array_equal",
    "numpy.empty",
    "safe_sparse_dot",
    "scipy.sparse.linalg.solve",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.ridge._solve_cholesky_kernel": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "isinstance",
    "numpy.atleast_1d",
    "numpy.empty",
    "numpy.linalg.LinAlgError",
    "numpy.ndarray",
    "numpy.newaxis",
    "numpy.outer",
    "numpy.sqrt",
    "scipy.sparse.linalg.lstsq",
    "scipy.sparse.linalg.solve",
    "sklearn.linear_model.ridge.warnings",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.ridge._solve_lsqr": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "numpy.empty",
    "numpy.int32",
    "numpy.sqrt",
    "range",
    "scipy.sparse.linalg.lsqr"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.ridge._solve_sparse_cg": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "ValueError",
    "create_mv",
    "numpy.empty",
    "range",
    "scipy.sparse.linalg.LinearOperator",
    "scipy.sparse.linalg.aslinearoperator",
    "scipy.sparse.linalg.cg",
    "sklearn.linear_model.ridge.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.ridge._solve_sparse_cg.create_mv": {
  "data": {
   "lineno": 47
  },
  "type": "function"
 },
 "sklearn.linear_model.ridge._solve_sparse_cg.create_mv._mv": {
  "data": {
   "lineno": 48
  },
  "type": "function"
 },
 "sklearn.linear_model.ridge._solve_svd": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.newaxis",
    "numpy.zeros",
    "scipy.sparse.linalg.svd"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.ridge.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "sklearn.linear_model.ridge.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "sklearn.linear_model.ridge.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.linear_model.ridge.ridge_regression": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "_rescale_data",
    "check_array",
    "check_consistent_length",
    "enumerate",
    "get_max_squared_sum",
    "hasattr",
    "int",
    "numpy.asarray",
    "numpy.atleast_1d",
    "numpy.empty",
    "numpy.float64",
    "numpy.int32",
    "numpy.repeat",
    "numpy.zeros",
    "safe_sparse_dot",
    "sag_solver",
    "scipy.sparse.issparse",
    "scipy.sparse.linalg",
    "scipy.sparse.linalg.LinAlgError",
    "sklearn.linear_model.ridge._solve_cholesky",
    "sklearn.linear_model.ridge._solve_cholesky_kernel",
    "sklearn.linear_model.ridge._solve_lsqr",
    "sklearn.linear_model.ridge._solve_sparse_cg",
    "sklearn.linear_model.ridge._solve_svd",
    "sklearn.linear_model.ridge.warnings",
    "str",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.ridge.sp_linalg": {
  "data": {
   "shadows": "scipy.sparse.linalg"
  },
  "type": "import"
 },
 "sklearn.linear_model.ridge.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.linear_model.ridge.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.linear_model.sag": {
  "data": {},
  "type": "module"
 },
 "sklearn.linear_model.sag.get_auto_step_size": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "ValueError",
    "int"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.sag.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.linear_model.sag.sag_solver": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "Log",
    "SquaredLoss",
    "ValueError",
    "ZeroDivisionError",
    "check_array",
    "dict",
    "float",
    "get_max_squared_sum",
    "make_dataset",
    "numpy.append",
    "numpy.float64",
    "numpy.int32",
    "numpy.ones",
    "numpy.zeros",
    "sag",
    "sklearn.linear_model.sag.get_auto_step_size",
    "sklearn.linear_model.sag.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.sag.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.linear_model.setup": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.distutils.core.setup",
    "sklearn.linear_model.setup.configuration"
   ]
  },
  "type": "module"
 },
 "sklearn.linear_model.setup.Configuration": {
  "data": {
   "shadows": "numpy.distutils.misc_util.Configuration"
  },
  "type": "import"
 },
 "sklearn.linear_model.setup.configuration": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "numpy.distutils.misc_util.Configuration",
    "os.path.join",
    "sklearn._build_utils.get_blas_info",
    "sklearn.linear_model.setup.numpy",
    "sklearn.linear_model.setup.os"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.setup.get_blas_info": {
  "data": {
   "shadows": "sklearn._build_utils.get_blas_info"
  },
  "type": "import"
 },
 "sklearn.linear_model.setup.join": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "sklearn.linear_model.setup.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.linear_model.setup.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "sklearn.linear_model.setup.setup": {
  "data": {
   "shadows": "numpy.distutils.core.setup"
  },
  "type": "import"
 },
 "sklearn.linear_model.stochastic_gradient": {
  "data": {},
  "type": "module"
 },
 "sklearn.linear_model.stochastic_gradient.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "sklearn.linear_model.stochastic_gradient.BaseSGD": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "abc.ABCMeta"
   ]
  },
  "type": "class"
 },
 "sklearn.linear_model.stochastic_gradient.BaseSGD.__init__": {
  "data": {
   "lineno": 49
  },
  "type": "function"
 },
 "sklearn.linear_model.stochastic_gradient.BaseSGD._allocate_parameter_mem": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "ValueError",
    "numpy.asarray",
    "numpy.float64",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.stochastic_gradient.BaseSGD._get_learning_rate_type": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "sklearn.linear_model.stochastic_gradient.LEARNING_RATE_TYPES"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.stochastic_gradient.BaseSGD._get_loss_function": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "loss_class"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.stochastic_gradient.BaseSGD._get_penalty_type": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "sklearn.linear_model.stochastic_gradient.PENALTY_TYPES",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.stochastic_gradient.BaseSGD._validate_params": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.stochastic_gradient.BaseSGD._validate_sample_weight": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "ValueError",
    "numpy.asarray",
    "numpy.float64",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.stochastic_gradient.BaseSGD.fit": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.stochastic_gradient.BaseSGD.set_params": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "sklearn.linear_model.stochastic_gradient.BaseSGD",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.stochastic_gradient.BaseSGDClassifier": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "abc.ABCMeta",
    "sklearn.linear_model.stochastic_gradient.BaseSGD",
    "sklearn.linear_model.stochastic_gradient.DEFAULT_EPSILON"
   ]
  },
  "type": "class"
 },
 "sklearn.linear_model.stochastic_gradient.BaseSGDClassifier.__init__": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "int",
    "sklearn.linear_model.stochastic_gradient.BaseSGDClassifier",
    "sklearn.linear_model.stochastic_gradient.DEFAULT_EPSILON",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.stochastic_gradient.BaseSGDClassifier._fit": {
  "data": {
   "lineno": 384,
   "symbols_in_volume": [
    "check_X_y",
    "hasattr",
    "numpy.float64",
    "numpy.unique"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.stochastic_gradient.BaseSGDClassifier._fit_binary": {
  "data": {
   "lineno": 419,
   "symbols_in_volume": [
    "numpy.atleast_1d",
    "sklearn.linear_model.stochastic_gradient.fit_binary"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.stochastic_gradient.BaseSGDClassifier._fit_multiclass": {
  "data": {
   "lineno": 444,
   "symbols_in_volume": [
    "Parallel",
    "delayed",
    "enumerate",
    "len",
    "numpy.atleast_1d",
    "range",
    "sklearn.linear_model.stochastic_gradient.fit_binary"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.stochastic_gradient.BaseSGDClassifier._partial_fit": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": [
    "ValueError",
    "_check_partial_fit_first_call",
    "check_X_y",
    "compute_class_weight",
    "numpy.float64"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.stochastic_gradient.BaseSGDClassifier.fit": {
  "data": {
   "lineno": 514
  },
  "type": "function"
 },
 "sklearn.linear_model.stochastic_gradient.BaseSGDClassifier.partial_fit": {
  "data": {
   "lineno": 473,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.stochastic_gradient.BaseSGDRegressor": {
  "data": {
   "lineno": 829,
   "symbols_in_volume": [
    "sklearn.linear_model.stochastic_gradient.BaseSGD",
    "sklearn.linear_model.stochastic_gradient.DEFAULT_EPSILON"
   ]
  },
  "type": "class"
 },
 "sklearn.linear_model.stochastic_gradient.BaseSGDRegressor.__init__": {
  "data": {
   "lineno": 839,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "sklearn.linear_model.stochastic_gradient.BaseSGDRegressor",
    "sklearn.linear_model.stochastic_gradient.DEFAULT_EPSILON",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.stochastic_gradient.BaseSGDRegressor._decision_function": {
  "data": {
   "lineno": 984,
   "symbols_in_volume": [
    "all",
    "check_array",
    "check_is_fitted",
    "safe_sparse_dot"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.stochastic_gradient.BaseSGDRegressor._fit": {
  "data": {
   "lineno": 914
  },
  "type": "function"
 },
 "sklearn.linear_model.stochastic_gradient.BaseSGDRegressor._fit_regressor": {
  "data": {
   "lineno": 1018,
   "symbols_in_volume": [
    "average_sgd",
    "check_random_state",
    "int",
    "make_dataset",
    "numpy.atleast_1d",
    "numpy.iinfo",
    "numpy.int32",
    "plain_sgd"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.stochastic_gradient.BaseSGDRegressor._partial_fit": {
  "data": {
   "lineno": 857,
   "symbols_in_volume": [
    "ValueError",
    "astype",
    "check_X_y",
    "numpy.float64",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.stochastic_gradient.BaseSGDRegressor.decision_function": {
  "data": {
   "lineno": 969,
   "symbols_in_volume": [
    "deprecated"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.stochastic_gradient.BaseSGDRegressor.fit": {
  "data": {
   "lineno": 938
  },
  "type": "function"
 },
 "sklearn.linear_model.stochastic_gradient.BaseSGDRegressor.partial_fit": {
  "data": {
   "lineno": 889
  },
  "type": "function"
 },
 "sklearn.linear_model.stochastic_gradient.BaseSGDRegressor.predict": {
  "data": {
   "lineno": 1004
  },
  "type": "function"
 },
 "sklearn.linear_model.stochastic_gradient.DEFAULT_EPSILON": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "sklearn.linear_model.stochastic_gradient.LEARNING_RATE_TYPES": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "sklearn.linear_model.stochastic_gradient.PENALTY_TYPES": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "sklearn.linear_model.stochastic_gradient.SGDClassifier": {
  "data": {
   "lineno": 548,
   "symbols_in_volume": [
    "sklearn.linear_model.stochastic_gradient.BaseSGDClassifier"
   ]
  },
  "type": "class"
 },
 "sklearn.linear_model.stochastic_gradient.SGDClassifier.__init__": {
  "data": {
   "lineno": 703,
   "symbols_in_volume": [
    "sklearn.linear_model.stochastic_gradient.DEFAULT_EPSILON",
    "sklearn.linear_model.stochastic_gradient.SGDClassifier",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.stochastic_gradient.SGDClassifier._check_proba": {
  "data": {
   "lineno": 716,
   "symbols_in_volume": [
    "AttributeError",
    "check_is_fitted"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.stochastic_gradient.SGDClassifier._predict_log_proba": {
  "data": {
   "lineno": 825,
   "symbols_in_volume": [
    "numpy.log"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.stochastic_gradient.SGDClassifier._predict_proba": {
  "data": {
   "lineno": 759,
   "symbols_in_volume": [
    "NotImplementedError",
    "len",
    "numpy.any",
    "numpy.clip",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.stochastic_gradient.SGDClassifier.predict_log_proba": {
  "data": {
   "lineno": 800,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.stochastic_gradient.SGDClassifier.predict_proba": {
  "data": {
   "lineno": 723,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.stochastic_gradient.SGDRegressor": {
  "data": {
   "lineno": 1090,
   "symbols_in_volume": [
    "sklearn.linear_model.stochastic_gradient.BaseSGDRegressor"
   ]
  },
  "type": "class"
 },
 "sklearn.linear_model.stochastic_gradient.SGDRegressor.__init__": {
  "data": {
   "lineno": 1222,
   "symbols_in_volume": [
    "sklearn.linear_model.stochastic_gradient.DEFAULT_EPSILON",
    "sklearn.linear_model.stochastic_gradient.SGDRegressor",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.stochastic_gradient._prepare_fit_binary": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "len",
    "numpy.float64",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.stochastic_gradient.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "sklearn.linear_model.stochastic_gradient.fit_binary": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "average_sgd",
    "check_random_state",
    "int",
    "len",
    "make_dataset",
    "numpy.iinfo",
    "numpy.int32",
    "plain_sgd",
    "sklearn.linear_model.stochastic_gradient._prepare_fit_binary"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.stochastic_gradient.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests": {
  "data": {},
  "type": "module"
 },
 "sklearn.linear_model.tests.test_base": {
  "data": {},
  "type": "module"
 },
 "sklearn.linear_model.tests.test_base.LinearRegression": {
  "data": {
   "shadows": "sklearn.linear_model.base.LinearRegression"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_base._rescale_data": {
  "data": {
   "shadows": "sklearn.linear_model.base._rescale_data"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_base.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_base.assert_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_base.assert_greater": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_greater"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_base.center_data": {
  "data": {
   "shadows": "sklearn.linear_model.base.center_data"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_base.check_random_state": {
  "data": {
   "shadows": "sklearn.utils.check_random_state"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_base.make_regression": {
  "data": {
   "shadows": "sklearn.datasets.samples_generator.make_regression"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_base.make_sparse_uncorrelated": {
  "data": {
   "shadows": "sklearn.datasets.samples_generator.make_sparse_uncorrelated"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_base.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_base.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_base.sparse_center_data": {
  "data": {
   "shadows": "sklearn.linear_model.base.sparse_center_data"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_base.test_center_data": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "numpy.mean",
    "numpy.ones",
    "numpy.sqrt",
    "numpy.std",
    "numpy.zeros",
    "sklearn.linear_model.base.center_data",
    "sklearn.utils.check_random_state",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_base.test_center_data_multioutput": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "center",
    "numpy.mean",
    "numpy.zeros",
    "scipy.sparse.csc_matrix",
    "sklearn.linear_model.base.center_data",
    "sklearn.linear_model.base.sparse_center_data",
    "sklearn.utils.check_random_state",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_base.test_center_data_weighted": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "numpy.average",
    "numpy.mean",
    "numpy.ones",
    "numpy.sqrt",
    "sklearn.linear_model.base.center_data",
    "sklearn.utils.check_random_state",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_base.test_csr_sparse_center_data": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "scipy.sparse.csr_matrix",
    "sklearn.datasets.samples_generator.make_regression",
    "sklearn.linear_model.base.sparse_center_data",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_base.test_fit_intercept": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.linear_model.base.LinearRegression",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_base.test_linear_regression": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "sklearn.linear_model.base.LinearRegression",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_base.test_linear_regression_multiple_outcome": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "numpy.vstack",
    "sklearn.datasets.samples_generator.make_regression",
    "sklearn.linear_model.base.LinearRegression",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_base.test_linear_regression_sample_weights": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "numpy.newaxis",
    "numpy.random.RandomState",
    "numpy.sqrt",
    "sklearn.linear_model.base.LinearRegression",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_greater"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_base.test_linear_regression_sparse": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "numpy.newaxis",
    "range",
    "scipy.sparse.eye",
    "sklearn.linear_model.base.LinearRegression",
    "sklearn.utils.check_random_state",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_base.test_linear_regression_sparse_multiple_outcome": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "numpy.vstack",
    "scipy.sparse.coo_matrix",
    "sklearn.datasets.samples_generator.make_sparse_uncorrelated",
    "sklearn.linear_model.base.LinearRegression",
    "sklearn.utils.check_random_state",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_base.test_raises_value_error_if_sample_weights_greater_than_1d": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.linear_model.base.LinearRegression",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_base.test_rescale_data": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "numpy.newaxis",
    "numpy.random.RandomState",
    "numpy.sqrt",
    "sklearn.linear_model.base._rescale_data",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_base.test_sparse_center_data": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "numpy.mean",
    "numpy.ones",
    "numpy.sqrt",
    "numpy.std",
    "numpy.zeros",
    "scipy.sparse.rand",
    "sklearn.linear_model.base.sparse_center_data",
    "sklearn.utils.check_random_state",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_bayes": {
  "data": {},
  "type": "module"
 },
 "sklearn.linear_model.tests.test_bayes.ARDRegression": {
  "data": {
   "shadows": "sklearn.linear_model.bayes.ARDRegression"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_bayes.BayesianRidge": {
  "data": {
   "shadows": "sklearn.linear_model.bayes.BayesianRidge"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_bayes.SkipTest": {
  "data": {
   "shadows": "sklearn.utils.testing.SkipTest"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_bayes.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_bayes.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_bayes.datasets": {
  "data": {
   "shadows": "sklearn.datasets"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_bayes.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_bayes.test_bayesian_on_diabetes": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "numpy.diff",
    "sklearn.datasets.load_diabetes",
    "sklearn.linear_model.bayes.BayesianRidge",
    "sklearn.utils.testing.SkipTest",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_bayes.test_toy_ard_object": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.linear_model.bayes.ARDRegression",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_bayes.test_toy_bayesian_ridge_object": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.linear_model.bayes.BayesianRidge",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_coordinate_descent": {
  "data": {},
  "type": "module"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.ElasticNet": {
  "data": {
   "shadows": "sklearn.linear_model.coordinate_descent.ElasticNet"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.ElasticNetCV": {
  "data": {
   "shadows": "sklearn.linear_model.coordinate_descent.ElasticNetCV"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.Lasso": {
  "data": {
   "shadows": "sklearn.linear_model.coordinate_descent.Lasso"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.LassoCV": {
  "data": {
   "shadows": "sklearn.linear_model.coordinate_descent.LassoCV"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.LassoLarsCV": {
  "data": {
   "shadows": "sklearn.linear_model.LassoLarsCV"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.MultiTaskElasticNet": {
  "data": {
   "shadows": "sklearn.linear_model.coordinate_descent.MultiTaskElasticNet"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.MultiTaskElasticNetCV": {
  "data": {
   "shadows": "sklearn.linear_model.coordinate_descent.MultiTaskElasticNetCV"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.MultiTaskLasso": {
  "data": {
   "shadows": "sklearn.linear_model.coordinate_descent.MultiTaskLasso"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.MultiTaskLassoCV": {
  "data": {
   "shadows": "sklearn.linear_model.coordinate_descent.MultiTaskLassoCV"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.SkipTest": {
  "data": {
   "shadows": "sklearn.utils.testing.SkipTest"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.TempMemmap": {
  "data": {
   "shadows": "sklearn.utils.testing.TempMemmap"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.assert_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.assert_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.assert_greater": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_greater"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.assert_raises": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.assert_true": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_true"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.assert_warns": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_warns"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.assert_warns_message": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_warns_message"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.build_dataset": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.random.RandomState"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.check_array": {
  "data": {
   "shadows": "sklearn.utils.check_array"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.check_warnings": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "sklearn.utils.testing.SkipTest",
    "sys.version_info"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.enet_path": {
  "data": {
   "shadows": "sklearn.linear_model.coordinate_descent.enet_path"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.ignore_warnings": {
  "data": {
   "shadows": "sklearn.utils.testing.ignore_warnings"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.interpolate": {
  "data": {
   "shadows": "scipy.interpolate"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.lars_path": {
  "data": {
   "shadows": "sklearn.linear_model.lars_path"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.lasso_path": {
  "data": {
   "shadows": "sklearn.linear_model.coordinate_descent.lasso_path"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.load_boston": {
  "data": {
   "shadows": "sklearn.datasets.load_boston"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.test_1d_multioutput_enet_and_multitask_enet_cv": {
  "data": {
   "lineno": 466,
   "symbols_in_volume": [
    "numpy.newaxis",
    "sklearn.linear_model.coordinate_descent.ElasticNetCV",
    "sklearn.linear_model.coordinate_descent.MultiTaskElasticNetCV",
    "sklearn.linear_model.tests.test_coordinate_descent.build_dataset",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.test_1d_multioutput_lasso_and_multitask_lasso_cv": {
  "data": {
   "lineno": 479,
   "symbols_in_volume": [
    "numpy.newaxis",
    "sklearn.linear_model.coordinate_descent.LassoCV",
    "sklearn.linear_model.coordinate_descent.MultiTaskLassoCV",
    "sklearn.linear_model.tests.test_coordinate_descent.build_dataset",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.test_check_input_false": {
  "data": {
   "lineno": 635,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.linear_model.coordinate_descent.ElasticNet",
    "sklearn.linear_model.tests.test_coordinate_descent.build_dataset",
    "sklearn.utils.check_array",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.test_deprection_precompute_enet": {
  "data": {
   "lineno": 606,
   "symbols_in_volume": [
    "DeprecationWarning",
    "sklearn.linear_model.coordinate_descent.ElasticNet",
    "sklearn.linear_model.coordinate_descent.Lasso",
    "sklearn.linear_model.tests.test_coordinate_descent.build_dataset",
    "sklearn.utils.testing.assert_warns"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.test_enet_cv_positive_constraint": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": [
    "min",
    "sklearn.linear_model.coordinate_descent.ElasticNetCV",
    "sklearn.linear_model.tests.test_coordinate_descent.build_dataset",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.test_enet_multitarget": {
  "data": {
   "lineno": 417,
   "symbols_in_volume": [
    "range",
    "sklearn.linear_model.coordinate_descent.ElasticNet",
    "sklearn.linear_model.tests.test_coordinate_descent.build_dataset",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.test_enet_path": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "min",
    "numpy.newaxis",
    "sklearn.linear_model.coordinate_descent.ElasticNetCV",
    "sklearn.linear_model.coordinate_descent.MultiTaskElasticNetCV",
    "sklearn.linear_model.tests.test_coordinate_descent.build_dataset",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_greater",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.test_enet_path_positive": {
  "data": {
   "lineno": 616,
   "symbols_in_volume": [
    "numpy.all",
    "path",
    "sklearn.linear_model.coordinate_descent.enet_path",
    "sklearn.linear_model.coordinate_descent.lasso_path",
    "sklearn.linear_model.tests.test_coordinate_descent.build_dataset",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.test_enet_positive_constraint": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": [
    "min",
    "sklearn.linear_model.coordinate_descent.ElasticNet",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.test_enet_toy": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.dot",
    "sklearn.linear_model.coordinate_descent.ElasticNet",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.test_lasso_alpha_warning": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "UserWarning",
    "sklearn.linear_model.coordinate_descent.Lasso",
    "sklearn.utils.testing.assert_warns"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.test_lasso_cv": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "mse_lars",
    "numpy.abs",
    "numpy.searchsorted",
    "numpy.testing.assert_approx_equal",
    "scipy.interpolate.interp1d",
    "sklearn.linear_model.LassoLarsCV",
    "sklearn.linear_model.coordinate_descent.LassoCV",
    "sklearn.linear_model.tests.test_coordinate_descent.build_dataset",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_greater",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.test_lasso_cv_positive_constraint": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "min",
    "sklearn.linear_model.coordinate_descent.LassoCV",
    "sklearn.linear_model.tests.test_coordinate_descent.build_dataset",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.test_lasso_non_float_y": {
  "data": {
   "lineno": 666,
   "symbols_in_volume": [
    "model",
    "sklearn.linear_model.coordinate_descent.ElasticNet",
    "sklearn.linear_model.coordinate_descent.Lasso",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.test_lasso_path_return_models_vs_new_return_gives_same_coefficients": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "coef_path_cont_lars",
    "coef_path_cont_lasso",
    "numpy.array",
    "scipy.interpolate.interp1d",
    "sklearn.linear_model.coordinate_descent.lasso_path",
    "sklearn.linear_model.lars_path",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.test_lasso_positive_constraint": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": [
    "min",
    "sklearn.linear_model.coordinate_descent.Lasso",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.test_lasso_readonly_data": {
  "data": {
   "lineno": 394,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.linear_model.coordinate_descent.Lasso",
    "sklearn.utils.testing.TempMemmap",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.test_lasso_toy": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "sklearn.linear_model.coordinate_descent.Lasso",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.test_lasso_zero": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "sklearn.linear_model.coordinate_descent.Lasso",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.test_multi_task_lasso_and_enet": {
  "data": {
   "lineno": 381,
   "symbols_in_volume": [
    "numpy.c_",
    "sklearn.linear_model.coordinate_descent.MultiTaskElasticNet",
    "sklearn.linear_model.coordinate_descent.MultiTaskLasso",
    "sklearn.linear_model.tests.test_coordinate_descent.build_dataset",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.test_multi_task_lasso_readonly_data": {
  "data": {
   "lineno": 407,
   "symbols_in_volume": [
    "numpy.c_",
    "sklearn.linear_model.coordinate_descent.MultiTaskLasso",
    "sklearn.linear_model.tests.test_coordinate_descent.build_dataset",
    "sklearn.utils.testing.TempMemmap",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.test_multioutput_enetcv_error": {
  "data": {
   "lineno": 433,
   "symbols_in_volume": [
    "ValueError",
    "numpy.random.randn",
    "sklearn.linear_model.coordinate_descent.ElasticNetCV",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.test_multitask_enet_and_lasso_cv": {
  "data": {
   "lineno": 440,
   "symbols_in_volume": [
    "len",
    "sklearn.linear_model.coordinate_descent.MultiTaskElasticNetCV",
    "sklearn.linear_model.coordinate_descent.MultiTaskLassoCV",
    "sklearn.linear_model.tests.test_coordinate_descent.build_dataset",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.test_overrided_gram_matrix": {
  "data": {
   "lineno": 654,
   "symbols_in_volume": [
    "UserWarning",
    "sklearn.linear_model.coordinate_descent.ElasticNet",
    "sklearn.linear_model.tests.test_coordinate_descent.build_dataset",
    "sklearn.utils.testing.assert_warns_message"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.test_path_parameters": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": [
    "len",
    "sklearn.linear_model.coordinate_descent.ElasticNetCV",
    "sklearn.linear_model.tests.test_coordinate_descent.build_dataset",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.test_precompute_invalid_argument": {
  "data": {
   "lineno": 508,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.linear_model.coordinate_descent.ElasticNetCV",
    "sklearn.linear_model.coordinate_descent.LassoCV",
    "sklearn.linear_model.tests.test_coordinate_descent.build_dataset",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.test_random_descent": {
  "data": {
   "lineno": 561,
   "symbols_in_volume": [
    "ValueError",
    "numpy.hstack",
    "numpy.newaxis",
    "scipy.sparse.csr_matrix",
    "sklearn.linear_model.coordinate_descent.ElasticNet",
    "sklearn.linear_model.coordinate_descent.MultiTaskElasticNet",
    "sklearn.linear_model.tests.test_coordinate_descent.build_dataset",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.test_sparse_dense_descent_paths": {
  "data": {
   "lineno": 625,
   "symbols_in_volume": [
    "path",
    "scipy.sparse.csr_matrix",
    "sklearn.linear_model.coordinate_descent.enet_path",
    "sklearn.linear_model.coordinate_descent.lasso_path",
    "sklearn.linear_model.tests.test_coordinate_descent.build_dataset",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.test_sparse_input_dtype_enet_and_lassocv": {
  "data": {
   "lineno": 491,
   "symbols_in_volume": [
    "numpy.float32",
    "scipy.sparse.csr_matrix",
    "sklearn.linear_model.coordinate_descent.ElasticNetCV",
    "sklearn.linear_model.coordinate_descent.LassoCV",
    "sklearn.linear_model.tests.test_coordinate_descent.build_dataset",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.test_uniform_targets": {
  "data": {
   "lineno": 350,
   "symbols_in_volume": [
    "float",
    "numpy.empty",
    "numpy.finfo",
    "numpy.random.RandomState",
    "sklearn.linear_model.coordinate_descent.ElasticNetCV",
    "sklearn.linear_model.coordinate_descent.LassoCV",
    "sklearn.linear_model.coordinate_descent.MultiTaskElasticNetCV",
    "sklearn.linear_model.coordinate_descent.MultiTaskLassoCV",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.test_warm_start": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "sklearn.linear_model.coordinate_descent.ElasticNet",
    "sklearn.linear_model.tests.test_coordinate_descent.build_dataset",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.test_warm_start_convergence": {
  "data": {
   "lineno": 515,
   "symbols_in_volume": [
    "sklearn.linear_model.coordinate_descent.ElasticNet",
    "sklearn.linear_model.tests.test_coordinate_descent.build_dataset",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_greater"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.test_warm_start_convergence_with_regularizer_decrement": {
  "data": {
   "lineno": 537,
   "symbols_in_volume": [
    "copy.deepcopy",
    "sklearn.datasets.load_boston",
    "sklearn.linear_model.coordinate_descent.ElasticNet",
    "sklearn.utils.testing.assert_greater"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.version_info": {
  "data": {
   "shadows": "sys.version_info"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_least_angle": {
  "data": {
   "symbols_in_volume": [
    "sklearn.datasets.load_diabetes",
    "sklearn.linear_model.tests.test_least_angle.diabetes"
   ]
  },
  "type": "module"
 },
 "sklearn.linear_model.tests.test_least_angle.ConvergenceWarning": {
  "data": {
   "shadows": "sklearn.utils.ConvergenceWarning"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_least_angle.StringIO": {
  "data": {
   "shadows": "sklearn.externals.six.moves.cStringIO"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_least_angle.TempMemmap": {
  "data": {
   "shadows": "sklearn.utils.testing.TempMemmap"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_least_angle._lars_path_residues": {
  "data": {
   "shadows": "sklearn.linear_model.least_angle._lars_path_residues"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_least_angle.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_least_angle.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_least_angle.assert_greater": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_greater"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_least_angle.assert_less": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_less"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_least_angle.assert_no_warnings": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_no_warnings"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_least_angle.assert_raises": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_least_angle.assert_true": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_true"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_least_angle.assert_warns": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_warns"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_least_angle.datasets": {
  "data": {
   "shadows": "sklearn.datasets"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_least_angle.default_parameter": {
  "data": {
   "lineno": 471
  },
  "type": "constant"
 },
 "sklearn.linear_model.tests.test_least_angle.diabetes": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "sklearn.linear_model.tests.test_least_angle.estimator_parameter_map": {
  "data": {
   "lineno": 473
  },
  "type": "constant"
 },
 "sklearn.linear_model.tests.test_least_angle.ignore_warnings": {
  "data": {
   "shadows": "sklearn.utils.testing.ignore_warnings"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_least_angle.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_least_angle.linear_model": {
  "data": {
   "shadows": "sklearn.linear_model"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_least_angle.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_least_angle.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_least_angle.test_all_precomputed": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "numpy.dot",
    "sklearn.linear_model.lars_path",
    "sklearn.linear_model.tests.test_least_angle.diabetes",
    "sklearn.utils.testing.assert_array_almost_equal",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_least_angle.test_collinearity": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "f",
    "numpy.array",
    "numpy.dot",
    "numpy.isnan",
    "numpy.random.rand",
    "numpy.zeros",
    "numpy.zeros_like",
    "sklearn.linear_model.lars_path",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_less",
    "sklearn.utils.testing.assert_true",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_least_angle.test_estimatorclasses_positive_constraint": {
  "data": {
   "lineno": 480,
   "symbols_in_volume": [
    "getattr",
    "min",
    "sklearn.linear_model",
    "sklearn.linear_model.tests.test_least_angle.default_parameter",
    "sklearn.linear_model.tests.test_least_angle.diabetes",
    "sklearn.linear_model.tests.test_least_angle.estimator_parameter_map",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_least_angle.test_lars_add_features": {
  "data": {
   "lineno": 343,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.arange",
    "numpy.isfinite",
    "numpy.newaxis",
    "sklearn.linear_model.Lars",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_least_angle.test_lars_cv": {
  "data": {
   "lineno": 387,
   "symbols_in_volume": [
    "numpy.testing.assert_array_less",
    "sklearn.linear_model.LassoLarsCV",
    "sklearn.linear_model.tests.test_least_angle.diabetes"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_least_angle.test_lars_lstsq": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "numpy.linalg.lstsq",
    "sklearn.linear_model.LassoLars",
    "sklearn.linear_model.tests.test_least_angle.diabetes",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_least_angle.test_lars_n_nonzero_coefs": {
  "data": {
   "lineno": 354,
   "symbols_in_volume": [
    "len",
    "nose.tools.assert_equal",
    "sklearn.linear_model.Lars"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_least_angle.test_lars_path_positive_constraint": {
  "data": {
   "lineno": 446,
   "symbols_in_volume": [
    "sklearn.linear_model.lars_path",
    "sklearn.linear_model.tests.test_least_angle.diabetes",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_least_angle.test_lars_path_readonly_data": {
  "data": {
   "lineno": 435,
   "symbols_in_volume": [
    "sklearn.cross_validation.train_test_split",
    "sklearn.linear_model.least_angle._lars_path_residues",
    "sklearn.utils.testing.TempMemmap"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_least_angle.test_lasso_gives_lstsq_solution": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "numpy.linalg.lstsq",
    "sklearn.linear_model.lars_path",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_least_angle.test_lasso_lars_ic": {
  "data": {
   "lineno": 402,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.c_",
    "numpy.max",
    "numpy.random.RandomState",
    "numpy.where",
    "sklearn.linear_model.LassoLarsIC",
    "sklearn.linear_model.tests.test_least_angle.diabetes",
    "sklearn.utils.testing.assert_greater",
    "sklearn.utils.testing.assert_less",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_least_angle.test_lasso_lars_path_length": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.diff",
    "sklearn.linear_model.LassoLars",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_least_angle.test_lasso_lars_vs_lasso_cd": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "numpy.linspace",
    "scipy.linalg.norm",
    "sklearn.linear_model.Lasso",
    "sklearn.linear_model.LassoLars",
    "sklearn.linear_model.lars_path",
    "sklearn.linear_model.tests.test_least_angle.diabetes",
    "sklearn.utils.testing.assert_less",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_least_angle.test_lasso_lars_vs_lasso_cd_early_stopping": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "scipy.linalg.norm",
    "sklearn.linear_model.Lasso",
    "sklearn.linear_model.lars_path",
    "sklearn.utils.testing.assert_less"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_least_angle.test_lasso_lars_vs_lasso_cd_ill_conditioned": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.dot",
    "numpy.random.RandomState",
    "numpy.sign",
    "numpy.zeros",
    "sklearn.linear_model.lars_path",
    "sklearn.linear_model.lasso_path",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_least_angle.test_lasso_lars_vs_lasso_cd_ill_conditioned2": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": [
    "objective_function",
    "sklearn.linear_model.Lasso",
    "sklearn.linear_model.LassoLars",
    "sklearn.utils.ConvergenceWarning",
    "sklearn.utils.testing.assert_less",
    "sklearn.utils.testing.assert_warns"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_least_angle.test_lasso_lars_vs_lasso_cd_ill_conditioned2.objective_function": {
  "data": {
   "lineno": 327,
   "symbols_in_volume": [
    "len",
    "numpy.dot",
    "scipy.linalg.norm"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_least_angle.test_lasso_lars_vs_lasso_cd_positive": {
  "data": {
   "lineno": 495,
   "symbols_in_volume": [
    "numpy.linspace",
    "scipy.linalg.norm",
    "sklearn.linear_model.Lasso",
    "sklearn.linear_model.LassoLars",
    "sklearn.linear_model.lars_path",
    "sklearn.linear_model.tests.test_least_angle.diabetes",
    "sklearn.utils.testing.assert_less",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_least_angle.test_multitarget": {
  "data": {
   "lineno": 363,
   "symbols_in_volume": [
    "DeprecationWarning",
    "numpy.vstack",
    "range",
    "sklearn.linear_model.Lars",
    "sklearn.linear_model.LassoLars",
    "sklearn.linear_model.tests.test_least_angle.diabetes",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_warns",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_least_angle.test_no_path": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "sklearn.linear_model.lars_path",
    "sklearn.linear_model.tests.test_least_angle.diabetes",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_least_angle.test_no_path_all_precomputed": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "numpy.dot",
    "print",
    "sklearn.linear_model.lars_path",
    "sklearn.linear_model.tests.test_least_angle.diabetes",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_least_angle.test_no_path_precomputed": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "numpy.dot",
    "sklearn.linear_model.lars_path",
    "sklearn.linear_model.tests.test_least_angle.diabetes",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_least_angle.test_no_warning_for_zero_mse": {
  "data": {
   "lineno": 426,
   "symbols_in_volume": [
    "float",
    "numpy.any",
    "numpy.arange",
    "numpy.isinf",
    "sklearn.linear_model.LassoLarsIC",
    "sklearn.utils.testing.assert_no_warnings",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_least_angle.test_rank_deficient_design": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "numpy.dot",
    "scipy.linalg.norm",
    "sklearn.linear_model.Lasso",
    "sklearn.linear_model.LassoLars",
    "sklearn.utils.testing.assert_less"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_least_angle.test_simple": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "abs",
    "enumerate",
    "len",
    "numpy.dot",
    "numpy.max",
    "sklearn.externals.six.moves.cStringIO",
    "sklearn.linear_model.lars_path",
    "sklearn.linear_model.tests.test_least_angle.diabetes",
    "sklearn.linear_model.tests.test_least_angle.sys",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_least_angle.test_simple_precomputed": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "abs",
    "enumerate",
    "len",
    "numpy.dot",
    "numpy.max",
    "sklearn.linear_model.lars_path",
    "sklearn.linear_model.tests.test_least_angle.diabetes",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_least_angle.test_singular_matrix": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.linear_model.lars_path",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_least_angle.train_test_split": {
  "data": {
   "shadows": "sklearn.cross_validation.train_test_split"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_logistic": {
  "data": {
   "symbols_in_volume": [
    "int",
    "scipy.sparse.csr_matrix",
    "sklearn.datasets.load_iris",
    "sklearn.linear_model.tests.test_logistic.X",
    "sklearn.linear_model.tests.test_logistic.scipy",
    "tuple"
   ]
  },
  "type": "module"
 },
 "sklearn.linear_model.tests.test_logistic.ConvergenceWarning": {
  "data": {
   "shadows": "sklearn.utils.ConvergenceWarning"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_logistic.LogisticRegression": {
  "data": {
   "shadows": "sklearn.linear_model.logistic.LogisticRegression"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_logistic.LogisticRegressionCV": {
  "data": {
   "shadows": "sklearn.linear_model.logistic.LogisticRegressionCV"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_logistic.StratifiedKFold": {
  "data": {
   "shadows": "sklearn.cross_validation.StratifiedKFold"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_logistic.X": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "sklearn.linear_model.tests.test_logistic.X_sp": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "sklearn.linear_model.tests.test_logistic.Y1": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "sklearn.linear_model.tests.test_logistic.Y2": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "sklearn.linear_model.tests.test_logistic._compute_class_weight_dictionary": {
  "data": {
   "lineno": 621,
   "symbols_in_volume": [
    "dict",
    "numpy.unique",
    "sklearn.utils.compute_class_weight",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic._logistic_grad_hess": {
  "data": {
   "shadows": "sklearn.linear_model.logistic._logistic_grad_hess"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_logistic._logistic_loss": {
  "data": {
   "shadows": "sklearn.linear_model.logistic._logistic_loss"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_logistic._logistic_loss_and_grad": {
  "data": {
   "shadows": "sklearn.linear_model.logistic._logistic_loss_and_grad"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_logistic._multinomial_grad_hess": {
  "data": {
   "shadows": "sklearn.linear_model.logistic._multinomial_grad_hess"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_logistic.assert_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_logistic.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_logistic.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_logistic.assert_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_logistic.assert_greater": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_greater"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_logistic.assert_raise_message": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raise_message"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_logistic.assert_raises": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_logistic.assert_true": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_true"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_logistic.assert_warns": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_warns"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_logistic.assert_warns_message": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_warns_message"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_logistic.check_predictions": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "len",
    "numpy.ones",
    "numpy.unique",
    "sklearn.linear_model.tests.test_logistic.X",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.compute_class_weight": {
  "data": {
   "shadows": "sklearn.utils.compute_class_weight"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_logistic.ignore_warnings": {
  "data": {
   "shadows": "sklearn.utils.testing.ignore_warnings"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_logistic.iris": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "sklearn.linear_model.tests.test_logistic.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_logistic.load_iris": {
  "data": {
   "shadows": "sklearn.datasets.load_iris"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_logistic.log_loss": {
  "data": {
   "shadows": "sklearn.metrics.log_loss"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_logistic.logistic_regression_path": {
  "data": {
   "shadows": "sklearn.linear_model.logistic.logistic_regression_path"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_logistic.make_classification": {
  "data": {
   "shadows": "sklearn.datasets.make_classification"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_logistic.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_logistic.optimize": {
  "data": {
   "shadows": "scipy.optimize"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_logistic.raises": {
  "data": {
   "shadows": "sklearn.utils.testing.raises"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_logistic.scipy": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_logistic.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_logistic.sp_version": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "sklearn.linear_model.tests.test_logistic.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_logistic.test_check_solver_option": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "LR",
    "ValueError",
    "sklearn.linear_model.logistic.LogisticRegression",
    "sklearn.linear_model.logistic.LogisticRegressionCV",
    "sklearn.linear_model.tests.test_logistic.X",
    "sklearn.linear_model.tests.test_logistic.iris",
    "sklearn.utils.testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_consistency_path": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "enumerate",
    "f",
    "numpy.concatenate",
    "numpy.logspace",
    "numpy.random.RandomState",
    "sklearn.linear_model.logistic.LogisticRegression",
    "sklearn.linear_model.logistic.logistic_regression_path",
    "sklearn.linear_model.tests.test_logistic.X",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_error": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "LR",
    "ValueError",
    "sklearn.linear_model.logistic.LogisticRegression",
    "sklearn.linear_model.logistic.LogisticRegressionCV",
    "sklearn.linear_model.tests.test_logistic.X",
    "sklearn.linear_model.tests.test_logistic.Y1",
    "sklearn.utils.testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_inconsistent_input": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "ValueError",
    "numpy.ones",
    "numpy.random.RandomState",
    "sklearn.linear_model.logistic.LogisticRegression",
    "sklearn.linear_model.tests.test_logistic.X",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_intercept_logistic_helper": {
  "data": {
   "lineno": 419,
   "symbols_in_volume": [
    "hess",
    "hess_interp",
    "numpy.hstack",
    "numpy.newaxis",
    "numpy.ones",
    "numpy.random.RandomState",
    "sklearn.datasets.make_classification",
    "sklearn.linear_model.logistic._logistic_grad_hess",
    "sklearn.linear_model.logistic._logistic_loss",
    "sklearn.linear_model.tests.test_logistic.X",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_liblinear_decision_function_zero": {
  "data": {
   "lineno": 756,
   "symbols_in_volume": [
    "numpy.zeros",
    "sklearn.datasets.make_classification",
    "sklearn.linear_model.logistic.LogisticRegression",
    "sklearn.linear_model.tests.test_logistic.X",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_liblinear_dual_random_state": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "AssertionError",
    "sklearn.datasets.make_classification",
    "sklearn.linear_model.logistic.LogisticRegression",
    "sklearn.linear_model.tests.test_logistic.X",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_liblinear_logregcv_sparse": {
  "data": {
   "lineno": 771,
   "symbols_in_volume": [
    "scipy.sparse.csr_matrix",
    "sklearn.datasets.make_classification",
    "sklearn.linear_model.logistic.LogisticRegressionCV",
    "sklearn.linear_model.tests.test_logistic.X"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_logistic_cv": {
  "data": {
   "lineno": 378,
   "symbols_in_volume": [
    "len",
    "list",
    "numpy.asarray",
    "numpy.random.RandomState",
    "numpy.sign",
    "sklearn.linear_model.logistic.LogisticRegression",
    "sklearn.linear_model.logistic.LogisticRegressionCV",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_logistic_cv_sparse": {
  "data": {
   "lineno": 404,
   "symbols_in_volume": [
    "scipy.sparse.csr_matrix",
    "sklearn.datasets.make_classification",
    "sklearn.linear_model.logistic.LogisticRegressionCV",
    "sklearn.linear_model.tests.test_logistic.X",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_logistic_grad_hess": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": [
    "hess",
    "numpy.array",
    "numpy.linspace",
    "numpy.newaxis",
    "numpy.ones",
    "numpy.random.RandomState",
    "numpy.sign",
    "numpy.zeros",
    "numpy.zeros_like",
    "scipy.linalg.lstsq",
    "scipy.sparse.csr_matrix",
    "sklearn.linear_model.logistic._logistic_grad_hess",
    "sklearn.linear_model.logistic._logistic_loss",
    "sklearn.linear_model.logistic._logistic_loss_and_grad",
    "sklearn.linear_model.tests.test_logistic.X",
    "sklearn.linear_model.tests.test_logistic.X_sp",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_logistic_loss_and_grad": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": [
    "numpy.zeros",
    "scipy.optimize.approx_fprime",
    "scipy.sparse.csr_matrix",
    "sklearn.datasets.make_classification",
    "sklearn.linear_model.logistic._logistic_loss_and_grad",
    "sklearn.linear_model.tests.test_logistic.X",
    "sklearn.linear_model.tests.test_logistic.X_sp",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_logistic_regression_class_weights": {
  "data": {
   "lineno": 629,
   "symbols_in_volume": [
    "sklearn.linear_model.logistic.LogisticRegression",
    "sklearn.linear_model.tests.test_logistic.X",
    "sklearn.linear_model.tests.test_logistic._compute_class_weight_dictionary",
    "sklearn.linear_model.tests.test_logistic.iris",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_logistic_regression_convergence_warnings": {
  "data": {
   "lineno": 671,
   "symbols_in_volume": [
    "sklearn.datasets.make_classification",
    "sklearn.linear_model.logistic.LogisticRegression",
    "sklearn.linear_model.tests.test_logistic.X",
    "sklearn.utils.ConvergenceWarning",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_warns"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_logistic_regression_multinomial": {
  "data": {
   "lineno": 680,
   "symbols_in_volume": [
    "sklearn.datasets.make_classification",
    "sklearn.linear_model.logistic.LogisticRegression",
    "sklearn.linear_model.logistic.LogisticRegressionCV",
    "sklearn.linear_model.tests.test_logistic.X",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_logistic_regression_sample_weights": {
  "data": {
   "lineno": 574,
   "symbols_in_volume": [
    "LR",
    "ValueError",
    "numpy.ones",
    "sklearn.datasets.make_classification",
    "sklearn.linear_model.logistic.LogisticRegression",
    "sklearn.linear_model.logistic.LogisticRegressionCV",
    "sklearn.linear_model.tests.test_logistic.X",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_raises",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_logistic_regression_solvers": {
  "data": {
   "lineno": 501,
   "symbols_in_volume": [
    "sklearn.datasets.make_classification",
    "sklearn.linear_model.logistic.LogisticRegression",
    "sklearn.linear_model.tests.test_logistic.X",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_logistic_regression_solvers_multiclass": {
  "data": {
   "lineno": 521,
   "symbols_in_volume": [
    "sklearn.datasets.make_classification",
    "sklearn.linear_model.logistic.LogisticRegression",
    "sklearn.linear_model.tests.test_logistic.X",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_logistic_regressioncv_class_weights": {
  "data": {
   "lineno": 542,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.datasets.make_classification",
    "sklearn.linear_model.logistic.LogisticRegressionCV",
    "sklearn.linear_model.tests.test_logistic.X",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_logreg_cv_penalty": {
  "data": {
   "lineno": 798,
   "symbols_in_volume": [
    "numpy.count_nonzero",
    "sklearn.datasets.make_classification",
    "sklearn.linear_model.logistic.LogisticRegression",
    "sklearn.linear_model.logistic.LogisticRegressionCV",
    "sklearn.linear_model.tests.test_logistic.X",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_logreg_intercept_scaling": {
  "data": {
   "lineno": 779,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.linear_model.logistic.LogisticRegression",
    "sklearn.linear_model.tests.test_logistic.X",
    "sklearn.linear_model.tests.test_logistic.Y1",
    "sklearn.utils.testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_logreg_intercept_scaling_zero": {
  "data": {
   "lineno": 790,
   "symbols_in_volume": [
    "sklearn.linear_model.logistic.LogisticRegression",
    "sklearn.linear_model.tests.test_logistic.X",
    "sklearn.linear_model.tests.test_logistic.Y1",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_logreg_predict_proba_multinomial": {
  "data": {
   "lineno": 808,
   "symbols_in_volume": [
    "sklearn.datasets.make_classification",
    "sklearn.linear_model.logistic.LogisticRegression",
    "sklearn.linear_model.tests.test_logistic.X",
    "sklearn.metrics.log_loss",
    "sklearn.utils.testing.assert_greater"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_max_iter": {
  "data": {
   "lineno": 829,
   "symbols_in_volume": [
    "range",
    "sklearn.linear_model.logistic.LogisticRegression",
    "sklearn.linear_model.tests.test_logistic.X",
    "sklearn.linear_model.tests.test_logistic.iris",
    "sklearn.linear_model.tests.test_logistic.sp_version",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_multinomial_binary": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "numpy.argmax",
    "numpy.array",
    "numpy.intp",
    "numpy.mean",
    "sklearn.linear_model.logistic.LogisticRegression",
    "sklearn.linear_model.tests.test_logistic.iris",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_greater"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_multinomial_grad_hess": {
  "data": {
   "lineno": 725,
   "symbols_in_volume": [
    "hessp",
    "numpy.argmax",
    "numpy.array",
    "numpy.dot",
    "numpy.linspace",
    "numpy.newaxis",
    "numpy.ones",
    "numpy.random.RandomState",
    "numpy.zeros",
    "range",
    "scipy.linalg.lstsq",
    "sklearn.linear_model.logistic._multinomial_grad_hess",
    "sklearn.linear_model.tests.test_logistic.X",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_multinomial_logistic_regression_with_classweight_auto": {
  "data": {
   "lineno": 661,
   "symbols_in_volume": [
    "DeprecationWarning",
    "sklearn.linear_model.logistic.LogisticRegression",
    "sklearn.linear_model.tests.test_logistic.X",
    "sklearn.linear_model.tests.test_logistic.iris",
    "sklearn.utils.testing.assert_warns_message"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_multinomial_validation": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.linear_model.logistic.LogisticRegression",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_n_iter": {
  "data": {
   "lineno": 848,
   "symbols_in_volume": [
    "numpy.unique",
    "sklearn.linear_model.logistic.LogisticRegression",
    "sklearn.linear_model.logistic.LogisticRegressionCV",
    "sklearn.linear_model.tests.test_logistic.X",
    "sklearn.linear_model.tests.test_logistic.iris",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_nan": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "numpy.float64",
    "numpy.nan",
    "sklearn.linear_model.logistic.LogisticRegression",
    "sklearn.linear_model.tests.test_logistic.X",
    "sklearn.linear_model.tests.test_logistic.Y1",
    "sklearn.utils.testing.raises"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_ovr_multinomial_iris": {
  "data": {
   "lineno": 452,
   "symbols_in_volume": [
    "list",
    "numpy.asarray",
    "numpy.newaxis",
    "sklearn.cross_validation.StratifiedKFold",
    "sklearn.linear_model.logistic.LogisticRegressionCV",
    "sklearn.linear_model.tests.test_logistic.iris",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_greater"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_predict_2_classes": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "sklearn.linear_model.logistic.LogisticRegression",
    "sklearn.linear_model.tests.test_logistic.X",
    "sklearn.linear_model.tests.test_logistic.X_sp",
    "sklearn.linear_model.tests.test_logistic.Y1",
    "sklearn.linear_model.tests.test_logistic.check_predictions"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_predict_3_classes": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "sklearn.linear_model.logistic.LogisticRegression",
    "sklearn.linear_model.tests.test_logistic.X",
    "sklearn.linear_model.tests.test_logistic.X_sp",
    "sklearn.linear_model.tests.test_logistic.Y2",
    "sklearn.linear_model.tests.test_logistic.check_predictions"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_predict_iris": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "len",
    "numpy.mean",
    "numpy.ones",
    "numpy.unique",
    "sklearn.linear_model.logistic.LogisticRegression",
    "sklearn.linear_model.tests.test_logistic.iris",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_greater"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_sparsify": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "scipy.sparse.coo_matrix",
    "scipy.sparse.issparse",
    "sklearn.linear_model.logistic.LogisticRegression",
    "sklearn.linear_model.tests.test_logistic.iris",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_warm_start": {
  "data": {
   "lineno": 895,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.sum",
    "sklearn.linear_model.logistic.LogisticRegression",
    "sklearn.linear_model.tests.test_logistic.X",
    "sklearn.linear_model.tests.test_logistic.iris",
    "sklearn.linear_model.tests.test_logistic.sp_version",
    "sklearn.utils.testing.assert_greater",
    "sklearn.utils.testing.ignore_warnings",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_write_parameters": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "sklearn.linear_model.logistic.LogisticRegression",
    "sklearn.linear_model.tests.test_logistic.X",
    "sklearn.linear_model.tests.test_logistic.Y1",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_omp": {
  "data": {
   "symbols_in_volume": [
    "numpy.dot",
    "sklearn.datasets.make_sparse_coded_signal"
   ]
  },
  "type": "module"
 },
 "sklearn.linear_model.tests.test_omp.LinearRegression": {
  "data": {
   "shadows": "sklearn.linear_model.LinearRegression"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_omp.OrthogonalMatchingPursuit": {
  "data": {
   "shadows": "sklearn.linear_model.OrthogonalMatchingPursuit"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_omp.OrthogonalMatchingPursuitCV": {
  "data": {
   "shadows": "sklearn.linear_model.OrthogonalMatchingPursuitCV"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_omp.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_omp.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_omp.assert_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_omp.assert_raises": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_omp.assert_true": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_true"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_omp.assert_warns": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_warns"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_omp.check_random_state": {
  "data": {
   "shadows": "sklearn.utils.check_random_state"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_omp.ignore_warnings": {
  "data": {
   "shadows": "sklearn.utils.testing.ignore_warnings"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_omp.make_sparse_coded_signal": {
  "data": {
   "shadows": "sklearn.datasets.make_sparse_coded_signal"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_omp.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_omp.orthogonal_mp": {
  "data": {
   "shadows": "sklearn.linear_model.orthogonal_mp"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_omp.orthogonal_mp_gram": {
  "data": {
   "shadows": "sklearn.linear_model.orthogonal_mp_gram"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_omp.test_bad_input": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.linear_model.orthogonal_mp",
    "sklearn.linear_model.orthogonal_mp_gram",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_omp.test_correct_shapes": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "sklearn.linear_model.orthogonal_mp",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_omp.test_correct_shapes_gram": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "sklearn.linear_model.orthogonal_mp_gram",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_omp.test_estimator": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "numpy.count_nonzero",
    "sklearn.linear_model.OrthogonalMatchingPursuit",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_omp.test_identical_regressors": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "RuntimeWarning",
    "numpy.dot",
    "numpy.zeros",
    "sklearn.linear_model.orthogonal_mp",
    "sklearn.utils.testing.assert_warns"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_omp.test_n_nonzero_coefs": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "numpy.count_nonzero",
    "sklearn.linear_model.orthogonal_mp",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_omp.test_no_atoms": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.dot",
    "numpy.zeros_like",
    "sklearn.linear_model.orthogonal_mp",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_omp.test_omp_cv": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "sklearn.linear_model.OrthogonalMatchingPursuit",
    "sklearn.linear_model.OrthogonalMatchingPursuitCV",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_omp.test_omp_path": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "sklearn.linear_model.orthogonal_mp",
    "sklearn.linear_model.orthogonal_mp_gram",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_omp.test_omp_reaches_least_squares": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "sklearn.linear_model.LinearRegression",
    "sklearn.linear_model.OrthogonalMatchingPursuit",
    "sklearn.utils.check_random_state",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_omp.test_omp_return_path_prop_with_gram": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "sklearn.linear_model.orthogonal_mp",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_omp.test_perfect_signal_recovery": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "numpy.flatnonzero",
    "sklearn.linear_model.orthogonal_mp",
    "sklearn.linear_model.orthogonal_mp_gram",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_omp.test_swapped_regressors": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.flatnonzero",
    "numpy.zeros",
    "sklearn.linear_model.orthogonal_mp",
    "sklearn.linear_model.orthogonal_mp_gram",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_omp.test_tol": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.sum",
    "sklearn.linear_model.orthogonal_mp",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_omp.test_unreachable_accuracy": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "RuntimeWarning",
    "sklearn.linear_model.orthogonal_mp",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_warns"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_omp.test_with_without_gram": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "sklearn.linear_model.orthogonal_mp",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_omp.test_with_without_gram_tol": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "sklearn.linear_model.orthogonal_mp",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_passive_aggressive": {
  "data": {
   "symbols_in_volume": [
    "numpy.arange",
    "scipy.sparse.csr_matrix",
    "sklearn.datasets.load_iris",
    "sklearn.linear_model.tests.test_passive_aggressive.X",
    "sklearn.linear_model.tests.test_passive_aggressive.indices",
    "sklearn.linear_model.tests.test_passive_aggressive.iris",
    "sklearn.linear_model.tests.test_passive_aggressive.random_state",
    "sklearn.utils.check_random_state"
   ]
  },
  "type": "module"
 },
 "sklearn.linear_model.tests.test_passive_aggressive.ClassifierMixin": {
  "data": {
   "shadows": "sklearn.base.ClassifierMixin"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_passive_aggressive.MyPassiveAggressive": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "sklearn.base.ClassifierMixin"
   ]
  },
  "type": "class"
 },
 "sklearn.linear_model.tests.test_passive_aggressive.MyPassiveAggressive.__init__": {
  "data": {
   "lineno": 27
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_passive_aggressive.MyPassiveAggressive.fit": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "max",
    "min",
    "numpy.abs",
    "numpy.dot",
    "numpy.float64",
    "numpy.sign",
    "numpy.zeros",
    "range",
    "sklearn.linear_model.tests.test_passive_aggressive.X",
    "sklearn.linear_model.tests.test_passive_aggressive.y"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_passive_aggressive.MyPassiveAggressive.project": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "numpy.dot",
    "sklearn.linear_model.tests.test_passive_aggressive.X"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_passive_aggressive.PassiveAggressiveClassifier": {
  "data": {
   "shadows": "sklearn.linear_model.PassiveAggressiveClassifier"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_passive_aggressive.PassiveAggressiveRegressor": {
  "data": {
   "shadows": "sklearn.linear_model.PassiveAggressiveRegressor"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_passive_aggressive.X": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "sklearn.linear_model.tests.test_passive_aggressive.X_csr": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "sklearn.linear_model.tests.test_passive_aggressive.assert_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_passive_aggressive.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_passive_aggressive.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_passive_aggressive.assert_greater": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_greater"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_passive_aggressive.assert_less": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_less"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_passive_aggressive.assert_raises": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_passive_aggressive.check_random_state": {
  "data": {
   "shadows": "sklearn.utils.check_random_state"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_passive_aggressive.indices": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "sklearn.linear_model.tests.test_passive_aggressive.iris": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "sklearn.linear_model.tests.test_passive_aggressive.load_iris": {
  "data": {
   "shadows": "sklearn.datasets.load_iris"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_passive_aggressive.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_passive_aggressive.random_state": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "sklearn.linear_model.tests.test_passive_aggressive.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_passive_aggressive.test_class_weights": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.linear_model.PassiveAggressiveClassifier",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_passive_aggressive.test_classifier_accuracy": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "sklearn.linear_model.PassiveAggressiveClassifier",
    "sklearn.linear_model.tests.test_passive_aggressive.X",
    "sklearn.linear_model.tests.test_passive_aggressive.X_csr",
    "sklearn.linear_model.tests.test_passive_aggressive.y",
    "sklearn.utils.testing.assert_greater"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_passive_aggressive.test_classifier_correctness": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "sklearn.linear_model.PassiveAggressiveClassifier",
    "sklearn.linear_model.tests.test_passive_aggressive.MyPassiveAggressive",
    "sklearn.linear_model.tests.test_passive_aggressive.X",
    "sklearn.linear_model.tests.test_passive_aggressive.X_csr",
    "sklearn.linear_model.tests.test_passive_aggressive.y",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_passive_aggressive.test_classifier_partial_fit": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "numpy.unique",
    "range",
    "sklearn.linear_model.PassiveAggressiveClassifier",
    "sklearn.linear_model.tests.test_passive_aggressive.X",
    "sklearn.linear_model.tests.test_passive_aggressive.X_csr",
    "sklearn.linear_model.tests.test_passive_aggressive.y",
    "sklearn.utils.testing.assert_greater"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_passive_aggressive.test_classifier_refit": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "numpy.unique",
    "sklearn.linear_model.PassiveAggressiveClassifier",
    "sklearn.linear_model.tests.test_passive_aggressive.X",
    "sklearn.linear_model.tests.test_passive_aggressive.iris",
    "sklearn.linear_model.tests.test_passive_aggressive.y",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_passive_aggressive.test_classifier_undefined_methods": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "AttributeError",
    "getattr",
    "sklearn.linear_model.PassiveAggressiveClassifier",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_passive_aggressive.test_equal_class_weight": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "sklearn.linear_model.PassiveAggressiveClassifier",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_passive_aggressive.test_partial_fit_weight_class_balanced": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "ValueError",
    "numpy.unique",
    "sklearn.linear_model.PassiveAggressiveClassifier",
    "sklearn.linear_model.tests.test_passive_aggressive.X",
    "sklearn.linear_model.tests.test_passive_aggressive.y",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_passive_aggressive.test_regressor_correctness": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "sklearn.linear_model.PassiveAggressiveRegressor",
    "sklearn.linear_model.tests.test_passive_aggressive.MyPassiveAggressive",
    "sklearn.linear_model.tests.test_passive_aggressive.X",
    "sklearn.linear_model.tests.test_passive_aggressive.X_csr",
    "sklearn.linear_model.tests.test_passive_aggressive.y",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_passive_aggressive.test_regressor_mse": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "numpy.mean",
    "sklearn.linear_model.PassiveAggressiveRegressor",
    "sklearn.linear_model.tests.test_passive_aggressive.X",
    "sklearn.linear_model.tests.test_passive_aggressive.X_csr",
    "sklearn.linear_model.tests.test_passive_aggressive.y",
    "sklearn.utils.testing.assert_less"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_passive_aggressive.test_regressor_partial_fit": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "numpy.mean",
    "range",
    "sklearn.linear_model.PassiveAggressiveRegressor",
    "sklearn.linear_model.tests.test_passive_aggressive.X",
    "sklearn.linear_model.tests.test_passive_aggressive.X_csr",
    "sklearn.linear_model.tests.test_passive_aggressive.y",
    "sklearn.utils.testing.assert_less"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_passive_aggressive.test_regressor_undefined_methods": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "AttributeError",
    "getattr",
    "sklearn.linear_model.PassiveAggressiveRegressor",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_passive_aggressive.test_wrong_class_weight_format": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "sklearn.linear_model.PassiveAggressiveClassifier",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_passive_aggressive.test_wrong_class_weight_label": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "sklearn.linear_model.PassiveAggressiveClassifier",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_passive_aggressive.y": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "sklearn.linear_model.tests.test_perceptron": {
  "data": {
   "symbols_in_volume": [
    "numpy.arange",
    "scipy.sparse.csr_matrix",
    "sklearn.datasets.load_iris",
    "sklearn.linear_model.tests.test_perceptron.X",
    "sklearn.linear_model.tests.test_perceptron.X_csr",
    "sklearn.linear_model.tests.test_perceptron.indices",
    "sklearn.linear_model.tests.test_perceptron.iris",
    "sklearn.linear_model.tests.test_perceptron.random_state",
    "sklearn.utils.check_random_state"
   ]
  },
  "type": "module"
 },
 "sklearn.linear_model.tests.test_perceptron.MyPerceptron": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "sklearn.linear_model.tests.test_perceptron.MyPerceptron.__init__": {
  "data": {
   "lineno": 24
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_perceptron.MyPerceptron.fit": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "numpy.float64",
    "numpy.zeros",
    "range",
    "sklearn.linear_model.tests.test_perceptron.X",
    "sklearn.linear_model.tests.test_perceptron.y"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_perceptron.MyPerceptron.predict": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "numpy.atleast_2d",
    "numpy.sign",
    "sklearn.linear_model.tests.test_perceptron.X"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_perceptron.MyPerceptron.project": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "numpy.dot",
    "sklearn.linear_model.tests.test_perceptron.X"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_perceptron.Perceptron": {
  "data": {
   "shadows": "sklearn.linear_model.Perceptron"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_perceptron.X": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "sklearn.linear_model.tests.test_perceptron.X_csr": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "sklearn.linear_model.tests.test_perceptron.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_perceptron.assert_raises": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_perceptron.assert_true": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_true"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_perceptron.check_random_state": {
  "data": {
   "shadows": "sklearn.utils.check_random_state"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_perceptron.indices": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "sklearn.linear_model.tests.test_perceptron.iris": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "sklearn.linear_model.tests.test_perceptron.load_iris": {
  "data": {
   "shadows": "sklearn.datasets.load_iris"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_perceptron.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_perceptron.random_state": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "sklearn.linear_model.tests.test_perceptron.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_perceptron.test_perceptron_accuracy": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "sklearn.linear_model.Perceptron",
    "sklearn.linear_model.tests.test_perceptron.X",
    "sklearn.linear_model.tests.test_perceptron.X_csr",
    "sklearn.linear_model.tests.test_perceptron.y",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_perceptron.test_perceptron_correctness": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "sklearn.linear_model.Perceptron",
    "sklearn.linear_model.tests.test_perceptron.MyPerceptron",
    "sklearn.linear_model.tests.test_perceptron.X",
    "sklearn.linear_model.tests.test_perceptron.y",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_perceptron.test_undefined_methods": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "AttributeError",
    "getattr",
    "sklearn.linear_model.Perceptron",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_perceptron.y": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "sklearn.linear_model.tests.test_randomized_l1": {
  "data": {
   "symbols_in_volume": [
    "sklearn.datasets.load_diabetes",
    "sklearn.feature_selection.f_regression",
    "sklearn.linear_model.tests.test_randomized_l1.X",
    "sklearn.linear_model.tests.test_randomized_l1.diabetes",
    "sklearn.linear_model.tests.test_randomized_l1.y",
    "sklearn.preprocessing.StandardScaler"
   ]
  },
  "type": "module"
 },
 "sklearn.linear_model.tests.test_randomized_l1.RandomizedLasso": {
  "data": {
   "shadows": "sklearn.linear_model.randomized_l1.RandomizedLasso"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_randomized_l1.RandomizedLogisticRegression": {
  "data": {
   "shadows": "sklearn.linear_model.randomized_l1.RandomizedLogisticRegression"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_randomized_l1.StandardScaler": {
  "data": {
   "shadows": "sklearn.preprocessing.StandardScaler"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_randomized_l1.X": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "sklearn.linear_model.tests.test_randomized_l1.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_randomized_l1.assert_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_randomized_l1.assert_raises": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_randomized_l1.center_data": {
  "data": {
   "shadows": "sklearn.linear_model.base.center_data"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_randomized_l1.diabetes": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "sklearn.linear_model.tests.test_randomized_l1.f_classif": {
  "data": {
   "shadows": "sklearn.feature_selection.f_classif"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_randomized_l1.f_regression": {
  "data": {
   "shadows": "sklearn.feature_selection.f_regression"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_randomized_l1.lasso_stability_path": {
  "data": {
   "shadows": "sklearn.linear_model.randomized_l1.lasso_stability_path"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_randomized_l1.load_diabetes": {
  "data": {
   "shadows": "sklearn.datasets.load_diabetes"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_randomized_l1.load_iris": {
  "data": {
   "shadows": "sklearn.datasets.load_iris"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_randomized_l1.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_randomized_l1.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_randomized_l1.test_lasso_stability_path": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "numpy.argsort",
    "numpy.sum",
    "sklearn.linear_model.randomized_l1.lasso_stability_path",
    "sklearn.linear_model.tests.test_randomized_l1.X",
    "sklearn.linear_model.tests.test_randomized_l1.y",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_randomized_l1.test_randomized_lasso": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "ValueError",
    "numpy.argsort",
    "numpy.sum",
    "sklearn.linear_model.randomized_l1.RandomizedLasso",
    "sklearn.linear_model.tests.test_randomized_l1.X",
    "sklearn.linear_model.tests.test_randomized_l1.y",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_randomized_l1.test_randomized_logistic": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "numpy.argsort",
    "sklearn.datasets.load_iris",
    "sklearn.feature_selection.f_classif",
    "sklearn.linear_model.randomized_l1.RandomizedLogisticRegression",
    "sklearn.linear_model.tests.test_randomized_l1.X",
    "sklearn.linear_model.tests.test_randomized_l1.y",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_randomized_l1.test_randomized_logistic_sparse": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "scipy.sparse.csr_matrix",
    "sklearn.datasets.load_iris",
    "sklearn.feature_selection.f_classif",
    "sklearn.linear_model.base.center_data",
    "sklearn.linear_model.randomized_l1.RandomizedLogisticRegression",
    "sklearn.linear_model.tests.test_randomized_l1.X",
    "sklearn.linear_model.tests.test_randomized_l1.y",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_randomized_l1.y": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "sklearn.linear_model.tests.test_ransac": {
  "data": {
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "numpy.column_stack",
    "numpy.newaxis",
    "sklearn.linear_model.tests.test_ransac.X",
    "sklearn.linear_model.tests.test_ransac.data",
    "sklearn.linear_model.tests.test_ransac.outliers",
    "sklearn.linear_model.tests.test_ransac.y"
   ]
  },
  "type": "module"
 },
 "sklearn.linear_model.tests.test_ransac.LinearRegression": {
  "data": {
   "shadows": "sklearn.linear_model.LinearRegression"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_ransac.RANSACRegressor": {
  "data": {
   "shadows": "sklearn.linear_model.RANSACRegressor"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_ransac.X": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "sklearn.linear_model.tests.test_ransac._dynamic_max_trials": {
  "data": {
   "shadows": "sklearn.linear_model.ransac._dynamic_max_trials"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_ransac.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_ransac.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_ransac.assert_less": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_less"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_ransac.assert_raises": {
  "data": {
   "shadows": "numpy.testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_ransac.assert_raises_regexp": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises_regexp"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_ransac.data": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "sklearn.linear_model.tests.test_ransac.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_ransac.outliers": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "sklearn.linear_model.tests.test_ransac.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_ransac.test_ransac_default_residual_threshold": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "numpy.bool_",
    "numpy.ones_like",
    "numpy.testing.assert_equal",
    "sklearn.linear_model.LinearRegression",
    "sklearn.linear_model.RANSACRegressor",
    "sklearn.linear_model.tests.test_ransac.X",
    "sklearn.linear_model.tests.test_ransac.outliers",
    "sklearn.linear_model.tests.test_ransac.y"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ransac.test_ransac_dynamic_max_trials": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises",
    "sklearn.linear_model.LinearRegression",
    "sklearn.linear_model.RANSACRegressor",
    "sklearn.linear_model.ransac._dynamic_max_trials",
    "sklearn.linear_model.tests.test_ransac.X",
    "sklearn.linear_model.tests.test_ransac.y"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ransac.test_ransac_inliers_outliers": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "numpy.bool_",
    "numpy.ones_like",
    "numpy.testing.assert_equal",
    "sklearn.linear_model.LinearRegression",
    "sklearn.linear_model.RANSACRegressor",
    "sklearn.linear_model.tests.test_ransac.X",
    "sklearn.linear_model.tests.test_ransac.outliers",
    "sklearn.linear_model.tests.test_ransac.y"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ransac.test_ransac_is_data_valid": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "ValueError",
    "numpy.random.rand",
    "numpy.testing.assert_raises",
    "sklearn.linear_model.LinearRegression",
    "sklearn.linear_model.RANSACRegressor",
    "sklearn.linear_model.tests.test_ransac.X",
    "sklearn.linear_model.tests.test_ransac.y"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ransac.test_ransac_is_data_valid.is_data_valid": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "numpy.testing.assert_equal",
    "sklearn.linear_model.tests.test_ransac.X",
    "sklearn.linear_model.tests.test_ransac.y"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ransac.test_ransac_is_model_valid": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "ValueError",
    "numpy.testing.assert_raises",
    "sklearn.linear_model.LinearRegression",
    "sklearn.linear_model.RANSACRegressor",
    "sklearn.linear_model.tests.test_ransac.X",
    "sklearn.linear_model.tests.test_ransac.y"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ransac.test_ransac_is_model_valid.is_model_valid": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "numpy.testing.assert_equal",
    "sklearn.linear_model.tests.test_ransac.X",
    "sklearn.linear_model.tests.test_ransac.y"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ransac.test_ransac_max_trials": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "ValueError",
    "getattr",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises",
    "sklearn.linear_model.LinearRegression",
    "sklearn.linear_model.RANSACRegressor",
    "sklearn.linear_model.tests.test_ransac.X",
    "sklearn.linear_model.tests.test_ransac.y"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ransac.test_ransac_min_n_samples": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "ValueError",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_raises",
    "sklearn.linear_model.LinearRegression",
    "sklearn.linear_model.RANSACRegressor",
    "sklearn.linear_model.tests.test_ransac.X",
    "sklearn.linear_model.tests.test_ransac.y"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ransac.test_ransac_multi_dimensional_targets": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "numpy.bool_",
    "numpy.column_stack",
    "numpy.ones_like",
    "numpy.testing.assert_equal",
    "sklearn.linear_model.LinearRegression",
    "sklearn.linear_model.RANSACRegressor",
    "sklearn.linear_model.tests.test_ransac.X",
    "sklearn.linear_model.tests.test_ransac.outliers",
    "sklearn.linear_model.tests.test_ransac.y"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ransac.test_ransac_none_estimator": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "numpy.testing.assert_array_almost_equal",
    "sklearn.linear_model.LinearRegression",
    "sklearn.linear_model.RANSACRegressor",
    "sklearn.linear_model.tests.test_ransac.X",
    "sklearn.linear_model.tests.test_ransac.y"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ransac.test_ransac_predict": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.testing.assert_equal",
    "numpy.zeros",
    "sklearn.linear_model.LinearRegression",
    "sklearn.linear_model.RANSACRegressor",
    "sklearn.linear_model.tests.test_ransac.X",
    "sklearn.linear_model.tests.test_ransac.y"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ransac.test_ransac_resid_thresh_no_inliers": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.linear_model.LinearRegression",
    "sklearn.linear_model.RANSACRegressor",
    "sklearn.linear_model.tests.test_ransac.X",
    "sklearn.linear_model.tests.test_ransac.y",
    "sklearn.utils.testing.assert_raises_regexp"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ransac.test_ransac_residual_metric": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.column_stack",
    "numpy.sum",
    "numpy.testing.assert_array_almost_equal",
    "sklearn.linear_model.LinearRegression",
    "sklearn.linear_model.RANSACRegressor",
    "sklearn.linear_model.tests.test_ransac.X",
    "sklearn.linear_model.tests.test_ransac.y"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ransac.test_ransac_score": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.testing.assert_equal",
    "numpy.zeros",
    "sklearn.linear_model.LinearRegression",
    "sklearn.linear_model.RANSACRegressor",
    "sklearn.linear_model.tests.test_ransac.X",
    "sklearn.linear_model.tests.test_ransac.y",
    "sklearn.utils.testing.assert_less"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ransac.test_ransac_sparse_coo": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "numpy.bool_",
    "numpy.ones_like",
    "numpy.testing.assert_equal",
    "scipy.sparse.coo_matrix",
    "sklearn.linear_model.LinearRegression",
    "sklearn.linear_model.RANSACRegressor",
    "sklearn.linear_model.tests.test_ransac.X",
    "sklearn.linear_model.tests.test_ransac.outliers",
    "sklearn.linear_model.tests.test_ransac.y"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ransac.test_ransac_sparse_csc": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "numpy.bool_",
    "numpy.ones_like",
    "numpy.testing.assert_equal",
    "scipy.sparse.csc_matrix",
    "sklearn.linear_model.LinearRegression",
    "sklearn.linear_model.RANSACRegressor",
    "sklearn.linear_model.tests.test_ransac.X",
    "sklearn.linear_model.tests.test_ransac.outliers",
    "sklearn.linear_model.tests.test_ransac.y"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ransac.test_ransac_sparse_csr": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "numpy.bool_",
    "numpy.ones_like",
    "numpy.testing.assert_equal",
    "scipy.sparse.csr_matrix",
    "sklearn.linear_model.LinearRegression",
    "sklearn.linear_model.RANSACRegressor",
    "sklearn.linear_model.tests.test_ransac.X",
    "sklearn.linear_model.tests.test_ransac.outliers",
    "sklearn.linear_model.tests.test_ransac.y"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ransac.test_ransac_stop_n_inliers": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "numpy.testing.assert_equal",
    "sklearn.linear_model.LinearRegression",
    "sklearn.linear_model.RANSACRegressor",
    "sklearn.linear_model.tests.test_ransac.X",
    "sklearn.linear_model.tests.test_ransac.y"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ransac.test_ransac_stop_score": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "numpy.testing.assert_equal",
    "sklearn.linear_model.LinearRegression",
    "sklearn.linear_model.RANSACRegressor",
    "sklearn.linear_model.tests.test_ransac.X",
    "sklearn.linear_model.tests.test_ransac.y"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ransac.y": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "sklearn.linear_model.tests.test_ridge": {
  "data": {
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.random.RandomState",
    "scipy.sparse.csr_matrix",
    "sklearn.datasets.load_diabetes",
    "sklearn.datasets.load_iris",
    "sklearn.linear_model.tests.test_ridge.diabetes",
    "sklearn.linear_model.tests.test_ridge.ind",
    "sklearn.linear_model.tests.test_ridge.iris",
    "sklearn.linear_model.tests.test_ridge.rng"
   ]
  },
  "type": "module"
 },
 "sklearn.linear_model.tests.test_ridge.DENSE_FILTER": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "sklearn.linear_model.tests.test_ridge.GridSearchCV": {
  "data": {
   "shadows": "sklearn.grid_search.GridSearchCV"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_ridge.KFold": {
  "data": {
   "shadows": "sklearn.cross_validation.KFold"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_ridge.LinearRegression": {
  "data": {
   "shadows": "sklearn.linear_model.base.LinearRegression"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_ridge.Ridge": {
  "data": {
   "shadows": "sklearn.linear_model.ridge.Ridge"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_ridge.RidgeCV": {
  "data": {
   "shadows": "sklearn.linear_model.ridge.RidgeCV"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_ridge.RidgeClassifier": {
  "data": {
   "shadows": "sklearn.linear_model.ridge.RidgeClassifier"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_ridge.RidgeClassifierCV": {
  "data": {
   "shadows": "sklearn.linear_model.ridge.RidgeClassifierCV"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_ridge.SPARSE_FILTER": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "sklearn.linear_model.tests.test_ridge.X_iris": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "sklearn.linear_model.tests.test_ridge._RidgeGCV": {
  "data": {
   "shadows": "sklearn.linear_model.ridge._RidgeGCV"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_ridge._solve_cholesky": {
  "data": {
   "shadows": "sklearn.linear_model.ridge._solve_cholesky"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_ridge._solve_cholesky_kernel": {
  "data": {
   "shadows": "sklearn.linear_model.ridge._solve_cholesky_kernel"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_ridge._test_multi_ridge_diabetes": {
  "data": {
   "lineno": 385,
   "symbols_in_volume": [
    "filter_",
    "numpy.vstack",
    "sklearn.linear_model.ridge.Ridge",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge._test_ridge_classifiers": {
  "data": {
   "lineno": 400,
   "symbols_in_volume": [
    "filter_",
    "numpy.mean",
    "numpy.unique",
    "sklearn.cross_validation.KFold",
    "sklearn.linear_model.ridge.RidgeClassifier",
    "sklearn.linear_model.ridge.RidgeClassifierCV",
    "sklearn.linear_model.tests.test_ridge.X_iris",
    "sklearn.linear_model.tests.test_ridge.y_iris",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_greater",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge._test_ridge_cv": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": [
    "filter_",
    "len",
    "numpy.float64",
    "sklearn.cross_validation.KFold",
    "sklearn.linear_model.ridge.RidgeCV",
    "sklearn.utils.testing.assert_equal",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge._test_ridge_diabetes": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": [
    "filter_",
    "numpy.round",
    "sklearn.linear_model.ridge.Ridge"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge._test_ridge_loo": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "f",
    "filter_",
    "numpy.arange",
    "numpy.ones",
    "numpy.vstack",
    "range",
    "sklearn.linear_model.ridge.Ridge",
    "sklearn.linear_model.ridge.RidgeCV",
    "sklearn.linear_model.ridge._RidgeGCV",
    "sklearn.metrics.get_scorer",
    "sklearn.metrics.make_scorer",
    "sklearn.metrics.mean_squared_error",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge._test_tolerance": {
  "data": {
   "lineno": 417,
   "symbols_in_volume": [
    "filter_",
    "sklearn.linear_model.ridge.Ridge",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge.assert_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_ridge.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_ridge.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_ridge.assert_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_ridge.assert_greater": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_greater"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_ridge.assert_raise_message": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raise_message"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_ridge.assert_raises": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_ridge.assert_true": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_true"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_ridge.assert_warns": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_warns"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_ridge.datasets": {
  "data": {
   "shadows": "sklearn.datasets"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_ridge.diabetes": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "sklearn.linear_model.tests.test_ridge.get_scorer": {
  "data": {
   "shadows": "sklearn.metrics.get_scorer"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_ridge.ignore_warnings": {
  "data": {
   "shadows": "sklearn.utils.testing.ignore_warnings"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_ridge.ind": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "sklearn.linear_model.tests.test_ridge.iris": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "sklearn.linear_model.tests.test_ridge.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_ridge.make_regression": {
  "data": {
   "shadows": "sklearn.datasets.make_regression"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_ridge.make_scorer": {
  "data": {
   "shadows": "sklearn.metrics.make_scorer"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_ridge.mean_squared_error": {
  "data": {
   "shadows": "sklearn.metrics.mean_squared_error"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_ridge.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_ridge.ridge_regression": {
  "data": {
   "shadows": "sklearn.linear_model.ridge.ridge_regression"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_ridge.rng": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "sklearn.linear_model.tests.test_ridge.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_ridge.test_class_weight_vs_sample_weight": {
  "data": {
   "lineno": 497,
   "symbols_in_volume": [
    "clf",
    "numpy.ones",
    "sklearn.linear_model.ridge.RidgeClassifier",
    "sklearn.linear_model.ridge.RidgeClassifierCV",
    "sklearn.linear_model.tests.test_ridge.iris",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge.test_class_weights": {
  "data": {
   "lineno": 461,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "sklearn.linear_model.ridge.RidgeClassifier",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge.test_class_weights_cv": {
  "data": {
   "lineno": 526,
   "symbols_in_volume": [
    "clf",
    "clf.fit",
    "clf.predict",
    "numpy.array",
    "sklearn.linear_model.ridge.RidgeClassifierCV",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge.test_dense_sparse": {
  "data": {
   "lineno": 431,
   "symbols_in_volume": [
    "sklearn.linear_model.tests.test_ridge.DENSE_FILTER",
    "sklearn.linear_model.tests.test_ridge.SPARSE_FILTER",
    "sklearn.linear_model.tests.test_ridge._test_multi_ridge_diabetes",
    "sklearn.linear_model.tests.test_ridge._test_ridge_classifiers",
    "sklearn.linear_model.tests.test_ridge._test_ridge_cv",
    "sklearn.linear_model.tests.test_ridge._test_ridge_diabetes",
    "sklearn.linear_model.tests.test_ridge._test_ridge_loo",
    "sklearn.linear_model.tests.test_ridge._test_tolerance",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.ignore_warnings",
    "test_func"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge.test_n_iter": {
  "data": {
   "lineno": 685,
   "symbols_in_volume": [
    "numpy.tile",
    "range",
    "sklearn.linear_model.ridge.Ridge",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge.test_primal_dual_relationship": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "numpy.dot",
    "sklearn.linear_model.ridge._solve_cholesky",
    "sklearn.linear_model.ridge._solve_cholesky_kernel",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge.test_raises_value_error_if_sample_weights_greater_than_1d": {
  "data": {
   "lineno": 592,
   "symbols_in_volume": [
    "ValueError",
    "numpy.newaxis",
    "numpy.random.RandomState",
    "sklearn.linear_model.ridge.Ridge",
    "sklearn.linear_model.tests.test_ridge.rng",
    "sklearn.utils.testing.assert_raise_message",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge.test_raises_value_error_if_sample_weights_greater_than_1d.fit_ridge_not_ok": {
  "data": {
   "lineno": 616
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge.test_raises_value_error_if_sample_weights_greater_than_1d.fit_ridge_not_ok_2": {
  "data": {
   "lineno": 619
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge.test_raises_value_error_if_solver_not_supported": {
  "data": {
   "lineno": 662,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.utils.testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge.test_raises_value_error_if_solver_not_supported.func": {
  "data": {
   "lineno": 671,
   "symbols_in_volume": [
    "numpy.eye",
    "numpy.ones",
    "sklearn.linear_model.ridge.ridge_regression"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge.test_ridge": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "numpy.ones",
    "numpy.random.RandomState",
    "sklearn.linear_model.ridge.Ridge",
    "sklearn.linear_model.tests.test_ridge.rng",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_greater"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge.test_ridge_cv_sparse_svd": {
  "data": {
   "lineno": 448,
   "symbols_in_volume": [
    "TypeError",
    "scipy.sparse.csr_matrix",
    "sklearn.linear_model.ridge.RidgeCV",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge.test_ridge_fit_intercept_sparse": {
  "data": {
   "lineno": 704,
   "symbols_in_volume": [
    "UserWarning",
    "scipy.sparse.csr_matrix",
    "sklearn.datasets.make_regression",
    "sklearn.linear_model.ridge.Ridge",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_warns"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge.test_ridge_individual_penalties": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "ValueError",
    "numpy.arange",
    "numpy.array",
    "numpy.random.RandomState",
    "sklearn.linear_model.ridge.Ridge",
    "sklearn.linear_model.tests.test_ridge.rng",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_raises",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge.test_ridge_intercept": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "numpy.c_",
    "numpy.random.RandomState",
    "sklearn.linear_model.ridge.Ridge",
    "sklearn.linear_model.tests.test_ridge.rng",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge.test_ridge_sample_weights": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "numpy.column_stack",
    "numpy.dot",
    "numpy.newaxis",
    "numpy.ones",
    "numpy.random.RandomState",
    "numpy.sqrt",
    "scipy.linalg.inv",
    "sklearn.linear_model.ridge.Ridge",
    "sklearn.linear_model.ridge.ridge_regression",
    "sklearn.linear_model.tests.test_ridge.rng",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge.test_ridge_shapes": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "numpy.c_",
    "numpy.newaxis",
    "numpy.random.RandomState",
    "sklearn.linear_model.ridge.Ridge",
    "sklearn.linear_model.tests.test_ridge.rng",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge.test_ridge_singular": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "numpy.concatenate",
    "numpy.random.RandomState",
    "sklearn.linear_model.ridge.Ridge",
    "sklearn.linear_model.tests.test_ridge.rng",
    "sklearn.utils.testing.assert_greater"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge.test_ridge_sparse_svd": {
  "data": {
   "lineno": 454,
   "symbols_in_volume": [
    "TypeError",
    "scipy.sparse.csc_matrix",
    "sklearn.linear_model.ridge.Ridge",
    "sklearn.linear_model.tests.test_ridge.rng",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge.test_ridge_vs_lstsq": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.linear_model.base.LinearRegression",
    "sklearn.linear_model.ridge.Ridge",
    "sklearn.linear_model.tests.test_ridge.rng",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge.test_ridgecv_sample_weight": {
  "data": {
   "lineno": 566,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.cross_validation.KFold",
    "sklearn.grid_search.GridSearchCV",
    "sklearn.linear_model.ridge.Ridge",
    "sklearn.linear_model.ridge.RidgeCV",
    "sklearn.linear_model.tests.test_ridge.rng",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge.test_ridgecv_store_cv_values": {
  "data": {
   "lineno": 542,
   "symbols_in_volume": [
    "len",
    "numpy.random.RandomState",
    "sklearn.linear_model.ridge.RidgeCV",
    "sklearn.linear_model.tests.test_ridge.rng",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge.test_sparse_cg_max_iter": {
  "data": {
   "lineno": 679,
   "symbols_in_volume": [
    "sklearn.linear_model.ridge.Ridge",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge.test_sparse_design_with_sample_weights": {
  "data": {
   "lineno": 631,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "scipy.sparse.coo_matrix",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.dok_matrix",
    "scipy.sparse.lil_matrix",
    "sklearn.linear_model.ridge.Ridge",
    "sklearn.linear_model.tests.test_ridge.rng",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sparse_converter",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge.test_toy_ridge_object": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "numpy.float64",
    "numpy.ndarray",
    "numpy.vstack",
    "sklearn.linear_model.ridge.Ridge",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_equal",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge.y_iris": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "sklearn.linear_model.tests.test_sag": {
  "data": {},
  "type": "module"
 },
 "sklearn.linear_model.tests.test_sag.LabelEncoder": {
  "data": {
   "shadows": "sklearn.preprocessing.LabelEncoder"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sag.LogisticRegression": {
  "data": {
   "shadows": "sklearn.linear_model.LogisticRegression"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sag.Ridge": {
  "data": {
   "shadows": "sklearn.linear_model.Ridge"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sag.assert_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sag.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sag.assert_greater": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_greater"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sag.assert_raise_message": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raise_message"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sag.clone": {
  "data": {
   "shadows": "sklearn.base.clone"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sag.compute_class_weight": {
  "data": {
   "shadows": "sklearn.utils.compute_class_weight"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sag.get_auto_step_size": {
  "data": {
   "shadows": "sklearn.linear_model.sag.get_auto_step_size"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sag.get_max_squared_sum": {
  "data": {
   "shadows": "sklearn.linear_model.sag_fast.get_max_squared_sum"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sag.get_pobj": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "loss",
    "numpy.dot"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sag.get_step_size": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "numpy.max",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sag.ignore_warnings": {
  "data": {
   "shadows": "sklearn.utils.testing.ignore_warnings"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sag.log_dloss": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "sklearn.linear_model.tests.test_sag.math"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sag.log_loss": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "numpy.exp",
    "numpy.log",
    "numpy.mean"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sag.make_blobs": {
  "data": {
   "shadows": "sklearn.datasets.make_blobs"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sag.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sag.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sag.sag": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "dloss",
    "int",
    "len",
    "numpy.dot",
    "numpy.random.RandomState",
    "numpy.zeros",
    "range",
    "set"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sag.sag_sparse": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "ZeroDivisionError",
    "dloss",
    "int",
    "len",
    "numpy.dot",
    "numpy.int",
    "numpy.random.RandomState",
    "numpy.zeros",
    "range",
    "set"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sag.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sag.squared_dloss": {
  "data": {
   "lineno": 41
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sag.squared_loss": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "numpy.mean"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sag.test_binary_classifier_class_weight": {
  "data": {
   "lineno": 586,
   "symbols_in_volume": [
    "numpy.ones",
    "numpy.unique",
    "scipy.sparse.csr_matrix",
    "sklearn.base.clone",
    "sklearn.datasets.make_blobs",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.linear_model.tests.test_sag.get_step_size",
    "sklearn.linear_model.tests.test_sag.log_dloss",
    "sklearn.linear_model.tests.test_sag.sag_sparse",
    "sklearn.preprocessing.LabelEncoder",
    "sklearn.utils.compute_class_weight",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sag.test_classifier_matching": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "numpy.atleast_1d",
    "numpy.atleast_2d",
    "sklearn.datasets.make_blobs",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.linear_model.tests.test_sag.get_step_size",
    "sklearn.linear_model.tests.test_sag.log_dloss",
    "sklearn.linear_model.tests.test_sag.sag",
    "sklearn.linear_model.tests.test_sag.sag_sparse",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sag.test_classifier_results": {
  "data": {
   "lineno": 561,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.random.RandomState",
    "numpy.sign",
    "scipy.sparse.csr_matrix",
    "sklearn.base.clone",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sag.test_classifier_single_class": {
  "data": {
   "lineno": 699,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.utils.testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sag.test_get_auto_step_size": {
  "data": {
   "lineno": 374,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "numpy.array",
    "numpy.float64",
    "sklearn.linear_model.sag.get_auto_step_size",
    "sklearn.linear_model.sag_fast.get_max_squared_sum",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_raise_message",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sag.test_get_max_squared_sum": {
  "data": {
   "lineno": 402,
   "symbols_in_volume": [
    "numpy.float64",
    "numpy.random.RandomState",
    "scipy.sparse.csr_matrix",
    "sklearn.linear_model.sag_fast.get_max_squared_sum",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sag.test_multiclass_classifier_class_weight": {
  "data": {
   "lineno": 636,
   "symbols_in_volume": [
    "enumerate",
    "numpy.array",
    "numpy.ones",
    "numpy.unique",
    "numpy.vstack",
    "scipy.sparse.csr_matrix",
    "sklearn.base.clone",
    "sklearn.datasets.make_blobs",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.linear_model.tests.test_sag.get_step_size",
    "sklearn.linear_model.tests.test_sag.log_dloss",
    "sklearn.linear_model.tests.test_sag.sag_sparse",
    "sklearn.preprocessing.LabelEncoder",
    "sklearn.utils.compute_class_weight",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sag.test_regressor_matching": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.linear_model.Ridge",
    "sklearn.linear_model.tests.test_sag.get_step_size",
    "sklearn.linear_model.tests.test_sag.sag",
    "sklearn.linear_model.tests.test_sag.sag_sparse",
    "sklearn.linear_model.tests.test_sag.squared_dloss",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sag.test_sag_classifier_computed_correctly": {
  "data": {
   "lineno": 459,
   "symbols_in_volume": [
    "numpy.ones",
    "numpy.unique",
    "scipy.sparse.csr_matrix",
    "sklearn.base.clone",
    "sklearn.datasets.make_blobs",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.linear_model.tests.test_sag.get_step_size",
    "sklearn.linear_model.tests.test_sag.log_dloss",
    "sklearn.linear_model.tests.test_sag.sag_sparse",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sag.test_sag_multiclass_computed_correctly": {
  "data": {
   "lineno": 502,
   "symbols_in_volume": [
    "enumerate",
    "numpy.array",
    "numpy.ones",
    "numpy.unique",
    "numpy.vstack",
    "scipy.sparse.csr_matrix",
    "sklearn.base.clone",
    "sklearn.datasets.make_blobs",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.linear_model.tests.test_sag.get_step_size",
    "sklearn.linear_model.tests.test_sag.log_dloss",
    "sklearn.linear_model.tests.test_sag.sag_sparse",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sag.test_sag_pobj_matches_logistic_regression": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "scipy.sparse.csr_matrix",
    "sklearn.base.clone",
    "sklearn.datasets.make_blobs",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.linear_model.tests.test_sag.get_pobj",
    "sklearn.linear_model.tests.test_sag.log_loss",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sag.test_sag_pobj_matches_ridge_regression": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "scipy.sparse.csr_matrix",
    "sklearn.base.clone",
    "sklearn.linear_model.Ridge",
    "sklearn.linear_model.tests.test_sag.get_pobj",
    "sklearn.linear_model.tests.test_sag.squared_loss",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sag.test_sag_regressor": {
  "data": {
   "lineno": 420,
   "symbols_in_volume": [
    "numpy.linspace",
    "numpy.random.RandomState",
    "scipy.sparse.csr_matrix",
    "sklearn.base.clone",
    "sklearn.linear_model.Ridge",
    "sklearn.utils.testing.assert_greater",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sag.test_sag_regressor_computed_correctly": {
  "data": {
   "lineno": 330,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.random.RandomState",
    "scipy.sparse.csr_matrix",
    "sklearn.base.clone",
    "sklearn.linear_model.Ridge",
    "sklearn.linear_model.tests.test_sag.get_step_size",
    "sklearn.linear_model.tests.test_sag.sag_sparse",
    "sklearn.linear_model.tests.test_sag.squared_dloss",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sag.test_step_size_alpha_error": {
  "data": {
   "lineno": 711,
   "symbols_in_volume": [
    "ZeroDivisionError",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.linear_model.Ridge",
    "sklearn.utils.testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd": {
  "data": {
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.datasets.load_iris"
   ]
  },
  "type": "module"
 },
 "sklearn.linear_model.tests.test_sgd.CommonTest": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "sklearn.linear_model.tests.test_sgd.CommonTest._test_warm_start": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "sklearn.linear_model.tests.test_sgd.X",
    "sklearn.linear_model.tests.test_sgd.Y",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.CommonTest.asgd": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "enumerate",
    "isinstance",
    "numpy.dot",
    "numpy.zeros",
    "sklearn.linear_model.tests.test_sgd.X"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.CommonTest.factory": {
  "data": {
   "lineno": 101
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.CommonTest.test_clone": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "sklearn.base.clone",
    "sklearn.linear_model.tests.test_sgd.X",
    "sklearn.linear_model.tests.test_sgd.Y",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.CommonTest.test_input_format": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "numpy.c_",
    "numpy.newaxis",
    "sklearn.linear_model.tests.test_sgd.X",
    "sklearn.linear_model.tests.test_sgd.Y",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.CommonTest.test_late_onset_averaging_not_reached": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "isinstance",
    "numpy.unique",
    "range",
    "sklearn.linear_model.SGDClassifier",
    "sklearn.linear_model.tests.test_sgd.X",
    "sklearn.linear_model.tests.test_sgd.Y",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.CommonTest.test_late_onset_averaging_reached": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.linear_model.tests.test_sgd.X",
    "sklearn.linear_model.tests.test_sgd.Y",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.CommonTest.test_plain_has_no_average_attr": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "hasattr",
    "sklearn.linear_model.tests.test_sgd.X",
    "sklearn.linear_model.tests.test_sgd.Y",
    "sklearn.utils.testing.assert_false",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.CommonTest.test_sgd_bad_alpha_for_optimal_learning_rate": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.utils.testing.raises"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.CommonTest.test_warm_start_constant": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "sklearn.linear_model.tests.test_sgd.X",
    "sklearn.linear_model.tests.test_sgd.Y"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.CommonTest.test_warm_start_invscaling": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "sklearn.linear_model.tests.test_sgd.X",
    "sklearn.linear_model.tests.test_sgd.Y"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.CommonTest.test_warm_start_optimal": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "sklearn.linear_model.tests.test_sgd.X",
    "sklearn.linear_model.tests.test_sgd.Y"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "sklearn.linear_model.SGDClassifier",
    "sklearn.linear_model.tests.test_sgd.CommonTest",
    "sklearn.linear_model.tests.test_sgd.unittest"
   ]
  },
  "type": "class"
 },
 "sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase._test_partial_fit_equal_fit": {
  "data": {
   "lineno": 763,
   "symbols_in_volume": [
    "numpy.unique",
    "range",
    "sklearn.linear_model.tests.test_sgd.T",
    "sklearn.linear_model.tests.test_sgd.T2",
    "sklearn.linear_model.tests.test_sgd.X",
    "sklearn.linear_model.tests.test_sgd.X2",
    "sklearn.linear_model.tests.test_sgd.Y",
    "sklearn.linear_model.tests.test_sgd.Y2",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase.test_argument_coef": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": [
    "TypeError",
    "numpy.zeros",
    "sklearn.linear_model.tests.test_sgd.X",
    "sklearn.linear_model.tests.test_sgd.Y",
    "sklearn.utils.testing.raises"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase.test_average_binary_computed_correctly": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.random.RandomState",
    "numpy.sign",
    "sklearn.linear_model.tests.test_sgd.X",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase.test_balanced_weight": {
  "data": {
   "lineno": 625,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.concatenate",
    "numpy.random.RandomState",
    "numpy.vstack",
    "sklearn.linear_model.tests.test_sgd.X",
    "sklearn.linear_model.tests.test_sgd.iris",
    "sklearn.metrics.f1_score",
    "sklearn.preprocessing.scale",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_greater",
    "sklearn.utils.testing.assert_less"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase.test_class_weights": {
  "data": {
   "lineno": 561,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.linear_model.tests.test_sgd.X",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase.test_equal_class_weight": {
  "data": {
   "lineno": 581,
   "symbols_in_volume": [
    "sklearn.linear_model.tests.test_sgd.X",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase.test_fit_then_partial_fit": {
  "data": {
   "lineno": 755,
   "symbols_in_volume": [
    "sklearn.linear_model.tests.test_sgd.X2",
    "sklearn.linear_model.tests.test_sgd.Y2"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase.test_multiple_fit": {
  "data": {
   "lineno": 813,
   "symbols_in_volume": [
    "hasattr",
    "sklearn.linear_model.tests.test_sgd.X",
    "sklearn.linear_model.tests.test_sgd.Y",
    "sklearn.preprocessing.LabelEncoder",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase.test_partial_fit_binary": {
  "data": {
   "lineno": 707,
   "symbols_in_volume": [
    "id",
    "numpy.unique",
    "sklearn.linear_model.tests.test_sgd.T",
    "sklearn.linear_model.tests.test_sgd.X",
    "sklearn.linear_model.tests.test_sgd.Y",
    "sklearn.linear_model.tests.test_sgd.true_result",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase.test_partial_fit_equal_fit_constant": {
  "data": {
   "lineno": 781
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase.test_partial_fit_equal_fit_invscaling": {
  "data": {
   "lineno": 787
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase.test_partial_fit_equal_fit_optimal": {
  "data": {
   "lineno": 784
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase.test_partial_fit_exception": {
  "data": {
   "lineno": 701,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.linear_model.tests.test_sgd.X3",
    "sklearn.linear_model.tests.test_sgd.Y3",
    "sklearn.utils.testing.raises"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase.test_partial_fit_multiclass": {
  "data": {
   "lineno": 726,
   "symbols_in_volume": [
    "id",
    "numpy.unique",
    "sklearn.linear_model.tests.test_sgd.X2",
    "sklearn.linear_model.tests.test_sgd.Y2",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase.test_partial_fit_multiclass_average": {
  "data": {
   "lineno": 742,
   "symbols_in_volume": [
    "numpy.unique",
    "sklearn.linear_model.tests.test_sgd.X2",
    "sklearn.linear_model.tests.test_sgd.Y2",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase.test_partial_fit_weight_class_balanced": {
  "data": {
   "lineno": 382,
   "symbols_in_volume": [
    "ValueError",
    "numpy.unique",
    "sklearn.linear_model.tests.test_sgd.X",
    "sklearn.linear_model.tests.test_sgd.Y",
    "sklearn.utils.testing.assert_raises_regexp"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase.test_provide_coef": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": [
    "ValueError",
    "numpy.zeros",
    "sklearn.linear_model.tests.test_sgd.X",
    "sklearn.linear_model.tests.test_sgd.Y",
    "sklearn.utils.testing.raises"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase.test_regression_losses": {
  "data": {
   "lineno": 790,
   "symbols_in_volume": [
    "numpy.mean",
    "sklearn.linear_model.tests.test_sgd.X",
    "sklearn.linear_model.tests.test_sgd.Y",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase.test_sample_weights": {
  "data": {
   "lineno": 677,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.linear_model.tests.test_sgd.X",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase.test_set_coef_multiclass": {
  "data": {
   "lineno": 447,
   "symbols_in_volume": [
    "ValueError",
    "numpy.zeros",
    "sklearn.linear_model.tests.test_sgd.X2",
    "sklearn.linear_model.tests.test_sgd.Y2",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase.test_set_intercept": {
  "data": {
   "lineno": 330,
   "symbols_in_volume": [
    "ValueError",
    "numpy.zeros",
    "sklearn.linear_model.tests.test_sgd.X",
    "sklearn.linear_model.tests.test_sgd.Y",
    "sklearn.utils.testing.raises"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase.test_set_intercept_binary": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": [
    "sklearn.linear_model.tests.test_sgd.X5",
    "sklearn.linear_model.tests.test_sgd.Y5"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase.test_set_intercept_to_intercept": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": [
    "sklearn.linear_model.tests.test_sgd.X",
    "sklearn.linear_model.tests.test_sgd.X5",
    "sklearn.linear_model.tests.test_sgd.Y",
    "sklearn.linear_model.tests.test_sgd.Y5"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase.test_sgd": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "sklearn.linear_model.tests.test_sgd.T",
    "sklearn.linear_model.tests.test_sgd.X",
    "sklearn.linear_model.tests.test_sgd.Y",
    "sklearn.linear_model.tests.test_sgd.true_result",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase.test_sgd_at_least_two_labels": {
  "data": {
   "lineno": 377,
   "symbols_in_volume": [
    "ValueError",
    "numpy.ones",
    "sklearn.linear_model.tests.test_sgd.X2",
    "sklearn.utils.testing.raises"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase.test_sgd_bad_alpha": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.utils.testing.raises"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase.test_sgd_bad_eta0": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.utils.testing.raises"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase.test_sgd_bad_l1_ratio": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.utils.testing.raises"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase.test_sgd_bad_learning_rate_schedule": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.utils.testing.raises"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase.test_sgd_bad_loss": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.utils.testing.raises"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase.test_sgd_bad_penalty": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.utils.testing.raises"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase.test_sgd_l1": {
  "data": {
   "lineno": 532,
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "numpy.random.RandomState",
    "numpy.zeros",
    "scipy.sparse.issparse",
    "sklearn.linear_model.tests.test_sgd.X",
    "sklearn.linear_model.tests.test_sgd.X4",
    "sklearn.linear_model.tests.test_sgd.Y",
    "sklearn.linear_model.tests.test_sgd.Y4",
    "sklearn.linear_model.tests.test_sgd.pickle",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase.test_sgd_multiclass": {
  "data": {
   "lineno": 396,
   "symbols_in_volume": [
    "sklearn.linear_model.tests.test_sgd.T2",
    "sklearn.linear_model.tests.test_sgd.X2",
    "sklearn.linear_model.tests.test_sgd.Y2",
    "sklearn.linear_model.tests.test_sgd.true_result2",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase.test_sgd_multiclass_average": {
  "data": {
   "lineno": 405,
   "symbols_in_volume": [
    "enumerate",
    "numpy.array",
    "numpy.ones",
    "numpy.unique",
    "sklearn.linear_model.tests.test_sgd.X2",
    "sklearn.linear_model.tests.test_sgd.Y2",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase.test_sgd_multiclass_njobs": {
  "data": {
   "lineno": 438,
   "symbols_in_volume": [
    "sklearn.linear_model.tests.test_sgd.T2",
    "sklearn.linear_model.tests.test_sgd.X2",
    "sklearn.linear_model.tests.test_sgd.Y2",
    "sklearn.linear_model.tests.test_sgd.true_result2",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase.test_sgd_multiclass_with_init_coef": {
  "data": {
   "lineno": 428,
   "symbols_in_volume": [
    "numpy.zeros",
    "sklearn.linear_model.tests.test_sgd.T2",
    "sklearn.linear_model.tests.test_sgd.X2",
    "sklearn.linear_model.tests.test_sgd.Y2",
    "sklearn.linear_model.tests.test_sgd.true_result2",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase.test_sgd_n_iter_param": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.utils.testing.raises"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase.test_sgd_proba": {
  "data": {
   "lineno": 465,
   "symbols_in_volume": [
    "hasattr",
    "isinstance",
    "numpy.all",
    "numpy.argmax",
    "numpy.argmin",
    "numpy.argsort",
    "numpy.log",
    "sklearn.linear_model.SGDClassifier",
    "sklearn.linear_model.tests.test_sgd.X",
    "sklearn.linear_model.tests.test_sgd.X2",
    "sklearn.linear_model.tests.test_sgd.Y",
    "sklearn.linear_model.tests.test_sgd.Y2",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_false",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase.test_sgd_shuffle_param": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.utils.testing.raises"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase.test_warm_start_multiclass": {
  "data": {
   "lineno": 810,
   "symbols_in_volume": [
    "sklearn.linear_model.tests.test_sgd.X2",
    "sklearn.linear_model.tests.test_sgd.Y2"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase.test_weights_multiplied": {
  "data": {
   "lineno": 609,
   "symbols_in_volume": [
    "numpy.copy",
    "numpy.random.random",
    "sklearn.linear_model.tests.test_sgd.X4",
    "sklearn.linear_model.tests.test_sgd.Y4",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase.test_wrong_class_weight_format": {
  "data": {
   "lineno": 603,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.linear_model.tests.test_sgd.X",
    "sklearn.linear_model.tests.test_sgd.Y",
    "sklearn.utils.testing.raises"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase.test_wrong_class_weight_label": {
  "data": {
   "lineno": 597,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.linear_model.tests.test_sgd.X",
    "sklearn.linear_model.tests.test_sgd.Y",
    "sklearn.utils.testing.raises"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase.test_wrong_sample_weights": {
  "data": {
   "lineno": 694,
   "symbols_in_volume": [
    "ValueError",
    "numpy.arange",
    "sklearn.linear_model.tests.test_sgd.X",
    "sklearn.linear_model.tests.test_sgd.Y",
    "sklearn.utils.testing.raises"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.DenseSGDRegressorTestCase": {
  "data": {
   "lineno": 834,
   "symbols_in_volume": [
    "sklearn.linear_model.SGDRegressor",
    "sklearn.linear_model.tests.test_sgd.CommonTest",
    "sklearn.linear_model.tests.test_sgd.unittest"
   ]
  },
  "type": "class"
 },
 "sklearn.linear_model.tests.test_sgd.DenseSGDRegressorTestCase._test_partial_fit_equal_fit": {
  "data": {
   "lineno": 1051,
   "symbols_in_volume": [
    "range",
    "sklearn.linear_model.tests.test_sgd.T",
    "sklearn.linear_model.tests.test_sgd.X",
    "sklearn.linear_model.tests.test_sgd.Y",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.DenseSGDRegressorTestCase.test_average_sparse": {
  "data": {
   "lineno": 912,
   "symbols_in_volume": [
    "int",
    "sklearn.linear_model.tests.test_sgd.X3",
    "sklearn.linear_model.tests.test_sgd.Y3",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.DenseSGDRegressorTestCase.test_elasticnet_convergence": {
  "data": {
   "lineno": 1008,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.random.RandomState",
    "numpy.random.randn",
    "sklearn.linear_model.ElasticNet",
    "sklearn.linear_model.tests.test_sgd.X",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.DenseSGDRegressorTestCase.test_loss_function_epsilon": {
  "data": {
   "lineno": 1076
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.DenseSGDRegressorTestCase.test_partial_fit": {
  "data": {
   "lineno": 1035,
   "symbols_in_volume": [
    "id",
    "sklearn.linear_model.tests.test_sgd.X",
    "sklearn.linear_model.tests.test_sgd.Y",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_true",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.DenseSGDRegressorTestCase.test_partial_fit_equal_fit_constant": {
  "data": {
   "lineno": 1067
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.DenseSGDRegressorTestCase.test_partial_fit_equal_fit_invscaling": {
  "data": {
   "lineno": 1073
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.DenseSGDRegressorTestCase.test_partial_fit_equal_fit_optimal": {
  "data": {
   "lineno": 1070
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.DenseSGDRegressorTestCase.test_sgd": {
  "data": {
   "lineno": 839,
   "symbols_in_volume": [
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.DenseSGDRegressorTestCase.test_sgd_averaged_computed_correctly": {
  "data": {
   "lineno": 856,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.random.RandomState",
    "sklearn.linear_model.tests.test_sgd.X",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.DenseSGDRegressorTestCase.test_sgd_averaged_partial_fit": {
  "data": {
   "lineno": 884,
   "symbols_in_volume": [
    "int",
    "numpy.dot",
    "numpy.random.RandomState",
    "sklearn.linear_model.tests.test_sgd.X",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.DenseSGDRegressorTestCase.test_sgd_bad_loss": {
  "data": {
   "lineno": 851,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.utils.testing.raises"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.DenseSGDRegressorTestCase.test_sgd_bad_penalty": {
  "data": {
   "lineno": 846,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.utils.testing.raises"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.DenseSGDRegressorTestCase.test_sgd_epsilon_insensitive": {
  "data": {
   "lineno": 958,
   "symbols_in_volume": [
    "numpy.linspace",
    "numpy.random.randn",
    "sklearn.linear_model.tests.test_sgd.X",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.DenseSGDRegressorTestCase.test_sgd_huber_fit": {
  "data": {
   "lineno": 984,
   "symbols_in_volume": [
    "numpy.linspace",
    "numpy.random.RandomState",
    "sklearn.linear_model.tests.test_sgd.X",
    "sklearn.utils.testing.assert_greater"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.DenseSGDRegressorTestCase.test_sgd_least_squares_fit": {
  "data": {
   "lineno": 934,
   "symbols_in_volume": [
    "numpy.linspace",
    "numpy.random.RandomState",
    "sklearn.linear_model.tests.test_sgd.X",
    "sklearn.utils.testing.assert_greater"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.LabelEncoder": {
  "data": {
   "shadows": "sklearn.preprocessing.LabelEncoder"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sgd.MinMaxScaler": {
  "data": {
   "shadows": "sklearn.preprocessing.MinMaxScaler"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sgd.SGDClassifier": {
  "data": {
   "shadows": "sklearn.linear_model.SGDClassifier"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sgd.SGDRegressor": {
  "data": {
   "shadows": "sklearn.linear_model.SGDRegressor"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sgd.SparseSGDClassifier": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "sklearn.linear_model.SGDClassifier"
   ]
  },
  "type": "class"
 },
 "sklearn.linear_model.tests.test_sgd.SparseSGDClassifier.decision_function": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "scipy.sparse.csr_matrix",
    "sklearn.linear_model.tests.test_sgd.SparseSGDClassifier",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.SparseSGDClassifier.fit": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "scipy.sparse.csr_matrix",
    "sklearn.linear_model.tests.test_sgd.SparseSGDClassifier",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.SparseSGDClassifier.partial_fit": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "scipy.sparse.csr_matrix",
    "sklearn.linear_model.tests.test_sgd.SparseSGDClassifier",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.SparseSGDClassifier.predict_proba": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "scipy.sparse.csr_matrix",
    "sklearn.linear_model.tests.test_sgd.SparseSGDClassifier",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.SparseSGDClassifierTestCase": {
  "data": {
   "lineno": 825,
   "symbols_in_volume": [
    "sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase",
    "sklearn.linear_model.tests.test_sgd.SparseSGDClassifier"
   ]
  },
  "type": "class"
 },
 "sklearn.linear_model.tests.test_sgd.SparseSGDRegressor": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "sklearn.linear_model.SGDRegressor"
   ]
  },
  "type": "class"
 },
 "sklearn.linear_model.tests.test_sgd.SparseSGDRegressor.decision_function": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "scipy.sparse.csr_matrix",
    "sklearn.linear_model.SGDRegressor.decision_function"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.SparseSGDRegressor.fit": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "scipy.sparse.csr_matrix",
    "sklearn.linear_model.SGDRegressor.fit"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.SparseSGDRegressor.partial_fit": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "scipy.sparse.csr_matrix",
    "sklearn.linear_model.SGDRegressor.partial_fit"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.SparseSGDRegressorTestCase": {
  "data": {
   "lineno": 1082,
   "symbols_in_volume": [
    "sklearn.linear_model.tests.test_sgd.DenseSGDRegressorTestCase",
    "sklearn.linear_model.tests.test_sgd.SparseSGDRegressor"
   ]
  },
  "type": "class"
 },
 "sklearn.linear_model.tests.test_sgd.T": {
  "data": {
   "lineno": 64
  },
  "type": "constant"
 },
 "sklearn.linear_model.tests.test_sgd.T2": {
  "data": {
   "lineno": 72
  },
  "type": "constant"
 },
 "sklearn.linear_model.tests.test_sgd.X": {
  "data": {
   "lineno": 62
  },
  "type": "constant"
 },
 "sklearn.linear_model.tests.test_sgd.X2": {
  "data": {
   "lineno": 68
  },
  "type": "constant"
 },
 "sklearn.linear_model.tests.test_sgd.X3": {
  "data": {
   "lineno": 76
  },
  "type": "constant"
 },
 "sklearn.linear_model.tests.test_sgd.X4": {
  "data": {
   "lineno": 83
  },
  "type": "constant"
 },
 "sklearn.linear_model.tests.test_sgd.X5": {
  "data": {
   "lineno": 92
  },
  "type": "constant"
 },
 "sklearn.linear_model.tests.test_sgd.Y": {
  "data": {
   "lineno": 63
  },
  "type": "constant"
 },
 "sklearn.linear_model.tests.test_sgd.Y2": {
  "data": {
   "lineno": 71
  },
  "type": "constant"
 },
 "sklearn.linear_model.tests.test_sgd.Y3": {
  "data": {
   "lineno": 80
  },
  "type": "constant"
 },
 "sklearn.linear_model.tests.test_sgd.Y4": {
  "data": {
   "lineno": 87
  },
  "type": "constant"
 },
 "sklearn.linear_model.tests.test_sgd.Y5": {
  "data": {
   "lineno": 93
  },
  "type": "constant"
 },
 "sklearn.linear_model.tests.test_sgd.assert_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sgd.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sgd.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sgd.assert_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sgd.assert_false": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_false"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sgd.assert_greater": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_greater"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sgd.assert_less": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_less"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sgd.assert_raises": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sgd.assert_raises_regexp": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises_regexp"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sgd.assert_true": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_true"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sgd.clone": {
  "data": {
   "shadows": "sklearn.base.clone"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sgd.datasets": {
  "data": {
   "shadows": "sklearn.datasets"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sgd.ignore_warnings": {
  "data": {
   "shadows": "sklearn.utils.testing.ignore_warnings"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sgd.iris": {
  "data": {
   "lineno": 89
  },
  "type": "constant"
 },
 "sklearn.linear_model.tests.test_sgd.linear_model": {
  "data": {
   "shadows": "sklearn.linear_model"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sgd.metrics": {
  "data": {
   "shadows": "sklearn.metrics"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sgd.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sgd.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sgd.raises": {
  "data": {
   "shadows": "sklearn.utils.testing.raises"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sgd.scale": {
  "data": {
   "shadows": "sklearn.preprocessing.scale"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sgd.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sgd.test_l1_ratio": {
  "data": {
   "lineno": 1088,
   "symbols_in_volume": [
    "sklearn.datasets.make_classification",
    "sklearn.linear_model.SGDClassifier",
    "sklearn.linear_model.tests.test_sgd.X",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_large_regularization": {
  "data": {
   "lineno": 1153,
   "symbols_in_volume": [
    "numpy.errstate",
    "numpy.zeros_like",
    "sklearn.linear_model.SGDClassifier",
    "sklearn.linear_model.tests.test_sgd.iris",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_numerical_stability_large_gradient": {
  "data": {
   "lineno": 1142,
   "symbols_in_volume": [
    "numpy.errstate",
    "numpy.isfinite",
    "sklearn.linear_model.SGDClassifier",
    "sklearn.linear_model.tests.test_sgd.iris",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_underflow_or_overlow": {
  "data": {
   "lineno": 1107,
   "symbols_in_volume": [
    "ValueError",
    "numpy.dot",
    "numpy.errstate",
    "numpy.int32",
    "numpy.isfinite",
    "numpy.random.RandomState",
    "numpy.unique",
    "sklearn.linear_model.SGDClassifier",
    "sklearn.linear_model.tests.test_sgd.X",
    "sklearn.preprocessing.MinMaxScaler",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_raises_regexp",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.true_result": {
  "data": {
   "lineno": 65
  },
  "type": "constant"
 },
 "sklearn.linear_model.tests.test_sgd.true_result2": {
  "data": {
   "lineno": 73
  },
  "type": "constant"
 },
 "sklearn.linear_model.tests.test_sgd.true_result5": {
  "data": {
   "lineno": 94
  },
  "type": "constant"
 },
 "sklearn.linear_model.tests.test_sgd.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sparse_coordinate_descent": {
  "data": {},
  "type": "module"
 },
 "sklearn.linear_model.tests.test_sparse_coordinate_descent.ElasticNet": {
  "data": {
   "shadows": "sklearn.linear_model.coordinate_descent.ElasticNet"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sparse_coordinate_descent.ElasticNetCV": {
  "data": {
   "shadows": "sklearn.linear_model.coordinate_descent.ElasticNetCV"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sparse_coordinate_descent.Lasso": {
  "data": {
   "shadows": "sklearn.linear_model.coordinate_descent.Lasso"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sparse_coordinate_descent.LassoCV": {
  "data": {
   "shadows": "sklearn.linear_model.coordinate_descent.LassoCV"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sparse_coordinate_descent._test_sparse_enet_not_as_toy_dataset": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "numpy.sum",
    "sklearn.linear_model.coordinate_descent.ElasticNet",
    "sklearn.linear_model.tests.test_sparse_coordinate_descent.make_sparse_data",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_greater",
    "sklearn.utils.testing.assert_less"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sparse_coordinate_descent.assert_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sparse_coordinate_descent.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sparse_coordinate_descent.assert_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sparse_coordinate_descent.assert_greater": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_greater"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sparse_coordinate_descent.assert_less": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_less"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sparse_coordinate_descent.assert_true": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_true"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sparse_coordinate_descent.ignore_warnings": {
  "data": {
   "shadows": "sklearn.utils.testing.ignore_warnings"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sparse_coordinate_descent.make_sparse_data": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.dot",
    "numpy.random.RandomState",
    "numpy.ravel",
    "scipy.sparse.csc_matrix"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sparse_coordinate_descent.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sparse_coordinate_descent.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_sparse_coordinate_descent.test_enet_multitarget": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "range",
    "sklearn.linear_model.coordinate_descent.ElasticNet",
    "sklearn.linear_model.tests.test_sparse_coordinate_descent.make_sparse_data",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sparse_coordinate_descent.test_enet_toy_explicit_sparse_input": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "f",
    "scipy.sparse.lil_matrix",
    "sklearn.linear_model.coordinate_descent.ElasticNet",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sparse_coordinate_descent.test_enet_toy_list_input": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "numpy.array",
    "scipy.sparse.csc_matrix",
    "sklearn.linear_model.coordinate_descent.ElasticNet",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sparse_coordinate_descent.test_lasso_zero": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "numpy.array",
    "scipy.sparse.csc_matrix",
    "sklearn.linear_model.coordinate_descent.Lasso",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sparse_coordinate_descent.test_normalize_option": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "scipy.sparse.csc_matrix",
    "sklearn.linear_model.coordinate_descent.ElasticNet",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sparse_coordinate_descent.test_path_parameters": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "len",
    "sklearn.linear_model.coordinate_descent.ElasticNetCV",
    "sklearn.linear_model.tests.test_sparse_coordinate_descent.make_sparse_data",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sparse_coordinate_descent.test_same_output_sparse_dense_lasso_and_enet_cv": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "sklearn.linear_model.coordinate_descent.ElasticNetCV",
    "sklearn.linear_model.coordinate_descent.LassoCV",
    "sklearn.linear_model.tests.test_sparse_coordinate_descent.make_sparse_data",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sparse_coordinate_descent.test_sparse_coef": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "scipy.sparse.isspmatrix",
    "sklearn.linear_model.coordinate_descent.ElasticNet",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sparse_coordinate_descent.test_sparse_enet_not_as_toy_dataset": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "sklearn.linear_model.tests.test_sparse_coordinate_descent._test_sparse_enet_not_as_toy_dataset"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sparse_coordinate_descent.test_sparse_lasso_not_as_toy_dataset": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "numpy.sum",
    "sklearn.linear_model.coordinate_descent.Lasso",
    "sklearn.linear_model.tests.test_sparse_coordinate_descent.make_sparse_data",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_greater"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_theil_sen": {
  "data": {},
  "type": "module"
 },
 "sklearn.linear_model.tests.test_theil_sen.ConvergenceWarning": {
  "data": {
   "shadows": "sklearn.utils.ConvergenceWarning"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_theil_sen.LinearRegression": {
  "data": {
   "shadows": "sklearn.linear_model.LinearRegression"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_theil_sen.TheilSenRegressor": {
  "data": {
   "shadows": "sklearn.linear_model.TheilSenRegressor"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_theil_sen._breakdown_point": {
  "data": {
   "shadows": "sklearn.linear_model.theil_sen._breakdown_point"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_theil_sen._modified_weiszfeld_step": {
  "data": {
   "shadows": "sklearn.linear_model.theil_sen._modified_weiszfeld_step"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_theil_sen._spatial_median": {
  "data": {
   "shadows": "sklearn.linear_model.theil_sen._spatial_median"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_theil_sen.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_theil_sen.assert_almost_equal": {
  "data": {
   "shadows": "nose.tools.assert_almost_equal"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_theil_sen.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_theil_sen.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_theil_sen.assert_array_less": {
  "data": {
   "shadows": "numpy.testing.assert_array_less"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_theil_sen.assert_greater": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_greater"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_theil_sen.assert_less": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_less"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_theil_sen.assert_warns": {
  "data": {
   "shadows": "numpy.testing.assert_warns"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_theil_sen.contextmanager": {
  "data": {
   "shadows": "contextlib.contextmanager"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_theil_sen.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_theil_sen.fmin_bfgs": {
  "data": {
   "shadows": "scipy.optimize.fmin_bfgs"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_theil_sen.gen_toy_problem_1d": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "numpy.newaxis",
    "numpy.random.RandomState"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_theil_sen.gen_toy_problem_2d": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.dot",
    "numpy.random.RandomState"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_theil_sen.gen_toy_problem_4d": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.dot",
    "numpy.random.RandomState"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_theil_sen.no_stdout_stderr": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "contextlib.contextmanager",
    "open",
    "sklearn.linear_model.tests.test_theil_sen.os",
    "sklearn.linear_model.tests.test_theil_sen.sys"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_theil_sen.norm": {
  "data": {
   "shadows": "scipy.linalg.norm"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_theil_sen.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_theil_sen.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_theil_sen.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_theil_sen.raises": {
  "data": {
   "shadows": "nose.tools.raises"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_theil_sen.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "sklearn.linear_model.tests.test_theil_sen.test_calc_breakdown_point": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.sqrt",
    "sklearn.linear_model.theil_sen._breakdown_point",
    "sklearn.utils.testing.assert_less"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_theil_sen.test_checksubparams_n_subsamples_if_less_samples_than_features": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "ValueError",
    "nose.tools.raises",
    "numpy.random.RandomState",
    "sklearn.linear_model.TheilSenRegressor"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_theil_sen.test_checksubparams_negative_subpopulation": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "ValueError",
    "nose.tools.raises",
    "sklearn.linear_model.TheilSenRegressor",
    "sklearn.linear_model.tests.test_theil_sen.gen_toy_problem_1d"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_theil_sen.test_checksubparams_too_few_subsamples": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "ValueError",
    "nose.tools.raises",
    "sklearn.linear_model.TheilSenRegressor",
    "sklearn.linear_model.tests.test_theil_sen.gen_toy_problem_1d"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_theil_sen.test_checksubparams_too_many_subsamples": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "ValueError",
    "nose.tools.raises",
    "sklearn.linear_model.TheilSenRegressor",
    "sklearn.linear_model.tests.test_theil_sen.gen_toy_problem_1d"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_theil_sen.test_less_samples_than_features": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "numpy.testing.assert_array_almost_equal",
    "sklearn.linear_model.LinearRegression",
    "sklearn.linear_model.TheilSenRegressor"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_theil_sen.test_modweiszfeld_step_1d": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_array_less",
    "sklearn.linear_model.theil_sen._modified_weiszfeld_step"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_theil_sen.test_modweiszfeld_step_2d": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.assert_array_almost_equal",
    "sklearn.linear_model.theil_sen._modified_weiszfeld_step"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_theil_sen.test_spatial_median_1d": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.median",
    "numpy.random.RandomState",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_array_equal",
    "sklearn.linear_model.theil_sen._spatial_median"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_theil_sen.test_spatial_median_2d": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_warns",
    "scipy.optimize.fmin_bfgs",
    "sklearn.linear_model.theil_sen._spatial_median",
    "sklearn.utils.ConvergenceWarning"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_theil_sen.test_spatial_median_2d.cost_func": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.sum",
    "scipy.linalg.norm"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_theil_sen.test_subpopulation": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "numpy.testing.assert_array_almost_equal",
    "sklearn.linear_model.TheilSenRegressor",
    "sklearn.linear_model.tests.test_theil_sen.gen_toy_problem_4d"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_theil_sen.test_subsamples": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "numpy.testing.assert_array_almost_equal",
    "sklearn.linear_model.LinearRegression",
    "sklearn.linear_model.TheilSenRegressor",
    "sklearn.linear_model.tests.test_theil_sen.gen_toy_problem_4d"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_theil_sen.test_theil_sen_1d": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.testing.assert_array_almost_equal",
    "sklearn.linear_model.LinearRegression",
    "sklearn.linear_model.TheilSenRegressor",
    "sklearn.linear_model.tests.test_theil_sen.gen_toy_problem_1d",
    "sklearn.utils.testing.assert_greater"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_theil_sen.test_theil_sen_1d_no_intercept": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "nose.tools.assert_almost_equal",
    "numpy.abs",
    "numpy.testing.assert_array_almost_equal",
    "sklearn.linear_model.LinearRegression",
    "sklearn.linear_model.TheilSenRegressor",
    "sklearn.linear_model.tests.test_theil_sen.gen_toy_problem_1d",
    "sklearn.utils.testing.assert_greater"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_theil_sen.test_theil_sen_2d": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "numpy.testing.assert_array_almost_equal",
    "scipy.linalg.norm",
    "sklearn.linear_model.LinearRegression",
    "sklearn.linear_model.TheilSenRegressor",
    "sklearn.linear_model.tests.test_theil_sen.gen_toy_problem_2d",
    "sklearn.utils.testing.assert_greater"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_theil_sen.test_theil_sen_parallel": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "numpy.testing.assert_array_almost_equal",
    "scipy.linalg.norm",
    "sklearn.linear_model.LinearRegression",
    "sklearn.linear_model.TheilSenRegressor",
    "sklearn.linear_model.tests.test_theil_sen.gen_toy_problem_2d",
    "sklearn.utils.testing.assert_greater"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.tests.test_theil_sen.test_verbosity": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "sklearn.linear_model.TheilSenRegressor",
    "sklearn.linear_model.tests.test_theil_sen.gen_toy_problem_1d",
    "sklearn.linear_model.tests.test_theil_sen.no_stdout_stderr"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.theil_sen": {
  "data": {
   "symbols_in_volume": [
    "numpy.double",
    "numpy.finfo"
   ]
  },
  "type": "module"
 },
 "sklearn.linear_model.theil_sen.TheilSenRegressor": {
  "data": {
   "lineno": 198
  },
  "type": "class"
 },
 "sklearn.linear_model.theil_sen.TheilSenRegressor.__init__": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.theil_sen.TheilSenRegressor._check_subparams": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "max",
    "min",
    "numpy.rint",
    "scipy.special.binom"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.theil_sen.TheilSenRegressor.fit": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": [
    "Parallel",
    "_get_n_jobs",
    "check_X_y",
    "check_random_state",
    "choice",
    "delayed",
    "int",
    "itertools.combinations",
    "list",
    "numpy.array_split",
    "numpy.rint",
    "numpy.vstack",
    "print",
    "scipy.special.binom",
    "sklearn.linear_model.theil_sen._breakdown_point",
    "sklearn.linear_model.theil_sen._lstsq",
    "sklearn.linear_model.theil_sen._spatial_median"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.theil_sen._EPSILON": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "sklearn.linear_model.theil_sen._breakdown_point": {
  "data": {
   "lineno": 133
  },
  "type": "function"
 },
 "sklearn.linear_model.theil_sen._lstsq": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "enumerate",
    "int",
    "lstsq",
    "max",
    "numpy.empty",
    "numpy.ones",
    "numpy.zeros",
    "scipy.linalg.lapack.get_lapack_funcs"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.theil_sen._modified_weiszfeld_step": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "int",
    "max",
    "min",
    "numpy.newaxis",
    "numpy.sqrt",
    "numpy.sum",
    "scipy.linalg.norm",
    "sklearn.linear_model.theil_sen._EPSILON"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.theil_sen._spatial_median": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "numpy.mean",
    "numpy.median",
    "numpy.sum",
    "sklearn.linear_model.theil_sen._modified_weiszfeld_step",
    "sklearn.linear_model.theil_sen.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.linear_model.theil_sen.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "sklearn.linear_model.theil_sen.binom": {
  "data": {
   "shadows": "scipy.special.binom"
  },
  "type": "import"
 },
 "sklearn.linear_model.theil_sen.combinations": {
  "data": {
   "shadows": "itertools.combinations"
  },
  "type": "import"
 },
 "sklearn.linear_model.theil_sen.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sklearn.linear_model.theil_sen.get_lapack_funcs": {
  "data": {
   "shadows": "scipy.linalg.lapack.get_lapack_funcs"
  },
  "type": "import"
 },
 "sklearn.linear_model.theil_sen.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "sklearn.linear_model.theil_sen.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.linear_model.theil_sen.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "sklearn.linear_model.theil_sen.range": {
  "data": {
   "shadows": "xrange"
  },
  "type": "import"
 },
 "sklearn.linear_model.theil_sen.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.manifold": {
  "data": {},
  "type": "module"
 },
 "sklearn.manifold.__all__": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "sklearn.manifold.isomap": {
  "data": {},
  "type": "module"
 },
 "sklearn.manifold.isomap.Isomap": {
  "data": {
   "lineno": 15
  },
  "type": "class"
 },
 "sklearn.manifold.isomap.Isomap.__init__": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "NearestNeighbors"
   ]
  },
  "type": "function"
 },
 "sklearn.manifold.isomap.Isomap._fit_transform": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "KernelPCA",
    "check_array",
    "graph_shortest_path",
    "kneighbors_graph"
   ]
  },
  "type": "function"
 },
 "sklearn.manifold.isomap.Isomap.fit": {
  "data": {
   "lineno": 144
  },
  "type": "function"
 },
 "sklearn.manifold.isomap.Isomap.fit_transform": {
  "data": {
   "lineno": 161
  },
  "type": "function"
 },
 "sklearn.manifold.isomap.Isomap.reconstruction_error": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "KernelCenterer",
    "numpy.sqrt",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "sklearn.manifold.isomap.Isomap.transform": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "check_array",
    "numpy.min",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "sklearn.manifold.isomap.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.manifold.locally_linear": {
  "data": {},
  "type": "module"
 },
 "sklearn.manifold.locally_linear.LocallyLinearEmbedding": {
  "data": {
   "lineno": 499
  },
  "type": "class"
 },
 "sklearn.manifold.locally_linear.LocallyLinearEmbedding.__init__": {
  "data": {
   "lineno": 593
  },
  "type": "function"
 },
 "sklearn.manifold.locally_linear.LocallyLinearEmbedding._fit_transform": {
  "data": {
   "lineno": 610,
   "symbols_in_volume": [
    "NearestNeighbors",
    "check_array",
    "check_random_state",
    "sklearn.manifold.locally_linear.locally_linear_embedding"
   ]
  },
  "type": "function"
 },
 "sklearn.manifold.locally_linear.LocallyLinearEmbedding.fit": {
  "data": {
   "lineno": 625
  },
  "type": "function"
 },
 "sklearn.manifold.locally_linear.LocallyLinearEmbedding.fit_transform": {
  "data": {
   "lineno": 640
  },
  "type": "function"
 },
 "sklearn.manifold.locally_linear.LocallyLinearEmbedding.transform": {
  "data": {
   "lineno": 655,
   "symbols_in_volume": [
    "check_array",
    "check_is_fitted",
    "numpy.dot",
    "numpy.empty",
    "range",
    "sklearn.manifold.locally_linear.barycenter_weights"
   ]
  },
  "type": "function"
 },
 "sklearn.manifold.locally_linear.barycenter_kneighbors_graph": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "NearestNeighbors",
    "numpy.arange",
    "scipy.sparse.csr_matrix",
    "sklearn.manifold.locally_linear.barycenter_weights"
   ]
  },
  "type": "function"
 },
 "sklearn.manifold.locally_linear.barycenter_weights": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "check_array",
    "enumerate",
    "numpy.dot",
    "numpy.empty",
    "numpy.ones",
    "numpy.sum",
    "numpy.trace",
    "scipy.linalg.solve"
   ]
  },
  "type": "function"
 },
 "sklearn.manifold.locally_linear.csr_matrix": {
  "data": {
   "shadows": "scipy.sparse.csr_matrix"
  },
  "type": "import"
 },
 "sklearn.manifold.locally_linear.eigh": {
  "data": {
   "shadows": "scipy.linalg.eigh"
  },
  "type": "import"
 },
 "sklearn.manifold.locally_linear.eye": {
  "data": {
   "shadows": "scipy.sparse.eye"
  },
  "type": "import"
 },
 "sklearn.manifold.locally_linear.locally_linear_embedding": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "NearestNeighbors",
    "ValueError",
    "abs",
    "int",
    "min",
    "numpy.cumsum",
    "numpy.dot",
    "numpy.empty",
    "numpy.float",
    "numpy.linalg.norm",
    "numpy.median",
    "numpy.meshgrid",
    "numpy.ones",
    "numpy.outer",
    "numpy.searchsorted",
    "numpy.sqrt",
    "numpy.where",
    "numpy.zeros",
    "range",
    "scipy.linalg.eigh",
    "scipy.linalg.qr",
    "scipy.linalg.svd",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.eye",
    "sklearn.manifold.locally_linear.barycenter_kneighbors_graph",
    "sklearn.manifold.locally_linear.null_space"
   ]
  },
  "type": "function"
 },
 "sklearn.manifold.locally_linear.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.manifold.locally_linear.null_space": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "check_random_state",
    "eigsh",
    "hasattr",
    "numpy.abs",
    "numpy.argsort",
    "numpy.sum",
    "scipy.linalg.eigh"
   ]
  },
  "type": "function"
 },
 "sklearn.manifold.locally_linear.qr": {
  "data": {
   "shadows": "scipy.linalg.qr"
  },
  "type": "import"
 },
 "sklearn.manifold.locally_linear.solve": {
  "data": {
   "shadows": "scipy.linalg.solve"
  },
  "type": "import"
 },
 "sklearn.manifold.locally_linear.svd": {
  "data": {
   "shadows": "scipy.linalg.svd"
  },
  "type": "import"
 },
 "sklearn.manifold.mds": {
  "data": {},
  "type": "module"
 },
 "sklearn.manifold.mds.MDS": {
  "data": {
   "lineno": 274
  },
  "type": "class"
 },
 "sklearn.manifold.mds.MDS.__init__": {
  "data": {
   "lineno": 345
  },
  "type": "function"
 },
 "sklearn.manifold.mds.MDS._pairwise": {
  "data": {
   "lineno": 358,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.manifold.mds.MDS.fit": {
  "data": {
   "lineno": 362
  },
  "type": "function"
 },
 "sklearn.manifold.mds.MDS.fit_transform": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": [
    "ValueError",
    "check_array",
    "euclidean_distances",
    "sklearn.manifold.mds.smacof",
    "sklearn.manifold.mds.warnings",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.manifold.mds._smacof_single": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "IsotonicRegression",
    "ValueError",
    "check_random_state",
    "check_symmetric",
    "euclidean_distances",
    "len",
    "numpy.arange",
    "numpy.dot",
    "numpy.sqrt",
    "numpy.tri",
    "print",
    "range"
   ]
  },
  "type": "function"
 },
 "sklearn.manifold.mds.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.manifold.mds.smacof": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "Parallel",
    "check_array",
    "check_random_state",
    "delayed",
    "hasattr",
    "max",
    "numpy.argmin",
    "numpy.asarray",
    "numpy.iinfo",
    "numpy.int32",
    "range",
    "sklearn.manifold.mds._smacof_single",
    "sklearn.manifold.mds.warnings",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.manifold.mds.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.manifold.setup": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.distutils.core.setup",
    "sklearn.manifold.setup.configuration"
   ]
  },
  "type": "module"
 },
 "sklearn.manifold.setup.Configuration": {
  "data": {
   "shadows": "numpy.distutils.misc_util.Configuration"
  },
  "type": "import"
 },
 "sklearn.manifold.setup.configuration": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "numpy.distutils.misc_util.Configuration",
    "os.path.join",
    "sklearn._build_utils.get_blas_info",
    "sklearn.manifold.setup.numpy",
    "sklearn.manifold.setup.os"
   ]
  },
  "type": "function"
 },
 "sklearn.manifold.setup.get_blas_info": {
  "data": {
   "shadows": "sklearn._build_utils.get_blas_info"
  },
  "type": "import"
 },
 "sklearn.manifold.setup.join": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "sklearn.manifold.setup.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.manifold.setup.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "sklearn.manifold.setup.setup": {
  "data": {
   "shadows": "numpy.distutils.core.setup"
  },
  "type": "import"
 },
 "sklearn.manifold.spectral_embedding_": {
  "data": {},
  "type": "module"
 },
 "sklearn.manifold.spectral_embedding_.SpectralEmbedding": {
  "data": {
   "lineno": 313
  },
  "type": "class"
 },
 "sklearn.manifold.spectral_embedding_.SpectralEmbedding.__init__": {
  "data": {
   "lineno": 377
  },
  "type": "function"
 },
 "sklearn.manifold.spectral_embedding_.SpectralEmbedding._get_affinity_matrix": {
  "data": {
   "lineno": 391,
   "symbols_in_volume": [
    "int",
    "kneighbors_graph",
    "max",
    "rbf_kernel",
    "scipy.sparse.issparse",
    "sklearn.manifold.spectral_embedding_.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.manifold.spectral_embedding_.SpectralEmbedding._pairwise": {
  "data": {
   "lineno": 387,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.manifold.spectral_embedding_.SpectralEmbedding.fit": {
  "data": {
   "lineno": 435,
   "symbols_in_volume": [
    "ValueError",
    "callable",
    "check_array",
    "check_random_state",
    "isinstance",
    "set",
    "sklearn.manifold.spectral_embedding_.spectral_embedding"
   ]
  },
  "type": "function"
 },
 "sklearn.manifold.spectral_embedding_.SpectralEmbedding.fit_transform": {
  "data": {
   "lineno": 475
  },
  "type": "function"
 },
 "sklearn.manifold.spectral_embedding_._graph_connected_component": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "numpy.bool",
    "numpy.where",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "sklearn.manifold.spectral_embedding_._graph_is_connected": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "connected_components",
    "scipy.sparse.isspmatrix",
    "sklearn.manifold.spectral_embedding_._graph_connected_component"
   ]
  },
  "type": "function"
 },
 "sklearn.manifold.spectral_embedding_._set_diag": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "numpy.unique",
    "scipy.sparse.isspmatrix"
   ]
  },
  "type": "function"
 },
 "sklearn.manifold.spectral_embedding_.eigh": {
  "data": {
   "shadows": "scipy.linalg.eigh"
  },
  "type": "import"
 },
 "sklearn.manifold.spectral_embedding_.lobpcg": {
  "data": {
   "shadows": "scipy.sparse.linalg.lobpcg"
  },
  "type": "import"
 },
 "sklearn.manifold.spectral_embedding_.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.manifold.spectral_embedding_.smoothed_aggregation_solver": {
  "data": {
   "shadows": "pyamg.smoothed_aggregation_solver"
  },
  "type": "import"
 },
 "sklearn.manifold.spectral_embedding_.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.manifold.spectral_embedding_.spectral_embedding": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "ImportError",
    "RuntimeError",
    "ValueError",
    "_deterministic_vector_sign_flip",
    "check_array",
    "check_random_state",
    "check_symmetric",
    "eigsh",
    "graph_laplacian",
    "numpy.float64",
    "pyamg.smoothed_aggregation_solver",
    "scipy.linalg.eigh",
    "scipy.sparse.issparse",
    "scipy.sparse.isspmatrix",
    "scipy.sparse.linalg.lobpcg",
    "sklearn.manifold.spectral_embedding_._graph_is_connected",
    "sklearn.manifold.spectral_embedding_._set_diag",
    "sklearn.manifold.spectral_embedding_.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.manifold.spectral_embedding_.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.manifold.t_sne": {
  "data": {
   "symbols_in_volume": [
    "numpy.double",
    "numpy.finfo"
   ]
  },
  "type": "module"
 },
 "sklearn.manifold.t_sne.MACHINE_EPSILON": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "sklearn.manifold.t_sne.TSNE": {
  "data": {
   "lineno": 496
  },
  "type": "class"
 },
 "sklearn.manifold.t_sne.TSNE.__init__": {
  "data": {
   "lineno": 638,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "sklearn.manifold.t_sne.TSNE._check_fitted": {
  "data": {
   "lineno": 884,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "sklearn.manifold.t_sne.TSNE._fit": {
  "data": {
   "lineno": 661,
   "symbols_in_volume": [
    "BallTree",
    "RandomizedPCA",
    "TypeError",
    "ValueError",
    "check_array",
    "check_random_state",
    "int",
    "isinstance",
    "max",
    "min",
    "numpy.all",
    "numpy.argsort",
    "numpy.float32",
    "numpy.float64",
    "numpy.isfinite",
    "numpy.ndarray",
    "pairwise_distances",
    "print",
    "scipy.sparse.issparse",
    "sklearn.manifold.t_sne._joint_probabilities",
    "sklearn.manifold.t_sne._joint_probabilities_nn"
   ]
  },
  "type": "function"
 },
 "sklearn.manifold.t_sne.TSNE._tsne": {
  "data": {
   "lineno": 779,
   "symbols_in_volume": [
    "dict",
    "numpy.float32",
    "numpy.int64",
    "objective_error",
    "print",
    "scipy.spatial.distance.squareform",
    "sklearn.manifold.t_sne._gradient_descent",
    "sklearn.manifold.t_sne._kl_divergence",
    "sklearn.manifold.t_sne._kl_divergence_bh",
    "sklearn.manifold.t_sne._kl_divergence_error"
   ]
  },
  "type": "function"
 },
 "sklearn.manifold.t_sne.TSNE.fit": {
  "data": {
   "lineno": 870
  },
  "type": "function"
 },
 "sklearn.manifold.t_sne.TSNE.fit_transform": {
  "data": {
   "lineno": 851
  },
  "type": "function"
 },
 "sklearn.manifold.t_sne._gradient_descent": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.clip",
    "numpy.finfo",
    "numpy.float",
    "numpy.inf",
    "numpy.invert",
    "numpy.ones_like",
    "numpy.zeros_like",
    "objective",
    "objective_error",
    "print",
    "range",
    "scipy.linalg.norm"
   ]
  },
  "type": "function"
 },
 "sklearn.manifold.t_sne._joint_probabilities": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "astype",
    "numpy.float32",
    "numpy.maximum",
    "numpy.sum",
    "scipy.spatial.distance.squareform",
    "sklearn.manifold.t_sne.MACHINE_EPSILON"
   ]
  },
  "type": "function"
 },
 "sklearn.manifold.t_sne._joint_probabilities_nn": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "astype",
    "numpy.abs",
    "numpy.all",
    "numpy.float32",
    "numpy.int64",
    "numpy.isfinite",
    "numpy.maximum",
    "numpy.sum",
    "scipy.spatial.distance.squareform",
    "sklearn.manifold.t_sne.MACHINE_EPSILON"
   ]
  },
  "type": "function"
 },
 "sklearn.manifold.t_sne._kl_divergence": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "_ravel",
    "numpy.dot",
    "numpy.log",
    "numpy.maximum",
    "numpy.ndarray",
    "numpy.sum",
    "range",
    "scipy.spatial.distance.pdist",
    "scipy.spatial.distance.squareform",
    "sklearn.manifold.t_sne.MACHINE_EPSILON"
   ]
  },
  "type": "function"
 },
 "sklearn.manifold.t_sne._kl_divergence_bh": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "astype",
    "len",
    "numpy.float32",
    "numpy.int64",
    "numpy.zeros",
    "scipy.spatial.distance.squareform"
   ]
  },
  "type": "function"
 },
 "sklearn.manifold.t_sne._kl_divergence_error": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "len",
    "numpy.dot",
    "numpy.log",
    "numpy.maximum",
    "numpy.sum",
    "scipy.spatial.distance.pdist",
    "scipy.spatial.distance.squareform",
    "sklearn.manifold.t_sne.MACHINE_EPSILON"
   ]
  },
  "type": "function"
 },
 "sklearn.manifold.t_sne.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "sklearn.manifold.t_sne.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.manifold.t_sne.pdist": {
  "data": {
   "shadows": "scipy.spatial.distance.pdist"
  },
  "type": "import"
 },
 "sklearn.manifold.t_sne.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.manifold.t_sne.squareform": {
  "data": {
   "shadows": "scipy.spatial.distance.squareform"
  },
  "type": "import"
 },
 "sklearn.manifold.t_sne.trustworthiness": {
  "data": {
   "lineno": 434,
   "symbols_in_volume": [
    "numpy.argsort",
    "numpy.sum",
    "numpy.where",
    "numpy.zeros",
    "pairwise_distances",
    "range"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics": {
  "data": {},
  "type": "module"
 },
 "sklearn.metrics.__all__": {
  "data": {
   "lineno": 62
  },
  "type": "constant"
 },
 "sklearn.metrics.base": {
  "data": {},
  "type": "module"
 },
 "sklearn.metrics.base.UndefinedMetricWarning": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "UserWarning"
   ]
  },
  "type": "class"
 },
 "sklearn.metrics.base._average_binary_score": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "ValueError",
    "binary_metric",
    "check_array",
    "check_consistent_length",
    "numpy.average",
    "numpy.multiply",
    "numpy.repeat",
    "numpy.reshape",
    "numpy.sum",
    "numpy.zeros",
    "range",
    "type_of_target"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.base.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sklearn.metrics.base.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.metrics.classification": {
  "data": {},
  "type": "module"
 },
 "sklearn.metrics.classification._check_binary_probabilistic_predictions": {
  "data": {
   "lineno": 1700,
   "symbols_in_volume": [
    "ValueError",
    "check_consistent_length",
    "label_binarize",
    "len",
    "numpy.unique"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.classification._check_targets": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "ValueError",
    "check_consistent_length",
    "column_or_1d",
    "len",
    "scipy.sparse.csr_matrix",
    "set",
    "type_of_target"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.classification._prf_divide": {
  "data": {
   "lineno": 760,
   "symbols_in_volume": [
    "len",
    "numpy.any",
    "sklearn.metrics.classification.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.classification._weighted_sum": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "numpy.average",
    "numpy.dot"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.classification.accuracy_score": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "count_nonzero",
    "sklearn.metrics.classification._check_targets",
    "sklearn.metrics.classification._weighted_sum"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.classification.brier_score_loss": {
  "data": {
   "lineno": 1719,
   "symbols_in_volume": [
    "column_or_1d",
    "int",
    "numpy.array",
    "numpy.average",
    "sklearn.metrics.classification._check_binary_probabilistic_predictions"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.classification.classification_report": {
  "data": {
   "lineno": 1308,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "max",
    "numpy.asarray",
    "numpy.average",
    "numpy.sum",
    "sklearn.metrics.classification.precision_recall_fscore_support",
    "tuple",
    "unique_labels"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.classification.cohen_kappa_score": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "float",
    "numpy.dot",
    "numpy.trace",
    "sklearn.metrics.classification.confusion_matrix"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.classification.confusion_matrix": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "enumerate",
    "numpy.array",
    "numpy.asarray",
    "numpy.int",
    "numpy.logical_and",
    "numpy.ones",
    "scipy.sparse.coo_matrix",
    "sklearn.metrics.classification._check_targets",
    "unique_labels"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.classification.coo_matrix": {
  "data": {
   "shadows": "scipy.sparse.coo_matrix"
  },
  "type": "import"
 },
 "sklearn.metrics.classification.csr_matrix": {
  "data": {
   "shadows": "scipy.sparse.csr_matrix"
  },
  "type": "import"
 },
 "sklearn.metrics.classification.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sklearn.metrics.classification.f1_score": {
  "data": {
   "lineno": 538,
   "symbols_in_volume": [
    "sklearn.metrics.classification.fbeta_score"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.classification.fbeta_score": {
  "data": {
   "lineno": 642,
   "symbols_in_volume": [
    "sklearn.metrics.classification.precision_recall_fscore_support"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.classification.hamming_loss": {
  "data": {
   "lineno": 1406,
   "symbols_in_volume": [
    "ValueError",
    "count_nonzero",
    "len",
    "numpy.asarray",
    "scipy.spatial.distance.hamming",
    "sklearn.metrics.classification._check_targets",
    "unique_labels"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.classification.hinge_loss": {
  "data": {
   "lineno": 1574,
   "symbols_in_volume": [
    "LabelBinarizer",
    "LabelEncoder",
    "TypeError",
    "ValueError",
    "bool",
    "check_array",
    "check_consistent_length",
    "column_or_1d",
    "numpy.arange",
    "numpy.average",
    "numpy.max",
    "numpy.ones_like",
    "numpy.ravel",
    "numpy.size",
    "numpy.unique"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.classification.jaccard_similarity_score": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "count_nonzero",
    "numpy.errstate",
    "sklearn.metrics.classification._check_targets",
    "sklearn.metrics.classification._weighted_sum"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.classification.log_loss": {
  "data": {
   "lineno": 1488,
   "symbols_in_volume": [
    "LabelBinarizer",
    "ValueError",
    "check_array",
    "check_consistent_length",
    "isinstance",
    "numpy.append",
    "numpy.clip",
    "numpy.log",
    "numpy.ndarray",
    "numpy.newaxis",
    "sklearn.metrics.classification._weighted_sum"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.classification.matthews_corrcoef": {
  "data": {
   "lineno": 401,
   "symbols_in_volume": [
    "LabelEncoder",
    "ValueError",
    "numpy.corrcoef",
    "numpy.errstate",
    "numpy.hstack",
    "numpy.isnan",
    "sklearn.metrics.classification._check_targets"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.classification.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.metrics.classification.precision_recall_fscore_support": {
  "data": {
   "lineno": 804,
   "symbols_in_volume": [
    "DeprecationWarning",
    "LabelEncoder",
    "ValueError",
    "bincount",
    "count_nonzero",
    "len",
    "numpy.all",
    "numpy.array",
    "numpy.asarray",
    "numpy.average",
    "numpy.errstate",
    "numpy.hstack",
    "numpy.max",
    "numpy.min",
    "numpy.searchsorted",
    "numpy.setdiff1d",
    "numpy.zeros",
    "sklearn.metrics.classification._check_targets",
    "sklearn.metrics.classification._prf_divide",
    "sklearn.metrics.classification.warnings",
    "str",
    "unique_labels"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.classification.precision_score": {
  "data": {
   "lineno": 1104,
   "symbols_in_volume": [
    "sklearn.metrics.classification.precision_recall_fscore_support"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.classification.recall_score": {
  "data": {
   "lineno": 1207,
   "symbols_in_volume": [
    "sklearn.metrics.classification.precision_recall_fscore_support"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.classification.sp_hamming": {
  "data": {
   "shadows": "scipy.spatial.distance.hamming"
  },
  "type": "import"
 },
 "sklearn.metrics.classification.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.metrics.classification.zero_one_loss": {
  "data": {
   "lineno": 469,
   "symbols_in_volume": [
    "_num_samples",
    "numpy.sum",
    "sklearn.metrics.classification.accuracy_score"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.cluster": {
  "data": {},
  "type": "module"
 },
 "sklearn.metrics.cluster.__all__": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "sklearn.metrics.cluster.bicluster": {
  "data": {},
  "type": "module"
 },
 "sklearn.metrics.cluster.bicluster.__all__": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "sklearn.metrics.cluster.bicluster._check_rows_and_columns": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "map",
    "sklearn.utils.validation.check_array",
    "sklearn.utils.validation.check_consistent_length"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.cluster.bicluster._jaccard": {
  "data": {
   "lineno": 21
  },
  "type": "function"
 },
 "sklearn.metrics.cluster.bicluster._pairwise_similarity": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "list",
    "numpy.array",
    "range",
    "similarity",
    "sklearn.metrics.cluster.bicluster._check_rows_and_columns"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.cluster.bicluster.check_array": {
  "data": {
   "shadows": "sklearn.utils.validation.check_array"
  },
  "type": "import"
 },
 "sklearn.metrics.cluster.bicluster.check_consistent_length": {
  "data": {
   "shadows": "sklearn.utils.validation.check_consistent_length"
  },
  "type": "import"
 },
 "sklearn.metrics.cluster.bicluster.consensus_score": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "len",
    "max",
    "similarity",
    "sklearn.metrics.cluster.bicluster._jaccard",
    "sklearn.metrics.cluster.bicluster._pairwise_similarity",
    "sklearn.utils.linear_assignment_.linear_assignment"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.cluster.bicluster.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sklearn.metrics.cluster.bicluster.linear_assignment": {
  "data": {
   "shadows": "sklearn.utils.linear_assignment_.linear_assignment"
  },
  "type": "import"
 },
 "sklearn.metrics.cluster.bicluster.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.metrics.cluster.setup": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.distutils.core.setup",
    "sklearn.metrics.cluster.setup.configuration"
   ]
  },
  "type": "module"
 },
 "sklearn.metrics.cluster.setup.Configuration": {
  "data": {
   "shadows": "numpy.distutils.misc_util.Configuration"
  },
  "type": "import"
 },
 "sklearn.metrics.cluster.setup.configuration": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "numpy.distutils.misc_util.Configuration",
    "sklearn.metrics.cluster.setup.numpy",
    "sklearn.metrics.cluster.setup.os"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.cluster.setup.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.metrics.cluster.setup.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "sklearn.metrics.cluster.setup.setup": {
  "data": {
   "shadows": "numpy.distutils.core.setup"
  },
  "type": "import"
 },
 "sklearn.metrics.cluster.tests": {
  "data": {},
  "type": "module"
 },
 "sklearn.metrics.cluster.tests.test_bicluster": {
  "data": {},
  "type": "module"
 },
 "sklearn.metrics.cluster.tests.test_bicluster._jaccard": {
  "data": {
   "shadows": "sklearn.metrics.cluster.bicluster._jaccard"
  },
  "type": "import"
 },
 "sklearn.metrics.cluster.tests.test_bicluster.assert_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "sklearn.metrics.cluster.tests.test_bicluster.assert_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.metrics.cluster.tests.test_bicluster.consensus_score": {
  "data": {
   "shadows": "sklearn.metrics.consensus_score"
  },
  "type": "import"
 },
 "sklearn.metrics.cluster.tests.test_bicluster.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.metrics.cluster.tests.test_bicluster.test_consensus_score": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "sklearn.metrics.consensus_score",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.cluster.tests.test_bicluster.test_consensus_score_issue2445": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.metrics.consensus_score",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.cluster.tests.test_bicluster.test_jaccard": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.metrics.cluster.bicluster._jaccard",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.cluster.tests.test_supervised": {
  "data": {
   "symbols_in_volume": [
    "sklearn.metrics.cluster.adjusted_mutual_info_score",
    "sklearn.metrics.cluster.adjusted_rand_score",
    "sklearn.metrics.cluster.completeness_score",
    "sklearn.metrics.cluster.homogeneity_score",
    "sklearn.metrics.cluster.normalized_mutual_info_score",
    "sklearn.metrics.cluster.v_measure_score"
   ]
  },
  "type": "module"
 },
 "sklearn.metrics.cluster.tests.test_supervised.adjusted_mutual_info_score": {
  "data": {
   "shadows": "sklearn.metrics.cluster.adjusted_mutual_info_score"
  },
  "type": "import"
 },
 "sklearn.metrics.cluster.tests.test_supervised.adjusted_rand_score": {
  "data": {
   "shadows": "sklearn.metrics.cluster.adjusted_rand_score"
  },
  "type": "import"
 },
 "sklearn.metrics.cluster.tests.test_supervised.assert_almost_equal": {
  "data": {
   "shadows": "nose.tools.assert_almost_equal"
  },
  "type": "import"
 },
 "sklearn.metrics.cluster.tests.test_supervised.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.metrics.cluster.tests.test_supervised.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "sklearn.metrics.cluster.tests.test_supervised.assert_raise_message": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raise_message"
  },
  "type": "import"
 },
 "sklearn.metrics.cluster.tests.test_supervised.completeness_score": {
  "data": {
   "shadows": "sklearn.metrics.cluster.completeness_score"
  },
  "type": "import"
 },
 "sklearn.metrics.cluster.tests.test_supervised.contingency_matrix": {
  "data": {
   "shadows": "sklearn.metrics.cluster.contingency_matrix"
  },
  "type": "import"
 },
 "sklearn.metrics.cluster.tests.test_supervised.entropy": {
  "data": {
   "shadows": "sklearn.metrics.cluster.entropy"
  },
  "type": "import"
 },
 "sklearn.metrics.cluster.tests.test_supervised.expected_mutual_information": {
  "data": {
   "shadows": "sklearn.metrics.cluster.expected_mutual_information"
  },
  "type": "import"
 },
 "sklearn.metrics.cluster.tests.test_supervised.homogeneity_completeness_v_measure": {
  "data": {
   "shadows": "sklearn.metrics.cluster.homogeneity_completeness_v_measure"
  },
  "type": "import"
 },
 "sklearn.metrics.cluster.tests.test_supervised.homogeneity_score": {
  "data": {
   "shadows": "sklearn.metrics.cluster.homogeneity_score"
  },
  "type": "import"
 },
 "sklearn.metrics.cluster.tests.test_supervised.mutual_info_score": {
  "data": {
   "shadows": "sklearn.metrics.cluster.mutual_info_score"
  },
  "type": "import"
 },
 "sklearn.metrics.cluster.tests.test_supervised.normalized_mutual_info_score": {
  "data": {
   "shadows": "sklearn.metrics.cluster.normalized_mutual_info_score"
  },
  "type": "import"
 },
 "sklearn.metrics.cluster.tests.test_supervised.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.metrics.cluster.tests.test_supervised.score_funcs": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "sklearn.metrics.cluster.tests.test_supervised.test_adjusted_mutual_info_score": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "list",
    "nose.tools.assert_almost_equal",
    "nose.tools.assert_equal",
    "numpy.array",
    "numpy.sum",
    "sklearn.metrics.cluster.adjusted_mutual_info_score",
    "sklearn.metrics.cluster.contingency_matrix",
    "sklearn.metrics.cluster.expected_mutual_information",
    "sklearn.metrics.cluster.mutual_info_score"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.cluster.tests.test_supervised.test_adjustment_for_chance": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.testing.assert_array_almost_equal",
    "sklearn.metrics.cluster.adjusted_rand_score",
    "sklearn.metrics.cluster.tests.test_supervised.uniform_labelings_scores"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.cluster.tests.test_supervised.test_complete_but_not_homogeneous_labeling": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "nose.tools.assert_almost_equal",
    "sklearn.metrics.cluster.homogeneity_completeness_v_measure"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.cluster.tests.test_supervised.test_contingency_matrix": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "numpy.histogram2d",
    "numpy.testing.assert_array_almost_equal",
    "sklearn.metrics.cluster.contingency_matrix"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.cluster.tests.test_supervised.test_entropy": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "nose.tools.assert_almost_equal",
    "sklearn.metrics.cluster.entropy"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.cluster.tests.test_supervised.test_error_messages_on_wrong_input": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.metrics.cluster.tests.test_supervised.score_funcs",
    "sklearn.utils.testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.cluster.tests.test_supervised.test_exactly_zero_info_score": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "nose.tools.assert_equal",
    "numpy.arange",
    "numpy.int",
    "numpy.logspace",
    "numpy.ones",
    "sklearn.metrics.cluster.adjusted_mutual_info_score",
    "sklearn.metrics.cluster.normalized_mutual_info_score",
    "sklearn.metrics.cluster.v_measure_score"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.cluster.tests.test_supervised.test_homogeneous_but_not_complete_labeling": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "nose.tools.assert_almost_equal",
    "sklearn.metrics.cluster.homogeneity_completeness_v_measure"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.cluster.tests.test_supervised.test_non_consicutive_labels": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "nose.tools.assert_almost_equal",
    "sklearn.metrics.cluster.adjusted_rand_score",
    "sklearn.metrics.cluster.homogeneity_completeness_v_measure"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.cluster.tests.test_supervised.test_not_complete_and_not_homogeneous_labeling": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "nose.tools.assert_almost_equal",
    "sklearn.metrics.cluster.homogeneity_completeness_v_measure"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.cluster.tests.test_supervised.test_perfect_matches": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "nose.tools.assert_equal",
    "score_func",
    "sklearn.metrics.cluster.tests.test_supervised.score_funcs"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.cluster.tests.test_supervised.test_v_measure_and_mutual_information": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "nose.tools.assert_almost_equal",
    "numpy.int",
    "numpy.logspace",
    "numpy.random.RandomState",
    "sklearn.metrics.cluster.entropy",
    "sklearn.metrics.cluster.mutual_info_score",
    "sklearn.metrics.cluster.v_measure_score"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.cluster.tests.test_supervised.uniform_labelings_scores": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "numpy.random.RandomState",
    "numpy.zeros",
    "random_labels",
    "range",
    "score_func"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.cluster.tests.test_supervised.v_measure_score": {
  "data": {
   "shadows": "sklearn.metrics.cluster.v_measure_score"
  },
  "type": "import"
 },
 "sklearn.metrics.cluster.tests.test_unsupervised": {
  "data": {},
  "type": "module"
 },
 "sklearn.metrics.cluster.tests.test_unsupervised.assert_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "sklearn.metrics.cluster.tests.test_unsupervised.assert_false": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_false"
  },
  "type": "import"
 },
 "sklearn.metrics.cluster.tests.test_unsupervised.assert_raises_regexp": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises_regexp"
  },
  "type": "import"
 },
 "sklearn.metrics.cluster.tests.test_unsupervised.csr_matrix": {
  "data": {
   "shadows": "scipy.sparse.csr_matrix"
  },
  "type": "import"
 },
 "sklearn.metrics.cluster.tests.test_unsupervised.datasets": {
  "data": {
   "shadows": "sklearn.datasets"
  },
  "type": "import"
 },
 "sklearn.metrics.cluster.tests.test_unsupervised.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.metrics.cluster.tests.test_unsupervised.pairwise_distances": {
  "data": {
   "shadows": "sklearn.metrics.pairwise_distances"
  },
  "type": "import"
 },
 "sklearn.metrics.cluster.tests.test_unsupervised.silhouette_score": {
  "data": {
   "shadows": "sklearn.metrics.cluster.unsupervised.silhouette_score"
  },
  "type": "import"
 },
 "sklearn.metrics.cluster.tests.test_unsupervised.test_correct_labelsize": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.arange",
    "numpy.unique",
    "numpy.zeros",
    "sklearn.datasets.load_iris",
    "sklearn.metrics.cluster.unsupervised.silhouette_score",
    "sklearn.utils.testing.assert_raises_regexp"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.cluster.tests.test_unsupervised.test_no_nan": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "numpy.isnan",
    "numpy.random.RandomState",
    "sklearn.metrics.cluster.unsupervised.silhouette_score",
    "sklearn.utils.testing.assert_false"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.cluster.tests.test_unsupervised.test_silhouette": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "int",
    "scipy.sparse.csr_matrix",
    "sklearn.datasets.load_iris",
    "sklearn.metrics.cluster.unsupervised.silhouette_score",
    "sklearn.metrics.pairwise_distances",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.cluster.unsupervised": {
  "data": {},
  "type": "module"
 },
 "sklearn.metrics.cluster.unsupervised._intra_cluster_distance": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "numpy.any",
    "numpy.mean"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.cluster.unsupervised._nearest_cluster_distance": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "numpy.mean",
    "numpy.min",
    "set"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.cluster.unsupervised.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.metrics.cluster.unsupervised.silhouette_samples": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.maximum",
    "pairwise_distances",
    "range",
    "sklearn.metrics.cluster.unsupervised._intra_cluster_distance",
    "sklearn.metrics.cluster.unsupervised._nearest_cluster_distance"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.cluster.unsupervised.silhouette_score": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "ValueError",
    "check_random_state",
    "len",
    "numpy.mean",
    "numpy.unique",
    "sklearn.metrics.cluster.unsupervised.silhouette_samples"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.metrics": {
  "data": {
   "symbols_in_volume": [
    "DeprecationWarning",
    "sklearn.metrics.metrics.warnings"
   ]
  },
  "type": "module"
 },
 "sklearn.metrics.metrics.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.metrics.pairwise": {
  "data": {
   "symbols_in_volume": [
    "frozenset",
    "sklearn.metrics.pairwise.additive_chi2_kernel",
    "sklearn.metrics.pairwise.chi2_kernel",
    "sklearn.metrics.pairwise.cosine_distances",
    "sklearn.metrics.pairwise.cosine_similarity",
    "sklearn.metrics.pairwise.euclidean_distances",
    "sklearn.metrics.pairwise.laplacian_kernel",
    "sklearn.metrics.pairwise.linear_kernel",
    "sklearn.metrics.pairwise.manhattan_distances",
    "sklearn.metrics.pairwise.paired_cosine_distances",
    "sklearn.metrics.pairwise.paired_euclidean_distances",
    "sklearn.metrics.pairwise.paired_manhattan_distances",
    "sklearn.metrics.pairwise.polynomial_kernel",
    "sklearn.metrics.pairwise.rbf_kernel",
    "sklearn.metrics.pairwise.sigmoid_kernel"
   ]
  },
  "type": "module"
 },
 "sklearn.metrics.pairwise.KERNEL_PARAMS": {
  "data": {
   "lineno": 1252
  },
  "type": "constant"
 },
 "sklearn.metrics.pairwise.PAIRED_DISTANCES": {
  "data": {
   "lineno": 632
  },
  "type": "constant"
 },
 "sklearn.metrics.pairwise.PAIRWISE_DISTANCE_FUNCTIONS": {
  "data": {
   "lineno": 1004
  },
  "type": "constant"
 },
 "sklearn.metrics.pairwise.PAIRWISE_KERNEL_FUNCTIONS": {
  "data": {
   "lineno": 1211
  },
  "type": "constant"
 },
 "sklearn.metrics.pairwise._VALID_METRICS": {
  "data": {
   "lineno": 1097
  },
  "type": "constant"
 },
 "sklearn.metrics.pairwise._pairwise_callable": {
  "data": {
   "lineno": 1065,
   "symbols_in_volume": [
    "metric",
    "numpy.empty",
    "numpy.zeros",
    "range",
    "sklearn.metrics.pairwise.check_pairwise_arrays",
    "sklearn.metrics.pairwise.itertools"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.pairwise._parallel_pairwise": {
  "data": {
   "lineno": 1043,
   "symbols_in_volume": [
    "Parallel",
    "cpu_count",
    "delayed",
    "fd",
    "func",
    "gen_even_slices",
    "max",
    "numpy.hstack"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.pairwise._return_float_dtype": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "isinstance",
    "numpy.asarray",
    "numpy.float",
    "numpy.float32",
    "numpy.ndarray",
    "scipy.sparse.issparse"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.pairwise.additive_chi2_kernel": {
  "data": {
   "lineno": 894,
   "symbols_in_volume": [
    "ValueError",
    "_chi2_kernel_fast",
    "numpy.zeros",
    "scipy.sparse.issparse",
    "sklearn.metrics.pairwise.check_pairwise_arrays"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.pairwise.check_paired_arrays": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.metrics.pairwise.check_pairwise_arrays"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.pairwise.check_pairwise_arrays": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "ValueError",
    "check_array",
    "sklearn.metrics.pairwise._return_float_dtype"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.pairwise.chi2_kernel": {
  "data": {
   "lineno": 955,
   "symbols_in_volume": [
    "numpy.exp",
    "sklearn.metrics.pairwise.additive_chi2_kernel"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.pairwise.cosine_distances": {
  "data": {
   "lineno": 530,
   "symbols_in_volume": [
    "sklearn.metrics.pairwise.cosine_similarity"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.pairwise.cosine_similarity": {
  "data": {
   "lineno": 846,
   "symbols_in_volume": [
    "normalize",
    "safe_sparse_dot",
    "sklearn.metrics.pairwise.check_pairwise_arrays"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.pairwise.csr_matrix": {
  "data": {
   "shadows": "scipy.sparse.csr_matrix"
  },
  "type": "import"
 },
 "sklearn.metrics.pairwise.distance": {
  "data": {
   "shadows": "scipy.spatial.distance"
  },
  "type": "import"
 },
 "sklearn.metrics.pairwise.distance_metrics": {
  "data": {
   "lineno": 1017,
   "symbols_in_volume": [
    "sklearn.metrics.pairwise.PAIRWISE_DISTANCE_FUNCTIONS"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.pairwise.euclidean_distances": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "ValueError",
    "check_array",
    "numpy.atleast_2d",
    "numpy.maximum",
    "numpy.newaxis",
    "numpy.sqrt",
    "row_norms",
    "safe_sparse_dot",
    "sklearn.metrics.pairwise.check_pairwise_arrays"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.pairwise.issparse": {
  "data": {
   "shadows": "scipy.sparse.issparse"
  },
  "type": "import"
 },
 "sklearn.metrics.pairwise.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "sklearn.metrics.pairwise.kernel_metrics": {
  "data": {
   "lineno": 1225,
   "symbols_in_volume": [
    "sklearn.metrics.pairwise.PAIRWISE_KERNEL_FUNCTIONS"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.pairwise.laplacian_kernel": {
  "data": {
   "lineno": 815,
   "symbols_in_volume": [
    "numpy.exp",
    "sklearn.metrics.pairwise.check_pairwise_arrays",
    "sklearn.metrics.pairwise.manhattan_distances"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.pairwise.linear_kernel": {
  "data": {
   "lineno": 699,
   "symbols_in_volume": [
    "safe_sparse_dot",
    "sklearn.metrics.pairwise.check_pairwise_arrays"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.pairwise.manhattan_distances": {
  "data": {
   "lineno": 453,
   "symbols_in_volume": [
    "TypeError",
    "_sparse_manhattan",
    "numpy.abs",
    "numpy.newaxis",
    "numpy.zeros",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.issparse",
    "scipy.spatial.distance.cdist",
    "sklearn.metrics.pairwise.check_pairwise_arrays"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.pairwise.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.metrics.pairwise.paired_cosine_distances": {
  "data": {
   "lineno": 607,
   "symbols_in_volume": [
    "normalize",
    "row_norms",
    "sklearn.metrics.pairwise.check_paired_arrays"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.pairwise.paired_distances": {
  "data": {
   "lineno": 641,
   "symbols_in_volume": [
    "ValueError",
    "callable",
    "func",
    "len",
    "metric",
    "numpy.zeros",
    "range",
    "sklearn.metrics.pairwise.PAIRED_DISTANCES",
    "sklearn.metrics.pairwise.check_paired_arrays"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.pairwise.paired_euclidean_distances": {
  "data": {
   "lineno": 563,
   "symbols_in_volume": [
    "row_norms",
    "sklearn.metrics.pairwise.check_paired_arrays"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.pairwise.paired_manhattan_distances": {
  "data": {
   "lineno": 583,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.array",
    "numpy.squeeze",
    "scipy.sparse.issparse",
    "sklearn.metrics.pairwise.check_paired_arrays"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.pairwise.pairwise_distances": {
  "data": {
   "lineno": 1105,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "callable",
    "func",
    "metric",
    "partial",
    "scipy.sparse.issparse",
    "scipy.spatial.distance.cdist",
    "scipy.spatial.distance.pdist",
    "scipy.spatial.distance.squareform",
    "sklearn.metrics.pairwise.PAIRWISE_DISTANCE_FUNCTIONS",
    "sklearn.metrics.pairwise._VALID_METRICS",
    "sklearn.metrics.pairwise._pairwise_callable",
    "sklearn.metrics.pairwise._parallel_pairwise",
    "sklearn.metrics.pairwise.check_pairwise_arrays"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.pairwise.pairwise_distances_argmin": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": [
    "sklearn.metrics.pairwise.pairwise_distances_argmin_min"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.pairwise.pairwise_distances_argmin_min": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "ValueError",
    "callable",
    "dist_func",
    "gen_batches",
    "isinstance",
    "numpy.arange",
    "numpy.empty",
    "numpy.infty",
    "numpy.intp",
    "numpy.maximum",
    "numpy.newaxis",
    "numpy.sqrt",
    "row_norms",
    "safe_sparse_dot",
    "sklearn.metrics.pairwise.check_pairwise_arrays",
    "sklearn.metrics.pairwise.pairwise_distances",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.pairwise.pairwise_kernels": {
  "data": {
   "lineno": 1266,
   "symbols_in_volume": [
    "ValueError",
    "callable",
    "dict",
    "func",
    "metric",
    "partial",
    "sklearn.metrics.pairwise.KERNEL_PARAMS",
    "sklearn.metrics.pairwise.PAIRWISE_KERNEL_FUNCTIONS",
    "sklearn.metrics.pairwise._pairwise_callable",
    "sklearn.metrics.pairwise._parallel_pairwise",
    "sklearn.metrics.pairwise.check_pairwise_arrays"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.pairwise.polynomial_kernel": {
  "data": {
   "lineno": 719,
   "symbols_in_volume": [
    "safe_sparse_dot",
    "sklearn.metrics.pairwise.check_pairwise_arrays"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.pairwise.rbf_kernel": {
  "data": {
   "lineno": 783,
   "symbols_in_volume": [
    "numpy.exp",
    "sklearn.metrics.pairwise.check_pairwise_arrays",
    "sklearn.metrics.pairwise.euclidean_distances"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.pairwise.sigmoid_kernel": {
  "data": {
   "lineno": 752,
   "symbols_in_volume": [
    "numpy.tanh",
    "safe_sparse_dot",
    "sklearn.metrics.pairwise.check_pairwise_arrays"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.ranking": {
  "data": {},
  "type": "module"
 },
 "sklearn.metrics.ranking._binary_clf_curve": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "ValueError",
    "array_equal",
    "check_consistent_length",
    "column_or_1d",
    "isclose",
    "numpy.argsort",
    "numpy.diff",
    "numpy.logical_not",
    "numpy.r_",
    "numpy.unique",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.ranking.auc": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "ValueError",
    "check_consistent_length",
    "column_or_1d",
    "isinstance",
    "numpy.all",
    "numpy.any",
    "numpy.diff",
    "numpy.lexsort",
    "numpy.memmap",
    "numpy.trapz"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.ranking.average_precision_score": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "_average_binary_score"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.ranking.average_precision_score._binary_average_precision": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "sklearn.metrics.ranking.auc",
    "sklearn.metrics.ranking.precision_recall_curve"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.ranking.coverage_error": {
  "data": {
   "lineno": 621,
   "symbols_in_volume": [
    "ValueError",
    "check_array",
    "check_consistent_length",
    "numpy.average",
    "numpy.logical_not",
    "numpy.ma.masked_array",
    "type_of_target"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.ranking.csr_matrix": {
  "data": {
   "shadows": "scipy.sparse.csr_matrix"
  },
  "type": "import"
 },
 "sklearn.metrics.ranking.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sklearn.metrics.ranking.label_ranking_average_precision_score": {
  "data": {
   "lineno": 546,
   "symbols_in_volume": [
    "ValueError",
    "check_array",
    "check_consistent_length",
    "enumerate",
    "rankdata",
    "scipy.sparse.csr_matrix",
    "type_of_target",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.ranking.label_ranking_loss": {
  "data": {
   "lineno": 675,
   "symbols_in_volume": [
    "ValueError",
    "bincount",
    "check_array",
    "check_consistent_length",
    "count_nonzero",
    "enumerate",
    "len",
    "numpy.average",
    "numpy.dot",
    "numpy.errstate",
    "numpy.logical_or",
    "numpy.unique",
    "numpy.zeros",
    "scipy.sparse.csr_matrix",
    "type_of_target",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.ranking.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.metrics.ranking.precision_recall_curve": {
  "data": {
   "lineno": 342,
   "symbols_in_volume": [
    "numpy.r_",
    "sklearn.metrics.ranking._binary_clf_curve",
    "slice"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.ranking.roc_auc_score": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "_average_binary_score"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.ranking.roc_auc_score._binary_roc_auc_score": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.unique",
    "sklearn.metrics.ranking.auc",
    "sklearn.metrics.ranking.roc_curve"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.ranking.roc_curve": {
  "data": {
   "lineno": 421,
   "symbols_in_volume": [
    "len",
    "numpy.diff",
    "numpy.logical_or",
    "numpy.nan",
    "numpy.r_",
    "numpy.repeat",
    "numpy.where",
    "sklearn.metrics.ranking._binary_clf_curve",
    "sklearn.metrics.ranking.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.ranking.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.metrics.regression": {
  "data": {},
  "type": "module"
 },
 "sklearn.metrics.regression.__ALL__": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "sklearn.metrics.regression._check_reg_targets": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "ValueError",
    "check_array",
    "check_consistent_length",
    "len"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.regression.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sklearn.metrics.regression.explained_variance_score": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "isinstance",
    "numpy.average",
    "numpy.ones",
    "sklearn.metrics.regression._check_reg_targets"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.regression.mean_absolute_error": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "isinstance",
    "numpy.abs",
    "numpy.average",
    "sklearn.metrics.regression._check_reg_targets"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.regression.mean_squared_error": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "isinstance",
    "numpy.average",
    "sklearn.metrics.regression._check_reg_targets"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.regression.median_absolute_error": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "ValueError",
    "numpy.abs",
    "numpy.median",
    "sklearn.metrics.regression._check_reg_targets"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.regression.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.metrics.regression.r2_score": {
  "data": {
   "lineno": 370,
   "symbols_in_volume": [
    "DeprecationWarning",
    "column_or_1d",
    "isinstance",
    "numpy.any",
    "numpy.average",
    "numpy.float64",
    "numpy.newaxis",
    "numpy.ones",
    "sklearn.metrics.regression._check_reg_targets",
    "sklearn.metrics.regression.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.regression.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.metrics.scorer": {
  "data": {
   "symbols_in_volume": [
    "dict",
    "functools.partial",
    "sklearn.metrics.scorer.SCORERS",
    "sklearn.metrics.scorer.accuracy_scorer",
    "sklearn.metrics.scorer.adjusted_rand_scorer",
    "sklearn.metrics.scorer.average_precision_scorer",
    "sklearn.metrics.scorer.log_loss_scorer",
    "sklearn.metrics.scorer.make_scorer",
    "sklearn.metrics.scorer.mean_absolute_error_scorer",
    "sklearn.metrics.scorer.mean_squared_error_scorer",
    "sklearn.metrics.scorer.median_absolute_error_scorer",
    "sklearn.metrics.scorer.qualified_name",
    "sklearn.metrics.scorer.r2_scorer",
    "sklearn.metrics.scorer.roc_auc_scorer"
   ]
  },
  "type": "module"
 },
 "sklearn.metrics.scorer.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "sklearn.metrics.scorer.SCORERS": {
  "data": {
   "lineno": 343
  },
  "type": "constant"
 },
 "sklearn.metrics.scorer._BaseScorer": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "abc.ABCMeta",
    "object"
   ]
  },
  "type": "class"
 },
 "sklearn.metrics.scorer._BaseScorer.__call__": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.scorer._BaseScorer.__init__": {
  "data": {
   "lineno": 37
  },
  "type": "function"
 },
 "sklearn.metrics.scorer._BaseScorer.__repr__": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.scorer._BaseScorer._factory_args": {
  "data": {
   "lineno": 54
  },
  "type": "function"
 },
 "sklearn.metrics.scorer._PredictScorer": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "sklearn.metrics.scorer._BaseScorer"
   ]
  },
  "type": "class"
 },
 "sklearn.metrics.scorer._PredictScorer.__call__": {
  "data": {
   "lineno": 60
  },
  "type": "function"
 },
 "sklearn.metrics.scorer._ProbaScorer": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "sklearn.metrics.scorer._BaseScorer"
   ]
  },
  "type": "class"
 },
 "sklearn.metrics.scorer._ProbaScorer.__call__": {
  "data": {
   "lineno": 94
  },
  "type": "function"
 },
 "sklearn.metrics.scorer._ProbaScorer._factory_args": {
  "data": {
   "lineno": 126
  },
  "type": "function"
 },
 "sklearn.metrics.scorer._ThresholdScorer": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "sklearn.metrics.scorer._BaseScorer"
   ]
  },
  "type": "class"
 },
 "sklearn.metrics.scorer._ThresholdScorer.__call__": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "AttributeError",
    "NotImplementedError",
    "ValueError",
    "is_regressor",
    "isinstance",
    "list",
    "numpy.vstack",
    "type_of_target"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.scorer._ThresholdScorer._factory_args": {
  "data": {
   "lineno": 186
  },
  "type": "function"
 },
 "sklearn.metrics.scorer._passthrough_scorer": {
  "data": {
   "lineno": 203
  },
  "type": "function"
 },
 "sklearn.metrics.scorer.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "sklearn.metrics.scorer.accuracy_scorer": {
  "data": {
   "lineno": 325
  },
  "type": "constant"
 },
 "sklearn.metrics.scorer.adjusted_rand_scorer": {
  "data": {
   "lineno": 341
  },
  "type": "constant"
 },
 "sklearn.metrics.scorer.average_precision_scorer": {
  "data": {
   "lineno": 331
  },
  "type": "constant"
 },
 "sklearn.metrics.scorer.check_scoring": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "TypeError",
    "hasattr",
    "sklearn.metrics.scorer._passthrough_scorer",
    "sklearn.metrics.scorer.get_scorer"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.scorer.f1_scorer": {
  "data": {
   "lineno": 326
  },
  "type": "constant"
 },
 "sklearn.metrics.scorer.get_scorer": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "isinstance",
    "sorted"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.scorer.log_loss_scorer": {
  "data": {
   "lineno": 337
  },
  "type": "constant"
 },
 "sklearn.metrics.scorer.make_scorer": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "ValueError",
    "cls",
    "sklearn.metrics.scorer._PredictScorer",
    "sklearn.metrics.scorer._ProbaScorer",
    "sklearn.metrics.scorer._ThresholdScorer"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.scorer.mean_absolute_error_scorer": {
  "data": {
   "lineno": 319
  },
  "type": "constant"
 },
 "sklearn.metrics.scorer.mean_squared_error_scorer": {
  "data": {
   "lineno": 317
  },
  "type": "constant"
 },
 "sklearn.metrics.scorer.median_absolute_error_scorer": {
  "data": {
   "lineno": 321
  },
  "type": "constant"
 },
 "sklearn.metrics.scorer.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.metrics.scorer.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "sklearn.metrics.scorer.precision_scorer": {
  "data": {
   "lineno": 333
  },
  "type": "constant"
 },
 "sklearn.metrics.scorer.qualified_name": {
  "data": {
   "lineno": 356
  },
  "type": "constant"
 },
 "sklearn.metrics.scorer.r2_scorer": {
  "data": {
   "lineno": 316
  },
  "type": "constant"
 },
 "sklearn.metrics.scorer.recall_scorer": {
  "data": {
   "lineno": 334
  },
  "type": "constant"
 },
 "sklearn.metrics.scorer.roc_auc_scorer": {
  "data": {
   "lineno": 329
  },
  "type": "constant"
 },
 "sklearn.metrics.setup": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.distutils.core.setup",
    "sklearn.metrics.setup.configuration"
   ]
  },
  "type": "module"
 },
 "sklearn.metrics.setup.Configuration": {
  "data": {
   "shadows": "numpy.distutils.misc_util.Configuration"
  },
  "type": "import"
 },
 "sklearn.metrics.setup.configuration": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "numpy.distutils.misc_util.Configuration",
    "sklearn._build_utils.get_blas_info",
    "sklearn.metrics.setup.numpy",
    "sklearn.metrics.setup.os"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.setup.get_blas_info": {
  "data": {
   "shadows": "sklearn._build_utils.get_blas_info"
  },
  "type": "import"
 },
 "sklearn.metrics.setup.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.metrics.setup.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "sklearn.metrics.setup.os.path": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "sklearn.metrics.setup.setup": {
  "data": {
   "shadows": "numpy.distutils.core.setup"
  },
  "type": "import"
 },
 "sklearn.metrics.tests": {
  "data": {},
  "type": "module"
 },
 "sklearn.metrics.tests.test_classification": {
  "data": {},
  "type": "module"
 },
 "sklearn.metrics.tests.test_classification.UndefinedMetricWarning": {
  "data": {
   "shadows": "sklearn.metrics.base.UndefinedMetricWarning"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_classification._check_targets": {
  "data": {
   "shadows": "sklearn.metrics.classification._check_targets"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_classification.accuracy_score": {
  "data": {
   "shadows": "sklearn.metrics.accuracy_score"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_classification.assert_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_classification.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_classification.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_classification.assert_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_classification.assert_no_warnings": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_no_warnings"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_classification.assert_not_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_not_equal"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_classification.assert_raise_message": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raise_message"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_classification.assert_raises": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_classification.assert_warns": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_warns"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_classification.assert_warns_message": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_warns_message"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_classification.average_precision_score": {
  "data": {
   "shadows": "sklearn.metrics.average_precision_score"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_classification.brier_score_loss": {
  "data": {
   "shadows": "sklearn.metrics.brier_score_loss"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_classification.check_random_state": {
  "data": {
   "shadows": "sklearn.utils.validation.check_random_state"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_classification.classification_report": {
  "data": {
   "shadows": "sklearn.metrics.classification_report"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_classification.clean_warning_registry": {
  "data": {
   "shadows": "sklearn.utils.testing.clean_warning_registry"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_classification.cohen_kappa_score": {
  "data": {
   "shadows": "sklearn.metrics.cohen_kappa_score"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_classification.confusion_matrix": {
  "data": {
   "shadows": "sklearn.metrics.confusion_matrix"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_classification.datasets": {
  "data": {
   "shadows": "sklearn.datasets"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_classification.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_classification.f1_score": {
  "data": {
   "shadows": "sklearn.metrics.f1_score"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_classification.fbeta_score": {
  "data": {
   "shadows": "sklearn.metrics.fbeta_score"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_classification.hamming_loss": {
  "data": {
   "shadows": "sklearn.metrics.hamming_loss"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_classification.hinge_loss": {
  "data": {
   "shadows": "sklearn.metrics.hinge_loss"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_classification.ignore_warnings": {
  "data": {
   "shadows": "sklearn.utils.testing.ignore_warnings"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_classification.jaccard_similarity_score": {
  "data": {
   "shadows": "sklearn.metrics.jaccard_similarity_score"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_classification.label_binarize": {
  "data": {
   "shadows": "sklearn.preprocessing.label_binarize"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_classification.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_classification.log_loss": {
  "data": {
   "shadows": "sklearn.metrics.log_loss"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_classification.make_multilabel_classification": {
  "data": {
   "shadows": "sklearn.datasets.make_multilabel_classification"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_classification.make_prediction": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "int",
    "numpy.arange",
    "numpy.c_",
    "numpy.random.RandomState",
    "sklearn.datasets.load_iris",
    "sklearn.svm.SVC",
    "sklearn.utils.validation.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.matthews_corrcoef": {
  "data": {
   "shadows": "sklearn.metrics.matthews_corrcoef"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_classification.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_classification.np_version": {
  "data": {
   "shadows": "sklearn.utils.fixes.np_version"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_classification.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_classification.precision_recall_fscore_support": {
  "data": {
   "shadows": "sklearn.metrics.precision_recall_fscore_support"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_classification.precision_score": {
  "data": {
   "shadows": "sklearn.metrics.precision_score"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_classification.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_classification.product": {
  "data": {
   "shadows": "itertools.product"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_classification.recall_score": {
  "data": {
   "shadows": "sklearn.metrics.recall_score"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_classification.svm": {
  "data": {
   "shadows": "sklearn.svm"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_classification.test__check_targets": {
  "data": {
   "lineno": 1042,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "itertools.product",
    "numpy.array",
    "numpy.squeeze",
    "sklearn.metrics.classification._check_targets",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_raise_message",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_average_precision_score_duplicate_values": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "sklearn.metrics.average_precision_score",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_average_precision_score_score_non_binary_class": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.metrics.average_precision_score",
    "sklearn.utils.testing.assert_raise_message",
    "sklearn.utils.validation.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_average_precision_score_tied_values": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "sklearn.metrics.average_precision_score",
    "sklearn.utils.testing.assert_not_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_brier_score_loss": {
  "data": {
   "lineno": 1271,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.array",
    "scipy.linalg.norm",
    "sklearn.metrics.brier_score_loss",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_classification_report_multiclass": {
  "data": {
   "lineno": 475,
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "sklearn.datasets.load_iris",
    "sklearn.metrics.classification_report",
    "sklearn.metrics.tests.test_classification.make_prediction",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_classification_report_multiclass_with_digits": {
  "data": {
   "lineno": 508,
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "sklearn.datasets.load_iris",
    "sklearn.metrics.classification_report",
    "sklearn.metrics.tests.test_classification.make_prediction",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_classification_report_multiclass_with_string_label": {
  "data": {
   "lineno": 541,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.metrics.classification_report",
    "sklearn.metrics.tests.test_classification.make_prediction",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_classification_report_multiclass_with_unicode_label": {
  "data": {
   "lineno": 573,
   "symbols_in_volume": [
    "RuntimeError",
    "numpy.array",
    "sklearn.metrics.classification_report",
    "sklearn.metrics.tests.test_classification.make_prediction",
    "sklearn.utils.fixes.np_version",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_cohen_kappa": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "numpy.append",
    "numpy.array",
    "sklearn.metrics.cohen_kappa_score",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_confusion_matrix_binary": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "sklearn.metrics.tests.test_classification.make_prediction",
    "str",
    "test"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_confusion_matrix_binary.test": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "numpy.sqrt",
    "sklearn.metrics.confusion_matrix",
    "sklearn.metrics.matthews_corrcoef",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_confusion_matrix_multiclass": {
  "data": {
   "lineno": 433,
   "symbols_in_volume": [
    "list",
    "sklearn.metrics.tests.test_classification.make_prediction",
    "str",
    "test"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_confusion_matrix_multiclass.test": {
  "data": {
   "lineno": 437,
   "symbols_in_volume": [
    "sklearn.metrics.confusion_matrix",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_confusion_matrix_multiclass_subset_labels": {
  "data": {
   "lineno": 459,
   "symbols_in_volume": [
    "sklearn.metrics.confusion_matrix",
    "sklearn.metrics.tests.test_classification.make_prediction",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_fscore_warnings": {
  "data": {
   "lineno": 994,
   "symbols_in_volume": [
    "functools.partial",
    "numpy.array",
    "score",
    "sklearn.metrics.f1_score",
    "sklearn.metrics.fbeta_score",
    "sklearn.metrics.tests.test_classification.warnings",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.clean_warning_registry",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_hinge_loss_binary": {
  "data": {
   "lineno": 1134,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.metrics.hinge_loss",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_hinge_loss_multiclass": {
  "data": {
   "lineno": 1144,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.mean",
    "sklearn.metrics.hinge_loss",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_hinge_loss_multiclass_invariance_lists": {
  "data": {
   "lineno": 1206,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.mean",
    "sklearn.metrics.hinge_loss",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_hinge_loss_multiclass_missing_labels_with_labels_none": {
  "data": {
   "lineno": 1168,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "sklearn.metrics.hinge_loss",
    "sklearn.utils.testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_hinge_loss_multiclass_with_missing_labels": {
  "data": {
   "lineno": 1183,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.mean",
    "sklearn.metrics.hinge_loss",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_log_loss": {
  "data": {
   "lineno": 1233,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "numpy.asarray",
    "numpy.clip",
    "sklearn.metrics.log_loss",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_matthews_corrcoef_nan": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": [
    "sklearn.metrics.matthews_corrcoef",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_multilabel_accuracy_score_subset_accuracy": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.logical_not",
    "numpy.zeros",
    "sklearn.metrics.accuracy_score",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_multilabel_classification_report": {
  "data": {
   "lineno": 599,
   "symbols_in_volume": [
    "sklearn.datasets.make_multilabel_classification",
    "sklearn.metrics.classification_report",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_multilabel_hamming_loss": {
  "data": {
   "lineno": 642,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.zeros",
    "sklearn.metrics.hamming_loss",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_multilabel_jaccard_similarity_score": {
  "data": {
   "lineno": 656,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.logical_not",
    "numpy.zeros",
    "sklearn.metrics.jaccard_similarity_score",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_multilabel_zero_one_loss_subset": {
  "data": {
   "lineno": 628,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.logical_not",
    "numpy.zeros",
    "sklearn.metrics.zero_one_loss",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_precision_recall_f1_no_labels": {
  "data": {
   "lineno": 873,
   "symbols_in_volume": [
    "numpy.zeros",
    "numpy.zeros_like",
    "sklearn.metrics.base.UndefinedMetricWarning",
    "sklearn.metrics.fbeta_score",
    "sklearn.metrics.precision_recall_fscore_support",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_warns"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_precision_recall_f1_score_binary": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "DeprecationWarning",
    "functools.partial",
    "my_assert",
    "sklearn.metrics.f1_score",
    "sklearn.metrics.fbeta_score",
    "sklearn.metrics.precision_recall_fscore_support",
    "sklearn.metrics.precision_score",
    "sklearn.metrics.recall_score",
    "sklearn.metrics.tests.test_classification.make_prediction",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_no_warnings",
    "sklearn.utils.testing.assert_warns"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_precision_recall_f1_score_multiclass": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.metrics.f1_score",
    "sklearn.metrics.fbeta_score",
    "sklearn.metrics.precision_recall_fscore_support",
    "sklearn.metrics.precision_score",
    "sklearn.metrics.recall_score",
    "sklearn.metrics.tests.test_classification.make_prediction",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_precision_recall_f1_score_multiclass_pos_label_none": {
  "data": {
   "lineno": 400,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.metrics.precision_recall_fscore_support"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_precision_recall_f1_score_multilabel_1": {
  "data": {
   "lineno": 673,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.average",
    "numpy.mean",
    "sklearn.metrics.fbeta_score",
    "sklearn.metrics.precision_recall_fscore_support",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_precision_recall_f1_score_multilabel_2": {
  "data": {
   "lineno": 742,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.average",
    "numpy.mean",
    "sklearn.metrics.fbeta_score",
    "sklearn.metrics.precision_recall_fscore_support",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_precision_recall_f1_score_with_an_empty_prediction": {
  "data": {
   "lineno": 810,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.average",
    "numpy.mean",
    "sklearn.metrics.fbeta_score",
    "sklearn.metrics.precision_recall_fscore_support",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_precision_recall_f_binary_single_class": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "sklearn.metrics.f1_score",
    "sklearn.metrics.precision_score",
    "sklearn.metrics.recall_score",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_precision_recall_f_extra_labels": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "ValueError",
    "enumerate",
    "numpy.arange",
    "numpy.mean",
    "sklearn.metrics.recall_score",
    "sklearn.preprocessing.label_binarize",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_raises",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_precision_recall_f_ignored_labels": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "enumerate",
    "functools.partial",
    "numpy.arange",
    "recall_13",
    "recall_all",
    "sklearn.metrics.recall_score",
    "sklearn.preprocessing.label_binarize",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_not_equal",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_precision_recall_fscore_support_errors": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.metrics.precision_recall_fscore_support",
    "sklearn.metrics.tests.test_classification.make_prediction",
    "sklearn.utils.testing.assert_raises",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_precision_refcall_f1_score_multilabel_unordered_labels": {
  "data": {
   "lineno": 386,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.metrics.precision_recall_fscore_support",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_precision_warnings": {
  "data": {
   "lineno": 976,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.metrics.precision_score",
    "sklearn.metrics.tests.test_classification.warnings",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_no_warnings",
    "sklearn.utils.testing.clean_warning_registry",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_prf_average_compat": {
  "data": {
   "lineno": 1014,
   "symbols_in_volume": [
    "DeprecationWarning",
    "functools.partial",
    "score",
    "sklearn.metrics.f1_score",
    "sklearn.metrics.fbeta_score",
    "sklearn.metrics.precision_score",
    "sklearn.metrics.recall_score",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_no_warnings",
    "sklearn.utils.testing.assert_warns"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_prf_warnings": {
  "data": {
   "lineno": 914,
   "symbols_in_volume": [
    "my_assert",
    "numpy.array",
    "sklearn.metrics.base.UndefinedMetricWarning",
    "sklearn.metrics.precision_recall_fscore_support",
    "sklearn.utils.testing.assert_warns_message"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_recall_warnings": {
  "data": {
   "lineno": 960,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.metrics.recall_score",
    "sklearn.metrics.tests.test_classification.warnings",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_no_warnings",
    "sklearn.utils.testing.clean_warning_registry",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_zero_precision_recall": {
  "data": {
   "lineno": 413,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.seterr",
    "sklearn.metrics.f1_score",
    "sklearn.metrics.precision_score",
    "sklearn.metrics.recall_score",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_classification.zero_one_loss": {
  "data": {
   "shadows": "sklearn.metrics.zero_one_loss"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_common": {
  "data": {
   "symbols_in_volume": [
    "dict",
    "functools.partial",
    "sklearn.metrics.accuracy_score",
    "sklearn.metrics.average_precision_score",
    "sklearn.metrics.brier_score_loss",
    "sklearn.metrics.cohen_kappa_score",
    "sklearn.metrics.confusion_matrix",
    "sklearn.metrics.coverage_error",
    "sklearn.metrics.explained_variance_score",
    "sklearn.metrics.f1_score",
    "sklearn.metrics.fbeta_score",
    "sklearn.metrics.hamming_loss",
    "sklearn.metrics.hinge_loss",
    "sklearn.metrics.jaccard_similarity_score",
    "sklearn.metrics.label_ranking_average_precision_score",
    "sklearn.metrics.label_ranking_loss",
    "sklearn.metrics.log_loss",
    "sklearn.metrics.matthews_corrcoef",
    "sklearn.metrics.mean_absolute_error",
    "sklearn.metrics.mean_squared_error",
    "sklearn.metrics.median_absolute_error",
    "sklearn.metrics.precision_score",
    "sklearn.metrics.r2_score",
    "sklearn.metrics.recall_score",
    "sklearn.metrics.roc_auc_score",
    "sklearn.metrics.tests.test_common.ALL_METRICS",
    "sklearn.metrics.tests.test_common.CLASSIFICATION_METRICS",
    "sklearn.metrics.tests.test_common.REGRESSION_METRICS",
    "sklearn.metrics.tests.test_common.THRESHOLDED_METRICS",
    "sklearn.metrics.zero_one_loss"
   ]
  },
  "type": "module"
 },
 "sklearn.metrics.tests.test_common.ALL_METRICS": {
  "data": {
   "lineno": 176
  },
  "type": "constant"
 },
 "sklearn.metrics.tests.test_common.CLASSIFICATION_METRICS": {
  "data": {
   "lineno": 99
  },
  "type": "constant"
 },
 "sklearn.metrics.tests.test_common.LabelBinarizer": {
  "data": {
   "shadows": "sklearn.preprocessing.LabelBinarizer"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_common.METRICS_WITHOUT_SAMPLE_WEIGHT": {
  "data": {
   "lineno": 346
  },
  "type": "constant"
 },
 "sklearn.metrics.tests.test_common.METRICS_WITH_AVERAGING": {
  "data": {
   "lineno": 211
  },
  "type": "constant"
 },
 "sklearn.metrics.tests.test_common.METRICS_WITH_LABELS": {
  "data": {
   "lineno": 242
  },
  "type": "constant"
 },
 "sklearn.metrics.tests.test_common.METRICS_WITH_NORMALIZE_OPTION": {
  "data": {
   "lineno": 260
  },
  "type": "constant"
 },
 "sklearn.metrics.tests.test_common.METRICS_WITH_POS_LABEL": {
  "data": {
   "lineno": 221
  },
  "type": "constant"
 },
 "sklearn.metrics.tests.test_common.METRIC_UNDEFINED_MULTICLASS": {
  "data": {
   "lineno": 191
  },
  "type": "constant"
 },
 "sklearn.metrics.tests.test_common.MULTILABELS_METRICS": {
  "data": {
   "lineno": 282
  },
  "type": "constant"
 },
 "sklearn.metrics.tests.test_common.MULTIOUTPUT_METRICS": {
  "data": {
   "lineno": 304
  },
  "type": "constant"
 },
 "sklearn.metrics.tests.test_common.NOT_SYMMETRIC_METRICS": {
  "data": {
   "lineno": 327
  },
  "type": "constant"
 },
 "sklearn.metrics.tests.test_common.REGRESSION_METRICS": {
  "data": {
   "lineno": 91
  },
  "type": "constant"
 },
 "sklearn.metrics.tests.test_common.SYMMETRIC_METRICS": {
  "data": {
   "lineno": 311
  },
  "type": "constant"
 },
 "sklearn.metrics.tests.test_common.THRESHOLDED_METRICS": {
  "data": {
   "lineno": 147
  },
  "type": "constant"
 },
 "sklearn.metrics.tests.test_common.THRESHOLDED_METRICS_WITH_AVERAGING": {
  "data": {
   "lineno": 216
  },
  "type": "constant"
 },
 "sklearn.metrics.tests.test_common.THRESHOLDED_MULTILABEL_METRICS": {
  "data": {
   "lineno": 267
  },
  "type": "constant"
 },
 "sklearn.metrics.tests.test_common._average_binary_score": {
  "data": {
   "shadows": "sklearn.metrics.base._average_binary_score"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_common._check_averaging": {
  "data": {
   "lineno": 773,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "metric",
    "numpy.average",
    "numpy.mean",
    "numpy.sum",
    "range",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_raises",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_common.accuracy_score": {
  "data": {
   "shadows": "sklearn.metrics.accuracy_score"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_common.assert_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_common.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_common.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_common.assert_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_common.assert_greater": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_greater"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_common.assert_not_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_not_equal"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_common.assert_raises": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_common.assert_true": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_true"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_common.average_precision_score": {
  "data": {
   "shadows": "sklearn.metrics.average_precision_score"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_common.brier_score_loss": {
  "data": {
   "shadows": "sklearn.metrics.brier_score_loss"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_common.check_averaging": {
  "data": {
   "lineno": 817,
   "symbols_in_volume": [
    "ValueError",
    "metric",
    "sklearn.metrics.tests.test_common.ALL_METRICS",
    "sklearn.metrics.tests.test_common.METRICS_WITH_AVERAGING",
    "sklearn.metrics.tests.test_common.THRESHOLDED_METRICS_WITH_AVERAGING",
    "sklearn.metrics.tests.test_common._check_averaging",
    "sklearn.utils.multiclass.type_of_target"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_common.check_random_state": {
  "data": {
   "shadows": "sklearn.utils.validation.check_random_state"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_common.check_sample_weight_invariance": {
  "data": {
   "lineno": 894,
   "symbols_in_volume": [
    "Exception",
    "len",
    "metric",
    "numpy.copy",
    "numpy.hstack",
    "numpy.ones",
    "numpy.random.RandomState",
    "numpy.repeat",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_not_equal",
    "sklearn.utils.testing.assert_raises",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_common.check_single_sample": {
  "data": {
   "lineno": 595,
   "symbols_in_volume": [
    "itertools.product",
    "metric",
    "sklearn.metrics.tests.test_common.ALL_METRICS",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_common.check_single_sample_multioutput": {
  "data": {
   "lineno": 608,
   "symbols_in_volume": [
    "itertools.product",
    "metric",
    "numpy.array",
    "sklearn.metrics.tests.test_common.ALL_METRICS",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_common.cohen_kappa_score": {
  "data": {
   "shadows": "sklearn.metrics.cohen_kappa_score"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_common.confusion_matrix": {
  "data": {
   "shadows": "sklearn.metrics.confusion_matrix"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_common.coverage_error": {
  "data": {
   "shadows": "sklearn.metrics.coverage_error"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_common.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_common.explained_variance_score": {
  "data": {
   "shadows": "sklearn.metrics.explained_variance_score"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_common.f1_score": {
  "data": {
   "shadows": "sklearn.metrics.f1_score"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_common.fbeta_score": {
  "data": {
   "shadows": "sklearn.metrics.fbeta_score"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_common.hamming_loss": {
  "data": {
   "shadows": "sklearn.metrics.hamming_loss"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_common.hinge_loss": {
  "data": {
   "shadows": "sklearn.metrics.hinge_loss"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_common.ignore_warnings": {
  "data": {
   "shadows": "sklearn.utils.testing.ignore_warnings"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_common.jaccard_similarity_score": {
  "data": {
   "shadows": "sklearn.metrics.jaccard_similarity_score"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_common.label_ranking_average_precision_score": {
  "data": {
   "shadows": "sklearn.metrics.label_ranking_average_precision_score"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_common.label_ranking_loss": {
  "data": {
   "shadows": "sklearn.metrics.label_ranking_loss"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_common.log_loss": {
  "data": {
   "shadows": "sklearn.metrics.log_loss"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_common.make_multilabel_classification": {
  "data": {
   "shadows": "sklearn.datasets.make_multilabel_classification"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_common.matthews_corrcoef": {
  "data": {
   "shadows": "sklearn.metrics.matthews_corrcoef"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_common.mean_absolute_error": {
  "data": {
   "shadows": "sklearn.metrics.mean_absolute_error"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_common.mean_squared_error": {
  "data": {
   "shadows": "sklearn.metrics.mean_squared_error"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_common.median_absolute_error": {
  "data": {
   "shadows": "sklearn.metrics.median_absolute_error"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_common.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_common.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_common.precision_score": {
  "data": {
   "shadows": "sklearn.metrics.precision_score"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_common.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_common.product": {
  "data": {
   "shadows": "itertools.product"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_common.r2_score": {
  "data": {
   "shadows": "sklearn.metrics.r2_score"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_common.recall_score": {
  "data": {
   "shadows": "sklearn.metrics.recall_score"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_common.roc_auc_score": {
  "data": {
   "shadows": "sklearn.metrics.roc_auc_score"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_common.shuffle": {
  "data": {
   "shadows": "sklearn.utils.shuffle"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_common.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_common.test_averaging_multiclass": {
  "data": {
   "lineno": 833,
   "symbols_in_volume": [
    "sklearn.metrics.tests.test_common.METRICS_WITH_AVERAGING",
    "sklearn.metrics.tests.test_common.check_averaging",
    "sklearn.preprocessing.LabelBinarizer",
    "sklearn.utils.validation.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_common.test_averaging_multilabel": {
  "data": {
   "lineno": 848,
   "symbols_in_volume": [
    "sklearn.datasets.make_multilabel_classification",
    "sklearn.metrics.tests.test_common.METRICS_WITH_AVERAGING",
    "sklearn.metrics.tests.test_common.THRESHOLDED_METRICS_WITH_AVERAGING",
    "sklearn.metrics.tests.test_common.check_averaging",
    "sklearn.utils.validation.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_common.test_averaging_multilabel_all_ones": {
  "data": {
   "lineno": 882,
   "symbols_in_volume": [
    "numpy.ones",
    "sklearn.metrics.tests.test_common.METRICS_WITH_AVERAGING",
    "sklearn.metrics.tests.test_common.check_averaging"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_common.test_averaging_multilabel_all_zeroes": {
  "data": {
   "lineno": 863,
   "symbols_in_volume": [
    "numpy.zeros",
    "sklearn.metrics.base._average_binary_score",
    "sklearn.metrics.precision_score",
    "sklearn.metrics.tests.test_common.METRICS_WITH_AVERAGING",
    "sklearn.metrics.tests.test_common._check_averaging",
    "sklearn.metrics.tests.test_common.check_averaging"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_common.test_format_invariance_with_1d_vectors": {
  "data": {
   "lineno": 443,
   "symbols_in_volume": [
    "ValueError",
    "list",
    "metric",
    "numpy.array",
    "numpy.reshape",
    "sklearn.metrics.tests.test_common.ALL_METRICS",
    "sklearn.metrics.tests.test_common.METRIC_UNDEFINED_MULTICLASS",
    "sklearn.metrics.tests.test_common.MULTILABELS_METRICS",
    "sklearn.metrics.tests.test_common.MULTIOUTPUT_METRICS",
    "sklearn.metrics.tests.test_common.THRESHOLDED_MULTILABEL_METRICS",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_raises",
    "sklearn.utils.testing.ignore_warnings",
    "sklearn.utils.validation.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_common.test_invariance_string_vs_numbers_labels": {
  "data": {
   "lineno": 522,
   "symbols_in_volume": [
    "ValueError",
    "functools.partial",
    "metric",
    "metric_str",
    "numpy.array",
    "sklearn.metrics.tests.test_common.CLASSIFICATION_METRICS",
    "sklearn.metrics.tests.test_common.METRICS_WITH_LABELS",
    "sklearn.metrics.tests.test_common.METRICS_WITH_POS_LABEL",
    "sklearn.metrics.tests.test_common.METRIC_UNDEFINED_MULTICLASS",
    "sklearn.metrics.tests.test_common.THRESHOLDED_METRICS",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_raises",
    "sklearn.utils.testing.ignore_warnings",
    "sklearn.utils.validation.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_common.test_multilabel_representation_invariance": {
  "data": {
   "lineno": 655,
   "symbols_in_volume": [
    "functools.partial",
    "isinstance",
    "metric",
    "metric.__module__",
    "metric.__name__",
    "scipy.sparse.coo_matrix",
    "sklearn.datasets.make_multilabel_classification",
    "sklearn.metrics.tests.test_common.ALL_METRICS",
    "sklearn.metrics.tests.test_common.MULTILABELS_METRICS",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_common.test_multioutput_number_of_output_differ": {
  "data": {
   "lineno": 628,
   "symbols_in_volume": [
    "ValueError",
    "metric",
    "numpy.array",
    "sklearn.metrics.tests.test_common.ALL_METRICS",
    "sklearn.metrics.tests.test_common.MULTIOUTPUT_METRICS",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_common.test_multioutput_regression_invariance_to_dimension_shuffling": {
  "data": {
   "lineno": 637,
   "symbols_in_volume": [
    "metric",
    "range",
    "sklearn.metrics.tests.test_common.ALL_METRICS",
    "sklearn.metrics.tests.test_common.MULTIOUTPUT_METRICS",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.validation.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_common.test_no_averaging_labels": {
  "data": {
   "lineno": 1022,
   "symbols_in_volume": [
    "metric",
    "numpy.array",
    "numpy.unique",
    "sklearn.metrics.tests.test_common.ALL_METRICS",
    "sklearn.metrics.tests.test_common.METRICS_WITH_AVERAGING",
    "sklearn.metrics.tests.test_common.MULTILABELS_METRICS",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_common.test_normalize_option_binary_classification": {
  "data": {
   "lineno": 710,
   "symbols_in_volume": [
    "metrics",
    "sklearn.metrics.tests.test_common.ALL_METRICS",
    "sklearn.metrics.tests.test_common.METRICS_WITH_NORMALIZE_OPTION",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_greater",
    "sklearn.utils.validation.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_common.test_normalize_option_multiclasss_classification": {
  "data": {
   "lineno": 725,
   "symbols_in_volume": [
    "metrics",
    "sklearn.metrics.tests.test_common.ALL_METRICS",
    "sklearn.metrics.tests.test_common.METRICS_WITH_NORMALIZE_OPTION",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_greater",
    "sklearn.utils.validation.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_common.test_normalize_option_multilabel_classification": {
  "data": {
   "lineno": 741,
   "symbols_in_volume": [
    "metrics",
    "sklearn.datasets.make_multilabel_classification",
    "sklearn.metrics.tests.test_common.ALL_METRICS",
    "sklearn.metrics.tests.test_common.METRICS_WITH_NORMALIZE_OPTION",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_greater"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_common.test_raise_value_error_multilabel_sequences": {
  "data": {
   "lineno": 694,
   "symbols_in_volume": [
    "ValueError",
    "metric",
    "numpy.array",
    "sklearn.metrics.tests.test_common.ALL_METRICS",
    "sklearn.metrics.tests.test_common.MULTILABELS_METRICS",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_common.test_sample_order_invariance": {
  "data": {
   "lineno": 386,
   "symbols_in_volume": [
    "metric",
    "sklearn.metrics.tests.test_common.ALL_METRICS",
    "sklearn.metrics.tests.test_common.METRIC_UNDEFINED_MULTICLASS",
    "sklearn.utils.shuffle",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.ignore_warnings",
    "sklearn.utils.validation.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_common.test_sample_order_invariance_multilabel_and_multioutput": {
  "data": {
   "lineno": 403,
   "symbols_in_volume": [
    "metric",
    "sklearn.metrics.tests.test_common.ALL_METRICS",
    "sklearn.metrics.tests.test_common.MULTILABELS_METRICS",
    "sklearn.metrics.tests.test_common.MULTIOUTPUT_METRICS",
    "sklearn.metrics.tests.test_common.THRESHOLDED_MULTILABEL_METRICS",
    "sklearn.utils.shuffle",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.ignore_warnings",
    "sklearn.utils.validation.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_common.test_sample_weight_invariance": {
  "data": {
   "lineno": 964,
   "symbols_in_volume": [
    "metric",
    "numpy.vstack",
    "sklearn.datasets.make_multilabel_classification",
    "sklearn.metrics.tests.test_common.ALL_METRICS",
    "sklearn.metrics.tests.test_common.METRICS_WITHOUT_SAMPLE_WEIGHT",
    "sklearn.metrics.tests.test_common.METRIC_UNDEFINED_MULTICLASS",
    "sklearn.metrics.tests.test_common.MULTILABELS_METRICS",
    "sklearn.metrics.tests.test_common.MULTIOUTPUT_METRICS",
    "sklearn.metrics.tests.test_common.THRESHOLDED_METRICS",
    "sklearn.metrics.tests.test_common.THRESHOLDED_MULTILABEL_METRICS",
    "sklearn.metrics.tests.test_common.check_sample_weight_invariance",
    "sklearn.utils.validation.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_common.test_single_sample": {
  "data": {
   "lineno": 615,
   "symbols_in_volume": [
    "sklearn.metrics.tests.test_common.ALL_METRICS",
    "sklearn.metrics.tests.test_common.METRIC_UNDEFINED_MULTICLASS",
    "sklearn.metrics.tests.test_common.MULTILABELS_METRICS",
    "sklearn.metrics.tests.test_common.MULTIOUTPUT_METRICS",
    "sklearn.metrics.tests.test_common.THRESHOLDED_METRICS",
    "sklearn.metrics.tests.test_common.check_single_sample",
    "sklearn.metrics.tests.test_common.check_single_sample_multioutput"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_common.test_symmetry": {
  "data": {
   "lineno": 355,
   "symbols_in_volume": [
    "metric",
    "numpy.any",
    "set",
    "sklearn.metrics.tests.test_common.ALL_METRICS",
    "sklearn.metrics.tests.test_common.METRIC_UNDEFINED_MULTICLASS",
    "sklearn.metrics.tests.test_common.NOT_SYMMETRIC_METRICS",
    "sklearn.metrics.tests.test_common.SYMMETRIC_METRICS",
    "sklearn.metrics.tests.test_common.THRESHOLDED_METRICS",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_true",
    "sklearn.utils.testing.ignore_warnings",
    "sklearn.utils.validation.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_common.type_of_target": {
  "data": {
   "shadows": "sklearn.utils.multiclass.type_of_target"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_common.zero_one_loss": {
  "data": {
   "shadows": "sklearn.metrics.zero_one_loss"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_pairwise": {
  "data": {},
  "type": "module"
 },
 "sklearn.metrics.tests.test_pairwise.PAIRED_DISTANCES": {
  "data": {
   "shadows": "sklearn.metrics.pairwise.PAIRED_DISTANCES"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_pairwise.PAIRWISE_DISTANCE_FUNCTIONS": {
  "data": {
   "shadows": "sklearn.metrics.pairwise.PAIRWISE_DISTANCE_FUNCTIONS"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_pairwise.PAIRWISE_KERNEL_FUNCTIONS": {
  "data": {
   "shadows": "sklearn.metrics.pairwise.PAIRWISE_KERNEL_FUNCTIONS"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_pairwise.additive_chi2_kernel": {
  "data": {
   "shadows": "sklearn.metrics.pairwise.additive_chi2_kernel"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_pairwise.assert_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_pairwise.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_pairwise.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_pairwise.assert_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_pairwise.assert_greater": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_greater"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_pairwise.assert_raises": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_pairwise.assert_raises_regexp": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises_regexp"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_pairwise.assert_true": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_true"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_pairwise.callable_rbf_kernel": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "numpy.atleast_2d",
    "sklearn.metrics.pairwise.rbf_kernel"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise.check_paired_arrays": {
  "data": {
   "shadows": "sklearn.metrics.pairwise.check_paired_arrays"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_pairwise.check_pairwise_arrays": {
  "data": {
   "shadows": "sklearn.metrics.pairwise.check_pairwise_arrays"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_pairwise.check_pairwise_parallel": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "func",
    "make_data",
    "numpy.array",
    "numpy.random.RandomState",
    "scipy.sparse.csr_matrix",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_raises",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise.chi2_kernel": {
  "data": {
   "shadows": "sklearn.metrics.pairwise.chi2_kernel"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_pairwise.cityblock": {
  "data": {
   "shadows": "scipy.spatial.distance.cityblock"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_pairwise.cosine": {
  "data": {
   "shadows": "scipy.spatial.distance.cosine"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_pairwise.cosine_distances": {
  "data": {
   "shadows": "sklearn.metrics.pairwise.cosine_distances"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_pairwise.cosine_similarity": {
  "data": {
   "shadows": "sklearn.metrics.pairwise.cosine_similarity"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_pairwise.csr_matrix": {
  "data": {
   "shadows": "scipy.sparse.csr_matrix"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_pairwise.dok_matrix": {
  "data": {
   "shadows": "scipy.sparse.dok_matrix"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_pairwise.euclidean_distances": {
  "data": {
   "shadows": "sklearn.metrics.pairwise.euclidean_distances"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_pairwise.issparse": {
  "data": {
   "shadows": "scipy.sparse.issparse"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_pairwise.iteritems": {
  "data": {
   "shadows": "sklearn.externals.six.iteritems"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_pairwise.laplacian_kernel": {
  "data": {
   "shadows": "sklearn.metrics.pairwise.laplacian_kernel"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_pairwise.linalg": {
  "data": {
   "shadows": "numpy.linalg"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_pairwise.linear_kernel": {
  "data": {
   "shadows": "sklearn.metrics.pairwise.linear_kernel"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_pairwise.manhattan_distances": {
  "data": {
   "shadows": "sklearn.metrics.pairwise.manhattan_distances"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_pairwise.minkowski": {
  "data": {
   "shadows": "scipy.spatial.distance.minkowski"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_pairwise.normalize": {
  "data": {
   "shadows": "sklearn.preprocessing.normalize"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_pairwise.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_pairwise.paired_distances": {
  "data": {
   "shadows": "sklearn.metrics.pairwise.paired_distances"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_pairwise.paired_euclidean_distances": {
  "data": {
   "shadows": "sklearn.metrics.pairwise.paired_euclidean_distances"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_pairwise.paired_manhattan_distances": {
  "data": {
   "shadows": "sklearn.metrics.pairwise.paired_manhattan_distances"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_pairwise.pairwise_distances": {
  "data": {
   "shadows": "sklearn.metrics.pairwise.pairwise_distances"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_pairwise.pairwise_distances_argmin": {
  "data": {
   "shadows": "sklearn.metrics.pairwise.pairwise_distances_argmin"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_pairwise.pairwise_distances_argmin_min": {
  "data": {
   "shadows": "sklearn.metrics.pairwise.pairwise_distances_argmin_min"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_pairwise.pairwise_kernels": {
  "data": {
   "shadows": "sklearn.metrics.pairwise.pairwise_kernels"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_pairwise.polynomial_kernel": {
  "data": {
   "shadows": "sklearn.metrics.pairwise.polynomial_kernel"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_pairwise.rbf_kernel": {
  "data": {
   "shadows": "sklearn.metrics.pairwise.rbf_kernel"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_pairwise.sigmoid_kernel": {
  "data": {
   "shadows": "sklearn.metrics.pairwise.sigmoid_kernel"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_pairwise.test_check_XB_returned": {
  "data": {
   "lineno": 558,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.resize",
    "sklearn.metrics.pairwise.check_paired_arrays",
    "sklearn.metrics.pairwise.check_pairwise_arrays",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise.test_check_dense_matrices": {
  "data": {
   "lineno": 549,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.resize",
    "sklearn.metrics.pairwise.check_pairwise_arrays",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise.test_check_different_dimensions": {
  "data": {
   "lineno": 574,
   "symbols_in_volume": [
    "ValueError",
    "numpy.arange",
    "numpy.resize",
    "sklearn.metrics.pairwise.check_paired_arrays",
    "sklearn.metrics.pairwise.check_pairwise_arrays",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise.test_check_invalid_dimensions": {
  "data": {
   "lineno": 584,
   "symbols_in_volume": [
    "ValueError",
    "numpy.arange",
    "sklearn.metrics.pairwise.check_pairwise_arrays",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise.test_check_preserve_type": {
  "data": {
   "lineno": 641,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.float",
    "numpy.float32",
    "numpy.resize",
    "sklearn.metrics.pairwise.check_pairwise_arrays",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise.test_check_sparse_arrays": {
  "data": {
   "lineno": 596,
   "symbols_in_volume": [
    "abs",
    "numpy.random.RandomState",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.issparse",
    "sklearn.metrics.pairwise.check_pairwise_arrays",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise.test_check_tuple_input": {
  "data": {
   "lineno": 629,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.metrics.pairwise.check_pairwise_arrays",
    "sklearn.metrics.tests.test_pairwise.tuplify",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise.test_chi_square_kernel": {
  "data": {
   "lineno": 408,
   "symbols_in_volume": [
    "ValueError",
    "enumerate",
    "numpy.all",
    "numpy.diag",
    "numpy.exp",
    "numpy.float",
    "numpy.float32",
    "numpy.int32",
    "numpy.isfinite",
    "numpy.random.RandomState",
    "numpy.sum",
    "scipy.sparse.csr_matrix",
    "sklearn.metrics.pairwise.additive_chi2_kernel",
    "sklearn.metrics.pairwise.chi2_kernel",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_greater",
    "sklearn.utils.testing.assert_raises",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise.test_cosine_similarity": {
  "data": {
   "lineno": 528,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "scipy.sparse.csr_matrix",
    "sklearn.metrics.pairwise.pairwise_kernels",
    "sklearn.preprocessing.normalize",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise.test_cosine_similarity_sparse_output": {
  "data": {
   "lineno": 512,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.issparse",
    "sklearn.metrics.pairwise.cosine_similarity",
    "sklearn.metrics.pairwise.pairwise_kernels",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise.test_euclidean_distances": {
  "data": {
   "lineno": 353,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.max",
    "numpy.random.RandomState",
    "numpy.zeros_like",
    "scipy.sparse.csr_matrix",
    "sklearn.metrics.pairwise.euclidean_distances",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_greater"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise.test_kernel_sparse": {
  "data": {
   "lineno": 473,
   "symbols_in_volume": [
    "kernel",
    "numpy.random.RandomState",
    "scipy.sparse.csr_matrix",
    "sklearn.metrics.pairwise.cosine_similarity",
    "sklearn.metrics.pairwise.laplacian_kernel",
    "sklearn.metrics.pairwise.linear_kernel",
    "sklearn.metrics.pairwise.polynomial_kernel",
    "sklearn.metrics.pairwise.rbf_kernel",
    "sklearn.metrics.pairwise.sigmoid_kernel",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise.test_kernel_symmetry": {
  "data": {
   "lineno": 463,
   "symbols_in_volume": [
    "kernel",
    "numpy.random.RandomState",
    "sklearn.metrics.pairwise.cosine_similarity",
    "sklearn.metrics.pairwise.laplacian_kernel",
    "sklearn.metrics.pairwise.linear_kernel",
    "sklearn.metrics.pairwise.polynomial_kernel",
    "sklearn.metrics.pairwise.rbf_kernel",
    "sklearn.metrics.pairwise.sigmoid_kernel",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise.test_laplacian_kernel": {
  "data": {
   "lineno": 500,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.diag",
    "numpy.ones",
    "numpy.random.RandomState",
    "sklearn.metrics.pairwise.laplacian_kernel",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise.test_linear_kernel": {
  "data": {
   "lineno": 484,
   "symbols_in_volume": [
    "numpy.linalg.norm",
    "numpy.random.RandomState",
    "sklearn.metrics.pairwise.linear_kernel",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise.test_paired_distances": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "ValueError",
    "func",
    "numpy.abs",
    "numpy.diag",
    "numpy.random.RandomState",
    "scipy.sparse.csr_matrix",
    "sklearn.externals.six.iteritems",
    "sklearn.metrics.pairwise.PAIRED_DISTANCES",
    "sklearn.metrics.pairwise.PAIRWISE_DISTANCE_FUNCTIONS",
    "sklearn.metrics.pairwise.paired_distances",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise.test_paired_euclidean_distances": {
  "data": {
   "lineno": 392,
   "symbols_in_volume": [
    "sklearn.metrics.pairwise.paired_euclidean_distances",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise.test_paired_manhattan_distances": {
  "data": {
   "lineno": 400,
   "symbols_in_volume": [
    "sklearn.metrics.pairwise.paired_manhattan_distances",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise.test_pairwise_callable_nonstrict_metric": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "sklearn.metrics.pairwise.pairwise_distances",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise.test_pairwise_distances": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "numpy.random.RandomState",
    "scipy.sparse.csr_matrix",
    "scipy.spatial.distance.cityblock",
    "scipy.spatial.distance.cosine",
    "scipy.spatial.distance.minkowski",
    "sklearn.metrics.pairwise.cosine_distances",
    "sklearn.metrics.pairwise.euclidean_distances",
    "sklearn.metrics.pairwise.manhattan_distances",
    "sklearn.metrics.pairwise.pairwise_distances",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_raises",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise.test_pairwise_distances_argmin_min": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "len",
    "numpy.float32",
    "numpy.ndarray",
    "numpy.random.RandomState",
    "numpy.testing.assert_almost_equal",
    "range",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.dok_matrix",
    "scipy.spatial.distance.minkowski",
    "sklearn.metrics.pairwise.pairwise_distances",
    "sklearn.metrics.pairwise.pairwise_distances_argmin",
    "sklearn.metrics.pairwise.pairwise_distances_argmin_min",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise.test_pairwise_kernels": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "ValueError",
    "function",
    "numpy.random.RandomState",
    "scipy.sparse.csr_matrix",
    "sklearn.metrics.pairwise.PAIRWISE_KERNEL_FUNCTIONS",
    "sklearn.metrics.pairwise.pairwise_kernels",
    "sklearn.metrics.pairwise.rbf_kernel",
    "sklearn.metrics.tests.test_pairwise.callable_rbf_kernel",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_raises",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise.test_pairwise_kernels_filter_param": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "TypeError",
    "numpy.random.RandomState",
    "sklearn.metrics.pairwise.pairwise_kernels",
    "sklearn.metrics.pairwise.rbf_kernel",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise.test_pairwise_parallel": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "func",
    "numpy.arange",
    "scipy.spatial.distance.wminkowski",
    "sklearn.metrics.pairwise.pairwise_distances",
    "sklearn.metrics.pairwise.pairwise_kernels",
    "sklearn.metrics.tests.test_pairwise.check_pairwise_parallel"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise.test_pairwise_precomputed": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "ValueError",
    "func",
    "isinstance",
    "numpy.array",
    "numpy.ndarray",
    "numpy.zeros",
    "sklearn.metrics.pairwise.pairwise_distances",
    "sklearn.metrics.pairwise.pairwise_kernels",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_raises_regexp",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise.test_rbf_kernel": {
  "data": {
   "lineno": 492,
   "symbols_in_volume": [
    "numpy.ones",
    "numpy.random.RandomState",
    "sklearn.metrics.pairwise.rbf_kernel",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise.tuplify": {
  "data": {
   "lineno": 618,
   "symbols_in_volume": [
    "len",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise.wminkowski": {
  "data": {
   "shadows": "scipy.spatial.distance.wminkowski"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_ranking": {
  "data": {},
  "type": "module"
 },
 "sklearn.metrics.tests.test_ranking.UndefinedMetricWarning": {
  "data": {
   "shadows": "sklearn.metrics.base.UndefinedMetricWarning"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_ranking._auc": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "float",
    "len",
    "numpy.sum",
    "numpy.unique"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking._average_precision": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "len",
    "numpy.argsort",
    "numpy.sum",
    "numpy.unique",
    "range"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking._my_lrap": {
  "data": {
   "lineno": 773,
   "symbols_in_volume": [
    "numpy.bincount",
    "numpy.empty",
    "numpy.unique",
    "range",
    "sklearn.utils.validation.check_array",
    "sklearn.utils.validation.check_consistent_length",
    "sum"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking._test_precision_recall_curve": {
  "data": {
   "lineno": 492,
   "symbols_in_volume": [
    "numpy.zeros_like",
    "sklearn.metrics.auc",
    "sklearn.metrics.average_precision_score",
    "sklearn.metrics.precision_recall_curve",
    "sklearn.metrics.tests.test_ranking._average_precision",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.assert_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_ranking.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_ranking.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_ranking.assert_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_ranking.assert_raise_message": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raise_message"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_ranking.assert_raises": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_ranking.assert_warns": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_warns"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_ranking.auc": {
  "data": {
   "shadows": "sklearn.metrics.auc"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_ranking.average_precision_score": {
  "data": {
   "shadows": "sklearn.metrics.average_precision_score"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_ranking.check_alternative_lrap_implementation": {
  "data": {
   "lineno": 811,
   "symbols_in_volume": [
    "hasattr",
    "sklearn.datasets.make_multilabel_classification",
    "sklearn.metrics.label_ranking_average_precision_score",
    "sklearn.metrics.tests.test_ranking._my_lrap",
    "sklearn.random_projection.sparse_random_matrix",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.validation.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.check_array": {
  "data": {
   "shadows": "sklearn.utils.validation.check_array"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_ranking.check_consistent_length": {
  "data": {
   "shadows": "sklearn.utils.validation.check_consistent_length"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_ranking.check_lrap_error_raised": {
  "data": {
   "lineno": 715,
   "symbols_in_volume": [
    "ValueError",
    "lrap_score",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.check_lrap_only_ties": {
  "data": {
   "lineno": 733,
   "symbols_in_volume": [
    "lrap_score",
    "numpy.ones",
    "numpy.zeros",
    "range",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.check_lrap_toy": {
  "data": {
   "lineno": 637,
   "symbols_in_volume": [
    "lrap_score",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.check_lrap_without_tie_and_increasing_score": {
  "data": {
   "lineno": 749,
   "symbols_in_volume": [
    "lrap_score",
    "numpy.arange",
    "numpy.zeros",
    "range",
    "sklearn.utils.testing.assert_almost_equal",
    "sum"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.check_random_state": {
  "data": {
   "shadows": "sklearn.utils.validation.check_random_state"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_ranking.check_zero_or_all_relevant_labels": {
  "data": {
   "lineno": 693,
   "symbols_in_volume": [
    "lrap_score",
    "numpy.ones",
    "numpy.zeros",
    "numpy.zeros_like",
    "range",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.validation.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.clean_warning_registry": {
  "data": {
   "shadows": "sklearn.utils.testing.clean_warning_registry"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_ranking.coverage_error": {
  "data": {
   "shadows": "sklearn.metrics.coverage_error"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_ranking.csr_matrix": {
  "data": {
   "shadows": "scipy.sparse.csr_matrix"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_ranking.datasets": {
  "data": {
   "shadows": "sklearn.datasets"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_ranking.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_ranking.ensemble": {
  "data": {
   "shadows": "sklearn.ensemble"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_ranking.label_ranking_average_precision_score": {
  "data": {
   "shadows": "sklearn.metrics.label_ranking_average_precision_score"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_ranking.label_ranking_loss": {
  "data": {
   "shadows": "sklearn.metrics.label_ranking_loss"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_ranking.make_multilabel_classification": {
  "data": {
   "shadows": "sklearn.datasets.make_multilabel_classification"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_ranking.make_prediction": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "int",
    "numpy.arange",
    "numpy.c_",
    "numpy.random.RandomState",
    "sklearn.datasets.load_iris",
    "sklearn.svm.SVC",
    "sklearn.utils.validation.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_ranking.precision_recall_curve": {
  "data": {
   "shadows": "sklearn.metrics.precision_recall_curve"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_ranking.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_ranking.product": {
  "data": {
   "shadows": "itertools.product"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_ranking.roc_auc_score": {
  "data": {
   "shadows": "sklearn.metrics.roc_auc_score"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_ranking.roc_curve": {
  "data": {
   "shadows": "sklearn.metrics.roc_curve"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_ranking.sparse_random_matrix": {
  "data": {
   "shadows": "sklearn.random_projection.sparse_random_matrix"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_ranking.svm": {
  "data": {
   "shadows": "sklearn.svm"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_ranking.test_auc": {
  "data": {
   "lineno": 370,
   "symbols_in_volume": [
    "sklearn.metrics.auc",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.test_auc_duplicate_values": {
  "data": {
   "lineno": 389,
   "symbols_in_volume": [
    "sklearn.metrics.auc",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.test_auc_errors": {
  "data": {
   "lineno": 405,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.metrics.auc",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.test_auc_score_non_binary_class": {
  "data": {
   "lineno": 416,
   "symbols_in_volume": [
    "ValueError",
    "numpy.ones",
    "numpy.zeros",
    "sklearn.metrics.roc_auc_score",
    "sklearn.metrics.tests.test_ranking.warnings",
    "sklearn.utils.testing.assert_raise_message",
    "sklearn.utils.testing.clean_warning_registry",
    "sklearn.utils.validation.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.test_coverage_error": {
  "data": {
   "lineno": 854,
   "symbols_in_volume": [
    "sklearn.metrics.coverage_error",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.test_coverage_tie_handling": {
  "data": {
   "lineno": 902,
   "symbols_in_volume": [
    "sklearn.metrics.coverage_error",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.test_label_ranking_avp": {
  "data": {
   "lineno": 838,
   "symbols_in_volume": [
    "itertools.product",
    "range",
    "sklearn.metrics.label_ranking_average_precision_score",
    "sklearn.metrics.tests.test_ranking._my_lrap",
    "sklearn.metrics.tests.test_ranking.check_alternative_lrap_implementation",
    "sklearn.metrics.tests.test_ranking.check_lrap_error_raised",
    "sklearn.metrics.tests.test_ranking.check_lrap_only_ties",
    "sklearn.metrics.tests.test_ranking.check_lrap_toy",
    "sklearn.metrics.tests.test_ranking.check_lrap_without_tie_and_increasing_score",
    "sklearn.metrics.tests.test_ranking.check_zero_or_all_relevant_labels"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.test_label_ranking_loss": {
  "data": {
   "lineno": 918,
   "symbols_in_volume": [
    "numpy.array",
    "scipy.sparse.csr_matrix",
    "sklearn.metrics.label_ranking_loss",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.test_precision_recall_curve": {
  "data": {
   "lineno": 457,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.where",
    "sklearn.metrics.precision_recall_curve",
    "sklearn.metrics.tests.test_ranking._test_precision_recall_curve",
    "sklearn.metrics.tests.test_ranking.make_prediction",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.test_precision_recall_curve_errors": {
  "data": {
   "lineno": 512,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.metrics.precision_recall_curve",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.test_precision_recall_curve_pos_label": {
  "data": {
   "lineno": 477,
   "symbols_in_volume": [
    "sklearn.metrics.precision_recall_curve",
    "sklearn.metrics.tests.test_ranking.make_prediction",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.test_precision_recall_curve_toydata": {
  "data": {
   "lineno": 518,
   "symbols_in_volume": [
    "Exception",
    "numpy.array",
    "numpy.errstate",
    "sklearn.metrics.average_precision_score",
    "sklearn.metrics.precision_recall_curve",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.test_ranking_appropriate_input_shape": {
  "data": {
   "lineno": 971,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.metrics.label_ranking_loss",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.test_ranking_loss_ties_handling": {
  "data": {
   "lineno": 984,
   "symbols_in_volume": [
    "sklearn.metrics.label_ranking_loss",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.test_roc_curve": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "sklearn.metrics.auc",
    "sklearn.metrics.roc_auc_score",
    "sklearn.metrics.roc_curve",
    "sklearn.metrics.tests.test_ranking._auc",
    "sklearn.metrics.tests.test_ranking.make_prediction",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.test_roc_curve_confidence": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "sklearn.metrics.auc",
    "sklearn.metrics.roc_curve",
    "sklearn.metrics.tests.test_ranking.make_prediction",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.test_roc_curve_drop_intermediate": {
  "data": {
   "lineno": 353,
   "symbols_in_volume": [
    "sklearn.metrics.roc_curve",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.test_roc_curve_end_points": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.random.RandomState",
    "sklearn.metrics.roc_curve",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.test_roc_curve_hard": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "numpy.ones",
    "numpy.zeros",
    "sklearn.metrics.auc",
    "sklearn.metrics.roc_curve",
    "sklearn.metrics.tests.test_ranking.make_prediction",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.test_roc_curve_multi": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.metrics.roc_curve",
    "sklearn.metrics.tests.test_ranking.make_prediction",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.test_roc_curve_one_label": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "len",
    "numpy.nan",
    "numpy.ones",
    "sklearn.metrics.base.UndefinedMetricWarning",
    "sklearn.metrics.roc_curve",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_warns"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.test_roc_curve_toydata": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "numpy.nan",
    "sklearn.metrics.roc_auc_score",
    "sklearn.metrics.roc_curve",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.test_roc_nonrepeating_thresholds": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "numpy.round",
    "numpy.unique",
    "sklearn.datasets.load_digits",
    "sklearn.ensemble.RandomForestClassifier",
    "sklearn.metrics.roc_curve",
    "sklearn.utils.testing.assert_equal",
    "slice"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.test_roc_returns_consistency": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "numpy.sum",
    "sklearn.metrics.roc_curve",
    "sklearn.metrics.tests.test_ranking.make_prediction",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.test_score_scale_invariance": {
  "data": {
   "lineno": 619,
   "symbols_in_volume": [
    "sklearn.metrics.average_precision_score",
    "sklearn.metrics.roc_auc_score",
    "sklearn.metrics.tests.test_ranking.make_prediction",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_regression": {
  "data": {},
  "type": "module"
 },
 "sklearn.metrics.tests.test_regression._check_reg_targets": {
  "data": {
   "shadows": "sklearn.metrics.regression._check_reg_targets"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_regression.assert_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_regression.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_regression.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_regression.assert_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_regression.assert_raises": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_regression.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_regression.explained_variance_score": {
  "data": {
   "shadows": "sklearn.metrics.explained_variance_score"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_regression.mean_absolute_error": {
  "data": {
   "shadows": "sklearn.metrics.mean_absolute_error"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_regression.mean_squared_error": {
  "data": {
   "shadows": "sklearn.metrics.mean_squared_error"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_regression.median_absolute_error": {
  "data": {
   "shadows": "sklearn.metrics.median_absolute_error"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_regression.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_regression.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_regression.product": {
  "data": {
   "shadows": "itertools.product"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_regression.r2_score": {
  "data": {
   "shadows": "sklearn.metrics.r2_score"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_regression.test__check_reg_targets": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "ValueError",
    "itertools.product",
    "numpy.reshape",
    "sklearn.metrics.regression._check_reg_targets",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_regression.test_multioutput_regression": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.metrics.mean_absolute_error",
    "sklearn.metrics.mean_squared_error",
    "sklearn.metrics.r2_score",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_regression.test_regression_custom_weights": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "sklearn.metrics.explained_variance_score",
    "sklearn.metrics.mean_absolute_error",
    "sklearn.metrics.mean_squared_error",
    "sklearn.metrics.r2_score",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_regression.test_regression_metrics": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "numpy.arange",
    "sklearn.metrics.explained_variance_score",
    "sklearn.metrics.mean_absolute_error",
    "sklearn.metrics.mean_squared_error",
    "sklearn.metrics.median_absolute_error",
    "sklearn.metrics.r2_score",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_regression.test_regression_metrics_at_limits": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "sklearn.metrics.explained_variance_score",
    "sklearn.metrics.mean_absolute_error",
    "sklearn.metrics.mean_squared_error",
    "sklearn.metrics.median_absolute_error",
    "sklearn.metrics.r2_score",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_regression.test_regression_multioutput_array": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "numpy.mean",
    "sklearn.metrics.explained_variance_score",
    "sklearn.metrics.mean_absolute_error",
    "sklearn.metrics.mean_squared_error",
    "sklearn.metrics.r2_score",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_score_objects": {
  "data": {},
  "type": "module"
 },
 "sklearn.metrics.tests.test_score_objects.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_score_objects.CLF_SCORERS": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "sklearn.metrics.tests.test_score_objects.DecisionTreeClassifier": {
  "data": {
   "shadows": "sklearn.tree.DecisionTreeClassifier"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_score_objects.DecisionTreeRegressor": {
  "data": {
   "shadows": "sklearn.tree.DecisionTreeRegressor"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_score_objects.DummyRegressor": {
  "data": {
   "shadows": "sklearn.dummy.DummyRegressor"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_score_objects.DummyScorer": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "sklearn.metrics.tests.test_score_objects.DummyScorer.__call__": {
  "data": {
   "lineno": 126
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_score_objects.ESTIMATORS": {
  "data": {
   "lineno": 70
  },
  "type": "constant"
 },
 "sklearn.metrics.tests.test_score_objects.EstimatorWithFit": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator"
   ]
  },
  "type": "class"
 },
 "sklearn.metrics.tests.test_score_objects.EstimatorWithFit.fit": {
  "data": {
   "lineno": 101
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_score_objects.EstimatorWithFitAndPredict": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "sklearn.metrics.tests.test_score_objects.EstimatorWithFitAndPredict.fit": {
  "data": {
   "lineno": 116
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_score_objects.EstimatorWithFitAndPredict.predict": {
  "data": {
   "lineno": 120
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_score_objects.EstimatorWithFitAndScore": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "sklearn.metrics.tests.test_score_objects.EstimatorWithFitAndScore.fit": {
  "data": {
   "lineno": 107
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_score_objects.EstimatorWithFitAndScore.score": {
  "data": {
   "lineno": 110
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_score_objects.EstimatorWithoutFit": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "sklearn.metrics.tests.test_score_objects.GridSearchCV": {
  "data": {
   "shadows": "sklearn.grid_search.GridSearchCV"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_score_objects.KMeans": {
  "data": {
   "shadows": "sklearn.cluster.KMeans"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_score_objects.LinearSVC": {
  "data": {
   "shadows": "sklearn.svm.LinearSVC"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_score_objects.LogisticRegression": {
  "data": {
   "shadows": "sklearn.linear_model.LogisticRegression"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_score_objects.MULTILABEL_ONLY_SCORERS": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "sklearn.metrics.tests.test_score_objects.OneVsRestClassifier": {
  "data": {
   "shadows": "sklearn.multiclass.OneVsRestClassifier"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_score_objects.REGRESSION_SCORERS": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "sklearn.metrics.tests.test_score_objects.Ridge": {
  "data": {
   "shadows": "sklearn.linear_model.Ridge"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_score_objects.SCORERS": {
  "data": {
   "shadows": "sklearn.metrics.SCORERS"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_score_objects.TEMP_FOLDER": {
  "data": {
   "lineno": 71
  },
  "type": "constant"
 },
 "sklearn.metrics.tests.test_score_objects._PredictScorer": {
  "data": {
   "shadows": "sklearn.metrics.scorer._PredictScorer"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_score_objects._make_estimators": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "dict",
    "sklearn.dummy.DummyRegressor",
    "sklearn.metrics.tests.test_score_objects.CLF_SCORERS",
    "sklearn.metrics.tests.test_score_objects.MULTILABEL_ONLY_SCORERS",
    "sklearn.metrics.tests.test_score_objects.REGRESSION_SCORERS",
    "sklearn.tree.DecisionTreeClassifier"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_score_objects._passthrough_scorer": {
  "data": {
   "shadows": "sklearn.metrics.scorer._passthrough_scorer"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_score_objects.adjusted_rand_score": {
  "data": {
   "shadows": "sklearn.metrics.cluster.adjusted_rand_score"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_score_objects.assert_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_score_objects.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_score_objects.assert_not_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_not_equal"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_score_objects.assert_raises": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_score_objects.assert_raises_regexp": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises_regexp"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_score_objects.assert_true": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_true"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_score_objects.check_scorer_memmap": {
  "data": {
   "lineno": 394,
   "symbols_in_volume": [
    "isinstance",
    "scorer",
    "sklearn.metrics.SCORERS",
    "sklearn.metrics.tests.test_score_objects.ESTIMATORS",
    "sklearn.metrics.tests.test_score_objects.MULTILABEL_ONLY_SCORERS",
    "sklearn.metrics.tests.test_score_objects.numbers",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_score_objects.check_scoring": {
  "data": {
   "shadows": "sklearn.metrics.scorer.check_scoring"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_score_objects.cross_val_score": {
  "data": {
   "shadows": "sklearn.cross_validation.cross_val_score"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_score_objects.f1_score": {
  "data": {
   "shadows": "sklearn.metrics.f1_score"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_score_objects.fbeta_score": {
  "data": {
   "shadows": "sklearn.metrics.fbeta_score"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_score_objects.get_scorer": {
  "data": {
   "shadows": "sklearn.metrics.get_scorer"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_score_objects.ignore_warnings": {
  "data": {
   "shadows": "sklearn.utils.testing.ignore_warnings"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_score_objects.joblib": {
  "data": {
   "shadows": "sklearn.externals.joblib"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_score_objects.load_diabetes": {
  "data": {
   "shadows": "sklearn.datasets.load_diabetes"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_score_objects.log_loss": {
  "data": {
   "shadows": "sklearn.metrics.log_loss"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_score_objects.make_blobs": {
  "data": {
   "shadows": "sklearn.datasets.make_blobs"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_score_objects.make_classification": {
  "data": {
   "shadows": "sklearn.datasets.make_classification"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_score_objects.make_multilabel_classification": {
  "data": {
   "shadows": "sklearn.datasets.make_multilabel_classification"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_score_objects.make_pipeline": {
  "data": {
   "shadows": "sklearn.pipeline.make_pipeline"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_score_objects.make_scorer": {
  "data": {
   "shadows": "sklearn.metrics.make_scorer"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_score_objects.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_score_objects.numbers": {
  "data": {
   "shadows": "numbers"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_score_objects.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_score_objects.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_score_objects.precision_score": {
  "data": {
   "shadows": "sklearn.metrics.precision_score"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_score_objects.r2_score": {
  "data": {
   "shadows": "sklearn.metrics.r2_score"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_score_objects.recall_score": {
  "data": {
   "shadows": "sklearn.metrics.recall_score"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_score_objects.roc_auc_score": {
  "data": {
   "shadows": "sklearn.metrics.roc_auc_score"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_score_objects.setup_module": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "sklearn.datasets.make_classification",
    "sklearn.datasets.make_multilabel_classification",
    "sklearn.externals.joblib.dump",
    "sklearn.externals.joblib.load",
    "sklearn.metrics.tests.test_score_objects.ESTIMATORS",
    "sklearn.metrics.tests.test_score_objects.TEMP_FOLDER",
    "sklearn.metrics.tests.test_score_objects._make_estimators",
    "sklearn.metrics.tests.test_score_objects.os",
    "sklearn.metrics.tests.test_score_objects.tempfile"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_score_objects.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_score_objects.teardown_module": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "sklearn.metrics.tests.test_score_objects.ESTIMATORS",
    "sklearn.metrics.tests.test_score_objects.TEMP_FOLDER",
    "sklearn.metrics.tests.test_score_objects.shutil"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_score_objects.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "sklearn.metrics.tests.test_score_objects.test_check_scoring": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "scorer",
    "sklearn.metrics.scorer._PredictScorer",
    "sklearn.metrics.scorer._passthrough_scorer",
    "sklearn.metrics.scorer.check_scoring",
    "sklearn.metrics.tests.test_score_objects.EstimatorWithFit",
    "sklearn.metrics.tests.test_score_objects.EstimatorWithFitAndPredict",
    "sklearn.metrics.tests.test_score_objects.EstimatorWithFitAndScore",
    "sklearn.metrics.tests.test_score_objects.EstimatorWithoutFit",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_raises_regexp",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_score_objects.test_check_scoring_gridsearchcv": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "isinstance",
    "scorer",
    "sklearn.cross_validation.cross_val_score",
    "sklearn.grid_search.GridSearchCV",
    "sklearn.metrics.scorer._PredictScorer",
    "sklearn.metrics.scorer.check_scoring",
    "sklearn.metrics.tests.test_score_objects.DummyScorer",
    "sklearn.metrics.tests.test_score_objects.EstimatorWithFit",
    "sklearn.pipeline.make_pipeline",
    "sklearn.svm.LinearSVC",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_score_objects.test_classification_scores": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "metric",
    "repr",
    "scorer",
    "sklearn.cross_validation.train_test_split",
    "sklearn.datasets.make_blobs",
    "sklearn.metrics.f1_score",
    "sklearn.metrics.fbeta_score",
    "sklearn.metrics.get_scorer",
    "sklearn.metrics.make_scorer",
    "sklearn.metrics.precision_score",
    "sklearn.metrics.recall_score",
    "sklearn.metrics.tests.test_score_objects.pickle",
    "sklearn.svm.LinearSVC",
    "sklearn.utils.testing.assert_almost_equal",
    "unpickled_scorer"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_score_objects.test_make_scorer": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.metrics.make_scorer",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_score_objects.test_raises_on_score_list": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.cross_validation.cross_val_score",
    "sklearn.datasets.make_blobs",
    "sklearn.grid_search.GridSearchCV",
    "sklearn.metrics.f1_score",
    "sklearn.metrics.make_scorer",
    "sklearn.tree.DecisionTreeClassifier",
    "sklearn.utils.testing.assert_raises",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_score_objects.test_regression_scorers": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "sklearn.cross_validation.train_test_split",
    "sklearn.datasets.load_diabetes",
    "sklearn.linear_model.Ridge",
    "sklearn.metrics.get_scorer",
    "sklearn.metrics.r2_score",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_score_objects.test_scorer_memmap_input": {
  "data": {
   "lineno": 404,
   "symbols_in_volume": [
    "sklearn.metrics.SCORERS.keys",
    "sklearn.metrics.tests.test_score_objects.check_scorer_memmap"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_score_objects.test_scorer_sample_weight": {
  "data": {
   "lineno": 349,
   "symbols_in_volume": [
    "TypeError",
    "numpy.ones_like",
    "scorer",
    "sklearn.cross_validation.train_test_split",
    "sklearn.datasets.make_classification",
    "sklearn.datasets.make_multilabel_classification",
    "sklearn.metrics.SCORERS.items",
    "sklearn.metrics.tests.test_score_objects.MULTILABEL_ONLY_SCORERS",
    "sklearn.metrics.tests.test_score_objects._make_estimators",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_not_equal",
    "sklearn.utils.testing.assert_true",
    "sklearn.utils.testing.ignore_warnings",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_score_objects.test_thresholded_scorers": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.cross_validation.train_test_split",
    "sklearn.datasets.make_blobs",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.metrics.get_scorer",
    "sklearn.metrics.log_loss",
    "sklearn.metrics.roc_auc_score",
    "sklearn.tree.DecisionTreeClassifier",
    "sklearn.tree.DecisionTreeRegressor",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_score_objects.test_thresholded_scorers_multilabel_indicator_data": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "numpy.vstack",
    "sklearn.cross_validation.train_test_split",
    "sklearn.datasets.make_multilabel_classification",
    "sklearn.metrics.get_scorer",
    "sklearn.metrics.roc_auc_score",
    "sklearn.multiclass.OneVsRestClassifier",
    "sklearn.svm.LinearSVC",
    "sklearn.tree.DecisionTreeClassifier",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_score_objects.test_unsupervised_scorers": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": [
    "sklearn.cluster.KMeans",
    "sklearn.cross_validation.train_test_split",
    "sklearn.datasets.make_blobs",
    "sklearn.metrics.cluster.adjusted_rand_score",
    "sklearn.metrics.get_scorer",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.metrics.tests.test_score_objects.train_test_split": {
  "data": {
   "shadows": "sklearn.cross_validation.train_test_split"
  },
  "type": "import"
 },
 "sklearn.mixture": {
  "data": {},
  "type": "module"
 },
 "sklearn.mixture.__all__": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "sklearn.mixture.dpgmm": {
  "data": {},
  "type": "module"
 },
 "sklearn.mixture.dpgmm.DPGMM": {
  "data": {
   "lineno": 109
  },
  "type": "class"
 },
 "sklearn.mixture.dpgmm.DPGMM.__init__": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "sklearn.mixture.dpgmm.DPGMM",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.dpgmm.DPGMM._bound_concentration": {
  "data": {
   "lineno": 395,
   "symbols_in_volume": [
    "numpy.sum",
    "scipy.special.digamma",
    "scipy.special.gammaln"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.dpgmm.DPGMM._bound_means": {
  "data": {
   "lineno": 412,
   "symbols_in_volume": [
    "squared_norm"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.dpgmm.DPGMM._bound_precisions": {
  "data": {
   "lineno": 419,
   "symbols_in_volume": [
    "numpy.log",
    "numpy.maximum",
    "numpy.sum",
    "range",
    "scipy.special.digamma",
    "scipy.special.gammaln",
    "sklearn.mixture.dpgmm._bound_wishart"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.dpgmm.DPGMM._bound_proportions": {
  "data": {
   "lineno": 442,
   "symbols_in_volume": [
    "numpy.cumsum",
    "numpy.finfo",
    "numpy.float32",
    "numpy.log",
    "numpy.sum",
    "scipy.special.digamma"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.dpgmm.DPGMM._do_mstep": {
  "data": {
   "lineno": 377
  },
  "type": "function"
 },
 "sklearn.mixture.dpgmm.DPGMM._fit": {
  "data": {
   "lineno": 484,
   "symbols_in_volume": [
    "abs",
    "check_array",
    "check_random_state",
    "float",
    "hasattr",
    "numpy.e",
    "numpy.identity",
    "numpy.log",
    "numpy.newaxis",
    "numpy.ones",
    "numpy.pi",
    "numpy.sum",
    "numpy.tile",
    "numpy.trace",
    "numpy.zeros",
    "range",
    "scipy.special.digamma",
    "sklearn.mixture.dpgmm.wishart_log_det"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.dpgmm.DPGMM._get_covars": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "pinvh"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.dpgmm.DPGMM._get_precisions": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "numpy.diag"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.dpgmm.DPGMM._initialize_gamma": {
  "data": {
   "lineno": 391,
   "symbols_in_volume": [
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.dpgmm.DPGMM._logprior": {
  "data": {
   "lineno": 455
  },
  "type": "function"
 },
 "sklearn.mixture.dpgmm.DPGMM._monitor": {
  "data": {
   "lineno": 364,
   "symbols_in_volume": [
    "print"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.dpgmm.DPGMM._set_covars": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.dpgmm.DPGMM._set_weights": {
  "data": {
   "lineno": 478,
   "symbols_in_volume": [
    "numpy.sum",
    "xrange"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.dpgmm.DPGMM._update_concentration": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "numpy.sum",
    "range"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.dpgmm.DPGMM._update_means": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.identity",
    "numpy.sum",
    "range",
    "scipy.linalg.lstsq"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.dpgmm.DPGMM._update_precisions": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.identity",
    "numpy.log",
    "numpy.ones",
    "numpy.sum",
    "numpy.tile",
    "numpy.trace",
    "pinvh",
    "range",
    "scipy.linalg.det",
    "scipy.special.digamma",
    "sklearn.mixture.dpgmm.wishart_log_det"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.dpgmm.DPGMM.lower_bound": {
  "data": {
   "lineno": 462,
   "symbols_in_volume": [
    "NotImplementedError",
    "check_is_fitted",
    "numpy.asarray",
    "numpy.newaxis",
    "numpy.sum",
    "sklearn.mixture.dpgmm._bound_state_log_lik"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.dpgmm.DPGMM.score_samples": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "NotImplementedError",
    "check_array",
    "check_is_fitted",
    "numpy.newaxis",
    "numpy.sum",
    "numpy.zeros",
    "range",
    "scipy.special.digamma",
    "sklearn.mixture.dpgmm._bound_state_log_lik",
    "sklearn.mixture.dpgmm.log_normalize"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.dpgmm.VBGMM": {
  "data": {
   "lineno": 615,
   "symbols_in_volume": [
    "sklearn.mixture.dpgmm.DPGMM"
   ]
  },
  "type": "class"
 },
 "sklearn.mixture.dpgmm.VBGMM.__init__": {
  "data": {
   "lineno": 700,
   "symbols_in_volume": [
    "float",
    "sklearn.mixture.dpgmm.VBGMM",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.dpgmm.VBGMM._bound_concentration": {
  "data": {
   "lineno": 768,
   "symbols_in_volume": [
    "numpy.sum",
    "scipy.special.digamma",
    "scipy.special.gammaln"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.dpgmm.VBGMM._bound_proportions": {
  "data": {
   "lineno": 759,
   "symbols_in_volume": [
    "numpy.finfo",
    "numpy.float32",
    "numpy.log",
    "numpy.sum",
    "scipy.special.digamma"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.dpgmm.VBGMM._initialize_gamma": {
  "data": {
   "lineno": 756,
   "symbols_in_volume": [
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.dpgmm.VBGMM._monitor": {
  "data": {
   "lineno": 778,
   "symbols_in_volume": [
    "print"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.dpgmm.VBGMM._set_weights": {
  "data": {
   "lineno": 791,
   "symbols_in_volume": [
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.dpgmm.VBGMM._update_concentration": {
  "data": {
   "lineno": 752,
   "symbols_in_volume": [
    "numpy.sum",
    "range"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.dpgmm.VBGMM.score_samples": {
  "data": {
   "lineno": 709,
   "symbols_in_volume": [
    "NotImplementedError",
    "check_array",
    "check_is_fitted",
    "numpy.newaxis",
    "numpy.sum",
    "scipy.special.digamma",
    "sklearn.mixture.dpgmm._bound_state_log_lik",
    "sklearn.mixture.dpgmm.log_normalize"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.dpgmm._bound_state_log_lik": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "numpy.empty",
    "numpy.sum",
    "range",
    "sklearn.mixture.dpgmm._sym_quad_form"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.dpgmm._bound_wishart": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "numpy.identity",
    "numpy.trace",
    "sklearn.mixture.dpgmm.wishart_log_det",
    "sklearn.mixture.dpgmm.wishart_logz"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.dpgmm._digamma": {
  "data": {
   "shadows": "scipy.special.digamma"
  },
  "type": "import"
 },
 "sklearn.mixture.dpgmm._gammaln": {
  "data": {
   "shadows": "scipy.special.gammaln"
  },
  "type": "import"
 },
 "sklearn.mixture.dpgmm._sym_quad_form": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "numpy.newaxis",
    "scipy.spatial.distance.cdist"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.dpgmm.cdist": {
  "data": {
   "shadows": "scipy.spatial.distance.cdist"
  },
  "type": "import"
 },
 "sklearn.mixture.dpgmm.digamma": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "numpy.finfo",
    "numpy.float32",
    "scipy.special.digamma"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.dpgmm.gammaln": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "numpy.finfo",
    "numpy.float32",
    "scipy.special.gammaln"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.dpgmm.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "sklearn.mixture.dpgmm.log_normalize": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "logsumexp",
    "numpy.exp",
    "numpy.finfo",
    "numpy.float32",
    "numpy.rollaxis",
    "numpy.sum",
    "numpy.swapaxes"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.dpgmm.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.mixture.dpgmm.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "sklearn.mixture.dpgmm.wishart_log_det": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.log",
    "numpy.sum",
    "scipy.special.digamma"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.dpgmm.wishart_logz": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.log",
    "numpy.pi",
    "numpy.sum",
    "scipy.special.gammaln"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.gmm": {
  "data": {
   "symbols_in_volume": [
    "float",
    "numpy.finfo",
    "sklearn.mixture.gmm._covar_mstep_diag",
    "sklearn.mixture.gmm._covar_mstep_full",
    "sklearn.mixture.gmm._covar_mstep_spherical",
    "sklearn.mixture.gmm._covar_mstep_tied"
   ]
  },
  "type": "module"
 },
 "sklearn.mixture.gmm.EPS": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "sklearn.mixture.gmm.GMM": {
  "data": {
   "lineno": 115
  },
  "type": "class"
 },
 "sklearn.mixture.gmm.GMM.__init__": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "DeprecationWarning",
    "ValueError",
    "numpy.ones",
    "sklearn.mixture.gmm.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.gmm.GMM._do_mstep": {
  "data": {
   "lineno": 601,
   "symbols_in_volume": [
    "covar_mstep_func",
    "numpy.dot",
    "numpy.newaxis",
    "sklearn.mixture.gmm.EPS"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.gmm.GMM._fit": {
  "data": {
   "lineno": 445,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "abs",
    "check_array",
    "float",
    "hasattr",
    "numpy.cov",
    "numpy.eye",
    "numpy.float64",
    "numpy.infty",
    "numpy.isneginf",
    "numpy.tile",
    "numpy.zeros",
    "print",
    "range",
    "sklearn.mixture.gmm.distribute_covar_matrix_to_match_covariance_type",
    "str",
    "time.time"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.gmm.GMM._get_covars": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "numpy.diag"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.gmm.GMM._n_parameters": {
  "data": {
   "lineno": 619,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.gmm.GMM._set_covars": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "numpy.asarray",
    "sklearn.mixture.gmm._validate_covars"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.gmm.GMM.aic": {
  "data": {
   "lineno": 648
  },
  "type": "function"
 },
 "sklearn.mixture.gmm.GMM.bic": {
  "data": {
   "lineno": 633,
   "symbols_in_volume": [
    "numpy.log"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.gmm.GMM.fit": {
  "data": {
   "lineno": 579
  },
  "type": "function"
 },
 "sklearn.mixture.gmm.GMM.fit_predict": {
  "data": {
   "lineno": 426
  },
  "type": "function"
 },
 "sklearn.mixture.gmm.GMM.predict": {
  "data": {
   "lineno": 353
  },
  "type": "function"
 },
 "sklearn.mixture.gmm.GMM.predict_proba": {
  "data": {
   "lineno": 367
  },
  "type": "function"
 },
 "sklearn.mixture.gmm.GMM.sample": {
  "data": {
   "lineno": 384,
   "symbols_in_volume": [
    "check_is_fitted",
    "check_random_state",
    "numpy.cumsum",
    "numpy.empty",
    "range",
    "sklearn.mixture.gmm.sample_gaussian"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.gmm.GMM.score": {
  "data": {
   "lineno": 336
  },
  "type": "function"
 },
 "sklearn.mixture.gmm.GMM.score_samples": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "ValueError",
    "check_array",
    "check_is_fitted",
    "logsumexp",
    "numpy.array",
    "numpy.empty",
    "numpy.exp",
    "numpy.log",
    "numpy.newaxis",
    "sklearn.mixture.gmm.log_multivariate_normal_density"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.gmm._covar_mstep_diag": {
  "data": {
   "lineno": 777,
   "symbols_in_volume": [
    "numpy.dot"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.gmm._covar_mstep_full": {
  "data": {
   "lineno": 792,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.empty",
    "numpy.errstate",
    "numpy.eye",
    "range",
    "sklearn.mixture.gmm.EPS"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.gmm._covar_mstep_funcs": {
  "data": {
   "lineno": 821
  },
  "type": "constant"
 },
 "sklearn.mixture.gmm._covar_mstep_spherical": {
  "data": {
   "lineno": 786,
   "symbols_in_volume": [
    "numpy.newaxis",
    "numpy.tile",
    "sklearn.mixture.gmm._covar_mstep_diag"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.gmm._covar_mstep_tied": {
  "data": {
   "lineno": 810,
   "symbols_in_volume": [
    "len",
    "numpy.dot"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.gmm._log_multivariate_normal_density_diag": {
  "data": {
   "lineno": 668,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.log",
    "numpy.pi",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.gmm._log_multivariate_normal_density_full": {
  "data": {
   "lineno": 694,
   "symbols_in_volume": [
    "ValueError",
    "enumerate",
    "len",
    "numpy.diagonal",
    "numpy.empty",
    "numpy.eye",
    "numpy.log",
    "numpy.pi",
    "numpy.sum",
    "scipy.linalg.LinAlgError",
    "scipy.linalg.cholesky",
    "scipy.linalg.solve_triangular",
    "sklearn.externals.six.moves.zip"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.gmm._log_multivariate_normal_density_spherical": {
  "data": {
   "lineno": 678,
   "symbols_in_volume": [
    "numpy.newaxis",
    "numpy.tile",
    "sklearn.mixture.gmm._log_multivariate_normal_density_diag"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.gmm._log_multivariate_normal_density_tied": {
  "data": {
   "lineno": 688,
   "symbols_in_volume": [
    "numpy.tile",
    "sklearn.mixture.gmm._log_multivariate_normal_density_full"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.gmm._validate_covars": {
  "data": {
   "lineno": 720,
   "symbols_in_volume": [
    "ValueError",
    "enumerate",
    "len",
    "numpy.allclose",
    "numpy.any",
    "scipy.linalg.eigvalsh"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.gmm.distribute_covar_matrix_to_match_covariance_type": {
  "data": {
   "lineno": 759,
   "symbols_in_volume": [
    "ValueError",
    "numpy.diag",
    "numpy.ones",
    "numpy.tile"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.gmm.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "sklearn.mixture.gmm.log_multivariate_normal_density": {
  "data": {
   "lineno": 28
  },
  "type": "function"
 },
 "sklearn.mixture.gmm.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.mixture.gmm.sample_gaussian": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "check_random_state",
    "len",
    "numpy.diag",
    "numpy.dot",
    "numpy.sqrt",
    "scipy.linalg.eigh"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.gmm.time": {
  "data": {
   "shadows": "time.time"
  },
  "type": "import"
 },
 "sklearn.mixture.gmm.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.mixture.gmm.zip": {
  "data": {
   "shadows": "sklearn.externals.six.moves.zip"
  },
  "type": "import"
 },
 "sklearn.mixture.tests": {
  "data": {},
  "type": "module"
 },
 "sklearn.mixture.tests.test_dpgmm": {
  "data": {
   "symbols_in_volume": [
    "numpy.seterr"
   ]
  },
  "type": "module"
 },
 "sklearn.mixture.tests.test_dpgmm.DPGMM": {
  "data": {
   "shadows": "sklearn.mixture.DPGMM"
  },
  "type": "import"
 },
 "sklearn.mixture.tests.test_dpgmm.DPGMMTester": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "sklearn.mixture.DPGMM",
    "sklearn.mixture.tests.test_gmm.GMMTester"
   ]
  },
  "type": "class"
 },
 "sklearn.mixture.tests.test_dpgmm.DPGMMTester.score": {
  "data": {
   "lineno": 106
  },
  "type": "function"
 },
 "sklearn.mixture.tests.test_dpgmm.GMMTester": {
  "data": {
   "shadows": "sklearn.mixture.tests.test_gmm.GMMTester"
  },
  "type": "import"
 },
 "sklearn.mixture.tests.test_dpgmm.StringIO": {
  "data": {
   "shadows": "sklearn.externals.six.moves.cStringIO"
  },
  "type": "import"
 },
 "sklearn.mixture.tests.test_dpgmm.TestDPGMMWithDiagCovars": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "sklearn.mixture.tests.test_dpgmm.DPGMMTester",
    "sklearn.mixture.tests.test_dpgmm.unittest",
    "sklearn.mixture.tests.test_gmm.GMMTester._setUp"
   ]
  },
  "type": "class"
 },
 "sklearn.mixture.tests.test_dpgmm.TestDPGMMWithFullCovars": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "sklearn.mixture.tests.test_dpgmm.DPGMMTester",
    "sklearn.mixture.tests.test_dpgmm.unittest",
    "sklearn.mixture.tests.test_gmm.GMMTester._setUp"
   ]
  },
  "type": "class"
 },
 "sklearn.mixture.tests.test_dpgmm.TestDPGMMWithSphericalCovars": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "sklearn.mixture.tests.test_dpgmm.DPGMMTester",
    "sklearn.mixture.tests.test_dpgmm.unittest",
    "sklearn.mixture.tests.test_gmm.GMMTester._setUp"
   ]
  },
  "type": "class"
 },
 "sklearn.mixture.tests.test_dpgmm.TestDPGMMWithTiedCovars": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "sklearn.mixture.tests.test_dpgmm.DPGMMTester",
    "sklearn.mixture.tests.test_dpgmm.unittest",
    "sklearn.mixture.tests.test_gmm.GMMTester._setUp"
   ]
  },
  "type": "class"
 },
 "sklearn.mixture.tests.test_dpgmm.TestVBGMMWithDiagCovars": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "sklearn.mixture.tests.test_dpgmm.VBGMMTester",
    "sklearn.mixture.tests.test_dpgmm.unittest",
    "sklearn.mixture.tests.test_gmm.GMMTester._setUp"
   ]
  },
  "type": "class"
 },
 "sklearn.mixture.tests.test_dpgmm.TestVBGMMWithFullCovars": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "sklearn.mixture.tests.test_dpgmm.VBGMMTester",
    "sklearn.mixture.tests.test_dpgmm.unittest",
    "sklearn.mixture.tests.test_gmm.GMMTester._setUp"
   ]
  },
  "type": "class"
 },
 "sklearn.mixture.tests.test_dpgmm.TestVBGMMWithSphericalCovars": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "sklearn.mixture.tests.test_dpgmm.VBGMMTester",
    "sklearn.mixture.tests.test_dpgmm.unittest",
    "sklearn.mixture.tests.test_gmm.GMMTester._setUp"
   ]
  },
  "type": "class"
 },
 "sklearn.mixture.tests.test_dpgmm.TestVBGMMWithTiedCovars": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "sklearn.mixture.tests.test_dpgmm.VBGMMTester",
    "sklearn.mixture.tests.test_dpgmm.unittest",
    "sklearn.mixture.tests.test_gmm.GMMTester._setUp"
   ]
  },
  "type": "class"
 },
 "sklearn.mixture.tests.test_dpgmm.VBGMM": {
  "data": {
   "shadows": "sklearn.mixture.VBGMM"
  },
  "type": "import"
 },
 "sklearn.mixture.tests.test_dpgmm.VBGMMTester": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "sklearn.mixture.tests.test_dpgmm.do_model",
    "sklearn.mixture.tests.test_gmm.GMMTester"
   ]
  },
  "type": "class"
 },
 "sklearn.mixture.tests.test_dpgmm.VBGMMTester.score": {
  "data": {
   "lineno": 135
  },
  "type": "function"
 },
 "sklearn.mixture.tests.test_dpgmm.assert_array_less": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_less"
  },
  "type": "import"
 },
 "sklearn.mixture.tests.test_dpgmm.assert_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.mixture.tests.test_dpgmm.do_model": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "sklearn.mixture.VBGMM"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.tests.test_dpgmm.log_normalize": {
  "data": {
   "shadows": "sklearn.mixture.dpgmm.log_normalize"
  },
  "type": "import"
 },
 "sklearn.mixture.tests.test_dpgmm.make_blobs": {
  "data": {
   "shadows": "sklearn.datasets.make_blobs"
  },
  "type": "import"
 },
 "sklearn.mixture.tests.test_dpgmm.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.mixture.tests.test_dpgmm.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "sklearn.mixture.tests.test_dpgmm.test_class_weights": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "Model",
    "numpy.bool",
    "numpy.unique",
    "numpy.zeros",
    "sklearn.datasets.make_blobs",
    "sklearn.mixture.DPGMM",
    "sklearn.mixture.VBGMM",
    "sklearn.utils.testing.assert_array_less"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.tests.test_dpgmm.test_log_normalize": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "numpy.allclose",
    "numpy.array",
    "numpy.log",
    "sklearn.mixture.dpgmm.log_normalize"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.tests.test_dpgmm.test_verbose_boolean": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "Model",
    "sklearn.datasets.make_blobs",
    "sklearn.externals.six.moves.cStringIO",
    "sklearn.mixture.DPGMM",
    "sklearn.mixture.VBGMM",
    "sklearn.mixture.tests.test_dpgmm.sys",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.tests.test_dpgmm.test_verbose_first_level": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "Model",
    "sklearn.datasets.make_blobs",
    "sklearn.externals.six.moves.cStringIO",
    "sklearn.mixture.DPGMM",
    "sklearn.mixture.VBGMM",
    "sklearn.mixture.tests.test_dpgmm.sys"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.tests.test_dpgmm.test_verbose_second_level": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "Model",
    "sklearn.datasets.make_blobs",
    "sklearn.externals.six.moves.cStringIO",
    "sklearn.mixture.DPGMM",
    "sklearn.mixture.VBGMM",
    "sklearn.mixture.tests.test_dpgmm.sys"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.tests.test_dpgmm.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "sklearn.mixture.tests.test_gmm": {
  "data": {
   "symbols_in_volume": [
    "numpy.random.RandomState"
   ]
  },
  "type": "module"
 },
 "sklearn.mixture.tests.test_gmm.GMMTester": {
  "data": {
   "lineno": 150
  },
  "type": "class"
 },
 "sklearn.mixture.tests.test_gmm.GMMTester._setUp": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.eye",
    "range",
    "sklearn.datasets.samples_generator.make_spd_matrix",
    "sklearn.mixture.tests.test_gmm.rng"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.tests.test_gmm.GMMTester.score": {
  "data": {
   "lineno": 278
  },
  "type": "function"
 },
 "sklearn.mixture.tests.test_gmm.GMMTester.test_eval": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "numpy.ones",
    "numpy.repeat",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_array_equal",
    "sklearn.mixture.tests.test_gmm.rng"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.tests.test_gmm.GMMTester.test_sample": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "numpy.maximum",
    "sklearn.mixture.tests.test_gmm.rng"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.tests.test_gmm.GMMTester.test_train": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "numpy.diff",
    "range",
    "sklearn.mixture.GMM",
    "sklearn.mixture.tests.test_gmm.rng"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.tests.test_gmm.GMMTester.test_train_1d": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "isinstance",
    "numpy.abs",
    "numpy.sum",
    "sklearn.mixture.DPGMM",
    "sklearn.mixture.tests.test_gmm.rng"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.tests.test_gmm.GMMTester.test_train_degenerate": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.sum",
    "sklearn.mixture.tests.test_gmm.rng"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.tests.test_gmm.StringIO": {
  "data": {
   "shadows": "sklearn.externals.six.moves.cStringIO"
  },
  "type": "import"
 },
 "sklearn.mixture.tests.test_gmm.TestGMMWithDiagonalCovars": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "sklearn.mixture.GMM",
    "sklearn.mixture.tests.test_gmm.GMMTester",
    "sklearn.mixture.tests.test_gmm.unittest"
   ]
  },
  "type": "class"
 },
 "sklearn.mixture.tests.test_gmm.TestGMMWithFullCovars": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "sklearn.mixture.GMM",
    "sklearn.mixture.tests.test_gmm.GMMTester",
    "sklearn.mixture.tests.test_gmm.unittest"
   ]
  },
  "type": "class"
 },
 "sklearn.mixture.tests.test_gmm.TestGMMWithSphericalCovars": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "sklearn.mixture.GMM",
    "sklearn.mixture.tests.test_gmm.GMMTester",
    "sklearn.mixture.tests.test_gmm.unittest"
   ]
  },
  "type": "class"
 },
 "sklearn.mixture.tests.test_gmm.TestGMMWithTiedCovars": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": [
    "sklearn.mixture.GMM",
    "sklearn.mixture.tests.test_gmm.GMMTester",
    "sklearn.mixture.tests.test_gmm.unittest"
   ]
  },
  "type": "class"
 },
 "sklearn.mixture.tests.test_gmm._naive_lmvnpdf_diag": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "numpy.empty",
    "numpy.log",
    "numpy.sqrt",
    "scipy.stats.norm.pdf",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.tests.test_gmm.adjusted_rand_score": {
  "data": {
   "shadows": "sklearn.metrics.cluster.adjusted_rand_score"
  },
  "type": "import"
 },
 "sklearn.mixture.tests.test_gmm.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.mixture.tests.test_gmm.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.mixture.tests.test_gmm.assert_fit_predict_correct": {
  "data": {
   "lineno": 346,
   "symbols_in_volume": [
    "sklearn.metrics.cluster.adjusted_rand_score",
    "sklearn.mixture.tests.test_gmm.copy"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.tests.test_gmm.assert_greater": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_greater"
  },
  "type": "import"
 },
 "sklearn.mixture.tests.test_gmm.assert_raise_message": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raise_message"
  },
  "type": "import"
 },
 "sklearn.mixture.tests.test_gmm.assert_raises": {
  "data": {
   "shadows": "numpy.testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.mixture.tests.test_gmm.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "sklearn.mixture.tests.test_gmm.check_positive_definite_covars": {
  "data": {
   "lineno": 396,
   "symbols_in_volume": [
    "numpy.linalg.det",
    "numpy.random.RandomState",
    "sklearn.mixture.GMM",
    "sklearn.mixture.tests.test_gmm.rng",
    "sklearn.utils.testing.assert_greater"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.tests.test_gmm.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "sklearn.mixture.tests.test_gmm.make_spd_matrix": {
  "data": {
   "shadows": "sklearn.datasets.samples_generator.make_spd_matrix"
  },
  "type": "import"
 },
 "sklearn.mixture.tests.test_gmm.mixture": {
  "data": {
   "shadows": "sklearn.mixture"
  },
  "type": "import"
 },
 "sklearn.mixture.tests.test_gmm.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.mixture.tests.test_gmm.rng": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "sklearn.mixture.tests.test_gmm.sample_gaussian": {
  "data": {
   "shadows": "sklearn.mixture.sample_gaussian"
  },
  "type": "import"
 },
 "sklearn.mixture.tests.test_gmm.stats": {
  "data": {
   "shadows": "scipy.stats"
  },
  "type": "import"
 },
 "sklearn.mixture.tests.test_gmm.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "sklearn.mixture.tests.test_gmm.test_1d_1component": {
  "data": {
   "lineno": 330,
   "symbols_in_volume": [
    "numpy.testing.assert_array_almost_equal",
    "sklearn.mixture.GMM",
    "sklearn.mixture.tests.test_gmm.rng"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.tests.test_gmm.test_GMM_attributes": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "ValueError",
    "nose.tools.assert_true",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_raises",
    "numpy.zeros",
    "sklearn.mixture.GMM",
    "sklearn.mixture.tests.test_gmm.rng"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.tests.test_gmm.test_aic": {
  "data": {
   "lineno": 378,
   "symbols_in_volume": [
    "nose.tools.assert_true",
    "numpy.abs",
    "numpy.log",
    "numpy.pi",
    "numpy.sqrt",
    "sklearn.mixture.GMM",
    "sklearn.mixture.tests.test_gmm.rng"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.tests.test_gmm.test_fit_predict": {
  "data": {
   "lineno": 355,
   "symbols_in_volume": [
    "m_constructor",
    "numpy.all",
    "numpy.array",
    "numpy.random.RandomState",
    "numpy.vstack",
    "sklearn.mixture.DPGMM",
    "sklearn.mixture.GMM",
    "sklearn.mixture.VBGMM",
    "sklearn.mixture.tests.test_gmm.assert_fit_predict_correct"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.tests.test_gmm.test_lmvnpdf_diag": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "numpy.testing.assert_array_almost_equal",
    "sklearn.mixture.log_multivariate_normal_density",
    "sklearn.mixture.tests.test_gmm._naive_lmvnpdf_diag",
    "sklearn.mixture.tests.test_gmm.rng"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.tests.test_gmm.test_lmvnpdf_full": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.diag",
    "numpy.testing.assert_array_almost_equal",
    "sklearn.mixture.log_multivariate_normal_density",
    "sklearn.mixture.tests.test_gmm._naive_lmvnpdf_diag",
    "sklearn.mixture.tests.test_gmm.rng"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.tests.test_gmm.test_lmvnpdf_spherical": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "numpy.testing.assert_array_almost_equal",
    "numpy.tile",
    "sklearn.mixture.log_multivariate_normal_density",
    "sklearn.mixture.tests.test_gmm._naive_lmvnpdf_diag",
    "sklearn.mixture.tests.test_gmm.rng"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.tests.test_gmm.test_lvmpdf_full_cv_non_positive_definite": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "numpy.mean",
    "numpy.random.RandomState",
    "sklearn.mixture.log_multivariate_normal_density",
    "sklearn.mixture.tests.test_gmm.rng",
    "sklearn.utils.testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.tests.test_gmm.test_multiple_init": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": [
    "nose.tools.assert_true",
    "sklearn.mixture.GMM",
    "sklearn.mixture.tests.test_gmm.rng"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.tests.test_gmm.test_n_parameters": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": [
    "nose.tools.assert_true",
    "sklearn.mixture.GMM",
    "sklearn.mixture.tests.test_gmm.rng"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.tests.test_gmm.test_positive_definite_covars": {
  "data": {
   "lineno": 441,
   "symbols_in_volume": [
    "sklearn.mixture.tests.test_gmm.check_positive_definite_covars"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.tests.test_gmm.test_sample_gaussian": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "nose.tools.assert_true",
    "numpy.allclose",
    "numpy.cov",
    "numpy.dot",
    "numpy.eye",
    "numpy.isfinite",
    "numpy.repeat",
    "sklearn.mixture.sample_gaussian",
    "sklearn.mixture.tests.test_gmm.rng"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.tests.test_gmm.test_verbose_first_level": {
  "data": {
   "lineno": 447,
   "symbols_in_volume": [
    "sklearn.externals.six.moves.cStringIO",
    "sklearn.mixture.GMM",
    "sklearn.mixture.tests.test_gmm.rng",
    "sklearn.mixture.tests.test_gmm.sys"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.tests.test_gmm.test_verbose_second_level": {
  "data": {
   "lineno": 461,
   "symbols_in_volume": [
    "sklearn.externals.six.moves.cStringIO",
    "sklearn.mixture.GMM",
    "sklearn.mixture.tests.test_gmm.rng",
    "sklearn.mixture.tests.test_gmm.sys"
   ]
  },
  "type": "function"
 },
 "sklearn.mixture.tests.test_gmm.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "sklearn.naive_bayes": {
  "data": {},
  "type": "module"
 },
 "sklearn.naive_bayes.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "sklearn.naive_bayes.BaseDiscreteNB": {
  "data": {
   "lineno": 402,
   "symbols_in_volume": [
    "property",
    "sklearn.naive_bayes.BaseNB"
   ]
  },
  "type": "class"
 },
 "sklearn.naive_bayes.BaseDiscreteNB._get_coef": {
  "data": {
   "lineno": 559,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "sklearn.naive_bayes.BaseDiscreteNB._get_intercept": {
  "data": {
   "lineno": 563,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "sklearn.naive_bayes.BaseDiscreteNB._update_class_log_prior": {
  "data": {
   "lineno": 411,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.log",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "sklearn.naive_bayes.BaseDiscreteNB.fit": {
  "data": {
   "lineno": 507,
   "symbols_in_volume": [
    "LabelBinarizer",
    "check_X_y",
    "check_array",
    "numpy.atleast_2d",
    "numpy.concatenate",
    "numpy.float64",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "sklearn.naive_bayes.BaseDiscreteNB.partial_fit": {
  "data": {
   "lineno": 425,
   "symbols_in_volume": [
    "ValueError",
    "_check_partial_fit_first_call",
    "check_array",
    "label_binarize",
    "len",
    "numpy.atleast_2d",
    "numpy.concatenate",
    "numpy.float64",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "sklearn.naive_bayes.BaseNB": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "abc.ABCMeta"
   ]
  },
  "type": "class"
 },
 "sklearn.naive_bayes.BaseNB._joint_log_likelihood": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "sklearn.naive_bayes.BaseNB.predict": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "numpy.argmax"
   ]
  },
  "type": "function"
 },
 "sklearn.naive_bayes.BaseNB.predict_log_proba": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "logsumexp",
    "numpy.atleast_2d"
   ]
  },
  "type": "function"
 },
 "sklearn.naive_bayes.BaseNB.predict_proba": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "numpy.exp"
   ]
  },
  "type": "function"
 },
 "sklearn.naive_bayes.BernoulliNB": {
  "data": {
   "lineno": 676,
   "symbols_in_volume": [
    "sklearn.naive_bayes.BaseDiscreteNB"
   ]
  },
  "type": "class"
 },
 "sklearn.naive_bayes.BernoulliNB.__init__": {
  "data": {
   "lineno": 747
  },
  "type": "function"
 },
 "sklearn.naive_bayes.BernoulliNB._count": {
  "data": {
   "lineno": 754,
   "symbols_in_volume": [
    "binarize",
    "safe_sparse_dot"
   ]
  },
  "type": "function"
 },
 "sklearn.naive_bayes.BernoulliNB._joint_log_likelihood": {
  "data": {
   "lineno": 769,
   "symbols_in_volume": [
    "ValueError",
    "binarize",
    "check_array",
    "check_is_fitted",
    "numpy.exp",
    "numpy.log",
    "safe_sparse_dot"
   ]
  },
  "type": "function"
 },
 "sklearn.naive_bayes.BernoulliNB._update_feature_log_prob": {
  "data": {
   "lineno": 761,
   "symbols_in_volume": [
    "numpy.log"
   ]
  },
  "type": "function"
 },
 "sklearn.naive_bayes.GaussianNB": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "sklearn.naive_bayes.BaseNB"
   ]
  },
  "type": "class"
 },
 "sklearn.naive_bayes.GaussianNB._joint_log_likelihood": {
  "data": {
   "lineno": 386,
   "symbols_in_volume": [
    "check_array",
    "check_is_fitted",
    "numpy.array",
    "numpy.log",
    "numpy.pi",
    "numpy.size",
    "numpy.sum",
    "range"
   ]
  },
  "type": "function"
 },
 "sklearn.naive_bayes.GaussianNB._partial_fit": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": [
    "ValueError",
    "_check_partial_fit_first_call",
    "check_X_y",
    "in1d",
    "len",
    "numpy.all",
    "numpy.sum",
    "numpy.unique",
    "numpy.var",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "sklearn.naive_bayes.GaussianNB._update_mean_variance": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "float",
    "numpy.average",
    "numpy.mean",
    "numpy.var",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "sklearn.naive_bayes.GaussianNB.fit": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "check_X_y",
    "numpy.unique"
   ]
  },
  "type": "function"
 },
 "sklearn.naive_bayes.GaussianNB.partial_fit": {
  "data": {
   "lineno": 252
  },
  "type": "function"
 },
 "sklearn.naive_bayes.MultinomialNB": {
  "data": {
   "lineno": 571,
   "symbols_in_volume": [
    "sklearn.naive_bayes.BaseDiscreteNB"
   ]
  },
  "type": "class"
 },
 "sklearn.naive_bayes.MultinomialNB.__init__": {
  "data": {
   "lineno": 647
  },
  "type": "function"
 },
 "sklearn.naive_bayes.MultinomialNB._count": {
  "data": {
   "lineno": 652,
   "symbols_in_volume": [
    "ValueError",
    "numpy.any",
    "safe_sparse_dot",
    "scipy.sparse.issparse"
   ]
  },
  "type": "function"
 },
 "sklearn.naive_bayes.MultinomialNB._joint_log_likelihood": {
  "data": {
   "lineno": 667,
   "symbols_in_volume": [
    "check_array",
    "check_is_fitted",
    "safe_sparse_dot"
   ]
  },
  "type": "function"
 },
 "sklearn.naive_bayes.MultinomialNB._update_feature_log_prob": {
  "data": {
   "lineno": 659,
   "symbols_in_volume": [
    "numpy.log"
   ]
  },
  "type": "function"
 },
 "sklearn.naive_bayes.__all__": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "sklearn.naive_bayes.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "sklearn.naive_bayes.issparse": {
  "data": {
   "shadows": "scipy.sparse.issparse"
  },
  "type": "import"
 },
 "sklearn.naive_bayes.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.neighbors": {
  "data": {},
  "type": "module"
 },
 "sklearn.neighbors.__all__": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "sklearn.neighbors.approximate": {
  "data": {
   "symbols_in_volume": [
    "numpy.dtype",
    "sklearn.neighbors.approximate.HASH_DTYPE"
   ]
  },
  "type": "module"
 },
 "sklearn.neighbors.approximate.GaussianRandomProjectionHash": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "sklearn.neighbors.approximate.ProjectionToHashMixin"
   ]
  },
  "type": "class"
 },
 "sklearn.neighbors.approximate.GaussianRandomProjectionHash.__init__": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "sklearn.neighbors.approximate.GaussianRandomProjectionHash",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.approximate.HASH_DTYPE": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "sklearn.neighbors.approximate.LSHForest": {
  "data": {
   "lineno": 110
  },
  "type": "class"
 },
 "sklearn.neighbors.approximate.LSHForest.__init__": {
  "data": {
   "lineno": 209
  },
  "type": "function"
 },
 "sklearn.neighbors.approximate.LSHForest._compute_distances": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "float",
    "numpy.argsort",
    "numpy.empty",
    "numpy.int",
    "pairwise_distances",
    "scipy.sparse.issparse"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.approximate.LSHForest._generate_masks": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "int",
    "numpy.ones",
    "numpy.packbits",
    "numpy.tril",
    "sklearn.neighbors.approximate.HASH_DTYPE",
    "sklearn.neighbors.approximate.MAX_HASH_SIZE"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.approximate.LSHForest._get_candidates": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "int",
    "len",
    "numpy.arange",
    "numpy.concatenate",
    "numpy.fromiter",
    "numpy.intp",
    "numpy.setdiff1d",
    "range",
    "set",
    "sklearn.neighbors.approximate._find_matching_indices",
    "sklearn.neighbors.approximate.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.approximate.LSHForest._get_radius_neighbors": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "float",
    "int",
    "numpy.append",
    "numpy.array",
    "numpy.insert",
    "numpy.searchsorted",
    "numpy.setdiff1d",
    "range",
    "sklearn.neighbors.approximate._find_matching_indices"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.approximate.LSHForest._query": {
  "data": {
   "lineno": 386,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.max",
    "numpy.rollaxis",
    "sklearn.neighbors.approximate.MAX_HASH_SIZE",
    "sklearn.neighbors.approximate._find_longest_prefix_match",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.approximate.LSHForest.fit": {
  "data": {
   "lineno": 337,
   "symbols_in_volume": [
    "check_array",
    "check_random_state",
    "numpy.argsort",
    "numpy.iinfo",
    "numpy.int32",
    "range",
    "sklearn.neighbors.approximate.GaussianRandomProjectionHash",
    "sklearn.neighbors.approximate.MAX_HASH_SIZE"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.approximate.LSHForest.kneighbors": {
  "data": {
   "lineno": 401,
   "symbols_in_volume": [
    "ValueError",
    "check_array",
    "hasattr",
    "numpy.array",
    "range"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.approximate.LSHForest.partial_fit": {
  "data": {
   "lineno": 509,
   "symbols_in_volume": [
    "ValueError",
    "check_array",
    "hasattr",
    "numpy.arange",
    "numpy.insert",
    "numpy.row_stack",
    "range",
    "scipy.sparse.issparse",
    "scipy.sparse.vstack"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.approximate.LSHForest.radius_neighbors": {
  "data": {
   "lineno": 450,
   "symbols_in_volume": [
    "ValueError",
    "check_array",
    "hasattr",
    "range",
    "sklearn.neighbors.approximate._array_of_arrays"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.approximate.MAX_HASH_SIZE": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "sklearn.neighbors.approximate.ProjectionToHashMixin": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "sklearn.neighbors.approximate.ProjectionToHashMixin._to_hash": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "numpy.packbits",
    "sklearn.neighbors.approximate.HASH_DTYPE",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.approximate.ProjectionToHashMixin.fit_transform": {
  "data": {
   "lineno": 84
  },
  "type": "function"
 },
 "sklearn.neighbors.approximate.ProjectionToHashMixin.transform": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "sklearn.neighbors.approximate.ProjectionToHashMixin",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.approximate.__all__": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "sklearn.neighbors.approximate._array_of_arrays": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "len",
    "numpy.empty",
    "object"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.approximate._find_longest_prefix_match": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.empty_like",
    "numpy.intp",
    "numpy.zeros_like",
    "sklearn.neighbors.approximate._find_matching_indices"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.approximate._find_matching_indices": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "numpy.searchsorted"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.approximate.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.neighbors.approximate.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.neighbors.approximate.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.neighbors.base": {
  "data": {
   "symbols_in_volume": [
    "dict",
    "list",
    "sklearn.neighbors.base.NeighborsWarning",
    "sklearn.neighbors.base.warnings"
   ]
  },
  "type": "module"
 },
 "sklearn.neighbors.base.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "sklearn.neighbors.base.KNeighborsMixin": {
  "data": {
   "lineno": 284,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "sklearn.neighbors.base.KNeighborsMixin.kneighbors": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "NotFittedError",
    "Parallel",
    "ValueError",
    "_get_n_jobs",
    "argpartition",
    "check_array",
    "delayed",
    "gen_even_slices",
    "numpy.all",
    "numpy.arange",
    "numpy.argsort",
    "numpy.reshape",
    "numpy.sqrt",
    "numpy.vstack",
    "pairwise_distances",
    "scipy.sparse.issparse",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.base.KNeighborsMixin.kneighbors_graph": {
  "data": {
   "lineno": 438,
   "symbols_in_volume": [
    "ValueError",
    "check_array",
    "numpy.arange",
    "numpy.ones",
    "numpy.ravel",
    "scipy.sparse.csr_matrix"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.base.NeighborsBase": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "abc.ABCMeta"
   ]
  },
  "type": "class"
 },
 "sklearn.neighbors.base.NeighborsBase.__init__": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.base.NeighborsBase._fit": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "BallTree",
    "KDTree",
    "ValueError",
    "check_array",
    "isinstance",
    "numpy.inf",
    "scipy.sparse.issparse",
    "sklearn.neighbors.base.NeighborsBase",
    "sklearn.neighbors.base.VALID_METRICS",
    "sklearn.neighbors.base.VALID_METRICS_SPARSE",
    "sklearn.neighbors.base.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.base.NeighborsBase._init_params": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "DeprecationWarning",
    "SyntaxWarning",
    "ValueError",
    "callable",
    "sklearn.neighbors.base.VALID_METRICS",
    "sklearn.neighbors.base.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.base.NeighborsBase._pairwise": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.base.NeighborsWarning": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "UserWarning"
   ]
  },
  "type": "class"
 },
 "sklearn.neighbors.base.RadiusNeighborsMixin": {
  "data": {
   "lineno": 517,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "sklearn.neighbors.base.RadiusNeighborsMixin.radius_neighbors": {
  "data": {
   "lineno": 520,
   "symbols_in_volume": [
    "NotFittedError",
    "ValueError",
    "check_array",
    "enumerate",
    "numpy.empty",
    "numpy.sqrt",
    "numpy.where",
    "pairwise_distances",
    "scipy.sparse.issparse"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.base.RadiusNeighborsMixin.radius_neighbors_graph": {
  "data": {
   "lineno": 666,
   "symbols_in_volume": [
    "ValueError",
    "check_array",
    "int",
    "len",
    "list",
    "numpy.array",
    "numpy.concatenate",
    "numpy.cumsum",
    "numpy.ones",
    "numpy.zeros",
    "scipy.sparse.csr_matrix"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.base.SupervisedFloatMixin": {
  "data": {
   "lineno": 743,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "sklearn.neighbors.base.SupervisedFloatMixin.fit": {
  "data": {
   "lineno": 744,
   "symbols_in_volume": [
    "BallTree",
    "KDTree",
    "check_X_y",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.base.SupervisedIntegerMixin": {
  "data": {
   "lineno": 763,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "sklearn.neighbors.base.SupervisedIntegerMixin.fit": {
  "data": {
   "lineno": 764,
   "symbols_in_volume": [
    "BallTree",
    "KDTree",
    "check_X_y",
    "check_classification_targets",
    "isinstance",
    "numpy.empty",
    "numpy.int",
    "numpy.unique",
    "range",
    "sklearn.neighbors.base.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.base.UnsupervisedMixin": {
  "data": {
   "lineno": 806,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "sklearn.neighbors.base.UnsupervisedMixin.fit": {
  "data": {
   "lineno": 807
  },
  "type": "function"
 },
 "sklearn.neighbors.base.VALID_METRICS": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "sklearn.neighbors.base.VALID_METRICS_SPARSE": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "sklearn.neighbors.base._check_weights": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "ValueError",
    "callable"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.base._get_weights": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "ValueError",
    "callable",
    "enumerate",
    "hasattr",
    "numpy.any",
    "numpy.dtype",
    "numpy.errstate",
    "numpy.isinf",
    "object",
    "weights"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.base.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "sklearn.neighbors.base.csr_matrix": {
  "data": {
   "shadows": "scipy.sparse.csr_matrix"
  },
  "type": "import"
 },
 "sklearn.neighbors.base.issparse": {
  "data": {
   "shadows": "scipy.sparse.issparse"
  },
  "type": "import"
 },
 "sklearn.neighbors.base.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.neighbors.base.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.neighbors.classification": {
  "data": {},
  "type": "module"
 },
 "sklearn.neighbors.classification.KNeighborsClassifier": {
  "data": {
   "lineno": 23
  },
  "type": "class"
 },
 "sklearn.neighbors.classification.KNeighborsClassifier.__init__": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "_check_weights"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.classification.KNeighborsClassifier.predict": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "_get_weights",
    "check_array",
    "enumerate",
    "len",
    "numpy.asarray",
    "numpy.empty",
    "numpy.intp",
    "scipy.stats.mode",
    "weighted_mode"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.classification.KNeighborsClassifier.predict_proba": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "_get_weights",
    "check_array",
    "enumerate",
    "numpy.arange",
    "numpy.newaxis",
    "numpy.ones_like",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.classification.RadiusNeighborsClassifier": {
  "data": {
   "lineno": 229
  },
  "type": "class"
 },
 "sklearn.neighbors.classification.RadiusNeighborsClassifier.__init__": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": [
    "_check_weights"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.classification.RadiusNeighborsClassifier.predict": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": [
    "ValueError",
    "_get_weights",
    "check_array",
    "enumerate",
    "len",
    "numpy.array",
    "numpy.empty",
    "numpy.int",
    "object",
    "scipy.stats.mode",
    "weighted_mode",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.classification.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.neighbors.classification.stats": {
  "data": {
   "shadows": "scipy.stats"
  },
  "type": "import"
 },
 "sklearn.neighbors.graph": {
  "data": {},
  "type": "module"
 },
 "sklearn.neighbors.graph._check_params": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "ValueError",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.graph._query_include_self": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "DeprecationWarning",
    "sklearn.neighbors.graph.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.graph.kneighbors_graph": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "NearestNeighbors",
    "isinstance",
    "sklearn.neighbors.graph._check_params",
    "sklearn.neighbors.graph._query_include_self"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.graph.radius_neighbors_graph": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "NearestNeighbors",
    "isinstance",
    "sklearn.neighbors.graph._check_params",
    "sklearn.neighbors.graph._query_include_self"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.graph.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.neighbors.kde": {
  "data": {},
  "type": "module"
 },
 "sklearn.neighbors.kde.KernelDensity": {
  "data": {
   "lineno": 24
  },
  "type": "class"
 },
 "sklearn.neighbors.kde.KernelDensity.__init__": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.neighbors.kde.VALID_KERNELS"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.kde.KernelDensity._choose_algorithm": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.neighbors.kde.TREE_DICT"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.kde.KernelDensity.fit": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "check_array",
    "sklearn.neighbors.kde.TREE_DICT"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.kde.KernelDensity.sample": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "NotImplementedError",
    "check_random_state",
    "numpy.asarray",
    "numpy.atleast_2d",
    "numpy.newaxis",
    "numpy.sqrt",
    "row_norms",
    "scipy.special.gammainc"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.kde.KernelDensity.score": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.kde.KernelDensity.score_samples": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "check_array",
    "numpy.log"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.kde.TREE_DICT": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "sklearn.neighbors.kde.VALID_KERNELS": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "sklearn.neighbors.kde.gammainc": {
  "data": {
   "shadows": "scipy.special.gammainc"
  },
  "type": "import"
 },
 "sklearn.neighbors.kde.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.neighbors.nearest_centroid": {
  "data": {},
  "type": "module"
 },
 "sklearn.neighbors.nearest_centroid.NearestCentroid": {
  "data": {
   "lineno": 22
  },
  "type": "class"
 },
 "sklearn.neighbors.nearest_centroid.NearestCentroid.__init__": {
  "data": {
   "lineno": 81
  },
  "type": "function"
 },
 "sklearn.neighbors.nearest_centroid.NearestCentroid.fit": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "LabelEncoder",
    "ValueError",
    "check_X_y",
    "check_classification_targets",
    "csc_median_axis_0",
    "len",
    "numpy.abs",
    "numpy.empty",
    "numpy.float64",
    "numpy.mean",
    "numpy.median",
    "numpy.newaxis",
    "numpy.sign",
    "numpy.sqrt",
    "numpy.sum",
    "numpy.where",
    "numpy.zeros",
    "range",
    "scipy.sparse.issparse",
    "sklearn.neighbors.nearest_centroid.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.nearest_centroid.NearestCentroid.predict": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "check_array",
    "check_is_fitted",
    "pairwise_distances"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.nearest_centroid.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.neighbors.nearest_centroid.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.neighbors.nearest_centroid.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.neighbors.regression": {
  "data": {},
  "type": "module"
 },
 "sklearn.neighbors.regression.KNeighborsRegressor": {
  "data": {
   "lineno": 19
  },
  "type": "class"
 },
 "sklearn.neighbors.regression.KNeighborsRegressor.__init__": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "_check_weights"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.regression.KNeighborsRegressor.predict": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "_get_weights",
    "check_array",
    "numpy.empty",
    "numpy.float",
    "numpy.mean",
    "numpy.sum",
    "range"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.regression.RadiusNeighborsRegressor": {
  "data": {
   "lineno": 168
  },
  "type": "class"
 },
 "sklearn.neighbors.regression.RadiusNeighborsRegressor.__init__": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "_check_weights"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.regression.RadiusNeighborsRegressor.predict": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "_get_weights",
    "check_array",
    "enumerate",
    "numpy.array",
    "numpy.average",
    "numpy.mean"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.regression.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.neighbors.setup": {
  "data": {},
  "type": "module"
 },
 "sklearn.neighbors.setup.Configuration": {
  "data": {
   "shadows": "numpy.distutils.misc_util.Configuration"
  },
  "type": "import"
 },
 "sklearn.neighbors.setup.configuration": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "numpy.distutils.misc_util.Configuration",
    "sklearn.neighbors.setup.numpy",
    "sklearn.neighbors.setup.os"
   ]
  },
  "type": "function"
 },
 "sklearn.neighbors.setup.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.neighbors.setup.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "sklearn.neighbors.unsupervised": {
  "data": {},
  "type": "module"
 },
 "sklearn.neighbors.unsupervised.NearestNeighbors": {
  "data": {
   "lineno": 9
  },
  "type": "class"
 },
 "sklearn.neighbors.unsupervised.NearestNeighbors.__init__": {
  "data": {
   "lineno": 116
  },
  "type": "function"
 },
 "sklearn.neural_network": {
  "data": {},
  "type": "module"
 },
 "sklearn.neural_network.__all__": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "sklearn.neural_network.rbm": {
  "data": {},
  "type": "module"
 },
 "sklearn.neural_network.rbm.BernoulliRBM": {
  "data": {
   "lineno": 28
  },
  "type": "class"
 },
 "sklearn.neural_network.rbm.BernoulliRBM.__init__": {
  "data": {
   "lineno": 100
  },
  "type": "function"
 },
 "sklearn.neural_network.rbm.BernoulliRBM._fit": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "float",
    "numpy.asarray",
    "numpy.dot",
    "numpy.floor",
    "safe_sparse_dot"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network.rbm.BernoulliRBM._free_energy": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "numpy.logaddexp",
    "safe_sparse_dot"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network.rbm.BernoulliRBM._mean_hiddens": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "expit",
    "safe_sparse_dot"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network.rbm.BernoulliRBM._sample_hiddens": {
  "data": {
   "lineno": 144
  },
  "type": "function"
 },
 "sklearn.neural_network.rbm.BernoulliRBM._sample_visibles": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "expit",
    "numpy.dot"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network.rbm.BernoulliRBM.fit": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": [
    "check_array",
    "check_random_state",
    "float",
    "gen_even_slices",
    "int",
    "list",
    "numpy.asarray",
    "numpy.ceil",
    "numpy.float",
    "numpy.zeros",
    "print",
    "sklearn.neural_network.rbm.time",
    "type",
    "xrange"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network.rbm.BernoulliRBM.gibbs": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "check_is_fitted",
    "check_random_state",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network.rbm.BernoulliRBM.partial_fit": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "check_array",
    "check_random_state",
    "hasattr",
    "numpy.asarray",
    "numpy.float",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network.rbm.BernoulliRBM.score_samples": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "check_array",
    "check_is_fitted",
    "check_random_state",
    "issparse",
    "log_logistic",
    "numpy.arange",
    "scipy.sparse.csr_matrix"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network.rbm.BernoulliRBM.transform": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "check_array",
    "check_is_fitted",
    "numpy.float"
   ]
  },
  "type": "function"
 },
 "sklearn.neural_network.rbm.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.neural_network.rbm.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.neural_network.rbm.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "sklearn.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "sklearn.pipeline": {
  "data": {},
  "type": "module"
 },
 "sklearn.pipeline.FeatureUnion": {
  "data": {
   "lineno": 420
  },
  "type": "class"
 },
 "sklearn.pipeline.FeatureUnion.__init__": {
  "data": {
   "lineno": 443
  },
  "type": "function"
 },
 "sklearn.pipeline.FeatureUnion._update_transformer_list": {
  "data": {
   "lineno": 541,
   "symbols_in_volume": [
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.pipeline.FeatureUnion.fit": {
  "data": {
   "lineno": 465,
   "symbols_in_volume": [
    "Parallel",
    "delayed",
    "sklearn.pipeline._fit_one_transformer"
   ]
  },
  "type": "function"
 },
 "sklearn.pipeline.FeatureUnion.fit_transform": {
  "data": {
   "lineno": 479,
   "symbols_in_volume": [
    "Parallel",
    "any",
    "delayed",
    "numpy.hstack",
    "scipy.sparse.hstack",
    "scipy.sparse.issparse",
    "sklearn.pipeline._fit_transform_one",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.pipeline.FeatureUnion.get_feature_names": {
  "data": {
   "lineno": 448,
   "symbols_in_volume": [
    "AttributeError",
    "hasattr",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.pipeline.FeatureUnion.get_params": {
  "data": {
   "lineno": 530,
   "symbols_in_volume": [
    "dict",
    "iteritems",
    "sklearn.pipeline.FeatureUnion",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.pipeline.FeatureUnion.transform": {
  "data": {
   "lineno": 507,
   "symbols_in_volume": [
    "Parallel",
    "any",
    "delayed",
    "numpy.hstack",
    "scipy.sparse.hstack",
    "scipy.sparse.issparse",
    "sklearn.pipeline._transform_one"
   ]
  },
  "type": "function"
 },
 "sklearn.pipeline.Pipeline": {
  "data": {
   "lineno": 28
  },
  "type": "class"
 },
 "sklearn.pipeline.Pipeline.__init__": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "dict",
    "hasattr",
    "len",
    "tosequence",
    "type",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.pipeline.Pipeline._estimator_type": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.pipeline.Pipeline._final_estimator": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.pipeline.Pipeline._pairwise": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": [
    "getattr",
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.pipeline.Pipeline._pre_transform": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "dict",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "sklearn.pipeline.Pipeline.classes_": {
  "data": {
   "lineno": 337,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.pipeline.Pipeline.decision_function": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "if_delegate_has_method"
   ]
  },
  "type": "function"
 },
 "sklearn.pipeline.Pipeline.fit": {
  "data": {
   "lineno": 151
  },
  "type": "function"
 },
 "sklearn.pipeline.Pipeline.fit_predict": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "if_delegate_has_method"
   ]
  },
  "type": "function"
 },
 "sklearn.pipeline.Pipeline.fit_transform": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "sklearn.pipeline.Pipeline.get_params": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "sklearn.pipeline.Pipeline",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.pipeline.Pipeline.inverse_transform": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": [
    "FutureWarning",
    "if_delegate_has_method",
    "warnings.warn"
   ]
  },
  "type": "function"
 },
 "sklearn.pipeline.Pipeline.named_steps": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "dict",
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.pipeline.Pipeline.predict": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "if_delegate_has_method"
   ]
  },
  "type": "function"
 },
 "sklearn.pipeline.Pipeline.predict_log_proba": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "if_delegate_has_method"
   ]
  },
  "type": "function"
 },
 "sklearn.pipeline.Pipeline.predict_proba": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "if_delegate_has_method"
   ]
  },
  "type": "function"
 },
 "sklearn.pipeline.Pipeline.score": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": [
    "if_delegate_has_method"
   ]
  },
  "type": "function"
 },
 "sklearn.pipeline.Pipeline.transform": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "if_delegate_has_method"
   ]
  },
  "type": "function"
 },
 "sklearn.pipeline.__all__": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "sklearn.pipeline._fit_one_transformer": {
  "data": {
   "lineno": 391
  },
  "type": "function"
 },
 "sklearn.pipeline._fit_transform_one": {
  "data": {
   "lineno": 402,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "sklearn.pipeline._name_estimators": {
  "data": {
   "lineno": 347,
   "symbols_in_volume": [
    "collections.defaultdict",
    "int",
    "len",
    "list",
    "range",
    "reversed",
    "type",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.pipeline._transform_one": {
  "data": {
   "lineno": 395
  },
  "type": "function"
 },
 "sklearn.pipeline.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "sklearn.pipeline.make_pipeline": {
  "data": {
   "lineno": 368,
   "symbols_in_volume": [
    "sklearn.pipeline.Pipeline",
    "sklearn.pipeline._name_estimators"
   ]
  },
  "type": "function"
 },
 "sklearn.pipeline.make_union": {
  "data": {
   "lineno": 550,
   "symbols_in_volume": [
    "sklearn.pipeline.FeatureUnion",
    "sklearn.pipeline._name_estimators"
   ]
  },
  "type": "function"
 },
 "sklearn.pipeline.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.pipeline.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.pipeline.warn": {
  "data": {
   "shadows": "warnings.warn"
  },
  "type": "import"
 },
 "sklearn.preprocessing": {
  "data": {},
  "type": "module"
 },
 "sklearn.preprocessing.__all__": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "sklearn.preprocessing._function_transformer": {
  "data": {},
  "type": "module"
 },
 "sklearn.preprocessing._function_transformer.FunctionTransformer": {
  "data": {
   "lineno": 11
  },
  "type": "class"
 },
 "sklearn.preprocessing._function_transformer.FunctionTransformer.__init__": {
  "data": {
   "lineno": 50
  },
  "type": "function"
 },
 "sklearn.preprocessing._function_transformer.FunctionTransformer.fit": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "check_array"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing._function_transformer.FunctionTransformer.transform": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "check_array",
    "func",
    "sklearn.preprocessing._function_transformer._identity"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing._function_transformer._identity": {
  "data": {
   "lineno": 5
  },
  "type": "function"
 },
 "sklearn.preprocessing._weights": {
  "data": {},
  "type": "module"
 },
 "sklearn.preprocessing._weights._balance_weights": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "bincount",
    "numpy.asarray",
    "numpy.searchsorted",
    "numpy.unique"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing._weights.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.preprocessing.data": {
  "data": {},
  "type": "module"
 },
 "sklearn.preprocessing.data.Binarizer": {
  "data": {
   "lineno": 1422
  },
  "type": "class"
 },
 "sklearn.preprocessing.data.Binarizer.__init__": {
  "data": {
   "lineno": 1458
  },
  "type": "function"
 },
 "sklearn.preprocessing.data.Binarizer.fit": {
  "data": {
   "lineno": 1462,
   "symbols_in_volume": [
    "check_array"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.data.Binarizer.transform": {
  "data": {
   "lineno": 1471,
   "symbols_in_volume": [
    "sklearn.preprocessing.data.binarize"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.data.DEPRECATION_MSG_1D": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "sklearn.preprocessing.data.KernelCenterer": {
  "data": {
   "lineno": 1485
  },
  "type": "class"
 },
 "sklearn.preprocessing.data.KernelCenterer.fit": {
  "data": {
   "lineno": 1497,
   "symbols_in_volume": [
    "check_array",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.data.KernelCenterer.transform": {
  "data": {
   "lineno": 1515,
   "symbols_in_volume": [
    "check_array",
    "check_is_fitted",
    "numpy.newaxis",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.data.MaxAbsScaler": {
  "data": {
   "lineno": 696
  },
  "type": "class"
 },
 "sklearn.preprocessing.data.MaxAbsScaler.__init__": {
  "data": {
   "lineno": 730
  },
  "type": "function"
 },
 "sklearn.preprocessing.data.MaxAbsScaler._reset": {
  "data": {
   "lineno": 733,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.data.MaxAbsScaler.fit": {
  "data": {
   "lineno": 746
  },
  "type": "function"
 },
 "sklearn.preprocessing.data.MaxAbsScaler.inverse_transform": {
  "data": {
   "lineno": 819,
   "symbols_in_volume": [
    "DeprecationWarning",
    "check_array",
    "check_is_fitted",
    "inplace_column_scale",
    "scipy.sparse.issparse",
    "sklearn.preprocessing.data.DEPRECATION_MSG_1D",
    "sklearn.preprocessing.data.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.data.MaxAbsScaler.partial_fit": {
  "data": {
   "lineno": 760,
   "symbols_in_volume": [
    "DeprecationWarning",
    "check_array",
    "hasattr",
    "min_max_axis",
    "numpy.abs",
    "numpy.maximum",
    "scipy.sparse.issparse",
    "sklearn.preprocessing.data.DEPRECATION_MSG_1D",
    "sklearn.preprocessing.data._handle_zeros_in_scale",
    "sklearn.preprocessing.data.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.data.MaxAbsScaler.transform": {
  "data": {
   "lineno": 798,
   "symbols_in_volume": [
    "DeprecationWarning",
    "check_array",
    "check_is_fitted",
    "inplace_column_scale",
    "scipy.sparse.issparse",
    "sklearn.preprocessing.data.DEPRECATION_MSG_1D",
    "sklearn.preprocessing.data.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.data.MinMaxScaler": {
  "data": {
   "lineno": 193
  },
  "type": "class"
 },
 "sklearn.preprocessing.data.MinMaxScaler.__init__": {
  "data": {
   "lineno": 251
  },
  "type": "function"
 },
 "sklearn.preprocessing.data.MinMaxScaler._reset": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.data.MinMaxScaler.data_min": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "deprecated",
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.data.MinMaxScaler.data_range": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "deprecated",
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.data.MinMaxScaler.fit": {
  "data": {
   "lineno": 283
  },
  "type": "function"
 },
 "sklearn.preprocessing.data.MinMaxScaler.inverse_transform": {
  "data": {
   "lineno": 365,
   "symbols_in_volume": [
    "DeprecationWarning",
    "check_array",
    "check_is_fitted",
    "sklearn.preprocessing.data.DEPRECATION_MSG_1D",
    "sklearn.preprocessing.data.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.data.MinMaxScaler.partial_fit": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "DeprecationWarning",
    "TypeError",
    "ValueError",
    "check_array",
    "hasattr",
    "numpy.max",
    "numpy.maximum",
    "numpy.min",
    "numpy.minimum",
    "scipy.sparse.issparse",
    "sklearn.preprocessing.data.DEPRECATION_MSG_1D",
    "sklearn.preprocessing.data._handle_zeros_in_scale",
    "sklearn.preprocessing.data.warnings",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.data.MinMaxScaler.transform": {
  "data": {
   "lineno": 347,
   "symbols_in_volume": [
    "DeprecationWarning",
    "check_array",
    "check_is_fitted",
    "sklearn.preprocessing.data.DEPRECATION_MSG_1D",
    "sklearn.preprocessing.data.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.data.Normalizer": {
  "data": {
   "lineno": 1310
  },
  "type": "class"
 },
 "sklearn.preprocessing.data.Normalizer.__init__": {
  "data": {
   "lineno": 1350
  },
  "type": "function"
 },
 "sklearn.preprocessing.data.Normalizer.fit": {
  "data": {
   "lineno": 1354,
   "symbols_in_volume": [
    "check_array"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.data.Normalizer.transform": {
  "data": {
   "lineno": 1363,
   "symbols_in_volume": [
    "check_array",
    "sklearn.preprocessing.data.normalize"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.data.OneHotEncoder": {
  "data": {
   "lineno": 1655
  },
  "type": "class"
 },
 "sklearn.preprocessing.data.OneHotEncoder.__init__": {
  "data": {
   "lineno": 1738,
   "symbols_in_volume": [
    "numpy.float",
    "scipy.sparse"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.data.OneHotEncoder._fit_transform": {
  "data": {
   "lineno": 1761,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "check_array",
    "int",
    "isinstance",
    "numpy.any",
    "numpy.arange",
    "numpy.array",
    "numpy.asarray",
    "numpy.cumsum",
    "numpy.empty",
    "numpy.hstack",
    "numpy.int",
    "numpy.int32",
    "numpy.max",
    "numpy.ones",
    "numpy.repeat",
    "numpy.where",
    "scipy.sparse.coo_matrix",
    "sklearn.preprocessing.data.numbers",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.data.OneHotEncoder._transform": {
  "data": {
   "lineno": 1816,
   "symbols_in_volume": [
    "ValueError",
    "check_array",
    "numpy.any",
    "numpy.arange",
    "numpy.int",
    "numpy.int32",
    "numpy.ones",
    "numpy.repeat",
    "numpy.sum",
    "scipy.sparse.coo_matrix"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.data.OneHotEncoder.fit": {
  "data": {
   "lineno": 1746
  },
  "type": "function"
 },
 "sklearn.preprocessing.data.OneHotEncoder.fit_transform": {
  "data": {
   "lineno": 1807,
   "symbols_in_volume": [
    "sklearn.preprocessing.data._transform_selected"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.data.OneHotEncoder.transform": {
  "data": {
   "lineno": 1855,
   "symbols_in_volume": [
    "sklearn.preprocessing.data._transform_selected"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.data.PolynomialFeatures": {
  "data": {
   "lineno": 1107
  },
  "type": "class"
 },
 "sklearn.preprocessing.data.PolynomialFeatures.__init__": {
  "data": {
   "lineno": 1170
  },
  "type": "function"
 },
 "sklearn.preprocessing.data.PolynomialFeatures._combinations": {
  "data": {
   "lineno": 1175,
   "symbols_in_volume": [
    "comb",
    "int",
    "itertools.chain.from_iterable",
    "itertools.combinations",
    "sklearn.preprocessing.data.range",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.data.PolynomialFeatures.fit": {
  "data": {
   "lineno": 1192,
   "symbols_in_volume": [
    "check_array",
    "itertools.combinations",
    "sum"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.data.PolynomialFeatures.powers_": {
  "data": {
   "lineno": 1182,
   "symbols_in_volume": [
    "check_is_fitted",
    "itertools.combinations",
    "numpy.bincount",
    "numpy.vstack",
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.data.PolynomialFeatures.transform": {
  "data": {
   "lineno": 1204,
   "symbols_in_volume": [
    "ValueError",
    "check_array",
    "check_is_fitted",
    "enumerate",
    "itertools.combinations",
    "numpy.empty"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.data.RobustScaler": {
  "data": {
   "lineno": 886
  },
  "type": "class"
 },
 "sklearn.preprocessing.data.RobustScaler.__init__": {
  "data": {
   "lineno": 954
  },
  "type": "function"
 },
 "sklearn.preprocessing.data.RobustScaler._check_array": {
  "data": {
   "lineno": 959,
   "symbols_in_volume": [
    "DeprecationWarning",
    "ValueError",
    "check_array",
    "scipy.sparse.issparse",
    "sklearn.preprocessing.data.DEPRECATION_MSG_1D",
    "sklearn.preprocessing.data.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.data.RobustScaler.fit": {
  "data": {
   "lineno": 974,
   "symbols_in_volume": [
    "DeprecationWarning",
    "TypeError",
    "numpy.median",
    "numpy.percentile",
    "scipy.sparse.issparse",
    "sklearn.preprocessing.data.DEPRECATION_MSG_1D",
    "sklearn.preprocessing.data._handle_zeros_in_scale",
    "sklearn.preprocessing.data.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.data.RobustScaler.inverse_transform": {
  "data": {
   "lineno": 1023,
   "symbols_in_volume": [
    "DeprecationWarning",
    "check_is_fitted",
    "inplace_column_scale",
    "scipy.sparse.issparse",
    "sklearn.preprocessing.data.DEPRECATION_MSG_1D",
    "sklearn.preprocessing.data.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.data.RobustScaler.transform": {
  "data": {
   "lineno": 997,
   "symbols_in_volume": [
    "DeprecationWarning",
    "check_is_fitted",
    "inplace_column_scale",
    "scipy.sparse.issparse",
    "sklearn.preprocessing.data.DEPRECATION_MSG_1D",
    "sklearn.preprocessing.data.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.data.StandardScaler": {
  "data": {
   "lineno": 446
  },
  "type": "class"
 },
 "sklearn.preprocessing.data.StandardScaler.__init__": {
  "data": {
   "lineno": 519
  },
  "type": "function"
 },
 "sklearn.preprocessing.data.StandardScaler._reset": {
  "data": {
   "lineno": 529,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.data.StandardScaler.fit": {
  "data": {
   "lineno": 543
  },
  "type": "function"
 },
 "sklearn.preprocessing.data.StandardScaler.inverse_transform": {
  "data": {
   "lineno": 662,
   "symbols_in_volume": [
    "ValueError",
    "check_is_fitted",
    "inplace_column_scale",
    "numpy.asarray",
    "scipy.sparse.issparse",
    "scipy.sparse.isspmatrix_csr"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.data.StandardScaler.partial_fit": {
  "data": {
   "lineno": 559,
   "symbols_in_volume": [
    "DeprecationWarning",
    "ValueError",
    "_incremental_mean_and_var",
    "check_array",
    "hasattr",
    "incr_mean_variance_axis",
    "mean_variance_axis",
    "numpy.sqrt",
    "scipy.sparse.issparse",
    "sklearn.preprocessing.data.DEPRECATION_MSG_1D",
    "sklearn.preprocessing.data._handle_zeros_in_scale",
    "sklearn.preprocessing.data.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.data.StandardScaler.std_": {
  "data": {
   "lineno": 524,
   "symbols_in_volume": [
    "deprecated",
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.data.StandardScaler.transform": {
  "data": {
   "lineno": 630,
   "symbols_in_volume": [
    "DeprecationWarning",
    "ValueError",
    "check_array",
    "check_is_fitted",
    "inplace_column_scale",
    "scipy.sparse.issparse",
    "sklearn.preprocessing.data.DEPRECATION_MSG_1D",
    "sklearn.preprocessing.data.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.data.__all__": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "sklearn.preprocessing.data._handle_zeros_in_scale": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "isinstance",
    "numpy.isscalar",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.data._transform_selected": {
  "data": {
   "lineno": 1603,
   "symbols_in_volume": [
    "bool",
    "check_array",
    "isinstance",
    "len",
    "numpy.arange",
    "numpy.asarray",
    "numpy.hstack",
    "numpy.logical_not",
    "numpy.sum",
    "numpy.zeros",
    "scipy.sparse.hstack",
    "scipy.sparse.issparse",
    "transform"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.data.add_dummy_feature": {
  "data": {
   "lineno": 1544,
   "symbols_in_volume": [
    "check_array",
    "klass",
    "numpy.arange",
    "numpy.array",
    "numpy.concatenate",
    "numpy.hstack",
    "numpy.ones",
    "numpy.zeros",
    "scipy.sparse.coo_matrix",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.issparse",
    "scipy.sparse.isspmatrix_coo",
    "scipy.sparse.isspmatrix_csc"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.data.binarize": {
  "data": {
   "lineno": 1377,
   "symbols_in_volume": [
    "ValueError",
    "check_array",
    "numpy.logical_not",
    "scipy.sparse.issparse"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.data.chain": {
  "data": {
   "shadows": "itertools.chain"
  },
  "type": "import"
 },
 "sklearn.preprocessing.data.combinations": {
  "data": {
   "shadows": "itertools.combinations"
  },
  "type": "import"
 },
 "sklearn.preprocessing.data.combinations_w_r": {
  "data": {
   "shadows": "combinations_with_replacement"
  },
  "type": "import"
 },
 "sklearn.preprocessing.data.map": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "sklearn.preprocessing.data.maxabs_scale": {
  "data": {
   "lineno": 840,
   "symbols_in_volume": [
    "check_array",
    "sklearn.preprocessing.data.MaxAbsScaler"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.data.minmax_scale": {
  "data": {
   "lineno": 384,
   "symbols_in_volume": [
    "check_array",
    "sklearn.preprocessing.data.MinMaxScaler"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.data.normalize": {
  "data": {
   "lineno": 1238,
   "symbols_in_volume": [
    "ValueError",
    "check_array",
    "inplace_csr_row_normalize_l1",
    "inplace_csr_row_normalize_l2",
    "min_max_axis",
    "numpy.abs",
    "numpy.diff",
    "numpy.max",
    "numpy.newaxis",
    "row_norms",
    "scipy.sparse.issparse",
    "sklearn.preprocessing.data._handle_zeros_in_scale"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.data.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.preprocessing.data.numbers": {
  "data": {
   "shadows": "numbers"
  },
  "type": "import"
 },
 "sklearn.preprocessing.data.range": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "sklearn.preprocessing.data.robust_scale": {
  "data": {
   "lineno": 1050,
   "symbols_in_volume": [
    "sklearn.preprocessing.data.RobustScaler"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.data.scale": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "ValueError",
    "check_array",
    "inplace_column_scale",
    "mean_variance_axis",
    "numpy.allclose",
    "numpy.asarray",
    "numpy.mean",
    "numpy.rollaxis",
    "numpy.sqrt",
    "numpy.std",
    "scipy.sparse.issparse",
    "scipy.sparse.isspmatrix_csr",
    "sklearn.preprocessing.data._handle_zeros_in_scale",
    "sklearn.preprocessing.data.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.data.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.preprocessing.data.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.preprocessing.data.zip": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "sklearn.preprocessing.imputation": {
  "data": {},
  "type": "module"
 },
 "sklearn.preprocessing.imputation.Imputer": {
  "data": {
   "lineno": 64
  },
  "type": "class"
 },
 "sklearn.preprocessing.imputation.Imputer.__init__": {
  "data": {
   "lineno": 118
  },
  "type": "function"
 },
 "sklearn.preprocessing.imputation.Imputer._dense_fit": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "check_array",
    "enumerate",
    "int",
    "numpy.__version__.split",
    "numpy.bool",
    "numpy.empty",
    "numpy.isnan",
    "numpy.logical_not",
    "numpy.logical_or",
    "numpy.ma.getdata",
    "numpy.ma.getmask",
    "numpy.ma.getmaskarray",
    "numpy.ma.masked_array",
    "numpy.ma.mean",
    "numpy.ma.median",
    "numpy.nan",
    "sklearn.preprocessing.imputation._get_mask",
    "sklearn.preprocessing.imputation._most_frequent",
    "sklearn.preprocessing.imputation.zip",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.imputation.Imputer._sparse_fit": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "_get_median",
    "astype",
    "bool",
    "enumerate",
    "int",
    "len",
    "numpy.add",
    "numpy.diff",
    "numpy.empty",
    "numpy.errstate",
    "numpy.float64",
    "numpy.hsplit",
    "numpy.logical_not",
    "numpy.ravel",
    "numpy.zeros",
    "scipy.sparse.csc_matrix",
    "sklearn.preprocessing.imputation._get_mask",
    "sklearn.preprocessing.imputation._most_frequent",
    "sklearn.preprocessing.imputation.zip"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.imputation.Imputer.fit": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "ValueError",
    "check_array",
    "numpy.float64",
    "scipy.sparse.issparse"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.imputation.Imputer.transform": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "ValueError",
    "as_float_array",
    "astype",
    "check_array",
    "check_is_fitted",
    "len",
    "numpy.arange",
    "numpy.diff",
    "numpy.int",
    "numpy.isnan",
    "numpy.logical_not",
    "numpy.repeat",
    "numpy.sum",
    "numpy.where",
    "scipy.sparse.issparse",
    "sklearn.preprocessing.imputation._get_mask",
    "sklearn.preprocessing.imputation.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.imputation.__all__": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "sklearn.preprocessing.imputation._get_mask": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "numpy.isnan"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.imputation._most_frequent": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "numpy.nan",
    "scipy.stats.mode"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.imputation.ma": {
  "data": {
   "shadows": "numpy.ma"
  },
  "type": "import"
 },
 "sklearn.preprocessing.imputation.map": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "sklearn.preprocessing.imputation.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.preprocessing.imputation.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.preprocessing.imputation.stats": {
  "data": {
   "shadows": "scipy.stats"
  },
  "type": "import"
 },
 "sklearn.preprocessing.imputation.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.preprocessing.imputation.zip": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "sklearn.preprocessing.label": {
  "data": {},
  "type": "module"
 },
 "sklearn.preprocessing.label.LabelBinarizer": {
  "data": {
   "lineno": 172
  },
  "type": "class"
 },
 "sklearn.preprocessing.label.LabelBinarizer.__init__": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.label.LabelBinarizer.fit": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "ValueError",
    "_num_samples",
    "scipy.sparse.issparse",
    "type_of_target",
    "unique_labels"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.label.LabelBinarizer.inverse_transform": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": [
    "check_is_fitted",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.issparse",
    "sklearn.preprocessing.label._inverse_binarize_multiclass",
    "sklearn.preprocessing.label._inverse_binarize_thresholding"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.label.LabelBinarizer.transform": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "ValueError",
    "check_is_fitted",
    "sklearn.preprocessing.label.label_binarize",
    "type_of_target"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.label.LabelEncoder": {
  "data": {
   "lineno": 56
  },
  "type": "class"
 },
 "sklearn.preprocessing.label.LabelEncoder.fit": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "column_or_1d",
    "numpy.unique",
    "sklearn.preprocessing.label._check_numpy_unicode_bug"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.label.LabelEncoder.fit_transform": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "column_or_1d",
    "numpy.unique",
    "sklearn.preprocessing.label._check_numpy_unicode_bug"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.label.LabelEncoder.inverse_transform": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "ValueError",
    "check_is_fitted",
    "len",
    "numpy.arange",
    "numpy.asarray",
    "numpy.setdiff1d",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.label.LabelEncoder.transform": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "ValueError",
    "check_is_fitted",
    "len",
    "numpy.intersect1d",
    "numpy.searchsorted",
    "numpy.setdiff1d",
    "numpy.unique",
    "sklearn.preprocessing.label._check_numpy_unicode_bug",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.label.MultiLabelBinarizer": {
  "data": {
   "lineno": 636
  },
  "type": "class"
 },
 "sklearn.preprocessing.label.MultiLabelBinarizer.__init__": {
  "data": {
   "lineno": 674
  },
  "type": "function"
 },
 "sklearn.preprocessing.label.MultiLabelBinarizer._transform": {
  "data": {
   "lineno": 764,
   "symbols_in_volume": [
    "int",
    "len",
    "numpy.ones",
    "scipy.sparse.csr_matrix",
    "set",
    "sklearn.preprocessing.label.array"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.label.MultiLabelBinarizer.fit": {
  "data": {
   "lineno": 678,
   "symbols_in_volume": [
    "all",
    "int",
    "isinstance",
    "len",
    "numpy.empty",
    "numpy.int",
    "object",
    "set",
    "sklearn.preprocessing.label.itertools",
    "sorted"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.label.MultiLabelBinarizer.fit_transform": {
  "data": {
   "lineno": 701,
   "symbols_in_volume": [
    "all",
    "collections.defaultdict",
    "int",
    "isinstance",
    "len",
    "numpy.empty",
    "numpy.int",
    "numpy.take",
    "numpy.unique",
    "object",
    "sorted"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.label.MultiLabelBinarizer.inverse_transform": {
  "data": {
   "lineno": 788,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.setdiff1d",
    "scipy.sparse.issparse",
    "sklearn.preprocessing.label.zip",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.label.MultiLabelBinarizer.transform": {
  "data": {
   "lineno": 740,
   "symbols_in_volume": [
    "dict",
    "len",
    "range",
    "sklearn.preprocessing.label.zip"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.label.__all__": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "sklearn.preprocessing.label._check_numpy_unicode_bug": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "RuntimeError"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.label._inverse_binarize_multiclass": {
  "data": {
   "lineno": 546,
   "symbols_in_volume": [
    "len",
    "numpy.append",
    "numpy.arange",
    "numpy.asarray",
    "numpy.diff",
    "numpy.flatnonzero",
    "numpy.repeat",
    "numpy.searchsorted",
    "numpy.setdiff1d",
    "numpy.where",
    "scipy.sparse.issparse",
    "sparse_min_max"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.label._inverse_binarize_thresholding": {
  "data": {
   "lineno": 590,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.array",
    "numpy.asarray",
    "numpy.empty",
    "numpy.int",
    "scipy.sparse.issparse"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.label.array": {
  "data": {
   "shadows": "array"
  },
  "type": "import"
 },
 "sklearn.preprocessing.label.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "sklearn.preprocessing.label.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "sklearn.preprocessing.label.label_binarize": {
  "data": {
   "lineno": 392,
   "symbols_in_volume": [
    "ValueError",
    "_num_samples",
    "astype",
    "check_array",
    "column_or_1d",
    "in1d",
    "int",
    "isinstance",
    "len",
    "list",
    "numpy.any",
    "numpy.asarray",
    "numpy.cumsum",
    "numpy.empty_like",
    "numpy.hstack",
    "numpy.int",
    "numpy.searchsorted",
    "numpy.sort",
    "numpy.zeros",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.issparse",
    "type_of_target",
    "unique_labels"
   ]
  },
  "type": "function"
 },
 "sklearn.preprocessing.label.map": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "sklearn.preprocessing.label.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.preprocessing.label.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.preprocessing.label.zip": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "sklearn.qda": {
  "data": {
   "symbols_in_volume": [
    "DeprecationWarning",
    "sklearn.qda.warnings"
   ]
  },
  "type": "module"
 },
 "sklearn.qda.QDA": {
  "data": {
   "shadows": "QuadraticDiscriminantAnalysis"
  },
  "type": "import"
 },
 "sklearn.qda.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "sklearn.random_projection": {
  "data": {},
  "type": "module"
 },
 "sklearn.random_projection.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "sklearn.random_projection.BaseRandomProjection": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "abc.ABCMeta"
   ]
  },
  "type": "class"
 },
 "sklearn.random_projection.BaseRandomProjection.__init__": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "sklearn.random_projection.BaseRandomProjection._make_random_matrix": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "sklearn.random_projection.BaseRandomProjection.fit": {
  "data": {
   "lineno": 327,
   "symbols_in_volume": [
    "ValueError",
    "check_array",
    "numpy.testing.assert_equal",
    "sklearn.random_projection.johnson_lindenstrauss_min_dim",
    "sklearn.random_projection.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.random_projection.BaseRandomProjection.transform": {
  "data": {
   "lineno": 392,
   "symbols_in_volume": [
    "NotFittedError",
    "ValueError",
    "check_array",
    "safe_sparse_dot"
   ]
  },
  "type": "function"
 },
 "sklearn.random_projection.GaussianRandomProjection": {
  "data": {
   "lineno": 424,
   "symbols_in_volume": [
    "sklearn.random_projection.BaseRandomProjection"
   ]
  },
  "type": "class"
 },
 "sklearn.random_projection.GaussianRandomProjection.__init__": {
  "data": {
   "lineno": 470,
   "symbols_in_volume": [
    "sklearn.random_projection.GaussianRandomProjection",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.random_projection.GaussianRandomProjection._make_random_matrix": {
  "data": {
   "lineno": 477,
   "symbols_in_volume": [
    "check_random_state",
    "sklearn.random_projection.gaussian_random_matrix"
   ]
  },
  "type": "function"
 },
 "sklearn.random_projection.SparseRandomProjection": {
  "data": {
   "lineno": 500,
   "symbols_in_volume": [
    "sklearn.random_projection.BaseRandomProjection"
   ]
  },
  "type": "class"
 },
 "sklearn.random_projection.SparseRandomProjection.__init__": {
  "data": {
   "lineno": 589,
   "symbols_in_volume": [
    "sklearn.random_projection.SparseRandomProjection",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.random_projection.SparseRandomProjection._make_random_matrix": {
  "data": {
   "lineno": 600,
   "symbols_in_volume": [
    "check_random_state",
    "sklearn.random_projection._check_density",
    "sklearn.random_projection.sparse_random_matrix"
   ]
  },
  "type": "function"
 },
 "sklearn.random_projection.__all__": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "sklearn.random_projection._check_density": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "ValueError",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "sklearn.random_projection._check_input_size": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "sklearn.random_projection.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "sklearn.random_projection.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.random_projection.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sklearn.random_projection.gaussian_random_matrix": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "check_random_state",
    "numpy.sqrt",
    "sklearn.random_projection._check_input_size"
   ]
  },
  "type": "function"
 },
 "sklearn.random_projection.johnson_lindenstrauss_min_dim": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "ValueError",
    "numpy.any",
    "numpy.asarray",
    "numpy.int",
    "numpy.log"
   ]
  },
  "type": "function"
 },
 "sklearn.random_projection.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.random_projection.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.random_projection.sparse_random_matrix": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "check_random_state",
    "numpy.concatenate",
    "numpy.size",
    "numpy.sqrt",
    "sample_without_replacement",
    "scipy.sparse.csr_matrix",
    "sklearn.random_projection._check_density",
    "sklearn.random_projection._check_input_size",
    "xrange"
   ]
  },
  "type": "function"
 },
 "sklearn.random_projection.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "sklearn.semi_supervised": {
  "data": {},
  "type": "module"
 },
 "sklearn.semi_supervised.__all__": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "sklearn.semi_supervised.label_propagation": {
  "data": {},
  "type": "module"
 },
 "sklearn.semi_supervised.label_propagation.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "sklearn.semi_supervised.label_propagation.BaseLabelPropagation": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "abc.ABCMeta"
   ]
  },
  "type": "class"
 },
 "sklearn.semi_supervised.label_propagation.BaseLabelPropagation.__init__": {
  "data": {
   "lineno": 105
  },
  "type": "function"
 },
 "sklearn.semi_supervised.label_propagation.BaseLabelPropagation._build_graph": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "NotImplementedError",
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "sklearn.semi_supervised.label_propagation.BaseLabelPropagation._get_kernel": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "NearestNeighbors",
    "ValueError",
    "rbf_kernel"
   ]
  },
  "type": "function"
 },
 "sklearn.semi_supervised.label_propagation.BaseLabelPropagation.fit": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "check_X_y",
    "check_classification_targets",
    "len",
    "numpy.argmax",
    "numpy.asarray",
    "numpy.copy",
    "numpy.multiply",
    "numpy.newaxis",
    "numpy.ones",
    "numpy.sum",
    "numpy.unique",
    "numpy.zeros",
    "safe_sparse_dot",
    "scipy.sparse.isspmatrix",
    "sklearn.semi_supervised.label_propagation._not_converged"
   ]
  },
  "type": "function"
 },
 "sklearn.semi_supervised.label_propagation.BaseLabelPropagation.predict": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "numpy.argmax"
   ]
  },
  "type": "function"
 },
 "sklearn.semi_supervised.label_propagation.BaseLabelPropagation.predict_proba": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "check_array",
    "check_is_fitted",
    "numpy.array",
    "numpy.atleast_2d",
    "numpy.dot",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "sklearn.semi_supervised.label_propagation.LabelPropagation": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "sklearn.semi_supervised.label_propagation.BaseLabelPropagation"
   ]
  },
  "type": "class"
 },
 "sklearn.semi_supervised.label_propagation.LabelPropagation._build_graph": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.diag",
    "numpy.newaxis",
    "scipy.sparse.isspmatrix"
   ]
  },
  "type": "function"
 },
 "sklearn.semi_supervised.label_propagation.LabelSpreading": {
  "data": {
   "lineno": 353,
   "symbols_in_volume": [
    "sklearn.semi_supervised.label_propagation.BaseLabelPropagation"
   ]
  },
  "type": "class"
 },
 "sklearn.semi_supervised.label_propagation.LabelSpreading.__init__": {
  "data": {
   "lineno": 426,
   "symbols_in_volume": [
    "sklearn.semi_supervised.label_propagation.LabelSpreading",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.semi_supervised.label_propagation.LabelSpreading._build_graph": {
  "data": {
   "lineno": 435,
   "symbols_in_volume": [
    "graph_laplacian",
    "scipy.sparse.isspmatrix"
   ]
  },
  "type": "function"
 },
 "sklearn.semi_supervised.label_propagation._not_converged": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "numpy.abs"
   ]
  },
  "type": "function"
 },
 "sklearn.semi_supervised.label_propagation.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "sklearn.semi_supervised.label_propagation.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.semi_supervised.label_propagation.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.setup": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.distutils.core.setup",
    "sklearn.setup.configuration"
   ]
  },
  "type": "module"
 },
 "sklearn.setup.BlasNotFoundError": {
  "data": {
   "shadows": "numpy.distutils.system_info.BlasNotFoundError"
  },
  "type": "import"
 },
 "sklearn.setup.Configuration": {
  "data": {
   "shadows": "numpy.distutils.misc_util.Configuration"
  },
  "type": "import"
 },
 "sklearn.setup.configuration": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "numpy.distutils.misc_util.Configuration",
    "numpy.distutils.system_info.BlasNotFoundError.__doc__",
    "numpy.distutils.system_info.get_info",
    "os.path.join",
    "sklearn.setup.numpy",
    "sklearn.setup.os",
    "sklearn.setup.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.setup.get_info": {
  "data": {
   "shadows": "numpy.distutils.system_info.get_info"
  },
  "type": "import"
 },
 "sklearn.setup.join": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "sklearn.setup.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.setup.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "sklearn.setup.setup": {
  "data": {
   "shadows": "numpy.distutils.core.setup"
  },
  "type": "import"
 },
 "sklearn.setup.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.setup_module": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "int",
    "numpy.random.seed",
    "numpy.random.uniform",
    "print",
    "sklearn.os",
    "sklearn.random"
   ]
  },
  "type": "function"
 },
 "sklearn.svm": {
  "data": {},
  "type": "module"
 },
 "sklearn.svm.__all__": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "sklearn.svm.base": {
  "data": {},
  "type": "module"
 },
 "sklearn.svm.base.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "sklearn.svm.base.BaseLibSVM": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "abc.ABCMeta"
   ]
  },
  "type": "class"
 },
 "sklearn.svm.base.BaseLibSVM.__init__": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "DeprecationWarning",
    "ValueError",
    "abc.abstractmethod",
    "sklearn.svm.base.LIBSVM_IMPL",
    "sklearn.svm.base.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.base.BaseLibSVM._compute_kernel": {
  "data": {
   "lineno": 355,
   "symbols_in_volume": [
    "callable",
    "numpy.asarray",
    "numpy.float64",
    "scipy.sparse.issparse"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.base.BaseLibSVM._decision_function": {
  "data": {
   "lineno": 384,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.base.BaseLibSVM._dense_decision_function": {
  "data": {
   "lineno": 414,
   "symbols_in_volume": [
    "callable",
    "check_array",
    "numpy.float64",
    "sklearn.svm.base.LIBSVM_IMPL"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.base.BaseLibSVM._dense_fit": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "ValueError",
    "callable"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.base.BaseLibSVM._dense_predict": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": [
    "ValueError",
    "callable",
    "check_array",
    "sklearn.svm.base.LIBSVM_IMPL"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.base.BaseLibSVM._get_coef": {
  "data": {
   "lineno": 495,
   "symbols_in_volume": [
    "safe_sparse_dot"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.base.BaseLibSVM._pairwise": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "callable",
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.base.BaseLibSVM._sparse_decision_function": {
  "data": {
   "lineno": 429,
   "symbols_in_volume": [
    "hasattr",
    "numpy.asarray",
    "numpy.float64",
    "sklearn.svm.base.LIBSVM_IMPL"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.base.BaseLibSVM._sparse_fit": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "hasattr",
    "int",
    "len",
    "numpy.arange",
    "numpy.asarray",
    "numpy.float64",
    "numpy.tile",
    "scipy.sparse.csr_matrix"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.base.BaseLibSVM._sparse_predict": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": [
    "callable",
    "sklearn.svm.base.LIBSVM_IMPL"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.base.BaseLibSVM._validate_for_predict": {
  "data": {
   "lineno": 451,
   "symbols_in_volume": [
    "ValueError",
    "callable",
    "check_array",
    "check_is_fitted",
    "numpy.float64",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.issparse",
    "scipy.sparse.isspmatrix",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.base.BaseLibSVM._validate_targets": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "column_or_1d",
    "numpy.empty",
    "numpy.float64"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.base.BaseLibSVM._warn_from_fit_status": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "sklearn.svm.base.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.base.BaseLibSVM.coef_": {
  "data": {
   "lineno": 477,
   "symbols_in_volume": [
    "ValueError",
    "property",
    "scipy.sparse.issparse"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.base.BaseLibSVM.decision_function": {
  "data": {
   "lineno": 366,
   "symbols_in_volume": [
    "deprecated"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.base.BaseLibSVM.fit": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "callable",
    "check_array",
    "check_random_state",
    "fit",
    "len",
    "numpy.asarray",
    "numpy.float64",
    "numpy.iinfo",
    "print",
    "scipy.sparse.isspmatrix",
    "sklearn.svm.base.LIBSVM_IMPL"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.base.BaseLibSVM.predict": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "predict"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.base.BaseSVC": {
  "data": {
   "lineno": 499,
   "symbols_in_volume": [
    "abc.ABCMeta",
    "sklearn.svm.base.BaseLibSVM"
   ]
  },
  "type": "class"
 },
 "sklearn.svm.base.BaseSVC.__init__": {
  "data": {
   "lineno": 501,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "sklearn.svm.base.BaseSVC",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.base.BaseSVC._check_proba": {
  "data": {
   "lineno": 575,
   "symbols_in_volume": [
    "AttributeError"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.base.BaseSVC._dense_predict_proba": {
  "data": {
   "lineno": 655,
   "symbols_in_volume": [
    "callable",
    "sklearn.svm.base.LIBSVM_IMPL"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.base.BaseSVC._get_coef": {
  "data": {
   "lineno": 694,
   "symbols_in_volume": [
    "numpy.vstack",
    "safe_sparse_dot",
    "scipy.sparse.issparse",
    "scipy.sparse.vstack",
    "sklearn.svm.base._one_vs_one_coef"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.base.BaseSVC._predict_log_proba": {
  "data": {
   "lineno": 652,
   "symbols_in_volume": [
    "numpy.log"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.base.BaseSVC._predict_proba": {
  "data": {
   "lineno": 613,
   "symbols_in_volume": [
    "NotFittedError",
    "pred_proba"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.base.BaseSVC._sparse_predict_proba": {
  "data": {
   "lineno": 672,
   "symbols_in_volume": [
    "callable",
    "numpy.asarray",
    "numpy.float64",
    "sklearn.svm.base.LIBSVM_IMPL"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.base.BaseSVC._validate_targets": {
  "data": {
   "lineno": 513,
   "symbols_in_volume": [
    "ValueError",
    "check_classification_targets",
    "column_or_1d",
    "compute_class_weight",
    "len",
    "numpy.asarray",
    "numpy.float64",
    "numpy.unique"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.base.BaseSVC.decision_function": {
  "data": {
   "lineno": 527,
   "symbols_in_volume": [
    "_ovr_decision_function",
    "len",
    "sklearn.svm.base.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.base.BaseSVC.predict": {
  "data": {
   "lineno": 552,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.intp",
    "sklearn.svm.base.BaseSVC",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.base.BaseSVC.predict_log_proba": {
  "data": {
   "lineno": 622,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.base.BaseSVC.predict_proba": {
  "data": {
   "lineno": 583,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.base.LIBSVM_IMPL": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "sklearn.svm.base._fit_liblinear": {
  "data": {
   "lineno": 772,
   "symbols_in_volume": [
    "DeprecationWarning",
    "LabelEncoder",
    "ValueError",
    "check_random_state",
    "compute_class_weight",
    "len",
    "max",
    "numpy.asarray",
    "numpy.empty",
    "numpy.float",
    "numpy.float64",
    "numpy.iinfo",
    "print",
    "scipy.sparse.isspmatrix",
    "sklearn.svm.base._get_liblinear_solver_type",
    "sklearn.svm.base.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.base._get_liblinear_solver_type": {
  "data": {
   "lineno": 710,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.base._one_vs_one_coef": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "numpy.cumsum",
    "numpy.hstack",
    "range",
    "safe_sparse_dot"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.base.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "sklearn.svm.base.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.svm.base.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "sklearn.svm.base.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.svm.base.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.svm.bounds": {
  "data": {},
  "type": "module"
 },
 "sklearn.svm.bounds.l1_min_c": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "DeprecationWarning",
    "LabelBinarizer",
    "ValueError",
    "abs",
    "check_array",
    "check_consistent_length",
    "max",
    "numpy.abs",
    "numpy.dot",
    "numpy.max",
    "numpy.ones",
    "numpy.size",
    "safe_sparse_dot",
    "warnings.warn"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.bounds.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.svm.bounds.warn": {
  "data": {
   "shadows": "warnings.warn"
  },
  "type": "import"
 },
 "sklearn.svm.classes": {
  "data": {},
  "type": "module"
 },
 "sklearn.svm.classes.LinearSVC": {
  "data": {
   "lineno": 14
  },
  "type": "class"
 },
 "sklearn.svm.classes.LinearSVC.__init__": {
  "data": {
   "lineno": 151
  },
  "type": "function"
 },
 "sklearn.svm.classes.LinearSVC.fit": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "DeprecationWarning",
    "ValueError",
    "_fit_liblinear",
    "check_X_y",
    "check_classification_targets",
    "len",
    "numpy.array",
    "numpy.float64",
    "numpy.unique",
    "sklearn.svm.classes.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.classes.LinearSVR": {
  "data": {
   "lineno": 224
  },
  "type": "class"
 },
 "sklearn.svm.classes.LinearSVR.__init__": {
  "data": {
   "lineno": 317
  },
  "type": "function"
 },
 "sklearn.svm.classes.LinearSVR.fit": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": [
    "DeprecationWarning",
    "ValueError",
    "_fit_liblinear",
    "check_X_y",
    "numpy.float64",
    "sklearn.svm.classes.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.classes.NuSVC": {
  "data": {
   "lineno": 542
  },
  "type": "class"
 },
 "sklearn.svm.classes.NuSVC.__init__": {
  "data": {
   "lineno": 678,
   "symbols_in_volume": [
    "sklearn.svm.classes.NuSVC",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.classes.NuSVR": {
  "data": {
   "lineno": 803
  },
  "type": "class"
 },
 "sklearn.svm.classes.NuSVR.__init__": {
  "data": {
   "lineno": 905,
   "symbols_in_volume": [
    "sklearn.svm.classes.NuSVR",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.classes.OneClassSVM": {
  "data": {
   "lineno": 916
  },
  "type": "class"
 },
 "sklearn.svm.classes.OneClassSVM.__init__": {
  "data": {
   "lineno": 995,
   "symbols_in_volume": [
    "sklearn.svm.classes.OneClassSVM",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.classes.OneClassSVM.decision_function": {
  "data": {
   "lineno": 1032
  },
  "type": "function"
 },
 "sklearn.svm.classes.OneClassSVM.fit": {
  "data": {
   "lineno": 1004,
   "symbols_in_volume": [
    "_num_samples",
    "numpy.ones",
    "sklearn.svm.classes.OneClassSVM",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.classes.SVC": {
  "data": {
   "lineno": 383
  },
  "type": "class"
 },
 "sklearn.svm.classes.SVC.__init__": {
  "data": {
   "lineno": 527,
   "symbols_in_volume": [
    "sklearn.svm.classes.SVC",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.classes.SVR": {
  "data": {
   "lineno": 692
  },
  "type": "class"
 },
 "sklearn.svm.classes.SVR.__init__": {
  "data": {
   "lineno": 792,
   "symbols_in_volume": [
    "sklearn.svm.classes.SVR",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.classes.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.svm.classes.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.svm.setup": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.distutils.core.setup",
    "sklearn.svm.setup.configuration"
   ]
  },
  "type": "module"
 },
 "sklearn.svm.setup.Configuration": {
  "data": {
   "shadows": "numpy.distutils.misc_util.Configuration"
  },
  "type": "import"
 },
 "sklearn.svm.setup.configuration": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "numpy.distutils.misc_util.Configuration",
    "os.path.join",
    "sklearn._build_utils.get_blas_info",
    "sklearn.svm.setup.numpy",
    "sklearn.svm.setup.os"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.setup.get_blas_info": {
  "data": {
   "shadows": "sklearn._build_utils.get_blas_info"
  },
  "type": "import"
 },
 "sklearn.svm.setup.join": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "sklearn.svm.setup.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.svm.setup.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "sklearn.svm.setup.setup": {
  "data": {
   "shadows": "numpy.distutils.core.setup"
  },
  "type": "import"
 },
 "sklearn.svm.tests": {
  "data": {},
  "type": "module"
 },
 "sklearn.svm.tests.test_bounds": {
  "data": {
   "symbols_in_volume": [
    "scipy.sparse.csr_matrix",
    "sklearn.svm.tests.test_bounds.dense_X"
   ]
  },
  "type": "module"
 },
 "sklearn.svm.tests.test_bounds.LinearSVC": {
  "data": {
   "shadows": "sklearn.svm.LinearSVC"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_bounds.LogisticRegression": {
  "data": {
   "shadows": "sklearn.linear_model.logistic.LogisticRegression"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_bounds.Y1": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "sklearn.svm.tests.test_bounds.Y2": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "sklearn.svm.tests.test_bounds.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_bounds.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_bounds.check_l1_min_c": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "nose.tools.assert_true",
    "numpy.asarray",
    "sklearn.linear_model.logistic.LogisticRegression",
    "sklearn.svm.LinearSVC",
    "sklearn.svm.bounds.l1_min_c"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_bounds.clean_warning_registry": {
  "data": {
   "shadows": "sklearn.utils.testing.clean_warning_registry"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_bounds.dense_X": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "sklearn.svm.tests.test_bounds.l1_min_c": {
  "data": {
   "shadows": "sklearn.svm.bounds.l1_min_c"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_bounds.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_bounds.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_bounds.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_bounds.sparse_X": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "sklearn.svm.tests.test_bounds.test_ill_posed_min_c": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.svm.bounds.l1_min_c",
    "sklearn.svm.tests.test_bounds.nose"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_bounds.test_l1_min_c": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "sklearn.svm.tests.test_bounds.Y1",
    "sklearn.svm.tests.test_bounds.Y2",
    "sklearn.svm.tests.test_bounds.check_l1_min_c",
    "sklearn.svm.tests.test_bounds.dense_X",
    "sklearn.svm.tests.test_bounds.sparse_X"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_bounds.test_l2_deprecation": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "DeprecationWarning",
    "nose.tools.assert_equal",
    "sklearn.svm.bounds.l1_min_c",
    "sklearn.svm.tests.test_bounds.Y1",
    "sklearn.svm.tests.test_bounds.dense_X",
    "sklearn.svm.tests.test_bounds.warnings",
    "sklearn.utils.testing.clean_warning_registry"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_bounds.test_unsupported_loss": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.svm.bounds.l1_min_c",
    "sklearn.svm.tests.test_bounds.Y1",
    "sklearn.svm.tests.test_bounds.dense_X",
    "sklearn.svm.tests.test_bounds.nose"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_bounds.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_sparse": {
  "data": {
   "symbols_in_volume": [
    "numpy.array",
    "numpy.random.RandomState",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.dok_matrix",
    "scipy.sparse.lil_matrix",
    "sklearn.datasets.load_iris",
    "sklearn.svm.tests.test_sparse.X",
    "sklearn.svm.tests.test_sparse.X2",
    "sklearn.svm.tests.test_sparse.iris",
    "sklearn.svm.tests.test_sparse.perm",
    "sklearn.svm.tests.test_sparse.rng"
   ]
  },
  "type": "module"
 },
 "sklearn.svm.tests.test_sparse.ConvergenceWarning": {
  "data": {
   "shadows": "sklearn.utils.ConvergenceWarning"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_sparse.T": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "sklearn.svm.tests.test_sparse.T2": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "sklearn.svm.tests.test_sparse.X": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "sklearn.svm.tests.test_sparse.X2": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "sklearn.svm.tests.test_sparse.X2_sp": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "sklearn.svm.tests.test_sparse.X_sp": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "sklearn.svm.tests.test_sparse.Y": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "sklearn.svm.tests.test_sparse.Y2": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "sklearn.svm.tests.test_sparse.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_sparse.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_sparse.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_sparse.assert_false": {
  "data": {
   "shadows": "nose.tools.assert_false"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_sparse.assert_raise_message": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raise_message"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_sparse.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_sparse.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_sparse.assert_warns": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_warns"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_sparse.base": {
  "data": {
   "shadows": "sklearn.base"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_sparse.check_svm_model_equal": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "nose.tools.assert_true",
    "numpy.testing.assert_array_almost_equal",
    "scipy.sparse.issparse",
    "scipy.sparse.isspmatrix",
    "sklearn.svm.OneClassSVM",
    "sklearn.utils.testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_sparse.datasets": {
  "data": {
   "shadows": "sklearn.datasets"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_sparse.iris": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "sklearn.svm.tests.test_sparse.linear_model": {
  "data": {
   "shadows": "sklearn.linear_model"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_sparse.load_digits": {
  "data": {
   "shadows": "sklearn.datasets.load_digits"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_sparse.make_blobs": {
  "data": {
   "shadows": "sklearn.datasets.make_blobs"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_sparse.make_classification": {
  "data": {
   "shadows": "sklearn.datasets.make_classification"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_sparse.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_sparse.perm": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "sklearn.svm.tests.test_sparse.rng": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "sklearn.svm.tests.test_sparse.safe_sparse_dot": {
  "data": {
   "shadows": "sklearn.utils.extmath.safe_sparse_dot"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_sparse.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_sparse.svm": {
  "data": {
   "shadows": "sklearn.svm"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_sparse.test_consistent_proba": {
  "data": {
   "lineno": 335,
   "symbols_in_volume": [
    "numpy.testing.assert_array_almost_equal",
    "sklearn.svm.SVC",
    "sklearn.svm.tests.test_sparse.X",
    "sklearn.svm.tests.test_sparse.Y"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_sparse.test_error": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "ValueError",
    "nose.tools.assert_raises",
    "numpy.testing.assert_array_equal",
    "sklearn.svm.NuSVC",
    "sklearn.svm.SVC",
    "sklearn.svm.tests.test_sparse.T",
    "sklearn.svm.tests.test_sparse.X",
    "sklearn.svm.tests.test_sparse.X_sp",
    "sklearn.svm.tests.test_sparse.Y",
    "sklearn.svm.tests.test_sparse.Y2",
    "sklearn.svm.tests.test_sparse.true_result"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_sparse.test_linearsvc": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "nose.tools.assert_true",
    "numpy.testing.assert_array_almost_equal",
    "sklearn.svm.LinearSVC",
    "sklearn.svm.tests.test_sparse.X",
    "sklearn.svm.tests.test_sparse.X2",
    "sklearn.svm.tests.test_sparse.X2_sp",
    "sklearn.svm.tests.test_sparse.X_sp",
    "sklearn.svm.tests.test_sparse.Y",
    "sklearn.svm.tests.test_sparse.Y2"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_sparse.test_linearsvc_iris": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "numpy.argmax",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "sklearn.svm.LinearSVC",
    "sklearn.svm.tests.test_sparse.iris"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_sparse.test_sample_weights": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "numpy.testing.assert_array_equal",
    "sklearn.svm.SVC",
    "sklearn.svm.tests.test_sparse.X",
    "sklearn.svm.tests.test_sparse.X_sp",
    "sklearn.svm.tests.test_sparse.Y"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_sparse.test_sparse_decision_function": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.dot",
    "numpy.int",
    "numpy.testing.assert_array_almost_equal",
    "sklearn.svm.SVC",
    "sklearn.svm.tests.test_sparse.X",
    "sklearn.svm.tests.test_sparse.Y",
    "sklearn.svm.tests.test_sparse.iris",
    "sklearn.utils.extmath.safe_sparse_dot"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_sparse.test_sparse_liblinear_intercept_handling": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "sklearn.svm.LinearSVC",
    "sklearn.svm.tests.test_svm.test_dense_liblinear_intercept_handling"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_sparse.test_sparse_oneclasssvm": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "scipy.sparse.csr_matrix",
    "sklearn.datasets",
    "sklearn.datasets.make_blobs",
    "sklearn.svm.OneClassSVM",
    "sklearn.svm.tests.test_sparse.T",
    "sklearn.svm.tests.test_sparse.T2",
    "sklearn.svm.tests.test_sparse.X2_sp",
    "sklearn.svm.tests.test_sparse.X_sp",
    "sklearn.svm.tests.test_sparse.check_svm_model_equal",
    "sklearn.svm.tests.test_sparse.iris"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_sparse.test_sparse_realdata": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.assert_array_equal",
    "scipy.sparse.coo_matrix",
    "scipy.sparse.csr_matrix",
    "sklearn.svm.SVC",
    "sklearn.svm.tests.test_sparse.X"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_sparse.test_sparse_svc_clone_with_callable_kernel": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.testing.assert_array_equal",
    "sklearn.base.clone",
    "sklearn.svm.SVC",
    "sklearn.svm.tests.test_sparse.X",
    "sklearn.svm.tests.test_sparse.X_sp",
    "sklearn.svm.tests.test_sparse.Y"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_sparse.test_svc": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "scipy.sparse.csr_matrix",
    "sklearn.datasets",
    "sklearn.datasets.make_blobs",
    "sklearn.svm.SVC",
    "sklearn.svm.tests.test_sparse.T",
    "sklearn.svm.tests.test_sparse.T2",
    "sklearn.svm.tests.test_sparse.X2_sp",
    "sklearn.svm.tests.test_sparse.X_sp",
    "sklearn.svm.tests.test_sparse.Y",
    "sklearn.svm.tests.test_sparse.Y2",
    "sklearn.svm.tests.test_sparse.check_svm_model_equal",
    "sklearn.svm.tests.test_sparse.iris"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_sparse.test_svc_iris": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "numpy.testing.assert_array_almost_equal",
    "sklearn.svm.SVC",
    "sklearn.svm.tests.test_sparse.iris"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_sparse.test_svc_with_custom_kernel": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "numpy.testing.assert_array_equal",
    "sklearn.svm.SVC",
    "sklearn.svm.tests.test_sparse.X_sp",
    "sklearn.svm.tests.test_sparse.Y",
    "sklearn.utils.extmath.safe_sparse_dot"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_sparse.test_svm": {
  "data": {
   "shadows": "sklearn.svm.tests.test_svm"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_sparse.test_timeout": {
  "data": {
   "lineno": 328,
   "symbols_in_volume": [
    "sklearn.svm.SVC",
    "sklearn.svm.tests.test_sparse.X_sp",
    "sklearn.svm.tests.test_sparse.Y",
    "sklearn.utils.ConvergenceWarning",
    "sklearn.utils.testing.assert_warns"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_sparse.test_unsorted_indices": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "nose.tools.assert_false",
    "numpy.arange",
    "numpy.testing.assert_array_almost_equal",
    "scipy.sparse.csr_matrix",
    "sklearn.datasets.load_digits",
    "sklearn.svm.SVC",
    "sklearn.svm.tests.test_sparse.X"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_sparse.test_weight": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "nose.tools.assert_true",
    "numpy.sum",
    "scipy.sparse.csr_matrix",
    "sklearn.datasets.make_classification",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.svm.LinearSVC",
    "sklearn.svm.SVC"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_sparse.true_result": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "sklearn.svm.tests.test_sparse.true_result2": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "sklearn.svm.tests.test_svm": {
  "data": {
   "symbols_in_volume": [
    "sklearn.datasets.load_iris",
    "sklearn.svm.tests.test_svm.iris",
    "sklearn.svm.tests.test_svm.perm",
    "sklearn.svm.tests.test_svm.rng",
    "sklearn.utils.check_random_state"
   ]
  },
  "type": "module"
 },
 "sklearn.svm.tests.test_svm.ChangedBehaviorWarning": {
  "data": {
   "shadows": "sklearn.base.ChangedBehaviorWarning"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_svm.ConvergenceWarning": {
  "data": {
   "shadows": "sklearn.utils.ConvergenceWarning"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_svm.LogisticRegression": {
  "data": {
   "shadows": "sklearn.linear_model.LogisticRegression"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_svm.NotFittedError": {
  "data": {
   "shadows": "sklearn.utils.validation.NotFittedError"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_svm.OneVsRestClassifier": {
  "data": {
   "shadows": "sklearn.multiclass.OneVsRestClassifier"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_svm.T": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "sklearn.svm.tests.test_svm.X": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "sklearn.svm.tests.test_svm.Y": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "sklearn.svm.tests.test_svm.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_svm.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_svm.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_svm.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_svm.assert_false": {
  "data": {
   "shadows": "nose.tools.assert_false"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_svm.assert_greater": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_greater"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_svm.assert_in": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_in"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_svm.assert_less": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_less"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_svm.assert_raise_message": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raise_message"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_svm.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_svm.assert_raises_regexp": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises_regexp"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_svm.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_svm.assert_warns": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_warns"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_svm.assert_warns_message": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_warns_message"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_svm.base": {
  "data": {
   "shadows": "sklearn.base"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_svm.check_random_state": {
  "data": {
   "shadows": "sklearn.utils.check_random_state"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_svm.compute_class_weight": {
  "data": {
   "shadows": "sklearn.utils.compute_class_weight"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_svm.datasets": {
  "data": {
   "shadows": "sklearn.datasets"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_svm.f1_score": {
  "data": {
   "shadows": "sklearn.metrics.f1_score"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_svm.ignore_warnings": {
  "data": {
   "shadows": "sklearn.utils.testing.ignore_warnings"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_svm.iris": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "sklearn.svm.tests.test_svm.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_svm.linear_model": {
  "data": {
   "shadows": "sklearn.linear_model"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_svm.make_blobs": {
  "data": {
   "shadows": "sklearn.datasets.make_blobs"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_svm.make_classification": {
  "data": {
   "shadows": "sklearn.datasets.make_classification"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_svm.metrics": {
  "data": {
   "shadows": "sklearn.metrics"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_svm.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_svm.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_svm.perm": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "sklearn.svm.tests.test_svm.rbf_kernel": {
  "data": {
   "shadows": "sklearn.metrics.pairwise.rbf_kernel"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_svm.rng": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "sklearn.svm.tests.test_svm.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_svm.svm": {
  "data": {
   "shadows": "sklearn.svm"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_svm.test_auto_weight": {
  "data": {
   "lineno": 420,
   "symbols_in_volume": [
    "nose.tools.assert_true",
    "numpy.arange",
    "numpy.argmax",
    "numpy.delete",
    "numpy.unique",
    "numpy.where",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.metrics.f1_score",
    "sklearn.svm.LinearSVC",
    "sklearn.svm.SVC",
    "sklearn.svm.tests.test_svm.X",
    "sklearn.svm.tests.test_svm.iris",
    "sklearn.utils.compute_class_weight"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_bad_input": {
  "data": {
   "lineno": 447,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "nose.tools.assert_false",
    "nose.tools.assert_raises",
    "numpy.array",
    "numpy.ascontiguousarray",
    "numpy.asfortranarray",
    "numpy.dot",
    "numpy.testing.assert_array_equal",
    "numpy.tile",
    "range",
    "scipy.sparse.lil_matrix",
    "sklearn.svm.LinearSVC",
    "sklearn.svm.NuSVC",
    "sklearn.svm.SVC",
    "sklearn.svm.tests.test_svm.T",
    "sklearn.svm.tests.test_svm.X",
    "sklearn.svm.tests.test_svm.Y",
    "sklearn.svm.tests.test_svm.true_result"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_consistent_proba": {
  "data": {
   "lineno": 802,
   "symbols_in_volume": [
    "numpy.testing.assert_array_almost_equal",
    "sklearn.svm.SVC",
    "sklearn.svm.tests.test_svm.X",
    "sklearn.svm.tests.test_svm.Y",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_crammer_singer_binary": {
  "data": {
   "lineno": 639,
   "symbols_in_volume": [
    "sklearn.datasets.make_classification",
    "sklearn.svm.LinearSVC",
    "sklearn.svm.tests.test_svm.X",
    "sklearn.utils.testing.assert_greater"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_decision_function": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.dot",
    "numpy.int",
    "numpy.testing.assert_array_almost_equal",
    "sklearn.metrics.pairwise.rbf_kernel",
    "sklearn.svm.SVC",
    "sklearn.svm.tests.test_svm.X",
    "sklearn.svm.tests.test_svm.Y",
    "sklearn.svm.tests.test_svm.iris"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_decision_function_shape": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": [
    "len",
    "nose.tools.assert_equal",
    "numpy.argmax",
    "numpy.testing.assert_array_equal",
    "sklearn.base.ChangedBehaviorWarning",
    "sklearn.cross_validation.train_test_split",
    "sklearn.datasets.make_blobs",
    "sklearn.svm.SVC",
    "sklearn.svm.tests.test_svm.X",
    "sklearn.svm.tests.test_svm.iris",
    "sklearn.utils.testing.assert_warns_message"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_decision_function_shape_two_class": {
  "data": {
   "lineno": 873,
   "symbols_in_volume": [
    "estimator",
    "len",
    "nose.tools.assert_equal",
    "sklearn.datasets.make_blobs",
    "sklearn.multiclass.OneVsRestClassifier",
    "sklearn.svm.NuSVC",
    "sklearn.svm.SVC",
    "sklearn.svm.tests.test_svm.X"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_dense_liblinear_intercept_handling": {
  "data": {
   "lineno": 664,
   "symbols_in_volume": [
    "classifier",
    "nose.tools.assert_true",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_array_almost_equal",
    "sklearn.svm.LinearSVC",
    "sklearn.svm.tests.test_svm.X",
    "sklearn.utils.testing.assert_less"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_hasattr_predict_proba": {
  "data": {
   "lineno": 851,
   "symbols_in_volume": [
    "hasattr",
    "nose.tools.assert_false",
    "nose.tools.assert_true",
    "sklearn.svm.SVC",
    "sklearn.svm.tests.test_svm.iris",
    "sklearn.utils.testing.assert_raise_message",
    "sklearn.utils.validation.NotFittedError"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_immutable_coef_property": {
  "data": {
   "lineno": 721,
   "symbols_in_volume": [
    "AttributeError",
    "RuntimeError",
    "ValueError",
    "nose.tools.assert_raises",
    "numpy.arange",
    "sklearn.svm.NuSVC",
    "sklearn.svm.NuSVR",
    "sklearn.svm.OneClassSVM",
    "sklearn.svm.SVC",
    "sklearn.svm.SVR",
    "sklearn.svm.tests.test_svm.iris"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_liblinear_set_coef": {
  "data": {
   "lineno": 697,
   "symbols_in_volume": [
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_array_equal",
    "sklearn.svm.LinearSVC",
    "sklearn.svm.tests.test_svm.X",
    "sklearn.svm.tests.test_svm.iris"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_libsvm_iris": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "numpy.float64",
    "numpy.mean",
    "numpy.sort",
    "numpy.testing.assert_array_equal",
    "sklearn.svm.SVC",
    "sklearn.svm.libsvm.cross_validation",
    "sklearn.svm.libsvm.fit",
    "sklearn.svm.libsvm.predict",
    "sklearn.svm.tests.test_svm.iris",
    "sklearn.utils.testing.assert_greater"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_libsvm_parameters": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "numpy.testing.assert_array_equal",
    "sklearn.svm.SVC",
    "sklearn.svm.tests.test_svm.X",
    "sklearn.svm.tests.test_svm.Y"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_linear_svc_convergence_warnings": {
  "data": {
   "lineno": 811,
   "symbols_in_volume": [
    "nose.tools.assert_equal",
    "sklearn.svm.LinearSVC",
    "sklearn.svm.tests.test_svm.X",
    "sklearn.svm.tests.test_svm.Y",
    "sklearn.utils.ConvergenceWarning",
    "sklearn.utils.testing.assert_warns"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_linear_svc_intercept_scaling": {
  "data": {
   "lineno": 832,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.svm.LinearSVC",
    "sklearn.svm.tests.test_svm.X",
    "sklearn.svm.tests.test_svm.Y",
    "sklearn.utils.testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_linear_svx_uppercase_loss_penalty": {
  "data": {
   "lineno": 563,
   "symbols_in_volume": [
    "DeprecationWarning",
    "sklearn.svm.LinearSVC",
    "sklearn.svm.LinearSVR",
    "sklearn.svm.tests.test_svm.X",
    "sklearn.utils.testing.assert_warns_message"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_linearsvc": {
  "data": {
   "lineno": 590,
   "symbols_in_volume": [
    "nose.tools.assert_true",
    "numpy.int",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_array_equal",
    "sklearn.svm.LinearSVC",
    "sklearn.svm.tests.test_svm.T",
    "sklearn.svm.tests.test_svm.X",
    "sklearn.svm.tests.test_svm.Y",
    "sklearn.svm.tests.test_svm.true_result"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_linearsvc_crammer_singer": {
  "data": {
   "lineno": 619,
   "symbols_in_volume": [
    "nose.tools.assert_true",
    "numpy.argmax",
    "numpy.dot",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_array_equal",
    "sklearn.svm.LinearSVC",
    "sklearn.svm.tests.test_svm.iris"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_linearsvc_iris": {
  "data": {
   "lineno": 650,
   "symbols_in_volume": [
    "nose.tools.assert_equal",
    "numpy.argmax",
    "numpy.mean",
    "numpy.testing.assert_array_equal",
    "set",
    "sklearn.svm.LinearSVC",
    "sklearn.svm.tests.test_svm.iris",
    "sklearn.utils.testing.assert_greater"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_linearsvc_parameters": {
  "data": {
   "lineno": 501,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.datasets.make_classification",
    "sklearn.svm.LinearSVC",
    "sklearn.svm.tests.test_svm.X",
    "sklearn.svm.tests.test_svm.itertools",
    "sklearn.utils.testing.assert_raises_regexp"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_linearsvc_verbose": {
  "data": {
   "lineno": 736,
   "symbols_in_volume": [
    "sklearn.svm.LinearSVC",
    "sklearn.svm.tests.test_svm.X",
    "sklearn.svm.tests.test_svm.Y",
    "sklearn.svm.tests.test_svm.os"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_linearsvr": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.linalg.norm",
    "sklearn.datasets.load_diabetes",
    "sklearn.svm.LinearSVR",
    "sklearn.svm.SVR"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_linearsvx_loss_penalty_deprecations": {
  "data": {
   "lineno": 530,
   "symbols_in_volume": [
    "DeprecationWarning",
    "sklearn.svm.LinearSVC",
    "sklearn.svm.LinearSVR",
    "sklearn.svm.tests.test_svm.X",
    "sklearn.utils.testing.assert_warns_message"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_lsvc_intercept_scaling_zero": {
  "data": {
   "lineno": 843,
   "symbols_in_volume": [
    "nose.tools.assert_equal",
    "sklearn.svm.LinearSVC",
    "sklearn.svm.tests.test_svm.X",
    "sklearn.svm.tests.test_svm.Y"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_oneclass": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "ValueError",
    "nose.tools.assert_raises",
    "numpy.testing.assert_array_almost_equal",
    "sklearn.svm.OneClassSVM",
    "sklearn.svm.tests.test_svm.T",
    "sklearn.svm.tests.test_svm.X"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_oneclass_decision_function": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "numpy.mean",
    "numpy.r_",
    "numpy.testing.assert_array_equal",
    "sklearn.svm.OneClassSVM",
    "sklearn.svm.tests.test_svm.X",
    "sklearn.utils.check_random_state",
    "sklearn.utils.testing.assert_greater"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_precomputed": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "nose.tools.assert_raises",
    "numpy.array",
    "numpy.dot",
    "numpy.mean",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_array_equal",
    "numpy.zeros_like",
    "range",
    "sklearn.svm.SVC",
    "sklearn.svm.tests.test_svm.T",
    "sklearn.svm.tests.test_svm.X",
    "sklearn.svm.tests.test_svm.Y",
    "sklearn.svm.tests.test_svm.iris",
    "sklearn.svm.tests.test_svm.true_result"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_probability": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "nose.tools.assert_true",
    "numpy.argmax",
    "numpy.exp",
    "numpy.mean",
    "numpy.ones",
    "numpy.sum",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_array_almost_equal",
    "sklearn.svm.NuSVC",
    "sklearn.svm.SVC",
    "sklearn.svm.tests.test_svm.iris"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_sample_weights": {
  "data": {
   "lineno": 400,
   "symbols_in_volume": [
    "len",
    "numpy.repeat",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_array_equal",
    "sklearn.svm.SVC",
    "sklearn.svm.tests.test_svm.X",
    "sklearn.svm.tests.test_svm.Y"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_single_sample_1d": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "sklearn.svm.LinearSVC",
    "sklearn.svm.SVC",
    "sklearn.svm.tests.test_svm.X",
    "sklearn.svm.tests.test_svm.Y",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_sparse_precomputed": {
  "data": {
   "lineno": 491,
   "symbols_in_volume": [
    "TypeError",
    "scipy.sparse.csr_matrix",
    "sklearn.svm.SVC",
    "sklearn.utils.testing.assert_in",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_svc_bad_kernel": {
  "data": {
   "lineno": 778,
   "symbols_in_volume": [
    "ValueError",
    "nose.tools.assert_raises",
    "sklearn.svm.SVC",
    "sklearn.svm.tests.test_svm.X",
    "sklearn.svm.tests.test_svm.Y"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_svc_clone_with_callable_kernel": {
  "data": {
   "lineno": 750,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_array_equal",
    "sklearn.base.clone",
    "sklearn.svm.SVC",
    "sklearn.svm.tests.test_svm.iris"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_svr": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "len",
    "numpy.ones",
    "sklearn.datasets.load_diabetes",
    "sklearn.svm.LinearSVR",
    "sklearn.svm.NuSVR",
    "sklearn.svm.SVR",
    "sklearn.utils.testing.assert_greater"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_svr_coef_sign": {
  "data": {
   "lineno": 819,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.random.RandomState",
    "numpy.testing.assert_array_almost_equal",
    "sklearn.svm.LinearSVR",
    "sklearn.svm.NuSVR",
    "sklearn.svm.SVR",
    "sklearn.svm.tests.test_svm.X"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_svr_errors": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "ValueError",
    "nose.tools.assert_raises",
    "numpy.array",
    "sklearn.svm.SVR",
    "sklearn.svm.tests.test_svm.X"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_svr_predict": {
  "data": {
   "lineno": 359,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.testing.assert_array_almost_equal",
    "sklearn.metrics.pairwise.rbf_kernel",
    "sklearn.svm.SVR",
    "sklearn.svm.tests.test_svm.X",
    "sklearn.svm.tests.test_svm.iris"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_timeout": {
  "data": {
   "lineno": 783,
   "symbols_in_volume": [
    "numpy.dot",
    "sklearn.svm.SVC",
    "sklearn.svm.tests.test_svm.X",
    "sklearn.svm.tests.test_svm.Y",
    "sklearn.utils.ConvergenceWarning",
    "sklearn.utils.testing.assert_warns"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_tweak_params": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.assert_array_equal",
    "sklearn.svm.SVC",
    "sklearn.svm.tests.test_svm.X",
    "sklearn.svm.tests.test_svm.Y"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_unfitted": {
  "data": {
   "lineno": 789,
   "symbols_in_volume": [
    "Exception",
    "sklearn.svm.NuSVR",
    "sklearn.svm.SVC",
    "sklearn.svm.tests.test_svm.X",
    "sklearn.utils.testing.assert_raises_regexp"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_weight": {
  "data": {
   "lineno": 381,
   "symbols_in_volume": [
    "nose.tools.assert_true",
    "numpy.testing.assert_array_almost_equal",
    "sklearn.datasets.make_classification",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.metrics.f1_score",
    "sklearn.svm.LinearSVC",
    "sklearn.svm.SVC",
    "sklearn.svm.tests.test_svm.X",
    "sklearn.svm.tests.test_svm.Y"
   ]
  },
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.train_test_split": {
  "data": {
   "shadows": "sklearn.cross_validation.train_test_split"
  },
  "type": "import"
 },
 "sklearn.svm.tests.test_svm.true_result": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "sklearn.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "sklearn.tests": {
  "data": {},
  "type": "module"
 },
 "sklearn.tests.test_base": {
  "data": {},
  "type": "module"
 },
 "sklearn.tests.test_base.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "sklearn.tests.test_base.Buggy": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator"
   ]
  },
  "type": "class"
 },
 "sklearn.tests.test_base.Buggy.__init__": {
  "data": {
   "lineno": 58
  },
  "type": "function"
 },
 "sklearn.tests.test_base.DecisionTreeClassifier": {
  "data": {
   "shadows": "sklearn.tree.DecisionTreeClassifier"
  },
  "type": "import"
 },
 "sklearn.tests.test_base.DecisionTreeRegressor": {
  "data": {
   "shadows": "sklearn.tree.DecisionTreeRegressor"
  },
  "type": "import"
 },
 "sklearn.tests.test_base.DeprecatedAttributeEstimator": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator"
   ]
  },
  "type": "class"
 },
 "sklearn.tests.test_base.DeprecatedAttributeEstimator.__init__": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "DeprecationWarning"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_base.DeprecatedAttributeEstimator.b": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "property",
    "sklearn.utils.deprecated"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_base.GridSearchCV": {
  "data": {
   "shadows": "sklearn.grid_search.GridSearchCV"
  },
  "type": "import"
 },
 "sklearn.tests.test_base.K": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator"
   ]
  },
  "type": "class"
 },
 "sklearn.tests.test_base.K.__init__": {
  "data": {
   "lineno": 31
  },
  "type": "function"
 },
 "sklearn.tests.test_base.MyEstimator": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator"
   ]
  },
  "type": "class"
 },
 "sklearn.tests.test_base.MyEstimator.__init__": {
  "data": {
   "lineno": 25
  },
  "type": "function"
 },
 "sklearn.tests.test_base.NoEstimator": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "sklearn.tests.test_base.NoEstimator.__init__": {
  "data": {
   "lineno": 63
  },
  "type": "function"
 },
 "sklearn.tests.test_base.NoEstimator.fit": {
  "data": {
   "lineno": 66
  },
  "type": "function"
 },
 "sklearn.tests.test_base.NoEstimator.predict": {
  "data": {
   "lineno": 69
  },
  "type": "function"
 },
 "sklearn.tests.test_base.Pipeline": {
  "data": {
   "shadows": "sklearn.pipeline.Pipeline"
  },
  "type": "import"
 },
 "sklearn.tests.test_base.SVC": {
  "data": {
   "shadows": "sklearn.svm.SVC"
  },
  "type": "import"
 },
 "sklearn.tests.test_base.SelectFpr": {
  "data": {
   "shadows": "sklearn.feature_selection.SelectFpr"
  },
  "type": "import"
 },
 "sklearn.tests.test_base.T": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator"
   ]
  },
  "type": "class"
 },
 "sklearn.tests.test_base.T.__init__": {
  "data": {
   "lineno": 37
  },
  "type": "function"
 },
 "sklearn.tests.test_base.VargEstimator": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator"
   ]
  },
  "type": "class"
 },
 "sklearn.tests.test_base.VargEstimator.__init__": {
  "data": {
   "lineno": 75
  },
  "type": "function"
 },
 "sklearn.tests.test_base.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.tests.test_base.assert_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.tests.test_base.assert_false": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_false"
  },
  "type": "import"
 },
 "sklearn.tests.test_base.assert_not_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_not_equal"
  },
  "type": "import"
 },
 "sklearn.tests.test_base.assert_raises": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.tests.test_base.assert_true": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_true"
  },
  "type": "import"
 },
 "sklearn.tests.test_base.clone": {
  "data": {
   "shadows": "sklearn.base.clone"
  },
  "type": "import"
 },
 "sklearn.tests.test_base.datasets": {
  "data": {
   "shadows": "sklearn.datasets"
  },
  "type": "import"
 },
 "sklearn.tests.test_base.deprecated": {
  "data": {
   "shadows": "sklearn.utils.deprecated"
  },
  "type": "import"
 },
 "sklearn.tests.test_base.f_classif": {
  "data": {
   "shadows": "sklearn.feature_selection.f_classif"
  },
  "type": "import"
 },
 "sklearn.tests.test_base.is_classifier": {
  "data": {
   "shadows": "sklearn.base.is_classifier"
  },
  "type": "import"
 },
 "sklearn.tests.test_base.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.tests.test_base.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.tests.test_base.test_clone": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "numpy.zeros",
    "sklearn.base.clone",
    "sklearn.feature_selection.SelectFpr",
    "sklearn.feature_selection.f_classif",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_base.test_clone_2": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "hasattr",
    "sklearn.base.clone",
    "sklearn.feature_selection.SelectFpr",
    "sklearn.feature_selection.f_classif",
    "sklearn.utils.testing.assert_false"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_base.test_clone_buggy": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "RuntimeError",
    "TypeError",
    "sklearn.base.clone",
    "sklearn.tests.test_base.Buggy",
    "sklearn.tests.test_base.NoEstimator",
    "sklearn.tests.test_base.VargEstimator",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_base.test_clone_empty_array": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "numpy.array",
    "scipy.sparse.csr_matrix",
    "sklearn.base.clone",
    "sklearn.tests.test_base.MyEstimator",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_base.test_clone_nan": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "numpy.nan",
    "sklearn.base.clone",
    "sklearn.tests.test_base.MyEstimator",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_base.test_get_params": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.tests.test_base.K",
    "sklearn.tests.test_base.T",
    "sklearn.utils.testing.assert_raises",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_base.test_get_params_deprecated": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "sklearn.tests.test_base.DeprecatedAttributeEstimator",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_base.test_is_classifier": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "sklearn.base.is_classifier",
    "sklearn.grid_search.GridSearchCV",
    "sklearn.pipeline.Pipeline",
    "sklearn.svm.SVC",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_base.test_repr": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "len",
    "repr",
    "sklearn.tests.test_base.K",
    "sklearn.tests.test_base.MyEstimator",
    "sklearn.tests.test_base.T",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_base.test_score_sample_weight": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "len",
    "numpy.random.RandomState",
    "sklearn.datasets.load_boston",
    "sklearn.datasets.load_iris",
    "sklearn.tree.DecisionTreeClassifier",
    "sklearn.tree.DecisionTreeRegressor",
    "sklearn.utils.testing.assert_not_equal",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_base.test_set_params": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.pipeline.Pipeline",
    "sklearn.svm.SVC",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_base.test_str": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "sklearn.tests.test_base.MyEstimator",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_calibration": {
  "data": {},
  "type": "module"
 },
 "sklearn.tests.test_calibration.CalibratedClassifierCV": {
  "data": {
   "shadows": "sklearn.calibration.CalibratedClassifierCV"
  },
  "type": "import"
 },
 "sklearn.tests.test_calibration.Imputer": {
  "data": {
   "shadows": "sklearn.preprocessing.Imputer"
  },
  "type": "import"
 },
 "sklearn.tests.test_calibration.LinearSVC": {
  "data": {
   "shadows": "sklearn.svm.LinearSVC"
  },
  "type": "import"
 },
 "sklearn.tests.test_calibration.MultinomialNB": {
  "data": {
   "shadows": "sklearn.naive_bayes.MultinomialNB"
  },
  "type": "import"
 },
 "sklearn.tests.test_calibration.Pipeline": {
  "data": {
   "shadows": "sklearn.pipeline.Pipeline"
  },
  "type": "import"
 },
 "sklearn.tests.test_calibration.RandomForestClassifier": {
  "data": {
   "shadows": "sklearn.ensemble.RandomForestClassifier"
  },
  "type": "import"
 },
 "sklearn.tests.test_calibration.RandomForestRegressor": {
  "data": {
   "shadows": "sklearn.ensemble.RandomForestRegressor"
  },
  "type": "import"
 },
 "sklearn.tests.test_calibration.Ridge": {
  "data": {
   "shadows": "sklearn.linear_model.Ridge"
  },
  "type": "import"
 },
 "sklearn.tests.test_calibration._SigmoidCalibration": {
  "data": {
   "shadows": "sklearn.calibration._SigmoidCalibration"
  },
  "type": "import"
 },
 "sklearn.tests.test_calibration._sigmoid_calibration": {
  "data": {
   "shadows": "sklearn.calibration._sigmoid_calibration"
  },
  "type": "import"
 },
 "sklearn.tests.test_calibration.assert_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "sklearn.tests.test_calibration.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.tests.test_calibration.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.tests.test_calibration.assert_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.tests.test_calibration.assert_greater": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_greater"
  },
  "type": "import"
 },
 "sklearn.tests.test_calibration.assert_greater_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_greater_equal"
  },
  "type": "import"
 },
 "sklearn.tests.test_calibration.assert_raises": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.tests.test_calibration.assert_warns_message": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_warns_message"
  },
  "type": "import"
 },
 "sklearn.tests.test_calibration.brier_score_loss": {
  "data": {
   "shadows": "sklearn.metrics.brier_score_loss"
  },
  "type": "import"
 },
 "sklearn.tests.test_calibration.calibration_curve": {
  "data": {
   "shadows": "sklearn.calibration.calibration_curve"
  },
  "type": "import"
 },
 "sklearn.tests.test_calibration.ignore_warnings": {
  "data": {
   "shadows": "sklearn.utils.testing.ignore_warnings"
  },
  "type": "import"
 },
 "sklearn.tests.test_calibration.log_loss": {
  "data": {
   "shadows": "sklearn.metrics.log_loss"
  },
  "type": "import"
 },
 "sklearn.tests.test_calibration.make_blobs": {
  "data": {
   "shadows": "sklearn.datasets.make_blobs"
  },
  "type": "import"
 },
 "sklearn.tests.test_calibration.make_classification": {
  "data": {
   "shadows": "sklearn.datasets.make_classification"
  },
  "type": "import"
 },
 "sklearn.tests.test_calibration.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.tests.test_calibration.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.tests.test_calibration.test_calibration": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "numpy.random.RandomState",
    "scipy.sparse.csr_matrix",
    "sklearn.calibration.CalibratedClassifierCV",
    "sklearn.datasets.make_classification",
    "sklearn.ensemble.RandomForestRegressor",
    "sklearn.linear_model.Ridge",
    "sklearn.metrics.brier_score_loss",
    "sklearn.naive_bayes.MultinomialNB",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_greater",
    "sklearn.utils.testing.assert_raises",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_calibration.test_calibration_curve": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.array",
    "sklearn.calibration.calibration_curve",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_calibration.test_calibration_multiclass": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "numpy.ones",
    "numpy.sum",
    "sklearn.calibration.CalibratedClassifierCV",
    "sklearn.datasets.make_blobs",
    "sklearn.ensemble.RandomForestClassifier",
    "sklearn.metrics.log_loss",
    "sklearn.svm.LinearSVC",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_greater",
    "sklearn.utils.testing.assert_greater_equal",
    "softmax"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_calibration.test_calibration_multiclass.softmax": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "numpy.exp"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_calibration.test_calibration_nan_imputer": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "numpy.nan",
    "sklearn.calibration.CalibratedClassifierCV",
    "sklearn.datasets.make_classification",
    "sklearn.ensemble.RandomForestClassifier",
    "sklearn.pipeline.Pipeline",
    "sklearn.preprocessing.Imputer"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_calibration.test_calibration_prefit": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "numpy.argmax",
    "numpy.array",
    "numpy.random.RandomState",
    "scipy.sparse.csr_matrix",
    "sklearn.calibration.CalibratedClassifierCV",
    "sklearn.datasets.make_classification",
    "sklearn.metrics.brier_score_loss",
    "sklearn.naive_bayes.MultinomialNB",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_greater"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_calibration.test_sample_weight_warning": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "UserWarning",
    "len",
    "numpy.linalg.norm",
    "numpy.random.RandomState",
    "sklearn.calibration.CalibratedClassifierCV",
    "sklearn.datasets.make_classification",
    "sklearn.svm.LinearSVC",
    "sklearn.utils.testing.assert_greater",
    "sklearn.utils.testing.assert_warns_message"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_calibration.test_sigmoid_calibration": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "numpy.exp",
    "numpy.vstack",
    "sklearn.calibration._SigmoidCalibration",
    "sklearn.calibration._sigmoid_calibration",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_check_build": {
  "data": {},
  "type": "module"
 },
 "sklearn.tests.test_check_build.assert_raises": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.tests.test_check_build.raise_build_error": {
  "data": {
   "shadows": "sklearn.__check_build.raise_build_error"
  },
  "type": "import"
 },
 "sklearn.tests.test_check_build.test_raise_build_error": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "ImportError",
    "sklearn.__check_build.raise_build_error",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_common": {
  "data": {},
  "type": "module"
 },
 "sklearn.tests.test_common.BiclusterMixin": {
  "data": {
   "shadows": "sklearn.cluster.bicluster.BiclusterMixin"
  },
  "type": "import"
 },
 "sklearn.tests.test_common.CROSS_DECOMPOSITION": {
  "data": {
   "shadows": "sklearn.utils.estimator_checks.CROSS_DECOMPOSITION"
  },
  "type": "import"
 },
 "sklearn.tests.test_common.LinearClassifierMixin": {
  "data": {
   "shadows": "sklearn.linear_model.base.LinearClassifierMixin"
  },
  "type": "import"
 },
 "sklearn.tests.test_common.PY3": {
  "data": {
   "shadows": "sklearn.externals.six.PY3"
  },
  "type": "import"
 },
 "sklearn.tests.test_common.ProjectedGradientNMF": {
  "data": {
   "shadows": "sklearn.decomposition.ProjectedGradientNMF"
  },
  "type": "import"
 },
 "sklearn.tests.test_common._yield_all_checks": {
  "data": {
   "shadows": "sklearn.utils.estimator_checks._yield_all_checks"
  },
  "type": "import"
 },
 "sklearn.tests.test_common.all_estimators": {
  "data": {
   "shadows": "sklearn.utils.testing.all_estimators"
  },
  "type": "import"
 },
 "sklearn.tests.test_common.assert_false": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_false"
  },
  "type": "import"
 },
 "sklearn.tests.test_common.assert_greater": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_greater"
  },
  "type": "import"
 },
 "sklearn.tests.test_common.assert_in": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_in"
  },
  "type": "import"
 },
 "sklearn.tests.test_common.check_class_weight_balanced_linear_classifier": {
  "data": {
   "shadows": "sklearn.utils.estimator_checks.check_class_weight_balanced_linear_classifier"
  },
  "type": "import"
 },
 "sklearn.tests.test_common.check_fit1d_1sample": {
  "data": {
   "shadows": "sklearn.utils.estimator_checks.check_fit1d_1sample"
  },
  "type": "import"
 },
 "sklearn.tests.test_common.check_fit2d_predict1d": {
  "data": {
   "shadows": "sklearn.utils.estimator_checks.check_fit2d_predict1d"
  },
  "type": "import"
 },
 "sklearn.tests.test_common.check_get_params_invariance": {
  "data": {
   "shadows": "sklearn.utils.estimator_checks.check_get_params_invariance"
  },
  "type": "import"
 },
 "sklearn.tests.test_common.check_non_transformer_estimators_n_iter": {
  "data": {
   "shadows": "sklearn.utils.estimator_checks.check_non_transformer_estimators_n_iter"
  },
  "type": "import"
 },
 "sklearn.tests.test_common.check_parameters_default_constructible": {
  "data": {
   "shadows": "sklearn.utils.estimator_checks.check_parameters_default_constructible"
  },
  "type": "import"
 },
 "sklearn.tests.test_common.check_transformer_n_iter": {
  "data": {
   "shadows": "sklearn.utils.estimator_checks.check_transformer_n_iter"
  },
  "type": "import"
 },
 "sklearn.tests.test_common.clean_warning_registry": {
  "data": {
   "shadows": "sklearn.utils.testing.clean_warning_registry"
  },
  "type": "import"
 },
 "sklearn.tests.test_common.ignore_warnings": {
  "data": {
   "shadows": "sklearn.utils.testing.ignore_warnings"
  },
  "type": "import"
 },
 "sklearn.tests.test_common.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "sklearn.tests.test_common.pkgutil": {
  "data": {
   "shadows": "pkgutil"
  },
  "type": "import"
 },
 "sklearn.tests.test_common.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "sklearn.tests.test_common.sklearn": {
  "data": {
   "shadows": "sklearn"
  },
  "type": "import"
 },
 "sklearn.tests.test_common.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "sklearn.tests.test_common.test_all_estimator_no_base_class": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "sklearn.utils.testing.all_estimators",
    "sklearn.utils.testing.assert_false"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_common.test_all_estimators": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "len",
    "sklearn.utils.estimator_checks.check_parameters_default_constructible",
    "sklearn.utils.testing.all_estimators",
    "sklearn.utils.testing.assert_greater"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_common.test_class_weight_balanced_linear_classifiers": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "clazz",
    "issubclass",
    "sklearn.linear_model.base.LinearClassifierMixin",
    "sklearn.tests.test_common.warnings",
    "sklearn.utils.estimator_checks.check_class_weight_balanced_linear_classifier",
    "sklearn.utils.testing.all_estimators",
    "sklearn.utils.testing.clean_warning_registry"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_common.test_configure": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "UserWarning",
    "dict",
    "exec",
    "execfile",
    "open",
    "sklearn.externals.six.PY3",
    "sklearn.tests.test_common.os",
    "sklearn.tests.test_common.sklearn",
    "sklearn.tests.test_common.sys",
    "sklearn.tests.test_common.warnings",
    "sklearn.utils.testing.clean_warning_registry"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_common.test_get_params_invariance": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "Estimator",
    "hasattr",
    "issubclass",
    "sklearn.decomposition.ProjectedGradientNMF",
    "sklearn.utils.estimator_checks.check_get_params_invariance",
    "sklearn.utils.testing.all_estimators",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_common.test_import_all_consistency": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "AttributeError",
    "__import__",
    "getattr",
    "sklearn.tests.test_common.pkgutil",
    "sklearn.tests.test_common.sklearn",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_common.test_non_meta_estimators": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "issubclass",
    "sklearn.cluster.bicluster.BiclusterMixin",
    "sklearn.decomposition.ProjectedGradientNMF",
    "sklearn.utils.estimator_checks._yield_all_checks",
    "sklearn.utils.testing.all_estimators",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_common.test_non_transformer_estimators_n_iter": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "Estimator",
    "hasattr",
    "sklearn.utils.estimator_checks.CROSS_DECOMPOSITION",
    "sklearn.utils.estimator_checks.check_non_transformer_estimators_n_iter",
    "sklearn.utils.testing.all_estimators"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_common.test_root_import_all_completeness": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "sklearn.tests.test_common.pkgutil",
    "sklearn.tests.test_common.sklearn",
    "sklearn.utils.testing.assert_in"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_common.test_transformer_n_iter": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "Estimator",
    "hasattr",
    "isinstance",
    "issubclass",
    "sklearn.decomposition.ProjectedGradientNMF",
    "sklearn.utils.estimator_checks.check_transformer_n_iter",
    "sklearn.utils.testing.all_estimators",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_common.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.tests.test_cross_validation": {
  "data": {
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "numpy.eye",
    "numpy.ones",
    "scipy.sparse.coo_matrix",
    "sklearn.tests.test_cross_validation.X"
   ]
  },
  "type": "module"
 },
 "sklearn.tests.test_cross_validation.CheckingClassifier": {
  "data": {
   "shadows": "sklearn.utils.mocking.CheckingClassifier"
  },
  "type": "import"
 },
 "sklearn.tests.test_cross_validation.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "sklearn.tests.test_cross_validation.Imputer": {
  "data": {
   "shadows": "sklearn.preprocessing.Imputer"
  },
  "type": "import"
 },
 "sklearn.tests.test_cross_validation.KMeans": {
  "data": {
   "shadows": "sklearn.cluster.KMeans"
  },
  "type": "import"
 },
 "sklearn.tests.test_cross_validation.KNeighborsClassifier": {
  "data": {
   "shadows": "sklearn.neighbors.KNeighborsClassifier"
  },
  "type": "import"
 },
 "sklearn.tests.test_cross_validation.MockClassifier": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "sklearn.tests.test_cross_validation.MockClassifier.__init__": {
  "data": {
   "lineno": 50
  },
  "type": "function"
 },
 "sklearn.tests.test_cross_validation.MockClassifier.fit": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "ValueError",
    "callback",
    "len",
    "numpy.unique",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_cross_validation.MockClassifier.get_params": {
  "data": {
   "lineno": 106
  },
  "type": "function"
 },
 "sklearn.tests.test_cross_validation.MockClassifier.predict": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_cross_validation.MockClassifier.score": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "numpy.abs"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_cross_validation.MockDataFrame": {
  "data": {
   "shadows": "sklearn.utils.mocking.MockDataFrame"
  },
  "type": "import"
 },
 "sklearn.tests.test_cross_validation.OneVsRestClassifier": {
  "data": {
   "shadows": "sklearn.multiclass.OneVsRestClassifier"
  },
  "type": "import"
 },
 "sklearn.tests.test_cross_validation.P_sparse": {
  "data": {
   "lineno": 113
  },
  "type": "constant"
 },
 "sklearn.tests.test_cross_validation.Pipeline": {
  "data": {
   "shadows": "sklearn.pipeline.Pipeline"
  },
  "type": "import"
 },
 "sklearn.tests.test_cross_validation.Ridge": {
  "data": {
   "shadows": "sklearn.linear_model.Ridge"
  },
  "type": "import"
 },
 "sklearn.tests.test_cross_validation.SVC": {
  "data": {
   "shadows": "sklearn.svm.SVC"
  },
  "type": "import"
 },
 "sklearn.tests.test_cross_validation.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "sklearn.tests.test_cross_validation.W_sparse": {
  "data": {
   "lineno": 111
  },
  "type": "constant"
 },
 "sklearn.tests.test_cross_validation.X": {
  "data": {
   "lineno": 109
  },
  "type": "constant"
 },
 "sklearn.tests.test_cross_validation.X_sparse": {
  "data": {
   "lineno": 110
  },
  "type": "constant"
 },
 "sklearn.tests.test_cross_validation.assert_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "sklearn.tests.test_cross_validation.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.tests.test_cross_validation.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.tests.test_cross_validation.assert_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.tests.test_cross_validation.assert_false": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_false"
  },
  "type": "import"
 },
 "sklearn.tests.test_cross_validation.assert_greater": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_greater"
  },
  "type": "import"
 },
 "sklearn.tests.test_cross_validation.assert_greater_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_greater_equal"
  },
  "type": "import"
 },
 "sklearn.tests.test_cross_validation.assert_less": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_less"
  },
  "type": "import"
 },
 "sklearn.tests.test_cross_validation.assert_not_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_not_equal"
  },
  "type": "import"
 },
 "sklearn.tests.test_cross_validation.assert_raises": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.tests.test_cross_validation.assert_true": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_true"
  },
  "type": "import"
 },
 "sklearn.tests.test_cross_validation.assert_warns_message": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_warns_message"
  },
  "type": "import"
 },
 "sklearn.tests.test_cross_validation.check_cv_coverage": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "len",
    "range",
    "set",
    "sklearn.tests.test_cross_validation.check_valid_split",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_cross_validation.check_valid_split": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "range",
    "set",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_cross_validation.coo_matrix": {
  "data": {
   "shadows": "scipy.sparse.coo_matrix"
  },
  "type": "import"
 },
 "sklearn.tests.test_cross_validation.csr_matrix": {
  "data": {
   "shadows": "scipy.sparse.csr_matrix"
  },
  "type": "import"
 },
 "sklearn.tests.test_cross_validation.cval": {
  "data": {
   "shadows": "sklearn.cross_validation"
  },
  "type": "import"
 },
 "sklearn.tests.test_cross_validation.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sklearn.tests.test_cross_validation.explained_variance_score": {
  "data": {
   "shadows": "sklearn.metrics.explained_variance_score"
  },
  "type": "import"
 },
 "sklearn.tests.test_cross_validation.ignore_warnings": {
  "data": {
   "shadows": "sklearn.utils.testing.ignore_warnings"
  },
  "type": "import"
 },
 "sklearn.tests.test_cross_validation.load_boston": {
  "data": {
   "shadows": "sklearn.datasets.load_boston"
  },
  "type": "import"
 },
 "sklearn.tests.test_cross_validation.load_digits": {
  "data": {
   "shadows": "sklearn.datasets.load_digits"
  },
  "type": "import"
 },
 "sklearn.tests.test_cross_validation.load_iris": {
  "data": {
   "shadows": "sklearn.datasets.load_iris"
  },
  "type": "import"
 },
 "sklearn.tests.test_cross_validation.make_multilabel_classification": {
  "data": {
   "shadows": "sklearn.datasets.make_multilabel_classification"
  },
  "type": "import"
 },
 "sklearn.tests.test_cross_validation.make_regression": {
  "data": {
   "shadows": "sklearn.datasets.make_regression"
  },
  "type": "import"
 },
 "sklearn.tests.test_cross_validation.make_scorer": {
  "data": {
   "shadows": "sklearn.metrics.make_scorer"
  },
  "type": "import"
 },
 "sklearn.tests.test_cross_validation.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.tests.test_cross_validation.precision_score": {
  "data": {
   "shadows": "sklearn.metrics.precision_score"
  },
  "type": "import"
 },
 "sklearn.tests.test_cross_validation.six": {
  "data": {
   "shadows": "sklearn.externals.six"
  },
  "type": "import"
 },
 "sklearn.tests.test_cross_validation.stats": {
  "data": {
   "shadows": "scipy.stats"
  },
  "type": "import"
 },
 "sklearn.tests.test_cross_validation.test_check_cv_return_types": {
  "data": {
   "lineno": 1063,
   "symbols_in_volume": [
    "isinstance",
    "numpy.array",
    "numpy.ones",
    "sklearn.cross_validation.KFold",
    "sklearn.cross_validation.StratifiedKFold",
    "sklearn.cross_validation.check_cv",
    "sklearn.tests.test_cross_validation.X",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_cross_validation.test_check_is_partition": {
  "data": {
   "lineno": 1202,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.delete",
    "sklearn.cross_validation._check_is_partition",
    "sklearn.utils.testing.assert_false",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_cross_validation.test_cross_val_generator_with_default_indices": {
  "data": {
   "lineno": 970,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.asarray",
    "sklearn.cross_validation.KFold",
    "sklearn.cross_validation.LeaveOneLabelOut",
    "sklearn.cross_validation.LeaveOneOut",
    "sklearn.cross_validation.LeavePLabelOut",
    "sklearn.cross_validation.LeavePOut",
    "sklearn.cross_validation.PredefinedSplit",
    "sklearn.cross_validation.ShuffleSplit",
    "sklearn.cross_validation.StratifiedKFold",
    "sklearn.tests.test_cross_validation.X",
    "sklearn.tests.test_cross_validation.y",
    "sklearn.utils.testing.assert_not_equal",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_cross_validation.test_cross_val_generator_with_indices": {
  "data": {
   "lineno": 949,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.asarray",
    "sklearn.cross_validation.KFold",
    "sklearn.cross_validation.LeaveOneLabelOut",
    "sklearn.cross_validation.LeaveOneOut",
    "sklearn.cross_validation.LeavePLabelOut",
    "sklearn.cross_validation.LeavePOut",
    "sklearn.cross_validation.PredefinedSplit",
    "sklearn.cross_validation.ShuffleSplit",
    "sklearn.cross_validation.StratifiedKFold",
    "sklearn.tests.test_cross_validation.X",
    "sklearn.tests.test_cross_validation.y",
    "sklearn.utils.testing.assert_not_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_cross_validation.test_cross_val_predict": {
  "data": {
   "lineno": 1104,
   "symbols_in_volume": [
    "ValueError",
    "bad_cv",
    "len",
    "numpy.median",
    "numpy.zeros_like",
    "scipy.sparse.coo_matrix",
    "sklearn.cluster.KMeans",
    "sklearn.cross_validation.KFold",
    "sklearn.cross_validation.LeaveOneOut",
    "sklearn.cross_validation.cross_val_predict",
    "sklearn.datasets.load_boston",
    "sklearn.linear_model.Ridge",
    "sklearn.tests.test_cross_validation.X",
    "sklearn.tests.test_cross_validation.y",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_cross_validation.test_cross_val_predict.bad_cv": {
  "data": {
   "lineno": 1136,
   "symbols_in_volume": [
    "numpy.array",
    "range"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_cross_validation.test_cross_val_predict_input_types": {
  "data": {
   "lineno": 1143,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "numpy.newaxis",
    "sklearn.cross_validation.cross_val_predict",
    "sklearn.linear_model.Ridge",
    "sklearn.tests.test_cross_validation.X",
    "sklearn.tests.test_cross_validation.X_sparse",
    "sklearn.tests.test_cross_validation.y",
    "sklearn.utils.mocking.CheckingClassifier",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_cross_validation.test_cross_val_predict_pandas": {
  "data": {
   "lineno": 1176,
   "symbols_in_volume": [
    "ImportError",
    "InputFeatureType",
    "TargetType",
    "isinstance",
    "pandas.DataFrame",
    "pandas.Series",
    "sklearn.cross_validation.cross_val_predict",
    "sklearn.tests.test_cross_validation.X",
    "sklearn.tests.test_cross_validation.y",
    "sklearn.utils.mocking.CheckingClassifier",
    "sklearn.utils.mocking.MockDataFrame"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_cross_validation.test_cross_val_predict_sparse_prediction": {
  "data": {
   "lineno": 1211,
   "symbols_in_volume": [
    "scipy.sparse.csr_matrix",
    "sklearn.cross_validation.cross_val_predict",
    "sklearn.datasets.make_multilabel_classification",
    "sklearn.multiclass.OneVsRestClassifier",
    "sklearn.svm.SVC",
    "sklearn.tests.test_cross_validation.X",
    "sklearn.tests.test_cross_validation.X_sparse",
    "sklearn.tests.test_cross_validation.y",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_cross_validation.test_cross_val_score": {
  "data": {
   "lineno": 612,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "list",
    "numpy.newaxis",
    "range",
    "sklearn.cross_validation.cross_val_score",
    "sklearn.tests.test_cross_validation.MockClassifier",
    "sklearn.tests.test_cross_validation.X",
    "sklearn.tests.test_cross_validation.X_sparse",
    "sklearn.tests.test_cross_validation.y",
    "sklearn.utils.mocking.CheckingClassifier",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_cross_validation.test_cross_val_score_allow_nans": {
  "data": {
   "lineno": 1031,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.float64",
    "numpy.nan",
    "numpy.repeat",
    "sklearn.cross_validation.cross_val_score",
    "sklearn.pipeline.Pipeline",
    "sklearn.preprocessing.Imputer",
    "sklearn.tests.test_cross_validation.MockClassifier",
    "sklearn.tests.test_cross_validation.X",
    "sklearn.tests.test_cross_validation.y"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_cross_validation.test_cross_val_score_errors": {
  "data": {
   "lineno": 751,
   "symbols_in_volume": [
    "BrokenEstimator",
    "TypeError",
    "sklearn.cross_validation.cross_val_score",
    "sklearn.tests.test_cross_validation.X",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_cross_validation.test_cross_val_score_errors.BrokenEstimator": {
  "data": {
   "lineno": 752
  },
  "type": "class"
 },
 "sklearn.tests.test_cross_validation.test_cross_val_score_fit_params": {
  "data": {
   "lineno": 708,
   "symbols_in_volume": [
    "len",
    "numpy.ones",
    "numpy.unique",
    "object",
    "sklearn.cross_validation.cross_val_score",
    "sklearn.tests.test_cross_validation.MockClassifier",
    "sklearn.tests.test_cross_validation.P_sparse",
    "sklearn.tests.test_cross_validation.W_sparse",
    "sklearn.tests.test_cross_validation.X",
    "sklearn.tests.test_cross_validation.y"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_cross_validation.test_cross_val_score_fit_params.assert_fit_params": {
  "data": {
   "lineno": 717,
   "symbols_in_volume": [
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_cross_validation.test_cross_val_score_mask": {
  "data": {
   "lineno": 668,
   "symbols_in_volume": [
    "len",
    "numpy.bool",
    "numpy.zeros",
    "sklearn.cross_validation.KFold",
    "sklearn.cross_validation.cross_val_score",
    "sklearn.datasets.load_iris",
    "sklearn.svm.SVC",
    "sklearn.tests.test_cross_validation.X",
    "sklearn.tests.test_cross_validation.y",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_cross_validation.test_cross_val_score_multilabel": {
  "data": {
   "lineno": 1086,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.cross_validation.cross_val_score",
    "sklearn.metrics.make_scorer",
    "sklearn.metrics.precision_score",
    "sklearn.neighbors.KNeighborsClassifier",
    "sklearn.tests.test_cross_validation.X",
    "sklearn.tests.test_cross_validation.y",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_cross_validation.test_cross_val_score_pandas": {
  "data": {
   "lineno": 651,
   "symbols_in_volume": [
    "ImportError",
    "InputFeatureType",
    "TargetType",
    "isinstance",
    "pandas.DataFrame",
    "pandas.Series",
    "sklearn.cross_validation.cross_val_score",
    "sklearn.tests.test_cross_validation.X",
    "sklearn.tests.test_cross_validation.y",
    "sklearn.utils.mocking.CheckingClassifier",
    "sklearn.utils.mocking.MockDataFrame"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_cross_validation.test_cross_val_score_precomputed": {
  "data": {
   "lineno": 687,
   "symbols_in_volume": [
    "ValueError",
    "numpy.dot",
    "sklearn.cross_validation.cross_val_score",
    "sklearn.datasets.load_iris",
    "sklearn.svm.SVC",
    "sklearn.tests.test_cross_validation.X",
    "sklearn.tests.test_cross_validation.y",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_cross_validation.test_cross_val_score_score_func": {
  "data": {
   "lineno": 736,
   "symbols_in_volume": [
    "len",
    "sklearn.cross_validation.cross_val_score",
    "sklearn.metrics.make_scorer",
    "sklearn.tests.test_cross_validation.MockClassifier",
    "sklearn.tests.test_cross_validation.X",
    "sklearn.tests.test_cross_validation.warnings",
    "sklearn.tests.test_cross_validation.y",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_cross_validation.test_cross_val_score_score_func.score_func": {
  "data": {
   "lineno": 740
  },
  "type": "function"
 },
 "sklearn.tests.test_cross_validation.test_cross_val_score_with_score_func_classification": {
  "data": {
   "lineno": 852,
   "symbols_in_volume": [
    "sklearn.cross_validation.cross_val_score",
    "sklearn.datasets.load_iris",
    "sklearn.svm.SVC",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_cross_validation.test_cross_val_score_with_score_func_regression": {
  "data": {
   "lineno": 873,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.cross_validation.cross_val_score",
    "sklearn.datasets.make_regression",
    "sklearn.linear_model.Ridge",
    "sklearn.metrics.explained_variance_score",
    "sklearn.metrics.make_scorer",
    "sklearn.tests.test_cross_validation.X",
    "sklearn.tests.test_cross_validation.y",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_cross_validation.test_kfold_balance": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "len",
    "numpy.max",
    "numpy.min",
    "numpy.sum",
    "range",
    "sklearn.cross_validation.KFold",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_cross_validation.test_kfold_can_detect_dependent_samples_on_digits": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": [
    "len",
    "sklearn.cross_validation.KFold",
    "sklearn.cross_validation.StratifiedKFold",
    "sklearn.cross_validation.cross_val_score",
    "sklearn.datasets.load_digits",
    "sklearn.svm.SVC",
    "sklearn.tests.test_cross_validation.X",
    "sklearn.tests.test_cross_validation.y",
    "sklearn.utils.testing.assert_greater"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_cross_validation.test_kfold_indices": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "sklearn.cross_validation.KFold",
    "sklearn.tests.test_cross_validation.check_cv_coverage"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_cross_validation.test_kfold_no_shuffle": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "iter",
    "next",
    "sklearn.cross_validation.KFold",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_cross_validation.test_kfold_valueerrors": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "ValueError",
    "Warning",
    "len",
    "sklearn.cross_validation.KFold",
    "sklearn.cross_validation.StratifiedKFold",
    "sklearn.tests.test_cross_validation.check_cv_coverage",
    "sklearn.tests.test_cross_validation.y",
    "sklearn.utils.testing.assert_raises",
    "sklearn.utils.testing.assert_warns_message"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_cross_validation.test_label_kfold": {
  "data": {
   "lineno": 362,
   "symbols_in_volume": [
    "ValueError",
    "abs",
    "len",
    "numpy.array",
    "numpy.asarray",
    "numpy.intersect1d",
    "numpy.random.RandomState",
    "numpy.unique",
    "object",
    "sklearn.cross_validation.LabelKFold",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_greater_equal",
    "sklearn.utils.testing.assert_raises",
    "sum"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_cross_validation.test_label_shuffle_split": {
  "data": {
   "lineno": 554,
   "symbols_in_volume": [
    "abs",
    "len",
    "numpy.any",
    "numpy.array",
    "numpy.in1d",
    "numpy.intersect1d",
    "numpy.unique",
    "repr",
    "round",
    "sklearn.cross_validation.LabelShuffleSplit",
    "sklearn.tests.test_cross_validation.y",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_false",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_cross_validation.test_leave_label_out_changing_labels": {
  "data": {
   "lineno": 596,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.cross_validation.LeaveOneLabelOut",
    "sklearn.cross_validation.LeavePLabelOut",
    "sklearn.externals.six.moves.zip",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_cross_validation.test_permutation_score": {
  "data": {
   "lineno": 899,
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "numpy.mod",
    "numpy.ones",
    "scipy.sparse.coo_matrix",
    "sklearn.cross_validation.StratifiedKFold",
    "sklearn.cross_validation.permutation_test_score",
    "sklearn.datasets.load_iris",
    "sklearn.metrics.make_scorer",
    "sklearn.svm.SVC",
    "sklearn.tests.test_cross_validation.X",
    "sklearn.tests.test_cross_validation.X_sparse",
    "sklearn.tests.test_cross_validation.y",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_greater",
    "sklearn.utils.testing.assert_less",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_cross_validation.test_permutation_score.custom_score": {
  "data": {
   "lineno": 929
  },
  "type": "function"
 },
 "sklearn.tests.test_cross_validation.test_permutation_test_score_allow_nans": {
  "data": {
   "lineno": 1051,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.float64",
    "numpy.nan",
    "numpy.repeat",
    "sklearn.cross_validation.permutation_test_score",
    "sklearn.pipeline.Pipeline",
    "sklearn.preprocessing.Imputer",
    "sklearn.tests.test_cross_validation.MockClassifier",
    "sklearn.tests.test_cross_validation.X",
    "sklearn.tests.test_cross_validation.y"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_cross_validation.test_predefinedsplit_with_kfold_split": {
  "data": {
   "lineno": 535,
   "symbols_in_volume": [
    "enumerate",
    "numpy.ones",
    "sklearn.cross_validation.KFold",
    "sklearn.cross_validation.PredefinedSplit",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_cross_validation.test_safe_split_with_precomputed_kernel": {
  "data": {
   "lineno": 1011,
   "symbols_in_volume": [
    "list",
    "numpy.dot",
    "sklearn.cross_validation.ShuffleSplit",
    "sklearn.cross_validation._safe_split",
    "sklearn.datasets.load_iris",
    "sklearn.svm.SVC",
    "sklearn.tests.test_cross_validation.X",
    "sklearn.tests.test_cross_validation.y",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_cross_validation.test_shuffle_kfold": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "numpy.any",
    "numpy.arange",
    "numpy.concatenate",
    "sklearn.cross_validation.KFold",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_cross_validation.test_shuffle_split": {
  "data": {
   "lineno": 427,
   "symbols_in_volume": [
    "numpy.int32",
    "sklearn.cross_validation.ShuffleSplit",
    "sklearn.externals.six.integer_types",
    "sklearn.externals.six.moves.zip",
    "sklearn.utils.testing.assert_array_equal",
    "typ"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_cross_validation.test_shuffle_stratifiedkfold": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": [
    "list",
    "set",
    "sklearn.cross_validation.StratifiedKFold",
    "sklearn.externals.six.moves.zip",
    "sklearn.tests.test_cross_validation.check_cv_coverage",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_cross_validation.test_shufflesplit_errors": {
  "data": {
   "lineno": 991,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.cross_validation.ShuffleSplit",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_cross_validation.test_shufflesplit_reproducible": {
  "data": {
   "lineno": 1004,
   "symbols_in_volume": [
    "list",
    "sklearn.cross_validation.ShuffleSplit",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_cross_validation.test_sparse_fit_params": {
  "data": {
   "lineno": 1193,
   "symbols_in_volume": [
    "numpy.eye",
    "numpy.ones",
    "scipy.sparse.coo_matrix",
    "sklearn.cross_validation.cross_val_score",
    "sklearn.datasets.load_iris",
    "sklearn.tests.test_cross_validation.MockClassifier",
    "sklearn.tests.test_cross_validation.X",
    "sklearn.tests.test_cross_validation.y",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_cross_validation.test_stratified_kfold_no_shuffle": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "iter",
    "next",
    "sklearn.cross_validation.StratifiedKFold",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_cross_validation.test_stratified_kfold_ratios": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "int",
    "len",
    "numpy.array",
    "numpy.sum",
    "sklearn.cross_validation.StratifiedKFold",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_cross_validation.test_stratified_shuffle_split_even": {
  "data": {
   "lineno": 487,
   "symbols_in_volume": [
    "assert_counts_are_ok",
    "float",
    "id",
    "len",
    "numpy.array",
    "numpy.unique",
    "set",
    "sklearn.cross_validation.StratifiedShuffleSplit",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_cross_validation.test_stratified_shuffle_split_even.assert_counts_are_ok": {
  "data": {
   "lineno": 493,
   "symbols_in_volume": [
    "scipy.stats.binom",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_cross_validation.test_stratified_shuffle_split_init": {
  "data": {
   "lineno": 442,
   "symbols_in_volume": [
    "ValueError",
    "numpy.asarray",
    "sklearn.cross_validation.StratifiedShuffleSplit",
    "sklearn.tests.test_cross_validation.y",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_cross_validation.test_stratified_shuffle_split_iter": {
  "data": {
   "lineno": 464,
   "symbols_in_volume": [
    "float",
    "len",
    "numpy.array",
    "numpy.bincount",
    "numpy.intersect1d",
    "numpy.unique",
    "sklearn.cross_validation.StratifiedShuffleSplit",
    "sklearn.tests.test_cross_validation.y",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_cross_validation.test_stratifiedkfold_balance": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "len",
    "numpy.max",
    "numpy.min",
    "numpy.sum",
    "range",
    "sklearn.cross_validation.StratifiedKFold",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_cross_validation.test_train_test_split": {
  "data": {
   "lineno": 774,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "list",
    "numpy.arange",
    "numpy.array",
    "numpy.sum",
    "scipy.sparse.coo_matrix",
    "sklearn.cross_validation.train_test_split",
    "sklearn.externals.six.moves.zip",
    "sklearn.tests.test_cross_validation.X",
    "sklearn.tests.test_cross_validation.warnings",
    "sklearn.tests.test_cross_validation.y",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_cross_validation.test_train_test_split_allow_nans": {
  "data": {
   "lineno": 1043,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.float64",
    "numpy.nan",
    "numpy.repeat",
    "sklearn.cross_validation.train_test_split",
    "sklearn.tests.test_cross_validation.X",
    "sklearn.tests.test_cross_validation.y"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_cross_validation.test_train_test_split_errors": {
  "data": {
   "lineno": 758,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "numpy.float32",
    "range",
    "sklearn.cross_validation.train_test_split",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_cross_validation.train_test_split_mock_pandas": {
  "data": {
   "lineno": 839,
   "symbols_in_volume": [
    "isinstance",
    "numpy.ndarray",
    "sklearn.cross_validation.train_test_split",
    "sklearn.tests.test_cross_validation.X",
    "sklearn.tests.test_cross_validation.warnings",
    "sklearn.utils.mocking.MockDataFrame",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_cross_validation.train_test_split_pandas": {
  "data": {
   "lineno": 823,
   "symbols_in_volume": [
    "ImportError",
    "InputFeatureType",
    "isinstance",
    "pandas.DataFrame",
    "sklearn.cross_validation.train_test_split",
    "sklearn.tests.test_cross_validation.X",
    "sklearn.utils.mocking.MockDataFrame",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_cross_validation.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.tests.test_cross_validation.y": {
  "data": {
   "lineno": 116
  },
  "type": "constant"
 },
 "sklearn.tests.test_cross_validation.zip": {
  "data": {
   "shadows": "sklearn.externals.six.moves.zip"
  },
  "type": "import"
 },
 "sklearn.tests.test_discriminant_analysis": {
  "data": {
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "numpy.c_",
    "numpy.zeros",
    "sklearn.tests.test_discriminant_analysis.sys",
    "sklearn.tests.test_discriminant_analysis.version"
   ]
  },
  "type": "module"
 },
 "sklearn.tests.test_discriminant_analysis.LinearDiscriminantAnalysis": {
  "data": {
   "shadows": "sklearn.discriminant_analysis.LinearDiscriminantAnalysis"
  },
  "type": "import"
 },
 "sklearn.tests.test_discriminant_analysis.QuadraticDiscriminantAnalysis": {
  "data": {
   "shadows": "sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis"
  },
  "type": "import"
 },
 "sklearn.tests.test_discriminant_analysis.SkipTest": {
  "data": {
   "shadows": "nose.SkipTest"
  },
  "type": "import"
 },
 "sklearn.tests.test_discriminant_analysis.X": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "sklearn.tests.test_discriminant_analysis.X1": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "sklearn.tests.test_discriminant_analysis.X2": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "sklearn.tests.test_discriminant_analysis.X5": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "sklearn.tests.test_discriminant_analysis.X6": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "sklearn.tests.test_discriminant_analysis.X7": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "sklearn.tests.test_discriminant_analysis._cov": {
  "data": {
   "shadows": "sklearn.discriminant_analysis._cov"
  },
  "type": "import"
 },
 "sklearn.tests.test_discriminant_analysis.assert_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "sklearn.tests.test_discriminant_analysis.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.tests.test_discriminant_analysis.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.tests.test_discriminant_analysis.assert_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.tests.test_discriminant_analysis.assert_greater": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_greater"
  },
  "type": "import"
 },
 "sklearn.tests.test_discriminant_analysis.assert_raise_message": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raise_message"
  },
  "type": "import"
 },
 "sklearn.tests.test_discriminant_analysis.assert_raises": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.tests.test_discriminant_analysis.assert_true": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_true"
  },
  "type": "import"
 },
 "sklearn.tests.test_discriminant_analysis.assert_warns": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_warns"
  },
  "type": "import"
 },
 "sklearn.tests.test_discriminant_analysis.ignore_warnings": {
  "data": {
   "shadows": "sklearn.utils.testing.ignore_warnings"
  },
  "type": "import"
 },
 "sklearn.tests.test_discriminant_analysis.make_blobs": {
  "data": {
   "shadows": "sklearn.datasets.make_blobs"
  },
  "type": "import"
 },
 "sklearn.tests.test_discriminant_analysis.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.tests.test_discriminant_analysis.reload": {
  "data": {
   "shadows": "importlib.reload"
  },
  "type": "import"
 },
 "sklearn.tests.test_discriminant_analysis.sklearn.lda": {
  "data": {
   "shadows": "sklearn.lda"
  },
  "type": "import"
 },
 "sklearn.tests.test_discriminant_analysis.sklearn.qda": {
  "data": {
   "shadows": "sklearn.qda"
  },
  "type": "import"
 },
 "sklearn.tests.test_discriminant_analysis.solver_shrinkage": {
  "data": {
   "lineno": 61
  },
  "type": "constant"
 },
 "sklearn.tests.test_discriminant_analysis.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "sklearn.tests.test_discriminant_analysis.test_covariance": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.dot",
    "sklearn.datasets.make_blobs",
    "sklearn.discriminant_analysis._cov",
    "sklearn.tests.test_discriminant_analysis.y",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_discriminant_analysis.test_deprecated_lda_qda_deprecation": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": [
    "DeprecationWarning",
    "importlib.reload",
    "nose.SkipTest",
    "sklearn.discriminant_analysis.LinearDiscriminantAnalysis",
    "sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis",
    "sklearn.utils.testing.assert_warns"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_discriminant_analysis.test_deprecated_lda_qda_deprecation.import_lda_module": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "importlib.reload"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_discriminant_analysis.test_deprecated_lda_qda_deprecation.import_qda_module": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "importlib.reload"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_discriminant_analysis.test_lda_coefs": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "sklearn.datasets.make_blobs",
    "sklearn.discriminant_analysis.LinearDiscriminantAnalysis",
    "sklearn.tests.test_discriminant_analysis.X",
    "sklearn.tests.test_discriminant_analysis.y",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_discriminant_analysis.test_lda_explained_variance_ratio": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "sklearn.datasets.make_blobs",
    "sklearn.discriminant_analysis.LinearDiscriminantAnalysis",
    "sklearn.tests.test_discriminant_analysis.X",
    "sklearn.tests.test_discriminant_analysis.y",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_discriminant_analysis.test_lda_orthogonality": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.arange",
    "numpy.array",
    "numpy.cov",
    "numpy.dot",
    "numpy.eye",
    "numpy.newaxis.reshape",
    "numpy.repeat",
    "numpy.sqrt",
    "numpy.sum",
    "sklearn.discriminant_analysis.LinearDiscriminantAnalysis",
    "sklearn.tests.test_discriminant_analysis.X",
    "sklearn.tests.test_discriminant_analysis.y",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_discriminant_analysis.test_lda_predict": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "NotImplementedError",
    "ValueError",
    "numpy.any",
    "numpy.exp",
    "sklearn.discriminant_analysis.LinearDiscriminantAnalysis",
    "sklearn.tests.test_discriminant_analysis.X",
    "sklearn.tests.test_discriminant_analysis.X1",
    "sklearn.tests.test_discriminant_analysis.solver_shrinkage",
    "sklearn.tests.test_discriminant_analysis.y",
    "sklearn.tests.test_discriminant_analysis.y3",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_raises",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_discriminant_analysis.test_lda_priors": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "UserWarning",
    "ValueError",
    "numpy.array",
    "sklearn.discriminant_analysis.LinearDiscriminantAnalysis",
    "sklearn.tests.test_discriminant_analysis.X",
    "sklearn.tests.test_discriminant_analysis.y",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_raise_message",
    "sklearn.utils.testing.assert_warns"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_discriminant_analysis.test_lda_scaling": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "numpy.vstack",
    "sklearn.discriminant_analysis.LinearDiscriminantAnalysis",
    "sklearn.tests.test_discriminant_analysis.y",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_discriminant_analysis.test_lda_transform": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "NotImplementedError",
    "sklearn.discriminant_analysis.LinearDiscriminantAnalysis",
    "sklearn.tests.test_discriminant_analysis.X",
    "sklearn.tests.test_discriminant_analysis.y",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_discriminant_analysis.test_qda": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "ValueError",
    "numpy.any",
    "numpy.exp",
    "sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis",
    "sklearn.tests.test_discriminant_analysis.X6",
    "sklearn.tests.test_discriminant_analysis.X7",
    "sklearn.tests.test_discriminant_analysis.y4",
    "sklearn.tests.test_discriminant_analysis.y6",
    "sklearn.tests.test_discriminant_analysis.y7",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_raises",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_discriminant_analysis.test_qda_priors": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.sum",
    "sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis",
    "sklearn.tests.test_discriminant_analysis.X6",
    "sklearn.tests.test_discriminant_analysis.y6",
    "sklearn.utils.testing.assert_greater"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_discriminant_analysis.test_qda_regularization": {
  "data": {
   "lineno": 284,
   "symbols_in_volume": [
    "numpy.any",
    "sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis",
    "sklearn.tests.test_discriminant_analysis.X2",
    "sklearn.tests.test_discriminant_analysis.X5",
    "sklearn.tests.test_discriminant_analysis.y5",
    "sklearn.tests.test_discriminant_analysis.y6",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_true",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_discriminant_analysis.test_qda_store_covariances": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "hasattr",
    "numpy.array",
    "sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis",
    "sklearn.tests.test_discriminant_analysis.X6",
    "sklearn.tests.test_discriminant_analysis.y6",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_discriminant_analysis.version": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "sklearn.tests.test_discriminant_analysis.y": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "sklearn.tests.test_discriminant_analysis.y3": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "sklearn.tests.test_discriminant_analysis.y4": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "sklearn.tests.test_discriminant_analysis.y5": {
  "data": {
   "lineno": 59
  },
  "type": "constant"
 },
 "sklearn.tests.test_discriminant_analysis.y6": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "sklearn.tests.test_discriminant_analysis.y7": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "sklearn.tests.test_dummy": {
  "data": {},
  "type": "module"
 },
 "sklearn.tests.test_dummy.DummyClassifier": {
  "data": {
   "shadows": "sklearn.dummy.DummyClassifier"
  },
  "type": "import"
 },
 "sklearn.tests.test_dummy.DummyRegressor": {
  "data": {
   "shadows": "sklearn.dummy.DummyRegressor"
  },
  "type": "import"
 },
 "sklearn.tests.test_dummy._check_behavior_2d": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.base.clone",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_dummy._check_behavior_2d_for_constant": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.base.clone",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_dummy._check_equality_regressor": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "numpy.tile",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_dummy._check_predict_proba": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "len",
    "numpy.atleast_1d",
    "numpy.log",
    "numpy.ones",
    "numpy.reshape",
    "numpy.unique",
    "range",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_dummy._weighted_percentile": {
  "data": {
   "shadows": "sklearn.utils.stats._weighted_percentile"
  },
  "type": "import"
 },
 "sklearn.tests.test_dummy.assert_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "sklearn.tests.test_dummy.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.tests.test_dummy.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.tests.test_dummy.assert_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.tests.test_dummy.assert_raises": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.tests.test_dummy.assert_true": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_true"
  },
  "type": "import"
 },
 "sklearn.tests.test_dummy.assert_warns_message": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_warns_message"
  },
  "type": "import"
 },
 "sklearn.tests.test_dummy.clone": {
  "data": {
   "shadows": "sklearn.base.clone"
  },
  "type": "import"
 },
 "sklearn.tests.test_dummy.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sklearn.tests.test_dummy.ignore_warnings": {
  "data": {
   "shadows": "sklearn.utils.testing.ignore_warnings"
  },
  "type": "import"
 },
 "sklearn.tests.test_dummy.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.tests.test_dummy.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.tests.test_dummy.test_classification_sample_weight": {
  "data": {
   "lineno": 492,
   "symbols_in_volume": [
    "sklearn.dummy.DummyClassifier",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_dummy.test_classifier_exceptions": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.dummy.DummyClassifier",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_dummy.test_constant_size_multioutput_regressor": {
  "data": {
   "lineno": 438,
   "symbols_in_volume": [
    "ValueError",
    "numpy.random.RandomState",
    "sklearn.dummy.DummyRegressor",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_dummy.test_constant_strategy": {
  "data": {
   "lineno": 447,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "numpy.ones",
    "sklearn.dummy.DummyClassifier",
    "sklearn.tests.test_dummy._check_predict_proba",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_dummy.test_constant_strategy_exceptions": {
  "data": {
   "lineno": 482,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.dummy.DummyClassifier",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_dummy.test_constant_strategy_multioutput": {
  "data": {
   "lineno": 464,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "numpy.hstack",
    "numpy.ones",
    "numpy.zeros",
    "sklearn.dummy.DummyClassifier",
    "sklearn.tests.test_dummy._check_predict_proba",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_dummy.test_constant_strategy_multioutput_regressor": {
  "data": {
   "lineno": 388,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.dummy.DummyRegressor",
    "sklearn.tests.test_dummy._check_behavior_2d_for_constant",
    "sklearn.tests.test_dummy._check_equality_regressor"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_dummy.test_constant_strategy_regressor": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": [
    "len",
    "numpy.random.RandomState",
    "sklearn.dummy.DummyRegressor",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_dummy.test_constant_strategy_sparse_target": {
  "data": {
   "lineno": 501,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "numpy.hstack",
    "numpy.ones",
    "numpy.zeros",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.issparse",
    "sklearn.dummy.DummyClassifier",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_dummy.test_constants_not_specified_regressor": {
  "data": {
   "lineno": 430,
   "symbols_in_volume": [
    "TypeError",
    "sklearn.dummy.DummyRegressor",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_dummy.test_dummy_regressor_sample_weight": {
  "data": {
   "lineno": 584,
   "symbols_in_volume": [
    "numpy.average",
    "numpy.random.RandomState",
    "sklearn.dummy.DummyRegressor",
    "sklearn.utils.stats._weighted_percentile",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_dummy.test_mean_strategy_multioutput_regressor": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "numpy.mean",
    "numpy.random.RandomState",
    "sklearn.dummy.DummyRegressor",
    "sklearn.tests.test_dummy._check_behavior_2d",
    "sklearn.tests.test_dummy._check_equality_regressor"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_dummy.test_mean_strategy_regressor": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "len",
    "numpy.mean",
    "numpy.random.RandomState",
    "sklearn.dummy.DummyRegressor",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_dummy.test_median_strategy_multioutput_regressor": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "numpy.median",
    "numpy.random.RandomState",
    "sklearn.dummy.DummyRegressor",
    "sklearn.tests.test_dummy._check_behavior_2d",
    "sklearn.tests.test_dummy._check_equality_regressor"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_dummy.test_median_strategy_regressor": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "len",
    "numpy.median",
    "numpy.random.RandomState",
    "sklearn.dummy.DummyRegressor",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_dummy.test_most_frequent_and_prior_strategy": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "len",
    "numpy.ones",
    "sklearn.dummy.DummyClassifier",
    "sklearn.tests.test_dummy._check_predict_proba",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_dummy.test_most_frequent_and_prior_strategy_multioutput": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "numpy.hstack",
    "numpy.ones",
    "numpy.zeros",
    "sklearn.dummy.DummyClassifier",
    "sklearn.tests.test_dummy._check_behavior_2d",
    "sklearn.tests.test_dummy._check_predict_proba",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_dummy.test_most_frequent_and_prior_strategy_sparse_target": {
  "data": {
   "lineno": 565,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "numpy.hstack",
    "numpy.ones",
    "numpy.zeros",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.issparse",
    "sklearn.dummy.DummyClassifier",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_dummy.test_quantile_invalid": {
  "data": {
   "lineno": 343,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "sklearn.dummy.DummyRegressor",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_dummy.test_quantile_strategy_empty_train": {
  "data": {
   "lineno": 367,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.dummy.DummyRegressor",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_dummy.test_quantile_strategy_multioutput_regressor": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": [
    "numpy.median",
    "numpy.percentile",
    "numpy.random.RandomState",
    "sklearn.dummy.DummyRegressor",
    "sklearn.tests.test_dummy._check_behavior_2d",
    "sklearn.tests.test_dummy._check_equality_regressor"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_dummy.test_quantile_strategy_regressor": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "len",
    "numpy.max",
    "numpy.median",
    "numpy.min",
    "numpy.percentile",
    "numpy.random.RandomState",
    "sklearn.dummy.DummyRegressor",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_dummy.test_regressor_exceptions": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.dummy.DummyRegressor",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_dummy.test_stratified_strategy": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "float",
    "len",
    "numpy.bincount",
    "sklearn.dummy.DummyClassifier",
    "sklearn.tests.test_dummy._check_predict_proba",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_dummy.test_stratified_strategy_multioutput": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "float",
    "len",
    "numpy.array",
    "numpy.bincount",
    "range",
    "sklearn.dummy.DummyClassifier",
    "sklearn.tests.test_dummy._check_behavior_2d",
    "sklearn.tests.test_dummy._check_predict_proba",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_dummy.test_stratified_strategy_sparse_target": {
  "data": {
   "lineno": 542,
   "symbols_in_volume": [
    "float",
    "len",
    "numpy.array",
    "numpy.bincount",
    "range",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.issparse",
    "sklearn.dummy.DummyClassifier",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_dummy.test_string_labels": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "sklearn.dummy.DummyClassifier",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_dummy.test_uniform_strategy": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "float",
    "len",
    "numpy.bincount",
    "sklearn.dummy.DummyClassifier",
    "sklearn.tests.test_dummy._check_predict_proba",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_dummy.test_uniform_strategy_multioutput": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "float",
    "len",
    "numpy.array",
    "numpy.bincount",
    "range",
    "sklearn.dummy.DummyClassifier",
    "sklearn.tests.test_dummy._check_behavior_2d",
    "sklearn.tests.test_dummy._check_predict_proba",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_dummy.test_uniform_strategy_sparse_target_warning": {
  "data": {
   "lineno": 519,
   "symbols_in_volume": [
    "UserWarning",
    "float",
    "len",
    "numpy.array",
    "numpy.bincount",
    "range",
    "scipy.sparse.csc_matrix",
    "sklearn.dummy.DummyClassifier",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_warns_message"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_dummy.test_unknown_strategey_regressor": {
  "data": {
   "lineno": 422,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.dummy.DummyRegressor",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_dummy.test_y_mean_attribute_regressor": {
  "data": {
   "lineno": 412,
   "symbols_in_volume": [
    "numpy.mean",
    "sklearn.dummy.DummyRegressor",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_grid_search": {
  "data": {
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "module"
 },
 "sklearn.tests.test_grid_search.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "sklearn.tests.test_grid_search.BrokenClassifier": {
  "data": {
   "lineno": 418,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator"
   ]
  },
  "type": "class"
 },
 "sklearn.tests.test_grid_search.BrokenClassifier.__init__": {
  "data": {
   "lineno": 421
  },
  "type": "function"
 },
 "sklearn.tests.test_grid_search.BrokenClassifier.fit": {
  "data": {
   "lineno": 424,
   "symbols_in_volume": [
    "hasattr",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_grid_search.BrokenClassifier.predict": {
  "data": {
   "lineno": 428,
   "symbols_in_volume": [
    "numpy.zeros",
    "sklearn.tests.test_grid_search.X"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_grid_search.ChangedBehaviorWarning": {
  "data": {
   "shadows": "sklearn.grid_search.ChangedBehaviorWarning"
  },
  "type": "import"
 },
 "sklearn.tests.test_grid_search.CheckingClassifier": {
  "data": {
   "shadows": "sklearn.utils.mocking.CheckingClassifier"
  },
  "type": "import"
 },
 "sklearn.tests.test_grid_search.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "sklearn.tests.test_grid_search.DecisionTreeClassifier": {
  "data": {
   "shadows": "sklearn.tree.DecisionTreeClassifier"
  },
  "type": "import"
 },
 "sklearn.tests.test_grid_search.DecisionTreeRegressor": {
  "data": {
   "shadows": "sklearn.tree.DecisionTreeRegressor"
  },
  "type": "import"
 },
 "sklearn.tests.test_grid_search.FailingClassifier": {
  "data": {
   "lineno": 690,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator"
   ]
  },
  "type": "class"
 },
 "sklearn.tests.test_grid_search.FailingClassifier.__init__": {
  "data": {
   "lineno": 695
  },
  "type": "function"
 },
 "sklearn.tests.test_grid_search.FailingClassifier.fit": {
  "data": {
   "lineno": 698,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.tests.test_grid_search.FailingClassifier"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_grid_search.FailingClassifier.predict": {
  "data": {
   "lineno": 702,
   "symbols_in_volume": [
    "numpy.zeros",
    "sklearn.tests.test_grid_search.X"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_grid_search.FitFailedWarning": {
  "data": {
   "shadows": "sklearn.cross_validation.FitFailedWarning"
  },
  "type": "import"
 },
 "sklearn.tests.test_grid_search.GridSearchCV": {
  "data": {
   "shadows": "sklearn.grid_search.GridSearchCV"
  },
  "type": "import"
 },
 "sklearn.tests.test_grid_search.Imputer": {
  "data": {
   "shadows": "sklearn.preprocessing.Imputer"
  },
  "type": "import"
 },
 "sklearn.tests.test_grid_search.Iterable": {
  "data": {
   "shadows": "collections.Iterable"
  },
  "type": "import"
 },
 "sklearn.tests.test_grid_search.KFold": {
  "data": {
   "shadows": "sklearn.cross_validation.KFold"
  },
  "type": "import"
 },
 "sklearn.tests.test_grid_search.KMeans": {
  "data": {
   "shadows": "sklearn.cluster.KMeans"
  },
  "type": "import"
 },
 "sklearn.tests.test_grid_search.KernelDensity": {
  "data": {
   "shadows": "sklearn.neighbors.KernelDensity"
  },
  "type": "import"
 },
 "sklearn.tests.test_grid_search.LinearSVC": {
  "data": {
   "shadows": "sklearn.svm.LinearSVC"
  },
  "type": "import"
 },
 "sklearn.tests.test_grid_search.LinearSVCNoScore": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "sklearn.svm.LinearSVC"
   ]
  },
  "type": "class"
 },
 "sklearn.tests.test_grid_search.LinearSVCNoScore.score": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "AttributeError",
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_grid_search.MockClassifier": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "sklearn.tests.test_grid_search.MockClassifier.__init__": {
  "data": {
   "lineno": 56
  },
  "type": "function"
 },
 "sklearn.tests.test_grid_search.MockClassifier.fit": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "len",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_grid_search.MockClassifier.get_params": {
  "data": {
   "lineno": 77
  },
  "type": "function"
 },
 "sklearn.tests.test_grid_search.MockClassifier.predict": {
  "data": {
   "lineno": 63
  },
  "type": "function"
 },
 "sklearn.tests.test_grid_search.MockClassifier.score": {
  "data": {
   "lineno": 70
  },
  "type": "function"
 },
 "sklearn.tests.test_grid_search.MockClassifier.set_params": {
  "data": {
   "lineno": 80
  },
  "type": "function"
 },
 "sklearn.tests.test_grid_search.MockDataFrame": {
  "data": {
   "shadows": "sklearn.utils.mocking.MockDataFrame"
  },
  "type": "import"
 },
 "sklearn.tests.test_grid_search.ParameterGrid": {
  "data": {
   "shadows": "sklearn.grid_search.ParameterGrid"
  },
  "type": "import"
 },
 "sklearn.tests.test_grid_search.ParameterSampler": {
  "data": {
   "shadows": "sklearn.grid_search.ParameterSampler"
  },
  "type": "import"
 },
 "sklearn.tests.test_grid_search.Pipeline": {
  "data": {
   "shadows": "sklearn.pipeline.Pipeline"
  },
  "type": "import"
 },
 "sklearn.tests.test_grid_search.RandomizedSearchCV": {
  "data": {
   "shadows": "sklearn.grid_search.RandomizedSearchCV"
  },
  "type": "import"
 },
 "sklearn.tests.test_grid_search.SVC": {
  "data": {
   "shadows": "sklearn.svm.SVC"
  },
  "type": "import"
 },
 "sklearn.tests.test_grid_search.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "sklearn.tests.test_grid_search.Sized": {
  "data": {
   "shadows": "collections.Sized"
  },
  "type": "import"
 },
 "sklearn.tests.test_grid_search.StratifiedKFold": {
  "data": {
   "shadows": "sklearn.cross_validation.StratifiedKFold"
  },
  "type": "import"
 },
 "sklearn.tests.test_grid_search.StringIO": {
  "data": {
   "shadows": "sklearn.externals.six.moves.cStringIO"
  },
  "type": "import"
 },
 "sklearn.tests.test_grid_search.X": {
  "data": {
   "lineno": 91
  },
  "type": "constant"
 },
 "sklearn.tests.test_grid_search.assert_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "sklearn.tests.test_grid_search.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.tests.test_grid_search.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.tests.test_grid_search.assert_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.tests.test_grid_search.assert_false": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_false"
  },
  "type": "import"
 },
 "sklearn.tests.test_grid_search.assert_grid_iter_equals_getitem": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "len",
    "list",
    "range",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_grid_search.assert_no_warnings": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_no_warnings"
  },
  "type": "import"
 },
 "sklearn.tests.test_grid_search.assert_not_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_not_equal"
  },
  "type": "import"
 },
 "sklearn.tests.test_grid_search.assert_raise_message": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raise_message"
  },
  "type": "import"
 },
 "sklearn.tests.test_grid_search.assert_raises": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.tests.test_grid_search.assert_true": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_true"
  },
  "type": "import"
 },
 "sklearn.tests.test_grid_search.assert_warns": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_warns"
  },
  "type": "import"
 },
 "sklearn.tests.test_grid_search.bernoulli": {
  "data": {
   "shadows": "scipy.stats.bernoulli"
  },
  "type": "import"
 },
 "sklearn.tests.test_grid_search.chain": {
  "data": {
   "shadows": "itertools.chain"
  },
  "type": "import"
 },
 "sklearn.tests.test_grid_search.expon": {
  "data": {
   "shadows": "scipy.stats.expon"
  },
  "type": "import"
 },
 "sklearn.tests.test_grid_search.f1_score": {
  "data": {
   "shadows": "sklearn.metrics.f1_score"
  },
  "type": "import"
 },
 "sklearn.tests.test_grid_search.ignore_warnings": {
  "data": {
   "shadows": "sklearn.utils.testing.ignore_warnings"
  },
  "type": "import"
 },
 "sklearn.tests.test_grid_search.make_blobs": {
  "data": {
   "shadows": "sklearn.datasets.make_blobs"
  },
  "type": "import"
 },
 "sklearn.tests.test_grid_search.make_classification": {
  "data": {
   "shadows": "sklearn.datasets.make_classification"
  },
  "type": "import"
 },
 "sklearn.tests.test_grid_search.make_multilabel_classification": {
  "data": {
   "shadows": "sklearn.datasets.make_multilabel_classification"
  },
  "type": "import"
 },
 "sklearn.tests.test_grid_search.make_scorer": {
  "data": {
   "shadows": "sklearn.metrics.make_scorer"
  },
  "type": "import"
 },
 "sklearn.tests.test_grid_search.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.tests.test_grid_search.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "sklearn.tests.test_grid_search.product": {
  "data": {
   "shadows": "itertools.product"
  },
  "type": "import"
 },
 "sklearn.tests.test_grid_search.roc_auc_score": {
  "data": {
   "shadows": "sklearn.metrics.roc_auc_score"
  },
  "type": "import"
 },
 "sklearn.tests.test_grid_search.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.tests.test_grid_search.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "sklearn.tests.test_grid_search.test_X_as_list": {
  "data": {
   "lineno": 457,
   "symbols_in_volume": [
    "hasattr",
    "isinstance",
    "len",
    "list",
    "numpy.arange",
    "numpy.array",
    "sklearn.cross_validation.KFold",
    "sklearn.grid_search.GridSearchCV",
    "sklearn.tests.test_grid_search.X",
    "sklearn.tests.test_grid_search.y",
    "sklearn.utils.mocking.CheckingClassifier",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_grid_search.test_grid_search": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "ValueError",
    "enumerate",
    "sklearn.externals.six.moves.cStringIO",
    "sklearn.grid_search.GridSearchCV",
    "sklearn.tests.test_grid_search.MockClassifier",
    "sklearn.tests.test_grid_search.X",
    "sklearn.tests.test_grid_search.sys",
    "sklearn.tests.test_grid_search.y",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_raises",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_grid_search.test_grid_search_allows_nans": {
  "data": {
   "lineno": 678,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.float64",
    "numpy.nan",
    "sklearn.grid_search.GridSearchCV",
    "sklearn.pipeline.Pipeline",
    "sklearn.preprocessing.Imputer",
    "sklearn.tests.test_grid_search.MockClassifier",
    "sklearn.tests.test_grid_search.X",
    "sklearn.tests.test_grid_search.y"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_grid_search.test_grid_search_bad_param_grid": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "ValueError",
    "numpy.ones",
    "sklearn.grid_search.GridSearchCV",
    "sklearn.svm.SVC",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_grid_search.test_grid_search_error": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.datasets.make_classification",
    "sklearn.grid_search.GridSearchCV",
    "sklearn.svm.LinearSVC",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_grid_search.test_grid_search_failing_classifier": {
  "data": {
   "lineno": 706,
   "symbols_in_volume": [
    "all",
    "float",
    "numpy.all",
    "numpy.isnan",
    "sklearn.cross_validation.FitFailedWarning",
    "sklearn.datasets.make_classification",
    "sklearn.grid_search.GridSearchCV",
    "sklearn.tests.test_grid_search.FailingClassifier",
    "sklearn.tests.test_grid_search.X",
    "sklearn.tests.test_grid_search.y",
    "sklearn.utils.testing.assert_warns"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_grid_search.test_grid_search_failing_classifier_raise": {
  "data": {
   "lineno": 740,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.datasets.make_classification",
    "sklearn.grid_search.GridSearchCV",
    "sklearn.tests.test_grid_search.FailingClassifier",
    "sklearn.tests.test_grid_search.X",
    "sklearn.tests.test_grid_search.y",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_grid_search.test_grid_search_iid": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "numpy.bool",
    "numpy.mean",
    "numpy.ones",
    "numpy.where",
    "sklearn.datasets.make_blobs",
    "sklearn.grid_search.GridSearchCV",
    "sklearn.svm.SVC",
    "sklearn.tests.test_grid_search.X",
    "sklearn.tests.test_grid_search.y",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_grid_search.test_grid_search_no_score": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "TypeError",
    "sklearn.datasets.make_blobs",
    "sklearn.grid_search.GridSearchCV",
    "sklearn.svm.LinearSVC",
    "sklearn.tests.test_grid_search.LinearSVCNoScore",
    "sklearn.tests.test_grid_search.X",
    "sklearn.tests.test_grid_search.y",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_raise_message",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_grid_search.test_grid_search_one_grid_point": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "sklearn.datasets.make_classification",
    "sklearn.grid_search.GridSearchCV",
    "sklearn.svm.SVC",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_grid_search.test_grid_search_precomputed_kernel": {
  "data": {
   "lineno": 371,
   "symbols_in_volume": [
    "ValueError",
    "numpy.dot",
    "numpy.mean",
    "sklearn.datasets.make_classification",
    "sklearn.grid_search.GridSearchCV",
    "sklearn.svm.SVC",
    "sklearn.utils.testing.assert_raises",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_grid_search.test_grid_search_precomputed_kernel_error_kernel_function": {
  "data": {
   "lineno": 409,
   "symbols_in_volume": [
    "ValueError",
    "numpy.dot",
    "sklearn.datasets.make_classification",
    "sklearn.grid_search.GridSearchCV",
    "sklearn.svm.SVC",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_grid_search.test_grid_search_precomputed_kernel_error_nonsquare": {
  "data": {
   "lineno": 399,
   "symbols_in_volume": [
    "ValueError",
    "numpy.ones",
    "numpy.zeros",
    "sklearn.grid_search.GridSearchCV",
    "sklearn.svm.SVC",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_grid_search.test_grid_search_score_consistency": {
  "data": {
   "lineno": 593,
   "symbols_in_volume": [
    "sklearn.cross_validation.StratifiedKFold",
    "sklearn.datasets.make_blobs",
    "sklearn.externals.six.moves.zip",
    "sklearn.grid_search.GridSearchCV",
    "sklearn.metrics.f1_score",
    "sklearn.metrics.roc_auc_score",
    "sklearn.svm.LinearSVC",
    "sklearn.tests.test_grid_search.X",
    "sklearn.tests.test_grid_search.y",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_grid_search.test_grid_search_score_method": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "sklearn.datasets.make_classification",
    "sklearn.grid_search.ChangedBehaviorWarning",
    "sklearn.grid_search.GridSearchCV",
    "sklearn.svm.LinearSVC",
    "sklearn.tests.test_grid_search.LinearSVCNoScore",
    "sklearn.tests.test_grid_search.X",
    "sklearn.tests.test_grid_search.y",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_no_warnings",
    "sklearn.utils.testing.assert_not_equal",
    "sklearn.utils.testing.assert_true",
    "sklearn.utils.testing.assert_warns"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_grid_search.test_grid_search_sparse": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": [
    "numpy.mean",
    "scipy.sparse.csr_matrix",
    "sklearn.datasets.make_classification",
    "sklearn.grid_search.GridSearchCV",
    "sklearn.svm.LinearSVC",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_grid_search.test_grid_search_sparse_scoring": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": [
    "scipy.sparse.csr_matrix",
    "sklearn.datasets.make_classification",
    "sklearn.grid_search.GridSearchCV",
    "sklearn.metrics.make_scorer",
    "sklearn.svm.LinearSVC",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_grid_search.test_grid_search_sparse_scoring.f1_loss": {
  "data": {
   "lineno": 359,
   "symbols_in_volume": [
    "sklearn.metrics.f1_score"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_grid_search.test_grid_search_with_multioutput_data": {
  "data": {
   "lineno": 630,
   "symbols_in_volume": [
    "enumerate",
    "sklearn.cross_validation.KFold",
    "sklearn.datasets.make_multilabel_classification",
    "sklearn.grid_search.GridSearchCV",
    "sklearn.grid_search.RandomizedSearchCV",
    "sklearn.tests.test_grid_search.X",
    "sklearn.tests.test_grid_search.y",
    "sklearn.tree.DecisionTreeClassifier",
    "sklearn.tree.DecisionTreeRegressor",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_grid_search.test_gridsearch_nd": {
  "data": {
   "lineno": 445,
   "symbols_in_volume": [
    "hasattr",
    "numpy.arange",
    "sklearn.grid_search.GridSearchCV",
    "sklearn.tests.test_grid_search.X",
    "sklearn.tests.test_grid_search.y",
    "sklearn.utils.mocking.CheckingClassifier",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_grid_search.test_gridsearch_no_predict": {
  "data": {
   "lineno": 522,
   "symbols_in_volume": [
    "dict",
    "sklearn.datasets.make_blobs",
    "sklearn.grid_search.GridSearchCV",
    "sklearn.neighbors.KernelDensity",
    "sklearn.tests.test_grid_search.X",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_grid_search.test_gridsearch_no_predict.custom_scoring": {
  "data": {
   "lineno": 525
  },
  "type": "function"
 },
 "sklearn.tests.test_grid_search.test_no_refit": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "hasattr",
    "sklearn.grid_search.GridSearchCV",
    "sklearn.tests.test_grid_search.MockClassifier",
    "sklearn.tests.test_grid_search.X",
    "sklearn.tests.test_grid_search.y",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_grid_search.test_pandas_input": {
  "data": {
   "lineno": 481,
   "symbols_in_volume": [
    "ImportError",
    "InputFeatureType",
    "TargetType",
    "hasattr",
    "isinstance",
    "numpy.arange",
    "numpy.array",
    "pandas.DataFrame",
    "pandas.Series",
    "sklearn.grid_search.GridSearchCV",
    "sklearn.tests.test_grid_search.X",
    "sklearn.tests.test_grid_search.y",
    "sklearn.utils.mocking.CheckingClassifier",
    "sklearn.utils.mocking.MockDataFrame",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_grid_search.test_param_sampler": {
  "data": {
   "lineno": 537,
   "symbols_in_volume": [
    "len",
    "scipy.stats.uniform",
    "sklearn.grid_search.ParameterSampler",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_grid_search.test_parameter_grid": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "IndexError",
    "collections.Iterable",
    "collections.Sized",
    "isinstance",
    "itertools.chain",
    "itertools.product",
    "len",
    "list",
    "set",
    "sklearn.externals.six.moves.xrange",
    "sklearn.grid_search.ParameterGrid",
    "sklearn.tests.test_grid_search.assert_grid_iter_equals_getitem",
    "sklearn.tests.test_grid_search.y",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_raises",
    "sklearn.utils.testing.assert_true",
    "sorted",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_grid_search.test_parameters_sampler_replacement": {
  "data": {
   "lineno": 755,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "list",
    "range",
    "scipy.stats.bernoulli",
    "set",
    "sklearn.grid_search.ParameterGrid",
    "sklearn.grid_search.ParameterSampler",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_raises",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_grid_search.test_pickle": {
  "data": {
   "lineno": 617,
   "symbols_in_volume": [
    "sklearn.grid_search.GridSearchCV",
    "sklearn.grid_search.RandomizedSearchCV",
    "sklearn.tests.test_grid_search.MockClassifier",
    "sklearn.tests.test_grid_search.X",
    "sklearn.tests.test_grid_search.pickle",
    "sklearn.tests.test_grid_search.y"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_grid_search.test_predict_proba_disabled": {
  "data": {
   "lineno": 669,
   "symbols_in_volume": [
    "hasattr",
    "numpy.arange",
    "sklearn.grid_search.GridSearchCV",
    "sklearn.svm.SVC",
    "sklearn.tests.test_grid_search.X",
    "sklearn.tests.test_grid_search.y",
    "sklearn.utils.testing.assert_false"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_grid_search.test_randomized_search_grid_scores": {
  "data": {
   "lineno": 550,
   "symbols_in_volume": [
    "dict",
    "len",
    "list",
    "numpy.mean",
    "scipy.stats.expon",
    "sklearn.datasets.make_classification",
    "sklearn.grid_search.RandomizedSearchCV",
    "sklearn.svm.SVC",
    "sklearn.tests.test_grid_search.X",
    "sklearn.tests.test_grid_search.y",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_true",
    "sorted"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_grid_search.test_refit": {
  "data": {
   "lineno": 432,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "sklearn.grid_search.GridSearchCV",
    "sklearn.tests.test_grid_search.BrokenClassifier",
    "sklearn.tests.test_grid_search.X",
    "sklearn.tests.test_grid_search.y",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_grid_search.test_trivial_grid_scores": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "hasattr",
    "sklearn.grid_search.GridSearchCV",
    "sklearn.grid_search.RandomizedSearchCV",
    "sklearn.tests.test_grid_search.MockClassifier",
    "sklearn.tests.test_grid_search.X",
    "sklearn.tests.test_grid_search.y",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_grid_search.test_unsupervised_grid_search": {
  "data": {
   "lineno": 506,
   "symbols_in_volume": [
    "dict",
    "sklearn.cluster.KMeans",
    "sklearn.datasets.make_blobs",
    "sklearn.grid_search.GridSearchCV",
    "sklearn.tests.test_grid_search.X",
    "sklearn.tests.test_grid_search.y",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_grid_search.test_y_as_list": {
  "data": {
   "lineno": 469,
   "symbols_in_volume": [
    "hasattr",
    "isinstance",
    "len",
    "list",
    "numpy.arange",
    "numpy.array",
    "sklearn.cross_validation.KFold",
    "sklearn.grid_search.GridSearchCV",
    "sklearn.tests.test_grid_search.X",
    "sklearn.tests.test_grid_search.y",
    "sklearn.utils.mocking.CheckingClassifier",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_grid_search.uniform": {
  "data": {
   "shadows": "scipy.stats.uniform"
  },
  "type": "import"
 },
 "sklearn.tests.test_grid_search.xrange": {
  "data": {
   "shadows": "sklearn.externals.six.moves.xrange"
  },
  "type": "import"
 },
 "sklearn.tests.test_grid_search.y": {
  "data": {
   "lineno": 92
  },
  "type": "constant"
 },
 "sklearn.tests.test_grid_search.zip": {
  "data": {
   "shadows": "sklearn.externals.six.moves.zip"
  },
  "type": "import"
 },
 "sklearn.tests.test_init": {
  "data": {
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "module"
 },
 "sklearn.tests.test_init.__author__": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "sklearn.tests.test_init.__license__": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "sklearn.tests.test_init._top_import_error": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "sklearn.tests.test_init.assert_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.tests.test_init.test_import_skl": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "sklearn.tests.test_init._top_import_error",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_isotonic": {
  "data": {},
  "type": "module"
 },
 "sklearn.tests.test_isotonic.IsotonicRegression": {
  "data": {
   "shadows": "sklearn.isotonic.IsotonicRegression"
  },
  "type": "import"
 },
 "sklearn.tests.test_isotonic.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.tests.test_isotonic.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.tests.test_isotonic.assert_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.tests.test_isotonic.assert_false": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_false"
  },
  "type": "import"
 },
 "sklearn.tests.test_isotonic.assert_no_warnings": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_no_warnings"
  },
  "type": "import"
 },
 "sklearn.tests.test_isotonic.assert_raises": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.tests.test_isotonic.assert_true": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_true"
  },
  "type": "import"
 },
 "sklearn.tests.test_isotonic.assert_warns_message": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_warns_message"
  },
  "type": "import"
 },
 "sklearn.tests.test_isotonic.check_increasing": {
  "data": {
   "shadows": "sklearn.isotonic.check_increasing"
  },
  "type": "import"
 },
 "sklearn.tests.test_isotonic.isotonic_regression": {
  "data": {
   "shadows": "sklearn.isotonic.isotonic_regression"
  },
  "type": "import"
 },
 "sklearn.tests.test_isotonic.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.tests.test_isotonic.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "sklearn.tests.test_isotonic.shuffle": {
  "data": {
   "shadows": "sklearn.utils.shuffle"
  },
  "type": "import"
 },
 "sklearn.tests.test_isotonic.test_assert_raises_exceptions": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "ValueError",
    "numpy.random.RandomState",
    "sklearn.isotonic.IsotonicRegression",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_isotonic.test_check_ci_warn": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "UserWarning",
    "sklearn.isotonic.check_increasing",
    "sklearn.utils.testing.assert_false",
    "sklearn.utils.testing.assert_warns_message"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_isotonic.test_check_increasing_down": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "sklearn.isotonic.check_increasing",
    "sklearn.utils.testing.assert_false",
    "sklearn.utils.testing.assert_no_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_isotonic.test_check_increasing_down_extreme": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "sklearn.isotonic.check_increasing",
    "sklearn.utils.testing.assert_false",
    "sklearn.utils.testing.assert_no_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_isotonic.test_check_increasing_up": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "sklearn.isotonic.check_increasing",
    "sklearn.utils.testing.assert_no_warnings",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_isotonic.test_check_increasing_up_extreme": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "sklearn.isotonic.check_increasing",
    "sklearn.utils.testing.assert_no_warnings",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_isotonic.test_isotonic_duplicate_min_entry": {
  "data": {
   "lineno": 319,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.isfinite",
    "sklearn.isotonic.IsotonicRegression",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_isotonic.test_isotonic_min_max_boundaries": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.round",
    "sklearn.isotonic.IsotonicRegression",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_isotonic.test_isotonic_regression": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "numpy.array",
    "numpy.mean",
    "numpy.ones",
    "numpy.random.permutation",
    "sklearn.isotonic.IsotonicRegression",
    "sklearn.isotonic.isotonic_regression",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_isotonic.test_isotonic_regression_auto_decreasing": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "numpy.array",
    "sklearn.isotonic.IsotonicRegression",
    "sklearn.utils.testing.assert_false",
    "sklearn.utils.testing.assert_no_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_isotonic.test_isotonic_regression_auto_increasing": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "numpy.array",
    "sklearn.isotonic.IsotonicRegression",
    "sklearn.utils.testing.assert_no_warnings",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_isotonic.test_isotonic_regression_oob_bad": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.arange",
    "numpy.array",
    "sklearn.isotonic.IsotonicRegression",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_isotonic.test_isotonic_regression_oob_bad_after": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.arange",
    "numpy.array",
    "sklearn.isotonic.IsotonicRegression",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_isotonic.test_isotonic_regression_oob_clip": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "len",
    "max",
    "min",
    "numpy.arange",
    "numpy.array",
    "sklearn.isotonic.IsotonicRegression",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_isotonic.test_isotonic_regression_oob_nan": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "len",
    "max",
    "min",
    "numpy.arange",
    "numpy.array",
    "numpy.isnan",
    "sklearn.isotonic.IsotonicRegression",
    "sklearn.utils.testing.assert_equal",
    "sum"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_isotonic.test_isotonic_regression_oob_raise": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "max",
    "min",
    "numpy.arange",
    "numpy.array",
    "sklearn.isotonic.IsotonicRegression",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_isotonic.test_isotonic_regression_pickle": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "numpy.array",
    "numpy.testing.assert_array_equal",
    "sklearn.isotonic.IsotonicRegression",
    "sklearn.tests.test_isotonic.pickle"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_isotonic.test_isotonic_regression_reversed": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "numpy.array",
    "numpy.ones",
    "sklearn.isotonic.IsotonicRegression",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_isotonic.test_isotonic_regression_ties_max": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "sklearn.isotonic.IsotonicRegression",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_isotonic.test_isotonic_regression_ties_min": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "sklearn.isotonic.IsotonicRegression",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_isotonic.test_isotonic_regression_ties_secondary_": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "sklearn.isotonic.IsotonicRegression",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_isotonic.test_isotonic_sample_weight": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "sklearn.isotonic.IsotonicRegression",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_isotonic.test_isotonic_sample_weight_parameter_default_value": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.log",
    "numpy.ones",
    "numpy.random.RandomState",
    "sklearn.isotonic.IsotonicRegression",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_isotonic.test_isotonic_zero_weight_loop": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": [
    "numpy.linspace",
    "numpy.random.RandomState",
    "sklearn.isotonic.IsotonicRegression"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_isotonic.test_permutation_invariance": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "sklearn.isotonic.IsotonicRegression",
    "sklearn.utils.shuffle",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_kernel_approximation": {
  "data": {
   "symbols_in_volume": [
    "numpy.newaxis",
    "numpy.random.RandomState",
    "sklearn.tests.test_kernel_approximation.X",
    "sklearn.tests.test_kernel_approximation.Y",
    "sklearn.tests.test_kernel_approximation.rng"
   ]
  },
  "type": "module"
 },
 "sklearn.tests.test_kernel_approximation.AdditiveChi2Sampler": {
  "data": {
   "shadows": "sklearn.kernel_approximation.AdditiveChi2Sampler"
  },
  "type": "import"
 },
 "sklearn.tests.test_kernel_approximation.Nystroem": {
  "data": {
   "shadows": "sklearn.kernel_approximation.Nystroem"
  },
  "type": "import"
 },
 "sklearn.tests.test_kernel_approximation.RBFSampler": {
  "data": {
   "shadows": "sklearn.kernel_approximation.RBFSampler"
  },
  "type": "import"
 },
 "sklearn.tests.test_kernel_approximation.SkewedChi2Sampler": {
  "data": {
   "shadows": "sklearn.kernel_approximation.SkewedChi2Sampler"
  },
  "type": "import"
 },
 "sklearn.tests.test_kernel_approximation.X": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "sklearn.tests.test_kernel_approximation.Y": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "sklearn.tests.test_kernel_approximation.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.tests.test_kernel_approximation.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.tests.test_kernel_approximation.assert_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.tests.test_kernel_approximation.assert_less_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_less_equal"
  },
  "type": "import"
 },
 "sklearn.tests.test_kernel_approximation.assert_not_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_not_equal"
  },
  "type": "import"
 },
 "sklearn.tests.test_kernel_approximation.assert_raises": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.tests.test_kernel_approximation.assert_true": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_true"
  },
  "type": "import"
 },
 "sklearn.tests.test_kernel_approximation.csr_matrix": {
  "data": {
   "shadows": "scipy.sparse.csr_matrix"
  },
  "type": "import"
 },
 "sklearn.tests.test_kernel_approximation.kernel_metrics": {
  "data": {
   "shadows": "sklearn.metrics.pairwise.kernel_metrics"
  },
  "type": "import"
 },
 "sklearn.tests.test_kernel_approximation.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.tests.test_kernel_approximation.polynomial_kernel": {
  "data": {
   "shadows": "sklearn.metrics.pairwise.polynomial_kernel"
  },
  "type": "import"
 },
 "sklearn.tests.test_kernel_approximation.rbf_kernel": {
  "data": {
   "shadows": "sklearn.metrics.pairwise.rbf_kernel"
  },
  "type": "import"
 },
 "sklearn.tests.test_kernel_approximation.rng": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "sklearn.tests.test_kernel_approximation.test_additive_chi2_sampler": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "ValueError",
    "numpy.dot",
    "numpy.newaxis",
    "scipy.sparse.csr_matrix",
    "sklearn.kernel_approximation.AdditiveChi2Sampler",
    "sklearn.tests.test_kernel_approximation.X",
    "sklearn.tests.test_kernel_approximation.Y",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_not_equal",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_kernel_approximation.test_input_validation": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "scipy.sparse.csr_matrix",
    "sklearn.kernel_approximation.AdditiveChi2Sampler",
    "sklearn.kernel_approximation.RBFSampler",
    "sklearn.kernel_approximation.SkewedChi2Sampler",
    "sklearn.tests.test_kernel_approximation.X"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_kernel_approximation.test_nystroem_approximation": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.random.RandomState",
    "sklearn.kernel_approximation.Nystroem",
    "sklearn.metrics.pairwise.kernel_metrics",
    "sklearn.metrics.pairwise.rbf_kernel",
    "sklearn.tests.test_kernel_approximation.X",
    "sklearn.tests.test_kernel_approximation.Y",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_kernel_approximation.test_nystroem_callable": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "len",
    "list",
    "numpy.random.RandomState",
    "sklearn.kernel_approximation.Nystroem",
    "sklearn.tests.test_kernel_approximation.X",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_kernel_approximation.test_nystroem_callable.logging_histogram_kernel": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "numpy.minimum"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_kernel_approximation.test_nystroem_poly_kernel_params": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.random.RandomState",
    "sklearn.kernel_approximation.Nystroem",
    "sklearn.metrics.pairwise.polynomial_kernel",
    "sklearn.tests.test_kernel_approximation.X",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_kernel_approximation.test_nystroem_singular_kernel": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.dot",
    "numpy.isfinite",
    "numpy.random.RandomState",
    "numpy.vstack",
    "sklearn.kernel_approximation.Nystroem",
    "sklearn.metrics.pairwise.rbf_kernel",
    "sklearn.tests.test_kernel_approximation.X",
    "sklearn.tests.test_kernel_approximation.Y",
    "sklearn.tests.test_kernel_approximation.rng",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_kernel_approximation.test_rbf_sampler": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.dot",
    "numpy.max",
    "numpy.mean",
    "sklearn.kernel_approximation.RBFSampler",
    "sklearn.metrics.pairwise.rbf_kernel",
    "sklearn.tests.test_kernel_approximation.X",
    "sklearn.tests.test_kernel_approximation.Y",
    "sklearn.utils.testing.assert_less_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_kernel_approximation.test_skewed_chi2_sampler": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "ValueError",
    "numpy.dot",
    "numpy.exp",
    "numpy.log",
    "numpy.newaxis",
    "sklearn.kernel_approximation.SkewedChi2Sampler",
    "sklearn.tests.test_kernel_approximation.X",
    "sklearn.tests.test_kernel_approximation.Y",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_kernel_ridge": {
  "data": {
   "symbols_in_volume": [
    "numpy.array",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "sklearn.datasets.make_regression"
   ]
  },
  "type": "module"
 },
 "sklearn.tests.test_kernel_ridge.KernelRidge": {
  "data": {
   "shadows": "sklearn.kernel_ridge.KernelRidge"
  },
  "type": "import"
 },
 "sklearn.tests.test_kernel_ridge.Ridge": {
  "data": {
   "shadows": "sklearn.linear_model.Ridge"
  },
  "type": "import"
 },
 "sklearn.tests.test_kernel_ridge.Xcsc": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "sklearn.tests.test_kernel_ridge.Xcsr": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "sklearn.tests.test_kernel_ridge.Y": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "sklearn.tests.test_kernel_ridge.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.tests.test_kernel_ridge.ignore_warnings": {
  "data": {
   "shadows": "sklearn.utils.testing.ignore_warnings"
  },
  "type": "import"
 },
 "sklearn.tests.test_kernel_ridge.make_regression": {
  "data": {
   "shadows": "sklearn.datasets.make_regression"
  },
  "type": "import"
 },
 "sklearn.tests.test_kernel_ridge.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.tests.test_kernel_ridge.pairwise_kernels": {
  "data": {
   "shadows": "sklearn.metrics.pairwise.pairwise_kernels"
  },
  "type": "import"
 },
 "sklearn.tests.test_kernel_ridge.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.tests.test_kernel_ridge.test_kernel_ridge": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "sklearn.kernel_ridge.KernelRidge",
    "sklearn.linear_model.Ridge",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_kernel_ridge.test_kernel_ridge_csc": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "sklearn.kernel_ridge.KernelRidge",
    "sklearn.linear_model.Ridge",
    "sklearn.tests.test_kernel_ridge.Xcsc",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_kernel_ridge.test_kernel_ridge_csr": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "sklearn.kernel_ridge.KernelRidge",
    "sklearn.linear_model.Ridge",
    "sklearn.tests.test_kernel_ridge.Xcsr",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_kernel_ridge.test_kernel_ridge_multi_output": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.kernel_ridge.KernelRidge",
    "sklearn.linear_model.Ridge",
    "sklearn.tests.test_kernel_ridge.Y",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_kernel_ridge.test_kernel_ridge_precomputed": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "sklearn.kernel_ridge.KernelRidge",
    "sklearn.metrics.pairwise.pairwise_kernels",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_kernel_ridge.test_kernel_ridge_precomputed_kernel_unchanged": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "numpy.dot",
    "sklearn.kernel_ridge.KernelRidge",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_kernel_ridge.test_kernel_ridge_sample_weights": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.random.RandomState",
    "sklearn.kernel_ridge.KernelRidge",
    "sklearn.linear_model.Ridge",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_kernel_ridge.test_kernel_ridge_singular_kernel": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "sklearn.kernel_ridge.KernelRidge",
    "sklearn.linear_model.Ridge",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_learning_curve": {
  "data": {},
  "type": "module"
 },
 "sklearn.tests.test_learning_curve.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "sklearn.tests.test_learning_curve.KFold": {
  "data": {
   "shadows": "sklearn.cross_validation.KFold"
  },
  "type": "import"
 },
 "sklearn.tests.test_learning_curve.MockEstimatorWithParameter": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator"
   ]
  },
  "type": "class"
 },
 "sklearn.tests.test_learning_curve.MockEstimatorWithParameter.__init__": {
  "data": {
   "lineno": 64
  },
  "type": "function"
 },
 "sklearn.tests.test_learning_curve.MockEstimatorWithParameter._is_training_data": {
  "data": {
   "lineno": 79
  },
  "type": "function"
 },
 "sklearn.tests.test_learning_curve.MockEstimatorWithParameter.fit": {
  "data": {
   "lineno": 68
  },
  "type": "function"
 },
 "sklearn.tests.test_learning_curve.MockEstimatorWithParameter.predict": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_learning_curve.MockEstimatorWithParameter.score": {
  "data": {
   "lineno": 76
  },
  "type": "function"
 },
 "sklearn.tests.test_learning_curve.MockImprovingEstimator": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator"
   ]
  },
  "type": "class"
 },
 "sklearn.tests.test_learning_curve.MockImprovingEstimator.__init__": {
  "data": {
   "lineno": 23
  },
  "type": "function"
 },
 "sklearn.tests.test_learning_curve.MockImprovingEstimator._is_training_data": {
  "data": {
   "lineno": 43
  },
  "type": "function"
 },
 "sklearn.tests.test_learning_curve.MockImprovingEstimator.fit": {
  "data": {
   "lineno": 28
  },
  "type": "function"
 },
 "sklearn.tests.test_learning_curve.MockImprovingEstimator.predict": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_learning_curve.MockImprovingEstimator.score": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "float"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_learning_curve.MockIncrementalImprovingEstimator": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "sklearn.tests.test_learning_curve.MockImprovingEstimator"
   ]
  },
  "type": "class"
 },
 "sklearn.tests.test_learning_curve.MockIncrementalImprovingEstimator.__init__": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "sklearn.tests.test_learning_curve.MockIncrementalImprovingEstimator",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_learning_curve.MockIncrementalImprovingEstimator._is_training_data": {
  "data": {
   "lineno": 54
  },
  "type": "function"
 },
 "sklearn.tests.test_learning_curve.MockIncrementalImprovingEstimator.partial_fit": {
  "data": {
   "lineno": 57
  },
  "type": "function"
 },
 "sklearn.tests.test_learning_curve.PassiveAggressiveClassifier": {
  "data": {
   "shadows": "sklearn.linear_model.PassiveAggressiveClassifier"
  },
  "type": "import"
 },
 "sklearn.tests.test_learning_curve.StringIO": {
  "data": {
   "shadows": "sklearn.externals.six.moves.cStringIO"
  },
  "type": "import"
 },
 "sklearn.tests.test_learning_curve.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.tests.test_learning_curve.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.tests.test_learning_curve.assert_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.tests.test_learning_curve.assert_raises": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.tests.test_learning_curve.assert_warns": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_warns"
  },
  "type": "import"
 },
 "sklearn.tests.test_learning_curve.learning_curve": {
  "data": {
   "shadows": "sklearn.learning_curve.learning_curve"
  },
  "type": "import"
 },
 "sklearn.tests.test_learning_curve.make_classification": {
  "data": {
   "shadows": "sklearn.datasets.make_classification"
  },
  "type": "import"
 },
 "sklearn.tests.test_learning_curve.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.tests.test_learning_curve.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "sklearn.tests.test_learning_curve.test_learning_curve": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "RuntimeError",
    "len",
    "numpy.linspace",
    "sklearn.datasets.make_classification",
    "sklearn.learning_curve.learning_curve",
    "sklearn.tests.test_learning_curve.MockImprovingEstimator",
    "sklearn.tests.test_learning_curve.warnings",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_learning_curve.test_learning_curve_batch_and_incremental_learning_are_equal": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "numpy.linspace",
    "sklearn.datasets.make_classification",
    "sklearn.learning_curve.learning_curve",
    "sklearn.linear_model.PassiveAggressiveClassifier",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_learning_curve.test_learning_curve_incremental_learning": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "numpy.linspace",
    "sklearn.datasets.make_classification",
    "sklearn.learning_curve.learning_curve",
    "sklearn.tests.test_learning_curve.MockIncrementalImprovingEstimator",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_learning_curve.test_learning_curve_incremental_learning_not_possible": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.datasets.make_classification",
    "sklearn.learning_curve.learning_curve",
    "sklearn.tests.test_learning_curve.MockImprovingEstimator",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_learning_curve.test_learning_curve_incremental_learning_unsupervised": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "numpy.linspace",
    "sklearn.datasets.make_classification",
    "sklearn.learning_curve.learning_curve",
    "sklearn.tests.test_learning_curve.MockIncrementalImprovingEstimator",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_learning_curve.test_learning_curve_n_sample_range_out_of_bounds": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.datasets.make_classification",
    "sklearn.learning_curve.learning_curve",
    "sklearn.tests.test_learning_curve.MockImprovingEstimator",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_learning_curve.test_learning_curve_remove_duplicate_sample_sizes": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "RuntimeWarning",
    "numpy.linspace",
    "sklearn.datasets.make_classification",
    "sklearn.learning_curve.learning_curve",
    "sklearn.tests.test_learning_curve.MockImprovingEstimator",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_warns"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_learning_curve.test_learning_curve_unsupervised": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "numpy.linspace",
    "sklearn.datasets.make_classification",
    "sklearn.learning_curve.learning_curve",
    "sklearn.tests.test_learning_curve.MockImprovingEstimator",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_learning_curve.test_learning_curve_verbose": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "sklearn.datasets.make_classification",
    "sklearn.externals.six.moves.cStringIO",
    "sklearn.learning_curve.learning_curve",
    "sklearn.tests.test_learning_curve.MockImprovingEstimator",
    "sklearn.tests.test_learning_curve.sys"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_learning_curve.test_learning_curve_with_boolean_indices": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "numpy.linspace",
    "sklearn.cross_validation.KFold",
    "sklearn.datasets.make_classification",
    "sklearn.learning_curve.learning_curve",
    "sklearn.tests.test_learning_curve.MockImprovingEstimator",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_learning_curve.test_validation_curve": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "RuntimeError",
    "len",
    "numpy.linspace",
    "sklearn.datasets.make_classification",
    "sklearn.learning_curve.validation_curve",
    "sklearn.tests.test_learning_curve.MockEstimatorWithParameter",
    "sklearn.tests.test_learning_curve.warnings",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_learning_curve.validation_curve": {
  "data": {
   "shadows": "sklearn.learning_curve.validation_curve"
  },
  "type": "import"
 },
 "sklearn.tests.test_learning_curve.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.tests.test_metaestimators": {
  "data": {
   "symbols_in_volume": [
    "sklearn.ensemble.BaggingClassifier",
    "sklearn.feature_selection.RFE",
    "sklearn.feature_selection.RFECV",
    "sklearn.grid_search.GridSearchCV",
    "sklearn.grid_search.RandomizedSearchCV",
    "sklearn.pipeline.Pipeline",
    "sklearn.tests.test_metaestimators.DelegatorData"
   ]
  },
  "type": "module"
 },
 "sklearn.tests.test_metaestimators.BaggingClassifier": {
  "data": {
   "shadows": "sklearn.ensemble.BaggingClassifier"
  },
  "type": "import"
 },
 "sklearn.tests.test_metaestimators.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "sklearn.tests.test_metaestimators.DELEGATING_METAESTIMATORS": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "sklearn.tests.test_metaestimators.DelegatorData": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "sklearn.tests.test_metaestimators.DelegatorData.__init__": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "sklearn.datasets.make_classification"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_metaestimators.GridSearchCV": {
  "data": {
   "shadows": "sklearn.grid_search.GridSearchCV"
  },
  "type": "import"
 },
 "sklearn.tests.test_metaestimators.Pipeline": {
  "data": {
   "shadows": "sklearn.pipeline.Pipeline"
  },
  "type": "import"
 },
 "sklearn.tests.test_metaestimators.RFE": {
  "data": {
   "shadows": "sklearn.feature_selection.RFE"
  },
  "type": "import"
 },
 "sklearn.tests.test_metaestimators.RFECV": {
  "data": {
   "shadows": "sklearn.feature_selection.RFECV"
  },
  "type": "import"
 },
 "sklearn.tests.test_metaestimators.RandomizedSearchCV": {
  "data": {
   "shadows": "sklearn.grid_search.RandomizedSearchCV"
  },
  "type": "import"
 },
 "sklearn.tests.test_metaestimators.assert_false": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_false"
  },
  "type": "import"
 },
 "sklearn.tests.test_metaestimators.assert_raises": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.tests.test_metaestimators.assert_true": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_true"
  },
  "type": "import"
 },
 "sklearn.tests.test_metaestimators.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "sklearn.tests.test_metaestimators.iterkeys": {
  "data": {
   "shadows": "sklearn.externals.six.iterkeys"
  },
  "type": "import"
 },
 "sklearn.tests.test_metaestimators.make_classification": {
  "data": {
   "shadows": "sklearn.datasets.make_classification"
  },
  "type": "import"
 },
 "sklearn.tests.test_metaestimators.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.tests.test_metaestimators.test_metaestimator_delegation": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "Exception",
    "SubEstimator",
    "getattr",
    "hasattr",
    "sklearn.externals.six.iterkeys",
    "sklearn.tests.test_metaestimators.DELEGATING_METAESTIMATORS",
    "sklearn.utils.testing.assert_false",
    "sklearn.utils.testing.assert_raises",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_metaestimators.test_metaestimator_delegation.SubEstimator": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator"
   ]
  },
  "type": "class"
 },
 "sklearn.tests.test_metaestimators.test_metaestimator_delegation.SubEstimator.__init__": {
  "data": {
   "lineno": 57
  },
  "type": "function"
 },
 "sklearn.tests.test_metaestimators.test_metaestimator_delegation.SubEstimator._check_fit": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "RuntimeError",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_metaestimators.test_metaestimator_delegation.SubEstimator.decision_function": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_metaestimators.test_metaestimator_delegation.SubEstimator.fit": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_metaestimators.test_metaestimator_delegation.SubEstimator.inverse_transform": {
  "data": {
   "lineno": 69
  },
  "type": "function"
 },
 "sklearn.tests.test_metaestimators.test_metaestimator_delegation.SubEstimator.predict": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_metaestimators.test_metaestimator_delegation.SubEstimator.predict_log_proba": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_metaestimators.test_metaestimator_delegation.SubEstimator.predict_proba": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_metaestimators.test_metaestimator_delegation.SubEstimator.score": {
  "data": {
   "lineno": 99
  },
  "type": "function"
 },
 "sklearn.tests.test_metaestimators.test_metaestimator_delegation.SubEstimator.transform": {
  "data": {
   "lineno": 74
  },
  "type": "function"
 },
 "sklearn.tests.test_metaestimators.test_metaestimator_delegation.hides": {
  "data": {
   "lineno": 48
  },
  "type": "function"
 },
 "sklearn.tests.test_metaestimators.test_metaestimator_delegation.hides.wrapper": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "AttributeError",
    "property",
    "sklearn.tests.test_metaestimators.functools"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_multiclass": {
  "data": {
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.datasets.load_iris",
    "sklearn.tests.test_multiclass.iris",
    "sklearn.tests.test_multiclass.perm",
    "sklearn.tests.test_multiclass.rng"
   ]
  },
  "type": "module"
 },
 "sklearn.tests.test_multiclass.DecisionTreeClassifier": {
  "data": {
   "shadows": "sklearn.tree.DecisionTreeClassifier"
  },
  "type": "import"
 },
 "sklearn.tests.test_multiclass.DecisionTreeRegressor": {
  "data": {
   "shadows": "sklearn.tree.DecisionTreeRegressor"
  },
  "type": "import"
 },
 "sklearn.tests.test_multiclass.ElasticNet": {
  "data": {
   "shadows": "sklearn.linear_model.ElasticNet"
  },
  "type": "import"
 },
 "sklearn.tests.test_multiclass.GridSearchCV": {
  "data": {
   "shadows": "sklearn.grid_search.GridSearchCV"
  },
  "type": "import"
 },
 "sklearn.tests.test_multiclass.LabelBinarizer": {
  "data": {
   "shadows": "sklearn.preprocessing.LabelBinarizer"
  },
  "type": "import"
 },
 "sklearn.tests.test_multiclass.Lasso": {
  "data": {
   "shadows": "sklearn.linear_model.Lasso"
  },
  "type": "import"
 },
 "sklearn.tests.test_multiclass.LinearRegression": {
  "data": {
   "shadows": "sklearn.linear_model.LinearRegression"
  },
  "type": "import"
 },
 "sklearn.tests.test_multiclass.LinearSVC": {
  "data": {
   "shadows": "sklearn.svm.LinearSVC"
  },
  "type": "import"
 },
 "sklearn.tests.test_multiclass.LogisticRegression": {
  "data": {
   "shadows": "sklearn.linear_model.LogisticRegression"
  },
  "type": "import"
 },
 "sklearn.tests.test_multiclass.MultinomialNB": {
  "data": {
   "shadows": "sklearn.naive_bayes.MultinomialNB"
  },
  "type": "import"
 },
 "sklearn.tests.test_multiclass.OneVsOneClassifier": {
  "data": {
   "shadows": "sklearn.multiclass.OneVsOneClassifier"
  },
  "type": "import"
 },
 "sklearn.tests.test_multiclass.OneVsRestClassifier": {
  "data": {
   "shadows": "sklearn.multiclass.OneVsRestClassifier"
  },
  "type": "import"
 },
 "sklearn.tests.test_multiclass.OutputCodeClassifier": {
  "data": {
   "shadows": "sklearn.multiclass.OutputCodeClassifier"
  },
  "type": "import"
 },
 "sklearn.tests.test_multiclass.Perceptron": {
  "data": {
   "shadows": "sklearn.linear_model.Perceptron"
  },
  "type": "import"
 },
 "sklearn.tests.test_multiclass.Pipeline": {
  "data": {
   "shadows": "sklearn.pipeline.Pipeline"
  },
  "type": "import"
 },
 "sklearn.tests.test_multiclass.Ridge": {
  "data": {
   "shadows": "sklearn.linear_model.Ridge"
  },
  "type": "import"
 },
 "sklearn.tests.test_multiclass.SVC": {
  "data": {
   "shadows": "sklearn.svm.SVC"
  },
  "type": "import"
 },
 "sklearn.tests.test_multiclass.assert_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "sklearn.tests.test_multiclass.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.tests.test_multiclass.assert_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.tests.test_multiclass.assert_false": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_false"
  },
  "type": "import"
 },
 "sklearn.tests.test_multiclass.assert_greater": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_greater"
  },
  "type": "import"
 },
 "sklearn.tests.test_multiclass.assert_raises": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.tests.test_multiclass.assert_true": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_true"
  },
  "type": "import"
 },
 "sklearn.tests.test_multiclass.assert_warns": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_warns"
  },
  "type": "import"
 },
 "sklearn.tests.test_multiclass.datasets": {
  "data": {
   "shadows": "sklearn.datasets"
  },
  "type": "import"
 },
 "sklearn.tests.test_multiclass.fit_ecoc": {
  "data": {
   "shadows": "sklearn.multiclass.fit_ecoc"
  },
  "type": "import"
 },
 "sklearn.tests.test_multiclass.fit_ovo": {
  "data": {
   "shadows": "sklearn.multiclass.fit_ovo"
  },
  "type": "import"
 },
 "sklearn.tests.test_multiclass.fit_ovr": {
  "data": {
   "shadows": "sklearn.multiclass.fit_ovr"
  },
  "type": "import"
 },
 "sklearn.tests.test_multiclass.ignore_warnings": {
  "data": {
   "shadows": "sklearn.utils.testing.ignore_warnings"
  },
  "type": "import"
 },
 "sklearn.tests.test_multiclass.iris": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "sklearn.tests.test_multiclass.n_classes": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "sklearn.tests.test_multiclass.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.tests.test_multiclass.perm": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "sklearn.tests.test_multiclass.precision_score": {
  "data": {
   "shadows": "sklearn.metrics.precision_score"
  },
  "type": "import"
 },
 "sklearn.tests.test_multiclass.predict_ecoc": {
  "data": {
   "shadows": "sklearn.multiclass.predict_ecoc"
  },
  "type": "import"
 },
 "sklearn.tests.test_multiclass.predict_ovo": {
  "data": {
   "shadows": "sklearn.multiclass.predict_ovo"
  },
  "type": "import"
 },
 "sklearn.tests.test_multiclass.predict_ovr": {
  "data": {
   "shadows": "sklearn.multiclass.predict_ovr"
  },
  "type": "import"
 },
 "sklearn.tests.test_multiclass.predict_proba_ovr": {
  "data": {
   "shadows": "sklearn.multiclass.predict_proba_ovr"
  },
  "type": "import"
 },
 "sklearn.tests.test_multiclass.recall_score": {
  "data": {
   "shadows": "sklearn.metrics.recall_score"
  },
  "type": "import"
 },
 "sklearn.tests.test_multiclass.rng": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "sklearn.tests.test_multiclass.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.tests.test_multiclass.svm": {
  "data": {
   "shadows": "sklearn.svm"
  },
  "type": "import"
 },
 "sklearn.tests.test_multiclass.test_deprecated": {
  "data": {
   "lineno": 560,
   "symbols_in_volume": [
    "MetaEst",
    "TypeError",
    "fit_func",
    "len",
    "predict_func",
    "proba_func",
    "sklearn.multiclass.OneVsOneClassifier",
    "sklearn.multiclass.OneVsRestClassifier",
    "sklearn.multiclass.OutputCodeClassifier",
    "sklearn.multiclass.fit_ecoc",
    "sklearn.multiclass.fit_ovo",
    "sklearn.multiclass.fit_ovr",
    "sklearn.multiclass.predict_ecoc",
    "sklearn.multiclass.predict_ovo",
    "sklearn.multiclass.predict_ovr",
    "sklearn.multiclass.predict_proba_ovr",
    "sklearn.tests.test_multiclass.iris",
    "sklearn.tree.DecisionTreeClassifier",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_multiclass.test_ecoc_exceptions": {
  "data": {
   "lineno": 532,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.multiclass.OutputCodeClassifier",
    "sklearn.svm.LinearSVC",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_multiclass.test_ecoc_fit_predict": {
  "data": {
   "lineno": 537,
   "symbols_in_volume": [
    "len",
    "sklearn.multiclass.OutputCodeClassifier",
    "sklearn.naive_bayes.MultinomialNB",
    "sklearn.svm.LinearSVC",
    "sklearn.tests.test_multiclass.iris",
    "sklearn.tests.test_multiclass.n_classes",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_multiclass.test_ecoc_gridsearch": {
  "data": {
   "lineno": 550,
   "symbols_in_volume": [
    "sklearn.grid_search.GridSearchCV",
    "sklearn.multiclass.OutputCodeClassifier",
    "sklearn.svm.LinearSVC",
    "sklearn.tests.test_multiclass.iris",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_multiclass.test_ovo_decision_function": {
  "data": {
   "lineno": 435,
   "symbols_in_volume": [
    "len",
    "numpy.round",
    "numpy.unique",
    "numpy.zeros",
    "range",
    "set",
    "sklearn.multiclass.OneVsOneClassifier",
    "sklearn.svm.LinearSVC",
    "sklearn.tests.test_multiclass.iris",
    "sklearn.tests.test_multiclass.n_classes",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_greater",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_multiclass.test_ovo_exceptions": {
  "data": {
   "lineno": 408,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.multiclass.OneVsOneClassifier",
    "sklearn.svm.LinearSVC",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_multiclass.test_ovo_fit_on_list": {
  "data": {
   "lineno": 413,
   "symbols_in_volume": [
    "list",
    "sklearn.multiclass.OneVsOneClassifier",
    "sklearn.svm.LinearSVC",
    "sklearn.tests.test_multiclass.iris",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_multiclass.test_ovo_fit_predict": {
  "data": {
   "lineno": 423,
   "symbols_in_volume": [
    "len",
    "sklearn.multiclass.OneVsOneClassifier",
    "sklearn.naive_bayes.MultinomialNB",
    "sklearn.svm.LinearSVC",
    "sklearn.tests.test_multiclass.iris",
    "sklearn.tests.test_multiclass.n_classes",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_multiclass.test_ovo_gridsearch": {
  "data": {
   "lineno": 476,
   "symbols_in_volume": [
    "sklearn.grid_search.GridSearchCV",
    "sklearn.multiclass.OneVsOneClassifier",
    "sklearn.svm.LinearSVC",
    "sklearn.tests.test_multiclass.iris",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_multiclass.test_ovo_string_y": {
  "data": {
   "lineno": 522,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.eye",
    "sklearn.multiclass.OneVsOneClassifier",
    "sklearn.svm.LinearSVC",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_multiclass.test_ovo_ties": {
  "data": {
   "lineno": 485,
   "symbols_in_volume": [
    "numpy.argmax",
    "numpy.array",
    "numpy.round",
    "sklearn.linear_model.Perceptron",
    "sklearn.multiclass.OneVsOneClassifier",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_multiclass.test_ovo_ties2": {
  "data": {
   "lineno": 509,
   "symbols_in_volume": [
    "numpy.array",
    "range",
    "sklearn.linear_model.Perceptron",
    "sklearn.multiclass.OneVsOneClassifier",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_multiclass.test_ovr_always_present": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "UserWarning",
    "numpy.array",
    "numpy.ones",
    "numpy.unique",
    "numpy.zeros",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.multiclass.OneVsRestClassifier",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_warns"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_multiclass.test_ovr_binary": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "conduct_test",
    "numpy.array",
    "set",
    "sklearn.linear_model.ElasticNet",
    "sklearn.linear_model.LinearRegression",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.linear_model.Ridge",
    "sklearn.naive_bayes.MultinomialNB",
    "sklearn.svm.LinearSVC",
    "sklearn.svm.SVC"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_multiclass.test_ovr_binary.conduct_test": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "len",
    "numpy.argmax",
    "numpy.array",
    "set",
    "sklearn.multiclass.OneVsRestClassifier",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_multiclass.test_ovr_coef_": {
  "data": {
   "lineno": 381,
   "symbols_in_volume": [
    "scipy.sparse.csr_matrix",
    "scipy.sparse.issparse",
    "sklearn.multiclass.OneVsRestClassifier",
    "sklearn.svm.LinearSVC",
    "sklearn.svm.SVC",
    "sklearn.tests.test_multiclass.iris",
    "sklearn.tests.test_multiclass.n_classes",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_multiclass.test_ovr_coef_exceptions": {
  "data": {
   "lineno": 396,
   "symbols_in_volume": [
    "AttributeError",
    "ValueError",
    "sklearn.multiclass.OneVsRestClassifier",
    "sklearn.svm.LinearSVC",
    "sklearn.tests.test_multiclass.iris",
    "sklearn.tree.DecisionTreeClassifier",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_multiclass.test_ovr_exceptions": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "sklearn.multiclass.OneVsRestClassifier",
    "sklearn.multiclass.predict_ovr",
    "sklearn.naive_bayes.MultinomialNB",
    "sklearn.preprocessing.LabelBinarizer",
    "sklearn.svm.LinearSVC",
    "sklearn.utils.testing.assert_raises",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_multiclass.test_ovr_fit_predict": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "len",
    "numpy.mean",
    "sklearn.multiclass.OneVsRestClassifier",
    "sklearn.naive_bayes.MultinomialNB",
    "sklearn.svm.LinearSVC",
    "sklearn.tests.test_multiclass.iris",
    "sklearn.tests.test_multiclass.n_classes",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_greater"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_multiclass.test_ovr_fit_predict_sparse": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "int",
    "scipy.sparse.coo_matrix",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.dok_matrix",
    "scipy.sparse.issparse",
    "scipy.sparse.lil_matrix",
    "sklearn.datasets.make_multilabel_classification",
    "sklearn.multiclass.OneVsRestClassifier",
    "sklearn.naive_bayes.MultinomialNB",
    "sklearn.svm.SVC",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_true",
    "sparse"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_multiclass.test_ovr_fit_predict_svc": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "len",
    "sklearn.multiclass.OneVsRestClassifier",
    "sklearn.svm.SVC",
    "sklearn.tests.test_multiclass.iris",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_greater"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_multiclass.test_ovr_gridsearch": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": [
    "sklearn.grid_search.GridSearchCV",
    "sklearn.multiclass.OneVsRestClassifier",
    "sklearn.svm.LinearSVC",
    "sklearn.tests.test_multiclass.iris",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_multiclass.test_ovr_multiclass": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "numpy.array",
    "set",
    "sklearn.linear_model.ElasticNet",
    "sklearn.linear_model.LinearRegression",
    "sklearn.linear_model.Ridge",
    "sklearn.multiclass.OneVsRestClassifier",
    "sklearn.naive_bayes.MultinomialNB",
    "sklearn.svm.LinearSVC",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_multiclass.test_ovr_multilabel": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.linear_model.ElasticNet",
    "sklearn.linear_model.Lasso",
    "sklearn.linear_model.LinearRegression",
    "sklearn.linear_model.Ridge",
    "sklearn.multiclass.OneVsRestClassifier",
    "sklearn.naive_bayes.MultinomialNB",
    "sklearn.svm.LinearSVC",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_multiclass.test_ovr_multilabel_dataset": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "sklearn.datasets.make_multilabel_classification",
    "sklearn.externals.six.moves.zip",
    "sklearn.metrics.precision_score",
    "sklearn.metrics.recall_score",
    "sklearn.multiclass.OneVsRestClassifier",
    "sklearn.naive_bayes.MultinomialNB",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_multiclass.test_ovr_multilabel_decision_function": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": [
    "int",
    "sklearn.datasets.make_multilabel_classification",
    "sklearn.multiclass.OneVsRestClassifier",
    "sklearn.svm.SVC",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_multiclass.test_ovr_multilabel_predict_proba": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "AttributeError",
    "sklearn.datasets.make_multilabel_classification",
    "sklearn.multiclass.OneVsRestClassifier",
    "sklearn.naive_bayes.MultinomialNB",
    "sklearn.svm.SVC",
    "sklearn.svm.SVR",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_multiclass.test_ovr_ovo_regressor": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "len",
    "numpy.mean",
    "numpy.unique",
    "sklearn.multiclass.OneVsOneClassifier",
    "sklearn.multiclass.OneVsRestClassifier",
    "sklearn.tests.test_multiclass.iris",
    "sklearn.tests.test_multiclass.n_classes",
    "sklearn.tree.DecisionTreeRegressor",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_greater"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_multiclass.test_ovr_pipeline": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": [
    "sklearn.multiclass.OneVsRestClassifier",
    "sklearn.pipeline.Pipeline",
    "sklearn.tests.test_multiclass.iris",
    "sklearn.tree.DecisionTreeClassifier",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_multiclass.test_ovr_single_label_decision_function": {
  "data": {
   "lineno": 349,
   "symbols_in_volume": [
    "sklearn.datasets.make_classification",
    "sklearn.multiclass.OneVsRestClassifier",
    "sklearn.svm.SVC",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_multiclass.test_ovr_single_label_predict_proba": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": [
    "AttributeError",
    "numpy.array",
    "sklearn.multiclass.OneVsRestClassifier",
    "sklearn.naive_bayes.MultinomialNB",
    "sklearn.svm.SVR",
    "sklearn.tests.test_multiclass.iris",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_false",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_multiclass.zip": {
  "data": {
   "shadows": "sklearn.externals.six.moves.zip"
  },
  "type": "import"
 },
 "sklearn.tests.test_naive_bayes": {
  "data": {
   "symbols_in_volume": [
    "numpy.array",
    "numpy.int",
    "numpy.random.RandomState",
    "sklearn.tests.test_naive_bayes.rng"
   ]
  },
  "type": "module"
 },
 "sklearn.tests.test_naive_bayes.BernoulliNB": {
  "data": {
   "shadows": "sklearn.naive_bayes.BernoulliNB"
  },
  "type": "import"
 },
 "sklearn.tests.test_naive_bayes.BytesIO": {
  "data": {
   "shadows": "io.BytesIO"
  },
  "type": "import"
 },
 "sklearn.tests.test_naive_bayes.GaussianNB": {
  "data": {
   "shadows": "sklearn.naive_bayes.GaussianNB"
  },
  "type": "import"
 },
 "sklearn.tests.test_naive_bayes.MultinomialNB": {
  "data": {
   "shadows": "sklearn.naive_bayes.MultinomialNB"
  },
  "type": "import"
 },
 "sklearn.tests.test_naive_bayes.X": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "sklearn.tests.test_naive_bayes.X1": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "sklearn.tests.test_naive_bayes.X2": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "sklearn.tests.test_naive_bayes.assert_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "sklearn.tests.test_naive_bayes.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.tests.test_naive_bayes.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.tests.test_naive_bayes.assert_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.tests.test_naive_bayes.assert_greater": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_greater"
  },
  "type": "import"
 },
 "sklearn.tests.test_naive_bayes.assert_raises": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.tests.test_naive_bayes.check_partial_fit": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "cls",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_naive_bayes.check_sample_weight_multiclass": {
  "data": {
   "lineno": 327,
   "symbols_in_volume": [
    "cls",
    "numpy.array",
    "numpy.float",
    "sklearn.tests.test_naive_bayes.X",
    "sklearn.tests.test_naive_bayes.y",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_naive_bayes.cross_val_score": {
  "data": {
   "shadows": "sklearn.cross_validation.cross_val_score"
  },
  "type": "import"
 },
 "sklearn.tests.test_naive_bayes.load_digits": {
  "data": {
   "shadows": "sklearn.datasets.load_digits"
  },
  "type": "import"
 },
 "sklearn.tests.test_naive_bayes.load_iris": {
  "data": {
   "shadows": "sklearn.datasets.load_iris"
  },
  "type": "import"
 },
 "sklearn.tests.test_naive_bayes.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.tests.test_naive_bayes.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "sklearn.tests.test_naive_bayes.rng": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "sklearn.tests.test_naive_bayes.scipy.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.tests.test_naive_bayes.test_bnb": {
  "data": {
   "lineno": 426,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.exp",
    "numpy.sum",
    "sklearn.naive_bayes.BernoulliNB",
    "sklearn.tests.test_naive_bayes.X",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_naive_bayes.test_check_accuracy_on_digits": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": [
    "numpy.logical_or",
    "sklearn.cross_validation.cross_val_score",
    "sklearn.datasets.load_digits",
    "sklearn.naive_bayes.BernoulliNB",
    "sklearn.naive_bayes.GaussianNB",
    "sklearn.naive_bayes.MultinomialNB",
    "sklearn.tests.test_naive_bayes.X",
    "sklearn.tests.test_naive_bayes.y",
    "sklearn.utils.testing.assert_greater"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_naive_bayes.test_coef_intercept_shape": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": [
    "sklearn.naive_bayes.BernoulliNB",
    "sklearn.naive_bayes.MultinomialNB",
    "sklearn.tests.test_naive_bayes.X",
    "sklearn.tests.test_naive_bayes.y",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_naive_bayes.test_discrete_prior": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "cls",
    "numpy.array",
    "numpy.log",
    "sklearn.naive_bayes.BernoulliNB",
    "sklearn.naive_bayes.MultinomialNB",
    "sklearn.tests.test_naive_bayes.X2",
    "sklearn.tests.test_naive_bayes.y2",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_naive_bayes.test_discretenb_partial_fit": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "cls",
    "sklearn.naive_bayes.BernoulliNB",
    "sklearn.naive_bayes.MultinomialNB",
    "sklearn.tests.test_naive_bayes.check_partial_fit"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_naive_bayes.test_discretenb_pickle": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "cls",
    "io.BytesIO",
    "numpy.unique",
    "sklearn.naive_bayes.BernoulliNB",
    "sklearn.naive_bayes.GaussianNB",
    "sklearn.naive_bayes.MultinomialNB",
    "sklearn.tests.test_naive_bayes.X2",
    "sklearn.tests.test_naive_bayes.pickle",
    "sklearn.tests.test_naive_bayes.y2",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_naive_bayes.test_discretenb_predict_proba": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "cls",
    "numpy.array",
    "numpy.exp",
    "numpy.sum",
    "sklearn.externals.six.moves.zip",
    "sklearn.naive_bayes.BernoulliNB",
    "sklearn.naive_bayes.MultinomialNB",
    "sklearn.tests.test_naive_bayes.X",
    "sklearn.tests.test_naive_bayes.y",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_naive_bayes.test_discretenb_provide_prior": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "ValueError",
    "cls",
    "numpy.array",
    "numpy.exp",
    "sklearn.naive_bayes.BernoulliNB",
    "sklearn.naive_bayes.MultinomialNB",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_naive_bayes.test_discretenb_provide_prior_with_partial_fit": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "cls",
    "sklearn.cross_validation.train_test_split",
    "sklearn.datasets.load_iris",
    "sklearn.naive_bayes.BernoulliNB",
    "sklearn.naive_bayes.MultinomialNB",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_naive_bayes.test_discretenb_uniform_prior": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "cls",
    "numpy.array",
    "numpy.exp",
    "sklearn.naive_bayes.BernoulliNB",
    "sklearn.naive_bayes.MultinomialNB",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_naive_bayes.test_feature_log_prob_bnb": {
  "data": {
   "lineno": 403,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.log",
    "numpy.tile",
    "sklearn.naive_bayes.BernoulliNB",
    "sklearn.tests.test_naive_bayes.X",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_naive_bayes.test_gnb": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "ValueError",
    "numpy.log",
    "sklearn.naive_bayes.GaussianNB",
    "sklearn.tests.test_naive_bayes.X",
    "sklearn.tests.test_naive_bayes.y",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_naive_bayes.test_gnb_partial_fit": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "numpy.unique",
    "sklearn.naive_bayes.GaussianNB",
    "sklearn.tests.test_naive_bayes.X",
    "sklearn.tests.test_naive_bayes.y",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_naive_bayes.test_gnb_prior": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.naive_bayes.GaussianNB",
    "sklearn.tests.test_naive_bayes.X",
    "sklearn.tests.test_naive_bayes.X1",
    "sklearn.tests.test_naive_bayes.y",
    "sklearn.tests.test_naive_bayes.y1",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_naive_bayes.test_gnb_sample_weight": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "numpy.bincount",
    "numpy.ones",
    "sklearn.naive_bayes.GaussianNB",
    "sklearn.tests.test_naive_bayes.X",
    "sklearn.tests.test_naive_bayes.rng",
    "sklearn.tests.test_naive_bayes.y",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_naive_bayes.test_input_check_fit": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "ValueError",
    "cls",
    "sklearn.naive_bayes.BernoulliNB",
    "sklearn.naive_bayes.GaussianNB",
    "sklearn.naive_bayes.MultinomialNB",
    "sklearn.tests.test_naive_bayes.X2",
    "sklearn.tests.test_naive_bayes.y2",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_naive_bayes.test_input_check_partial_fit": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "ValueError",
    "cls",
    "numpy.arange",
    "numpy.unique",
    "sklearn.naive_bayes.BernoulliNB",
    "sklearn.naive_bayes.MultinomialNB",
    "sklearn.tests.test_naive_bayes.X2",
    "sklearn.tests.test_naive_bayes.y2",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_naive_bayes.test_mnnb": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "ValueError",
    "numpy.log",
    "numpy.unique",
    "sklearn.naive_bayes.MultinomialNB",
    "sklearn.tests.test_naive_bayes.X",
    "sklearn.tests.test_naive_bayes.X2",
    "sklearn.tests.test_naive_bayes.y2",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_naive_bayes.test_naive_bayes_scale_invariance": {
  "data": {
   "lineno": 471,
   "symbols_in_volume": [
    "sklearn.datasets.load_iris",
    "sklearn.naive_bayes.GaussianNB",
    "sklearn.tests.test_naive_bayes.X",
    "sklearn.tests.test_naive_bayes.y",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_naive_bayes.test_sample_weight_mnb": {
  "data": {
   "lineno": 349,
   "symbols_in_volume": [
    "numpy.exp",
    "sklearn.naive_bayes.MultinomialNB",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_naive_bayes.test_sample_weight_multiclass": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "cls",
    "sklearn.naive_bayes.BernoulliNB",
    "sklearn.naive_bayes.MultinomialNB"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_naive_bayes.train_test_split": {
  "data": {
   "shadows": "sklearn.cross_validation.train_test_split"
  },
  "type": "import"
 },
 "sklearn.tests.test_naive_bayes.y": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "sklearn.tests.test_naive_bayes.y1": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "sklearn.tests.test_naive_bayes.y2": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "sklearn.tests.test_naive_bayes.zip": {
  "data": {
   "shadows": "sklearn.externals.six.moves.zip"
  },
  "type": "import"
 },
 "sklearn.tests.test_pipeline": {
  "data": {},
  "type": "module"
 },
 "sklearn.tests.test_pipeline.CountVectorizer": {
  "data": {
   "shadows": "sklearn.feature_extraction.text.CountVectorizer"
  },
  "type": "import"
 },
 "sklearn.tests.test_pipeline.FeatureUnion": {
  "data": {
   "shadows": "sklearn.pipeline.FeatureUnion"
  },
  "type": "import"
 },
 "sklearn.tests.test_pipeline.FitParamT": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "sklearn.tests.test_pipeline.FitParamT.__init__": {
  "data": {
   "lineno": 74
  },
  "type": "function"
 },
 "sklearn.tests.test_pipeline.FitParamT.fit": {
  "data": {
   "lineno": 78
  },
  "type": "function"
 },
 "sklearn.tests.test_pipeline.FitParamT.predict": {
  "data": {
   "lineno": 81
  },
  "type": "function"
 },
 "sklearn.tests.test_pipeline.IncorrectT": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "sklearn.tests.test_pipeline.IncorrectT.__init__": {
  "data": {
   "lineno": 43
  },
  "type": "function"
 },
 "sklearn.tests.test_pipeline.JUNK_FOOD_DOCS": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "sklearn.tests.test_pipeline.KMeans": {
  "data": {
   "shadows": "sklearn.cluster.KMeans"
  },
  "type": "import"
 },
 "sklearn.tests.test_pipeline.LinearRegression": {
  "data": {
   "shadows": "sklearn.linear_model.LinearRegression"
  },
  "type": "import"
 },
 "sklearn.tests.test_pipeline.LogisticRegression": {
  "data": {
   "shadows": "sklearn.linear_model.LogisticRegression"
  },
  "type": "import"
 },
 "sklearn.tests.test_pipeline.PCA": {
  "data": {
   "shadows": "sklearn.decomposition.PCA"
  },
  "type": "import"
 },
 "sklearn.tests.test_pipeline.Pipeline": {
  "data": {
   "shadows": "sklearn.pipeline.Pipeline"
  },
  "type": "import"
 },
 "sklearn.tests.test_pipeline.RandomizedPCA": {
  "data": {
   "shadows": "sklearn.decomposition.RandomizedPCA"
  },
  "type": "import"
 },
 "sklearn.tests.test_pipeline.SVC": {
  "data": {
   "shadows": "sklearn.svm.SVC"
  },
  "type": "import"
 },
 "sklearn.tests.test_pipeline.SelectKBest": {
  "data": {
   "shadows": "sklearn.feature_selection.SelectKBest"
  },
  "type": "import"
 },
 "sklearn.tests.test_pipeline.StandardScaler": {
  "data": {
   "shadows": "sklearn.preprocessing.StandardScaler"
  },
  "type": "import"
 },
 "sklearn.tests.test_pipeline.T": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "sklearn.tests.test_pipeline.IncorrectT"
   ]
  },
  "type": "class"
 },
 "sklearn.tests.test_pipeline.T.fit": {
  "data": {
   "lineno": 50
  },
  "type": "function"
 },
 "sklearn.tests.test_pipeline.T.get_params": {
  "data": {
   "lineno": 53
  },
  "type": "function"
 },
 "sklearn.tests.test_pipeline.T.set_params": {
  "data": {
   "lineno": 56
  },
  "type": "function"
 },
 "sklearn.tests.test_pipeline.TransfT": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "sklearn.tests.test_pipeline.T"
   ]
  },
  "type": "class"
 },
 "sklearn.tests.test_pipeline.TransfT.inverse_transform": {
  "data": {
   "lineno": 66
  },
  "type": "function"
 },
 "sklearn.tests.test_pipeline.TransfT.transform": {
  "data": {
   "lineno": 63
  },
  "type": "function"
 },
 "sklearn.tests.test_pipeline.TruncatedSVD": {
  "data": {
   "shadows": "sklearn.decomposition.TruncatedSVD"
  },
  "type": "import"
 },
 "sklearn.tests.test_pipeline.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.tests.test_pipeline.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.tests.test_pipeline.assert_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.tests.test_pipeline.assert_false": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_false"
  },
  "type": "import"
 },
 "sklearn.tests.test_pipeline.assert_raise_message": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raise_message"
  },
  "type": "import"
 },
 "sklearn.tests.test_pipeline.assert_raises": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.tests.test_pipeline.assert_raises_regex": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises_regex"
  },
  "type": "import"
 },
 "sklearn.tests.test_pipeline.assert_true": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_true"
  },
  "type": "import"
 },
 "sklearn.tests.test_pipeline.assert_warns_message": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_warns_message"
  },
  "type": "import"
 },
 "sklearn.tests.test_pipeline.clone": {
  "data": {
   "shadows": "sklearn.base.clone"
  },
  "type": "import"
 },
 "sklearn.tests.test_pipeline.f_classif": {
  "data": {
   "shadows": "sklearn.feature_selection.f_classif"
  },
  "type": "import"
 },
 "sklearn.tests.test_pipeline.load_iris": {
  "data": {
   "shadows": "sklearn.datasets.load_iris"
  },
  "type": "import"
 },
 "sklearn.tests.test_pipeline.make_pipeline": {
  "data": {
   "shadows": "sklearn.pipeline.make_pipeline"
  },
  "type": "import"
 },
 "sklearn.tests.test_pipeline.make_union": {
  "data": {
   "shadows": "sklearn.pipeline.make_union"
  },
  "type": "import"
 },
 "sklearn.tests.test_pipeline.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.tests.test_pipeline.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.tests.test_pipeline.test_X1d_inverse_transform": {
  "data": {
   "lineno": 468,
   "symbols_in_volume": [
    "FutureWarning",
    "numpy.ones",
    "sklearn.pipeline.make_pipeline",
    "sklearn.tests.test_pipeline.TransfT",
    "sklearn.utils.testing.assert_warns_message"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_pipeline.test_classes_property": {
  "data": {
   "lineno": 453,
   "symbols_in_volume": [
    "AttributeError",
    "getattr",
    "numpy.unique",
    "sklearn.datasets.load_iris",
    "sklearn.feature_selection.SelectKBest",
    "sklearn.linear_model.LinearRegression",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.pipeline.make_pipeline",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_pipeline.test_feature_union": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "scipy.sparse.csr_matrix",
    "sklearn.datasets.load_iris",
    "sklearn.decomposition.TruncatedSVD",
    "sklearn.feature_selection.SelectKBest",
    "sklearn.pipeline.FeatureUnion",
    "sklearn.tests.test_pipeline.TransfT",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_pipeline.test_feature_union_feature_names": {
  "data": {
   "lineno": 442,
   "symbols_in_volume": [
    "len",
    "sklearn.feature_extraction.text.CountVectorizer",
    "sklearn.pipeline.FeatureUnion",
    "sklearn.tests.test_pipeline.JUNK_FOOD_DOCS",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_pipeline.test_feature_union_parallel": {
  "data": {
   "lineno": 396,
   "symbols_in_volume": [
    "len",
    "sklearn.feature_extraction.text.CountVectorizer",
    "sklearn.pipeline.FeatureUnion",
    "sklearn.tests.test_pipeline.JUNK_FOOD_DOCS",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_pipeline.test_feature_union_weights": {
  "data": {
   "lineno": 363,
   "symbols_in_volume": [
    "sklearn.datasets.load_iris",
    "sklearn.decomposition.RandomizedPCA",
    "sklearn.feature_selection.SelectKBest",
    "sklearn.pipeline.FeatureUnion",
    "sklearn.tests.test_pipeline.TransfT",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_pipeline.test_fit_predict_on_pipeline": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "sklearn.cluster.KMeans",
    "sklearn.datasets.load_iris",
    "sklearn.pipeline.Pipeline",
    "sklearn.preprocessing.StandardScaler",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_pipeline.test_fit_predict_on_pipeline_without_fit_predict": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "AttributeError",
    "getattr",
    "sklearn.decomposition.PCA",
    "sklearn.pipeline.Pipeline",
    "sklearn.preprocessing.StandardScaler",
    "sklearn.utils.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_pipeline.test_make_pipeline": {
  "data": {
   "lineno": 347,
   "symbols_in_volume": [
    "isinstance",
    "sklearn.pipeline.Pipeline",
    "sklearn.pipeline.make_pipeline",
    "sklearn.tests.test_pipeline.FitParamT",
    "sklearn.tests.test_pipeline.TransfT",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_pipeline.test_make_union": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "sklearn.decomposition.PCA",
    "sklearn.externals.six.moves.zip",
    "sklearn.pipeline.make_union",
    "sklearn.tests.test_pipeline.TransfT",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_pipeline.test_pipeline_fit_params": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "sklearn.pipeline.Pipeline",
    "sklearn.tests.test_pipeline.FitParamT",
    "sklearn.tests.test_pipeline.TransfT",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_pipeline.test_pipeline_fit_transform": {
  "data": {
   "lineno": 333,
   "symbols_in_volume": [
    "sklearn.datasets.load_iris",
    "sklearn.pipeline.Pipeline",
    "sklearn.tests.test_pipeline.TransfT",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_pipeline.test_pipeline_init": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "dict",
    "repr",
    "sklearn.base.clone",
    "sklearn.feature_selection.SelectKBest",
    "sklearn.feature_selection.f_classif",
    "sklearn.pipeline.Pipeline",
    "sklearn.svm.SVC",
    "sklearn.tests.test_pipeline.IncorrectT",
    "sklearn.tests.test_pipeline.T",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_false",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_pipeline.test_pipeline_methods_anova": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "sklearn.datasets.load_iris",
    "sklearn.feature_selection.SelectKBest",
    "sklearn.feature_selection.f_classif",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.pipeline.Pipeline"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_pipeline.test_pipeline_methods_pca_svm": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "sklearn.datasets.load_iris",
    "sklearn.decomposition.PCA",
    "sklearn.pipeline.Pipeline",
    "sklearn.svm.SVC"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_pipeline.test_pipeline_methods_preprocessing_svm": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "len",
    "numpy.unique",
    "sklearn.datasets.load_iris",
    "sklearn.decomposition.RandomizedPCA",
    "sklearn.pipeline.Pipeline",
    "sklearn.preprocessing.StandardScaler",
    "sklearn.svm.SVC",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_pipeline.test_pipeline_raise_set_params_error": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.linear_model.LinearRegression",
    "sklearn.pipeline.Pipeline",
    "sklearn.utils.testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_pipeline.test_pipeline_transform": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": [
    "sklearn.datasets.load_iris",
    "sklearn.decomposition.PCA",
    "sklearn.pipeline.Pipeline",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_pipeline.zip": {
  "data": {
   "shadows": "sklearn.externals.six.moves.zip"
  },
  "type": "import"
 },
 "sklearn.tests.test_random_projection": {
  "data": {
   "symbols_in_volume": [
    "int",
    "set",
    "sklearn.random_projection.GaussianRandomProjection",
    "sklearn.random_projection.SparseRandomProjection",
    "sklearn.random_projection.gaussian_random_matrix",
    "sklearn.random_projection.sparse_random_matrix",
    "sklearn.tests.test_random_projection.all_DenseRandomProjection",
    "sklearn.tests.test_random_projection.all_SparseRandomProjection",
    "sklearn.tests.test_random_projection.all_dense_random_matrix",
    "sklearn.tests.test_random_projection.all_sparse_random_matrix",
    "sklearn.tests.test_random_projection.make_sparse_random_data",
    "sklearn.tests.test_random_projection.n_nonzeros"
   ]
  },
  "type": "module"
 },
 "sklearn.tests.test_random_projection.DataDimensionalityWarning": {
  "data": {
   "shadows": "sklearn.utils.DataDimensionalityWarning"
  },
  "type": "import"
 },
 "sklearn.tests.test_random_projection.GaussianRandomProjection": {
  "data": {
   "shadows": "sklearn.random_projection.GaussianRandomProjection"
  },
  "type": "import"
 },
 "sklearn.tests.test_random_projection.SparseRandomProjection": {
  "data": {
   "shadows": "sklearn.random_projection.SparseRandomProjection"
  },
  "type": "import"
 },
 "sklearn.tests.test_random_projection.all_DenseRandomProjection": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "sklearn.tests.test_random_projection.all_RandomProjection": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "sklearn.tests.test_random_projection.all_SparseRandomProjection": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "sklearn.tests.test_random_projection.all_dense_random_matrix": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "sklearn.tests.test_random_projection.all_random_matrix": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "sklearn.tests.test_random_projection.all_sparse_random_matrix": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "sklearn.tests.test_random_projection.assert_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "sklearn.tests.test_random_projection.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.tests.test_random_projection.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.tests.test_random_projection.assert_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.tests.test_random_projection.assert_in": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_in"
  },
  "type": "import"
 },
 "sklearn.tests.test_random_projection.assert_less": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_less"
  },
  "type": "import"
 },
 "sklearn.tests.test_random_projection.assert_raise_message": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raise_message"
  },
  "type": "import"
 },
 "sklearn.tests.test_random_projection.assert_raises": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.tests.test_random_projection.assert_warns": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_warns"
  },
  "type": "import"
 },
 "sklearn.tests.test_random_projection.check_input_size_random_matrix": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_random_projection.check_input_with_sparse_random_matrix": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "ValueError",
    "random_matrix",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_random_projection.check_size_generated": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "random_matrix",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_random_projection.check_zero_mean_and_unit_norm": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "numpy.linalg.norm",
    "numpy.mean",
    "random_matrix",
    "sklearn.tests.test_random_projection.densify",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_random_projection.densify": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "scipy.sparse.issparse"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_random_projection.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sklearn.tests.test_random_projection.euclidean_distances": {
  "data": {
   "shadows": "sklearn.metrics.euclidean_distances"
  },
  "type": "import"
 },
 "sklearn.tests.test_random_projection.gaussian_random_matrix": {
  "data": {
   "shadows": "sklearn.random_projection.gaussian_random_matrix"
  },
  "type": "import"
 },
 "sklearn.tests.test_random_projection.johnson_lindenstrauss_min_dim": {
  "data": {
   "shadows": "sklearn.random_projection.johnson_lindenstrauss_min_dim"
  },
  "type": "import"
 },
 "sklearn.tests.test_random_projection.make_sparse_random_data": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "scipy.sparse.coo_matrix"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_random_projection.n_nonzeros": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "sklearn.tests.test_random_projection.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.tests.test_random_projection.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.tests.test_random_projection.sparse_random_matrix": {
  "data": {
   "shadows": "sklearn.random_projection.sparse_random_matrix"
  },
  "type": "import"
 },
 "sklearn.tests.test_random_projection.test_SparseRandomProjection_output_representation": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "isinstance",
    "numpy.ndarray",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.issparse",
    "sklearn.random_projection.SparseRandomProjection",
    "sklearn.tests.test_random_projection.all_SparseRandomProjection"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_random_projection.test_basic_property_of_random_matrix": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "random_matrix",
    "sklearn.tests.test_random_projection.all_random_matrix",
    "sklearn.tests.test_random_projection.all_sparse_random_matrix",
    "sklearn.tests.test_random_projection.check_input_size_random_matrix",
    "sklearn.tests.test_random_projection.check_input_with_sparse_random_matrix",
    "sklearn.tests.test_random_projection.check_size_generated",
    "sklearn.tests.test_random_projection.check_zero_mean_and_unit_norm"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_random_projection.test_correct_RandomProjection_dimensions_embedding": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "RandomProjection",
    "ValueError",
    "sklearn.tests.test_random_projection.all_RandomProjection",
    "sklearn.tests.test_random_projection.all_SparseRandomProjection",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_less",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_random_projection.test_gaussian_random_matrix": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "numpy.mean",
    "numpy.var",
    "sklearn.random_projection.gaussian_random_matrix",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_random_projection.test_input_size_jl_min_dim": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "ValueError",
    "numpy.ones",
    "numpy.random.randint",
    "sklearn.random_projection.johnson_lindenstrauss_min_dim",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_random_projection.test_invalid_jl_domain": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.random_projection.johnson_lindenstrauss_min_dim",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_random_projection.test_random_projection_embedding_quality": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "RandomProjection",
    "sklearn.metrics.euclidean_distances",
    "sklearn.tests.test_random_projection.all_RandomProjection",
    "sklearn.tests.test_random_projection.make_sparse_random_data",
    "sklearn.utils.testing.assert_less"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_random_projection.test_random_projection_transformer_invalid_input": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "RandomProjection",
    "ValueError",
    "sklearn.tests.test_random_projection.all_RandomProjection",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_random_projection.test_sparse_random_matrix": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "numpy.mean",
    "numpy.size",
    "numpy.sqrt",
    "numpy.unique",
    "numpy.var",
    "sklearn.random_projection.sparse_random_matrix",
    "sklearn.tests.test_random_projection.densify",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_in"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_random_projection.test_sparse_random_projection_transformer_invalid_density": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "RandomProjection",
    "ValueError",
    "sklearn.tests.test_random_projection.all_SparseRandomProjection",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_random_projection.test_too_many_samples_to_find_a_safe_embedding": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "RandomProjection",
    "ValueError",
    "sklearn.tests.test_random_projection.all_RandomProjection",
    "sklearn.tests.test_random_projection.make_sparse_random_data",
    "sklearn.utils.testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_random_projection.test_try_to_transform_before_fit": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "RandomProjection",
    "ValueError",
    "sklearn.tests.test_random_projection.all_RandomProjection",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_random_projection.test_warning_n_components_greater_than_n_features": {
  "data": {
   "lineno": 335,
   "symbols_in_volume": [
    "RandomProjection",
    "int",
    "sklearn.tests.test_random_projection.all_RandomProjection",
    "sklearn.tests.test_random_projection.make_sparse_random_data",
    "sklearn.utils.DataDimensionalityWarning",
    "sklearn.utils.testing.assert_warns"
   ]
  },
  "type": "function"
 },
 "sklearn.tests.test_random_projection.test_works_with_sparse_data": {
  "data": {
   "lineno": 344,
   "symbols_in_volume": [
    "RandomProjection",
    "int",
    "scipy.sparse.csr_matrix",
    "sklearn.tests.test_random_projection.all_RandomProjection",
    "sklearn.tests.test_random_projection.densify",
    "sklearn.tests.test_random_projection.make_sparse_random_data",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tree": {
  "data": {},
  "type": "module"
 },
 "sklearn.tree.__all__": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "sklearn.tree.export": {
  "data": {},
  "type": "module"
 },
 "sklearn.tree.export._color_brew": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "abs",
    "int",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.export.export_graphviz": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "open",
    "recurse",
    "sorted"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.export.export_graphviz.get_color": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "int",
    "list",
    "numpy.argmax",
    "numpy.round",
    "range",
    "sorted",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.export.export_graphviz.node_to_str": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "float",
    "int",
    "isinstance",
    "numpy.all",
    "numpy.argmax",
    "numpy.around",
    "numpy.equal",
    "numpy.mod",
    "round",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.export.export_graphviz.recurse": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "ValueError",
    "get_color",
    "node_to_str",
    "numpy.array",
    "numpy.max",
    "numpy.min",
    "recurse",
    "sklearn.tree.export._color_brew",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.export.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.tree.setup": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.distutils.core.setup",
    "sklearn.tree.setup.configuration"
   ]
  },
  "type": "module"
 },
 "sklearn.tree.setup.Configuration": {
  "data": {
   "shadows": "numpy.distutils.misc_util.Configuration"
  },
  "type": "import"
 },
 "sklearn.tree.setup.configuration": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "numpy.distutils.misc_util.Configuration",
    "sklearn.tree.setup.numpy",
    "sklearn.tree.setup.os"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.setup.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.tree.setup.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "sklearn.tree.setup.setup": {
  "data": {
   "shadows": "numpy.distutils.core.setup"
  },
  "type": "import"
 },
 "sklearn.tree.tests": {
  "data": {},
  "type": "module"
 },
 "sklearn.tree.tests.test_export": {
  "data": {},
  "type": "module"
 },
 "sklearn.tree.tests.test_export.DecisionTreeClassifier": {
  "data": {
   "shadows": "sklearn.tree.DecisionTreeClassifier"
  },
  "type": "import"
 },
 "sklearn.tree.tests.test_export.DecisionTreeRegressor": {
  "data": {
   "shadows": "sklearn.tree.DecisionTreeRegressor"
  },
  "type": "import"
 },
 "sklearn.tree.tests.test_export.GradientBoostingClassifier": {
  "data": {
   "shadows": "sklearn.ensemble.GradientBoostingClassifier"
  },
  "type": "import"
 },
 "sklearn.tree.tests.test_export.StringIO": {
  "data": {
   "shadows": "sklearn.externals.six.StringIO"
  },
  "type": "import"
 },
 "sklearn.tree.tests.test_export.X": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "sklearn.tree.tests.test_export.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.tree.tests.test_export.assert_in": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_in"
  },
  "type": "import"
 },
 "sklearn.tree.tests.test_export.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "sklearn.tree.tests.test_export.export_graphviz": {
  "data": {
   "shadows": "sklearn.tree.export_graphviz"
  },
  "type": "import"
 },
 "sklearn.tree.tests.test_export.finditer": {
  "data": {
   "shadows": "re.finditer"
  },
  "type": "import"
 },
 "sklearn.tree.tests.test_export.test_friedman_mse_in_graphviz": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "re.finditer",
    "sklearn.ensemble.GradientBoostingClassifier",
    "sklearn.externals.six.StringIO",
    "sklearn.tree.DecisionTreeRegressor",
    "sklearn.tree.export_graphviz",
    "sklearn.tree.tests.test_export.X",
    "sklearn.tree.tests.test_export.y",
    "sklearn.utils.testing.assert_in"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.tests.test_export.test_graphviz_errors": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "IndexError",
    "nose.tools.assert_raises",
    "sklearn.externals.six.StringIO",
    "sklearn.tree.DecisionTreeClassifier",
    "sklearn.tree.export_graphviz",
    "sklearn.tree.tests.test_export.X",
    "sklearn.tree.tests.test_export.y"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.tests.test_export.test_graphviz_toy": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "numpy.testing.assert_equal",
    "sklearn.externals.six.StringIO",
    "sklearn.tree.DecisionTreeClassifier",
    "sklearn.tree.DecisionTreeRegressor",
    "sklearn.tree.export_graphviz",
    "sklearn.tree.tests.test_export.X",
    "sklearn.tree.tests.test_export.w",
    "sklearn.tree.tests.test_export.y",
    "sklearn.tree.tests.test_export.y2"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.tests.test_export.w": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "sklearn.tree.tests.test_export.y": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "sklearn.tree.tests.test_export.y2": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "sklearn.tree.tests.test_tree": {
  "data": {
   "symbols_in_volume": [
    "dict",
    "functools.partial",
    "numpy.array",
    "numpy.random.RandomState",
    "numpy.zeros",
    "scipy.sparse.csc_matrix",
    "sklearn.datasets.load_boston",
    "sklearn.datasets.load_digits",
    "sklearn.datasets.load_iris",
    "sklearn.datasets.make_multilabel_classification",
    "sklearn.random_projection.sparse_random_matrix",
    "sklearn.tree.DecisionTreeClassifier",
    "sklearn.tree.DecisionTreeRegressor",
    "sklearn.tree.ExtraTreeClassifier",
    "sklearn.tree.ExtraTreeRegressor",
    "sklearn.tree.tests.test_tree.ALL_TREES",
    "sklearn.tree.tests.test_tree.CLF_TREES",
    "sklearn.tree.tests.test_tree.DATASETS",
    "sklearn.tree.tests.test_tree.REG_TREES",
    "sklearn.tree.tests.test_tree.X",
    "sklearn.tree.tests.test_tree.X_small",
    "sklearn.tree.tests.test_tree.X_sparse_mix",
    "sklearn.tree.tests.test_tree.X_sparse_pos",
    "sklearn.tree.tests.test_tree.boston",
    "sklearn.tree.tests.test_tree.digits",
    "sklearn.tree.tests.test_tree.iris",
    "sklearn.tree.tests.test_tree.perm",
    "sklearn.tree.tests.test_tree.random_state",
    "sklearn.tree.tests.test_tree.rng",
    "sklearn.tree.tests.test_tree.y",
    "sklearn.tree.tests.test_tree.y_random",
    "sklearn.tree.tests.test_tree.y_small",
    "sklearn.tree.tests.test_tree.y_small_reg",
    "sklearn.utils.validation.check_random_state"
   ]
  },
  "type": "module"
 },
 "sklearn.tree.tests.test_tree.ALL_TREES": {
  "data": {
   "lineno": 66
  },
  "type": "constant"
 },
 "sklearn.tree.tests.test_tree.CLF_CRITERIONS": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "sklearn.tree.tests.test_tree.CLF_TREES": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "sklearn.tree.tests.test_tree.DATASETS": {
  "data": {
   "lineno": 140
  },
  "type": "constant"
 },
 "sklearn.tree.tests.test_tree.DecisionTreeClassifier": {
  "data": {
   "shadows": "sklearn.tree.DecisionTreeClassifier"
  },
  "type": "import"
 },
 "sklearn.tree.tests.test_tree.DecisionTreeRegressor": {
  "data": {
   "shadows": "sklearn.tree.DecisionTreeRegressor"
  },
  "type": "import"
 },
 "sklearn.tree.tests.test_tree.ExtraTreeClassifier": {
  "data": {
   "shadows": "sklearn.tree.ExtraTreeClassifier"
  },
  "type": "import"
 },
 "sklearn.tree.tests.test_tree.ExtraTreeRegressor": {
  "data": {
   "shadows": "sklearn.tree.ExtraTreeRegressor"
  },
  "type": "import"
 },
 "sklearn.tree.tests.test_tree.NotFittedError": {
  "data": {
   "shadows": "sklearn.utils.validation.NotFittedError"
  },
  "type": "import"
 },
 "sklearn.tree.tests.test_tree.REG_CRITERIONS": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "sklearn.tree.tests.test_tree.REG_TREES": {
  "data": {
   "lineno": 59
  },
  "type": "constant"
 },
 "sklearn.tree.tests.test_tree.SPARSE_SPLITTERS": {
  "data": {
   "shadows": "sklearn.tree.tree.SPARSE_SPLITTERS"
  },
  "type": "import"
 },
 "sklearn.tree.tests.test_tree.SPARSE_TREES": {
  "data": {
   "lineno": 70
  },
  "type": "constant"
 },
 "sklearn.tree.tests.test_tree.T": {
  "data": {
   "lineno": 107
  },
  "type": "constant"
 },
 "sklearn.tree.tests.test_tree.TREE_LEAF": {
  "data": {
   "shadows": "sklearn.tree._tree.TREE_LEAF"
  },
  "type": "import"
 },
 "sklearn.tree.tests.test_tree.X": {
  "data": {
   "lineno": 105
  },
  "type": "constant"
 },
 "sklearn.tree.tests.test_tree.X_small": {
  "data": {
   "lineno": 74
  },
  "type": "constant"
 },
 "sklearn.tree.tests.test_tree.X_sparse_mix": {
  "data": {
   "lineno": 137
  },
  "type": "constant"
 },
 "sklearn.tree.tests.test_tree.X_sparse_pos": {
  "data": {
   "lineno": 134
  },
  "type": "constant"
 },
 "sklearn.tree.tests.test_tree._balance_weights": {
  "data": {
   "shadows": "sklearn.preprocessing._weights._balance_weights"
  },
  "type": "import"
 },
 "sklearn.tree.tests.test_tree._check_min_weight_leaf_split_level": {
  "data": {
   "lineno": 1256,
   "symbols_in_volume": [
    "TreeEstimator",
    "sklearn.tree.tests.test_tree.X",
    "sklearn.tree.tests.test_tree.y",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.tests.test_tree._realloc_test": {
  "data": {
   "shadows": "sklearn.tree._utils._realloc_test"
  },
  "type": "import"
 },
 "sklearn.tree.tests.test_tree.accuracy_score": {
  "data": {
   "shadows": "sklearn.metrics.accuracy_score"
  },
  "type": "import"
 },
 "sklearn.tree.tests.test_tree.assert_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "sklearn.tree.tests.test_tree.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.tree.tests.test_tree.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.tree.tests.test_tree.assert_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.tree.tests.test_tree.assert_greater": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_greater"
  },
  "type": "import"
 },
 "sklearn.tree.tests.test_tree.assert_greater_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_greater_equal"
  },
  "type": "import"
 },
 "sklearn.tree.tests.test_tree.assert_in": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_in"
  },
  "type": "import"
 },
 "sklearn.tree.tests.test_tree.assert_less": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_less"
  },
  "type": "import"
 },
 "sklearn.tree.tests.test_tree.assert_raises": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.tree.tests.test_tree.assert_tree_equal": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "numpy.logical_not",
    "sklearn.tree._tree.TREE_LEAF",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.assert_true": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_true"
  },
  "type": "import"
 },
 "sklearn.tree.tests.test_tree.assert_warns": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_warns"
  },
  "type": "import"
 },
 "sklearn.tree.tests.test_tree.boston": {
  "data": {
   "lineno": 120
  },
  "type": "constant"
 },
 "sklearn.tree.tests.test_tree.check_class_weight_errors": {
  "data": {
   "lineno": 909,
   "symbols_in_volume": [
    "TreeClassifier",
    "ValueError",
    "numpy.array",
    "numpy.vstack",
    "sklearn.tree.tests.test_tree.CLF_TREES",
    "sklearn.tree.tests.test_tree.X",
    "sklearn.tree.tests.test_tree.y",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.check_class_weights": {
  "data": {
   "lineno": 861,
   "symbols_in_volume": [
    "TreeClassifier",
    "numpy.ones",
    "numpy.vstack",
    "sklearn.tree.tests.test_tree.CLF_TREES",
    "sklearn.tree.tests.test_tree.iris",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.check_explicit_sparse_zeros": {
  "data": {
   "lineno": 1169,
   "symbols_in_volume": [
    "TreeEstimator",
    "itertools.product",
    "numpy.arange",
    "numpy.array",
    "numpy.concatenate",
    "numpy.float32",
    "range",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "sklearn.tree",
    "sklearn.tree.tests.test_tree.ALL_TREES",
    "sklearn.tree.tests.test_tree.CLF_TREES",
    "sklearn.tree.tests.test_tree.X",
    "sklearn.tree.tests.test_tree.assert_tree_equal",
    "sklearn.tree.tests.test_tree.random_state",
    "sklearn.tree.tests.test_tree.y",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_greater",
    "sklearn.utils.validation.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.check_min_weight_fraction_leaf": {
  "data": {
   "lineno": 580,
   "symbols_in_volume": [
    "TreeEstimator",
    "itertools.product",
    "numpy.bincount",
    "numpy.float32",
    "numpy.linspace",
    "numpy.min",
    "numpy.sum",
    "sklearn.datasets",
    "sklearn.datasets.astype",
    "sklearn.tree.tests.test_tree.ALL_TREES",
    "sklearn.tree.tests.test_tree.DATASETS",
    "sklearn.tree.tests.test_tree.X",
    "sklearn.tree.tests.test_tree.rng",
    "sklearn.tree.tests.test_tree.y",
    "sklearn.utils.testing.assert_greater_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.check_min_weight_leaf_split_level": {
  "data": {
   "lineno": 1267,
   "symbols_in_volume": [
    "TreeEstimator",
    "numpy.array",
    "scipy.sparse.csc_matrix",
    "sklearn.tree.tests.test_tree.ALL_TREES",
    "sklearn.tree.tests.test_tree.X",
    "sklearn.tree.tests.test_tree._check_min_weight_leaf_split_level",
    "sklearn.tree.tests.test_tree.y"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.check_presort_sparse": {
  "data": {
   "lineno": 1311,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.tree.tests.test_tree.X",
    "sklearn.tree.tests.test_tree.y",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.check_public_apply": {
  "data": {
   "lineno": 1285,
   "symbols_in_volume": [
    "sklearn.tree._tree.DTYPE",
    "sklearn.tree.tests.test_tree.ALL_TREES",
    "sklearn.tree.tests.test_tree.X_small",
    "sklearn.tree.tests.test_tree.y_small",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.check_public_apply_sparse": {
  "data": {
   "lineno": 1294,
   "symbols_in_volume": [
    "scipy.sparse.csr_matrix",
    "sklearn.tree._tree.DTYPE",
    "sklearn.tree.tests.test_tree.ALL_TREES",
    "sklearn.tree.tests.test_tree.X_small",
    "sklearn.tree.tests.test_tree.y_small",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.check_raise_error_on_1d_input": {
  "data": {
   "lineno": 1235,
   "symbols_in_volume": [
    "TreeEstimator",
    "ValueError",
    "sklearn.tree.tests.test_tree.ALL_TREES",
    "sklearn.tree.tests.test_tree.X",
    "sklearn.tree.tests.test_tree.iris",
    "sklearn.tree.tests.test_tree.y",
    "sklearn.utils.testing.assert_raises",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.check_random_state": {
  "data": {
   "shadows": "sklearn.utils.validation.check_random_state"
  },
  "type": "import"
 },
 "sklearn.tree.tests.test_tree.check_sparse_criterion": {
  "data": {
   "lineno": 1142,
   "symbols_in_volume": [
    "TreeEstimator",
    "sklearn.tree",
    "sklearn.tree.tests.test_tree.ALL_TREES",
    "sklearn.tree.tests.test_tree.CLF_CRITERIONS",
    "sklearn.tree.tests.test_tree.DATASETS",
    "sklearn.tree.tests.test_tree.REG_CRITERIONS",
    "sklearn.tree.tests.test_tree.REG_TREES",
    "sklearn.tree.tests.test_tree.X",
    "sklearn.tree.tests.test_tree.assert_tree_equal",
    "sklearn.tree.tests.test_tree.y",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.check_sparse_input": {
  "data": {
   "lineno": 1035,
   "symbols_in_volume": [
    "TreeEstimator",
    "numpy.float32",
    "scipy.sparse.coo_matrix",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "sklearn.tree",
    "sklearn.tree.tests.test_tree.ALL_TREES",
    "sklearn.tree.tests.test_tree.CLF_TREES",
    "sklearn.tree.tests.test_tree.DATASETS",
    "sklearn.tree.tests.test_tree.X",
    "sklearn.tree.tests.test_tree.assert_tree_equal",
    "sklearn.tree.tests.test_tree.y",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sparse_format",
    "sparse_matrix"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.check_sparse_parameters": {
  "data": {
   "lineno": 1091,
   "symbols_in_volume": [
    "TreeEstimator",
    "sklearn.tree",
    "sklearn.tree.tests.test_tree.ALL_TREES",
    "sklearn.tree.tests.test_tree.DATASETS",
    "sklearn.tree.tests.test_tree.X",
    "sklearn.tree.tests.test_tree.assert_tree_equal",
    "sklearn.tree.tests.test_tree.y",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.coo_matrix": {
  "data": {
   "shadows": "scipy.sparse.coo_matrix"
  },
  "type": "import"
 },
 "sklearn.tree.tests.test_tree.csc_matrix": {
  "data": {
   "shadows": "scipy.sparse.csc_matrix"
  },
  "type": "import"
 },
 "sklearn.tree.tests.test_tree.csr_matrix": {
  "data": {
   "shadows": "scipy.sparse.csr_matrix"
  },
  "type": "import"
 },
 "sklearn.tree.tests.test_tree.datasets": {
  "data": {
   "shadows": "sklearn.datasets"
  },
  "type": "import"
 },
 "sklearn.tree.tests.test_tree.digits": {
  "data": {
   "lineno": 125
  },
  "type": "constant"
 },
 "sklearn.tree.tests.test_tree.ignore_warnings": {
  "data": {
   "shadows": "sklearn.utils.testing.ignore_warnings"
  },
  "type": "import"
 },
 "sklearn.tree.tests.test_tree.iris": {
  "data": {
   "lineno": 112
  },
  "type": "constant"
 },
 "sklearn.tree.tests.test_tree.mean_squared_error": {
  "data": {
   "shadows": "sklearn.metrics.mean_squared_error"
  },
  "type": "import"
 },
 "sklearn.tree.tests.test_tree.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.tree.tests.test_tree.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "sklearn.tree.tests.test_tree.perm": {
  "data": {
   "lineno": 126
  },
  "type": "constant"
 },
 "sklearn.tree.tests.test_tree.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "sklearn.tree.tests.test_tree.platform": {
  "data": {
   "shadows": "platform"
  },
  "type": "import"
 },
 "sklearn.tree.tests.test_tree.product": {
  "data": {
   "shadows": "itertools.product"
  },
  "type": "import"
 },
 "sklearn.tree.tests.test_tree.raises": {
  "data": {
   "shadows": "sklearn.utils.testing.raises"
  },
  "type": "import"
 },
 "sklearn.tree.tests.test_tree.random_state": {
  "data": {
   "lineno": 130
  },
  "type": "constant"
 },
 "sklearn.tree.tests.test_tree.rng": {
  "data": {
   "lineno": 113
  },
  "type": "constant"
 },
 "sklearn.tree.tests.test_tree.sparse_random_matrix": {
  "data": {
   "shadows": "sklearn.random_projection.sparse_random_matrix"
  },
  "type": "import"
 },
 "sklearn.tree.tests.test_tree.test_1d_input": {
  "data": {
   "lineno": 1250,
   "symbols_in_volume": [
    "sklearn.tree.tests.test_tree.ALL_TREES",
    "sklearn.tree.tests.test_tree.check_raise_error_on_1d_input",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.test_arrayrepr": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": [
    "Tree",
    "numpy.arange",
    "numpy.newaxis",
    "sklearn.tree.tests.test_tree.REG_TREES",
    "sklearn.tree.tests.test_tree.X",
    "sklearn.tree.tests.test_tree.y"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.test_arrays_persist": {
  "data": {
   "lineno": 962,
   "symbols_in_volume": [
    "getattr",
    "sklearn.tree.DecisionTreeClassifier",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.test_big_input": {
  "data": {
   "lineno": 1001,
   "symbols_in_volume": [
    "ValueError",
    "numpy.float64",
    "numpy.repeat",
    "sklearn.tree.DecisionTreeClassifier",
    "sklearn.tree.tests.test_tree.X",
    "sklearn.utils.testing.assert_in",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.test_boston": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "Tree",
    "itertools.product",
    "sklearn.metrics.mean_squared_error",
    "sklearn.tree.tests.test_tree.REG_CRITERIONS",
    "sklearn.tree.tests.test_tree.REG_TREES",
    "sklearn.tree.tests.test_tree.boston",
    "sklearn.utils.testing.assert_less"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.test_class_weight_errors": {
  "data": {
   "lineno": 928,
   "symbols_in_volume": [
    "sklearn.tree.tests.test_tree.CLF_TREES",
    "sklearn.tree.tests.test_tree.check_class_weight_errors"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.test_class_weights": {
  "data": {
   "lineno": 904,
   "symbols_in_volume": [
    "sklearn.tree.tests.test_tree.CLF_TREES",
    "sklearn.tree.tests.test_tree.check_class_weights"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.test_classes_shape": {
  "data": {
   "lineno": 714,
   "symbols_in_volume": [
    "TreeClassifier",
    "len",
    "numpy.array",
    "numpy.vstack",
    "sklearn.tree.tests.test_tree.CLF_TREES",
    "sklearn.tree.tests.test_tree.X",
    "sklearn.tree.tests.test_tree.y",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.test_classification_toy": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "Tree",
    "sklearn.tree.tests.test_tree.CLF_TREES",
    "sklearn.tree.tests.test_tree.T",
    "sklearn.tree.tests.test_tree.X",
    "sklearn.tree.tests.test_tree.true_result",
    "sklearn.tree.tests.test_tree.y",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.test_error": {
  "data": {
   "lineno": 496,
   "symbols_in_volume": [
    "TreeEstimator",
    "ValueError",
    "numpy.array",
    "numpy.asarray",
    "numpy.asfortranarray",
    "numpy.dot",
    "sklearn.tree.tests.test_tree.ALL_TREES",
    "sklearn.tree.tests.test_tree.CLF_TREES",
    "sklearn.tree.tests.test_tree.T",
    "sklearn.tree.tests.test_tree.X",
    "sklearn.tree.tests.test_tree.true_result",
    "sklearn.tree.tests.test_tree.y",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_raises",
    "sklearn.utils.validation.NotFittedError"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.test_explicit_sparse_zeros": {
  "data": {
   "lineno": 1230,
   "symbols_in_volume": [
    "sklearn.tree",
    "sklearn.tree.tests.test_tree.SPARSE_TREES",
    "sklearn.tree.tests.test_tree.check_explicit_sparse_zeros"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.test_huge_allocations": {
  "data": {
   "lineno": 1016,
   "symbols_in_volume": [
    "Exception",
    "MemoryError",
    "int",
    "numpy.random.randint",
    "numpy.random.randn",
    "sklearn.tree.DecisionTreeClassifier",
    "sklearn.tree.tests.test_tree.X",
    "sklearn.tree.tests.test_tree.platform",
    "sklearn.tree.tests.test_tree.y",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.test_importances": {
  "data": {
   "lineno": 362,
   "symbols_in_volume": [
    "DeprecationWarning",
    "Tree",
    "len",
    "numpy.sum",
    "sklearn.datasets.make_classification",
    "sklearn.tree.DecisionTreeClassifier",
    "sklearn.tree.tests.test_tree.CLF_TREES",
    "sklearn.tree.tests.test_tree.X",
    "sklearn.tree.tests.test_tree.iris",
    "sklearn.tree.tests.test_tree.y",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_less",
    "sklearn.utils.testing.assert_warns"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.test_importances_gini_equal_mse": {
  "data": {
   "lineno": 405,
   "symbols_in_volume": [
    "sklearn.datasets.make_classification",
    "sklearn.tree.DecisionTreeClassifier",
    "sklearn.tree.DecisionTreeRegressor",
    "sklearn.tree.tests.test_tree.X",
    "sklearn.tree.tests.test_tree.y",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.test_importances_raises": {
  "data": {
   "lineno": 398,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.tree.DecisionTreeClassifier",
    "sklearn.utils.testing.raises"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.test_iris": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "Tree",
    "itertools.product",
    "sklearn.metrics.accuracy_score",
    "sklearn.tree.tests.test_tree.CLF_CRITERIONS",
    "sklearn.tree.tests.test_tree.CLF_TREES",
    "sklearn.tree.tests.test_tree.iris",
    "sklearn.utils.testing.assert_greater"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.test_max_features": {
  "data": {
   "lineno": 431,
   "symbols_in_volume": [
    "TreeClassifier",
    "TreeEstimator",
    "TreeRegressor",
    "ValueError",
    "int",
    "numpy.log2",
    "numpy.sqrt",
    "sklearn.tree.tests.test_tree.ALL_TREES",
    "sklearn.tree.tests.test_tree.CLF_TREES",
    "sklearn.tree.tests.test_tree.REG_TREES",
    "sklearn.tree.tests.test_tree.X",
    "sklearn.tree.tests.test_tree.boston",
    "sklearn.tree.tests.test_tree.iris",
    "sklearn.tree.tests.test_tree.y",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.test_max_leaf_nodes": {
  "data": {
   "lineno": 933,
   "symbols_in_volume": [
    "TreeEstimator",
    "ValueError",
    "sklearn.datasets.make_hastie_10_2",
    "sklearn.tree",
    "sklearn.tree._tree.TREE_LEAF.sum",
    "sklearn.tree.children_left.sum",
    "sklearn.tree.tests.test_tree.ALL_TREES",
    "sklearn.tree.tests.test_tree.X",
    "sklearn.tree.tests.test_tree.y",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.test_max_leaf_nodes_max_depth": {
  "data": {
   "lineno": 952,
   "symbols_in_volume": [
    "TreeEstimator",
    "sklearn.datasets.make_hastie_10_2",
    "sklearn.tree",
    "sklearn.tree.max_depth",
    "sklearn.tree.tests.test_tree.ALL_TREES",
    "sklearn.tree.tests.test_tree.X",
    "sklearn.tree.tests.test_tree.y",
    "sklearn.utils.testing.assert_greater"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.test_memory_layout": {
  "data": {
   "lineno": 746,
   "symbols_in_volume": [
    "TreeEstimator",
    "itertools.product",
    "numpy.asarray",
    "numpy.ascontiguousarray",
    "numpy.float32",
    "numpy.float64",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "sklearn.tree.tests.test_tree.ALL_TREES",
    "sklearn.tree.tests.test_tree.X",
    "sklearn.tree.tests.test_tree.iris",
    "sklearn.tree.tests.test_tree.y",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.test_min_samples_leaf": {
  "data": {
   "lineno": 559,
   "symbols_in_volume": [
    "TreeEstimator",
    "numpy.asfortranarray",
    "numpy.bincount",
    "numpy.min",
    "sklearn.tree._tree.DTYPE",
    "sklearn.tree.tests.test_tree.ALL_TREES",
    "sklearn.tree.tests.test_tree.X",
    "sklearn.tree.tests.test_tree.iris",
    "sklearn.tree.tests.test_tree.y",
    "sklearn.utils.testing.assert_greater"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.test_min_weight_fraction_leaf": {
  "data": {
   "lineno": 619,
   "symbols_in_volume": [
    "sklearn.tree.tests.test_tree.ALL_TREES",
    "sklearn.tree.tests.test_tree.SPARSE_TREES",
    "sklearn.tree.tests.test_tree.check_min_weight_fraction_leaf"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.test_min_weight_leaf_split_level": {
  "data": {
   "lineno": 1280,
   "symbols_in_volume": [
    "sklearn.tree.tests.test_tree.ALL_TREES",
    "sklearn.tree.tests.test_tree.check_min_weight_leaf_split_level"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.test_multioutput": {
  "data": {
   "lineno": 658,
   "symbols_in_volume": [
    "TreeClassifier",
    "TreeRegressor",
    "len",
    "sklearn.tree.tests.test_tree.CLF_TREES",
    "sklearn.tree.tests.test_tree.REG_TREES",
    "sklearn.tree.tests.test_tree.T",
    "sklearn.tree.tests.test_tree.X",
    "sklearn.tree.tests.test_tree.y",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.test_numerical_stability": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": [
    "Tree",
    "numpy.array",
    "numpy.errstate",
    "sklearn.tree.tests.test_tree.REG_TREES",
    "sklearn.tree.tests.test_tree.X",
    "sklearn.tree.tests.test_tree.y"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.test_only_constant_features": {
  "data": {
   "lineno": 973,
   "symbols_in_volume": [
    "TreeEstimator",
    "numpy.zeros",
    "sklearn.tree.tests.test_tree.ALL_TREES",
    "sklearn.tree.tests.test_tree.X",
    "sklearn.tree.tests.test_tree.random_state",
    "sklearn.tree.tests.test_tree.y",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.validation.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.test_pickle": {
  "data": {
   "lineno": 629,
   "symbols_in_volume": [
    "TreeClassifier",
    "TreeRegressor",
    "sklearn.tree.tests.test_tree.CLF_TREES",
    "sklearn.tree.tests.test_tree.REG_TREES",
    "sklearn.tree.tests.test_tree.boston",
    "sklearn.tree.tests.test_tree.iris",
    "sklearn.tree.tests.test_tree.pickle",
    "sklearn.utils.testing.assert_equal",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.test_presort_sparse": {
  "data": {
   "lineno": 1314,
   "symbols_in_volume": [
    "itertools.product",
    "scipy.sparse.coo_matrix",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "sklearn.datasets.make_multilabel_classification",
    "sklearn.tree.DecisionTreeClassifier",
    "sklearn.tree.DecisionTreeRegressor",
    "sklearn.tree.tests.test_tree.X",
    "sklearn.tree.tests.test_tree.check_presort_sparse",
    "sklearn.tree.tests.test_tree.y",
    "sparse_matrix"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.test_probability": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "Tree",
    "numpy.argmax",
    "numpy.exp",
    "numpy.ones",
    "numpy.sum",
    "sklearn.tree.tests.test_tree.CLF_TREES",
    "sklearn.tree.tests.test_tree.iris",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.test_public_apply": {
  "data": {
   "lineno": 1303,
   "symbols_in_volume": [
    "sklearn.tree.tests.test_tree.ALL_TREES",
    "sklearn.tree.tests.test_tree.SPARSE_TREES",
    "sklearn.tree.tests.test_tree.check_public_apply",
    "sklearn.tree.tests.test_tree.check_public_apply_sparse"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.test_pure_set": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "TreeClassifier",
    "TreeRegressor",
    "sklearn.tree.tests.test_tree.CLF_TREES",
    "sklearn.tree.tests.test_tree.REG_TREES",
    "sklearn.tree.tests.test_tree.X",
    "sklearn.tree.tests.test_tree.y",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.test_realloc": {
  "data": {
   "lineno": 1011,
   "symbols_in_volume": [
    "MemoryError",
    "sklearn.tree._utils._realloc_test",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.test_regression_toy": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "Tree",
    "sklearn.tree.tests.test_tree.REG_TREES",
    "sklearn.tree.tests.test_tree.T",
    "sklearn.tree.tests.test_tree.X",
    "sklearn.tree.tests.test_tree.true_result",
    "sklearn.tree.tests.test_tree.y",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.test_sample_weight": {
  "data": {
   "lineno": 789,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.bincount",
    "numpy.newaxis",
    "numpy.ones",
    "numpy.zeros",
    "sklearn.tree.DecisionTreeClassifier",
    "sklearn.tree._tree.TREE_LEAF",
    "sklearn.tree.tests.test_tree.X",
    "sklearn.tree.tests.test_tree.iris",
    "sklearn.tree.tests.test_tree.rng",
    "sklearn.tree.tests.test_tree.y",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.test_sample_weight_invalid": {
  "data": {
   "lineno": 840,
   "symbols_in_volume": [
    "ValueError",
    "numpy.arange",
    "numpy.array",
    "numpy.newaxis",
    "numpy.ones",
    "numpy.random.rand",
    "sklearn.tree.DecisionTreeClassifier",
    "sklearn.tree.tests.test_tree.X",
    "sklearn.tree.tests.test_tree.y",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.test_sparse_criterion": {
  "data": {
   "lineno": 1162,
   "symbols_in_volume": [
    "itertools.product",
    "sklearn.tree",
    "sklearn.tree.tests.test_tree.SPARSE_TREES",
    "sklearn.tree.tests.test_tree.check_sparse_criterion"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.test_sparse_input": {
  "data": {
   "lineno": 1076,
   "symbols_in_volume": [
    "itertools.product",
    "sklearn.tree",
    "sklearn.tree.tests.test_tree.REG_TREES",
    "sklearn.tree.tests.test_tree.SPARSE_TREES",
    "sklearn.tree.tests.test_tree.check_sparse_input"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.test_sparse_parameters": {
  "data": {
   "lineno": 1135,
   "symbols_in_volume": [
    "itertools.product",
    "sklearn.tree",
    "sklearn.tree.tests.test_tree.SPARSE_TREES",
    "sklearn.tree.tests.test_tree.check_sparse_parameters"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.test_unbalanced_iris": {
  "data": {
   "lineno": 734,
   "symbols_in_volume": [
    "TreeClassifier",
    "sklearn.preprocessing._weights._balance_weights",
    "sklearn.tree.tests.test_tree.CLF_TREES",
    "sklearn.tree.tests.test_tree.iris",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.test_weighted_classification_toy": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "Tree",
    "len",
    "numpy.ones",
    "sklearn.tree.tests.test_tree.CLF_TREES",
    "sklearn.tree.tests.test_tree.T",
    "sklearn.tree.tests.test_tree.X",
    "sklearn.tree.tests.test_tree.true_result",
    "sklearn.tree.tests.test_tree.y",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.test_with_only_one_non_constant_features": {
  "data": {
   "lineno": 983,
   "symbols_in_volume": [
    "TreeEstimator",
    "numpy.array",
    "numpy.hstack",
    "numpy.ones",
    "numpy.zeros",
    "sklearn.tree.tests.test_tree.CLF_TREES",
    "sklearn.tree.tests.test_tree.REG_TREES",
    "sklearn.tree.tests.test_tree.X",
    "sklearn.tree.tests.test_tree.y",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.test_xor": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "Tree",
    "numpy.indices",
    "numpy.vstack",
    "numpy.zeros",
    "sklearn.tree.tests.test_tree.CLF_TREES",
    "sklearn.tree.tests.test_tree.X",
    "sklearn.tree.tests.test_tree.y",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.tree": {
  "data": {
   "shadows": "sklearn.tree"
  },
  "type": "import"
 },
 "sklearn.tree.tests.test_tree.true_result": {
  "data": {
   "lineno": 108
  },
  "type": "constant"
 },
 "sklearn.tree.tests.test_tree.y": {
  "data": {
   "lineno": 106
  },
  "type": "constant"
 },
 "sklearn.tree.tests.test_tree.y_random": {
  "data": {
   "lineno": 136
  },
  "type": "constant"
 },
 "sklearn.tree.tests.test_tree.y_small": {
  "data": {
   "lineno": 99
  },
  "type": "constant"
 },
 "sklearn.tree.tests.test_tree.y_small_reg": {
  "data": {
   "lineno": 101
  },
  "type": "constant"
 },
 "sklearn.tree.tree": {
  "data": {},
  "type": "module"
 },
 "sklearn.tree.tree.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "sklearn.tree.tree.BaseDecisionTree": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "abc.ABCMeta"
   ]
  },
  "type": "class"
 },
 "sklearn.tree.tree.BaseDecisionTree.__init__": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.tree.BaseDecisionTree._validate_X_predict": {
  "data": {
   "lineno": 358,
   "symbols_in_volume": [
    "NotFittedError",
    "ValueError",
    "check_array",
    "numpy.intc",
    "scipy.sparse.issparse",
    "sklearn.tree.tree.DTYPE"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.tree.BaseDecisionTree.apply": {
  "data": {
   "lineno": 431
  },
  "type": "function"
 },
 "sklearn.tree.tree.BaseDecisionTree.feature_importances_": {
  "data": {
   "lineno": 459,
   "symbols_in_volume": [
    "NotFittedError",
    "property"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.tree.BaseDecisionTree.fit": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "BestFirstTreeBuilder",
    "DepthFirstTreeBuilder",
    "Tree",
    "ValueError",
    "check_array",
    "check_classification_targets",
    "check_random_state",
    "compute_sample_weight",
    "getattr",
    "int",
    "isinstance",
    "len",
    "max",
    "numpy.argsort",
    "numpy.array",
    "numpy.ascontiguousarray",
    "numpy.asfortranarray",
    "numpy.atleast_1d",
    "numpy.copy",
    "numpy.int",
    "numpy.int32",
    "numpy.intc",
    "numpy.integer",
    "numpy.intp",
    "numpy.log2",
    "numpy.reshape",
    "numpy.sqrt",
    "numpy.sum",
    "numpy.unique",
    "numpy.zeros",
    "range",
    "scipy.sparse.issparse",
    "sklearn.tree.tree.CRITERIA_CLF",
    "sklearn.tree.tree.CRITERIA_REG",
    "sklearn.tree.tree.DENSE_SPLITTERS",
    "sklearn.tree.tree.DOUBLE",
    "sklearn.tree.tree.DTYPE",
    "sklearn.tree.tree.SPARSE_SPLITTERS",
    "sklearn.tree.tree.numbers"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.tree.BaseDecisionTree.predict": {
  "data": {
   "lineno": 380,
   "symbols_in_volume": [
    "isinstance",
    "numpy.argmax",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.tree.CRITERIA_CLF": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "sklearn.tree.tree.CRITERIA_REG": {
  "data": {
   "lineno": 59
  },
  "type": "constant"
 },
 "sklearn.tree.tree.DENSE_SPLITTERS": {
  "data": {
   "lineno": 61
  },
  "type": "constant"
 },
 "sklearn.tree.tree.DOUBLE": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "sklearn.tree.tree.DTYPE": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "sklearn.tree.tree.DecisionTreeClassifier": {
  "data": {
   "lineno": 482,
   "symbols_in_volume": [
    "sklearn.tree.tree.BaseDecisionTree"
   ]
  },
  "type": "class"
 },
 "sklearn.tree.tree.DecisionTreeClassifier.__init__": {
  "data": {
   "lineno": 623,
   "symbols_in_volume": [
    "sklearn.tree.tree.DecisionTreeClassifier",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.tree.DecisionTreeClassifier.predict_log_proba": {
  "data": {
   "lineno": 695,
   "symbols_in_volume": [
    "numpy.log",
    "range"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.tree.DecisionTreeClassifier.predict_proba": {
  "data": {
   "lineno": 648,
   "symbols_in_volume": [
    "numpy.newaxis",
    "range"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.tree.DecisionTreeRegressor": {
  "data": {
   "lineno": 724,
   "symbols_in_volume": [
    "sklearn.tree.tree.BaseDecisionTree"
   ]
  },
  "type": "class"
 },
 "sklearn.tree.tree.DecisionTreeRegressor.__init__": {
  "data": {
   "lineno": 843,
   "symbols_in_volume": [
    "sklearn.tree.tree.DecisionTreeRegressor",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.tree.ExtraTreeClassifier": {
  "data": {
   "lineno": 867,
   "symbols_in_volume": [
    "sklearn.tree.tree.DecisionTreeClassifier"
   ]
  },
  "type": "class"
 },
 "sklearn.tree.tree.ExtraTreeClassifier.__init__": {
  "data": {
   "lineno": 891,
   "symbols_in_volume": [
    "sklearn.tree.tree.ExtraTreeClassifier",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.tree.ExtraTreeRegressor": {
  "data": {
   "lineno": 915,
   "symbols_in_volume": [
    "sklearn.tree.tree.DecisionTreeRegressor"
   ]
  },
  "type": "class"
 },
 "sklearn.tree.tree.ExtraTreeRegressor.__init__": {
  "data": {
   "lineno": 939,
   "symbols_in_volume": [
    "sklearn.tree.tree.ExtraTreeRegressor",
    "super"
   ]
  },
  "type": "function"
 },
 "sklearn.tree.tree.SPARSE_SPLITTERS": {
  "data": {
   "lineno": 64
  },
  "type": "constant"
 },
 "sklearn.tree.tree.__all__": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "sklearn.tree.tree.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "sklearn.tree.tree.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sklearn.tree.tree.issparse": {
  "data": {
   "shadows": "scipy.sparse.issparse"
  },
  "type": "import"
 },
 "sklearn.tree.tree.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.tree.tree.numbers": {
  "data": {
   "shadows": "numbers"
  },
  "type": "import"
 },
 "sklearn.utils": {
  "data": {},
  "type": "module"
 },
 "sklearn.utils.ConvergenceWarning": {
  "data": {
   "lineno": 474,
   "symbols_in_volume": [
    "UserWarning"
   ]
  },
  "type": "class"
 },
 "sklearn.utils.DataDimensionalityWarning": {
  "data": {
   "lineno": 478,
   "symbols_in_volume": [
    "UserWarning"
   ]
  },
  "type": "class"
 },
 "sklearn.utils.Sequence": {
  "data": {
   "shadows": "collections.Sequence"
  },
  "type": "import"
 },
 "sklearn.utils.__all__": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "sklearn.utils._get_n_jobs": {
  "data": {
   "lineno": 425,
   "symbols_in_volume": [
    "ValueError",
    "cpu_count",
    "max"
   ]
  },
  "type": "function"
 },
 "sklearn.utils._scipy_sparse_lsqr_backport": {
  "data": {
   "symbols_in_volume": [
    "numpy.finfo",
    "numpy.float64"
   ]
  },
  "type": "module"
 },
 "sklearn.utils._scipy_sparse_lsqr_backport.__all__": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "sklearn.utils._scipy_sparse_lsqr_backport._sym_ortho": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "abs",
    "math.sqrt",
    "numpy.sign"
   ]
  },
  "type": "function"
 },
 "sklearn.utils._scipy_sparse_lsqr_backport.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "sklearn.utils._scipy_sparse_lsqr_backport.aslinearoperator": {
  "data": {
   "shadows": "scipy.sparse.linalg.interface.aslinearoperator"
  },
  "type": "import"
 },
 "sklearn.utils._scipy_sparse_lsqr_backport.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sklearn.utils._scipy_sparse_lsqr_backport.eps": {
  "data": {
   "lineno": 60
  },
  "type": "constant"
 },
 "sklearn.utils._scipy_sparse_lsqr_backport.lsqr": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "abs",
    "len",
    "math.sqrt",
    "numpy.linalg.norm",
    "numpy.zeros",
    "print",
    "scipy.sparse.linalg.interface.aslinearoperator",
    "sklearn.utils._scipy_sparse_lsqr_backport._sym_ortho",
    "sklearn.utils._scipy_sparse_lsqr_backport.eps"
   ]
  },
  "type": "function"
 },
 "sklearn.utils._scipy_sparse_lsqr_backport.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.utils._scipy_sparse_lsqr_backport.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "sklearn.utils._scipy_sparse_lsqr_backport.sqrt": {
  "data": {
   "shadows": "math.sqrt"
  },
  "type": "import"
 },
 "sklearn.utils.bench": {
  "data": {},
  "type": "module"
 },
 "sklearn.utils.bench.total_seconds": {
  "data": {
   "lineno": 6
  },
  "type": "function"
 },
 "sklearn.utils.class_weight": {
  "data": {},
  "type": "module"
 },
 "sklearn.utils.class_weight.compute_class_weight": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "DeprecationWarning",
    "LabelEncoder",
    "ValueError",
    "all",
    "bincount",
    "dict",
    "isinstance",
    "len",
    "numpy.float64",
    "numpy.in1d",
    "numpy.mean",
    "numpy.ones",
    "numpy.searchsorted",
    "sklearn.utils.class_weight.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.class_weight.compute_sample_weight": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "hasattr",
    "in1d",
    "isinstance",
    "len",
    "list",
    "numpy.atleast_1d",
    "numpy.choose",
    "numpy.float64",
    "numpy.prod",
    "numpy.reshape",
    "numpy.searchsorted",
    "numpy.unique",
    "range",
    "set",
    "sklearn.utils.class_weight.compute_class_weight"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.class_weight.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.utils.class_weight.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.utils.deprecated": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "sklearn.utils.deprecated.__call__": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "isinstance",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.deprecated.__init__": {
  "data": {
   "lineno": 50
  },
  "type": "function"
 },
 "sklearn.utils.deprecated._decorate_class": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "init",
    "init.__doc__"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.deprecated._decorate_class.wrapped": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "DeprecationWarning",
    "init",
    "sklearn.utils.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.deprecated._decorate_fun": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "fun.__dict__",
    "fun.__doc__",
    "fun.__name__"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.deprecated._decorate_fun.wrapped": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "DeprecationWarning",
    "fun",
    "sklearn.utils.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.deprecated._update_doc": {
  "data": {
   "lineno": 102
  },
  "type": "function"
 },
 "sklearn.utils.extmath": {
  "data": {
   "symbols_in_volume": [
    "functools.partial",
    "numpy.dot",
    "numpy.ravel",
    "sklearn.utils.extmath._have_blas_gemm"
   ]
  },
  "type": "module"
 },
 "sklearn.utils.extmath._deterministic_vector_sign_flip": {
  "data": {
   "lineno": 758,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.argmax",
    "numpy.newaxis",
    "numpy.sign",
    "range"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.extmath._fast_dot": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "ValueError",
    "any",
    "dot",
    "min",
    "numpy.float32",
    "numpy.float64",
    "scipy.linalg.get_blas_funcs",
    "sklearn.utils.extmath._impose_f_order",
    "sklearn.utils.extmath.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.extmath._have_blas_gemm": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "AttributeError",
    "ValueError",
    "scipy.linalg.get_blas_funcs",
    "sklearn.utils.extmath.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.extmath._impose_f_order": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "check_array"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.extmath._incremental_mean_and_var": {
  "data": {
   "lineno": 685
  },
  "type": "function"
 },
 "sklearn.utils.extmath._ravel": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "sklearn.utils.extmath.cartesian": {
  "data": {
   "lineno": 490,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "numpy.asarray",
    "numpy.empty_like",
    "numpy.indices"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.extmath.density": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "float",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.extmath.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sklearn.utils.extmath.fast_dot": {
  "data": {
   "lineno": 157
  },
  "type": "constant"
 },
 "sklearn.utils.extmath.fast_logdet": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "numpy.inf",
    "numpy.linalg.slogdet"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.extmath.issparse": {
  "data": {
   "shadows": "scipy.sparse.issparse"
  },
  "type": "import"
 },
 "sklearn.utils.extmath.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "sklearn.utils.extmath.log_logistic": {
  "data": {
   "lineno": 578,
   "symbols_in_volume": [
    "_log_logistic_sigmoid",
    "check_array",
    "numpy.atleast_2d",
    "numpy.empty_like",
    "numpy.float64",
    "numpy.squeeze"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.extmath.logsumexp": {
  "data": {
   "lineno": 322,
   "symbols_in_volume": [
    "numpy.exp",
    "numpy.log",
    "numpy.rollaxis",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.extmath.make_nonnegative": {
  "data": {
   "lineno": 672,
   "symbols_in_volume": [
    "ValueError",
    "scipy.sparse.issparse",
    "sklearn.utils.extmath.safe_min"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.extmath.norm": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "nrm2",
    "numpy.asarray",
    "scipy.linalg.get_blas_funcs"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.extmath.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.utils.extmath.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "sklearn.utils.extmath.pinvh": {
  "data": {
   "lineno": 422,
   "symbols_in_volume": [
    "abs",
    "numpy.asarray_chkfinite",
    "numpy.conjugate",
    "numpy.dot",
    "numpy.finfo",
    "numpy.max",
    "numpy.zeros_like",
    "scipy.linalg.eigh"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.extmath.randomized_range_finder": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "check_random_state",
    "scipy.linalg.qr",
    "sklearn.utils.extmath.safe_sparse_dot",
    "xrange"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.extmath.randomized_svd": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "check_random_state",
    "numpy.dot",
    "scipy.linalg.svd",
    "sklearn.utils.extmath.randomized_range_finder",
    "sklearn.utils.extmath.safe_sparse_dot",
    "sklearn.utils.extmath.svd_flip"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.extmath.row_norms": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "csr_row_norms",
    "numpy.einsum",
    "numpy.sqrt",
    "scipy.sparse.issparse"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.extmath.safe_min": {
  "data": {
   "lineno": 657,
   "symbols_in_volume": [
    "len",
    "min",
    "scipy.sparse.issparse"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.extmath.safe_sparse_dot": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "hasattr",
    "scipy.sparse.issparse",
    "sklearn.utils.extmath.fast_dot"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.extmath.softmax": {
  "data": {
   "lineno": 623,
   "symbols_in_volume": [
    "numpy.copy",
    "numpy.exp",
    "numpy.max",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.extmath.squared_norm": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "numpy.dot",
    "sklearn.utils.extmath._ravel"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.extmath.svd_flip": {
  "data": {
   "lineno": 539,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.argmax",
    "numpy.newaxis",
    "numpy.sign",
    "xrange"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.extmath.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.utils.extmath.weighted_mode": {
  "data": {
   "lineno": 348,
   "symbols_in_volume": [
    "list",
    "numpy.asarray",
    "numpy.expand_dims",
    "numpy.maximum",
    "numpy.ravel",
    "numpy.sum",
    "numpy.unique",
    "numpy.where",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.fixes": {
  "data": {
   "symbols_in_volume": [
    "AttributeError",
    "ImportError",
    "TypeError",
    "float",
    "inspect.signature",
    "numpy.__version__",
    "numpy.allclose",
    "numpy.array",
    "numpy.copy",
    "numpy.divide",
    "numpy.errstate",
    "numpy.float",
    "numpy.frombuffer",
    "numpy.isnan",
    "numpy.ndarray.astype",
    "scipy.sparse.csr_matrix",
    "scipy.special.expit",
    "sklearn.utils.fixes._parse_version",
    "sklearn.utils.fixes.np_version",
    "sklearn.utils.fixes.os",
    "sklearn.utils.fixes.scipy",
    "sklearn.utils.fixes.sp_version",
    "sklearn.utils.fixes.sys",
    "sklearn.utils.fixes.warnings"
   ]
  },
  "type": "module"
 },
 "sklearn.utils.fixes._min_or_max_axis": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "min_or_max",
    "numpy.compress",
    "numpy.diff",
    "numpy.zeros",
    "scipy.sparse.coo_matrix",
    "sklearn.utils.fixes._minor_reduce"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.fixes._minor_reduce": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "numpy.diff",
    "numpy.flatnonzero",
    "numpy.zeros_like"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.fixes._parse_version": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.fixes._sparse_min_or_max": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "ValueError",
    "min_or_max",
    "min_or_max.reduce",
    "numpy.product",
    "sklearn.utils.fixes._min_or_max_axis"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.fixes.argpartition": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "numpy.argsort"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.fixes.array_equal": {
  "data": {
   "shadows": "numpy.array_equal"
  },
  "type": "import"
 },
 "sklearn.utils.fixes.astype": {
  "data": {
   "lineno": 116
  },
  "type": "constant"
 },
 "sklearn.utils.fixes.bincount": {
  "data": {
   "shadows": "numpy.bincount"
  },
  "type": "import"
 },
 "sklearn.utils.fixes.combinations_with_replacement": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "len",
    "range",
    "reversed",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.fixes.coo_matrix": {
  "data": {
   "shadows": "scipy.sparse.coo_matrix"
  },
  "type": "import"
 },
 "sklearn.utils.fixes.divide": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.asscalar",
    "numpy.isscalar"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.fixes.errno": {
  "data": {
   "shadows": "errno"
  },
  "type": "import"
 },
 "sklearn.utils.fixes.expit": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "numpy.atleast_1d",
    "numpy.empty",
    "numpy.float64",
    "numpy.shape",
    "numpy.tanh"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.fixes.frombuffer_empty": {
  "data": {
   "lineno": 272
  },
  "type": "constant"
 },
 "sklearn.utils.fixes.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "sklearn.utils.fixes.in1d": {
  "data": {
   "shadows": "numpy.in1d"
  },
  "type": "import"
 },
 "sklearn.utils.fixes.isclose": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "all",
    "numpy.array",
    "numpy.isfinite",
    "numpy.isnan",
    "numpy.ones_like",
    "numpy.zeros_like",
    "within_tol"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.fixes.isclose.within_tol": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "abs",
    "bool",
    "numpy.errstate",
    "numpy.isscalar",
    "numpy.less_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.fixes.makedirs": {
  "data": {
   "lineno": 365,
   "symbols_in_volume": [
    "OSError",
    "sklearn.utils.fixes.errno",
    "sklearn.utils.fixes.os"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.fixes.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.utils.fixes.np_version": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "sklearn.utils.fixes.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "sklearn.utils.fixes.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "sklearn.utils.fixes.partial.__call__": {
  "data": {
   "lineno": 337
  },
  "type": "function"
 },
 "sklearn.utils.fixes.partial.__init__": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": [
    "sklearn.utils.fixes.functools"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.fixes.safe_copy": {
  "data": {
   "lineno": 77
  },
  "type": "constant"
 },
 "sklearn.utils.fixes.scipy": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "sklearn.utils.fixes.signature": {
  "data": {
   "shadows": "inspect.signature"
  },
  "type": "import"
 },
 "sklearn.utils.fixes.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.utils.fixes.sp_version": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "sklearn.utils.fixes.sparse_lsqr": {
  "data": {
   "shadows": "scipy.sparse.linalg.lsqr"
  },
  "type": "import"
 },
 "sklearn.utils.fixes.sparse_min_max": {
  "data": {
   "lineno": 184
  },
  "type": "function"
 },
 "sklearn.utils.fixes.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "sklearn.utils.fixes.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.utils.gen_batches": {
  "data": {
   "lineno": 367,
   "symbols_in_volume": [
    "int",
    "range",
    "slice"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.gen_even_slices": {
  "data": {
   "lineno": 392,
   "symbols_in_volume": [
    "ValueError",
    "min",
    "range",
    "slice"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.graph": {
  "data": {
   "symbols_in_volume": [
    "hasattr",
    "scipy.sparse",
    "scipy.sparse.connected_components"
   ]
  },
  "type": "module"
 },
 "sklearn.utils.graph._laplacian_dense": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.newaxis",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.graph._laplacian_sparse": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "len",
    "list",
    "numpy.asarray",
    "numpy.concatenate",
    "numpy.ones",
    "numpy.sqrt",
    "range",
    "scipy.sparse.coo_matrix",
    "set"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.graph.connected_components": {
  "data": {
   "lineno": 73
  },
  "type": "constant"
 },
 "sklearn.utils.graph.graph_laplacian": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "ValueError",
    "check_array",
    "numpy.float64",
    "numpy.int",
    "numpy.issubdtype",
    "numpy.uint",
    "scipy.sparse.isspmatrix",
    "sklearn.utils.graph._laplacian_dense",
    "sklearn.utils.graph._laplacian_sparse"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.graph.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.utils.graph.single_source_shortest_path_length": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "scipy.sparse.isspmatrix",
    "scipy.sparse.lil_matrix",
    "set"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.graph.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.utils.issparse": {
  "data": {
   "shadows": "scipy.sparse.issparse"
  },
  "type": "import"
 },
 "sklearn.utils.linear_assignment_": {
  "data": {},
  "type": "module"
 },
 "sklearn.utils.linear_assignment_._HungarianState": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "sklearn.utils.linear_assignment_._HungarianState.__init__": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "int",
    "numpy.atleast_2d",
    "numpy.bool",
    "numpy.ones",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.linear_assignment_._HungarianState._clear_covers": {
  "data": {
   "lineno": 107
  },
  "type": "function"
 },
 "sklearn.utils.linear_assignment_._HungarianState._find_prime_in_row": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "numpy.argmax"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.linear_assignment_._hungarian": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.where",
    "sklearn.utils.linear_assignment_._HungarianState",
    "step"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.linear_assignment_._step1": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "numpy.newaxis",
    "numpy.where",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.linear_assignment_._step3": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "numpy.any"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.linear_assignment_._step4": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "astype",
    "numpy.argmax",
    "numpy.int",
    "numpy.newaxis",
    "numpy.unravel_index"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.linear_assignment_._step5": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "numpy.argmax",
    "range",
    "sklearn.utils.linear_assignment_._step3"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.linear_assignment_._step6": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "numpy.any",
    "numpy.logical_not",
    "numpy.min",
    "sklearn.utils.linear_assignment_._step4"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.linear_assignment_.linear_assignment": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "int",
    "numpy.array",
    "sklearn.utils.linear_assignment_._hungarian"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.linear_assignment_.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.utils.metaestimators": {
  "data": {},
  "type": "module"
 },
 "sklearn.utils.metaestimators._IffHasAttrDescriptor": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "sklearn.utils.metaestimators._IffHasAttrDescriptor.__get__": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "functools.update_wrapper"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.metaestimators._IffHasAttrDescriptor.__init__": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "functools.update_wrapper",
    "operator.attrgetter"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.metaestimators.__all__": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "sklearn.utils.metaestimators.attrgetter": {
  "data": {
   "shadows": "operator.attrgetter"
  },
  "type": "import"
 },
 "sklearn.utils.metaestimators.if_delegate_has_method": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "sklearn.utils.metaestimators._IffHasAttrDescriptor"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.metaestimators.update_wrapper": {
  "data": {
   "shadows": "functools.update_wrapper"
  },
  "type": "import"
 },
 "sklearn.utils.mocking": {
  "data": {},
  "type": "module"
 },
 "sklearn.utils.mocking.ArraySlicingWrapper": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "sklearn.utils.mocking.ArraySlicingWrapper.__getitem__": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "sklearn.utils.mocking.MockDataFrame"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.mocking.ArraySlicingWrapper.__init__": {
  "data": {
   "lineno": 9
  },
  "type": "function"
 },
 "sklearn.utils.mocking.CheckingClassifier": {
  "data": {
   "lineno": 36
  },
  "type": "class"
 },
 "sklearn.utils.mocking.CheckingClassifier.__init__": {
  "data": {
   "lineno": 43
  },
  "type": "function"
 },
 "sklearn.utils.mocking.CheckingClassifier.fit": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "assert_true",
    "check_array",
    "len",
    "numpy.unique"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.mocking.CheckingClassifier.predict": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "_num_samples",
    "assert_true",
    "numpy.int",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.mocking.CheckingClassifier.score": {
  "data": {
   "lineno": 65
  },
  "type": "function"
 },
 "sklearn.utils.mocking.MockDataFrame": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "sklearn.utils.mocking.MockDataFrame.__array__": {
  "data": {
   "lineno": 29
  },
  "type": "function"
 },
 "sklearn.utils.mocking.MockDataFrame.__init__": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "sklearn.utils.mocking.ArraySlicingWrapper"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.mocking.MockDataFrame.__len__": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.mocking.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.utils.optimize": {
  "data": {},
  "type": "module"
 },
 "sklearn.utils.optimize._LineSearchError": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "RuntimeError"
   ]
  },
  "type": "class"
 },
 "sklearn.utils.optimize._cg": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "fhess_p",
    "len",
    "numpy.abs",
    "numpy.dot",
    "numpy.finfo",
    "numpy.float64",
    "numpy.sum",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.optimize._line_search_wolfe12": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "scipy.optimize.linesearch.line_search_wolfe1",
    "scipy.optimize.linesearch.line_search_wolfe2",
    "sklearn.utils.optimize._LineSearchError"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.optimize.line_search_wolfe1": {
  "data": {
   "shadows": "scipy.optimize.linesearch.line_search_wolfe1"
  },
  "type": "import"
 },
 "sklearn.utils.optimize.line_search_wolfe2": {
  "data": {
   "shadows": "scipy.optimize.linesearch.line_search_wolfe2"
  },
  "type": "import"
 },
 "sklearn.utils.optimize.newton_cg": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "fhess_p",
    "func",
    "grad_hess",
    "min",
    "numpy.abs",
    "numpy.asarray",
    "numpy.max",
    "numpy.sqrt",
    "numpy.sum",
    "sklearn.utils.optimize._LineSearchError",
    "sklearn.utils.optimize._cg",
    "sklearn.utils.optimize._line_search_wolfe12",
    "sklearn.utils.optimize.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.optimize.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.utils.optimize.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.utils.random": {
  "data": {},
  "type": "module"
 },
 "sklearn.utils.random.__all__": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "sklearn.utils.random.array": {
  "data": {
   "shadows": "array"
  },
  "type": "import"
 },
 "sklearn.utils.random.astype": {
  "data": {
   "shadows": "sklearn.utils.fixes.astype"
  },
  "type": "import"
 },
 "sklearn.utils.random.check_random_state": {
  "data": {
   "shadows": "sklearn.utils.check_random_state"
  },
  "type": "import"
 },
 "sklearn.utils.random.choice": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "isinstance",
    "numpy.allclose",
    "numpy.any",
    "numpy.array",
    "numpy.cumsum",
    "numpy.double",
    "numpy.empty",
    "numpy.int",
    "numpy.intp",
    "numpy.ndarray",
    "numpy.prod",
    "numpy.sum",
    "numpy.unique",
    "numpy.zeros",
    "sklearn.utils.check_random_state",
    "sklearn.utils.random.operator"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.random.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sklearn.utils.random.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.utils.random.operator": {
  "data": {
   "shadows": "operator"
  },
  "type": "import"
 },
 "sklearn.utils.random.random_choice_csc": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "len",
    "numpy.asarray",
    "numpy.empty",
    "numpy.insert",
    "numpy.int64",
    "numpy.searchsorted",
    "numpy.sum",
    "range",
    "sample_without_replacement",
    "scipy.sparse.csc_matrix",
    "sklearn.utils.check_random_state",
    "sklearn.utils.fixes.astype",
    "sklearn.utils.random.array"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.random.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.utils.resample": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "ValueError",
    "check_consistent_length",
    "check_random_state",
    "hasattr",
    "len",
    "numpy.arange",
    "scipy.sparse.issparse",
    "sklearn.utils.safe_indexing"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.safe_indexing": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "ValueError",
    "hasattr",
    "sklearn.utils.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.safe_mask": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "hasattr",
    "numpy.arange",
    "numpy.asarray",
    "numpy.int",
    "numpy.issubdtype"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.safe_sqr": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": [
    "check_array",
    "scipy.sparse.issparse"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.setup": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.distutils.core.setup",
    "sklearn.utils.setup.configuration"
   ]
  },
  "type": "module"
 },
 "sklearn.utils.setup.Configuration": {
  "data": {
   "shadows": "numpy.distutils.misc_util.Configuration"
  },
  "type": "import"
 },
 "sklearn.utils.setup.configuration": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "numpy.distutils.misc_util.Configuration",
    "os.path.join",
    "sklearn._build_utils.get_blas_info",
    "sklearn.utils.setup.numpy",
    "sklearn.utils.setup.os"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.setup.get_blas_info": {
  "data": {
   "shadows": "sklearn._build_utils.get_blas_info"
  },
  "type": "import"
 },
 "sklearn.utils.setup.join": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "sklearn.utils.setup.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.utils.setup.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "sklearn.utils.setup.setup": {
  "data": {
   "shadows": "numpy.distutils.core.setup"
  },
  "type": "import"
 },
 "sklearn.utils.shuffle": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "sklearn.utils.resample"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.sparsefuncs": {
  "data": {},
  "type": "module"
 },
 "sklearn.utils.sparsefuncs._csc_mean_var_axis0": {
  "data": {
   "shadows": "csc_mean_variance_axis0"
  },
  "type": "import"
 },
 "sklearn.utils.sparsefuncs._csr_mean_var_axis0": {
  "data": {
   "shadows": "csr_mean_variance_axis0"
  },
  "type": "import"
 },
 "sklearn.utils.sparsefuncs._get_elem_at_rank": {
  "data": {
   "lineno": 432
  },
  "type": "function"
 },
 "sklearn.utils.sparsefuncs._get_median": {
  "data": {
   "lineno": 413,
   "symbols_in_volume": [
    "divmod",
    "len",
    "numpy.count_nonzero",
    "numpy.nan",
    "sklearn.utils.sparsefuncs._get_elem_at_rank"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.sparsefuncs._incr_mean_var_axis0": {
  "data": {
   "shadows": "incr_mean_variance_axis0"
  },
  "type": "import"
 },
 "sklearn.utils.sparsefuncs._raise_error_wrong_axis": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.sparsefuncs._raise_typeerror": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "TypeError",
    "scipy.sparse.issparse",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.sparsefuncs.count_nonzero": {
  "data": {
   "lineno": 365,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "bincount",
    "numpy.diff",
    "numpy.dot",
    "numpy.repeat"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.sparsefuncs.csc_median_axis_0": {
  "data": {
   "lineno": 441,
   "symbols_in_volume": [
    "TypeError",
    "enumerate",
    "isinstance",
    "numpy.copy",
    "numpy.zeros",
    "scipy.sparse.csc_matrix",
    "sklearn.utils.sparsefuncs._get_median",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.sparsefuncs.incr_mean_variance_axis": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "isinstance",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "sklearn.utils.sparsefuncs._raise_error_wrong_axis",
    "sklearn.utils.sparsefuncs._raise_typeerror"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.sparsefuncs.inplace_column_scale": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "isinstance",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "sklearn.utils.sparsefuncs._raise_typeerror",
    "sklearn.utils.sparsefuncs.inplace_csr_column_scale",
    "sklearn.utils.sparsefuncs.inplace_csr_row_scale"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.sparsefuncs.inplace_csr_column_scale": {
  "data": {
   "lineno": 29
  },
  "type": "function"
 },
 "sklearn.utils.sparsefuncs.inplace_csr_row_scale": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "numpy.diff",
    "numpy.repeat"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.sparsefuncs.inplace_row_scale": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "isinstance",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "sklearn.utils.sparsefuncs._raise_typeerror",
    "sklearn.utils.sparsefuncs.inplace_csr_column_scale",
    "sklearn.utils.sparsefuncs.inplace_csr_row_scale"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.sparsefuncs.inplace_swap_column": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": [
    "isinstance",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "sklearn.utils.sparsefuncs._raise_typeerror",
    "sklearn.utils.sparsefuncs.inplace_swap_row_csc",
    "sklearn.utils.sparsefuncs.inplace_swap_row_csr"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.sparsefuncs.inplace_swap_row": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "isinstance",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "sklearn.utils.sparsefuncs._raise_typeerror",
    "sklearn.utils.sparsefuncs.inplace_swap_row_csc",
    "sklearn.utils.sparsefuncs.inplace_swap_row_csr"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.sparsefuncs.inplace_swap_row_csc": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.sparsefuncs.inplace_swap_row_csr": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "numpy.concatenate",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.sparsefuncs.mean_variance_axis": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "isinstance",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "sklearn.utils.sparsefuncs._raise_error_wrong_axis",
    "sklearn.utils.sparsefuncs._raise_typeerror"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.sparsefuncs.min_max_axis": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": [
    "isinstance",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "sklearn.utils.sparsefuncs._raise_typeerror",
    "sparse_min_max"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.sparsefuncs.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.utils.sparsefuncs.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.utils.sparsetools": {
  "data": {},
  "type": "module"
 },
 "sklearn.utils.sparsetools.__all__": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "sklearn.utils.sparsetools._graph_validation": {
  "data": {
   "symbols_in_volume": [
    "numpy.float64"
   ]
  },
  "type": "module"
 },
 "sklearn.utils.sparsetools._graph_validation.DTYPE": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "sklearn.utils.sparsetools._graph_validation.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "sklearn.utils.sparsetools._graph_validation.csr_matrix": {
  "data": {
   "shadows": "scipy.sparse.csr_matrix"
  },
  "type": "import"
 },
 "sklearn.utils.sparsetools._graph_validation.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sklearn.utils.sparsetools._graph_validation.isspmatrix": {
  "data": {
   "shadows": "scipy.sparse.isspmatrix"
  },
  "type": "import"
 },
 "sklearn.utils.sparsetools._graph_validation.isspmatrix_csc": {
  "data": {
   "shadows": "scipy.sparse.isspmatrix_csc"
  },
  "type": "import"
 },
 "sklearn.utils.sparsetools._graph_validation.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.utils.sparsetools._graph_validation.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "sklearn.utils.sparsetools._graph_validation.validate_graph": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "ValueError",
    "csgraph_from_dense",
    "csgraph_from_masked",
    "csgraph_masked_from_dense",
    "csgraph_to_dense",
    "numpy.array",
    "numpy.asarray",
    "numpy.inf",
    "numpy.ma.is_masked",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.isspmatrix",
    "scipy.sparse.isspmatrix_csc",
    "sklearn.utils.sparsetools._graph_validation.DTYPE"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.sparsetools.setup": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.distutils.core.setup",
    "sklearn.utils.sparsetools.setup.configuration"
   ]
  },
  "type": "module"
 },
 "sklearn.utils.sparsetools.setup.Configuration": {
  "data": {
   "shadows": "numpy.distutils.misc_util.Configuration"
  },
  "type": "import"
 },
 "sklearn.utils.sparsetools.setup.configuration": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "numpy.distutils.misc_util.Configuration",
    "sklearn.utils.sparsetools.setup.numpy"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.sparsetools.setup.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.utils.sparsetools.setup.setup": {
  "data": {
   "shadows": "numpy.distutils.core.setup"
  },
  "type": "import"
 },
 "sklearn.utils.stats": {
  "data": {
   "symbols_in_volume": [
    "TypeError",
    "scipy.stats.rankdata",
    "sklearn.utils.stats._rankdata"
   ]
  },
  "type": "module"
 },
 "sklearn.utils.stats._rankdata": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "NotImplementedError",
    "bincount",
    "numpy.unique"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.stats._sp_rankdata": {
  "data": {
   "shadows": "scipy.stats.rankdata"
  },
  "type": "import"
 },
 "sklearn.utils.stats._weighted_percentile": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "numpy.argsort",
    "numpy.searchsorted"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.stats.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.utils.stats.rankdata": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "sklearn.utils.tests": {
  "data": {},
  "type": "module"
 },
 "sklearn.utils.tests.test_bench": {
  "data": {},
  "type": "module"
 },
 "sklearn.utils.tests.test_bench.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_bench.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_bench.test_total_seconds": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "nose.tools.assert_equal",
    "sklearn.utils.bench.total_seconds",
    "sklearn.utils.tests.test_bench.datetime"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_bench.total_seconds": {
  "data": {
   "shadows": "sklearn.utils.bench.total_seconds"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_class_weight": {
  "data": {},
  "type": "module"
 },
 "sklearn.utils.tests.test_class_weight.LogisticRegression": {
  "data": {
   "shadows": "sklearn.linear_model.LogisticRegression"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_class_weight.assert_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_class_weight.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_class_weight.assert_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_class_weight.assert_raise_message": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raise_message"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_class_weight.assert_raises": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_class_weight.assert_true": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_true"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_class_weight.assert_warns": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_warns"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_class_weight.compute_class_weight": {
  "data": {
   "shadows": "sklearn.utils.class_weight.compute_class_weight"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_class_weight.compute_sample_weight": {
  "data": {
   "shadows": "sklearn.utils.class_weight.compute_sample_weight"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_class_weight.make_blobs": {
  "data": {
   "shadows": "sklearn.datasets.make_blobs"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_class_weight.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_class_weight.test_compute_class_weight": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "DeprecationWarning",
    "numpy.asarray",
    "numpy.bincount",
    "numpy.dot",
    "numpy.unique",
    "sklearn.utils.class_weight.compute_class_weight",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_true",
    "sklearn.utils.testing.assert_warns"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_class_weight.test_compute_class_weight_auto_negative": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "DeprecationWarning",
    "len",
    "numpy.array",
    "numpy.asarray",
    "numpy.bincount",
    "numpy.dot",
    "sklearn.utils.class_weight.compute_class_weight",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_warns"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_class_weight.test_compute_class_weight_auto_unordered": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "DeprecationWarning",
    "len",
    "numpy.array",
    "numpy.asarray",
    "numpy.bincount",
    "numpy.dot",
    "sklearn.utils.class_weight.compute_class_weight",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_warns"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_class_weight.test_compute_class_weight_dict": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "ValueError",
    "numpy.arange",
    "numpy.asarray",
    "sklearn.utils.class_weight.compute_class_weight",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_class_weight.test_compute_class_weight_invariance": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "numpy.hstack",
    "numpy.vstack",
    "sklearn.datasets.make_blobs",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_class_weight.test_compute_class_weight_not_present": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "ValueError",
    "numpy.arange",
    "numpy.asarray",
    "sklearn.utils.class_weight.compute_class_weight",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_class_weight.test_compute_sample_weight": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "DeprecationWarning",
    "numpy.array",
    "numpy.asarray",
    "sklearn.utils.class_weight.compute_sample_weight",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_warns"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_class_weight.test_compute_sample_weight_errors": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "ValueError",
    "numpy.asarray",
    "range",
    "sklearn.utils.class_weight.compute_sample_weight",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_class_weight.test_compute_sample_weight_with_subsample": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "DeprecationWarning",
    "numpy.asarray",
    "range",
    "sklearn.utils.class_weight.compute_sample_weight",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_warns"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks": {
  "data": {},
  "type": "module"
 },
 "sklearn.utils.tests.test_estimator_checks.AdaBoostClassifier": {
  "data": {
   "shadows": "sklearn.ensemble.AdaBoostClassifier"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_estimator_checks.BaseBadClassifier": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator",
    "sklearn.base.ClassifierMixin"
   ]
  },
  "type": "class"
 },
 "sklearn.utils.tests.test_estimator_checks.BaseBadClassifier.fit": {
  "data": {
   "lineno": 23
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks.BaseBadClassifier.predict": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_estimator_checks.ClassifierMixin": {
  "data": {
   "shadows": "sklearn.base.ClassifierMixin"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_estimator_checks.CorrectNotFittedError": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "class"
 },
 "sklearn.utils.tests.test_estimator_checks.CorrectNotFittedErrorClassifier": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "sklearn.utils.tests.test_estimator_checks.BaseBadClassifier"
   ]
  },
  "type": "class"
 },
 "sklearn.utils.tests.test_estimator_checks.CorrectNotFittedErrorClassifier.fit": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "numpy.ones",
    "sklearn.utils.validation.check_X_y"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks.CorrectNotFittedErrorClassifier.predict": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "hasattr",
    "numpy.ones",
    "sklearn.utils.tests.test_estimator_checks.CorrectNotFittedError",
    "sklearn.utils.validation.check_array"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks.NoCheckinPredict": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "sklearn.utils.tests.test_estimator_checks.BaseBadClassifier"
   ]
  },
  "type": "class"
 },
 "sklearn.utils.tests.test_estimator_checks.NoCheckinPredict.fit": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "sklearn.utils.validation.check_X_y"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks.NoSparseClassifier": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "sklearn.utils.tests.test_estimator_checks.BaseBadClassifier"
   ]
  },
  "type": "class"
 },
 "sklearn.utils.tests.test_estimator_checks.NoSparseClassifier.fit": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "ValueError",
    "scipy.sparse.issparse",
    "sklearn.utils.validation.check_X_y"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks.NoSparseClassifier.predict": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "numpy.ones",
    "sklearn.utils.validation.check_array"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks.StringIO": {
  "data": {
   "shadows": "sklearn.externals.six.moves.cStringIO"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_estimator_checks.assert_raises_regex": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises_regex"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_estimator_checks.assert_true": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_true"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_estimator_checks.check_X_y": {
  "data": {
   "shadows": "sklearn.utils.validation.check_X_y"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_estimator_checks.check_array": {
  "data": {
   "shadows": "sklearn.utils.validation.check_array"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_estimator_checks.check_estimator": {
  "data": {
   "shadows": "sklearn.utils.estimator_checks.check_estimator"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_estimator_checks.check_estimators_unfitted": {
  "data": {
   "shadows": "sklearn.utils.estimator_checks.check_estimators_unfitted"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_estimator_checks.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_estimator_checks.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_estimator_checks.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_estimator_checks.test_check_estimator": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "AssertionError",
    "AttributeError",
    "TypeError",
    "object",
    "sklearn.base.BaseEstimator",
    "sklearn.ensemble.AdaBoostClassifier",
    "sklearn.externals.six.moves.cStringIO",
    "sklearn.utils.estimator_checks.check_estimator",
    "sklearn.utils.testing.assert_raises_regex",
    "sklearn.utils.testing.assert_true",
    "sklearn.utils.tests.test_estimator_checks.BaseBadClassifier",
    "sklearn.utils.tests.test_estimator_checks.NoCheckinPredict",
    "sklearn.utils.tests.test_estimator_checks.NoSparseClassifier",
    "sklearn.utils.tests.test_estimator_checks.sys"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks.test_check_estimators_unfitted": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "AssertionError",
    "sklearn.utils.estimator_checks.check_estimators_unfitted",
    "sklearn.utils.testing.assert_raises_regex",
    "sklearn.utils.tests.test_estimator_checks.CorrectNotFittedErrorClassifier",
    "sklearn.utils.tests.test_estimator_checks.NoSparseClassifier"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_extmath": {
  "data": {},
  "type": "module"
 },
 "sklearn.utils.tests.test_extmath._deterministic_vector_sign_flip": {
  "data": {
   "shadows": "sklearn.utils.extmath._deterministic_vector_sign_flip"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_extmath._fast_dot": {
  "data": {
   "shadows": "sklearn.utils.extmath._fast_dot"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_extmath._incremental_mean_and_var": {
  "data": {
   "shadows": "sklearn.utils.extmath._incremental_mean_and_var"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_extmath.assert_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_extmath.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_extmath.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_extmath.assert_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_extmath.assert_false": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_false"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_extmath.assert_greater": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_greater"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_extmath.assert_raises": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_extmath.assert_true": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_true"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_extmath.cartesian": {
  "data": {
   "shadows": "sklearn.utils.extmath.cartesian"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_extmath.density": {
  "data": {
   "shadows": "sklearn.utils.extmath.density"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_extmath.fast_dot": {
  "data": {
   "shadows": "sklearn.utils.extmath.fast_dot"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_extmath.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_extmath.log_logistic": {
  "data": {
   "shadows": "sklearn.utils.extmath.log_logistic"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_extmath.logsumexp": {
  "data": {
   "shadows": "sklearn.utils.extmath.logsumexp"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_extmath.make_low_rank_matrix": {
  "data": {
   "shadows": "sklearn.datasets.samples_generator.make_low_rank_matrix"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_extmath.norm": {
  "data": {
   "shadows": "sklearn.utils.extmath.norm"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_extmath.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_extmath.randomized_svd": {
  "data": {
   "shadows": "sklearn.utils.extmath.randomized_svd"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_extmath.row_norms": {
  "data": {
   "shadows": "sklearn.utils.extmath.row_norms"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_extmath.skip_if_32bit": {
  "data": {
   "shadows": "sklearn.utils.testing.skip_if_32bit"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_extmath.softmax": {
  "data": {
   "shadows": "sklearn.utils.extmath.softmax"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_extmath.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_extmath.squared_norm": {
  "data": {
   "shadows": "sklearn.utils.extmath.squared_norm"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_extmath.stats": {
  "data": {
   "shadows": "scipy.stats"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_extmath.svd_flip": {
  "data": {
   "shadows": "sklearn.utils.extmath.svd_flip"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_extmath.test_cartesian": {
  "data": {
   "lineno": 322,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "numpy.newaxis",
    "sklearn.utils.extmath.cartesian",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_extmath.test_density": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "scipy.sparse.coo_matrix",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.lil_matrix",
    "sklearn.utils.extmath.density",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_extmath.test_fast_dot": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": [
    "AttributeError",
    "ValueError",
    "numpy.array",
    "numpy.dot",
    "numpy.empty",
    "numpy.inf",
    "numpy.nan",
    "numpy.random.RandomState",
    "scipy.linalg.get_blas_funcs",
    "sklearn.utils.extmath._fast_dot",
    "sklearn.utils.extmath.fast_dot",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_extmath.test_incremental_variance_ddof": {
  "data": {
   "lineno": 539,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.hstack",
    "numpy.mean",
    "numpy.random.RandomState",
    "numpy.var",
    "sklearn.utils.extmath._incremental_mean_and_var",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_equal",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_extmath.test_incremental_variance_numerical_stability": {
  "data": {
   "lineno": 460,
   "symbols_in_volume": [
    "naive_mean_variance_update",
    "np_var",
    "numpy.abs",
    "numpy.array",
    "numpy.float64",
    "numpy.log",
    "numpy.ones",
    "numpy.vstack",
    "numpy.zeros",
    "one_pass_var",
    "range",
    "sklearn.utils.extmath._incremental_mean_and_var",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_greater",
    "sklearn.utils.testing.skip_if_32bit",
    "stable_var",
    "two_pass_var"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_extmath.test_incremental_variance_numerical_stability.naive_mean_variance_update": {
  "data": {
   "lineno": 486,
   "symbols_in_volume": [
    "float"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_extmath.test_incremental_variance_numerical_stability.np_var": {
  "data": {
   "lineno": 464
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_extmath.test_incremental_variance_numerical_stability.one_pass_var": {
  "data": {
   "lineno": 469
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_extmath.test_incremental_variance_numerical_stability.two_pass_var": {
  "data": {
   "lineno": 478,
   "symbols_in_volume": [
    "numpy.mean"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_extmath.test_incremental_variance_update_formulas": {
  "data": {
   "lineno": 438,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.utils.extmath._incremental_mean_and_var",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_extmath.test_logistic_sigmoid": {
  "data": {
   "lineno": 348,
   "symbols_in_volume": [
    "naive_log_logistic",
    "naive_logistic",
    "numpy.array",
    "numpy.exp",
    "numpy.linspace",
    "numpy.log",
    "sklearn.utils.extmath.log_logistic",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_extmath.test_logsumexp": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.exp",
    "numpy.log",
    "numpy.vstack",
    "sklearn.utils.extmath.logsumexp",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_extmath.test_norm_squared_norm": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "numpy.linalg.norm",
    "numpy.random.RandomState",
    "numpy.sqrt",
    "sklearn.utils.extmath.norm",
    "sklearn.utils.extmath.squared_norm",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_extmath.test_random_weights": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "sklearn.utils.extmath.weighted_mode",
    "sklearn.utils.testing.assert_array_almost_equal",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_extmath.test_randomized_svd_infinite_rank": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "numpy.abs",
    "scipy.linalg.svd",
    "sklearn.datasets.samples_generator.make_low_rank_matrix",
    "sklearn.utils.extmath.randomized_svd",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_greater"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_extmath.test_randomized_svd_low_rank": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "numpy.dot",
    "scipy.linalg.svd",
    "scipy.sparse.csr_matrix",
    "sklearn.datasets.samples_generator.make_low_rank_matrix",
    "sklearn.utils.extmath.randomized_svd",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_extmath.test_randomized_svd_low_rank_with_noise": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "numpy.abs",
    "scipy.linalg.svd",
    "sklearn.datasets.samples_generator.make_low_rank_matrix",
    "sklearn.utils.extmath.randomized_svd",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_greater"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_extmath.test_randomized_svd_sign_flip": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.dot",
    "numpy.eye",
    "range",
    "sklearn.utils.extmath.randomized_svd",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_extmath.test_randomized_svd_sign_flip_with_transpose": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "max_loading_is_positive",
    "numpy.arange",
    "sklearn.utils.extmath.randomized_svd",
    "sklearn.utils.testing.assert_false",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_extmath.test_randomized_svd_sign_flip_with_transpose.max_loading_is_positive": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": [
    "numpy.abs"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_extmath.test_randomized_svd_transpose_consistency": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "numpy.dot",
    "scipy.linalg.svd",
    "sklearn.datasets.samples_generator.make_low_rank_matrix",
    "sklearn.utils.extmath.randomized_svd",
    "sklearn.utils.testing.assert_almost_equal",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_extmath.test_row_norms": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.random.RandomState",
    "numpy.sqrt",
    "scipy.sparse.csr_matrix",
    "sklearn.utils.extmath.row_norms",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_extmath.test_softmax": {
  "data": {
   "lineno": 584,
   "symbols_in_volume": [
    "numpy.exp",
    "numpy.random.RandomState",
    "numpy.sum",
    "sklearn.utils.extmath.softmax",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_extmath.test_svd_flip": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.random.RandomState",
    "scipy.linalg.svd",
    "sklearn.utils.extmath.svd_flip",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_extmath.test_uniform_weights": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.ones",
    "numpy.random.RandomState",
    "scipy.stats.mode",
    "sklearn.utils.extmath.weighted_mode",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_extmath.test_vector_sign_flip": {
  "data": {
   "lineno": 573,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.argmax",
    "numpy.newaxis",
    "numpy.random.RandomState",
    "numpy.sign",
    "range",
    "sklearn.utils.extmath._deterministic_vector_sign_flip",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_extmath.weighted_mode": {
  "data": {
   "shadows": "sklearn.utils.extmath.weighted_mode"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_fast_dict": {
  "data": {},
  "type": "module"
 },
 "sklearn.utils.tests.test_fast_dict.IntFloatDict": {
  "data": {
   "shadows": "sklearn.utils.fast_dict.IntFloatDict"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_fast_dict.argmin": {
  "data": {
   "shadows": "sklearn.utils.fast_dict.argmin"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_fast_dict.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_fast_dict.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_fast_dict.test_int_float_dict": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "len",
    "nose.tools.assert_equal",
    "numpy.intp",
    "numpy.random.RandomState",
    "numpy.unique",
    "sklearn.externals.six.moves.xrange",
    "sklearn.utils.fast_dict.IntFloatDict",
    "zip"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_fast_dict.test_int_float_dict_argmin": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "nose.tools.assert_equal",
    "numpy.arange",
    "numpy.float",
    "numpy.intp",
    "sklearn.utils.fast_dict.IntFloatDict",
    "sklearn.utils.fast_dict.argmin"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_fast_dict.xrange": {
  "data": {
   "shadows": "sklearn.externals.six.moves.xrange"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_fixes": {
  "data": {},
  "type": "module"
 },
 "sklearn.utils.tests.test_fixes.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_fixes.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_fixes.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_fixes.assert_false": {
  "data": {
   "shadows": "nose.tools.assert_false"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_fixes.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_fixes.astype": {
  "data": {
   "shadows": "sklearn.utils.fixes.astype"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_fixes.divide": {
  "data": {
   "shadows": "sklearn.utils.fixes.divide"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_fixes.expit": {
  "data": {
   "shadows": "sklearn.utils.fixes.expit"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_fixes.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_fixes.test_astype_copy_memory": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "nose.tools.assert_equal",
    "nose.tools.assert_false",
    "nose.tools.assert_true",
    "numpy.float32",
    "numpy.int32",
    "numpy.may_share_memory",
    "numpy.ones",
    "sklearn.utils.fixes.astype"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_fixes.test_divide": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "nose.tools.assert_equal",
    "sklearn.utils.fixes.divide"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_fixes.test_expit": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.exp",
    "numpy.float32",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_array_almost_equal",
    "numpy.zeros_like",
    "sklearn.utils.fixes.expit"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_graph": {
  "data": {},
  "type": "module"
 },
 "sklearn.utils.tests.test_graph.graph_laplacian": {
  "data": {
   "shadows": "sklearn.utils.graph.graph_laplacian"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_graph.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_graph.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_graph.test_graph_laplacian": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.eye",
    "numpy.newaxis",
    "numpy.ones",
    "numpy.testing.assert_array_almost_equal",
    "numpy.vander",
    "numpy.zeros",
    "scipy.sparse.csr_matrix",
    "sklearn.utils.graph.graph_laplacian"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_linear_assignment": {
  "data": {},
  "type": "module"
 },
 "sklearn.utils.tests.test_linear_assignment._hungarian": {
  "data": {
   "shadows": "sklearn.utils.linear_assignment_._hungarian"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_linear_assignment.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_linear_assignment.test_hungarian": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.utils.linear_assignment_._hungarian"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_metaestimators": {
  "data": {},
  "type": "module"
 },
 "sklearn.utils.tests.test_metaestimators.MockMetaEstimator": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "object",
    "sklearn.utils.tests.test_metaestimators.Prefix"
   ]
  },
  "type": "class"
 },
 "sklearn.utils.tests.test_metaestimators.MockMetaEstimator.func": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "sklearn.utils.metaestimators.if_delegate_has_method"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_metaestimators.Prefix": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "sklearn.utils.tests.test_metaestimators.Prefix.func": {
  "data": {
   "lineno": 6
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_metaestimators.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_metaestimators.if_delegate_has_method": {
  "data": {
   "shadows": "sklearn.utils.metaestimators.if_delegate_has_method"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_metaestimators.test_delegated_docstring": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "nose.tools.assert_true",
    "sklearn.utils.tests.test_metaestimators.MockMetaEstimator",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_multiclass": {
  "data": {
   "symbols_in_volume": [
    "frozenset",
    "numpy.array",
    "numpy.bool",
    "numpy.float",
    "numpy.float32",
    "numpy.int8",
    "numpy.random.RandomState",
    "numpy.uint8",
    "object",
    "scipy.sparse.csr_matrix",
    "set",
    "sklearn.utils.tests.test_multiclass.NotAnArray"
   ]
  },
  "type": "module"
 },
 "sklearn.utils.tests.test_multiclass.EXAMPLES": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "sklearn.utils.tests.test_multiclass.MULTILABEL_SEQUENCES": {
  "data": {
   "lineno": 150
  },
  "type": "constant"
 },
 "sklearn.utils.tests.test_multiclass.NON_ARRAY_LIKE_EXAMPLES": {
  "data": {
   "lineno": 141
  },
  "type": "constant"
 },
 "sklearn.utils.tests.test_multiclass.NotAnArray": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "sklearn.utils.tests.test_multiclass.NotAnArray.__array__": {
  "data": {
   "lineno": 39
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_multiclass.NotAnArray.__init__": {
  "data": {
   "lineno": 36
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_multiclass.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_multiclass.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_multiclass.assert_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_multiclass.assert_false": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_false"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_multiclass.assert_raises": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_multiclass.assert_raises_regex": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises_regex"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_multiclass.assert_true": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_true"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_multiclass.check_classification_targets": {
  "data": {
   "shadows": "sklearn.utils.multiclass.check_classification_targets"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_multiclass.class_distribution": {
  "data": {
   "shadows": "sklearn.utils.multiclass.class_distribution"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_multiclass.coo_matrix": {
  "data": {
   "shadows": "scipy.sparse.coo_matrix"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_multiclass.csc_matrix": {
  "data": {
   "shadows": "scipy.sparse.csc_matrix"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_multiclass.csr_matrix": {
  "data": {
   "shadows": "scipy.sparse.csr_matrix"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_multiclass.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_multiclass.dok_matrix": {
  "data": {
   "shadows": "scipy.sparse.dok_matrix"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_multiclass.is_multilabel": {
  "data": {
   "shadows": "sklearn.utils.multiclass.is_multilabel"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_multiclass.issparse": {
  "data": {
   "shadows": "scipy.sparse.issparse"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_multiclass.iteritems": {
  "data": {
   "shadows": "sklearn.externals.six.iteritems"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_multiclass.lil_matrix": {
  "data": {
   "shadows": "scipy.sparse.lil_matrix"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_multiclass.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_multiclass.product": {
  "data": {
   "shadows": "itertools.product"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_multiclass.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_multiclass.test_check_classification_targets": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.utils.multiclass.check_classification_targets",
    "sklearn.utils.testing.assert_raises_regex",
    "sklearn.utils.tests.test_multiclass.EXAMPLES"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_multiclass.test_class_distribution": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": [
    "numpy.array",
    "range",
    "scipy.sparse.csc_matrix",
    "sklearn.utils.multiclass.class_distribution",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_multiclass.test_is_multilabel": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "dense_assert_",
    "hasattr",
    "numpy.asarray",
    "scipy.sparse.coo_matrix",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.dok_matrix",
    "scipy.sparse.issparse",
    "scipy.sparse.lil_matrix",
    "sklearn.externals.six.iteritems",
    "sklearn.utils.multiclass.is_multilabel",
    "sklearn.utils.testing.assert_false",
    "sklearn.utils.testing.assert_true",
    "sklearn.utils.tests.test_multiclass.EXAMPLES",
    "sparse_assert_",
    "sparse_matrix"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_multiclass.test_type_of_target": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.externals.six.iteritems",
    "sklearn.utils.multiclass.type_of_target",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_raises_regex",
    "sklearn.utils.tests.test_multiclass.EXAMPLES",
    "sklearn.utils.tests.test_multiclass.MULTILABEL_SEQUENCES",
    "sklearn.utils.tests.test_multiclass.NON_ARRAY_LIKE_EXAMPLES"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_multiclass.test_unique_labels": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "ValueError",
    "numpy.arange",
    "numpy.array",
    "numpy.ones",
    "sklearn.externals.six.moves.xrange",
    "sklearn.utils.multiclass.unique_labels",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_multiclass.test_unique_labels_mixed_types": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "ValueError",
    "itertools.product",
    "sklearn.utils.multiclass.unique_labels",
    "sklearn.utils.testing.assert_raises",
    "sklearn.utils.tests.test_multiclass.EXAMPLES"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_multiclass.test_unique_labels_non_specific": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "ValueError",
    "format",
    "sklearn.utils.multiclass.unique_labels",
    "sklearn.utils.testing.assert_raises",
    "sklearn.utils.tests.test_multiclass.EXAMPLES",
    "sklearn.utils.tests.test_multiclass.NON_ARRAY_LIKE_EXAMPLES"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_multiclass.type_of_target": {
  "data": {
   "shadows": "sklearn.utils.multiclass.type_of_target"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_multiclass.unique_labels": {
  "data": {
   "shadows": "sklearn.utils.multiclass.unique_labels"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_multiclass.xrange": {
  "data": {
   "shadows": "sklearn.externals.six.moves.xrange"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_murmurhash": {
  "data": {},
  "type": "module"
 },
 "sklearn.utils.tests.test_murmurhash.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_murmurhash.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_murmurhash.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_murmurhash.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_murmurhash.b": {
  "data": {
   "shadows": "sklearn.externals.six.b"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_murmurhash.murmurhash3_32": {
  "data": {
   "shadows": "sklearn.utils.murmurhash.murmurhash3_32"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_murmurhash.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_murmurhash.test_mmhash3_bytes": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "nose.tools.assert_equal",
    "sklearn.externals.six.b",
    "sklearn.utils.murmurhash.murmurhash3_32"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_murmurhash.test_mmhash3_int": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "nose.tools.assert_equal",
    "sklearn.utils.murmurhash.murmurhash3_32"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_murmurhash.test_mmhash3_int_array": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "int",
    "numpy.array",
    "numpy.int32",
    "numpy.random.RandomState",
    "numpy.testing.assert_array_equal",
    "sklearn.utils.murmurhash.murmurhash3_32"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_murmurhash.test_mmhash3_unicode": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "nose.tools.assert_equal",
    "sklearn.externals.six.u",
    "sklearn.utils.murmurhash.murmurhash3_32"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_murmurhash.test_no_collision_on_byte_range": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "nose.tools.assert_true",
    "range",
    "set",
    "sklearn.utils.murmurhash.murmurhash3_32"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_murmurhash.test_uniform_distribution": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "numpy.float",
    "numpy.ones",
    "numpy.testing.assert_array_almost_equal",
    "numpy.zeros",
    "range",
    "sklearn.utils.murmurhash.murmurhash3_32"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_murmurhash.u": {
  "data": {
   "shadows": "sklearn.externals.six.u"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_optimize": {
  "data": {},
  "type": "module"
 },
 "sklearn.utils.tests.test_optimize.assert_array_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_optimize.fmin_ncg": {
  "data": {
   "shadows": "scipy.optimize.fmin_ncg"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_optimize.newton_cg": {
  "data": {
   "shadows": "sklearn.utils.optimize.newton_cg"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_optimize.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_optimize.test_newton_cg": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "grad",
    "numpy.ones",
    "numpy.random.RandomState",
    "scipy.optimize.fmin_ncg",
    "sklearn.utils.optimize.newton_cg",
    "sklearn.utils.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_optimize.test_newton_cg.func": {
  "data": {
   "lineno": 16
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_optimize.test_newton_cg.grad": {
  "data": {
   "lineno": 20
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_optimize.test_newton_cg.grad_hess": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "grad"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_optimize.test_newton_cg.hess": {
  "data": {
   "lineno": 23
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_random": {
  "data": {},
  "type": "module"
 },
 "sklearn.utils.tests.test_random.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_random.assert_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_random.assert_raises": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_random.assert_true": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_true"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_random.check_edge_case_of_sample_int": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.utils.random.sample_without_replacement",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_random.check_sample_int": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "len",
    "numpy.all",
    "numpy.size",
    "numpy.unique",
    "range",
    "sklearn.utils.random.sample_without_replacement",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_random.check_sample_int_distribution": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "AssertionError",
    "frozenset",
    "len",
    "range",
    "scipy.misc.comb",
    "sklearn.utils.random.sample_without_replacement"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_random.combinations": {
  "data": {
   "shadows": "scipy.misc.comb"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_random.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_random.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_random.random_choice_csc": {
  "data": {
   "shadows": "sklearn.utils.random.random_choice_csc"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_random.sample_without_replacement": {
  "data": {
   "shadows": "sklearn.utils.random.sample_without_replacement"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_random.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_random.test_invalid_sample_without_replacement_algorithm": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.utils.random.sample_without_replacement",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_random.test_random_choice_csc": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "float",
    "len",
    "numpy.array",
    "numpy.bincount",
    "numpy.testing.assert_array_almost_equal",
    "range",
    "scipy.sparse.issparse",
    "sklearn.utils.random.random_choice_csc",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_random.test_random_choice_csc_errors": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "sklearn.utils.random.random_choice_csc",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_random.test_sample_without_replacement_algorithms": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "sklearn.utils.tests.test_random.check_edge_case_of_sample_int",
    "sklearn.utils.tests.test_random.check_sample_int",
    "sklearn.utils.tests.test_random.check_sample_int_distribution"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_random.test_sample_without_replacement_algorithms.sample_without_replacement_method": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "sklearn.utils.random.sample_without_replacement"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_seq_dataset": {
  "data": {
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.float64",
    "scipy.sparse.csr_matrix",
    "sklearn.datasets.load_iris",
    "sklearn.utils.tests.test_seq_dataset.X",
    "sklearn.utils.tests.test_seq_dataset.iris",
    "sklearn.utils.tests.test_seq_dataset.y"
   ]
  },
  "type": "module"
 },
 "sklearn.utils.tests.test_seq_dataset.ArrayDataset": {
  "data": {
   "shadows": "sklearn.utils.seq_dataset.ArrayDataset"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_seq_dataset.CSRDataset": {
  "data": {
   "shadows": "sklearn.utils.seq_dataset.CSRDataset"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_seq_dataset.X": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "sklearn.utils.tests.test_seq_dataset.X_csr": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "sklearn.utils.tests.test_seq_dataset.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_seq_dataset.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_seq_dataset.iris": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "sklearn.utils.tests.test_seq_dataset.load_iris": {
  "data": {
   "shadows": "sklearn.datasets.load_iris"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_seq_dataset.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_seq_dataset.sample_weight": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "sklearn.utils.tests.test_seq_dataset.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_seq_dataset.test_seq_dataset": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "nose.tools.assert_equal",
    "numpy.testing.assert_array_equal",
    "range",
    "scipy.sparse.csr_matrix",
    "sklearn.utils.seq_dataset.ArrayDataset",
    "sklearn.utils.seq_dataset.CSRDataset",
    "sklearn.utils.tests.test_seq_dataset.X",
    "sklearn.utils.tests.test_seq_dataset.X_csr",
    "sklearn.utils.tests.test_seq_dataset.sample_weight",
    "sklearn.utils.tests.test_seq_dataset.y"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_seq_dataset.test_seq_dataset_shuffle": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "nose.tools.assert_equal",
    "range",
    "sklearn.utils.seq_dataset.ArrayDataset",
    "sklearn.utils.seq_dataset.CSRDataset",
    "sklearn.utils.tests.test_seq_dataset.X",
    "sklearn.utils.tests.test_seq_dataset.X_csr",
    "sklearn.utils.tests.test_seq_dataset.sample_weight",
    "sklearn.utils.tests.test_seq_dataset.y"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_seq_dataset.y": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "sklearn.utils.tests.test_shortest_path": {
  "data": {},
  "type": "module"
 },
 "sklearn.utils.tests.test_shortest_path.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_shortest_path.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_shortest_path.floyd_warshall_slow": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "min",
    "numpy.inf",
    "numpy.isinf",
    "numpy.minimum",
    "numpy.where",
    "range"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_shortest_path.generate_graph": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "numpy.random.RandomState"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_shortest_path.graph_shortest_path": {
  "data": {
   "shadows": "sklearn.utils.graph.graph_shortest_path"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_shortest_path.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_shortest_path.single_source_shortest_path_length": {
  "data": {
   "shadows": "sklearn.utils.graph.single_source_shortest_path_length"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_shortest_path.test_dijkstra": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "numpy.testing.assert_array_almost_equal",
    "sklearn.utils.graph.graph_shortest_path",
    "sklearn.utils.tests.test_shortest_path.floyd_warshall_slow",
    "sklearn.utils.tests.test_shortest_path.generate_graph"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_shortest_path.test_dijkstra_bug_fix": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.assert_array_almost_equal",
    "sklearn.utils.graph.graph_shortest_path"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_shortest_path.test_floyd_warshall": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "numpy.testing.assert_array_almost_equal",
    "sklearn.utils.graph.graph_shortest_path",
    "sklearn.utils.tests.test_shortest_path.floyd_warshall_slow",
    "sklearn.utils.tests.test_shortest_path.generate_graph"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_shortest_path.test_shortest_path": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "collections.defaultdict",
    "int",
    "numpy.minimum",
    "numpy.testing.assert_array_almost_equal",
    "range",
    "sklearn.utils.graph.single_source_shortest_path_length",
    "sklearn.utils.tests.test_shortest_path.floyd_warshall_slow",
    "sklearn.utils.tests.test_shortest_path.generate_graph"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_sparsefuncs": {
  "data": {},
  "type": "module"
 },
 "sklearn.utils.tests.test_sparsefuncs.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_sparsefuncs.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_sparsefuncs.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_sparsefuncs.assert_raises": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_sparsefuncs.assign_rows_csr": {
  "data": {
   "shadows": "sklearn.utils.sparsefuncs_fast.assign_rows_csr"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_sparsefuncs.count_nonzero": {
  "data": {
   "shadows": "sklearn.utils.sparsefuncs.count_nonzero"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_sparsefuncs.csc_median_axis_0": {
  "data": {
   "shadows": "sklearn.utils.sparsefuncs.csc_median_axis_0"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_sparsefuncs.incr_mean_variance_axis": {
  "data": {
   "shadows": "sklearn.utils.sparsefuncs.incr_mean_variance_axis"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_sparsefuncs.inplace_column_scale": {
  "data": {
   "shadows": "sklearn.utils.sparsefuncs.inplace_column_scale"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_sparsefuncs.inplace_row_scale": {
  "data": {
   "shadows": "sklearn.utils.sparsefuncs.inplace_row_scale"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_sparsefuncs.inplace_swap_column": {
  "data": {
   "shadows": "sklearn.utils.sparsefuncs.inplace_swap_column"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_sparsefuncs.inplace_swap_row": {
  "data": {
   "shadows": "sklearn.utils.sparsefuncs.inplace_swap_row"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_sparsefuncs.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_sparsefuncs.make_classification": {
  "data": {
   "shadows": "sklearn.datasets.make_classification"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_sparsefuncs.mean_variance_axis": {
  "data": {
   "shadows": "sklearn.utils.sparsefuncs.mean_variance_axis"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_sparsefuncs.min_max_axis": {
  "data": {
   "shadows": "sklearn.utils.sparsefuncs.min_max_axis"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_sparsefuncs.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_sparsefuncs.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_sparsefuncs.test_count_nonzero": {
  "data": {
   "lineno": 427,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "numpy.array",
    "numpy.float64",
    "numpy.testing.assert_array_almost_equal",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "sklearn.utils.sparsefuncs.count_nonzero",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_sparsefuncs.test_csc_row_median": {
  "data": {
   "lineno": 450,
   "symbols_in_volume": [
    "TypeError",
    "numpy.array",
    "numpy.median",
    "numpy.random.RandomState",
    "numpy.testing.assert_array_equal",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "sklearn.utils.sparsefuncs.csc_median_axis_0",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_sparsefuncs.test_densify_rows": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.float64",
    "numpy.intp",
    "numpy.ones",
    "numpy.ones_like",
    "numpy.testing.assert_array_equal",
    "scipy.sparse.csr_matrix",
    "sklearn.utils.sparsefuncs_fast.assign_rows_csr"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_sparsefuncs.test_incr_mean_variance_axis": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "TypeError",
    "numpy.array",
    "numpy.atleast_2d",
    "numpy.float32",
    "numpy.random.RandomState",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_equal",
    "numpy.vstack",
    "numpy.zeros",
    "numpy.zeros_like",
    "range",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.lil_matrix",
    "sklearn.utils.sparsefuncs.incr_mean_variance_axis",
    "sklearn.utils.sparsefuncs.mean_variance_axis",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_sparsefuncs.test_inplace_column_scale": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "TypeError",
    "numpy.float32",
    "numpy.random.RandomState",
    "numpy.testing.assert_array_almost_equal",
    "scipy.sparse.rand",
    "sklearn.utils.sparsefuncs.inplace_column_scale",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_sparsefuncs.test_inplace_row_scale": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "TypeError",
    "numpy.float32",
    "numpy.random.RandomState",
    "numpy.testing.assert_array_almost_equal",
    "scipy.sparse.rand",
    "sklearn.utils.sparsefuncs.inplace_column_scale",
    "sklearn.utils.sparsefuncs.inplace_row_scale",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_sparsefuncs.test_inplace_swap_column": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": [
    "TypeError",
    "numpy.array",
    "numpy.float32",
    "numpy.float64",
    "numpy.testing.assert_array_equal",
    "scipy.linalg.get_blas_funcs",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "sklearn.utils.sparsefuncs.inplace_swap_column",
    "sklearn.utils.testing.assert_raises",
    "swap"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_sparsefuncs.test_inplace_swap_row": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "TypeError",
    "numpy.array",
    "numpy.float32",
    "numpy.float64",
    "numpy.testing.assert_array_equal",
    "scipy.linalg.get_blas_funcs",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "sklearn.utils.sparsefuncs.inplace_swap_row",
    "sklearn.utils.testing.assert_raises",
    "swap"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_sparsefuncs.test_mean_variance_axis0": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "TypeError",
    "numpy.float32",
    "numpy.mean",
    "numpy.testing.assert_array_almost_equal",
    "numpy.var",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.lil_matrix",
    "sklearn.datasets.make_classification",
    "sklearn.utils.sparsefuncs.mean_variance_axis",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_sparsefuncs.test_mean_variance_axis1": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "TypeError",
    "numpy.float32",
    "numpy.mean",
    "numpy.testing.assert_array_almost_equal",
    "numpy.var",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.lil_matrix",
    "sklearn.datasets.make_classification",
    "sklearn.utils.sparsefuncs.mean_variance_axis",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_sparsefuncs.test_mean_variance_illegal_axis": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "ValueError",
    "scipy.sparse.csr_matrix",
    "sklearn.datasets.make_classification",
    "sklearn.utils.sparsefuncs.incr_mean_variance_axis",
    "sklearn.utils.sparsefuncs.mean_variance_axis",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_sparsefuncs.test_min_max_axis0": {
  "data": {
   "lineno": 358,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.float32",
    "numpy.float64",
    "numpy.testing.assert_array_equal",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "sklearn.utils.sparsefuncs.min_max_axis"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_sparsefuncs.test_min_max_axis1": {
  "data": {
   "lineno": 386,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.float32",
    "numpy.float64",
    "numpy.testing.assert_array_equal",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "sklearn.utils.sparsefuncs.min_max_axis"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_sparsefuncs.test_min_max_axis_errors": {
  "data": {
   "lineno": 414,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "numpy.array",
    "numpy.float64",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "sklearn.utils.sparsefuncs.min_max_axis",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_stats": {
  "data": {},
  "type": "module"
 },
 "sklearn.utils.tests.test_stats.TestCase": {
  "data": {
   "shadows": "numpy.testing.TestCase"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_stats._cases": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "sklearn.utils.tests.test_stats.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_stats.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_stats.rankdata": {
  "data": {
   "shadows": "sklearn.utils.stats.rankdata"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_stats.test_cases": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "sklearn.utils.tests.test_stats._cases"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_stats.test_cases.check_case": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "sklearn.utils.stats.rankdata",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_testing": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "sklearn.utils.tests.test_testing.DecisionTreeClassifier": {
  "data": {
   "shadows": "sklearn.tree.DecisionTreeClassifier"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_testing.LinearDiscriminantAnalysis": {
  "data": {
   "shadows": "sklearn.discriminant_analysis.LinearDiscriminantAnalysis"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_testing.TestWarns": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "sklearn.utils.tests.test_testing.unittest"
   ]
  },
  "type": "class"
 },
 "sklearn.utils.tests.test_testing.TestWarns.test_warn": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "AssertionError",
    "UserWarning",
    "nose.tools.assert_raises",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_no_warnings",
    "sklearn.utils.testing.assert_warns",
    "sklearn.utils.tests.test_testing.sys",
    "sklearn.utils.tests.test_testing.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_testing.TestWarns.test_warn.f": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "sklearn.utils.tests.test_testing.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_testing.TestWarns.test_warn_wrong_warning": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "AssertionError",
    "UserWarning",
    "sklearn.utils.testing.assert_warns",
    "sklearn.utils.tests.test_testing.sys"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_testing.TestWarns.test_warn_wrong_warning.f": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "DeprecationWarning",
    "sklearn.utils.tests.test_testing.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_testing._assert_greater": {
  "data": {
   "shadows": "sklearn.utils.testing._assert_greater"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_testing._assert_less": {
  "data": {
   "shadows": "sklearn.utils.testing._assert_less"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_testing.assert_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_testing.assert_greater": {
  "data": {
   "shadows": "nose.tools.assert_greater"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_testing.assert_greater_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_greater_equal"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_testing.assert_less": {
  "data": {
   "shadows": "nose.tools.assert_less"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_testing.assert_less_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_less_equal"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_testing.assert_no_warnings": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_no_warnings"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_testing.assert_raise_message": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raise_message"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_testing.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_testing.assert_warns": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_warns"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_testing.set_random_state": {
  "data": {
   "shadows": "sklearn.utils.testing.set_random_state"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_testing.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_testing.test_assert_greater": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "AssertionError",
    "nose.tools.assert_greater",
    "nose.tools.assert_raises",
    "sklearn.utils.testing._assert_greater"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_testing.test_assert_greater_equal": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "AssertionError",
    "nose.tools.assert_raises",
    "sklearn.utils.testing.assert_greater_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_testing.test_assert_less": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "AssertionError",
    "nose.tools.assert_less",
    "nose.tools.assert_raises",
    "sklearn.utils.testing._assert_less"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_testing.test_assert_less_equal": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "AssertionError",
    "nose.tools.assert_raises",
    "sklearn.utils.testing.assert_less_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_testing.test_assert_raise_message": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "AssertionError",
    "AttributeError",
    "TypeError",
    "ValueError",
    "nose.tools.assert_raises",
    "sklearn.utils.testing.assert_raise_message"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_testing.test_assert_raise_message._no_raise": {
  "data": {
   "lineno": 75
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_testing.test_assert_raise_message._raise_ValueError": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_testing.test_set_random_state": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "sklearn.discriminant_analysis.LinearDiscriminantAnalysis",
    "sklearn.tree.DecisionTreeClassifier",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.set_random_state"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_testing.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_testing.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_utils": {
  "data": {},
  "type": "module"
 },
 "sklearn.utils.tests.test_utils.MockDataFrame": {
  "data": {
   "shadows": "sklearn.utils.mocking.MockDataFrame"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_utils.SkipTest": {
  "data": {
   "shadows": "sklearn.utils.testing.SkipTest"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_utils.assert_almost_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_utils.assert_array_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_utils.assert_equal": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_equal"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_utils.assert_raises": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_utils.assert_raises_regex": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises_regex"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_utils.assert_true": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_true"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_utils.chain": {
  "data": {
   "shadows": "itertools.chain"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_utils.check_random_state": {
  "data": {
   "shadows": "sklearn.utils.check_random_state"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_utils.column_or_1d": {
  "data": {
   "shadows": "sklearn.utils.column_or_1d"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_utils.deprecated": {
  "data": {
   "shadows": "sklearn.utils.deprecated"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_utils.gen_even_slices": {
  "data": {
   "shadows": "sklearn.utils.gen_even_slices"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_utils.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_utils.pinv2": {
  "data": {
   "shadows": "scipy.linalg.pinv2"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_utils.pinvh": {
  "data": {
   "shadows": "sklearn.utils.extmath.pinvh"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_utils.resample": {
  "data": {
   "shadows": "sklearn.utils.resample"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_utils.safe_indexing": {
  "data": {
   "shadows": "sklearn.utils.safe_indexing"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_utils.safe_mask": {
  "data": {
   "shadows": "sklearn.utils.safe_mask"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_utils.shuffle": {
  "data": {
   "shadows": "sklearn.utils.shuffle"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_utils.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_utils.test_column_or_1d": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "ValueError",
    "numpy.arange",
    "numpy.ravel",
    "sklearn.utils.column_or_1d",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_utils.test_deprecated": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "DeprecationWarning",
    "Ham",
    "ham",
    "hasattr",
    "issubclass",
    "len",
    "sklearn.utils.testing.assert_equal",
    "sklearn.utils.testing.assert_true",
    "sklearn.utils.tests.test_utils.warnings",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_utils.test_deprecated.Ham": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "object",
    "sklearn.utils.deprecated"
   ]
  },
  "type": "class"
 },
 "sklearn.utils.tests.test_utils.test_deprecated.ham": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "sklearn.utils.deprecated"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_utils.test_gen_even_slices": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "ValueError",
    "itertools.chain",
    "list",
    "next",
    "range",
    "sklearn.utils.gen_even_slices",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_raises_regex",
    "slice"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_utils.test_make_rng": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "ValueError",
    "numpy.random",
    "numpy.random.RandomState",
    "numpy.random.mtrand._rand",
    "sklearn.utils.check_random_state",
    "sklearn.utils.testing.assert_raises",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_utils.test_pinvh_nonpositive": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.dot",
    "numpy.float64",
    "numpy.linalg.svd",
    "scipy.linalg.pinv2",
    "sklearn.utils.extmath.pinvh",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_utils.test_pinvh_simple_complex": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.dot",
    "numpy.eye",
    "sklearn.utils.extmath.pinvh",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_utils.test_pinvh_simple_real": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.dot",
    "numpy.eye",
    "numpy.float64",
    "sklearn.utils.extmath.pinvh",
    "sklearn.utils.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_utils.test_resample_noarg": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "sklearn.utils.resample",
    "sklearn.utils.testing.assert_true"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_utils.test_resample_value_errors": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.utils.resample",
    "sklearn.utils.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_utils.test_safe_indexing": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.utils.safe_indexing",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_utils.test_safe_indexing_mock_pandas": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.utils.mocking.MockDataFrame",
    "sklearn.utils.safe_indexing",
    "sklearn.utils.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_utils.test_safe_indexing_pandas": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "ImportError",
    "numpy.array",
    "pandas.DataFrame",
    "sklearn.utils.safe_indexing",
    "sklearn.utils.testing.SkipTest",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.tests.test_utils.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_utils.test_safe_mask": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "scipy.sparse.csr_matrix",
    "sklearn.utils.check_random_state",
    "sklearn.utils.safe_mask",
    "sklearn.utils.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_utils.test_shuffle_dont_convert_to_array": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "list",
    "numpy.arange",
    "numpy.array",
    "object",
    "scipy.sparse.csc_matrix",
    "sklearn.utils.mocking.MockDataFrame",
    "sklearn.utils.shuffle",
    "sklearn.utils.testing.assert_array_equal",
    "sklearn.utils.testing.assert_equal",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_utils.test_shuffle_on_ndim_equals_three": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "numpy.array",
    "set",
    "sklearn.utils.shuffle",
    "sklearn.utils.testing.assert_equal",
    "to_tuple"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_utils.test_shuffle_on_ndim_equals_three.to_tuple": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "tuple"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_utils.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_validation": {
  "data": {},
  "type": "module"
 },
 "sklearn.utils.tests.test_validation.ARDRegression": {
  "data": {
   "shadows": "sklearn.linear_model.ARDRegression"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_validation.DataConversionWarning": {
  "data": {
   "shadows": "sklearn.utils.validation.DataConversionWarning"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_validation.KNeighborsClassifier": {
  "data": {
   "shadows": "sklearn.neighbors.KNeighborsClassifier"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_validation.MockDataFrame": {
  "data": {
   "shadows": "sklearn.utils.mocking.MockDataFrame"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_validation.NamedTemporaryFile": {
  "data": {
   "shadows": "tempfile.NamedTemporaryFile"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_validation.NotAnArray": {
  "data": {
   "shadows": "sklearn.utils.estimator_checks.NotAnArray"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_validation.NotFittedError": {
  "data": {
   "shadows": "sklearn.utils.validation.NotFittedError"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_validation.RandomForestRegressor": {
  "data": {
   "shadows": "sklearn.ensemble.RandomForestRegressor"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_validation.SVR": {
  "data": {
   "shadows": "sklearn.svm.SVR"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_validation.as_float_array": {
  "data": {
   "shadows": "sklearn.utils.as_float_array"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_validation.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_validation.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_validation.assert_false": {
  "data": {
   "shadows": "nose.tools.assert_false"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_validation.assert_no_warnings": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_no_warnings"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_validation.assert_raise_message": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raise_message"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_validation.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_validation.assert_raises_regexp": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_raises_regexp"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_validation.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_validation.assert_warns": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_warns"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_validation.assert_warns_message": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_warns_message"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_validation.check_X_y": {
  "data": {
   "shadows": "sklearn.utils.check_X_y"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_validation.check_array": {
  "data": {
   "shadows": "sklearn.utils.check_array"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_validation.check_consistent_length": {
  "data": {
   "shadows": "sklearn.utils.validation.check_consistent_length"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_validation.check_is_fitted": {
  "data": {
   "shadows": "sklearn.utils.validation.check_is_fitted"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_validation.check_symmetric": {
  "data": {
   "shadows": "sklearn.utils.check_symmetric"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_validation.has_fit_parameter": {
  "data": {
   "shadows": "sklearn.utils.validation.has_fit_parameter"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_validation.ignore_warnings": {
  "data": {
   "shadows": "sklearn.utils.testing.ignore_warnings"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_validation.make_blobs": {
  "data": {
   "shadows": "sklearn.datasets.make_blobs"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_validation.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_validation.product": {
  "data": {
   "shadows": "itertools.product"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_validation.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_validation.sparse_random_matrix": {
  "data": {
   "shadows": "sklearn.random_projection.sparse_random_matrix"
  },
  "type": "import"
 },
 "sklearn.utils.tests.test_validation.test_as_float_array": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "nose.tools.assert_false",
    "nose.tools.assert_true",
    "numpy.arange",
    "numpy.asfortranarray",
    "numpy.float32",
    "numpy.float64",
    "numpy.int32",
    "numpy.int64",
    "numpy.isfortran",
    "numpy.isnan",
    "numpy.matrix",
    "numpy.nan",
    "numpy.ones",
    "numpy.testing.assert_equal",
    "scipy.sparse.csc_matrix",
    "sklearn.random_projection.sparse_random_matrix",
    "sklearn.utils.as_float_array"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_validation.test_check_array": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "DeprecationWarning",
    "TypeError",
    "ValueError",
    "isinstance",
    "itertools.product",
    "len",
    "nose.tools.assert_equal",
    "nose.tools.assert_false",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "numpy.arange",
    "numpy.bool",
    "numpy.float",
    "numpy.float32",
    "numpy.inf",
    "numpy.int",
    "numpy.int32",
    "numpy.nan",
    "numpy.ndarray",
    "object",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.isspmatrix_dok",
    "sklearn.utils.check_array",
    "sklearn.utils.estimator_checks.NotAnArray",
    "sklearn.utils.testing.assert_warns",
    "sklearn.utils.testing.ignore_warnings",
    "sklearn.utils.tests.test_validation.warnings",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_validation.test_check_array_dtype_stability": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "nose.tools.assert_equal",
    "sklearn.utils.check_array"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_validation.test_check_array_dtype_warning": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "nose.tools.assert_equal",
    "nose.tools.assert_false",
    "nose.tools.assert_true",
    "numpy.asarray",
    "numpy.float32",
    "numpy.float64",
    "numpy.int32",
    "numpy.int64",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "sklearn.neighbors.KNeighborsClassifier",
    "sklearn.utils.check_X_y",
    "sklearn.utils.check_array",
    "sklearn.utils.testing.assert_no_warnings",
    "sklearn.utils.testing.assert_warns",
    "sklearn.utils.testing.assert_warns_message",
    "sklearn.utils.validation.DataConversionWarning"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_validation.test_check_array_min_samples_and_features_messages": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": [
    "DeprecationWarning",
    "TypeError",
    "ValueError",
    "numpy.array",
    "numpy.empty",
    "numpy.ones",
    "numpy.testing.assert_array_equal",
    "sklearn.utils.check_X_y",
    "sklearn.utils.check_array",
    "sklearn.utils.testing.assert_raise_message",
    "sklearn.utils.testing.assert_warns"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_validation.test_check_array_pandas_dtype_object_conversion": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "nose.tools.assert_equal",
    "numpy.array",
    "numpy.object",
    "sklearn.utils.check_array",
    "sklearn.utils.mocking.MockDataFrame"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_validation.test_check_consistent_length": {
  "data": {
   "lineno": 445,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "nose.tools.assert_raises",
    "numpy.array",
    "object",
    "scipy.sparse.csr_matrix",
    "sklearn.ensemble.RandomForestRegressor",
    "sklearn.utils.testing.assert_raises_regexp",
    "sklearn.utils.validation.check_consistent_length"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_validation.test_check_is_fitted": {
  "data": {
   "lineno": 413,
   "symbols_in_volume": [
    "AttributeError",
    "TypeError",
    "ValueError",
    "nose.tools.assert_equal",
    "nose.tools.assert_raises",
    "sklearn.datasets.make_blobs",
    "sklearn.linear_model.ARDRegression",
    "sklearn.svm.SVR",
    "sklearn.utils.validation.NotFittedError",
    "sklearn.utils.validation.check_is_fitted",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_validation.test_check_symmetric": {
  "data": {
   "lineno": 383,
   "symbols_in_volume": [
    "UserWarning",
    "ValueError",
    "nose.tools.assert_equal",
    "nose.tools.assert_raises",
    "numpy.array",
    "numpy.ones",
    "numpy.testing.assert_array_equal",
    "scipy.sparse.bsr_matrix",
    "scipy.sparse.coo_matrix",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.dok_matrix",
    "scipy.sparse.issparse",
    "scipy.sparse.lil_matrix",
    "sklearn.utils.check_symmetric",
    "sklearn.utils.testing.assert_warns"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_validation.test_has_fit_parameter": {
  "data": {
   "lineno": 376,
   "symbols_in_volume": [
    "nose.tools.assert_false",
    "nose.tools.assert_true",
    "sklearn.ensemble.RandomForestRegressor",
    "sklearn.neighbors.KNeighborsClassifier",
    "sklearn.svm.SVR",
    "sklearn.utils.validation.has_fit_parameter"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_validation.test_memmap": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "f",
    "numpy.asarray",
    "numpy.float32",
    "numpy.memmap",
    "numpy.testing.assert_array_equal",
    "sklearn.utils.as_float_array",
    "sklearn.utils.check_array",
    "tempfile.NamedTemporaryFile"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_validation.test_np_matrix": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "isinstance",
    "nose.tools.assert_false",
    "numpy.arange",
    "numpy.matrix",
    "scipy.sparse.csc_matrix",
    "sklearn.utils.as_float_array"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_validation.test_ordering": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "nose.tools.assert_false",
    "nose.tools.assert_true",
    "numpy.ones",
    "scipy.sparse.csr_matrix",
    "sklearn.utils.check_array"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.tests.test_validation.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.utils.tosequence": {
  "data": {
   "lineno": 464,
   "symbols_in_volume": [
    "collections.Sequence",
    "isinstance",
    "list",
    "numpy.asarray",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.validation": {
  "data": {
   "symbols_in_volume": [
    "numpy.float16",
    "numpy.float32",
    "numpy.float64",
    "sklearn.utils.validation.DataConversionWarning",
    "sklearn.utils.validation.NonBLASDotWarning",
    "sklearn.utils.validation.warnings"
   ]
  },
  "type": "module"
 },
 "sklearn.utils.validation.DataConversionWarning": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "UserWarning"
   ]
  },
  "type": "class"
 },
 "sklearn.utils.validation.FLOAT_DTYPES": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "sklearn.utils.validation.NonBLASDotWarning": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "UserWarning"
   ]
  },
  "type": "class"
 },
 "sklearn.utils.validation.NotFittedError": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "AttributeError",
    "ValueError"
   ]
  },
  "type": "class"
 },
 "sklearn.utils.validation._assert_all_finite": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "ValueError",
    "numpy.asanyarray",
    "numpy.isfinite",
    "numpy.typecodes"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.validation._ensure_sparse_format": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "TypeError",
    "hasattr",
    "isinstance",
    "list",
    "sklearn.utils.validation._assert_all_finite",
    "sklearn.utils.validation.warnings",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.validation._is_arraylike": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.validation._num_samples": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "TypeError",
    "hasattr",
    "len",
    "numpy.asarray",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.validation._shape_repr": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.validation.as_float_array": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "isinstance",
    "numpy.float32",
    "numpy.float64",
    "numpy.int32",
    "numpy.matrix",
    "numpy.ndarray",
    "scipy.sparse.issparse",
    "sklearn.utils.validation.check_array"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.validation.assert_all_finite": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "scipy.sparse.issparse",
    "sklearn.utils.validation._assert_all_finite"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.validation.check_X_y": {
  "data": {
   "lineno": 424,
   "symbols_in_volume": [
    "numpy.float64",
    "sklearn.utils.validation._assert_all_finite",
    "sklearn.utils.validation.check_array",
    "sklearn.utils.validation.check_consistent_length",
    "sklearn.utils.validation.column_or_1d"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.validation.check_array": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "DeprecationWarning",
    "ValueError",
    "getattr",
    "hasattr",
    "isinstance",
    "list",
    "numpy.array",
    "numpy.atleast_2d",
    "numpy.float64",
    "scipy.sparse.issparse",
    "sklearn.utils.validation.DataConversionWarning",
    "sklearn.utils.validation._assert_all_finite",
    "sklearn.utils.validation._ensure_sparse_format",
    "sklearn.utils.validation._num_samples",
    "sklearn.utils.validation._shape_repr",
    "sklearn.utils.validation.warnings",
    "str",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.validation.check_consistent_length": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.unique",
    "sklearn.utils.validation._num_samples",
    "str"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.validation.check_is_fitted": {
  "data": {
   "lineno": 640,
   "symbols_in_volume": [
    "TypeError",
    "all",
    "all_or_any",
    "hasattr",
    "isinstance",
    "list",
    "sklearn.utils.validation.NotFittedError",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.validation.check_non_negative": {
  "data": {
   "lineno": 681,
   "symbols_in_volume": [
    "ValueError",
    "scipy.sparse.issparse"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.validation.check_random_state": {
  "data": {
   "lineno": 554,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "numpy.integer",
    "numpy.random",
    "numpy.random.RandomState",
    "numpy.random.mtrand._rand",
    "sklearn.utils.validation.numbers"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.validation.check_symmetric": {
  "data": {
   "lineno": 585,
   "symbols_in_volume": [
    "ValueError",
    "abs",
    "getattr",
    "numpy.all",
    "numpy.allclose",
    "scipy.sparse.issparse",
    "sklearn.utils.validation.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.validation.column_or_1d": {
  "data": {
   "lineno": 525,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.ravel",
    "numpy.shape",
    "sklearn.utils.validation.DataConversionWarning",
    "sklearn.utils.validation.warnings"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.validation.has_fit_parameter": {
  "data": {
   "lineno": 572,
   "symbols_in_volume": [
    "signature"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.validation.indexable": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "hasattr",
    "numpy.array",
    "scipy.sparse.issparse",
    "sklearn.utils.validation.check_consistent_length"
   ]
  },
  "type": "function"
 },
 "sklearn.utils.validation.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklearn.utils.validation.numbers": {
  "data": {
   "shadows": "numbers"
  },
  "type": "import"
 },
 "sklearn.utils.validation.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sklearn.utils.validation.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.utils.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklearn.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 }
}