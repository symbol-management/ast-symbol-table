{
 "*": {
  "data": {
   "imports": [
    "cis.test.integration_test_data"
   ]
  },
  "type": "star-import"
 },
 "cis": {
  "data": {},
  "type": "module"
 },
 "cis.DataReader": {
  "data": {
   "shadows": "cis.data_io.data_reader.DataReader"
  },
  "type": "import"
 },
 "cis.__all__": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "cis.__author__": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "cis.__status__": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "cis.__version__": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "cis.__website__": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "cis.aggregation": {
  "data": {},
  "type": "module"
 },
 "cis.aggregation.collapse_kernels": {
  "data": {
   "symbols_in_volume": [
    "cis.aggregation.collapse_kernels.CountKernel",
    "cis.aggregation.collapse_kernels.MultiKernel",
    "cis.aggregation.collapse_kernels.StddevKernel"
   ]
  },
  "type": "module"
 },
 "cis.aggregation.collapse_kernels.CountKernel": {
  "data": {
   "lineno": 30
  },
  "type": "class"
 },
 "cis.aggregation.collapse_kernels.CountKernel.__init__": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "cis.aggregation.collapse_kernels.CountKernel",
    "super"
   ]
  },
  "type": "function"
 },
 "cis.aggregation.collapse_kernels.CountKernel.count_kernel_func": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "numpy.ma.isMaskedArray",
    "numpy.ma.masked_array",
    "numpy.zeros",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "cis.aggregation.collapse_kernels.CountKernel.update_metadata": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "cis.aggregation.collapse_kernels.CountKernel",
    "super"
   ]
  },
  "type": "function"
 },
 "cis.aggregation.collapse_kernels.MultiKernel": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "cis.aggregation.collapse_kernels.MultiKernel.__init__": {
  "data": {
   "lineno": 64
  },
  "type": "function"
 },
 "cis.aggregation.collapse_kernels.StddevKernel": {
  "data": {
   "lineno": 8
  },
  "type": "class"
 },
 "cis.aggregation.collapse_kernels.StddevKernel.__init__": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "cis.aggregation.collapse_kernels.StddevKernel",
    "numpy.ma.std",
    "super"
   ]
  },
  "type": "function"
 },
 "cis.aggregation.collapse_kernels.StddevKernel.update_metadata": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "cis.aggregation.collapse_kernels.StddevKernel",
    "super"
   ]
  },
  "type": "function"
 },
 "cis.aggregation.collapse_kernels.aggregation_kernels": {
  "data": {
   "lineno": 75
  },
  "type": "constant"
 },
 "cis.aggregation.collapse_kernels.iris.analysis": {
  "data": {
   "shadows": "iris.analysis"
  },
  "type": "import"
 },
 "cis.aggregation.collapse_kernels.ma": {
  "data": {
   "shadows": "numpy.ma"
  },
  "type": "import"
 },
 "cis.aggregation.collapse_kernels.zeros": {
  "data": {
   "shadows": "numpy.zeros"
  },
  "type": "import"
 },
 "cis.aggregation.gridded_collapsor": {
  "data": {},
  "type": "module"
 },
 "cis.aggregation.gridded_collapsor.ClassNotFoundError": {
  "data": {
   "shadows": "cis.exceptions.ClassNotFoundError"
  },
  "type": "import"
 },
 "cis.aggregation.gridded_collapsor.GriddedCollapsor": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "cis.aggregation.gridded_collapsor.GriddedCollapsor.__call__": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "cis.aggregation.collapse_kernels.MultiKernel",
    "cis.aggregation.gridded_collapsor.logging",
    "cis.data_io.gridded_data.GriddedDataList",
    "isinstance",
    "len"
   ]
  },
  "type": "function"
 },
 "cis.aggregation.gridded_collapsor.GriddedCollapsor.__init__": {
  "data": {
   "lineno": 7
  },
  "type": "function"
 },
 "cis.aggregation.gridded_collapsor.GriddedCollapsor._calc_new_dims": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "cis.aggregation.gridded_collapsor.GriddedCollapsor._gridded_full_collapse": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "cis.aggregation.gridded_collapsor.GriddedCollapsor",
    "cis.aggregation.gridded_collapsor.iris",
    "cis.exceptions.ClassNotFoundError",
    "copy.deepcopy",
    "isinstance",
    "list",
    "set"
   ]
  },
  "type": "function"
 },
 "cis.aggregation.gridded_collapsor.GriddedCollapsor._partially_collapse_multidimensional_coord": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "cis.aggregation.gridded_collapsor.iris",
    "cis.aggregation.gridded_collapsor.operator",
    "functools.reduce",
    "list",
    "numpy.transpose",
    "range",
    "set",
    "sorted",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "cis.aggregation.gridded_collapsor.GriddedCollapsor._update_aux_factories": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "cis.utils.listify",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "cis.aggregation.gridded_collapsor.GriddedDataList": {
  "data": {
   "shadows": "cis.data_io.gridded_data.GriddedDataList"
  },
  "type": "import"
 },
 "cis.aggregation.gridded_collapsor.MultiKernel": {
  "data": {
   "shadows": "cis.aggregation.collapse_kernels.MultiKernel"
  },
  "type": "import"
 },
 "cis.aggregation.gridded_collapsor.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "cis.aggregation.gridded_collapsor.iris": {
  "data": {
   "shadows": "iris"
  },
  "type": "import"
 },
 "cis.aggregation.gridded_collapsor.listify": {
  "data": {
   "shadows": "cis.utils.listify"
  },
  "type": "import"
 },
 "cis.aggregation.gridded_collapsor.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "cis.aggregation.gridded_collapsor.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "cis.aggregation.gridded_collapsor.operator": {
  "data": {
   "shadows": "operator"
  },
  "type": "import"
 },
 "cis.aggregation.gridded_collapsor.reduce": {
  "data": {
   "shadows": "functools.reduce"
  },
  "type": "import"
 },
 "cis.aggregation.ungridded_aggregator": {
  "data": {},
  "type": "module"
 },
 "cis.aggregation.ungridded_aggregator.BinnedCubeCellOnlyConstraint": {
  "data": {
   "shadows": "cis.collocation.col_implementations.BinnedCubeCellOnlyConstraint"
  },
  "type": "import"
 },
 "cis.aggregation.ungridded_aggregator.CoordinateNotFoundError": {
  "data": {
   "shadows": "cis.exceptions.CoordinateNotFoundError"
  },
  "type": "import"
 },
 "cis.aggregation.ungridded_aggregator.Cube": {
  "data": {
   "shadows": "iris.cube.Cube"
  },
  "type": "import"
 },
 "cis.aggregation.ungridded_aggregator.DimCoord": {
  "data": {
   "shadows": "iris.coords.DimCoord"
  },
  "type": "import"
 },
 "cis.aggregation.ungridded_aggregator.GeneralGriddedCollocator": {
  "data": {
   "shadows": "cis.collocation.col_implementations.GeneralGriddedCollocator"
  },
  "type": "import"
 },
 "cis.aggregation.ungridded_aggregator.UngriddedAggregator": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "cis.aggregation.ungridded_aggregator.UngriddedAggregator.__init__": {
  "data": {
   "lineno": 8
  },
  "type": "function"
 },
 "cis.aggregation.ungridded_aggregator.UngriddedAggregator._add_max_min_bounds_for_collapsed_coords": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "len",
    "numpy.all",
    "numpy.array",
    "numpy.isinf"
   ]
  },
  "type": "function"
 },
 "cis.aggregation.ungridded_aggregator.UngriddedAggregator._get_CF_coordinate_units": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "ValueError",
    "cf_units.as_unit",
    "cis.aggregation.ungridded_aggregator.logging",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "cis.aggregation.ungridded_aggregator.UngriddedAggregator._get_coord_start_end_centre": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "numpy.max",
    "numpy.min"
   ]
  },
  "type": "function"
 },
 "cis.aggregation.ungridded_aggregator.UngriddedAggregator._make_fully_collapsed_coord": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "iris.coords.DimCoord",
    "numpy.array",
    "numpy.inf"
   ]
  },
  "type": "function"
 },
 "cis.aggregation.ungridded_aggregator.UngriddedAggregator._make_partially_collapsed_coord": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "cis.aggregation.ungridded_aggregator.aggregation_grid_array",
    "iris.coords.DimCoord",
    "len"
   ]
  },
  "type": "function"
 },
 "cis.aggregation.ungridded_aggregator.UngriddedAggregator.aggregate": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "cis.aggregation.ungridded_aggregator.logging",
    "cis.collocation.col_implementations.BinnedCubeCellOnlyConstraint",
    "cis.collocation.col_implementations.GeneralGriddedCollocator",
    "cis.exceptions.CoordinateNotFoundError",
    "enumerate",
    "int",
    "iris.cube.Cube",
    "len",
    "list",
    "numpy.arange",
    "numpy.prod",
    "numpy.reshape",
    "tuple"
   ]
  },
  "type": "function"
 },
 "cis.aggregation.ungridded_aggregator.aggregation_grid_array": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "cis.time_util.cis_standard_time_unit.date2num",
    "datetime.datetime",
    "numpy.arange",
    "str"
   ]
  },
  "type": "function"
 },
 "cis.aggregation.ungridded_aggregator.as_unit": {
  "data": {
   "shadows": "cf_units.as_unit"
  },
  "type": "import"
 },
 "cis.aggregation.ungridded_aggregator.cis_standard_time_unit": {
  "data": {
   "shadows": "cis.time_util.cis_standard_time_unit"
  },
  "type": "import"
 },
 "cis.aggregation.ungridded_aggregator.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "cis.aggregation.ungridded_aggregator.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "cis.aggregation.ungridded_aggregator.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "cis.cis_main": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "cis.cis_main.aggregate_cmd",
    "cis.cis_main.col_cmd",
    "cis.cis_main.collapse_cmd",
    "cis.cis_main.evaluate_cmd",
    "cis.cis_main.info_cmd",
    "cis.cis_main.logging",
    "cis.cis_main.main",
    "cis.cis_main.plot_cmd",
    "cis.cis_main.stats_cmd",
    "cis.cis_main.subset_cmd",
    "cis.cis_main.version_cmd"
   ]
  },
  "type": "module"
 },
 "cis.cis_main.Calculator": {
  "data": {
   "shadows": "cis.evaluate.Calculator"
  },
  "type": "import"
 },
 "cis.cis_main.DataReader": {
  "data": {
   "shadows": "cis.data_io.data_reader.DataReader"
  },
  "type": "import"
 },
 "cis.cis_main.GriddedDataList": {
  "data": {
   "shadows": "cis.data_io.gridded_data.GriddedDataList"
  },
  "type": "import"
 },
 "cis.cis_main.Plotter": {
  "data": {
   "shadows": "cis.plotting.formatted_plot.Plotter"
  },
  "type": "import"
 },
 "cis.cis_main.StatsAnalyzer": {
  "data": {
   "shadows": "cis.stats.StatsAnalyzer"
  },
  "type": "import"
 },
 "cis.cis_main.UngriddedDataList": {
  "data": {
   "shadows": "cis.data_io.ungridded_data.UngriddedDataList"
  },
  "type": "import"
 },
 "cis.cis_main.__error_occurred": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "cis.cis_main.logging",
    "cis.cis_main.sys",
    "cis.cis_main.traceback",
    "exit",
    "str"
   ]
  },
  "type": "function"
 },
 "cis.cis_main.__status__": {
  "data": {
   "shadows": "cis.__status__"
  },
  "type": "import"
 },
 "cis.cis_main.__version__": {
  "data": {
   "shadows": "cis.__version__"
  },
  "type": "import"
 },
 "cis.cis_main.aggregate_cmd": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "any",
    "cis.cis_main.__error_occurred",
    "cis.cis_main.logging",
    "cis.data_io.data_reader.DataReader",
    "cis.data_io.gridded_data.GriddedDataList",
    "cis.exceptions.InvalidCommandLineOptionError",
    "isinstance",
    "len",
    "list"
   ]
  },
  "type": "function"
 },
 "cis.cis_main.check_boolean": {
  "data": {
   "shadows": "cis.parse.check_boolean"
  },
  "type": "import"
 },
 "cis.cis_main.col_cmd": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "cis.cis_main.logging",
    "cis.collocation.col_framework.get_kernel",
    "cis.data_io.data_reader.DataReader",
    "cis.parse.check_boolean",
    "str"
   ]
  },
  "type": "function"
 },
 "cis.cis_main.collapse_cmd": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "cis.cis_main.__error_occurred",
    "cis.cis_main.logging",
    "cis.data_io.data_reader.DataReader",
    "cis.data_io.ungridded_data.UngriddedDataList",
    "isinstance",
    "len"
   ]
  },
  "type": "function"
 },
 "cis.cis_main.commands": {
  "data": {
   "lineno": 229
  },
  "type": "constant"
 },
 "cis.cis_main.config": {
  "data": {
   "shadows": "logging.config"
  },
  "type": "import"
 },
 "cis.cis_main.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "cis.cis_main.evaluate_cmd": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "cis.data_io.data_reader.DataReader",
    "cis.evaluate.Calculator"
   ]
  },
  "type": "function"
 },
 "cis.cis_main.ex": {
  "data": {
   "shadows": "cis.exceptions"
  },
  "type": "import"
 },
 "cis.cis_main.get_kernel": {
  "data": {
   "shadows": "cis.collocation.col_framework.get_kernel"
  },
  "type": "import"
 },
 "cis.cis_main.info": {
  "data": {
   "shadows": "cis.info.info"
  },
  "type": "import"
 },
 "cis.cis_main.info_cmd": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "cis.info.info"
   ]
  },
  "type": "function"
 },
 "cis.cis_main.logger": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "cis.cis_main.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "cis.cis_main.main": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "Exception",
    "IOError",
    "MemoryError",
    "cis.cis_main.__error_occurred",
    "cis.cis_main.logging",
    "cis.cis_main.os",
    "cis.cis_main.parse_and_run_arguments",
    "print"
   ]
  },
  "type": "function"
 },
 "cis.cis_main.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "cis.cis_main.parse_and_run_arguments": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "cis.cis_main.commands",
    "cis.cis_main.logging",
    "cis.parse.parse_args",
    "cmd",
    "datetime.datetime.now",
    "str"
   ]
  },
  "type": "function"
 },
 "cis.cis_main.parse_args": {
  "data": {
   "shadows": "cis.parse.parse_args"
  },
  "type": "import"
 },
 "cis.cis_main.plot_cmd": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "cis.data_io.data_reader.DataReader",
    "cis.plotting.formatted_plot.Plotter",
    "vars"
   ]
  },
  "type": "function"
 },
 "cis.cis_main.stats_cmd": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "cis.__version__",
    "cis.data_io.data_reader.DataReader",
    "cis.data_io.gridded_data.GriddedDataList",
    "cis.stats.StatsAnalyzer",
    "len",
    "max",
    "print",
    "set",
    "str"
   ]
  },
  "type": "function"
 },
 "cis.cis_main.subset_cmd": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "cis.cis_main.__error_occurred",
    "cis.data_io.data_reader.DataReader",
    "cis.exceptions.NoDataInSubsetError",
    "len"
   ]
  },
  "type": "function"
 },
 "cis.cis_main.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "cis.cis_main.traceback": {
  "data": {
   "shadows": "traceback"
  },
  "type": "import"
 },
 "cis.cis_main.version_cmd": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "cis.__status__",
    "cis.__version__",
    "print"
   ]
  },
  "type": "function"
 },
 "cis.collocation": {
  "data": {},
  "type": "module"
 },
 "cis.collocation.col": {
  "data": {},
  "type": "module"
 },
 "cis.collocation.col.CoordinateNotFoundError": {
  "data": {
   "shadows": "cis.exceptions.CoordinateNotFoundError"
  },
  "type": "import"
 },
 "cis.collocation.col.Kernel": {
  "data": {
   "shadows": "cis.collocation.col_framework.Kernel"
  },
  "type": "import"
 },
 "cis.collocation.col.__version__": {
  "data": {
   "shadows": "cis.__version__"
  },
  "type": "import"
 },
 "cis.collocation.col.collocate": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "AttributeError",
    "TypeError",
    "cis.__version__",
    "cis.collocation.col.logging",
    "cis.exceptions.CoordinateNotFoundError",
    "getattr",
    "str",
    "time.time"
   ]
  },
  "type": "function"
 },
 "cis.collocation.col.get_kernel": {
  "data": {
   "shadows": "cis.collocation.col_framework.get_kernel",
   "symbols_in_volume": [
    "ValueError",
    "cis.collocation.col.six",
    "cis.collocation.col_framework.Kernel",
    "cis.collocation.col_framework.get_kernel",
    "default",
    "isinstance"
   ]
  },
  "type": "import"
 },
 "cis.collocation.col.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "cis.collocation.col.moments": {
  "data": {
   "shadows": "cis.collocation.col_implementations.moments"
  },
  "type": "import"
 },
 "cis.collocation.col.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "cis.collocation.col.time": {
  "data": {
   "shadows": "time.time"
  },
  "type": "import"
 },
 "cis.collocation.col_framework": {
  "data": {},
  "type": "module"
 },
 "cis.collocation.col_framework.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "cis.collocation.col_framework.AbstractDataOnlyKernel": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "abc.ABCMeta",
    "cis.collocation.col_framework.Kernel"
   ]
  },
  "type": "class"
 },
 "cis.collocation.col_framework.AbstractDataOnlyKernel.get_value": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "ValueError",
    "len"
   ]
  },
  "type": "function"
 },
 "cis.collocation.col_framework.AbstractDataOnlyKernel.get_value_for_data_only": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "cis.collocation.col_framework.CellConstraint": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "abc.ABCMeta",
    "cis.collocation.col_framework.Constraint"
   ]
  },
  "type": "class"
 },
 "cis.collocation.col_framework.CellConstraint.get_iterator": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.HyperPoint",
    "cis.collocation.col_implementations.HyperPoint.number_standard_names",
    "cis.utils.index_iterator_for_non_masked_data",
    "cis.utils.index_iterator_nditer"
   ]
  },
  "type": "function"
 },
 "cis.collocation.col_framework.ClassNotFoundError": {
  "data": {
   "shadows": "cis.exceptions.ClassNotFoundError"
  },
  "type": "import"
 },
 "cis.collocation.col_framework.Collocator": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "abc.ABCMeta",
    "cis.collocation.col_framework.six",
    "object"
   ]
  },
  "type": "class"
 },
 "cis.collocation.col_framework.Collocator.__init__": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "float",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "cis.collocation.col_framework.Collocator.collocate": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "cis.collocation.col_framework.Constraint": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "abc.ABCMeta",
    "object"
   ]
  },
  "type": "class"
 },
 "cis.collocation.col_framework.Constraint.constrain_points": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "cis.collocation.col_framework.Constraint.get_iterator": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.HyperPoint",
    "cis.collocation.col_implementations.HyperPoint.number_standard_names",
    "cis.utils.index_iterator_for_non_masked_data",
    "cis.utils.index_iterator_nditer"
   ]
  },
  "type": "function"
 },
 "cis.collocation.col_framework.HyperPoint": {
  "data": {
   "shadows": "cis.collocation.col_implementations.HyperPoint"
  },
  "type": "import"
 },
 "cis.collocation.col_framework.IndexedConstraint": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "abc.ABCMeta",
    "cis.collocation.col_framework.Constraint"
   ]
  },
  "type": "class"
 },
 "cis.collocation.col_framework.IndexedConstraint.get_iterator": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.HyperPoint",
    "cis.collocation.col_implementations.HyperPoint.number_standard_names",
    "cis.utils.index_iterator_for_non_masked_data",
    "cis.utils.index_iterator_nditer"
   ]
  },
  "type": "function"
 },
 "cis.collocation.col_framework.Kernel": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "abc.ABCMeta",
    "object"
   ]
  },
  "type": "class"
 },
 "cis.collocation.col_framework.Kernel.get_value": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "cis.collocation.col_framework.Kernel.get_variable_details": {
  "data": {
   "lineno": 78
  },
  "type": "function"
 },
 "cis.collocation.col_framework.PointConstraint": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "abc.ABCMeta",
    "cis.collocation.col_framework.Constraint"
   ]
  },
  "type": "class"
 },
 "cis.collocation.col_framework.__get_class": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "cis.collocation.col_framework.logging",
    "cis.exceptions.ClassNotFoundError",
    "cis.plugin.find_plugin_classes"
   ]
  },
  "type": "function"
 },
 "cis.collocation.col_framework.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "cis.collocation.col_framework.find_plugin_classes": {
  "data": {
   "shadows": "cis.plugin.find_plugin_classes"
  },
  "type": "import"
 },
 "cis.collocation.col_framework.get_kernel": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "ValueError",
    "cis.collocation.col_framework.Kernel",
    "cis.collocation.col_framework.__get_class",
    "cis.exceptions.ClassNotFoundError",
    "str"
   ]
  },
  "type": "function"
 },
 "cis.collocation.col_framework.index_iterator_for_non_masked_data": {
  "data": {
   "shadows": "cis.utils.index_iterator_for_non_masked_data"
  },
  "type": "import"
 },
 "cis.collocation.col_framework.index_iterator_nditer": {
  "data": {
   "shadows": "cis.utils.index_iterator_nditer"
  },
  "type": "import"
 },
 "cis.collocation.col_framework.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "cis.collocation.col_framework.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "cis.collocation.col_framework.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "cis.collocation.data_index": {
  "data": {
   "symbols_in_volume": [
    "cis.collocation.data_index.GridCellBinIndex",
    "cis.collocation.data_index.GridCellBinIndexInSlices",
    "cis.collocation.haversinedistancekdtreeindex.HaversineDistanceKDTreeIndex"
   ]
  },
  "type": "module"
 },
 "cis.collocation.data_index.GridCellBinIndex": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "cis.collocation.data_index.GridCellBinIndex.__init__": {
  "data": {
   "lineno": 169
  },
  "type": "function"
 },
 "cis.collocation.data_index.GridCellBinIndex.get_points_by_indices": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "tuple"
   ]
  },
  "type": "function"
 },
 "cis.collocation.data_index.GridCellBinIndex.index_data": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "cis.collocation.data_index.logging",
    "cis.collocation.data_index.math",
    "int",
    "len",
    "max",
    "numpy.dtype",
    "numpy.empty",
    "numpy.searchsorted",
    "object",
    "sum",
    "tuple"
   ]
  },
  "type": "function"
 },
 "cis.collocation.data_index.GridCellBinIndexInSlices": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "cis.collocation.data_index.GridCellBinIndexInSlices.__init__": {
  "data": {
   "lineno": 16
  },
  "type": "function"
 },
 "cis.collocation.data_index.GridCellBinIndexInSlices.get_iterator": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "len",
    "numpy.concatenate",
    "numpy.diff",
    "numpy.flatnonzero",
    "numpy.tile",
    "tuple"
   ]
  },
  "type": "function"
 },
 "cis.collocation.data_index.GridCellBinIndexInSlices.index_data": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "cis.collocation.data_index.datetime",
    "cis.time_util.convert_datetime_to_std_time",
    "isinstance",
    "len",
    "list",
    "numpy.all",
    "numpy.argsort",
    "numpy.cumproduct",
    "numpy.ma.getmaskarray",
    "numpy.searchsorted",
    "numpy.tensordot",
    "numpy.vstack",
    "numpy.where",
    "range",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "cis.collocation.data_index.HaversineDistanceKDTreeIndex": {
  "data": {
   "shadows": "cis.collocation.haversinedistancekdtreeindex.HaversineDistanceKDTreeIndex"
  },
  "type": "import"
 },
 "cis.collocation.data_index._index_attributes": {
  "data": {
   "lineno": 254
  },
  "type": "constant"
 },
 "cis.collocation.data_index.convert_datetime_to_std_time": {
  "data": {
   "shadows": "cis.time_util.convert_datetime_to_std_time"
  },
  "type": "import"
 },
 "cis.collocation.data_index.create_indexes": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "cis.collocation.data_index._index_attributes",
    "cis.collocation.data_index.logging",
    "cls",
    "hasattr",
    "setattr"
   ]
  },
  "type": "function"
 },
 "cis.collocation.data_index.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "cis.collocation.data_index.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "cis.collocation.data_index.ma": {
  "data": {
   "shadows": "numpy.ma"
  },
  "type": "import"
 },
 "cis.collocation.data_index.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "cis.collocation.data_index.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "cis.collocation.gridded_interpolation": {
  "data": {},
  "type": "module"
 },
 "cis.collocation.gridded_interpolation.GriddedUngriddedInterpolator": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "cis.collocation.gridded_interpolation.GriddedUngriddedInterpolator.__call__": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "cis.collocation.gridded_interpolation.extend_circular_data",
    "numpy.ma.masked_array",
    "numpy.nan",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "cis.collocation.gridded_interpolation.GriddedUngriddedInterpolator.__init__": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "ValueError",
    "cis.collocation.gridded_interpolation._RegularGridInterpolator",
    "cis.collocation.gridded_interpolation.extend_circular_coord",
    "cis.collocation.gridded_interpolation.extend_circular_data",
    "cis.utils.move_item_to_end",
    "getattr",
    "hasattr",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "cis.collocation.gridded_interpolation.GriddedUngriddedInterpolator._account_for_inverted": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "slice"
   ]
  },
  "type": "function"
 },
 "cis.collocation.gridded_interpolation.GriddedUngriddedInterpolator._get_dims_order": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "list",
    "set"
   ]
  },
  "type": "function"
 },
 "cis.collocation.gridded_interpolation._RegularGridInterpolator": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "cis.collocation.gridded_interpolation._RegularGridInterpolator.__call__": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": [
    "ValueError",
    "enumerate",
    "float",
    "hasattr",
    "len",
    "numpy.asarray",
    "numpy.can_cast",
    "numpy.inexact",
    "numpy.issubdtype",
    "numpy.ma.array",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "cis.collocation.gridded_interpolation._RegularGridInterpolator.__init__": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "ValueError",
    "cis.collocation.gridded_interpolation._ndim_coords_from_arrays",
    "enumerate",
    "len",
    "numpy.all",
    "numpy.asarray",
    "numpy.diff",
    "numpy.vstack",
    "numpy.zeros",
    "tuple"
   ]
  },
  "type": "function"
 },
 "cis.collocation.gridded_interpolation._RegularGridInterpolator._evaluate_linear": {
  "data": {
   "lineno": 335,
   "symbols_in_volume": [
    "itertools.product",
    "len",
    "numpy.asarray",
    "numpy.where",
    "slice",
    "staticmethod",
    "zip"
   ]
  },
  "type": "function"
 },
 "cis.collocation.gridded_interpolation._RegularGridInterpolator._evaluate_nearest": {
  "data": {
   "lineno": 352,
   "symbols_in_volume": [
    "numpy.where",
    "staticmethod",
    "zip"
   ]
  },
  "type": "function"
 },
 "cis.collocation.gridded_interpolation._RegularGridInterpolator._find_indices": {
  "data": {
   "lineno": 359,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "numpy.ndarray",
    "numpy.searchsorted",
    "numpy.zeros",
    "staticmethod",
    "zip"
   ]
  },
  "type": "function"
 },
 "cis.collocation.gridded_interpolation._RegularGridInterpolator._find_vertical_index": {
  "data": {
   "lineno": 380,
   "symbols_in_volume": [
    "numpy.searchsorted",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "cis.collocation.gridded_interpolation._ndim_coords_from_arrays": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "ValueError",
    "enumerate",
    "float",
    "isinstance",
    "len",
    "numpy.asanyarray",
    "numpy.broadcast_arrays",
    "numpy.empty",
    "range",
    "tuple"
   ]
  },
  "type": "function"
 },
 "cis.collocation.gridded_interpolation.extend_circular_coord": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "numpy.append",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "cis.collocation.gridded_interpolation.extend_circular_data": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "numpy.append",
    "slice",
    "tuple"
   ]
  },
  "type": "function"
 },
 "cis.collocation.gridded_interpolation.move_item_to_end": {
  "data": {
   "shadows": "cis.utils.move_item_to_end"
  },
  "type": "import"
 },
 "cis.collocation.gridded_interpolation.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "cis.collocation.gridded_interpolation.product": {
  "data": {
   "shadows": "itertools.product"
  },
  "type": "import"
 },
 "cis.collocation.haversinedistancekdtreeindex": {
  "data": {},
  "type": "module"
 },
 "cis.collocation.haversinedistancekdtreeindex.HaversineDistanceKDTree": {
  "data": {
   "shadows": "cis.collocation.kdtree.HaversineDistanceKDTree"
  },
  "type": "import"
 },
 "cis.collocation.haversinedistancekdtreeindex.HaversineDistanceKDTreeIndex": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "cis.collocation.haversinedistancekdtreeindex.HaversineDistanceKDTreeIndex.__init__": {
  "data": {
   "lineno": 24
  },
  "type": "function"
 },
 "cis.collocation.haversinedistancekdtreeindex.HaversineDistanceKDTreeIndex.find_nearest_point": {
  "data": {
   "lineno": 41
  },
  "type": "function"
 },
 "cis.collocation.haversinedistancekdtreeindex.HaversineDistanceKDTreeIndex.find_points_within_distance": {
  "data": {
   "lineno": 50
  },
  "type": "function"
 },
 "cis.collocation.haversinedistancekdtreeindex.HaversineDistanceKDTreeIndex.find_points_within_distance_sample": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "cis.collocation.haversinedistancekdtreeindex.create_index"
   ]
  },
  "type": "function"
 },
 "cis.collocation.haversinedistancekdtreeindex.HaversineDistanceKDTreeIndex.index_data": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "KeyError",
    "cis.collocation.haversinedistancekdtreeindex.create_index"
   ]
  },
  "type": "function"
 },
 "cis.collocation.haversinedistancekdtreeindex.HyperPoint": {
  "data": {
   "shadows": "cis.data_io.hyperpoint.HyperPoint"
  },
  "type": "import"
 },
 "cis.collocation.haversinedistancekdtreeindex.create_index": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "cis.collocation.kdtree.HaversineDistanceKDTree",
    "hasattr",
    "numpy.ma.getmask"
   ]
  },
  "type": "function"
 },
 "cis.collocation.haversinedistancekdtreeindex.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "cis.collocation.kdtree": {
  "data": {
   "symbols_in_volume": [
    "numpy.pi"
   ]
  },
  "type": "module"
 },
 "cis.collocation.kdtree.HALF_PI": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "cis.collocation.kdtree.HaversineDistanceKDTree": {
  "data": {
   "lineno": 1155,
   "symbols_in_volume": [
    "cis.collocation.kdtree.KDTree"
   ]
  },
  "type": "class"
 },
 "cis.collocation.kdtree.HaversineDistanceKDTree.__init__": {
  "data": {
   "lineno": 1160,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "numpy.amax",
    "numpy.amin",
    "numpy.arange",
    "numpy.column_stack",
    "numpy.ma.array",
    "numpy.ma.asarray",
    "numpy.shape"
   ]
  },
  "type": "function"
 },
 "cis.collocation.kdtree.HaversineDistanceKDTree._query": {
  "data": {
   "lineno": 1177,
   "symbols_in_volume": [
    "abs",
    "cis.collocation.kdtree.HaversineDistanceKDTree",
    "cis.collocation.kdtree.haversine_distance",
    "cis.collocation.kdtree.math",
    "heapq.heappop",
    "heapq.heappush",
    "isinstance",
    "len",
    "list",
    "max",
    "numpy.abs",
    "numpy.amax",
    "numpy.array",
    "numpy.inf",
    "numpy.maximum",
    "numpy.newaxis",
    "numpy.sum",
    "range",
    "sorted",
    "tuple"
   ]
  },
  "type": "function"
 },
 "cis.collocation.kdtree.HaversineDistanceKDTree._query_ball_point": {
  "data": {
   "lineno": 1324,
   "symbols_in_volume": [
    "cis.collocation.kdtree.RectangleHaversine",
    "traverse_checking"
   ]
  },
  "type": "function"
 },
 "cis.collocation.kdtree.HaversineDistanceKDTree._query_ball_point.traverse_checking": {
  "data": {
   "lineno": 1327,
   "symbols_in_volume": [
    "cis.collocation.kdtree.KDTree",
    "cis.collocation.kdtree.haversine_distance",
    "isinstance",
    "traverse_checking",
    "traverse_no_checking"
   ]
  },
  "type": "function"
 },
 "cis.collocation.kdtree.HaversineDistanceKDTree._query_ball_point.traverse_no_checking": {
  "data": {
   "lineno": 1339,
   "symbols_in_volume": [
    "cis.collocation.kdtree.KDTree",
    "isinstance",
    "traverse_no_checking"
   ]
  },
  "type": "function"
 },
 "cis.collocation.kdtree.HaversineDistanceKDTree.query_ball_tree": {
  "data": {
   "lineno": 1261,
   "symbols_in_volume": [
    "cis.collocation.kdtree.RectangleHaversine",
    "range",
    "traverse_checking"
   ]
  },
  "type": "function"
 },
 "cis.collocation.kdtree.HaversineDistanceKDTree.query_ball_tree.traverse_checking": {
  "data": {
   "lineno": 1282,
   "symbols_in_volume": [
    "cis.collocation.kdtree.KDTree",
    "cis.collocation.kdtree.haversine_distance",
    "isinstance",
    "traverse_checking",
    "traverse_no_checking"
   ]
  },
  "type": "function"
 },
 "cis.collocation.kdtree.HaversineDistanceKDTree.query_ball_tree.traverse_no_checking": {
  "data": {
   "lineno": 1308,
   "symbols_in_volume": [
    "cis.collocation.kdtree.KDTree",
    "isinstance",
    "traverse_no_checking"
   ]
  },
  "type": "function"
 },
 "cis.collocation.kdtree.KDTree": {
  "data": {
   "lineno": 423,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "cis.collocation.kdtree.KDTree.__init__": {
  "data": {
   "lineno": 475,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "numpy.amax",
    "numpy.amin",
    "numpy.arange",
    "numpy.asarray",
    "numpy.shape"
   ]
  },
  "type": "function"
 },
 "cis.collocation.kdtree.KDTree._build": {
  "data": {
   "lineno": 511,
   "symbols_in_volume": [
    "ValueError",
    "cis.collocation.kdtree.KDTree",
    "len",
    "numpy.all",
    "numpy.amax",
    "numpy.amin",
    "numpy.argmax",
    "numpy.copy",
    "numpy.nonzero"
   ]
  },
  "type": "function"
 },
 "cis.collocation.kdtree.KDTree._query": {
  "data": {
   "lineno": 570,
   "symbols_in_volume": [
    "abs",
    "cis.collocation.kdtree.KDTree",
    "cis.collocation.kdtree.minkowski_distance_p",
    "heapq.heappop",
    "heapq.heappush",
    "isinstance",
    "len",
    "list",
    "max",
    "numpy.abs",
    "numpy.amax",
    "numpy.inf",
    "numpy.maximum",
    "numpy.newaxis",
    "numpy.sum",
    "range",
    "sorted",
    "tuple"
   ]
  },
  "type": "function"
 },
 "cis.collocation.kdtree.KDTree._query_ball_point": {
  "data": {
   "lineno": 789,
   "symbols_in_volume": [
    "cis.collocation.kdtree.Rectangle",
    "traverse_checking"
   ]
  },
  "type": "function"
 },
 "cis.collocation.kdtree.KDTree._query_ball_point.traverse_checking": {
  "data": {
   "lineno": 792,
   "symbols_in_volume": [
    "cis.collocation.kdtree.KDTree",
    "cis.collocation.kdtree.minkowski_distance",
    "isinstance",
    "traverse_checking",
    "traverse_no_checking"
   ]
  },
  "type": "function"
 },
 "cis.collocation.kdtree.KDTree._query_ball_point.traverse_no_checking": {
  "data": {
   "lineno": 804,
   "symbols_in_volume": [
    "cis.collocation.kdtree.KDTree",
    "isinstance",
    "traverse_no_checking"
   ]
  },
  "type": "function"
 },
 "cis.collocation.kdtree.KDTree.count_neighbors": {
  "data": {
   "lineno": 1030,
   "symbols_in_volume": [
    "ValueError",
    "cis.collocation.kdtree.Rectangle",
    "int",
    "len",
    "numpy.arange",
    "numpy.array",
    "numpy.asarray",
    "numpy.shape",
    "numpy.zeros",
    "traverse"
   ]
  },
  "type": "function"
 },
 "cis.collocation.kdtree.KDTree.count_neighbors.traverse": {
  "data": {
   "lineno": 1055,
   "symbols_in_volume": [
    "cis.collocation.kdtree.KDTree",
    "cis.collocation.kdtree.minkowski_distance",
    "isinstance",
    "len",
    "numpy.newaxis",
    "numpy.searchsorted",
    "traverse"
   ]
  },
  "type": "function"
 },
 "cis.collocation.kdtree.KDTree.innernode": {
  "data": {
   "lineno": 503
  },
  "type": "class"
 },
 "cis.collocation.kdtree.KDTree.innernode.__init__": {
  "data": {
   "lineno": 504
  },
  "type": "function"
 },
 "cis.collocation.kdtree.KDTree.leafnode": {
  "data": {
   "lineno": 498
  },
  "type": "class"
 },
 "cis.collocation.kdtree.KDTree.leafnode.__init__": {
  "data": {
   "lineno": 499,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "cis.collocation.kdtree.KDTree.node": {
  "data": {
   "lineno": 486,
   "symbols_in_volume": [
    "cis.collocation.kdtree.sys",
    "object"
   ]
  },
  "type": "class"
 },
 "cis.collocation.kdtree.KDTree.node.__eq__": {
  "data": {
   "lineno": 496,
   "symbols_in_volume": [
    "id"
   ]
  },
  "type": "function"
 },
 "cis.collocation.kdtree.KDTree.node.__ge__": {
  "data": {
   "lineno": 494,
   "symbols_in_volume": [
    "id"
   ]
  },
  "type": "function"
 },
 "cis.collocation.kdtree.KDTree.node.__gt__": {
  "data": {
   "lineno": 490,
   "symbols_in_volume": [
    "id"
   ]
  },
  "type": "function"
 },
 "cis.collocation.kdtree.KDTree.node.__le__": {
  "data": {
   "lineno": 492,
   "symbols_in_volume": [
    "id"
   ]
  },
  "type": "function"
 },
 "cis.collocation.kdtree.KDTree.node.__lt__": {
  "data": {
   "lineno": 488,
   "symbols_in_volume": [
    "id"
   ]
  },
  "type": "function"
 },
 "cis.collocation.kdtree.KDTree.query": {
  "data": {
   "lineno": 652,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.asarray",
    "numpy.empty",
    "numpy.float",
    "numpy.inf",
    "numpy.int",
    "numpy.ndindex",
    "numpy.object",
    "numpy.shape",
    "range"
   ]
  },
  "type": "function"
 },
 "cis.collocation.kdtree.KDTree.query_ball_point": {
  "data": {
   "lineno": 813,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.asarray",
    "numpy.empty",
    "numpy.ndindex",
    "numpy.object"
   ]
  },
  "type": "function"
 },
 "cis.collocation.kdtree.KDTree.query_ball_tree": {
  "data": {
   "lineno": 862,
   "symbols_in_volume": [
    "cis.collocation.kdtree.Rectangle",
    "range",
    "traverse_checking"
   ]
  },
  "type": "function"
 },
 "cis.collocation.kdtree.KDTree.query_ball_tree.traverse_checking": {
  "data": {
   "lineno": 885,
   "symbols_in_volume": [
    "cis.collocation.kdtree.KDTree",
    "cis.collocation.kdtree.minkowski_distance",
    "isinstance",
    "traverse_checking",
    "traverse_no_checking"
   ]
  },
  "type": "function"
 },
 "cis.collocation.kdtree.KDTree.query_ball_tree.traverse_no_checking": {
  "data": {
   "lineno": 911,
   "symbols_in_volume": [
    "cis.collocation.kdtree.KDTree",
    "isinstance",
    "traverse_no_checking"
   ]
  },
  "type": "function"
 },
 "cis.collocation.kdtree.KDTree.query_pairs": {
  "data": {
   "lineno": 927,
   "symbols_in_volume": [
    "cis.collocation.kdtree.Rectangle",
    "set",
    "traverse_checking"
   ]
  },
  "type": "function"
 },
 "cis.collocation.kdtree.KDTree.query_pairs.traverse_checking": {
  "data": {
   "lineno": 949,
   "symbols_in_volume": [
    "cis.collocation.kdtree.KDTree",
    "cis.collocation.kdtree.minkowski_distance",
    "id",
    "isinstance",
    "traverse_checking",
    "traverse_no_checking"
   ]
  },
  "type": "function"
 },
 "cis.collocation.kdtree.KDTree.query_pairs.traverse_no_checking": {
  "data": {
   "lineno": 994,
   "symbols_in_volume": [
    "cis.collocation.kdtree.KDTree",
    "id",
    "isinstance",
    "traverse_no_checking"
   ]
  },
  "type": "function"
 },
 "cis.collocation.kdtree.KDTree.sparse_distance_matrix": {
  "data": {
   "lineno": 1104,
   "symbols_in_volume": [
    "cis.collocation.kdtree.Rectangle",
    "traverse"
   ]
  },
  "type": "function"
 },
 "cis.collocation.kdtree.KDTree.sparse_distance_matrix.traverse": {
  "data": {
   "lineno": 1123,
   "symbols_in_volume": [
    "cis.collocation.kdtree.KDTree",
    "cis.collocation.kdtree.minkowski_distance",
    "isinstance",
    "traverse"
   ]
  },
  "type": "function"
 },
 "cis.collocation.kdtree.PI": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "cis.collocation.kdtree.RADIUS_EARTH": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "cis.collocation.kdtree.Rectangle": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "cis.collocation.kdtree.RectangleBase"
   ]
  },
  "type": "class"
 },
 "cis.collocation.kdtree.Rectangle.max_distance_point": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "cis.collocation.kdtree.minkowski_distance",
    "numpy.maximum"
   ]
  },
  "type": "function"
 },
 "cis.collocation.kdtree.Rectangle.max_distance_rectangle": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "cis.collocation.kdtree.minkowski_distance",
    "numpy.maximum"
   ]
  },
  "type": "function"
 },
 "cis.collocation.kdtree.Rectangle.min_distance_point": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "cis.collocation.kdtree.minkowski_distance",
    "numpy.maximum"
   ]
  },
  "type": "function"
 },
 "cis.collocation.kdtree.Rectangle.min_distance_rectangle": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "cis.collocation.kdtree.minkowski_distance",
    "numpy.maximum"
   ]
  },
  "type": "function"
 },
 "cis.collocation.kdtree.RectangleBase": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "cis.collocation.kdtree.RectangleBase.__init__": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "numpy.float",
    "numpy.maximum",
    "numpy.minimum"
   ]
  },
  "type": "function"
 },
 "cis.collocation.kdtree.RectangleBase.__repr__": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "list",
    "zip"
   ]
  },
  "type": "function"
 },
 "cis.collocation.kdtree.RectangleBase.split": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "numpy.copy"
   ]
  },
  "type": "function"
 },
 "cis.collocation.kdtree.RectangleBase.volume": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "numpy.prod"
   ]
  },
  "type": "function"
 },
 "cis.collocation.kdtree.RectangleHaversine": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "cis.collocation.kdtree.RectangleBase"
   ]
  },
  "type": "class"
 },
 "cis.collocation.kdtree.RectangleHaversine._min_distance_point": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "cis.collocation.kdtree.HALF_PI",
    "cis.collocation.kdtree.PI",
    "cis.collocation.kdtree.TWO_PI",
    "cis.collocation.kdtree.geodesic_to_line_of_longitude_crossing_latitude",
    "cis.collocation.kdtree.haversine_distance_from_radians",
    "cis.collocation.kdtree.line_of_longitude_segment_nearer_end_latitude",
    "numpy.fmod",
    "numpy.maximum",
    "numpy.minimum",
    "numpy.radians"
   ]
  },
  "type": "function"
 },
 "cis.collocation.kdtree.RectangleHaversine.max_distance_point": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "cis.collocation.kdtree.PI",
    "cis.collocation.kdtree.RADIUS_EARTH",
    "numpy.radians"
   ]
  },
  "type": "function"
 },
 "cis.collocation.kdtree.RectangleHaversine.max_distance_point_approx": {
  "data": {
   "lineno": 380,
   "symbols_in_volume": [
    "cis.collocation.kdtree.haversine_distance",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "cis.collocation.kdtree.RectangleHaversine.max_distance_rectangle": {
  "data": {
   "lineno": 410,
   "symbols_in_volume": [
    "cis.collocation.kdtree.haversine_distance",
    "numpy.maximum"
   ]
  },
  "type": "function"
 },
 "cis.collocation.kdtree.RectangleHaversine.min_distance_point": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "numpy.radians"
   ]
  },
  "type": "function"
 },
 "cis.collocation.kdtree.RectangleHaversine.min_distance_point_approx": {
  "data": {
   "lineno": 365,
   "symbols_in_volume": [
    "cis.collocation.kdtree.haversine_distance",
    "numpy.maximum",
    "numpy.minimum"
   ]
  },
  "type": "function"
 },
 "cis.collocation.kdtree.RectangleHaversine.min_distance_rectangle": {
  "data": {
   "lineno": 398,
   "symbols_in_volume": [
    "cis.collocation.kdtree.haversine_distance",
    "numpy.maximum"
   ]
  },
  "type": "function"
 },
 "cis.collocation.kdtree.TWO_PI": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "cis.collocation.kdtree.__all__": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "cis.collocation.kdtree.distance_matrix": {
  "data": {
   "lineno": 1349,
   "symbols_in_volume": [
    "ValueError",
    "cis.collocation.kdtree.minkowski_distance",
    "numpy.asarray",
    "numpy.empty",
    "numpy.float",
    "numpy.newaxis",
    "range"
   ]
  },
  "type": "function"
 },
 "cis.collocation.kdtree.geodesic_to_line_of_longitude_crossing_latitude": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "ValueError",
    "ZeroDivisionError",
    "cis.collocation.kdtree.HALF_PI",
    "cis.collocation.kdtree.math"
   ]
  },
  "type": "function"
 },
 "cis.collocation.kdtree.haversine": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "cis.collocation.kdtree.RADIUS_EARTH",
    "cis.collocation.kdtree.math",
    "numpy.arcsin",
    "numpy.cos",
    "numpy.sin",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "cis.collocation.kdtree.haversine_distance": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "cis.collocation.kdtree.haversine",
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "cis.collocation.kdtree.haversine_distance_from_radians": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "cis.collocation.kdtree.RADIUS_EARTH",
    "numpy.arcsin",
    "numpy.cos",
    "numpy.sin",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "cis.collocation.kdtree.heappop": {
  "data": {
   "shadows": "heapq.heappop"
  },
  "type": "import"
 },
 "cis.collocation.kdtree.heappush": {
  "data": {
   "shadows": "heapq.heappush"
  },
  "type": "import"
 },
 "cis.collocation.kdtree.line_of_longitude_segment_nearer_end_latitude": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "cis.collocation.kdtree.math"
   ]
  },
  "type": "function"
 },
 "cis.collocation.kdtree.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "cis.collocation.kdtree.minkowski_distance": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "cis.collocation.kdtree.minkowski_distance_p",
    "numpy.asarray",
    "numpy.inf"
   ]
  },
  "type": "function"
 },
 "cis.collocation.kdtree.minkowski_distance_p": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.amax",
    "numpy.asarray",
    "numpy.inf",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "cis.collocation.kdtree.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "cis.collocation.kdtree.scipy.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "cis.collocation.kdtree.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "cis.data_io": {
  "data": {},
  "type": "module"
 },
 "cis.data_io.Coord": {
  "data": {},
  "type": "module"
 },
 "cis.data_io.Coord.Coord": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "cis.data_io.ungridded_data.LazyData"
   ]
  },
  "type": "class"
 },
 "cis.data_io.Coord.Coord.__eq__": {
  "data": {
   "lineno": 57
  },
  "type": "function"
 },
 "cis.data_io.Coord.Coord.__getitem__": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "cis.data_io.Coord.Coord",
    "copy.deepcopy"
   ]
  },
  "type": "function"
 },
 "cis.data_io.Coord.Coord.__init__": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "cis.data_io.Coord.Coord",
    "isinstance",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "cis.data_io.Coord.Coord.convert_TAI_time_to_std_time": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "cis.time_util.cis_standard_time_unit",
    "cis.time_util.convert_sec_since_to_std_time"
   ]
  },
  "type": "function"
 },
 "cis.data_io.Coord.Coord.convert_datetime_to_standard_time": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "cis.time_util.cis_standard_time_unit",
    "cis.time_util.convert_datetime_to_std_time"
   ]
  },
  "type": "function"
 },
 "cis.data_io.Coord.Coord.convert_julian_to_std_time": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "cis.time_util.cis_standard_time_unit",
    "cis.time_util.convert_julian_date_to_std_time"
   ]
  },
  "type": "function"
 },
 "cis.data_io.Coord.Coord.convert_standard_time_to_datetime": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "cis.time_util.cis_standard_time_unit",
    "cis.time_util.convert_std_time_to_datetime"
   ]
  },
  "type": "function"
 },
 "cis.data_io.Coord.Coord.convert_to_std_time": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "ValueError",
    "cf_units.Unit",
    "cis.time_util.cis_standard_time_unit",
    "cis.time_util.convert_datetime_to_std_time",
    "cis.time_util.convert_time_since_to_std_time",
    "cis.time_util.convert_time_using_time_stamp_info_to_std_time",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "cis.data_io.Coord.Coord.copy": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "cis.data_io.Coord.Coord",
    "cis.data_io.Coord.numpy",
    "copy.deepcopy"
   ]
  },
  "type": "function"
 },
 "cis.data_io.Coord.Coord.from_many_coordinates": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "cis.utils.concatenate",
    "classmethod",
    "cls"
   ]
  },
  "type": "function"
 },
 "cis.data_io.Coord.Coord.points": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "cis.data_io.Coord.Coord.set_longitude_range": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "cis.utils.fix_longitude_range"
   ]
  },
  "type": "function"
 },
 "cis.data_io.Coord.CoordList": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "class"
 },
 "cis.data_io.Coord.CoordList.__init__": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "ValueError",
    "all",
    "cis.data_io.Coord.Coord",
    "isinstance",
    "list.__init__"
   ]
  },
  "type": "function"
 },
 "cis.data_io.Coord.CoordList.append": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "any",
    "cis.data_io.Coord.CoordList",
    "cis.exceptions.DuplicateCoordinateError",
    "super"
   ]
  },
  "type": "function"
 },
 "cis.data_io.Coord.CoordList.copy": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "cis.data_io.Coord.CoordList"
   ]
  },
  "type": "function"
 },
 "cis.data_io.Coord.CoordList.find_standard_coords": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "cis.data_io.hyperpoint.HyperPoint.standard_names",
    "cis.exceptions.CoordinateNotFoundError"
   ]
  },
  "type": "function"
 },
 "cis.data_io.Coord.CoordList.get_coord": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "cis.exceptions.CoordinateNotFoundError",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "cis.data_io.Coord.CoordList.get_coordinates_points": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "cis.data_io.hyperpoint_view.UngriddedHyperPointView"
   ]
  },
  "type": "function"
 },
 "cis.data_io.Coord.CoordList.get_coords": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "ValueError",
    "all",
    "cis.data_io.Coord.six",
    "collections.Mapping",
    "isinstance",
    "type"
   ]
  },
  "type": "function"
 },
 "cis.data_io.Coord.CoordinateNotFoundError": {
  "data": {
   "shadows": "cis.exceptions.CoordinateNotFoundError"
  },
  "type": "import"
 },
 "cis.data_io.Coord.DuplicateCoordinateError": {
  "data": {
   "shadows": "cis.exceptions.DuplicateCoordinateError"
  },
  "type": "import"
 },
 "cis.data_io.Coord.HyperPoint": {
  "data": {
   "shadows": "cis.data_io.hyperpoint.HyperPoint"
  },
  "type": "import"
 },
 "cis.data_io.Coord.LazyData": {
  "data": {
   "shadows": "cis.data_io.ungridded_data.LazyData"
  },
  "type": "import"
 },
 "cis.data_io.Coord.Mapping": {
  "data": {
   "shadows": "collections.Mapping"
  },
  "type": "import"
 },
 "cis.data_io.Coord.UngriddedHyperPointView": {
  "data": {
   "shadows": "cis.data_io.hyperpoint_view.UngriddedHyperPointView"
  },
  "type": "import"
 },
 "cis.data_io.Coord.Unit": {
  "data": {
   "shadows": "cf_units.Unit"
  },
  "type": "import"
 },
 "cis.data_io.Coord.cis_standard_time_unit": {
  "data": {
   "shadows": "cis.time_util.cis_standard_time_unit"
  },
  "type": "import"
 },
 "cis.data_io.Coord.concatenate": {
  "data": {
   "shadows": "cis.utils.concatenate"
  },
  "type": "import"
 },
 "cis.data_io.Coord.convert_datetime_to_std_time": {
  "data": {
   "shadows": "cis.time_util.convert_datetime_to_std_time"
  },
  "type": "import"
 },
 "cis.data_io.Coord.convert_julian_date_to_std_time": {
  "data": {
   "shadows": "cis.time_util.convert_julian_date_to_std_time"
  },
  "type": "import"
 },
 "cis.data_io.Coord.convert_sec_since_to_std_time": {
  "data": {
   "shadows": "cis.time_util.convert_sec_since_to_std_time"
  },
  "type": "import"
 },
 "cis.data_io.Coord.convert_std_time_to_datetime": {
  "data": {
   "shadows": "cis.time_util.convert_std_time_to_datetime"
  },
  "type": "import"
 },
 "cis.data_io.Coord.convert_time_since_to_std_time": {
  "data": {
   "shadows": "cis.time_util.convert_time_since_to_std_time"
  },
  "type": "import"
 },
 "cis.data_io.Coord.convert_time_using_time_stamp_info_to_std_time": {
  "data": {
   "shadows": "cis.time_util.convert_time_using_time_stamp_info_to_std_time"
  },
  "type": "import"
 },
 "cis.data_io.Coord.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "cis.data_io.Coord.fix_longitude_range": {
  "data": {
   "shadows": "cis.utils.fix_longitude_range"
  },
  "type": "import"
 },
 "cis.data_io.Coord.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "cis.data_io.Coord.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "cis.data_io.aeronet": {
  "data": {},
  "type": "module"
 },
 "cis.data_io.aeronet.AERONET_COORDINATE_RENAME": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "cis.data_io.aeronet.AERONET_HEADER_LENGTH": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "cis.data_io.aeronet.AERONET_MISSING_VALUE": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "cis.data_io.aeronet.Counter": {
  "data": {
   "shadows": "collections.Counter"
  },
  "type": "import"
 },
 "cis.data_io.aeronet.FileFormatError": {
  "data": {
   "shadows": "cis.exceptions.FileFormatError"
  },
  "type": "import"
 },
 "cis.data_io.aeronet.InvalidVariableError": {
  "data": {
   "shadows": "cis.exceptions.InvalidVariableError"
  },
  "type": "import"
 },
 "cis.data_io.aeronet.Metadata": {
  "data": {
   "shadows": "cis.data_io.ungridded_data.Metadata"
  },
  "type": "import"
 },
 "cis.data_io.aeronet.V2_HEADER": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "cis.data_io.aeronet.V3_HEADER": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "cis.data_io.aeronet.add_element_to_list_in_dict": {
  "data": {
   "shadows": "cis.utils.add_element_to_list_in_dict"
  },
  "type": "import"
 },
 "cis.data_io.aeronet.cis_standard_time_unit": {
  "data": {
   "shadows": "cis.time_util.cis_standard_time_unit"
  },
  "type": "import"
 },
 "cis.data_io.aeronet.concatenate": {
  "data": {
   "shadows": "cis.utils.concatenate"
  },
  "type": "import"
 },
 "cis.data_io.aeronet.defaultdeletechars": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "cis.data_io.aeronet.get_aeronet_file_variables": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "cis.data_io.aeronet.AERONET_COORDINATE_RENAME",
    "cis.data_io.aeronet.AERONET_HEADER_LENGTH",
    "cis.data_io.aeronet.defaultdeletechars",
    "cis.data_io.aeronet.get_aeronet_version",
    "cis.data_io.aeronet.get_slice_of_lines_from_file",
    "collections.Counter",
    "int",
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "cis.data_io.aeronet.get_aeronet_version": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "cis.data_io.aeronet.V2_HEADER",
    "cis.data_io.aeronet.V3_HEADER",
    "cis.data_io.aeronet.get_slice_of_lines_from_file",
    "cis.exceptions.FileFormatError"
   ]
  },
  "type": "function"
 },
 "cis.data_io.aeronet.get_file_metadata": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "cis.data_io.aeronet.AERONET_HEADER_LENGTH",
    "cis.data_io.aeronet.get_aeronet_version",
    "cis.data_io.ungridded_data.Metadata",
    "open",
    "range"
   ]
  },
  "type": "function"
 },
 "cis.data_io.aeronet.get_slice_of_lines_from_file": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "itertools.islice",
    "list",
    "open"
   ]
  },
  "type": "function"
 },
 "cis.data_io.aeronet.islice": {
  "data": {
   "shadows": "itertools.islice"
  },
  "type": "import"
 },
 "cis.data_io.aeronet.load_aeronet": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "ValueError",
    "cis.data_io.aeronet.AERONET_HEADER_LENGTH",
    "cis.data_io.aeronet.AERONET_MISSING_VALUE",
    "cis.data_io.aeronet.get_aeronet_file_variables",
    "cis.data_io.aeronet.get_aeronet_version",
    "cis.data_io.aeronet.get_file_metadata",
    "cis.exceptions.InvalidVariableError",
    "cis.time_util.cis_standard_time_unit.date2num",
    "float",
    "len",
    "numpy.ma.masked_invalid",
    "pandas.read_csv",
    "pandas.to_datetime"
   ]
  },
  "type": "function"
 },
 "cis.data_io.aeronet.load_multiple_aeronet": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "cis.data_io.aeronet.load_aeronet",
    "cis.data_io.aeronet.logging",
    "cis.utils.add_element_to_list_in_dict",
    "cis.utils.concatenate",
    "list"
   ]
  },
  "type": "function"
 },
 "cis.data_io.aeronet.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "cis.data_io.aeronet.masked_invalid": {
  "data": {
   "shadows": "numpy.ma.masked_invalid"
  },
  "type": "import"
 },
 "cis.data_io.aeronet.read_csv": {
  "data": {
   "shadows": "pandas.read_csv"
  },
  "type": "import"
 },
 "cis.data_io.aeronet.to_datetime": {
  "data": {
   "shadows": "pandas.to_datetime"
  },
  "type": "import"
 },
 "cis.data_io.common_data": {
  "data": {},
  "type": "module"
 },
 "cis.data_io.common_data.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "cis.data_io.common_data.CommonData": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "abc.ABCMeta",
    "cis.data_io.common_data.six",
    "object"
   ]
  },
  "type": "class"
 },
 "cis.data_io.common_data.CommonData._get_coord": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "_try_coord",
    "cis.utils.standard_axes.get",
    "dict"
   ]
  },
  "type": "function"
 },
 "cis.data_io.common_data.CommonData._get_coord._try_coord": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "cis.exceptions.CoordinateNotFoundError",
    "iris.exceptions.CoordinateNotFoundError"
   ]
  },
  "type": "function"
 },
 "cis.data_io.common_data.CommonData._get_default_plot_type": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "cis.data_io.common_data.CommonData.alias": {
  "data": {
   "lineno": 39
  },
  "type": "function"
 },
 "cis.data_io.common_data.CommonData.as_data_frame": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "cis.data_io.common_data.CommonData.collocated_onto": {
  "data": {
   "lineno": 159
  },
  "type": "function"
 },
 "cis.data_io.common_data.CommonData.get_all_points": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "cis.data_io.common_data.CommonData.get_coordinates_points": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "cis.data_io.common_data.CommonData.get_non_masked_points": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "cis.data_io.common_data.CommonData.history": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "property"
   ]
  },
  "type": "function"
 },
 "cis.data_io.common_data.CommonData.is_gridded": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "cis.data_io.common_data.CommonData.plot": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "cis.plotting.plot.basic_plot"
   ]
  },
  "type": "function"
 },
 "cis.data_io.common_data.CommonData.sampled_from": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "cis.data_io.common_data.CommonData.set_longitude_range": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "cis.data_io.common_data.CommonData.subset": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "cis.data_io.common_data.CommonData.var_name": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "property"
   ]
  },
  "type": "function"
 },
 "cis.data_io.common_data.CommonDataList": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "abc.ABCMeta",
    "cis.data_io.common_data.six",
    "list"
   ]
  },
  "type": "class"
 },
 "cis.data_io.common_data.CommonDataList.__add__": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "list.__add__"
   ]
  },
  "type": "function"
 },
 "cis.data_io.common_data.CommonDataList.__getitem__": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "list.__getitem__"
   ]
  },
  "type": "function"
 },
 "cis.data_io.common_data.CommonDataList.__getslice__": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "cis.data_io.common_data.CommonDataList",
    "super"
   ]
  },
  "type": "function"
 },
 "cis.data_io.common_data.CommonDataList.__init__": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "cis.data_io.common_data.CommonDataList",
    "super"
   ]
  },
  "type": "function"
 },
 "cis.data_io.common_data.CommonDataList.__repr__": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "repr"
   ]
  },
  "type": "function"
 },
 "cis.data_io.common_data.CommonDataList.__str__": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "enumerate"
   ]
  },
  "type": "function"
 },
 "cis.data_io.common_data.CommonDataList._get_coord": {
  "data": {
   "lineno": 438
  },
  "type": "function"
 },
 "cis.data_io.common_data.CommonDataList.add_history": {
  "data": {
   "lineno": 342
  },
  "type": "function"
 },
 "cis.data_io.common_data.CommonDataList.append": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "any",
    "cis.data_io.common_data.CommonDataList",
    "getattr",
    "len",
    "super",
    "zip"
   ]
  },
  "type": "function"
 },
 "cis.data_io.common_data.CommonDataList.append_or_extend": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": [
    "isinstance",
    "list"
   ]
  },
  "type": "function"
 },
 "cis.data_io.common_data.CommonDataList.collocated_onto": {
  "data": {
   "lineno": 396
  },
  "type": "function"
 },
 "cis.data_io.common_data.CommonDataList.coords": {
  "data": {
   "lineno": 351
  },
  "type": "function"
 },
 "cis.data_io.common_data.CommonDataList.extend": {
  "data": {
   "lineno": 307
  },
  "type": "function"
 },
 "cis.data_io.common_data.CommonDataList.filenames": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "cis.data_io.common_data.CommonDataList.is_gridded": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "NotImplementedError",
    "abc.abstractmethod",
    "property"
   ]
  },
  "type": "function"
 },
 "cis.data_io.common_data.CommonDataList.plot": {
  "data": {
   "lineno": 417,
   "symbols_in_volume": [
    "cis.plotting.plot.multilayer_plot"
   ]
  },
  "type": "function"
 },
 "cis.data_io.common_data.CommonDataList.set_longitude_range": {
  "data": {
   "lineno": 358
  },
  "type": "function"
 },
 "cis.data_io.common_data.CommonDataList.subset": {
  "data": {
   "lineno": 368,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "cis.data_io.common_data.CommonDataList.var_name": {
  "data": {
   "lineno": 322,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "cis.data_io.common_data.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "cis.data_io.common_data.basic_plot": {
  "data": {
   "shadows": "cis.plotting.plot.basic_plot"
  },
  "type": "import"
 },
 "cis.data_io.common_data.cis_ex": {
  "data": {
   "shadows": "cis.exceptions"
  },
  "type": "import"
 },
 "cis.data_io.common_data.iris_ex": {
  "data": {
   "shadows": "iris.exceptions"
  },
  "type": "import"
 },
 "cis.data_io.common_data.multilayer_plot": {
  "data": {
   "shadows": "cis.plotting.plot.multilayer_plot"
  },
  "type": "import"
 },
 "cis.data_io.common_data.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "cis.data_io.common_data.standard_axes": {
  "data": {
   "shadows": "cis.utils.standard_axes"
  },
  "type": "import"
 },
 "cis.data_io.data_reader": {
  "data": {},
  "type": "module"
 },
 "cis.data_io.data_reader.DataReader": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "cis.data_io.data_reader.DataReader.__init__": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "cis.data_io.products.AProduct.get_coordinates",
    "cis.data_io.products.AProduct.get_data",
    "cis.data_io.products.AProduct.get_variables"
   ]
  },
  "type": "function"
 },
 "cis.data_io.data_reader.DataReader._expand_wildcards": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "ValueError",
    "any",
    "cis.data_io.data_reader.fnmatch",
    "cis.data_io.data_reader.logging",
    "len"
   ]
  },
  "type": "function"
 },
 "cis.data_io.data_reader.DataReader.read_coordinates": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "cis.utils.listify"
   ]
  },
  "type": "function"
 },
 "cis.data_io.data_reader.DataReader.read_data_list": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "IndexError",
    "ValueError",
    "aliases",
    "cis.data_io.gridded_data.GriddedDataList",
    "cis.data_io.ungridded_data.UngriddedDataList",
    "cis.utils.listify",
    "enumerate"
   ]
  },
  "type": "function"
 },
 "cis.data_io.data_reader.DataReader.read_datagroups": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "cis.data_io.data_reader.DataReader.read_single_datagroup": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "aliases"
   ]
  },
  "type": "function"
 },
 "cis.data_io.data_reader.GriddedDataList": {
  "data": {
   "shadows": "cis.data_io.gridded_data.GriddedDataList"
  },
  "type": "import"
 },
 "cis.data_io.data_reader.OrderedSet": {
  "data": {
   "shadows": "cis.utils.OrderedSet"
  },
  "type": "import"
 },
 "cis.data_io.data_reader.UngriddedDataList": {
  "data": {
   "shadows": "cis.data_io.ungridded_data.UngriddedDataList"
  },
  "type": "import"
 },
 "cis.data_io.data_reader.expand_filelist": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "ValueError",
    "any",
    "cis.data_io.data_reader.os",
    "cis.data_io.data_reader.six",
    "cis.utils.OrderedSet",
    "cis.utils.listify",
    "glob.glob",
    "isinstance",
    "list"
   ]
  },
  "type": "function"
 },
 "cis.data_io.data_reader.fnmatch": {
  "data": {
   "shadows": "fnmatch"
  },
  "type": "import"
 },
 "cis.data_io.data_reader.get_coordinates": {
  "data": {
   "shadows": "cis.data_io.products.AProduct.get_coordinates"
  },
  "type": "import"
 },
 "cis.data_io.data_reader.get_data": {
  "data": {
   "shadows": "cis.data_io.products.AProduct.get_data"
  },
  "type": "import"
 },
 "cis.data_io.data_reader.get_variables": {
  "data": {
   "shadows": "cis.data_io.products.AProduct.get_variables"
  },
  "type": "import"
 },
 "cis.data_io.data_reader.glob": {
  "data": {
   "shadows": "glob.glob"
  },
  "type": "import"
 },
 "cis.data_io.data_reader.listify": {
  "data": {
   "shadows": "cis.utils.listify"
  },
  "type": "import"
 },
 "cis.data_io.data_reader.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "cis.data_io.data_reader.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "cis.data_io.data_reader.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "cis.data_io.data_writer": {
  "data": {},
  "type": "module"
 },
 "cis.data_io.data_writer.DataWriter": {
  "data": {
   "lineno": 1,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "cis.data_io.data_writer.DataWriter.write_data": {
  "data": {
   "lineno": 6
  },
  "type": "function"
 },
 "cis.data_io.hdf": {
  "data": {},
  "type": "module"
 },
 "cis.data_io.hdf.HDF4Error": {
  "data": {
   "shadows": "pyhdf.error.HDF4Error"
  },
  "type": "import"
 },
 "cis.data_io.hdf.InvalidVariableError": {
  "data": {
   "shadows": "cis.exceptions.InvalidVariableError"
  },
  "type": "import"
 },
 "cis.data_io.hdf.SD": {
  "data": {
   "shadows": "pyhdf.SD.SD"
  },
  "type": "import"
 },
 "cis.data_io.hdf._read_hdf4": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "IOError",
    "cis.data_io.hdf_sd.read",
    "cis.data_io.hdf_vd.read",
    "cis.exceptions.InvalidVariableError",
    "cis.utils.listify",
    "list",
    "pyhdf.error.HDF4Error",
    "str"
   ]
  },
  "type": "function"
 },
 "cis.data_io.hdf.get_hdf4_file_metadata": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "ImportError",
    "pyhdf.SD.SD"
   ]
  },
  "type": "function"
 },
 "cis.data_io.hdf.get_hdf4_file_variables": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "ValueError",
    "cis.data_io.hdf_sd.get_hdf_SD_file_variables",
    "cis.data_io.hdf_vd.get_hdf_VD_file_variables"
   ]
  },
  "type": "function"
 },
 "cis.data_io.hdf.hdf_sd": {
  "data": {
   "shadows": "cis.data_io.hdf_sd"
  },
  "type": "import"
 },
 "cis.data_io.hdf.hdf_vd": {
  "data": {
   "shadows": "cis.data_io.hdf_vd"
  },
  "type": "import"
 },
 "cis.data_io.hdf.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "cis.data_io.hdf.read": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "cis.data_io.hdf._read_hdf4",
    "cis.data_io.hdf.logging",
    "cis.utils.add_element_to_list_in_dict",
    "list"
   ]
  },
  "type": "function"
 },
 "cis.data_io.hdf.read_data": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "ValueError",
    "callable",
    "cis.data_io.hdf_sd.get_data",
    "cis.data_io.hdf_vd.get_data",
    "cis.utils.concatenate",
    "read_function"
   ]
  },
  "type": "function"
 },
 "cis.data_io.hdf.read_metadata": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "ValueError",
    "cis.data_io.hdf_sd.get_metadata",
    "cis.data_io.hdf_vd.get_metadata"
   ]
  },
  "type": "function"
 },
 "cis.data_io.hdf.utils": {
  "data": {
   "shadows": "cis.utils"
  },
  "type": "import"
 },
 "cis.data_io.hdf_sd": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "pyhdf.SD"
   ]
  },
  "type": "module"
 },
 "cis.data_io.hdf_sd.HDF_SDS": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "cis.data_io.hdf_sd.HDF_SDS.__init__": {
  "data": {
   "lineno": 49
  },
  "type": "function"
 },
 "cis.data_io.hdf_sd.HDF_SDS._close_sds": {
  "data": {
   "lineno": 62
  },
  "type": "function"
 },
 "cis.data_io.hdf_sd.HDF_SDS._open_sds": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "pyhdf.SD.SD"
   ]
  },
  "type": "function"
 },
 "cis.data_io.hdf_sd.HDF_SDS.attributes": {
  "data": {
   "lineno": 86
  },
  "type": "function"
 },
 "cis.data_io.hdf_sd.HDF_SDS.dimensions": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "zip"
   ]
  },
  "type": "function"
 },
 "cis.data_io.hdf_sd.HDF_SDS.get": {
  "data": {
   "lineno": 75
  },
  "type": "function"
 },
 "cis.data_io.hdf_sd.HDF_SDS.info": {
  "data": {
   "lineno": 97
  },
  "type": "function"
 },
 "cis.data_io.hdf_sd.Metadata": {
  "data": {
   "shadows": "cis.data_io.ungridded_data.Metadata"
  },
  "type": "import"
 },
 "cis.data_io.hdf_sd.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "cis.data_io.hdf_sd.SD": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "cis.data_io.hdf_sd.SDS": {
  "data": {
   "shadows": "pyhdf.SD.SD"
  },
  "type": "import"
 },
 "cis.data_io.hdf_sd.apply_offset_and_scaling": {
  "data": {
   "shadows": "cis.data_io.netcdf.apply_offset_and_scaling"
  },
  "type": "import"
 },
 "cis.data_io.hdf_sd.create_masked_array_for_missing_data": {
  "data": {
   "shadows": "cis.utils.create_masked_array_for_missing_data"
  },
  "type": "import"
 },
 "cis.data_io.hdf_sd.get_data": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "cis.data_io.hdf_sd.logging",
    "cis.data_io.netcdf.apply_offset_and_scaling",
    "cis.utils.create_masked_array_for_missing_data",
    "numpy.ma.masked_outside"
   ]
  },
  "type": "function"
 },
 "cis.data_io.hdf_sd.get_hdf_SD_file_variables": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "ImportError",
    "cis.data_io.hdf_sd.logging",
    "pyhdf.SD",
    "pyhdf.SD.SD"
   ]
  },
  "type": "function"
 },
 "cis.data_io.hdf_sd.get_metadata": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "cis.data_io.ungridded_data.Metadata"
   ]
  },
  "type": "function"
 },
 "cis.data_io.hdf_sd.listify": {
  "data": {
   "shadows": "cis.utils.listify"
  },
  "type": "import"
 },
 "cis.data_io.hdf_sd.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "cis.data_io.hdf_sd.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "cis.data_io.hdf_sd.read": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "ImportError",
    "cis.data_io.hdf_sd.HDF_SDS",
    "cis.utils.listify",
    "list",
    "pyhdf.SD.SD",
    "pyhdf.SD.SD.SD",
    "set"
   ]
  },
  "type": "function"
 },
 "cis.data_io.hdf_vd": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "pyhdf.HDF.HDF"
   ]
  },
  "type": "module"
 },
 "cis.data_io.hdf_vd.HDF": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "cis.data_io.hdf_vd.HDF4Error": {
  "data": {
   "shadows": "pyhdf.HDF.HDF4Error"
  },
  "type": "import"
 },
 "cis.data_io.hdf_vd.Metadata": {
  "data": {
   "shadows": "cis.data_io.ungridded_data.Metadata"
  },
  "type": "import"
 },
 "cis.data_io.hdf_vd.VDS": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "collections.namedtuple"
   ]
  },
  "type": "class"
 },
 "cis.data_io.hdf_vd.VS": {
  "data": {
   "shadows": "pyhdf.VS.VS"
  },
  "type": "import"
 },
 "cis.data_io.hdf_vd._get_attribute_value": {
  "data": {
   "lineno": 179
  },
  "type": "function"
 },
 "cis.data_io.hdf_vd._pop_attribute_value": {
  "data": {
   "lineno": 189
  },
  "type": "function"
 },
 "cis.data_io.hdf_vd.create_masked_array_for_missing_values": {
  "data": {
   "shadows": "cis.utils.create_masked_array_for_missing_values"
  },
  "type": "import"
 },
 "cis.data_io.hdf_vd.get_data": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "IOError",
    "cis.data_io.hdf_vd._get_attribute_value",
    "cis.utils.create_masked_array_for_missing_values",
    "numpy.array",
    "pyhdf.HDF.HDF",
    "pyhdf.HDF.HDF4Error"
   ]
  },
  "type": "function"
 },
 "cis.data_io.hdf_vd.get_hdf_VD_file_variables": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "ImportError",
    "cis.data_io.hdf_vd.logging",
    "pyhdf.HDF.HDF"
   ]
  },
  "type": "function"
 },
 "cis.data_io.hdf_vd.get_metadata": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "cis.data_io.hdf_vd._pop_attribute_value",
    "cis.data_io.ungridded_data.Metadata",
    "len",
    "pyhdf.HDF.HDF"
   ]
  },
  "type": "function"
 },
 "cis.data_io.hdf_vd.listify": {
  "data": {
   "shadows": "cis.utils.listify"
  },
  "type": "import"
 },
 "cis.data_io.hdf_vd.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "cis.data_io.hdf_vd.namedtuple": {
  "data": {
   "shadows": "collections.namedtuple"
  },
  "type": "import"
 },
 "cis.data_io.hdf_vd.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "cis.data_io.hdf_vd.read": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "ImportError",
    "cis.data_io.hdf_vd.VDS",
    "cis.utils.listify",
    "pyhdf.HDF.HDF"
   ]
  },
  "type": "function"
 },
 "cis.data_io.hyperpoint": {
  "data": {},
  "type": "module"
 },
 "cis.data_io.hyperpoint.HyperPoint": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "collections.namedtuple",
    "len"
   ]
  },
  "type": "class"
 },
 "cis.data_io.hyperpoint.HyperPoint.__new__": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "cis.data_io.hyperpoint.HyperPoint",
    "cis.data_io.hyperpoint.datetime",
    "cis.time_util.convert_datetime_to_std_time",
    "isinstance",
    "super"
   ]
  },
  "type": "function"
 },
 "cis.data_io.hyperpoint.HyperPoint.alt_sep": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "abs"
   ]
  },
  "type": "function"
 },
 "cis.data_io.hyperpoint.HyperPoint.compalt": {
  "data": {
   "lineno": 100
  },
  "type": "function"
 },
 "cis.data_io.hyperpoint.HyperPoint.compdist": {
  "data": {
   "lineno": 94
  },
  "type": "function"
 },
 "cis.data_io.hyperpoint.HyperPoint.comppres": {
  "data": {
   "lineno": 106
  },
  "type": "function"
 },
 "cis.data_io.hyperpoint.HyperPoint.comptime": {
  "data": {
   "lineno": 112
  },
  "type": "function"
 },
 "cis.data_io.hyperpoint.HyperPoint.furthest_point_from": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "cis.data_io.hyperpoint.HyperPoint"
   ]
  },
  "type": "function"
 },
 "cis.data_io.hyperpoint.HyperPoint.get_coord_tuple": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "list",
    "sorted"
   ]
  },
  "type": "function"
 },
 "cis.data_io.hyperpoint.HyperPoint.haversine_dist": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "cis.utils.haversine"
   ]
  },
  "type": "function"
 },
 "cis.data_io.hyperpoint.HyperPoint.modified": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "cis.data_io.hyperpoint.HyperPoint",
    "cis.data_io.hyperpoint.datetime",
    "cis.time_util.convert_datetime_to_std_time",
    "isinstance",
    "super"
   ]
  },
  "type": "function"
 },
 "cis.data_io.hyperpoint.HyperPoint.pres_sep": {
  "data": {
   "lineno": 137
  },
  "type": "function"
 },
 "cis.data_io.hyperpoint.HyperPoint.same_point_in_space": {
  "data": {
   "lineno": 78
  },
  "type": "function"
 },
 "cis.data_io.hyperpoint.HyperPoint.same_point_in_space_and_time": {
  "data": {
   "lineno": 82
  },
  "type": "function"
 },
 "cis.data_io.hyperpoint.HyperPoint.same_point_in_time": {
  "data": {
   "lineno": 75
  },
  "type": "function"
 },
 "cis.data_io.hyperpoint.HyperPoint.time_sep": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "abs"
   ]
  },
  "type": "function"
 },
 "cis.data_io.hyperpoint.HyperPointList": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "class"
 },
 "cis.data_io.hyperpoint.HyperPointList.__new__": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "ValueError",
    "all",
    "cis.data_io.hyperpoint.HyperPoint",
    "isinstance",
    "list.__new__"
   ]
  },
  "type": "function"
 },
 "cis.data_io.hyperpoint.HyperPointList.air_pressures": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "numpy.zeros",
    "property"
   ]
  },
  "type": "function"
 },
 "cis.data_io.hyperpoint.HyperPointList.altitudes": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "numpy.zeros",
    "property"
   ]
  },
  "type": "function"
 },
 "cis.data_io.hyperpoint.HyperPointList.enumerate_non_masked_points": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "enumerate"
   ]
  },
  "type": "function"
 },
 "cis.data_io.hyperpoint.HyperPointList.latitudes": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "numpy.zeros",
    "property"
   ]
  },
  "type": "function"
 },
 "cis.data_io.hyperpoint.HyperPointList.longitudes": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "numpy.zeros",
    "property"
   ]
  },
  "type": "function"
 },
 "cis.data_io.hyperpoint.HyperPointList.times": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "numpy.zeros",
    "property"
   ]
  },
  "type": "function"
 },
 "cis.data_io.hyperpoint.HyperPointList.vals": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "IndexError",
    "enumerate",
    "len",
    "numpy.zeros",
    "property"
   ]
  },
  "type": "function"
 },
 "cis.data_io.hyperpoint.convert_datetime_to_std_time": {
  "data": {
   "shadows": "cis.time_util.convert_datetime_to_std_time"
  },
  "type": "import"
 },
 "cis.data_io.hyperpoint.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "cis.data_io.hyperpoint.haversine": {
  "data": {
   "shadows": "cis.utils.haversine"
  },
  "type": "import"
 },
 "cis.data_io.hyperpoint.namedtuple": {
  "data": {
   "shadows": "collections.namedtuple"
  },
  "type": "import"
 },
 "cis.data_io.hyperpoint.zeros": {
  "data": {
   "shadows": "numpy.zeros"
  },
  "type": "import"
 },
 "cis.data_io.hyperpoint_view": {
  "data": {},
  "type": "module"
 },
 "cis.data_io.hyperpoint_view.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "cis.data_io.hyperpoint_view.GriddedHyperPointView": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "cis.data_io.hyperpoint_view.HyperPointView"
   ]
  },
  "type": "class"
 },
 "cis.data_io.hyperpoint_view.GriddedHyperPointView.__getitem__": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "IndexError",
    "NotImplementedError",
    "ValueError",
    "any",
    "cis.data_io.hyperpoint.HyperPoint",
    "cis.data_io.hyperpoint.HyperPoint.number_standard_names",
    "enumerate",
    "isinstance",
    "numpy.unravel_index",
    "slice",
    "tuple"
   ]
  },
  "type": "function"
 },
 "cis.data_io.hyperpoint_view.GriddedHyperPointView.__init__": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "enumerate",
    "len"
   ]
  },
  "type": "function"
 },
 "cis.data_io.hyperpoint_view.GriddedHyperPointView.__iter__": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "numpy.ma.masked"
   ]
  },
  "type": "function"
 },
 "cis.data_io.hyperpoint_view.GriddedHyperPointView.__len__": {
  "data": {
   "lineno": 251
  },
  "type": "function"
 },
 "cis.data_io.hyperpoint_view.GriddedHyperPointView.__setitem__": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "NotImplementedError",
    "ValueError",
    "any",
    "cis.data_io.hyperpoint.HyperPoint",
    "cis.data_io.hyperpoint.HyperPoint.number_standard_names",
    "enumerate",
    "isinstance",
    "numpy.isclose",
    "numpy.unravel_index",
    "slice",
    "tuple"
   ]
  },
  "type": "function"
 },
 "cis.data_io.hyperpoint_view.GriddedHyperPointView._dimension_index_for_hyperpoint_index": {
  "data": {
   "lineno": 359
  },
  "type": "function"
 },
 "cis.data_io.hyperpoint_view.GriddedHyperPointView.air_pressures": {
  "data": {
   "lineno": 414,
   "symbols_in_volume": [
    "ValueError",
    "cis.data_io.hyperpoint.HyperPoint.AIR_PRESSURE"
   ]
  },
  "type": "function"
 },
 "cis.data_io.hyperpoint_view.GriddedHyperPointView.altitudes": {
  "data": {
   "lineno": 401,
   "symbols_in_volume": [
    "ValueError",
    "cis.data_io.hyperpoint.HyperPoint.ALTITUDE"
   ]
  },
  "type": "function"
 },
 "cis.data_io.hyperpoint_view.GriddedHyperPointView.enumerate_non_masked_points": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "numpy.ma.masked",
    "numpy.unravel_index",
    "range"
   ]
  },
  "type": "function"
 },
 "cis.data_io.hyperpoint_view.GriddedHyperPointView.iter_all_points": {
  "data": {
   "lineno": 267
  },
  "type": "function"
 },
 "cis.data_io.hyperpoint_view.GriddedHyperPointView.iter_non_masked_points": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": [
    "numpy.ma.masked"
   ]
  },
  "type": "function"
 },
 "cis.data_io.hyperpoint_view.GriddedHyperPointView.latitudes": {
  "data": {
   "lineno": 375,
   "symbols_in_volume": [
    "ValueError",
    "cis.data_io.hyperpoint.HyperPoint.LATITUDE"
   ]
  },
  "type": "function"
 },
 "cis.data_io.hyperpoint_view.GriddedHyperPointView.longitudes": {
  "data": {
   "lineno": 388,
   "symbols_in_volume": [
    "ValueError",
    "cis.data_io.hyperpoint.HyperPoint.LONGITUDE"
   ]
  },
  "type": "function"
 },
 "cis.data_io.hyperpoint_view.GriddedHyperPointView.set_longitude_range": {
  "data": {
   "lineno": 335,
   "symbols_in_volume": [
    "enumerate",
    "numpy.empty_like"
   ]
  },
  "type": "function"
 },
 "cis.data_io.hyperpoint_view.GriddedHyperPointView.times": {
  "data": {
   "lineno": 427,
   "symbols_in_volume": [
    "ValueError",
    "cis.data_io.hyperpoint.HyperPoint.TIME"
   ]
  },
  "type": "function"
 },
 "cis.data_io.hyperpoint_view.HyperPoint": {
  "data": {
   "shadows": "cis.data_io.hyperpoint.HyperPoint"
  },
  "type": "import"
 },
 "cis.data_io.hyperpoint_view.HyperPointView": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "abc.ABCMeta",
    "cis.data_io.hyperpoint_view.six",
    "object"
   ]
  },
  "type": "class"
 },
 "cis.data_io.hyperpoint_view.HyperPointView.__getitem__": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "cis.data_io.hyperpoint_view.HyperPointView.__iter__": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "cis.data_io.hyperpoint_view.HyperPointView.__len__": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "cis.data_io.hyperpoint_view.HyperPointView.__setitem__": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "cis.data_io.hyperpoint_view.HyperPointView.enumerate_non_masked_points": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "cis.data_io.hyperpoint_view.HyperPointView.iter_all_points": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "cis.data_io.hyperpoint_view.HyperPointView.iter_non_masked_points": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "cis.data_io.hyperpoint_view.UngriddedHyperPointView": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "cis.data_io.hyperpoint_view.HyperPointView"
   ]
  },
  "type": "class"
 },
 "cis.data_io.hyperpoint_view.UngriddedHyperPointView.__getitem__": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "IndexError",
    "NotImplementedError",
    "cis.data_io.hyperpoint.HyperPoint",
    "isinstance",
    "slice"
   ]
  },
  "type": "function"
 },
 "cis.data_io.hyperpoint_view.UngriddedHyperPointView.__init__": {
  "data": {
   "lineno": 63
  },
  "type": "function"
 },
 "cis.data_io.hyperpoint_view.UngriddedHyperPointView.__iter__": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "numpy.ma.masked",
    "range"
   ]
  },
  "type": "function"
 },
 "cis.data_io.hyperpoint_view.UngriddedHyperPointView.__len__": {
  "data": {
   "lineno": 88
  },
  "type": "function"
 },
 "cis.data_io.hyperpoint_view.UngriddedHyperPointView.__setitem__": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "IndexError",
    "cis.data_io.hyperpoint.HyperPoint",
    "cis.data_io.hyperpoint.HyperPoint.number_standard_names",
    "isinstance",
    "range"
   ]
  },
  "type": "function"
 },
 "cis.data_io.hyperpoint_view.UngriddedHyperPointView.air_pressure": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "cis.data_io.hyperpoint.HyperPoint.AIR_PRESSURE",
    "property"
   ]
  },
  "type": "function"
 },
 "cis.data_io.hyperpoint_view.UngriddedHyperPointView.altitude": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "cis.data_io.hyperpoint.HyperPoint.ALTITUDE",
    "property"
   ]
  },
  "type": "function"
 },
 "cis.data_io.hyperpoint_view.UngriddedHyperPointView.enumerate_all_points": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "range"
   ]
  },
  "type": "function"
 },
 "cis.data_io.hyperpoint_view.UngriddedHyperPointView.enumerate_non_masked_points": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "numpy.ma.masked",
    "range"
   ]
  },
  "type": "function"
 },
 "cis.data_io.hyperpoint_view.UngriddedHyperPointView.iter_all_points": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "range"
   ]
  },
  "type": "function"
 },
 "cis.data_io.hyperpoint_view.UngriddedHyperPointView.iter_non_masked_points": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "numpy.ma.masked",
    "range"
   ]
  },
  "type": "function"
 },
 "cis.data_io.hyperpoint_view.UngriddedHyperPointView.latitude": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "cis.data_io.hyperpoint.HyperPoint.LATITUDE",
    "property"
   ]
  },
  "type": "function"
 },
 "cis.data_io.hyperpoint_view.UngriddedHyperPointView.longitude": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "cis.data_io.hyperpoint.HyperPoint.LONGITUDE",
    "property"
   ]
  },
  "type": "function"
 },
 "cis.data_io.hyperpoint_view.UngriddedHyperPointView.set_longitude_range": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "cis.data_io.hyperpoint.HyperPoint.LONGITUDE",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "cis.data_io.hyperpoint_view.UngriddedHyperPointView.time": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "cis.data_io.hyperpoint.HyperPoint.TIME",
    "property"
   ]
  },
  "type": "function"
 },
 "cis.data_io.hyperpoint_view.UngriddedHyperPointView.vals": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "cis.data_io.hyperpoint_view.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "cis.data_io.hyperpoint_view.cis.utils": {
  "data": {
   "shadows": "cis.utils"
  },
  "type": "import"
 },
 "cis.data_io.hyperpoint_view.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "cis.data_io.hyperpoint_view.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "cis.data_io.netcdf": {
  "data": {},
  "type": "module"
 },
 "cis.data_io.netcdf.Dataset": {
  "data": {
   "shadows": "netCDF4.Dataset"
  },
  "type": "import"
 },
 "cis.data_io.netcdf.InvalidVariableError": {
  "data": {
   "shadows": "cis.exceptions.InvalidVariableError"
  },
  "type": "import"
 },
 "cis.data_io.netcdf.MFDataset": {
  "data": {
   "shadows": "netCDF4.MFDataset"
  },
  "type": "import"
 },
 "cis.data_io.netcdf.Metadata": {
  "data": {
   "shadows": "cis.data_io.ungridded_data.Metadata"
  },
  "type": "import"
 },
 "cis.data_io.netcdf._get_all_fully_qualified_variables": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "get_variables_for_group"
   ]
  },
  "type": "function"
 },
 "cis.data_io.netcdf._get_all_fully_qualified_variables.get_variables_for_group": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "get_variables_for_group"
   ]
  },
  "type": "function"
 },
 "cis.data_io.netcdf.add_element_to_list_in_dict": {
  "data": {
   "shadows": "cis.utils.add_element_to_list_in_dict"
  },
  "type": "import"
 },
 "cis.data_io.netcdf.apply_offset_and_scaling": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "cis.data_io.netcdf.logging"
   ]
  },
  "type": "function"
 },
 "cis.data_io.netcdf.find_missing_value": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "AttributeError"
   ]
  },
  "type": "function"
 },
 "cis.data_io.netcdf.get_data": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "cis.data_io.netcdf.apply_offset_and_scaling",
    "cis.data_io.netcdf.logging",
    "getattr",
    "hasattr",
    "numpy.array",
    "numpy.ma.masked_greater",
    "numpy.ma.masked_less",
    "numpy.ma.masked_outside"
   ]
  },
  "type": "function"
 },
 "cis.data_io.netcdf.get_metadata": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "AttributeError",
    "cis.data_io.netcdf.find_missing_value",
    "cis.data_io.ungridded_data.Metadata",
    "cis.utils.set_standard_name_if_valid",
    "getattr"
   ]
  },
  "type": "function"
 },
 "cis.data_io.netcdf.get_netcdf_file_attributes": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "IOError",
    "RuntimeError",
    "netCDF4.Dataset"
   ]
  },
  "type": "function"
 },
 "cis.data_io.netcdf.get_netcdf_file_variables": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "IOError",
    "KeyError",
    "RuntimeError",
    "cis.data_io.netcdf._get_all_fully_qualified_variables",
    "netCDF4.Dataset"
   ]
  },
  "type": "function"
 },
 "cis.data_io.netcdf.listify": {
  "data": {
   "shadows": "cis.utils.listify"
  },
  "type": "import"
 },
 "cis.data_io.netcdf.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "cis.data_io.netcdf.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "cis.data_io.netcdf.read": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "IOError",
    "RuntimeError",
    "cis.exceptions.InvalidVariableError",
    "cis.utils.listify",
    "netCDF4.Dataset",
    "str"
   ]
  },
  "type": "function"
 },
 "cis.data_io.netcdf.read_many_files": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "IOError",
    "RuntimeError",
    "cis.exceptions.InvalidVariableError",
    "cis.utils.listify",
    "netCDF4.MFDataset"
   ]
  },
  "type": "function"
 },
 "cis.data_io.netcdf.read_many_files_individually": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "cis.data_io.netcdf.read",
    "cis.utils.add_element_to_list_in_dict",
    "cis.utils.listify",
    "list"
   ]
  },
  "type": "function"
 },
 "cis.data_io.netcdf.remove_variables_with_non_spatiotemporal_dimensions": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "cis.data_io.netcdf.set_standard_name_if_valid": {
  "data": {
   "shadows": "cis.utils.set_standard_name_if_valid"
  },
  "type": "import"
 },
 "cis.data_io.products": {
  "data": {},
  "type": "module"
 },
 "cis.data_io.products.CCI": {
  "data": {
   "symbols_in_volume": [
    "cf_units.CALENDAR_STANDARD",
    "cf_units.Unit"
   ]
  },
  "type": "module"
 },
 "cis.data_io.products.CCI.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "cis.data_io.products.CCI.AProduct": {
  "data": {
   "shadows": "cis.data_io.products.AProduct"
  },
  "type": "import"
 },
 "cis.data_io.products.CCI.Aerosol_CCI_L2": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "cis.data_io.products.AProduct",
    "cis.data_io.products.CCI.CCI_L2"
   ]
  },
  "type": "class"
 },
 "cis.data_io.products.CCI.Aerosol_CCI_L2._fix_time": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "cis.data_io.products.CCI.datetime"
   ]
  },
  "type": "function"
 },
 "cis.data_io.products.CCI.Aerosol_CCI_L2.get_file_format": {
  "data": {
   "lineno": 86
  },
  "type": "function"
 },
 "cis.data_io.products.CCI.Aerosol_CCI_L2.get_file_signature": {
  "data": {
   "lineno": 78
  },
  "type": "function"
 },
 "cis.data_io.products.CCI.Aerosol_CCI_L3": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "cis.data_io.products.NetCDF_Gridded"
   ]
  },
  "type": "class"
 },
 "cis.data_io.products.CCI.Aerosol_CCI_L3.get_file_format": {
  "data": {
   "lineno": 138
  },
  "type": "function"
 },
 "cis.data_io.products.CCI.Aerosol_CCI_L3.get_file_signature": {
  "data": {
   "lineno": 135
  },
  "type": "function"
 },
 "cis.data_io.products.CCI.Aerosol_CCI_L3.load_multiple_files_callback": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "KeyError"
   ]
  },
  "type": "function"
 },
 "cis.data_io.products.CCI.Aerosol_CCI_L3.load_single_file_callback": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "ValueError",
    "cis.data_io.products.CCI.ESA_TIME_UNIT",
    "cis.data_io.products.CCI.convert_time_string_to_number",
    "iris.coords.AuxCoord",
    "sum"
   ]
  },
  "type": "function"
 },
 "cis.data_io.products.CCI.AuxCoord": {
  "data": {
   "shadows": "iris.coords.AuxCoord"
  },
  "type": "import"
 },
 "cis.data_io.products.CCI.CALENDAR_STANDARD": {
  "data": {
   "shadows": "cf_units.CALENDAR_STANDARD"
  },
  "type": "import"
 },
 "cis.data_io.products.CCI.CCI_L2": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "abc.ABCMeta",
    "cis.data_io.products.CCI.six",
    "object"
   ]
  },
  "type": "class"
 },
 "cis.data_io.products.CCI.CCI_L2._create_coord_list": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "cis.data_io.Coord.Coord",
    "cis.data_io.Coord.CoordList",
    "cis.data_io.netcdf.get_metadata",
    "cis.data_io.netcdf.read_many_files_individually",
    "cis.data_io.products.CCI.logging",
    "cis.exceptions.InvalidVariableError",
    "str"
   ]
  },
  "type": "function"
 },
 "cis.data_io.products.CCI.CCI_L2._fix_time": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "cis.data_io.products.CCI.CCI_L2.create_coords": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "cis.data_io.ungridded_data.UngriddedCoordinates"
   ]
  },
  "type": "function"
 },
 "cis.data_io.products.CCI.CCI_L2.create_data_object": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "cis.data_io.netcdf.get_metadata",
    "cis.data_io.netcdf.read_many_files_individually",
    "cis.data_io.ungridded_data.UngriddedData"
   ]
  },
  "type": "function"
 },
 "cis.data_io.products.CCI.Cloud_CCI_L2": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "cis.data_io.products.AProduct",
    "cis.data_io.products.CCI.CCI_L2"
   ]
  },
  "type": "class"
 },
 "cis.data_io.products.CCI.Cloud_CCI_L2._fix_time": {
  "data": {
   "lineno": 65
  },
  "type": "function"
 },
 "cis.data_io.products.CCI.Cloud_CCI_L2.get_file_format": {
  "data": {
   "lineno": 69
  },
  "type": "function"
 },
 "cis.data_io.products.CCI.Cloud_CCI_L2.get_file_signature": {
  "data": {
   "lineno": 62
  },
  "type": "function"
 },
 "cis.data_io.products.CCI.Cloud_CCI_L3": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "cis.data_io.products.NetCDF_Gridded"
   ]
  },
  "type": "class"
 },
 "cis.data_io.products.CCI.Cloud_CCI_L3.get_file_format": {
  "data": {
   "lineno": 109
  },
  "type": "function"
 },
 "cis.data_io.products.CCI.Cloud_CCI_L3.get_file_signature": {
  "data": {
   "lineno": 106
  },
  "type": "function"
 },
 "cis.data_io.products.CCI.Cloud_CCI_L3.load_multiple_files_callback": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "KeyError"
   ]
  },
  "type": "function"
 },
 "cis.data_io.products.CCI.Cloud_CCI_L3.load_single_file_callback": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "cis.data_io.products.CCI.convert_time_string_to_number"
   ]
  },
  "type": "function"
 },
 "cis.data_io.products.CCI.Coord": {
  "data": {
   "shadows": "cis.data_io.Coord.Coord"
  },
  "type": "import"
 },
 "cis.data_io.products.CCI.CoordList": {
  "data": {
   "shadows": "cis.data_io.Coord.CoordList"
  },
  "type": "import"
 },
 "cis.data_io.products.CCI.ESA_TIME_UNIT": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "cis.data_io.products.CCI.InvalidVariableError": {
  "data": {
   "shadows": "cis.exceptions.InvalidVariableError"
  },
  "type": "import"
 },
 "cis.data_io.products.CCI.NetCDF_Gridded": {
  "data": {
   "shadows": "cis.data_io.products.NetCDF_Gridded"
  },
  "type": "import"
 },
 "cis.data_io.products.CCI.UngriddedCoordinates": {
  "data": {
   "shadows": "cis.data_io.ungridded_data.UngriddedCoordinates"
  },
  "type": "import"
 },
 "cis.data_io.products.CCI.UngriddedData": {
  "data": {
   "shadows": "cis.data_io.ungridded_data.UngriddedData"
  },
  "type": "import"
 },
 "cis.data_io.products.CCI.Unit": {
  "data": {
   "shadows": "cf_units.Unit"
  },
  "type": "import"
 },
 "cis.data_io.products.CCI.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "cis.data_io.products.CCI.convert_time_string_to_number": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "datetime.datetime.strptime",
    "dateutil.relativedelta.relativedelta"
   ]
  },
  "type": "function"
 },
 "cis.data_io.products.CCI.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "cis.data_io.products.CCI.get_metadata": {
  "data": {
   "shadows": "cis.data_io.netcdf.get_metadata"
  },
  "type": "import"
 },
 "cis.data_io.products.CCI.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "cis.data_io.products.CCI.read_many_files_individually": {
  "data": {
   "shadows": "cis.data_io.netcdf.read_many_files_individually"
  },
  "type": "import"
 },
 "cis.data_io.products.CCI.relativedelta": {
  "data": {
   "shadows": "dateutil.relativedelta.relativedelta"
  },
  "type": "import"
 },
 "cis.data_io.products.CCI.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "cis.data_io.products.HadGEM": {
  "data": {},
  "type": "module"
 },
 "cis.data_io.products.HadGEM.CoordinateNotFoundError": {
  "data": {
   "shadows": "iris.exceptions.CoordinateNotFoundError"
  },
  "type": "import"
 },
 "cis.data_io.products.HadGEM.DisplayConstraint": {
  "data": {
   "shadows": "cis.data_io.products.gridded_NetCDF.DisplayConstraint"
  },
  "type": "import"
 },
 "cis.data_io.products.HadGEM.HadGEM_CONVSH": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "cis.data_io.products.NetCDF_Gridded"
   ]
  },
  "type": "class"
 },
 "cis.data_io.products.HadGEM.HadGEM_CONVSH._create_cube": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "ValueError",
    "cis.data_io.gridded_data.load_cube",
    "cis.data_io.products.HadGEM.six",
    "cis.data_io.products.gridded_NetCDF.DisplayConstraint",
    "cis.exceptions.InvalidVariableError",
    "iris.exceptions.CoordinateNotFoundError",
    "isinstance",
    "len",
    "open",
    "str"
   ]
  },
  "type": "function"
 },
 "cis.data_io.products.HadGEM.HadGEM_CONVSH.get_file_signature": {
  "data": {
   "lineno": 11
  },
  "type": "function"
 },
 "cis.data_io.products.HadGEM.HadGEM_CONVSH.get_variable_names": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "cis.data_io.products.HadGEM.iris",
    "cis.utils.single_warnings_only",
    "set"
   ]
  },
  "type": "function"
 },
 "cis.data_io.products.HadGEM.HadGEM_CONVSH.load_multiple_files_callback": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "iris.util.squeeze",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "cis.data_io.products.HadGEM.HadGEM_PP": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "cis.data_io.products.NetCDF_Gridded"
   ]
  },
  "type": "class"
 },
 "cis.data_io.products.HadGEM.HadGEM_PP.get_file_signature": {
  "data": {
   "lineno": 97
  },
  "type": "function"
 },
 "cis.data_io.products.HadGEM.HadGEM_PP.load_multiple_files_callback": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "ValueError",
    "cis.data_io.products.HadGEM.logging",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "cis.data_io.products.HadGEM.HadGEM_PP.load_single_file_callback": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "ValueError",
    "cis.data_io.products.HadGEM.logging",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "cis.data_io.products.HadGEM.InvalidVariableError": {
  "data": {
   "shadows": "cis.exceptions.InvalidVariableError"
  },
  "type": "import"
 },
 "cis.data_io.products.HadGEM.NetCDF_Gridded": {
  "data": {
   "shadows": "cis.data_io.products.NetCDF_Gridded"
  },
  "type": "import"
 },
 "cis.data_io.products.HadGEM.iris": {
  "data": {
   "shadows": "iris"
  },
  "type": "import"
 },
 "cis.data_io.products.HadGEM.load_cube": {
  "data": {
   "shadows": "cis.data_io.gridded_data.load_cube"
  },
  "type": "import"
 },
 "cis.data_io.products.HadGEM.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "cis.data_io.products.HadGEM.single_warnings_only": {
  "data": {
   "shadows": "cis.utils.single_warnings_only"
  },
  "type": "import"
 },
 "cis.data_io.products.HadGEM.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "cis.data_io.products.HadGEM.squeeze": {
  "data": {
   "shadows": "iris.util.squeeze"
  },
  "type": "import"
 },
 "cis.data_io.products.MODIS": {
  "data": {},
  "type": "module"
 },
 "cis.data_io.products.MODIS.AProduct": {
  "data": {
   "shadows": "cis.data_io.products.AProduct"
  },
  "type": "import"
 },
 "cis.data_io.products.MODIS.AuxCoord": {
  "data": {
   "shadows": "iris.coords.AuxCoord"
  },
  "type": "import"
 },
 "cis.data_io.products.MODIS.Coord": {
  "data": {
   "shadows": "cis.data_io.Coord.Coord"
  },
  "type": "import"
 },
 "cis.data_io.products.MODIS.CoordList": {
  "data": {
   "shadows": "cis.data_io.Coord.CoordList"
  },
  "type": "import"
 },
 "cis.data_io.products.MODIS.Cube": {
  "data": {
   "shadows": "iris.cube.Cube"
  },
  "type": "import"
 },
 "cis.data_io.products.MODIS.CubeList": {
  "data": {
   "shadows": "iris.cube.CubeList"
  },
  "type": "import"
 },
 "cis.data_io.products.MODIS.DimCoord": {
  "data": {
   "shadows": "iris.coords.DimCoord"
  },
  "type": "import"
 },
 "cis.data_io.products.MODIS.InvalidVariableError": {
  "data": {
   "shadows": "cis.exceptions.InvalidVariableError"
  },
  "type": "import"
 },
 "cis.data_io.products.MODIS.MODIS_L2": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "cis.data_io.products.AProduct"
   ]
  },
  "type": "class"
 },
 "cis.data_io.products.MODIS.MODIS_L2.__field_interpolate": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "cis.data_io.products.MODIS.logging",
    "float",
    "int",
    "numpy.nan",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "cis.data_io.products.MODIS.MODIS_L2.__get_data_scale": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "KeyError",
    "cis.exceptions.InvalidVariableError",
    "pyhdf.SD.SD"
   ]
  },
  "type": "function"
 },
 "cis.data_io.products.MODIS.MODIS_L2._create_coord_list": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "cis.data_io.Coord.Coord",
    "cis.data_io.Coord.CoordList",
    "cis.data_io.hdf.read",
    "cis.data_io.hdf.read_data",
    "cis.data_io.hdf.read_metadata",
    "cis.data_io.products.MODIS._get_MODIS_SDS_data",
    "cis.data_io.products.MODIS.logging",
    "datetime.datetime",
    "str"
   ]
  },
  "type": "function"
 },
 "cis.data_io.products.MODIS.MODIS_L2.create_coords": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "cis.data_io.ungridded_data.UngriddedCoordinates"
   ]
  },
  "type": "function"
 },
 "cis.data_io.products.MODIS.MODIS_L2.create_data_object": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": [
    "cis.data_io.hdf.read",
    "cis.data_io.hdf.read_metadata",
    "cis.data_io.products.MODIS._get_MODIS_SDS_data",
    "cis.data_io.products.MODIS.logging",
    "cis.data_io.ungridded_data.UngriddedData"
   ]
  },
  "type": "function"
 },
 "cis.data_io.products.MODIS.MODIS_L2.get_file_format": {
  "data": {
   "lineno": 311
  },
  "type": "function"
 },
 "cis.data_io.products.MODIS.MODIS_L2.get_file_signature": {
  "data": {
   "lineno": 196
  },
  "type": "function"
 },
 "cis.data_io.products.MODIS.MODIS_L2.get_variable_names": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "cis.data_io.products.MODIS.MODIS_L3": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "cis.data_io.products.AProduct"
   ]
  },
  "type": "class"
 },
 "cis.data_io.products.MODIS.MODIS_L3._create_cube": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "ValueError",
    "cf_units.Unit",
    "cis.data_io.hdf._read_hdf4",
    "cis.data_io.hdf_sd.get_metadata",
    "cis.data_io.products.MODIS._get_MODIS_SDS_data",
    "cis.data_io.products.MODIS.logging",
    "cis.time_util.calculate_mid_time",
    "cis.time_util.cis_standard_time_unit",
    "iris.coords.AuxCoord",
    "iris.coords.DimCoord",
    "iris.cube.Cube",
    "iris.cube.CubeList",
    "str"
   ]
  },
  "type": "function"
 },
 "cis.data_io.products.MODIS.MODIS_L3._get_end_date": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "cis.data_io.hdf.get_hdf4_file_metadata",
    "cis.parse_datetime.parse_datetimestr_to_std_time"
   ]
  },
  "type": "function"
 },
 "cis.data_io.products.MODIS.MODIS_L3._get_start_date": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "cis.data_io.hdf.get_hdf4_file_metadata",
    "cis.parse_datetime.parse_datetimestr_to_std_time"
   ]
  },
  "type": "function"
 },
 "cis.data_io.products.MODIS.MODIS_L3._parse_datetime": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "cis.data_io.products.MODIS.re",
    "len"
   ]
  },
  "type": "function"
 },
 "cis.data_io.products.MODIS.MODIS_L3.create_coords": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "cis.data_io.products.MODIS.logging",
    "str"
   ]
  },
  "type": "function"
 },
 "cis.data_io.products.MODIS.MODIS_L3.create_data_object": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "cis.data_io.gridded_data.make_from_cube",
    "cis.data_io.products.MODIS.logging"
   ]
  },
  "type": "function"
 },
 "cis.data_io.products.MODIS.MODIS_L3.get_file_format": {
  "data": {
   "lineno": 189
  },
  "type": "function"
 },
 "cis.data_io.products.MODIS.MODIS_L3.get_file_signature": {
  "data": {
   "lineno": 98
  },
  "type": "function"
 },
 "cis.data_io.products.MODIS.MODIS_L3.get_variable_names": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "ImportError",
    "pyhdf.SD.SD",
    "set"
   ]
  },
  "type": "function"
 },
 "cis.data_io.products.MODIS.SD": {
  "data": {
   "shadows": "pyhdf.SD.SD"
  },
  "type": "import"
 },
 "cis.data_io.products.MODIS.UngriddedCoordinates": {
  "data": {
   "shadows": "cis.data_io.ungridded_data.UngriddedCoordinates"
  },
  "type": "import"
 },
 "cis.data_io.products.MODIS.UngriddedData": {
  "data": {
   "shadows": "cis.data_io.ungridded_data.UngriddedData"
  },
  "type": "import"
 },
 "cis.data_io.products.MODIS.Unit": {
  "data": {
   "shadows": "cf_units.Unit"
  },
  "type": "import"
 },
 "cis.data_io.products.MODIS._apply_scaling_factor_MODIS": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "cis.data_io.products.MODIS.logging"
   ]
  },
  "type": "function"
 },
 "cis.data_io.products.MODIS._get_MODIS_SDS_data": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "cis.data_io.products.MODIS._apply_scaling_factor_MODIS",
    "cis.data_io.products.MODIS.logging",
    "cis.utils.create_masked_array_for_missing_data",
    "numpy.ma.masked_outside"
   ]
  },
  "type": "function"
 },
 "cis.data_io.products.MODIS._read_hdf4": {
  "data": {
   "shadows": "cis.data_io.hdf._read_hdf4"
  },
  "type": "import"
 },
 "cis.data_io.products.MODIS.calculate_mid_time": {
  "data": {
   "shadows": "cis.time_util.calculate_mid_time"
  },
  "type": "import"
 },
 "cis.data_io.products.MODIS.cis_standard_time_unit": {
  "data": {
   "shadows": "cis.time_util.cis_standard_time_unit"
  },
  "type": "import"
 },
 "cis.data_io.products.MODIS.create_masked_array_for_missing_data": {
  "data": {
   "shadows": "cis.utils.create_masked_array_for_missing_data"
  },
  "type": "import"
 },
 "cis.data_io.products.MODIS.dt": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "cis.data_io.products.MODIS.get_metadata": {
  "data": {
   "shadows": "cis.data_io.hdf_sd.get_metadata"
  },
  "type": "import"
 },
 "cis.data_io.products.MODIS.hdf": {
  "data": {
   "shadows": "cis.data_io.hdf"
  },
  "type": "import"
 },
 "cis.data_io.products.MODIS.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "cis.data_io.products.MODIS.make_from_cube": {
  "data": {
   "shadows": "cis.data_io.gridded_data.make_from_cube"
  },
  "type": "import"
 },
 "cis.data_io.products.MODIS.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "cis.data_io.products.MODIS.parse_datetimestr_to_std_time": {
  "data": {
   "shadows": "cis.parse_datetime.parse_datetimestr_to_std_time"
  },
  "type": "import"
 },
 "cis.data_io.products.MODIS.pyhdf.SD": {
  "data": {
   "shadows": "pyhdf.SD"
  },
  "type": "import"
 },
 "cis.data_io.products.MODIS.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "cis.data_io.products.NCAR_NetCDF_RAF": {
  "data": {},
  "type": "module"
 },
 "cis.data_io.products.NCAR_NetCDF_RAF.AProduct": {
  "data": {
   "shadows": "cis.data_io.products.AProduct"
  },
  "type": "import"
 },
 "cis.data_io.products.NCAR_NetCDF_RAF.Coord": {
  "data": {
   "shadows": "cis.data_io.Coord.Coord"
  },
  "type": "import"
 },
 "cis.data_io.products.NCAR_NetCDF_RAF.CoordList": {
  "data": {
   "shadows": "cis.data_io.Coord.CoordList"
  },
  "type": "import"
 },
 "cis.data_io.products.NCAR_NetCDF_RAF.FileFormatError": {
  "data": {
   "shadows": "cis.exceptions.FileFormatError"
  },
  "type": "import"
 },
 "cis.data_io.products.NCAR_NetCDF_RAF.InvalidVariableError": {
  "data": {
   "shadows": "cis.exceptions.InvalidVariableError"
  },
  "type": "import"
 },
 "cis.data_io.products.NCAR_NetCDF_RAF.Metadata": {
  "data": {
   "shadows": "cis.data_io.ungridded_data.Metadata"
  },
  "type": "import"
 },
 "cis.data_io.products.NCAR_NetCDF_RAF.NCAR_NetCDF_RAF": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "cis.data_io.products.AProduct"
   ]
  },
  "type": "class"
 },
 "cis.data_io.products.NCAR_NetCDF_RAF.NCAR_NetCDF_RAF.__init__": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "cis.data_io.products.NCAR_NetCDF_RAF.NCAR_NetCDF_RAF",
    "cis.data_io.products.NCAR_NetCDF_RAF.NCAR_NetCDF_RAF_variable_name_selector",
    "super"
   ]
  },
  "type": "function"
 },
 "cis.data_io.products.NCAR_NetCDF_RAF.NCAR_NetCDF_RAF._add_aux_coordinate": {
  "data": {
   "lineno": 446,
   "symbols_in_volume": [
    "cis.data_io.Coord.Coord",
    "cis.data_io.netcdf.get_metadata",
    "cis.data_io.netcdf.read",
    "cis.utils.expand_1d_to_2d_array",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "cis.data_io.products.NCAR_NetCDF_RAF.NCAR_NetCDF_RAF._create_coord": {
  "data": {
   "lineno": 506,
   "symbols_in_volume": [
    "cis.data_io.Coord.Coord",
    "cis.data_io.Coord.Coord.from_many_coordinates",
    "cis.data_io.netcdf.get_metadata"
   ]
  },
  "type": "function"
 },
 "cis.data_io.products.NCAR_NetCDF_RAF.NCAR_NetCDF_RAF._create_coordinates_list": {
  "data": {
   "lineno": 403,
   "symbols_in_volume": [
    "cis.data_io.Coord.CoordList",
    "numpy.product"
   ]
  },
  "type": "function"
 },
 "cis.data_io.products.NCAR_NetCDF_RAF.NCAR_NetCDF_RAF._create_fixed_value_coord": {
  "data": {
   "lineno": 551,
   "symbols_in_volume": [
    "cis.data_io.Coord.Coord",
    "cis.data_io.ungridded_data.Metadata",
    "cis.utils.listify",
    "float",
    "max",
    "min",
    "numpy.append",
    "numpy.array",
    "numpy.ma.array",
    "numpy.zeros",
    "zip"
   ]
  },
  "type": "function"
 },
 "cis.data_io.products.NCAR_NetCDF_RAF.NCAR_NetCDF_RAF._create_time_coord": {
  "data": {
   "lineno": 525,
   "symbols_in_volume": [
    "cis.data_io.Coord.Coord",
    "cis.data_io.Coord.Coord.from_many_coordinates",
    "cis.data_io.netcdf.get_metadata",
    "cis.utils.listify",
    "six.moves.zip_longest"
   ]
  },
  "type": "function"
 },
 "cis.data_io.products.NCAR_NetCDF_RAF.NCAR_NetCDF_RAF._get_file_format": {
  "data": {
   "lineno": 322,
   "symbols_in_volume": [
    "IOError",
    "RuntimeError",
    "cis.data_io.netcdf.get_netcdf_file_attributes",
    "cis.data_io.products.NCAR_NetCDF_RAF.os",
    "cis.exceptions.FileFormatError",
    "list"
   ]
  },
  "type": "function"
 },
 "cis.data_io.products.NCAR_NetCDF_RAF.NCAR_NetCDF_RAF._load_data": {
  "data": {
   "lineno": 380,
   "symbols_in_volume": [
    "cis.data_io.netcdf.read_many_files_individually",
    "cis.data_io.products.NCAR_NetCDF_RAF.logging",
    "cis.utils.add_to_list_if_not_none",
    "str"
   ]
  },
  "type": "function"
 },
 "cis.data_io.products.NCAR_NetCDF_RAF.NCAR_NetCDF_RAF._load_data_definition": {
  "data": {
   "lineno": 368,
   "symbols_in_volume": [
    "cis.data_io.netcdf.get_netcdf_file_attributes",
    "cis.data_io.netcdf.get_netcdf_file_variables"
   ]
  },
  "type": "function"
 },
 "cis.data_io.products.NCAR_NetCDF_RAF.NCAR_NetCDF_RAF.create_coords": {
  "data": {
   "lineno": 475,
   "symbols_in_volume": [
    "cis.data_io.netcdf.get_metadata",
    "cis.data_io.ungridded_data.UngriddedCoordinates",
    "cis.data_io.ungridded_data.UngriddedData"
   ]
  },
  "type": "function"
 },
 "cis.data_io.products.NCAR_NetCDF_RAF.NCAR_NetCDF_RAF.create_data_object": {
  "data": {
   "lineno": 497
  },
  "type": "function"
 },
 "cis.data_io.products.NCAR_NetCDF_RAF.NCAR_NetCDF_RAF.get_file_format": {
  "data": {
   "lineno": 583
  },
  "type": "function"
 },
 "cis.data_io.products.NCAR_NetCDF_RAF.NCAR_NetCDF_RAF.get_file_signature": {
  "data": {
   "lineno": 315
  },
  "type": "function"
 },
 "cis.data_io.products.NCAR_NetCDF_RAF.NCAR_NetCDF_RAF.get_file_type_error": {
  "data": {
   "lineno": 356,
   "symbols_in_volume": [
    "cis.exceptions.FileFormatError"
   ]
  },
  "type": "function"
 },
 "cis.data_io.products.NCAR_NetCDF_RAF.NCAR_NetCDF_RAF.get_variable_names": {
  "data": {
   "lineno": 574
  },
  "type": "function"
 },
 "cis.data_io.products.NCAR_NetCDF_RAF.NCAR_NetCDF_RAF_variable_name_selector": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "cis.data_io.products.NCAR_NetCDF_RAF.NCAR_NetCDF_RAF_variable_name_selector.__init__": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "cis.exceptions.InvalidVariableError",
    "cis.utils.listify",
    "len",
    "list",
    "vars",
    "vars.items"
   ]
  },
  "type": "function"
 },
 "cis.data_io.products.NCAR_NetCDF_RAF.NCAR_NetCDF_RAF_variable_name_selector._best_coordinates_setup": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "cis.exceptions.InvalidVariableError",
    "len"
   ]
  },
  "type": "function"
 },
 "cis.data_io.products.NCAR_NetCDF_RAF.NCAR_NetCDF_RAF_variable_name_selector._check_has_variables_and_attributes": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "cis.exceptions.InvalidVariableError",
    "len"
   ]
  },
  "type": "function"
 },
 "cis.data_io.products.NCAR_NetCDF_RAF.NCAR_NetCDF_RAF_variable_name_selector._get_coordinate_variable_name": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "cis.exceptions.InvalidVariableError"
   ]
  },
  "type": "function"
 },
 "cis.data_io.products.NCAR_NetCDF_RAF.NCAR_NetCDF_RAF_variable_name_selector._lat_lon_var_specified_setup": {
  "data": {
   "lineno": 215
  },
  "type": "function"
 },
 "cis.data_io.products.NCAR_NetCDF_RAF.NCAR_NetCDF_RAF_variable_name_selector._parse_station_altitude": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "ValueError",
    "cis.data_io.products.NCAR_NetCDF_RAF.logging",
    "float"
   ]
  },
  "type": "function"
 },
 "cis.data_io.products.NCAR_NetCDF_RAF.NCAR_NetCDF_RAF_variable_name_selector._parse_station_lat_lon": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "ValueError",
    "cis.exceptions.InvalidVariableError",
    "float",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "cis.data_io.products.NCAR_NetCDF_RAF.NCAR_NetCDF_RAF_variable_name_selector._stationary_setup": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "cis.exceptions.InvalidVariableError"
   ]
  },
  "type": "function"
 },
 "cis.data_io.products.NCAR_NetCDF_RAF.NCAR_NetCDF_RAF_variable_name_selector.find_auxiliary_coordinate": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "cis.exceptions.InvalidVariableError",
    "len",
    "list"
   ]
  },
  "type": "function"
 },
 "cis.data_io.products.NCAR_NetCDF_RAF.NCAR_NetCDF_RAF_variable_name_selector.get_variable_names_which_have_time_coord": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": [
    "cis.utils.dimensions_compatible",
    "len",
    "list",
    "set"
   ]
  },
  "type": "function"
 },
 "cis.data_io.products.NCAR_NetCDF_RAF.UngriddedCoordinates": {
  "data": {
   "shadows": "cis.data_io.ungridded_data.UngriddedCoordinates"
  },
  "type": "import"
 },
 "cis.data_io.products.NCAR_NetCDF_RAF.UngriddedData": {
  "data": {
   "shadows": "cis.data_io.ungridded_data.UngriddedData"
  },
  "type": "import"
 },
 "cis.data_io.products.NCAR_NetCDF_RAF.add_to_list_if_not_none": {
  "data": {
   "shadows": "cis.utils.add_to_list_if_not_none"
  },
  "type": "import"
 },
 "cis.data_io.products.NCAR_NetCDF_RAF.dimensions_compatible": {
  "data": {
   "shadows": "cis.utils.dimensions_compatible"
  },
  "type": "import"
 },
 "cis.data_io.products.NCAR_NetCDF_RAF.expand_1d_to_2d_array": {
  "data": {
   "shadows": "cis.utils.expand_1d_to_2d_array"
  },
  "type": "import"
 },
 "cis.data_io.products.NCAR_NetCDF_RAF.get_metadata": {
  "data": {
   "shadows": "cis.data_io.netcdf.get_metadata"
  },
  "type": "import"
 },
 "cis.data_io.products.NCAR_NetCDF_RAF.get_netcdf_file_attributes": {
  "data": {
   "shadows": "cis.data_io.netcdf.get_netcdf_file_attributes"
  },
  "type": "import"
 },
 "cis.data_io.products.NCAR_NetCDF_RAF.get_netcdf_file_variables": {
  "data": {
   "shadows": "cis.data_io.netcdf.get_netcdf_file_variables"
  },
  "type": "import"
 },
 "cis.data_io.products.NCAR_NetCDF_RAF.listify": {
  "data": {
   "shadows": "cis.utils.listify"
  },
  "type": "import"
 },
 "cis.data_io.products.NCAR_NetCDF_RAF.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "cis.data_io.products.NCAR_NetCDF_RAF.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "cis.data_io.products.NCAR_NetCDF_RAF.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "cis.data_io.products.NCAR_NetCDF_RAF.read": {
  "data": {
   "shadows": "cis.data_io.netcdf.read"
  },
  "type": "import"
 },
 "cis.data_io.products.NCAR_NetCDF_RAF.read_many_files_individually": {
  "data": {
   "shadows": "cis.data_io.netcdf.read_many_files_individually"
  },
  "type": "import"
 },
 "cis.data_io.products.NCAR_NetCDF_RAF.zip_longest": {
  "data": {
   "shadows": "six.moves.zip_longest"
  },
  "type": "import"
 },
 "cis.data_io.products.__all__": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "cis.data_io.products.caliop": {
  "data": {},
  "type": "module"
 },
 "cis.data_io.products.caliop.AProduct": {
  "data": {
   "shadows": "cis.data_io.products.AProduct"
  },
  "type": "import"
 },
 "cis.data_io.products.caliop.Caliop_L1": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": [
    "cis.data_io.products.caliop.abstract_Caliop"
   ]
  },
  "type": "class"
 },
 "cis.data_io.products.caliop.Caliop_L1.create_data_object": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": [
    "cis.data_io.hdf.read",
    "cis.data_io.hdf.read_metadata",
    "cis.data_io.products.caliop.logging",
    "cis.data_io.ungridded_data.UngriddedData"
   ]
  },
  "type": "function"
 },
 "cis.data_io.products.caliop.Caliop_L1.get_file_format": {
  "data": {
   "lineno": 352
  },
  "type": "function"
 },
 "cis.data_io.products.caliop.Caliop_L1.get_file_signature": {
  "data": {
   "lineno": 333
  },
  "type": "function"
 },
 "cis.data_io.products.caliop.Caliop_L2": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "cis.data_io.products.caliop.abstract_Caliop"
   ]
  },
  "type": "class"
 },
 "cis.data_io.products.caliop.Caliop_L2._create_one_dimensional_coord_list": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "IOError",
    "cis.data_io.Coord.Coord",
    "cis.data_io.Coord.CoordList",
    "cis.data_io.hdf.read_data",
    "cis.data_io.hdf.read_metadata",
    "cis.data_io.hdf_sd.read",
    "cis.data_io.products.caliop.logging",
    "cis.data_io.ungridded_data.Metadata",
    "cis.time_util.cis_standard_time_unit",
    "cis.time_util.convert_sec_since_to_std_time",
    "cis.utils.add_element_to_list_in_dict",
    "datetime.datetime",
    "list",
    "pyhdf.error.HDF4Error",
    "str"
   ]
  },
  "type": "function"
 },
 "cis.data_io.products.caliop.Caliop_L2._get_mixed_resolution_calipso_data": {
  "data": {
   "lineno": 235
  },
  "type": "function"
 },
 "cis.data_io.products.caliop.Caliop_L2.create_coords": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "cis.data_io.products.caliop.Caliop_L2",
    "cis.data_io.ungridded_data.UngriddedCoordinates",
    "super"
   ]
  },
  "type": "function"
 },
 "cis.data_io.products.caliop.Caliop_L2.create_data_object": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": [
    "cis.data_io.hdf.read",
    "cis.data_io.hdf.read_metadata",
    "cis.data_io.products.caliop.MIXED_RESOLUTION_VARIABLES",
    "cis.data_io.products.caliop.logging",
    "cis.data_io.ungridded_data.UngriddedData"
   ]
  },
  "type": "function"
 },
 "cis.data_io.products.caliop.Caliop_L2.get_file_format": {
  "data": {
   "lineno": 321
  },
  "type": "function"
 },
 "cis.data_io.products.caliop.Caliop_L2.get_file_signature": {
  "data": {
   "lineno": 232
  },
  "type": "function"
 },
 "cis.data_io.products.caliop.Caliop_L2_NO_PRESSURE": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": [
    "cis.data_io.products.caliop.Caliop_L2"
   ]
  },
  "type": "class"
 },
 "cis.data_io.products.caliop.Coord": {
  "data": {
   "shadows": "cis.data_io.Coord.Coord"
  },
  "type": "import"
 },
 "cis.data_io.products.caliop.CoordList": {
  "data": {
   "shadows": "cis.data_io.Coord.CoordList"
  },
  "type": "import"
 },
 "cis.data_io.products.caliop.HDF4Error": {
  "data": {
   "shadows": "pyhdf.error.HDF4Error"
  },
  "type": "import"
 },
 "cis.data_io.products.caliop.MIXED_RESOLUTION_VARIABLES": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "cis.data_io.products.caliop.Metadata": {
  "data": {
   "shadows": "cis.data_io.ungridded_data.Metadata"
  },
  "type": "import"
 },
 "cis.data_io.products.caliop.SD": {
  "data": {
   "shadows": "pyhdf.SD.SD"
  },
  "type": "import"
 },
 "cis.data_io.products.caliop.UngriddedCoordinates": {
  "data": {
   "shadows": "cis.data_io.ungridded_data.UngriddedCoordinates"
  },
  "type": "import"
 },
 "cis.data_io.products.caliop.UngriddedData": {
  "data": {
   "shadows": "cis.data_io.ungridded_data.UngriddedData"
  },
  "type": "import"
 },
 "cis.data_io.products.caliop.VDS": {
  "data": {
   "shadows": "cis.data_io.hdf_vd.VDS"
  },
  "type": "import"
 },
 "cis.data_io.products.caliop.abstract_Caliop": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "cis.data_io.products.AProduct"
   ]
  },
  "type": "class"
 },
 "cis.data_io.products.caliop.abstract_Caliop._apply_scaling_factor_CALIPSO": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "cis.data_io.products.caliop.logging"
   ]
  },
  "type": "function"
 },
 "cis.data_io.products.caliop.abstract_Caliop._create_coord_list": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "IOError",
    "cis.data_io.Coord.Coord",
    "cis.data_io.Coord.CoordList",
    "cis.data_io.hdf.read_data",
    "cis.data_io.hdf.read_metadata",
    "cis.data_io.hdf_sd.read",
    "cis.data_io.hdf_vd.VDS",
    "cis.data_io.hdf_vd.get_data",
    "cis.data_io.products.caliop.logging",
    "cis.data_io.ungridded_data.Metadata",
    "cis.time_util.cis_standard_time_unit",
    "cis.time_util.convert_sec_since_to_std_time",
    "cis.utils.add_element_to_list_in_dict",
    "cis.utils.expand_1d_to_2d_array",
    "datetime.datetime",
    "list",
    "pyhdf.error.HDF4Error",
    "str"
   ]
  },
  "type": "function"
 },
 "cis.data_io.products.caliop.abstract_Caliop._get_calipso_data": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "KeyError",
    "cis.data_io.products.caliop.logging",
    "cis.utils.create_masked_array_for_missing_data",
    "len",
    "numpy.asarray",
    "numpy.ma.masked_outside"
   ]
  },
  "type": "function"
 },
 "cis.data_io.products.caliop.abstract_Caliop.create_coords": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "cis.data_io.ungridded_data.UngriddedCoordinates"
   ]
  },
  "type": "function"
 },
 "cis.data_io.products.caliop.abstract_Caliop.create_data_object": {
  "data": {
   "lineno": 142
  },
  "type": "function"
 },
 "cis.data_io.products.caliop.abstract_Caliop.get_file_signature": {
  "data": {
   "lineno": 17
  },
  "type": "function"
 },
 "cis.data_io.products.caliop.abstract_Caliop.get_variable_names": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "ImportError",
    "cis.data_io.hdf_vd.VDS",
    "cis.data_io.hdf_vd.get_data",
    "pyhdf.SD.SD",
    "set"
   ]
  },
  "type": "function"
 },
 "cis.data_io.products.caliop.cis_standard_time_unit": {
  "data": {
   "shadows": "cis.time_util.cis_standard_time_unit"
  },
  "type": "import"
 },
 "cis.data_io.products.caliop.convert_sec_since_to_std_time": {
  "data": {
   "shadows": "cis.time_util.convert_sec_since_to_std_time"
  },
  "type": "import"
 },
 "cis.data_io.products.caliop.create_masked_array_for_missing_data": {
  "data": {
   "shadows": "cis.utils.create_masked_array_for_missing_data"
  },
  "type": "import"
 },
 "cis.data_io.products.caliop.dt": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "cis.data_io.products.caliop.get_data": {
  "data": {
   "shadows": "cis.data_io.hdf_vd.get_data"
  },
  "type": "import"
 },
 "cis.data_io.products.caliop.hdf": {
  "data": {
   "shadows": "cis.data_io.hdf"
  },
  "type": "import"
 },
 "cis.data_io.products.caliop.hdf_sd": {
  "data": {
   "shadows": "cis.data_io.hdf_sd"
  },
  "type": "import"
 },
 "cis.data_io.products.caliop.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "cis.data_io.products.caliop.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "cis.data_io.products.caliop.utils": {
  "data": {
   "shadows": "cis.utils"
  },
  "type": "import"
 },
 "cis.data_io.products.cloudsat": {
  "data": {},
  "type": "module"
 },
 "cis.data_io.products.cloudsat.AProduct": {
  "data": {
   "shadows": "cis.data_io.products.AProduct"
  },
  "type": "import"
 },
 "cis.data_io.products.cloudsat.CloudSat": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "cis.data_io.products.AProduct"
   ]
  },
  "type": "class"
 },
 "cis.data_io.products.cloudsat.CloudSat._apply_scaling_factor_CLOUDSAT": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": [
    "cis.data_io.products.cloudsat.logging"
   ]
  },
  "type": "function"
 },
 "cis.data_io.products.cloudsat.CloudSat._create_coord_list": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "cis.data_io.Coord.Coord",
    "cis.data_io.Coord.CoordList",
    "cis.data_io.hdf.read",
    "cis.data_io.hdf.read_data",
    "cis.data_io.hdf.read_metadata",
    "cis.data_io.products.cloudsat.logging",
    "cis.data_io.ungridded_data.Metadata",
    "cis.exceptions.InvalidVariableError",
    "cis.time_util.cis_standard_time_unit",
    "cis.utils.expand_1d_to_2d_array",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "cis.data_io.products.cloudsat.CloudSat._create_one_dimensional_coord_list": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "cis.data_io.Coord.Coord",
    "cis.data_io.Coord.CoordList",
    "cis.data_io.hdf.read",
    "cis.data_io.hdf.read_data",
    "cis.data_io.hdf.read_metadata",
    "cis.data_io.products.cloudsat.logging",
    "cis.data_io.ungridded_data.Metadata",
    "cis.time_util.cis_standard_time_unit",
    "str"
   ]
  },
  "type": "function"
 },
 "cis.data_io.products.cloudsat.CloudSat._generate_time_array": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "cis.data_io.hdf_vd.get_data",
    "cis.time_util.convert_sec_since_to_std_time",
    "cis.utils.concatenate",
    "datetime.datetime",
    "zip"
   ]
  },
  "type": "function"
 },
 "cis.data_io.products.cloudsat.CloudSat._get_cloudsat_sds_data": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "KeyError",
    "cis.data_io.products.cloudsat.logging",
    "cis.utils.create_masked_array_for_missing_data",
    "numpy.ma.masked_equal",
    "numpy.ma.masked_greater",
    "numpy.ma.masked_greater_equal",
    "numpy.ma.masked_less",
    "numpy.ma.masked_less_equal",
    "numpy.ma.masked_outside"
   ]
  },
  "type": "function"
 },
 "cis.data_io.products.cloudsat.CloudSat._get_cloudsat_vds_data": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "IOError",
    "cis.data_io.hdf_vd.HDF",
    "cis.data_io.hdf_vd.HDF4Error",
    "cis.data_io.hdf_vd._get_attribute_value",
    "cis.utils.create_masked_array_for_missing_data",
    "numpy.array",
    "numpy.ma.masked_outside"
   ]
  },
  "type": "function"
 },
 "cis.data_io.products.cloudsat.CloudSat.create_coords": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "cis.data_io.ungridded_data.UngriddedCoordinates"
   ]
  },
  "type": "function"
 },
 "cis.data_io.products.cloudsat.CloudSat.create_data_object": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "ValueError",
    "cis.data_io.hdf.read",
    "cis.data_io.hdf.read_data",
    "cis.data_io.hdf.read_metadata",
    "cis.data_io.products.cloudsat.logging",
    "cis.data_io.ungridded_data.UngriddedData"
   ]
  },
  "type": "function"
 },
 "cis.data_io.products.cloudsat.CloudSat.get_file_format": {
  "data": {
   "lineno": 289
  },
  "type": "function"
 },
 "cis.data_io.products.cloudsat.CloudSat.get_file_signature": {
  "data": {
   "lineno": 11
  },
  "type": "function"
 },
 "cis.data_io.products.cloudsat.CloudSat.get_variable_names": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "ImportError",
    "pyhdf.HDF.HDF",
    "pyhdf.SD.SD",
    "set"
   ]
  },
  "type": "function"
 },
 "cis.data_io.products.cloudsat.Coord": {
  "data": {
   "shadows": "cis.data_io.Coord.Coord"
  },
  "type": "import"
 },
 "cis.data_io.products.cloudsat.CoordList": {
  "data": {
   "shadows": "cis.data_io.Coord.CoordList"
  },
  "type": "import"
 },
 "cis.data_io.products.cloudsat.CoordinateNotFoundError": {
  "data": {
   "shadows": "cis.exceptions.CoordinateNotFoundError"
  },
  "type": "import"
 },
 "cis.data_io.products.cloudsat.HDF": {
  "data": {
   "shadows": "cis.data_io.hdf_vd.HDF"
  },
  "type": "import"
 },
 "cis.data_io.products.cloudsat.HDF4Error": {
  "data": {
   "shadows": "cis.data_io.hdf_vd.HDF4Error"
  },
  "type": "import"
 },
 "cis.data_io.products.cloudsat.InvalidVariableError": {
  "data": {
   "shadows": "cis.exceptions.InvalidVariableError"
  },
  "type": "import"
 },
 "cis.data_io.products.cloudsat.Metadata": {
  "data": {
   "shadows": "cis.data_io.ungridded_data.Metadata"
  },
  "type": "import"
 },
 "cis.data_io.products.cloudsat.SD": {
  "data": {
   "shadows": "pyhdf.SD.SD"
  },
  "type": "import"
 },
 "cis.data_io.products.cloudsat.UngriddedCoordinates": {
  "data": {
   "shadows": "cis.data_io.ungridded_data.UngriddedCoordinates"
  },
  "type": "import"
 },
 "cis.data_io.products.cloudsat.UngriddedData": {
  "data": {
   "shadows": "cis.data_io.ungridded_data.UngriddedData"
  },
  "type": "import"
 },
 "cis.data_io.products.cloudsat._get_attribute_value": {
  "data": {
   "shadows": "cis.data_io.hdf_vd._get_attribute_value"
  },
  "type": "import"
 },
 "cis.data_io.products.cloudsat.cis_standard_time_unit": {
  "data": {
   "shadows": "cis.time_util.cis_standard_time_unit"
  },
  "type": "import"
 },
 "cis.data_io.products.cloudsat.convert_sec_since_to_std_time": {
  "data": {
   "shadows": "cis.time_util.convert_sec_since_to_std_time"
  },
  "type": "import"
 },
 "cis.data_io.products.cloudsat.create_masked_array_for_missing_data": {
  "data": {
   "shadows": "cis.utils.create_masked_array_for_missing_data"
  },
  "type": "import"
 },
 "cis.data_io.products.cloudsat.dt": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "cis.data_io.products.cloudsat.hdf": {
  "data": {
   "shadows": "cis.data_io.hdf"
  },
  "type": "import"
 },
 "cis.data_io.products.cloudsat.hdf_vd": {
  "data": {
   "shadows": "cis.data_io.hdf_vd"
  },
  "type": "import"
 },
 "cis.data_io.products.cloudsat.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "cis.data_io.products.cloudsat.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "cis.data_io.products.cloudsat.utils": {
  "data": {
   "shadows": "cis.utils"
  },
  "type": "import"
 },
 "cis.data_io.products.products": {
  "data": {},
  "type": "module"
 },
 "cis.data_io.products.products.AProduct": {
  "data": {
   "shadows": "cis.data_io.products.AProduct.AProduct"
  },
  "type": "import"
 },
 "cis.data_io.products.products.ASCII_Hyperpoints": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "cis.data_io.products.AProduct.AProduct"
   ]
  },
  "type": "class"
 },
 "cis.data_io.products.products.ASCII_Hyperpoints.create_coords": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "IOError",
    "cis.data_io.Coord.Coord",
    "cis.data_io.Coord.CoordList",
    "cis.data_io.ungridded_data.Metadata",
    "cis.data_io.ungridded_data.UngriddedCoordinates",
    "cis.data_io.ungridded_data.UngriddedData",
    "cis.exceptions.InvalidVariableError",
    "cis.time_util.convert_datetime_to_std_time",
    "cis.utils.concatenate",
    "dateutil.parser.parse",
    "len",
    "numpy.NaN",
    "numpy.genfromtxt"
   ]
  },
  "type": "function"
 },
 "cis.data_io.products.products.ASCII_Hyperpoints.create_data_object": {
  "data": {
   "lineno": 196
  },
  "type": "function"
 },
 "cis.data_io.products.products.ASCII_Hyperpoints.get_file_format": {
  "data": {
   "lineno": 199
  },
  "type": "function"
 },
 "cis.data_io.products.products.ASCII_Hyperpoints.get_file_signature": {
  "data": {
   "lineno": 146
  },
  "type": "function"
 },
 "cis.data_io.products.products.ASCII_Hyperpoints.get_variable_names": {
  "data": {
   "lineno": 149
  },
  "type": "function"
 },
 "cis.data_io.products.products.Aeronet": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "cis.data_io.products.AProduct.AProduct"
   ]
  },
  "type": "class"
 },
 "cis.data_io.products.products.Aeronet._create_coord_list": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "cis.data_io.Coord.Coord",
    "cis.data_io.Coord.CoordList",
    "cis.data_io.aeronet.load_multiple_aeronet",
    "cis.data_io.ungridded_data.Metadata",
    "cis.time_util.cis_standard_time_unit",
    "len"
   ]
  },
  "type": "function"
 },
 "cis.data_io.products.products.Aeronet.create_coords": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "cis.data_io.ungridded_data.UngriddedCoordinates"
   ]
  },
  "type": "function"
 },
 "cis.data_io.products.products.Aeronet.create_data_object": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "cis.data_io.aeronet.load_multiple_aeronet",
    "cis.data_io.ungridded_data.Metadata",
    "cis.data_io.ungridded_data.UngriddedData",
    "len"
   ]
  },
  "type": "function"
 },
 "cis.data_io.products.products.Aeronet.get_file_format": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "cis.data_io.aeronet.get_aeronet_version"
   ]
  },
  "type": "function"
 },
 "cis.data_io.products.products.Aeronet.get_file_signature": {
  "data": {
   "lineno": 81
  },
  "type": "function"
 },
 "cis.data_io.products.products.Aeronet.get_variable_names": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "cis.data_io.aeronet.get_aeronet_file_variables",
    "set"
   ]
  },
  "type": "function"
 },
 "cis.data_io.products.products.Coord": {
  "data": {
   "shadows": "cis.data_io.Coord.Coord"
  },
  "type": "import"
 },
 "cis.data_io.products.products.CoordList": {
  "data": {
   "shadows": "cis.data_io.Coord.CoordList"
  },
  "type": "import"
 },
 "cis.data_io.products.products.InvalidVariableError": {
  "data": {
   "shadows": "cis.exceptions.InvalidVariableError"
  },
  "type": "import"
 },
 "cis.data_io.products.products.Metadata": {
  "data": {
   "shadows": "cis.data_io.ungridded_data.Metadata"
  },
  "type": "import"
 },
 "cis.data_io.products.products.NaN": {
  "data": {
   "shadows": "numpy.NaN"
  },
  "type": "import"
 },
 "cis.data_io.products.products.UngriddedCoordinates": {
  "data": {
   "shadows": "cis.data_io.ungridded_data.UngriddedCoordinates"
  },
  "type": "import"
 },
 "cis.data_io.products.products.UngriddedData": {
  "data": {
   "shadows": "cis.data_io.ungridded_data.UngriddedData"
  },
  "type": "import"
 },
 "cis.data_io.products.products.cis": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "cis.data_io.products.AProduct.AProduct"
   ]
  },
  "type": "class"
 },
 "cis.data_io.products.products.cis.create_coords": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "cis.data_io.Coord.Coord",
    "cis.data_io.Coord.CoordList",
    "cis.data_io.netcdf.get_metadata",
    "cis.data_io.netcdf.get_netcdf_file_variables",
    "cis.data_io.netcdf.read_many_files_individually",
    "cis.data_io.products.products.logging",
    "cis.data_io.ungridded_data.UngriddedCoordinates",
    "cis.data_io.ungridded_data.UngriddedData",
    "cis.exceptions.InvalidVariableError",
    "list",
    "str"
   ]
  },
  "type": "function"
 },
 "cis.data_io.products.products.cis.create_data_object": {
  "data": {
   "lineno": 55
  },
  "type": "function"
 },
 "cis.data_io.products.products.cis.get_file_format": {
  "data": {
   "lineno": 58
  },
  "type": "function"
 },
 "cis.data_io.products.products.cis.get_file_signature": {
  "data": {
   "lineno": 13
  },
  "type": "function"
 },
 "cis.data_io.products.products.cis.get_file_type_error": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "KeyError",
    "cis.data_io.netcdf.get_netcdf_file_attributes"
   ]
  },
  "type": "function"
 },
 "cis.data_io.products.products.convert_datetime_to_std_time": {
  "data": {
   "shadows": "cis.time_util.convert_datetime_to_std_time"
  },
  "type": "import"
 },
 "cis.data_io.products.products.ct": {
  "data": {
   "shadows": "cis.time_util.cis_standard_time_unit"
  },
  "type": "import"
 },
 "cis.data_io.products.products.du": {
  "data": {
   "shadows": "dateutil.parser"
  },
  "type": "import"
 },
 "cis.data_io.products.products.genfromtxt": {
  "data": {
   "shadows": "numpy.genfromtxt"
  },
  "type": "import"
 },
 "cis.data_io.products.products.get_aeronet_file_variables": {
  "data": {
   "shadows": "cis.data_io.aeronet.get_aeronet_file_variables"
  },
  "type": "import"
 },
 "cis.data_io.products.products.get_aeronet_version": {
  "data": {
   "shadows": "cis.data_io.aeronet.get_aeronet_version"
  },
  "type": "import"
 },
 "cis.data_io.products.products.get_metadata": {
  "data": {
   "shadows": "cis.data_io.netcdf.get_metadata"
  },
  "type": "import"
 },
 "cis.data_io.products.products.get_netcdf_file_attributes": {
  "data": {
   "shadows": "cis.data_io.netcdf.get_netcdf_file_attributes"
  },
  "type": "import"
 },
 "cis.data_io.products.products.get_netcdf_file_variables": {
  "data": {
   "shadows": "cis.data_io.netcdf.get_netcdf_file_variables"
  },
  "type": "import"
 },
 "cis.data_io.products.products.load_multiple_aeronet": {
  "data": {
   "shadows": "cis.data_io.aeronet.load_multiple_aeronet"
  },
  "type": "import"
 },
 "cis.data_io.products.products.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "cis.data_io.products.products.read_many_files_individually": {
  "data": {
   "shadows": "cis.data_io.netcdf.read_many_files_individually"
  },
  "type": "import"
 },
 "cis.data_io.products.products.utils": {
  "data": {
   "shadows": "cis.utils"
  },
  "type": "import"
 },
 "cis.evaluate": {
  "data": {},
  "type": "module"
 },
 "cis.evaluate.Calculator": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "cis.evaluate.Calculator._make_history": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "cis.__version__"
   ]
  },
  "type": "function"
 },
 "cis.evaluate.Calculator._make_var_info": {
  "data": {
   "lineno": 109
  },
  "type": "function"
 },
 "cis.evaluate.Calculator._post_process": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "cis.evaluate.EvaluationError",
    "functools.reduce",
    "operator.mul"
   ]
  },
  "type": "function"
 },
 "cis.evaluate.Calculator.evaluate": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "NameError",
    "ValueError",
    "cis.evaluate.EvaluationError",
    "cis.evaluate.numpy",
    "cis.evaluate.six",
    "eval",
    "globals",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "cis.evaluate.EvaluationError": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "cis.evaluate.__version__": {
  "data": {
   "shadows": "cis.__version__"
  },
  "type": "import"
 },
 "cis.evaluate.mul": {
  "data": {
   "shadows": "operator.mul"
  },
  "type": "import"
 },
 "cis.evaluate.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "cis.evaluate.reduce": {
  "data": {
   "shadows": "functools.reduce"
  },
  "type": "import"
 },
 "cis.evaluate.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "cis.exceptions": {
  "data": {},
  "type": "module"
 },
 "cis.exceptions.CISError": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "cis.exceptions.ClassNotFoundError": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "cis.exceptions.CISError"
   ]
  },
  "type": "class"
 },
 "cis.exceptions.CoordinateNotFoundError": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "cis.exceptions.CISError"
   ]
  },
  "type": "class"
 },
 "cis.exceptions.DuplicateCoordinateError": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "cis.exceptions.CISError"
   ]
  },
  "type": "class"
 },
 "cis.exceptions.FileFormatError": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "cis.exceptions.CISError"
   ]
  },
  "type": "class"
 },
 "cis.exceptions.FileFormatError.__init__": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "cis.exceptions.FileFormatError",
    "super"
   ]
  },
  "type": "function"
 },
 "cis.exceptions.InconsistentDimensionsError": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "cis.exceptions.CISError"
   ]
  },
  "type": "class"
 },
 "cis.exceptions.InvalidCommandLineOptionError": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "cis.exceptions.CISError"
   ]
  },
  "type": "class"
 },
 "cis.exceptions.InvalidDataTypeError": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "cis.exceptions.CISError"
   ]
  },
  "type": "class"
 },
 "cis.exceptions.InvalidDimensionError": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "cis.exceptions.CISError"
   ]
  },
  "type": "class"
 },
 "cis.exceptions.InvalidFileExtensionError": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "cis.exceptions.CISError"
   ]
  },
  "type": "class"
 },
 "cis.exceptions.InvalidHistogramStyleError": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "cis.exceptions.CISError"
   ]
  },
  "type": "class"
 },
 "cis.exceptions.InvalidLineStyleError": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "cis.exceptions.CISError"
   ]
  },
  "type": "class"
 },
 "cis.exceptions.InvalidNumberOfDatagroupsSpecifiedError": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "cis.exceptions.CISError"
   ]
  },
  "type": "class"
 },
 "cis.exceptions.InvalidOperationError": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "cis.exceptions.CISError"
   ]
  },
  "type": "class"
 },
 "cis.exceptions.InvalidPlotFormatError": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "cis.exceptions.CISError"
   ]
  },
  "type": "class"
 },
 "cis.exceptions.InvalidPlotTypeError": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "cis.exceptions.CISError"
   ]
  },
  "type": "class"
 },
 "cis.exceptions.InvalidVariableError": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "cis.exceptions.CISError"
   ]
  },
  "type": "class"
 },
 "cis.exceptions.NoDataInSubsetError": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "cis.exceptions.CISError"
   ]
  },
  "type": "class"
 },
 "cis.exceptions.NotEnoughAxesSpecifiedError": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "cis.exceptions.CISError"
   ]
  },
  "type": "class"
 },
 "cis.exceptions.UserPrintableException": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "cis.exceptions.CISError"
   ]
  },
  "type": "class"
 },
 "cis.exceptions.UserPrintableException.__init__": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "cis.exceptions.UserPrintableException",
    "super"
   ]
  },
  "type": "function"
 },
 "cis.exceptions.UserPrintableException.__str__": {
  "data": {
   "lineno": 103
  },
  "type": "function"
 },
 "cis.expand_filelist": {
  "data": {
   "shadows": "cis.data_io.data_reader.expand_filelist"
  },
  "type": "import"
 },
 "cis.get_variables": {
  "data": {
   "shadows": "cis.data_io.products.AProduct.get_variables",
   "symbols_in_volume": [
    "IOError",
    "ValueError",
    "cis.data_io.data_reader.expand_filelist",
    "cis.data_io.products.AProduct.get_variables",
    "len",
    "type"
   ]
  },
  "type": "import"
 },
 "cis.info": {
  "data": {},
  "type": "module"
 },
 "cis.info.get_data": {
  "data": {
   "shadows": "cis.data_io.products.AProduct.get_data"
  },
  "type": "import"
 },
 "cis.info.get_variables": {
  "data": {
   "shadows": "cis.data_io.products.AProduct.get_variables"
  },
  "type": "import"
 },
 "cis.info.info": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "cis.data_io.products.AProduct.get_data",
    "cis.data_io.products.AProduct.get_variables",
    "print",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "cis.parse_datetime": {
  "data": {},
  "type": "module"
 },
 "cis.parse_datetime.PartialDateTime": {
  "data": {
   "shadows": "cis.time_util.PartialDateTime"
  },
  "type": "import"
 },
 "cis.parse_datetime._datetime_delta_to_float_days": {
  "data": {
   "lineno": 155
  },
  "type": "function"
 },
 "cis.parse_datetime._parse_datetime": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "dateutil.parser.parse"
   ]
  },
  "type": "function"
 },
 "cis.parse_datetime._parse_datetime_delta": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "ValueError",
    "cis.parse_datetime.re",
    "datetime.timedelta",
    "int"
   ]
  },
  "type": "function"
 },
 "cis.parse_datetime._parse_partial_datetime": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "ValueError",
    "cis.parse_datetime.re",
    "cis.time_util.PartialDateTime",
    "int",
    "len",
    "list"
   ]
  },
  "type": "function"
 },
 "cis.parse_datetime.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "cis.parse_datetime.cis_standard_time_unit": {
  "data": {
   "shadows": "cis.time_util.cis_standard_time_unit"
  },
  "type": "import"
 },
 "cis.parse_datetime.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "cis.parse_datetime.du": {
  "data": {
   "shadows": "dateutil.parser"
  },
  "type": "import"
 },
 "cis.parse_datetime.parse_as_number_or_datetime": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "ValueError",
    "cis.parse_datetime._parse_datetime",
    "cis.parse_datetime.argparse",
    "float",
    "int"
   ]
  },
  "type": "function"
 },
 "cis.parse_datetime.parse_as_number_or_datetime_delta": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "ValueError",
    "cis.parse_datetime._parse_datetime_delta",
    "cis.parse_datetime.argparse",
    "float",
    "int"
   ]
  },
  "type": "function"
 },
 "cis.parse_datetime.parse_as_number_or_standard_time": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "cis.parse_datetime.parse_as_number_or_datetime",
    "cis.time_util.cis_standard_time_unit.date2num",
    "datetime.datetime",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "cis.parse_datetime.parse_datetime": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "ValueError",
    "cis.parse_datetime._parse_datetime"
   ]
  },
  "type": "function"
 },
 "cis.parse_datetime.parse_datetimestr_delta_to_float_days": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "cis.parse_datetime._datetime_delta_to_float_days",
    "cis.parse_datetime._parse_datetime_delta"
   ]
  },
  "type": "function"
 },
 "cis.parse_datetime.parse_datetimestr_to_std_time": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "cis.time_util.cis_standard_time_unit.date2num",
    "dateutil.parser.parse"
   ]
  },
  "type": "function"
 },
 "cis.parse_datetime.parse_partial_datetime": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "ValueError",
    "cis.parse_datetime._parse_partial_datetime"
   ]
  },
  "type": "function"
 },
 "cis.parse_datetime.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "cis.parse_datetime.timedelta": {
  "data": {
   "shadows": "datetime.timedelta"
  },
  "type": "import"
 },
 "cis.plotting": {
  "data": {},
  "type": "module"
 },
 "cis.plotting.comparativescatter": {
  "data": {},
  "type": "module"
 },
 "cis.plotting.comparativescatter.APlot": {
  "data": {
   "shadows": "cis.plotting.genericplot.APlot"
  },
  "type": "import"
 },
 "cis.plotting.comparativescatter.ComparativeScatter": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "cis.plotting.genericplot.APlot"
   ]
  },
  "type": "class"
 },
 "cis.plotting.comparativescatter.ComparativeScatter.__call__": {
  "data": {
   "lineno": 24
  },
  "type": "function"
 },
 "cis.plotting.comparativescatter.ComparativeScatter.__init__": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "cis.plotting.comparativescatter.ComparativeScatter",
    "cis.plotting.comparativescatter.logging",
    "getattr",
    "super"
   ]
  },
  "type": "function"
 },
 "cis.plotting.comparativescatter.ComparativeScatter._plot_xy_line": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "cis.utils.no_autoscale",
    "numpy.max",
    "numpy.min"
   ]
  },
  "type": "function"
 },
 "cis.plotting.comparativescatter.ComparativeScatter.is_map": {
  "data": {
   "lineno": 62
  },
  "type": "function"
 },
 "cis.plotting.comparativescatter.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "cis.plotting.comparativescatter.no_autoscale": {
  "data": {
   "shadows": "cis.utils.no_autoscale"
  },
  "type": "import"
 },
 "cis.plotting.comparativescatter.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "cis.plotting.contourplot": {
  "data": {},
  "type": "module"
 },
 "cis.plotting.contourplot.ContourPlot": {
  "data": {
   "lineno": 7
  },
  "type": "class"
 },
 "cis.plotting.contourplot.ContourPlot.__call__": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "cis.plotting.contourplot.ContourPlot",
    "contour_type",
    "matplotlib.ticker.LogLocator",
    "super"
   ]
  },
  "type": "function"
 },
 "cis.plotting.contourplot.ContourPlot.__init__": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "cis.plotting.contourplot.ContourPlot",
    "super"
   ]
  },
  "type": "function"
 },
 "cis.plotting.contourplot.ContourfPlot": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "cis.plotting.contourplot.ContourPlot"
   ]
  },
  "type": "class"
 },
 "cis.plotting.contourplot.ContourfPlot.__init__": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "cis.plotting.contourplot.ContourfPlot",
    "super"
   ]
  },
  "type": "function"
 },
 "cis.plotting.contourplot.ticker": {
  "data": {
   "shadows": "matplotlib.ticker"
  },
  "type": "import"
 },
 "cis.plotting.formatted_plot": {
  "data": {},
  "type": "module"
 },
 "cis.plotting.formatted_plot.Plotter": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "cis.plotting.formatted_plot.Plotter.__init__": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "cis.plotting.formatted_plot.apply_axis_limits",
    "cis.plotting.formatted_plot.apply_map_axis_limits",
    "cis.plotting.formatted_plot.format_plot",
    "cis.plotting.formatted_plot.get_x_wrap_start",
    "cis.plotting.plot.basic_plot",
    "cis.plotting.plot.drawbluemarble",
    "cis.plotting.plot.multilayer_plot",
    "isinstance",
    "len",
    "list",
    "type"
   ]
  },
  "type": "function"
 },
 "cis.plotting.formatted_plot.Plotter.output_to_file_or_screen": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "cis.plotting.formatted_plot.logging",
    "matplotlib.pyplot.show"
   ]
  },
  "type": "function"
 },
 "cis.plotting.formatted_plot.Plotter.set_width_and_height": {
  "data": {
   "lineno": 222
  },
  "type": "function"
 },
 "cis.plotting.formatted_plot.apply_axis_limits": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "cis.plotting.formatted_plot.apply_map_axis_limits": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "all",
    "cartopy.crs.PlateCarree",
    "cis.plotting.plot.get_best_map_ticks",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "cis.plotting.formatted_plot.basic_plot": {
  "data": {
   "shadows": "cis.plotting.plot.basic_plot"
  },
  "type": "import"
 },
 "cis.plotting.formatted_plot.ccrs": {
  "data": {
   "shadows": "cartopy.crs"
  },
  "type": "import"
 },
 "cis.plotting.formatted_plot.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "cis.plotting.formatted_plot.drawbluemarble": {
  "data": {
   "shadows": "cis.plotting.plot.drawbluemarble"
  },
  "type": "import"
 },
 "cis.plotting.formatted_plot.find_start": {
  "data": {
   "shadows": "cis.utils.find_longitude_wrap_start"
  },
  "type": "import"
 },
 "cis.plotting.formatted_plot.format_plot": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "cis.plotting.formatted_plot.matplotlib"
   ]
  },
  "type": "function"
 },
 "cis.plotting.formatted_plot.get_best_map_ticks": {
  "data": {
   "shadows": "cis.plotting.plot.get_best_map_ticks"
  },
  "type": "import"
 },
 "cis.plotting.formatted_plot.get_x_wrap_start": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "cis.utils.find_longitude_wrap_start",
    "datetime.datetime",
    "isinstance",
    "min"
   ]
  },
  "type": "function"
 },
 "cis.plotting.formatted_plot.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "cis.plotting.formatted_plot.matplotlib": {
  "data": {
   "shadows": "matplotlib"
  },
  "type": "import"
 },
 "cis.plotting.formatted_plot.multilayer_plot": {
  "data": {
   "shadows": "cis.plotting.plot.multilayer_plot"
  },
  "type": "import"
 },
 "cis.plotting.formatted_plot.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "cis.plotting.formatted_plot.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "cis.plotting.formatted_plot.set_log_scales": {
  "data": {
   "lineno": 7
  },
  "type": "function"
 },
 "cis.plotting.formatter": {
  "data": {},
  "type": "module"
 },
 "cis.plotting.formatter.LogFormatter": {
  "data": {
   "shadows": "matplotlib.ticker.LogFormatter"
  },
  "type": "import"
 },
 "cis.plotting.formatter.LogFormatterMathtextSpecial": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "matplotlib.ticker.LogFormatter"
   ]
  },
  "type": "class"
 },
 "cis.plotting.formatter.LogFormatterMathtextSpecial.__call__": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "abs",
    "cis.plotting.formatter.math",
    "matplotlib.rcParams",
    "matplotlib.ticker.is_close_to_int",
    "matplotlib.ticker.nearest_long"
   ]
  },
  "type": "function"
 },
 "cis.plotting.formatter.is_close_to_int": {
  "data": {
   "shadows": "matplotlib.ticker.is_close_to_int"
  },
  "type": "import"
 },
 "cis.plotting.formatter.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "cis.plotting.formatter.nearest_long": {
  "data": {
   "shadows": "matplotlib.ticker.nearest_long"
  },
  "type": "import"
 },
 "cis.plotting.formatter.rcParams": {
  "data": {
   "shadows": "matplotlib.rcParams"
  },
  "type": "import"
 },
 "cis.plotting.genericplot": {
  "data": {},
  "type": "module"
 },
 "cis.plotting.genericplot.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "cis.plotting.genericplot.APlot": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "abc.ABCMeta",
    "cis.plotting.genericplot.six",
    "object"
   ]
  },
  "type": "class"
 },
 "cis.plotting.genericplot.APlot.__call__": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "cis.plotting.genericplot.APlot.__init__": {
  "data": {
   "lineno": 15
  },
  "type": "function"
 },
 "cis.plotting.genericplot.APlot.is_map": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "cis.plotting.genericplot.APlot.is_rectangular_projection": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "cartopy.crs._RectangularProjection",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "cis.plotting.genericplot.APlot.set_log_scales": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "cis.plotting.formatted_plot.set_log_scales"
   ]
  },
  "type": "function"
 },
 "cis.plotting.genericplot.Cube": {
  "data": {
   "shadows": "iris.cube.Cube"
  },
  "type": "import"
 },
 "cis.plotting.genericplot.Generic2DPlot": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "cis.plotting.genericplot.APlot",
    "iris.coords.POINT_MODE"
   ]
  },
  "type": "class"
 },
 "cis.plotting.genericplot.Generic2DPlot.__call__": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "add_color_bar",
    "drawcoastlines",
    "get_best_map_ticks",
    "set_map_ticks"
   ]
  },
  "type": "function"
 },
 "cis.plotting.genericplot.Generic2DPlot.__init__": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "cis.plotting.genericplot.Generic2DPlot",
    "cis.plotting.genericplot.logging",
    "cis.plotting.plot.get_label",
    "matplotlib.colors.LogNorm",
    "super"
   ]
  },
  "type": "function"
 },
 "cis.plotting.genericplot.Generic2DPlot._cube_manipulation": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "ValueError",
    "cartopy.util.add_cyclic_point",
    "cis.plotting.genericplot.iris",
    "cis.plotting.genericplot.logging",
    "iris.plot._get_plot_defn",
    "len",
    "numpy.meshgrid",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "cis.plotting.genericplot.Generic2DPlot.is_map": {
  "data": {
   "lineno": 176
  },
  "type": "function"
 },
 "cis.plotting.genericplot.Generic2DPlot.set_log_scales": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "cis.plotting.formatted_plot.set_log_scales",
    "cis.plotting.genericplot.logging"
   ]
  },
  "type": "function"
 },
 "cis.plotting.genericplot.Generic2DPlot.unpack_data_items": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "cis.plotting.genericplot.logging",
    "iris.coords.POINT_MODE",
    "iris.cube.Cube",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "cis.plotting.genericplot.GenericPlot": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "cis.plotting.genericplot.APlot"
   ]
  },
  "type": "class"
 },
 "cis.plotting.genericplot.GenericPlot.__call__": {
  "data": {
   "lineno": 99
  },
  "type": "function"
 },
 "cis.plotting.genericplot.GenericPlot.__init__": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "cis.plotting.genericplot.GenericPlot",
    "cis.plotting.genericplot.logging",
    "cis.plotting.plot.get_label",
    "super"
   ]
  },
  "type": "function"
 },
 "cis.plotting.genericplot.GenericPlot.is_map": {
  "data": {
   "lineno": 103
  },
  "type": "function"
 },
 "cis.plotting.genericplot.LogNorm": {
  "data": {
   "shadows": "matplotlib.colors.LogNorm"
  },
  "type": "import"
 },
 "cis.plotting.genericplot.POINT_MODE": {
  "data": {
   "shadows": "iris.coords.POINT_MODE"
  },
  "type": "import"
 },
 "cis.plotting.genericplot._RectangularProjection": {
  "data": {
   "shadows": "cartopy.crs._RectangularProjection"
  },
  "type": "import"
 },
 "cis.plotting.genericplot.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "cis.plotting.genericplot.add_cyclic_point": {
  "data": {
   "shadows": "cartopy.util.add_cyclic_point"
  },
  "type": "import"
 },
 "cis.plotting.genericplot.get_label": {
  "data": {
   "shadows": "cis.plotting.plot.get_label"
  },
  "type": "import"
 },
 "cis.plotting.genericplot.iplt": {
  "data": {
   "shadows": "iris.plot"
  },
  "type": "import"
 },
 "cis.plotting.genericplot.iris": {
  "data": {
   "shadows": "iris"
  },
  "type": "import"
 },
 "cis.plotting.genericplot.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "cis.plotting.genericplot.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "cis.plotting.genericplot.set_log_scales": {
  "data": {
   "shadows": "cis.plotting.formatted_plot.set_log_scales"
  },
  "type": "import"
 },
 "cis.plotting.genericplot.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "cis.plotting.heatmap": {
  "data": {},
  "type": "module"
 },
 "cis.plotting.heatmap.BOUND_MODE": {
  "data": {
   "shadows": "iris.coords.BOUND_MODE"
  },
  "type": "import"
 },
 "cis.plotting.heatmap.Generic2DPlot": {
  "data": {
   "shadows": "cis.plotting.genericplot.Generic2DPlot"
  },
  "type": "import"
 },
 "cis.plotting.heatmap.Heatmap": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "cis.plotting.genericplot.Generic2DPlot",
    "iris.coords.BOUND_MODE"
   ]
  },
  "type": "class"
 },
 "cis.plotting.heatmap.Heatmap.__call__": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "cis.plotting.heatmap.Heatmap",
    "super"
   ]
  },
  "type": "function"
 },
 "cis.plotting.heatmap.Heatmap.__init__": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "cis.plotting.heatmap.Heatmap",
    "super"
   ]
  },
  "type": "function"
 },
 "cis.plotting.histogram": {
  "data": {},
  "type": "module"
 },
 "cis.plotting.histogram.GenericPlot": {
  "data": {
   "shadows": "cis.plotting.genericplot.GenericPlot"
  },
  "type": "import"
 },
 "cis.plotting.histogram.Histogram": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "cis.plotting.genericplot.GenericPlot"
   ]
  },
  "type": "class"
 },
 "cis.plotting.histogram.Histogram.__call__": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "cis.exceptions.InvalidHistogramStyleError",
    "cis.plotting.histogram.Histogram",
    "isinstance",
    "numpy.ma.MaskedArray",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "cis.plotting.histogram.Histogram.__init__": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "cis.plotting.histogram.Histogram",
    "super"
   ]
  },
  "type": "function"
 },
 "cis.plotting.histogram.Histogram.unpack_data_items": {
  "data": {
   "lineno": 46
  },
  "type": "function"
 },
 "cis.plotting.histogram.InvalidHistogramStyleError": {
  "data": {
   "shadows": "cis.exceptions.InvalidHistogramStyleError"
  },
  "type": "import"
 },
 "cis.plotting.histogram.MaskedArray": {
  "data": {
   "shadows": "numpy.ma.MaskedArray"
  },
  "type": "import"
 },
 "cis.plotting.histogram2d": {
  "data": {},
  "type": "module"
 },
 "cis.plotting.histogram2d.ComparativeScatter": {
  "data": {
   "shadows": "cis.plotting.comparativescatter.ComparativeScatter"
  },
  "type": "import"
 },
 "cis.plotting.histogram2d.Histogram2D": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "cis.plotting.comparativescatter.ComparativeScatter"
   ]
  },
  "type": "class"
 },
 "cis.plotting.histogram2d.Histogram2D.__call__": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "add_color_bar",
    "cis.plotting.histogram2d.numpy",
    "cis.utils.apply_intersection_mask_to_two_arrays"
   ]
  },
  "type": "function"
 },
 "cis.plotting.histogram2d.Histogram2D.__init__": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "cis.plotting.histogram2d.Histogram2D",
    "super"
   ]
  },
  "type": "function"
 },
 "cis.plotting.histogram2d.apply_intersection_mask_to_two_arrays": {
  "data": {
   "shadows": "cis.utils.apply_intersection_mask_to_two_arrays"
  },
  "type": "import"
 },
 "cis.plotting.histogram2d.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "cis.plotting.lineplot": {
  "data": {},
  "type": "module"
 },
 "cis.plotting.lineplot.GenericPlot": {
  "data": {
   "shadows": "cis.plotting.genericplot.GenericPlot"
  },
  "type": "import"
 },
 "cis.plotting.lineplot.InvalidDimensionError": {
  "data": {
   "shadows": "cis.exceptions.InvalidDimensionError"
  },
  "type": "import"
 },
 "cis.plotting.lineplot.InvalidLineStyleError": {
  "data": {
   "shadows": "cis.exceptions.InvalidLineStyleError"
  },
  "type": "import"
 },
 "cis.plotting.lineplot.LinePlot": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "cis.plotting.genericplot.GenericPlot"
   ]
  },
  "type": "class"
 },
 "cis.plotting.lineplot.LinePlot.__call__": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "cis.exceptions.InvalidDimensionError",
    "cis.exceptions.InvalidLineStyleError",
    "cis.plotting.lineplot.LinePlot",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "cis.plotting.plot": {
  "data": {
   "symbols_in_volume": [
    "cis.plotting.comparativescatter.ComparativeScatter",
    "cis.plotting.contourplot.ContourPlot",
    "cis.plotting.contourplot.ContourfPlot",
    "cis.plotting.heatmap.Heatmap",
    "cis.plotting.histogram.Histogram",
    "cis.plotting.histogram2d.Histogram2D",
    "cis.plotting.lineplot.LinePlot",
    "cis.plotting.scatterplot.ScatterPlot",
    "cis.plotting.scatterplot.ScatterPlot2D",
    "cis.plotting.taylor.Taylor",
    "cis.plugin.get_all_subclasses"
   ]
  },
  "type": "module"
 },
 "cis.plotting.plot.ArcCosTransform": {
  "data": {
   "shadows": "cis.plotting.taylor.ArcCosTransform"
  },
  "type": "import"
 },
 "cis.plotting.plot.CommonData": {
  "data": {
   "shadows": "cis.data_io.common_data.CommonData"
  },
  "type": "import"
 },
 "cis.plotting.plot.ComparativeScatter": {
  "data": {
   "shadows": "cis.plotting.comparativescatter.ComparativeScatter"
  },
  "type": "import"
 },
 "cis.plotting.plot.ContourPlot": {
  "data": {
   "shadows": "cis.plotting.contourplot.ContourPlot"
  },
  "type": "import"
 },
 "cis.plotting.plot.ContourfPlot": {
  "data": {
   "shadows": "cis.plotting.contourplot.ContourfPlot"
  },
  "type": "import"
 },
 "cis.plotting.plot.GenericPlot": {
  "data": {
   "shadows": "cis.plotting.genericplot.GenericPlot"
  },
  "type": "import"
 },
 "cis.plotting.plot.GeoAxes": {
  "data": {
   "shadows": "cartopy.mpl.geoaxes.GeoAxes"
  },
  "type": "import"
 },
 "cis.plotting.plot.GriddedData": {
  "data": {
   "shadows": "cis.data_io.gridded_data.GriddedData"
  },
  "type": "import"
 },
 "cis.plotting.plot.HTTPError": {
  "data": {
   "shadows": "six.moves.urllib.error.HTTPError"
  },
  "type": "import"
 },
 "cis.plotting.plot.Heatmap": {
  "data": {
   "shadows": "cis.plotting.heatmap.Heatmap"
  },
  "type": "import"
 },
 "cis.plotting.plot.Histogram": {
  "data": {
   "shadows": "cis.plotting.histogram.Histogram"
  },
  "type": "import"
 },
 "cis.plotting.plot.Histogram2D": {
  "data": {
   "shadows": "cis.plotting.histogram2d.Histogram2D"
  },
  "type": "import"
 },
 "cis.plotting.plot.IdentityTransform": {
  "data": {
   "shadows": "matplotlib.transforms.IdentityTransform"
  },
  "type": "import"
 },
 "cis.plotting.plot.LatitudeFormatter": {
  "data": {
   "shadows": "cartopy.mpl.ticker.LatitudeFormatter"
  },
  "type": "import"
 },
 "cis.plotting.plot.LinePlot": {
  "data": {
   "shadows": "cis.plotting.lineplot.LinePlot"
  },
  "type": "import"
 },
 "cis.plotting.plot.LongitudeFormatter": {
  "data": {
   "shadows": "cartopy.mpl.ticker.LongitudeFormatter"
  },
  "type": "import"
 },
 "cis.plotting.plot.MaxNLocator": {
  "data": {
   "shadows": "matplotlib.ticker.MaxNLocator"
  },
  "type": "import"
 },
 "cis.plotting.plot.MultipleLocator": {
  "data": {
   "shadows": "matplotlib.ticker.MultipleLocator"
  },
  "type": "import"
 },
 "cis.plotting.plot.PolarAxes": {
  "data": {
   "shadows": "matplotlib.projections.PolarAxes"
  },
  "type": "import"
 },
 "cis.plotting.plot.ScatterPlot": {
  "data": {
   "shadows": "cis.plotting.scatterplot.ScatterPlot"
  },
  "type": "import"
 },
 "cis.plotting.plot.ScatterPlot2D": {
  "data": {
   "shadows": "cis.plotting.scatterplot.ScatterPlot2D"
  },
  "type": "import"
 },
 "cis.plotting.plot.Taylor": {
  "data": {
   "shadows": "cis.plotting.taylor.Taylor"
  },
  "type": "import"
 },
 "cis.plotting.plot._get_extent": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "cis.utils.haversine"
   ]
  },
  "type": "function"
 },
 "cis.plotting.plot._test_natural_earth_available": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "cartopy.io.shapereader.natural_earth",
    "six.moves.urllib.error.HTTPError"
   ]
  },
  "type": "function"
 },
 "cis.plotting.plot._try_coord": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "cis.exceptions.CoordinateNotFoundError",
    "iris.exceptions.CoordinateNotFoundError",
    "len"
   ]
  },
  "type": "function"
 },
 "cis.plotting.plot.add_color_bar": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "LogFormatterMathtextSpecial",
    "matplotlib.pyplot.colorbar",
    "matplotlib.ticker.MultipleLocator"
   ]
  },
  "type": "function"
 },
 "cis.plotting.plot.basic_plot": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "cartopy.mpl.geoaxes.GeoAxes.bluemarble",
    "cis.data_io.common_data.CommonData",
    "cis.data_io.gridded_data.GriddedData",
    "cis.plotting.genericplot.GenericPlot",
    "cis.plotting.plot.cartopy.crs",
    "cis.plotting.plot.drawbluemarble",
    "cis.plotting.plot.get_axis",
    "cis.plotting.plot.get_label",
    "cis.plotting.plot.plot_types",
    "cis.plotting.plot.projections",
    "cis.plotting.plot.set_x_axis_as_time",
    "cis.plotting.plot.six",
    "cis.utils.squeeze",
    "isinstance",
    "issubclass",
    "matplotlib.pyplot.subplots",
    "plot"
   ]
  },
  "type": "function"
 },
 "cis.plotting.plot.blended_transform_factory": {
  "data": {
   "shadows": "matplotlib.transforms.blended_transform_factory"
  },
  "type": "import"
 },
 "cis.plotting.plot.cartopy.crs": {
  "data": {
   "shadows": "cartopy.crs"
  },
  "type": "import"
 },
 "cis.plotting.plot.ccrs": {
  "data": {
   "shadows": "cartopy.crs"
  },
  "type": "import"
 },
 "cis.plotting.plot.cis_ex": {
  "data": {
   "shadows": "cis.exceptions"
  },
  "type": "import"
 },
 "cis.plotting.plot.colors": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "cis.plotting.plot.drawbluemarble": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "cis.plotting.plot._get_extent",
    "cis.plotting.plot.cartopy.crs",
    "cis.utils.no_autoscale",
    "matplotlib.image.imread",
    "os.path.dirname",
    "os.path.join",
    "os.path.realpath"
   ]
  },
  "type": "function"
 },
 "cis.plotting.plot.drawcoastlines": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "cis.plotting.plot._get_extent",
    "cis.plotting.plot._test_natural_earth_available",
    "cis.plotting.plot.logging"
   ]
  },
  "type": "function"
 },
 "cis.plotting.plot.floating_axes": {
  "data": {
   "shadows": "mpl_toolkits.axisartist.floating_axes"
  },
  "type": "import"
 },
 "cis.plotting.plot.format_units": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "cis.plotting.plot.get_all_subclasses": {
  "data": {
   "shadows": "cis.plugin.get_all_subclasses"
  },
  "type": "import"
 },
 "cis.plotting.plot.get_axis": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "cis.plotting.plot._try_coord",
    "cis.plotting.plot.logging",
    "dict",
    "len"
   ]
  },
  "type": "function"
 },
 "cis.plotting.plot.get_best_map_ticks": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "abs",
    "matplotlib.ticker.MaxNLocator"
   ]
  },
  "type": "function"
 },
 "cis.plotting.plot.get_label": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "cis.plotting.plot.format_units"
   ]
  },
  "type": "function"
 },
 "cis.plotting.plot.haversine": {
  "data": {
   "shadows": "cis.utils.haversine"
  },
  "type": "import"
 },
 "cis.plotting.plot.imread": {
  "data": {
   "shadows": "matplotlib.image.imread"
  },
  "type": "import"
 },
 "cis.plotting.plot.iris_ex": {
  "data": {
   "shadows": "iris.exceptions"
  },
  "type": "import"
 },
 "cis.plotting.plot.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "cis.plotting.plot.multilayer_plot": {
  "data": {
   "lineno": 403,
   "symbols_in_volume": [
    "ValueError",
    "cis.plotting.plot.basic_plot",
    "cis.plotting.plot.get_label",
    "cis.plotting.plot.taylor_plot",
    "dict",
    "isinstance",
    "len",
    "list",
    "plot",
    "zip"
   ]
  },
  "type": "function"
 },
 "cis.plotting.plot.natural_earth": {
  "data": {
   "shadows": "cartopy.io.shapereader.natural_earth"
  },
  "type": "import"
 },
 "cis.plotting.plot.no_autoscale": {
  "data": {
   "shadows": "cis.utils.no_autoscale"
  },
  "type": "import"
 },
 "cis.plotting.plot.num2date": {
  "data": {
   "shadows": "matplotlib.dates.num2date"
  },
  "type": "import"
 },
 "cis.plotting.plot.path": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "cis.plotting.plot.plot_types": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "cis.plotting.plot.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "cis.plotting.plot.projections": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "cis.plotting.plot.set_map_ticks": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "cartopy.mpl.ticker.LatitudeFormatter",
    "cartopy.mpl.ticker.LongitudeFormatter",
    "cis.plotting.plot.cartopy.crs",
    "cis.plotting.plot.logging",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "cis.plotting.plot.set_x_axis_as_time": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "matplotlib.ticker.FuncFormatter"
   ]
  },
  "type": "function"
 },
 "cis.plotting.plot.set_x_axis_as_time.format_datetime": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "matplotlib.dates.num2date",
    "str"
   ]
  },
  "type": "function"
 },
 "cis.plotting.plot.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "cis.plotting.plot.squeeze": {
  "data": {
   "shadows": "cis.utils.squeeze"
  },
  "type": "import"
 },
 "cis.plotting.plot.taylor_plot": {
  "data": {
   "lineno": 446,
   "symbols_in_volume": [
    "ValueError",
    "all",
    "any",
    "cis.plotting.plot.colors",
    "cis.plotting.taylor.ArcCosTransform",
    "cis.plotting.taylor.Taylor",
    "matplotlib.projections.PolarAxes.PolarTransform",
    "matplotlib.pyplot.figure",
    "matplotlib.transforms.IdentityTransform",
    "matplotlib.transforms.blended_transform_factory",
    "mpl_toolkits.axisartist.floating_axes.FloatingSubplot",
    "mpl_toolkits.axisartist.floating_axes.GridHelperCurveLinear",
    "plot",
    "plot.extend",
    "plot.gammamax"
   ]
  },
  "type": "function"
 },
 "cis.plotting.plot.ticker": {
  "data": {
   "shadows": "matplotlib.ticker"
  },
  "type": "import"
 },
 "cis.plotting.scatterplot": {
  "data": {},
  "type": "module"
 },
 "cis.plotting.scatterplot.Generic2DPlot": {
  "data": {
   "shadows": "cis.plotting.genericplot.Generic2DPlot"
  },
  "type": "import"
 },
 "cis.plotting.scatterplot.GenericPlot": {
  "data": {
   "shadows": "cis.plotting.genericplot.GenericPlot"
  },
  "type": "import"
 },
 "cis.plotting.scatterplot.ScatterPlot": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "cis.plotting.genericplot.GenericPlot"
   ]
  },
  "type": "class"
 },
 "cis.plotting.scatterplot.ScatterPlot.__call__": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "cis.plotting.scatterplot.ScatterPlot",
    "super"
   ]
  },
  "type": "function"
 },
 "cis.plotting.scatterplot.ScatterPlot2D": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "cis.plotting.genericplot.Generic2DPlot"
   ]
  },
  "type": "class"
 },
 "cis.plotting.scatterplot.ScatterPlot2D.__call__": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "cis.plotting.scatterplot.ScatterPlot2D",
    "super"
   ]
  },
  "type": "function"
 },
 "cis.plotting.taylor": {
  "data": {},
  "type": "module"
 },
 "cis.plotting.taylor.APlot": {
  "data": {
   "shadows": "cis.plotting.genericplot.APlot"
  },
  "type": "import"
 },
 "cis.plotting.taylor.ArcCosTransform": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "matplotlib.transforms.Transform"
   ]
  },
  "type": "class"
 },
 "cis.plotting.taylor.ArcCosTransform.inverted": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "cis.plotting.taylor.CosTransform"
   ]
  },
  "type": "function"
 },
 "cis.plotting.taylor.ArcCosTransform.transform_non_affine": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "numpy.ma.arccos"
   ]
  },
  "type": "function"
 },
 "cis.plotting.taylor.Bunch": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "cis.plotting.taylor.Bunch.__init__": {
  "data": {
   "lineno": 51
  },
  "type": "function"
 },
 "cis.plotting.taylor.CosTransform": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "matplotlib.transforms.Transform"
   ]
  },
  "type": "class"
 },
 "cis.plotting.taylor.CosTransform.inverted": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "cis.plotting.taylor.ArcCosTransform"
   ]
  },
  "type": "function"
 },
 "cis.plotting.taylor.CosTransform.transform_non_affine": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "numpy.ma.cos"
   ]
  },
  "type": "function"
 },
 "cis.plotting.taylor.IdentityTransform": {
  "data": {
   "shadows": "matplotlib.transforms.IdentityTransform"
  },
  "type": "import"
 },
 "cis.plotting.taylor.PolarAxes": {
  "data": {
   "shadows": "matplotlib.projections.PolarAxes"
  },
  "type": "import"
 },
 "cis.plotting.taylor.Taylor": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "cis.plotting.genericplot.APlot"
   ]
  },
  "type": "class"
 },
 "cis.plotting.taylor.Taylor.__call__": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "abs",
    "cis.plotting.taylor.ArcCosTransform",
    "cis.plotting.taylor.logging",
    "dict",
    "itertools.cycle",
    "itertools.repeat",
    "matplotlib.projections.PolarAxes.PolarTransform",
    "matplotlib.transforms.IdentityTransform",
    "matplotlib.transforms.blended_transform_factory",
    "max",
    "min",
    "numpy.abs",
    "numpy.arange",
    "numpy.cos",
    "numpy.linspace",
    "numpy.log",
    "numpy.ma.sqrt",
    "numpy.pi",
    "numpy.sin",
    "numpy.sqrt",
    "six.moves.zip",
    "str"
   ]
  },
  "type": "function"
 },
 "cis.plotting.taylor.Taylor.__init__": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "ValueError",
    "cis.plotting.taylor.Taylor",
    "cis.plotting.taylor.logging",
    "min",
    "numpy.logical_or",
    "numpy.ma.abs",
    "numpy.ma.amax",
    "numpy.ma.amin",
    "numpy.ma.any",
    "numpy.ma.array",
    "numpy.ma.corrcoef",
    "numpy.ma.getmaskarray",
    "numpy.ma.log",
    "numpy.ma.logical_or",
    "numpy.ma.masked_where",
    "numpy.ma.maximum",
    "numpy.ma.mean",
    "numpy.ma.minimum",
    "numpy.ma.std",
    "six.moves.zip",
    "super"
   ]
  },
  "type": "function"
 },
 "cis.plotting.taylor.Taylor.is_map": {
  "data": {
   "lineno": 296
  },
  "type": "function"
 },
 "cis.plotting.taylor.Taylor.set_log_scales": {
  "data": {
   "lineno": 299
  },
  "type": "function"
 },
 "cis.plotting.taylor.Transform": {
  "data": {
   "shadows": "matplotlib.transforms.Transform"
  },
  "type": "import"
 },
 "cis.plotting.taylor.blended_transform_factory": {
  "data": {
   "shadows": "matplotlib.transforms.blended_transform_factory"
  },
  "type": "import"
 },
 "cis.plotting.taylor.cycle": {
  "data": {
   "shadows": "itertools.cycle"
  },
  "type": "import"
 },
 "cis.plotting.taylor.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "cis.plotting.taylor.matplotlib.cm": {
  "data": {
   "shadows": "matplotlib.cm"
  },
  "type": "import"
 },
 "cis.plotting.taylor.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "cis.plotting.taylor.repeat": {
  "data": {
   "shadows": "itertools.repeat"
  },
  "type": "import"
 },
 "cis.plotting.taylor.zip": {
  "data": {
   "shadows": "six.moves.zip"
  },
  "type": "import"
 },
 "cis.plugin": {
  "data": {},
  "type": "module"
 },
 "cis.plugin.find_plugin_classes": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "cis.plugin.find_plugins",
    "cis.plugin.get_all_subclasses",
    "cis.plugin.logging",
    "cis.plugin.os",
    "sorted",
    "str"
   ]
  },
  "type": "function"
 },
 "cis.plugin.find_plugins": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "OSError",
    "__import__",
    "cis.plugin.logging",
    "cis.plugin.os",
    "cis.plugin.sys",
    "dir",
    "getattr",
    "isinstance",
    "len",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "cis.plugin.get_all_subclasses": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "cis.plugin.importlib"
   ]
  },
  "type": "function"
 },
 "cis.plugin.importlib": {
  "data": {
   "shadows": "importlib"
  },
  "type": "import"
 },
 "cis.plugin.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "cis.plugin.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "cis.plugin.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "cis.read_data": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "ValueError",
    "cis.read_data_list",
    "len"
   ]
  },
  "type": "function"
 },
 "cis.read_data_list": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "IOError",
    "ValueError",
    "aliases",
    "cis.data_io.data_reader.DataReader",
    "cis.data_io.data_reader.expand_filelist",
    "len"
   ]
  },
  "type": "function"
 },
 "cis.stats": {
  "data": {},
  "type": "module"
 },
 "cis.stats.AbsoluteMean": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "cis.stats.StatisticsResult"
   ]
  },
  "type": "class"
 },
 "cis.stats.AbsoluteMean.__init__": {
  "data": {
   "lineno": 101
  },
  "type": "function"
 },
 "cis.stats.AbsoluteMean.as_cube": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "iris.cube.Cube"
   ]
  },
  "type": "function"
 },
 "cis.stats.AbsoluteMean.pprint": {
  "data": {
   "lineno": 104
  },
  "type": "function"
 },
 "cis.stats.AbsoluteStddev": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "cis.stats.StatisticsResult"
   ]
  },
  "type": "class"
 },
 "cis.stats.AbsoluteStddev.__init__": {
  "data": {
   "lineno": 123
  },
  "type": "function"
 },
 "cis.stats.AbsoluteStddev.as_cube": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "iris.cube.Cube"
   ]
  },
  "type": "function"
 },
 "cis.stats.AbsoluteStddev.pprint": {
  "data": {
   "lineno": 126
  },
  "type": "function"
 },
 "cis.stats.Cube": {
  "data": {
   "shadows": "iris.cube.Cube"
  },
  "type": "import"
 },
 "cis.stats.DatasetMean": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "cis.stats.StatisticsResult"
   ]
  },
  "type": "class"
 },
 "cis.stats.DatasetMean.__init__": {
  "data": {
   "lineno": 54
  },
  "type": "function"
 },
 "cis.stats.DatasetMean.as_cube": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "iris.cube.Cube"
   ]
  },
  "type": "function"
 },
 "cis.stats.DatasetMean.pprint": {
  "data": {
   "lineno": 59
  },
  "type": "function"
 },
 "cis.stats.DatasetStddev": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "cis.stats.StatisticsResult"
   ]
  },
  "type": "class"
 },
 "cis.stats.DatasetStddev.__init__": {
  "data": {
   "lineno": 77
  },
  "type": "function"
 },
 "cis.stats.DatasetStddev.as_cube": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "iris.cube.Cube"
   ]
  },
  "type": "function"
 },
 "cis.stats.DatasetStddev.pprint": {
  "data": {
   "lineno": 82
  },
  "type": "function"
 },
 "cis.stats.LinearRegressionGradient": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "cis.stats.StatisticsResult"
   ]
  },
  "type": "class"
 },
 "cis.stats.LinearRegressionGradient.__init__": {
  "data": {
   "lineno": 214
  },
  "type": "function"
 },
 "cis.stats.LinearRegressionGradient.as_cube": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "iris.cube.Cube"
   ]
  },
  "type": "function"
 },
 "cis.stats.LinearRegressionGradient.pprint": {
  "data": {
   "lineno": 217
  },
  "type": "function"
 },
 "cis.stats.LinearRegressionIntercept": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "cis.stats.StatisticsResult"
   ]
  },
  "type": "class"
 },
 "cis.stats.LinearRegressionIntercept.__init__": {
  "data": {
   "lineno": 235
  },
  "type": "function"
 },
 "cis.stats.LinearRegressionIntercept.as_cube": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "iris.cube.Cube"
   ]
  },
  "type": "function"
 },
 "cis.stats.LinearRegressionIntercept.pprint": {
  "data": {
   "lineno": 238
  },
  "type": "function"
 },
 "cis.stats.LinearRegressionRValue": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "cis.stats.StatisticsResult"
   ]
  },
  "type": "class"
 },
 "cis.stats.LinearRegressionRValue.__init__": {
  "data": {
   "lineno": 256
  },
  "type": "function"
 },
 "cis.stats.LinearRegressionRValue.as_cube": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "iris.cube.Cube"
   ]
  },
  "type": "function"
 },
 "cis.stats.LinearRegressionRValue.pprint": {
  "data": {
   "lineno": 259
  },
  "type": "function"
 },
 "cis.stats.LinearRegressionStderr": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "cis.stats.StatisticsResult"
   ]
  },
  "type": "class"
 },
 "cis.stats.LinearRegressionStderr.__init__": {
  "data": {
   "lineno": 278
  },
  "type": "function"
 },
 "cis.stats.LinearRegressionStderr.as_cube": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "iris.cube.Cube"
   ]
  },
  "type": "function"
 },
 "cis.stats.LinearRegressionStderr.pprint": {
  "data": {
   "lineno": 281
  },
  "type": "function"
 },
 "cis.stats.PointsCount": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "cis.stats.StatisticsResult"
   ]
  },
  "type": "class"
 },
 "cis.stats.PointsCount.__init__": {
  "data": {
   "lineno": 32
  },
  "type": "function"
 },
 "cis.stats.PointsCount.as_cube": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "iris.cube.Cube"
   ]
  },
  "type": "function"
 },
 "cis.stats.PointsCount.pprint": {
  "data": {
   "lineno": 35
  },
  "type": "function"
 },
 "cis.stats.RelativeMean": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "cis.stats.StatisticsResult"
   ]
  },
  "type": "class"
 },
 "cis.stats.RelativeMean.__init__": {
  "data": {
   "lineno": 146
  },
  "type": "function"
 },
 "cis.stats.RelativeMean.as_cube": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "iris.cube.Cube"
   ]
  },
  "type": "function"
 },
 "cis.stats.RelativeMean.pprint": {
  "data": {
   "lineno": 149
  },
  "type": "function"
 },
 "cis.stats.RelativeStddev": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "cis.stats.StatisticsResult"
   ]
  },
  "type": "class"
 },
 "cis.stats.RelativeStddev.__init__": {
  "data": {
   "lineno": 169
  },
  "type": "function"
 },
 "cis.stats.RelativeStddev.as_cube": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "iris.cube.Cube"
   ]
  },
  "type": "function"
 },
 "cis.stats.RelativeStddev.pprint": {
  "data": {
   "lineno": 172
  },
  "type": "function"
 },
 "cis.stats.SpearmansRank": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "cis.stats.StatisticsResult"
   ]
  },
  "type": "class"
 },
 "cis.stats.SpearmansRank.__init__": {
  "data": {
   "lineno": 192
  },
  "type": "function"
 },
 "cis.stats.SpearmansRank.as_cube": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "iris.cube.Cube"
   ]
  },
  "type": "function"
 },
 "cis.stats.SpearmansRank.pprint": {
  "data": {
   "lineno": 195
  },
  "type": "function"
 },
 "cis.stats.StatisticsResult": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "cis.stats.abc",
    "cis.stats.six",
    "object"
   ]
  },
  "type": "class"
 },
 "cis.stats.StatisticsResult.as_cube": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "cis.stats.abc"
   ]
  },
  "type": "function"
 },
 "cis.stats.StatisticsResult.pprint": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "cis.stats.abc"
   ]
  },
  "type": "function"
 },
 "cis.stats.StatsAnalyzer": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "cis.stats.StatsAnalyzer.__init__": {
  "data": {
   "lineno": 300
  },
  "type": "function"
 },
 "cis.stats.StatsAnalyzer.abs_mean": {
  "data": {
   "lineno": 368,
   "symbols_in_volume": [
    "cis.stats.AbsoluteMean",
    "cis.stats.numpy"
   ]
  },
  "type": "function"
 },
 "cis.stats.StatsAnalyzer.abs_stddev": {
  "data": {
   "lineno": 377,
   "symbols_in_volume": [
    "cis.stats.AbsoluteStddev",
    "cis.stats.numpy"
   ]
  },
  "type": "function"
 },
 "cis.stats.StatsAnalyzer.analyze": {
  "data": {
   "lineno": 316
  },
  "type": "function"
 },
 "cis.stats.StatsAnalyzer.linear_regression": {
  "data": {
   "lineno": 413,
   "symbols_in_volume": [
    "cis.stats.LinearRegressionGradient",
    "cis.stats.LinearRegressionIntercept",
    "cis.stats.LinearRegressionRValue",
    "cis.stats.LinearRegressionStderr"
   ]
  },
  "type": "function"
 },
 "cis.stats.StatsAnalyzer.means": {
  "data": {
   "lineno": 344,
   "symbols_in_volume": [
    "cis.stats.DatasetMean",
    "cis.stats.numpy",
    "cis.utils.apply_intersection_mask_to_two_arrays"
   ]
  },
  "type": "function"
 },
 "cis.stats.StatsAnalyzer.points_count": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": [
    "cis.stats.PointsCount",
    "cis.stats.numpy"
   ]
  },
  "type": "function"
 },
 "cis.stats.StatsAnalyzer.rel_mean": {
  "data": {
   "lineno": 386,
   "symbols_in_volume": [
    "cis.stats.RelativeMean",
    "cis.stats.numpy"
   ]
  },
  "type": "function"
 },
 "cis.stats.StatsAnalyzer.rel_stddev": {
  "data": {
   "lineno": 395,
   "symbols_in_volume": [
    "cis.stats.RelativeStddev",
    "cis.stats.numpy"
   ]
  },
  "type": "function"
 },
 "cis.stats.StatsAnalyzer.spearmans_rank": {
  "data": {
   "lineno": 404,
   "symbols_in_volume": [
    "cis.stats.SpearmansRank"
   ]
  },
  "type": "function"
 },
 "cis.stats.StatsAnalyzer.stddevs": {
  "data": {
   "lineno": 356,
   "symbols_in_volume": [
    "cis.stats.DatasetStddev",
    "cis.stats.numpy",
    "cis.utils.apply_intersection_mask_to_two_arrays"
   ]
  },
  "type": "function"
 },
 "cis.stats.abc": {
  "data": {
   "shadows": "abc"
  },
  "type": "import"
 },
 "cis.stats.apply_intersection_mask_to_two_arrays": {
  "data": {
   "shadows": "cis.utils.apply_intersection_mask_to_two_arrays"
  },
  "type": "import"
 },
 "cis.stats.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "cis.stats.scipy.stats.mstats": {
  "data": {
   "shadows": "scipy.stats.mstats"
  },
  "type": "import"
 },
 "cis.stats.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "cis.subsetting": {
  "data": {},
  "type": "module"
 },
 "cis.subsetting.subset": {
  "data": {},
  "type": "module"
 },
 "cis.subsetting.subset.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "cis.subsetting.subset.CoordinateNotFoundError": {
  "data": {
   "shadows": "cis.exceptions.CoordinateNotFoundError"
  },
  "type": "import"
 },
 "cis.subsetting.subset.GriddedSubsetConstraint": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "cis.subsetting.subset.SubsetConstraint"
   ]
  },
  "type": "class"
 },
 "cis.subsetting.subset.GriddedSubsetConstraint._make_extract_and_intersection_constraints": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "Contains",
    "cis.subsetting.subset.iris"
   ]
  },
  "type": "function"
 },
 "cis.subsetting.subset.GriddedSubsetConstraint._make_extract_and_intersection_constraints.Contains": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "cis.subsetting.subset.GriddedSubsetConstraint._make_extract_and_intersection_constraints.Contains.__call__": {
  "data": {
   "lineno": 162
  },
  "type": "function"
 },
 "cis.subsetting.subset.GriddedSubsetConstraint._make_extract_and_intersection_constraints.Contains.__init__": {
  "data": {
   "lineno": 158
  },
  "type": "function"
 },
 "cis.subsetting.subset.GriddedSubsetConstraint.constrain": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "IndexError",
    "NotImplementedError",
    "bool",
    "cis.data_io.gridded_data.make_from_cube",
    "cis.subsetting.subset._get_gridded_subset_region_indices",
    "isinstance",
    "numpy.ma.MaskedArray",
    "numpy.ma.masked_array",
    "numpy.ones",
    "numpy.unravel_index"
   ]
  },
  "type": "function"
 },
 "cis.subsetting.subset.MultiPoint": {
  "data": {
   "shadows": "shapely.geometry.MultiPoint"
  },
  "type": "import"
 },
 "cis.subsetting.subset.PartialDateTime": {
  "data": {
   "shadows": "cis.time_util.PartialDateTime"
  },
  "type": "import"
 },
 "cis.subsetting.subset.SubsetConstraint": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "abc.ABCMeta",
    "cis.subsetting.subset.six",
    "object"
   ]
  },
  "type": "class"
 },
 "cis.subsetting.subset.SubsetConstraint.__init__": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "cis.subsetting.subset.logging"
   ]
  },
  "type": "function"
 },
 "cis.subsetting.subset.SubsetConstraint.__str__": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "cis.subsetting.subset.SubsetConstraint.constrain": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "cis.subsetting.subset.UngriddedDataList": {
  "data": {
   "shadows": "cis.data_io.ungridded_data.UngriddedDataList"
  },
  "type": "import"
 },
 "cis.subsetting.subset.UngriddedSubsetConstraint": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "cis.subsetting.subset.SubsetConstraint"
   ]
  },
  "type": "class"
 },
 "cis.subsetting.subset.UngriddedSubsetConstraint.__init__": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "cis.subsetting.subset.UngriddedSubsetConstraint",
    "super"
   ]
  },
  "type": "function"
 },
 "cis.subsetting.subset.UngriddedSubsetConstraint._create_data_for_subset": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "cis.exceptions.CoordinateNotFoundError"
   ]
  },
  "type": "function"
 },
 "cis.subsetting.subset.UngriddedSubsetConstraint.constrain": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "bool",
    "cis.data_io.ungridded_data.UngriddedDataList",
    "cis.subsetting.subset._get_ungridded_subset_region_indices",
    "datetime.datetime",
    "isinstance",
    "list",
    "numpy.greater_equal",
    "numpy.less_equal",
    "numpy.ones",
    "numpy.unravel_index"
   ]
  },
  "type": "function"
 },
 "cis.subsetting.subset._get_gridded_subset_region_indices": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": [
    "cis.data_io.gridded_data.coord",
    "cis.subsetting.subset._get_indices_for_lat_lon_points",
    "numpy.meshgrid"
   ]
  },
  "type": "function"
 },
 "cis.subsetting.subset._get_indices_for_lat_lon_points": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": [
    "enumerate",
    "numpy.vstack",
    "shapely.geometry.MultiPoint"
   ]
  },
  "type": "function"
 },
 "cis.subsetting.subset._get_ungridded_subset_region_indices": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "cis.subsetting.subset._get_indices_for_lat_lon_points"
   ]
  },
  "type": "function"
 },
 "cis.subsetting.subset.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "cis.subsetting.subset.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "cis.subsetting.subset.gridded_data": {
  "data": {
   "shadows": "cis.data_io.gridded_data"
  },
  "type": "import"
 },
 "cis.subsetting.subset.iris": {
  "data": {
   "shadows": "iris"
  },
  "type": "import"
 },
 "cis.subsetting.subset.iris.coords": {
  "data": {
   "shadows": "iris.coords"
  },
  "type": "import"
 },
 "cis.subsetting.subset.loads": {
  "data": {
   "shadows": "shapely.wkt.loads"
  },
  "type": "import"
 },
 "cis.subsetting.subset.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "cis.subsetting.subset.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "cis.subsetting.subset.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "cis.subsetting.subset.subset": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "Exception",
    "ValueError",
    "all",
    "cis.exceptions.CoordinateNotFoundError",
    "cis.subsetting.subset.six",
    "cis.time_util.PartialDateTime",
    "constraint",
    "hasattr",
    "isinstance",
    "len",
    "shapely.wkt.loads",
    "slice",
    "str"
   ]
  },
  "type": "function"
 },
 "cis.test": {
  "data": {},
  "type": "module"
 },
 "cis.test.integration": {
  "data": {
   "symbols_in_volume": [
    "cis.test.integration.matplotlib"
   ]
  },
  "type": "module"
 },
 "cis.test.integration.base_integration_test": {
  "data": {},
  "type": "module"
 },
 "cis.test.integration.base_integration_test.BaseIntegrationTest": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "cis.test.integration.base_integration_test.unittest"
   ]
  },
  "type": "class"
 },
 "cis.test.integration.base_integration_test.BaseIntegrationTest._clean_sample_file_name": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "cis.test.integration.base_integration_test.re",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.base_integration_test.BaseIntegrationTest.check_alt_subsetting": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "hamcrest.assert_that",
    "hamcrest.greater_than_or_equal_to",
    "hamcrest.less_than_or_equal_to",
    "max",
    "min",
    "netCDF4.Dataset"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.base_integration_test.BaseIntegrationTest.check_latlon_subsetting": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "hamcrest.assert_that",
    "hamcrest.greater_than_or_equal_to",
    "hamcrest.less_than_or_equal_to",
    "max",
    "min",
    "netCDF4.Dataset"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.base_integration_test.BaseIntegrationTest.check_output_col_grid": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "cis.read_data",
    "functools.reduce",
    "hamcrest.assert_that",
    "hamcrest.is_",
    "netCDF4.Dataset",
    "operator.mul"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.base_integration_test.BaseIntegrationTest.check_output_contains_variables": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "AssertionError",
    "KeyError",
    "netCDF4.Dataset"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.base_integration_test.BaseIntegrationTest.check_output_file_variable_attribute_contains_string": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "AssertionError",
    "AttributeError",
    "KeyError",
    "getattr",
    "netCDF4.Dataset"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.base_integration_test.BaseIntegrationTest.check_output_vars_are_different": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "itertools.combinations",
    "netCDF4.Dataset",
    "numpy.allclose"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.base_integration_test.BaseIntegrationTest.check_pres_subsetting": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "hamcrest.assert_that",
    "hamcrest.greater_than_or_equal_to",
    "hamcrest.less_than_or_equal_to",
    "netCDF4.Dataset",
    "numpy.max",
    "numpy.min"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.base_integration_test.BaseIntegrationTest.clean_output": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "cis.test.integration.base_integration_test.os",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.base_integration_test.BaseIntegrationTest.setUp": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "cis.test.integration.base_integration_test.os"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.base_integration_test.BaseIntegrationTest.tearDown": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "cis.test.integration.base_integration_test.os"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.base_integration_test.Dataset": {
  "data": {
   "shadows": "netCDF4.Dataset"
  },
  "type": "import"
 },
 "cis.test.integration.base_integration_test.assert_that": {
  "data": {
   "shadows": "hamcrest.assert_that"
  },
  "type": "import"
 },
 "cis.test.integration.base_integration_test.combinations": {
  "data": {
   "shadows": "itertools.combinations"
  },
  "type": "import"
 },
 "cis.test.integration.base_integration_test.greater_than_or_equal_to": {
  "data": {
   "shadows": "hamcrest.greater_than_or_equal_to"
  },
  "type": "import"
 },
 "cis.test.integration.base_integration_test.is_": {
  "data": {
   "shadows": "hamcrest.is_"
  },
  "type": "import"
 },
 "cis.test.integration.base_integration_test.less_than_or_equal_to": {
  "data": {
   "shadows": "hamcrest.less_than_or_equal_to"
  },
  "type": "import"
 },
 "cis.test.integration.base_integration_test.mul": {
  "data": {
   "shadows": "operator.mul"
  },
  "type": "import"
 },
 "cis.test.integration.base_integration_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "cis.test.integration.base_integration_test.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "cis.test.integration.base_integration_test.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "cis.test.integration.base_integration_test.read_data": {
  "data": {
   "shadows": "cis.read_data"
  },
  "type": "import"
 },
 "cis.test.integration.base_integration_test.reduce": {
  "data": {
   "shadows": "functools.reduce"
  },
  "type": "import"
 },
 "cis.test.integration.base_integration_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "cis.test.integration.matplotlib": {
  "data": {
   "shadows": "matplotlib"
  },
  "type": "import"
 },
 "cis.test.integration.test_aggregate": {
  "data": {},
  "type": "module"
 },
 "cis.test.integration.test_aggregate.BaseAggregationTest": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "cis.test.integration.base_integration_test.BaseIntegrationTest"
   ]
  },
  "type": "class"
 },
 "cis.test.integration.test_aggregate.BaseAggregationTest.check_grid_aggregation": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "AssertionError",
    "assert_that",
    "netCDF4.Dataset",
    "numpy.allclose",
    "numpy.arange",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_aggregate.BaseAggregationTest.check_temporal_aggregation": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "assert_that",
    "convert_to_days_since_cis_epoch",
    "datetime.timedelta",
    "netCDF4.Dataset",
    "numpy.allclose",
    "numpy.arange",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_aggregate.BaseAggregationTest.check_temporal_aggregation.convert_to_days_since_cis_epoch": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "datetime.datetime",
    "datetime.timedelta"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_aggregate.BaseAggregationTest.do_spatial_aggregate": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "cis.cis_main.aggregate_cmd",
    "cis.parse.parse_args",
    "escape_colons"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_aggregate.BaseAggregationTest.do_temporal_aggregate": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "cis.cis_main.aggregate_cmd",
    "cis.parse.parse_args",
    "escape_colons"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_aggregate.BaseIntegrationTest": {
  "data": {
   "shadows": "cis.test.integration.base_integration_test.BaseIntegrationTest"
  },
  "type": "import"
 },
 "cis.test.integration.test_aggregate.Dataset": {
  "data": {
   "shadows": "netCDF4.Dataset"
  },
  "type": "import"
 },
 "cis.test.integration.test_aggregate.TestAggregation": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "cis.test.integration.test_aggregate.BaseAggregationTest"
   ]
  },
  "type": "class"
 },
 "cis.test.integration.test_aggregate.TestAggregation.test_aggregation_of_multiple_variables_gives_same_result": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "assert_arrays_almost_equal",
    "datetime.datetime",
    "datetime.timedelta",
    "netCDF4.Dataset"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_aggregate.TestAggregation.test_aggregation_over_latlon": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "assert_arrays_almost_equal",
    "float",
    "netCDF4.Dataset",
    "numpy.array",
    "numpy.ma.masked_invalid"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_aggregate.TestAggregation.test_aggregation_over_time": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "assert_arrays_almost_equal",
    "datetime.datetime",
    "datetime.timedelta",
    "float",
    "netCDF4.Dataset",
    "numpy.array",
    "numpy.ma.masked_invalid"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_aggregate.TestMomentsKernel": {
  "data": {
   "lineno": 563,
   "symbols_in_volume": [
    "cis.test.integration.test_aggregate.BaseAggregationTest"
   ]
  },
  "type": "class"
 },
 "cis.test.integration.test_aggregate.TestMomentsKernel.test_GIVEN_no_kernel_specified_WHEN_aggregate_THEN_moments_used_as_default": {
  "data": {
   "lineno": 564,
   "symbols_in_volume": [
    "cis.cis_main.aggregate_cmd",
    "cis.parse.parse_args",
    "escape_colons"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_aggregate.TestMomentsKernel.test_moments_kernel_aggregate_cis_ungridded": {
  "data": {
   "lineno": 579,
   "symbols_in_volume": [
    "cis.cis_main.aggregate_cmd",
    "cis.parse.parse_args",
    "escape_colons"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_aggregate.TestSpatialAggregationByDataProduct": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "cis.test.integration.test_aggregate.BaseAggregationTest"
   ]
  },
  "type": "class"
 },
 "cis.test.integration.test_aggregate.TestSpatialAggregationByDataProduct.test_aggregate_Aeronet": {
  "data": {
   "lineno": 265
  },
  "type": "function"
 },
 "cis.test.integration.test_aggregate.TestSpatialAggregationByDataProduct.test_aggregate_Aerosol_CCI_with_lon_wraparound": {
  "data": {
   "lineno": 195
  },
  "type": "function"
 },
 "cis.test.integration.test_aggregate.TestSpatialAggregationByDataProduct.test_aggregate_Caliop_L1": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": [
    "cis.test.integration.test_aggregate.unittest"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_aggregate.TestSpatialAggregationByDataProduct.test_aggregate_Caliop_L2": {
  "data": {
   "lineno": 336
  },
  "type": "function"
 },
 "cis.test.integration.test_aggregate.TestSpatialAggregationByDataProduct.test_aggregate_CloudSatPRECIP": {
  "data": {
   "lineno": 304
  },
  "type": "function"
 },
 "cis.test.integration.test_aggregate.TestSpatialAggregationByDataProduct.test_aggregate_CloudSatRVOD": {
  "data": {
   "lineno": 324
  },
  "type": "function"
 },
 "cis.test.integration.test_aggregate.TestSpatialAggregationByDataProduct.test_aggregate_Cloud_CCI": {
  "data": {
   "lineno": 213
  },
  "type": "function"
 },
 "cis.test.integration.test_aggregate.TestSpatialAggregationByDataProduct.test_aggregate_Cloud_CCI_for_comparison_with_collocation": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "cis.cis_main.aggregate_cmd",
    "cis.parse.parse_args",
    "escape_colons"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_aggregate.TestSpatialAggregationByDataProduct.test_aggregate_Cloud_CCI_with_dimension_vars": {
  "data": {
   "lineno": 204
  },
  "type": "function"
 },
 "cis.test.integration.test_aggregate.TestSpatialAggregationByDataProduct.test_aggregate_GASSP": {
  "data": {
   "lineno": 248
  },
  "type": "function"
 },
 "cis.test.integration.test_aggregate.TestSpatialAggregationByDataProduct.test_aggregate_GASSP2": {
  "data": {
   "lineno": 256
  },
  "type": "function"
 },
 "cis.test.integration.test_aggregate.TestSpatialAggregationByDataProduct.test_aggregate_MODIS_L2": {
  "data": {
   "lineno": 294
  },
  "type": "function"
 },
 "cis.test.integration.test_aggregate.TestSpatialAggregationByDataProduct.test_aggregate_NCAR_RAF": {
  "data": {
   "lineno": 239
  },
  "type": "function"
 },
 "cis.test.integration.test_aggregate.TestSpatialAggregationByDataProduct.test_aggregate_cis_ungridded": {
  "data": {
   "lineno": 285
  },
  "type": "function"
 },
 "cis.test.integration.test_aggregate.TestSpatialAggregationByDataProduct.test_aggregate_netCDF_gridded_HadGem": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "cis.cis_main.aggregate_cmd",
    "cis.parse.parse_args",
    "escape_colons"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_aggregate.TestSpatialAggregationByDataProduct.test_subset_ASCII": {
  "data": {
   "lineno": 346
  },
  "type": "function"
 },
 "cis.test.integration.test_aggregate.TestTemporalAggregationByDataProduct": {
  "data": {
   "lineno": 356,
   "symbols_in_volume": [
    "cis.test.integration.test_aggregate.BaseAggregationTest"
   ]
  },
  "type": "class"
 },
 "cis.test.integration.test_aggregate.TestTemporalAggregationByDataProduct.test_aggregate_ASCII": {
  "data": {
   "lineno": 551,
   "symbols_in_volume": [
    "datetime.datetime",
    "datetime.timedelta"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_aggregate.TestTemporalAggregationByDataProduct.test_aggregate_Aeronet": {
  "data": {
   "lineno": 442,
   "symbols_in_volume": [
    "datetime.datetime",
    "datetime.timedelta"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_aggregate.TestTemporalAggregationByDataProduct.test_aggregate_Aeronet_multi_var": {
  "data": {
   "lineno": 453,
   "symbols_in_volume": [
    "datetime.datetime",
    "datetime.timedelta"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_aggregate.TestTemporalAggregationByDataProduct.test_aggregate_Aerosol_CCI": {
  "data": {
   "lineno": 365
  },
  "type": "function"
 },
 "cis.test.integration.test_aggregate.TestTemporalAggregationByDataProduct.test_aggregate_Caliop_L1": {
  "data": {
   "lineno": 526,
   "symbols_in_volume": [
    "cis.test.integration.test_aggregate.unittest",
    "datetime.datetime",
    "datetime.timedelta"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_aggregate.TestTemporalAggregationByDataProduct.test_aggregate_Caliop_L2": {
  "data": {
   "lineno": 538,
   "symbols_in_volume": [
    "datetime.datetime",
    "datetime.timedelta"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_aggregate.TestTemporalAggregationByDataProduct.test_aggregate_CloudSatPRECIP": {
  "data": {
   "lineno": 503,
   "symbols_in_volume": [
    "datetime.datetime",
    "datetime.timedelta"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_aggregate.TestTemporalAggregationByDataProduct.test_aggregate_CloudSatPRECIP_with_dimension_variables": {
  "data": {
   "lineno": 489,
   "symbols_in_volume": [
    "datetime.datetime",
    "datetime.timedelta"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_aggregate.TestTemporalAggregationByDataProduct.test_aggregate_CloudSatRVOD": {
  "data": {
   "lineno": 514,
   "symbols_in_volume": [
    "datetime.datetime",
    "datetime.timedelta"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_aggregate.TestTemporalAggregationByDataProduct.test_aggregate_Cloud_CCI": {
  "data": {
   "lineno": 381,
   "symbols_in_volume": [
    "datetime.datetime",
    "datetime.timedelta"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_aggregate.TestTemporalAggregationByDataProduct.test_aggregate_Cloud_CCI_with_dimension_vars": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": [
    "datetime.datetime",
    "datetime.timedelta"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_aggregate.TestTemporalAggregationByDataProduct.test_aggregate_GASSP": {
  "data": {
   "lineno": 421,
   "symbols_in_volume": [
    "datetime.datetime",
    "datetime.timedelta"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_aggregate.TestTemporalAggregationByDataProduct.test_aggregate_GASSP_aux_coord": {
  "data": {
   "lineno": 431,
   "symbols_in_volume": [
    "datetime.datetime",
    "datetime.timedelta"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_aggregate.TestTemporalAggregationByDataProduct.test_aggregate_MODIS_L2": {
  "data": {
   "lineno": 477,
   "symbols_in_volume": [
    "datetime.datetime",
    "datetime.timedelta"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_aggregate.TestTemporalAggregationByDataProduct.test_aggregate_NCAR_RAF": {
  "data": {
   "lineno": 392,
   "symbols_in_volume": [
    "datetime.datetime",
    "datetime.timedelta"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_aggregate.TestTemporalAggregationByDataProduct.test_aggregate_NCAR_RAF_with_named_time_variable_standard_name": {
  "data": {
   "lineno": 404,
   "symbols_in_volume": [
    "cis.cis_main.aggregate_cmd",
    "cis.parse.parse_args",
    "datetime.datetime",
    "datetime.timedelta",
    "escape_colons"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_aggregate.TestTemporalAggregationByDataProduct.test_aggregate_cis_ungridded": {
  "data": {
   "lineno": 466,
   "symbols_in_volume": [
    "datetime.datetime",
    "datetime.timedelta"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_aggregate.aggregate_cmd": {
  "data": {
   "shadows": "cis.cis_main.aggregate_cmd"
  },
  "type": "import"
 },
 "cis.test.integration.test_aggregate.dt": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "cis.test.integration.test_aggregate.ma": {
  "data": {
   "shadows": "numpy.ma"
  },
  "type": "import"
 },
 "cis.test.integration.test_aggregate.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "cis.test.integration.test_aggregate.parse_args": {
  "data": {
   "shadows": "cis.parse.parse_args"
  },
  "type": "import"
 },
 "cis.test.integration.test_aggregate.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "cis.test.integration.test_collapse": {
  "data": {},
  "type": "module"
 },
 "cis.test.integration.test_collapse.BaseIntegrationTest": {
  "data": {
   "shadows": "cis.test.integration.base_integration_test.BaseIntegrationTest"
  },
  "type": "import"
 },
 "cis.test.integration.test_collapse.Dataset": {
  "data": {
   "shadows": "netCDF4.Dataset"
  },
  "type": "import"
 },
 "cis.test.integration.test_collapse.TestCollapse": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "cis.test.integration.base_integration_test.BaseIntegrationTest"
   ]
  },
  "type": "class"
 },
 "cis.test.integration.test_collapse.TestCollapse.check_shape_collapse": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "assert_that",
    "netCDF4.Dataset"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_collapse.TestCollapse.test_collapse_MODIS_L3": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "cis.cis_main.collapse_cmd",
    "cis.parse.parse_args",
    "escape_colons"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_collapse.TestCollapse.test_collapse_cis_gridded": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "cis.cis_main.collapse_cmd",
    "cis.parse.parse_args",
    "escape_colons"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_collapse.TestCollapse.test_collapse_netCDF_gridded_HadGem_multikernel": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "cis.cis_main.collapse_cmd",
    "cis.parse.parse_args",
    "escape_colons"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_collapse.TestCollapse.test_collapse_over_latlon": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "cis.cis_main.collapse_cmd",
    "cis.parse.parse_args",
    "escape_colons"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_collapse.TestCollapse.test_collapse_over_time": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "cis.cis_main.collapse_cmd",
    "cis.parse.parse_args",
    "escape_colons"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_collapse.TestCollapse.test_netCDF_gridded_hybrid_height": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "cis.cis_main.collapse_cmd",
    "cis.parse.parse_args",
    "escape_colons"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_collapse.TestCollapse.test_netCDF_gridded_hybrid_height_partial": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "cis.cis_main.collapse_cmd",
    "cis.parse.parse_args",
    "escape_colons"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_collapse.TestCollapse.test_netCDF_gridded_hybrid_height_partial_with_multi_kernel": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "cis.cis_main.collapse_cmd",
    "cis.parse.parse_args",
    "escape_colons"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_collapse.collapse_cmd": {
  "data": {
   "shadows": "cis.cis_main.collapse_cmd"
  },
  "type": "import"
 },
 "cis.test.integration.test_collapse.parse_args": {
  "data": {
   "shadows": "cis.parse.parse_args"
  },
  "type": "import"
 },
 "cis.test.integration.test_colocate": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "cis.test.integration.test_colocate.unittest"
   ]
  },
  "type": "module"
 },
 "cis.test.integration.test_colocate.BaseIntegrationTest": {
  "data": {
   "shadows": "cis.test.integration.base_integration_test.BaseIntegrationTest"
  },
  "type": "import"
 },
 "cis.test.integration.test_colocate.TestGriddedGriddedCollocate": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "cis.test.integration.base_integration_test.BaseIntegrationTest"
   ]
  },
  "type": "class"
 },
 "cis.test.integration.test_colocate.TestGriddedGriddedCollocate.test_ECHAMHAM_onto_HadGem_box": {
  "data": {
   "lineno": 377,
   "symbols_in_volume": [
    "cis.cis_main.col_cmd",
    "cis.parse.parse_args",
    "cis.test.integration.test_colocate.unittest",
    "escape_colons",
    "vars"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_colocate.TestGriddedGriddedCollocate.test_ECHAMHAM_onto_HadGem_lin": {
  "data": {
   "lineno": 342,
   "symbols_in_volume": [
    "cis.cis_main.col_cmd",
    "cis.parse.parse_args",
    "escape_colons",
    "vars"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_colocate.TestGriddedGriddedCollocate.test_ECHAMHAM_onto_HadGem_nn": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": [
    "cis.cis_main.col_cmd",
    "cis.parse.parse_args",
    "escape_colons",
    "vars"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_colocate.TestGriddedGriddedCollocate.test_HadGem_onto_ECHAMHAM_lin": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": [
    "cis.cis_main.col_cmd",
    "cis.parse.parse_args",
    "escape_colons",
    "vars"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_colocate.TestGriddedGriddedCollocate.test_HadGem_onto_ECHAMHAM_nn": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": [
    "cis.cis_main.col_cmd",
    "cis.parse.parse_args",
    "escape_colons",
    "vars"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_colocate.TestGriddedGriddedCollocate.test_HadGem_onto_cis_gridded_output_lin": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "cis.cis_main.col_cmd",
    "cis.parse.parse_args",
    "escape_colons",
    "vars"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_colocate.TestGriddedGriddedCollocate.test_MODIS_L3_onto_NetCDF_Gridded": {
  "data": {
   "lineno": 395,
   "symbols_in_volume": [
    "cis.cis_main.col_cmd",
    "cis.parse.parse_args",
    "escape_colons",
    "vars"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_colocate.TestGriddedGriddedCollocate.test_NetCDF_Gridded_onto_MODIS_L3": {
  "data": {
   "lineno": 413,
   "symbols_in_volume": [
    "cis.cis_main.col_cmd",
    "cis.parse.parse_args",
    "escape_colons",
    "vars"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_colocate.TestGriddedUngriddedCollocate": {
  "data": {
   "lineno": 555,
   "symbols_in_volume": [
    "cis.test.integration.base_integration_test.BaseIntegrationTest"
   ]
  },
  "type": "class"
 },
 "cis.test.integration.test_colocate.TestGriddedUngriddedCollocate.test_NetCDF_Gridded_onto_ASCII_no_variable": {
  "data": {
   "lineno": 571,
   "symbols_in_volume": [
    "cis.cis_main.col_cmd",
    "cis.parse.parse_args",
    "escape_colons",
    "vars"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_colocate.TestGriddedUngriddedCollocate.test_NetCDF_Gridded_onto_ASCII_with_variable": {
  "data": {
   "lineno": 556,
   "symbols_in_volume": [
    "cis.cis_main.col_cmd",
    "cis.parse.parse_args",
    "escape_colons",
    "vars"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_colocate.TestGriddedUngriddedCollocate.test_NetCDF_Gridded_onto_Aeronet": {
  "data": {
   "lineno": 586,
   "symbols_in_volume": [
    "cis.cis_main.col_cmd",
    "cis.parse.parse_args",
    "escape_colons",
    "vars"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_colocate.TestGriddedUngriddedCollocate.test_NetCDF_Gridded_onto_Aeronet_lin": {
  "data": {
   "lineno": 601,
   "symbols_in_volume": [
    "cis.cis_main.col_cmd",
    "cis.parse.parse_args",
    "escape_colons",
    "vars"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_colocate.TestGriddedUngriddedCollocate.test_NetCDF_Gridded_onto_CALIOP_L1": {
  "data": {
   "lineno": 826,
   "symbols_in_volume": [
    "cis.cis_main.col_cmd",
    "cis.parse.parse_args",
    "escape_colons",
    "vars"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_colocate.TestGriddedUngriddedCollocate.test_NetCDF_Gridded_onto_CALIOP_L2": {
  "data": {
   "lineno": 841,
   "symbols_in_volume": [
    "cis.cis_main.col_cmd",
    "cis.parse.parse_args",
    "escape_colons",
    "vars"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_colocate.TestGriddedUngriddedCollocate.test_NetCDF_Gridded_onto_GASSP": {
  "data": {
   "lineno": 616,
   "symbols_in_volume": [
    "cis.cis_main.col_cmd",
    "cis.parse.parse_args",
    "escape_colons",
    "vars"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_colocate.TestGriddedUngriddedCollocate.test_NetCDF_Gridded_onto_GASSP_aux_coord_li": {
  "data": {
   "lineno": 647,
   "symbols_in_volume": [
    "cis.cis_main.col_cmd",
    "cis.parse.parse_args",
    "escape_colons",
    "vars"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_colocate.TestGriddedUngriddedCollocate.test_NetCDF_Gridded_onto_GASSP_li": {
  "data": {
   "lineno": 631,
   "symbols_in_volume": [
    "cis.cis_main.col_cmd",
    "cis.parse.parse_args",
    "escape_colons",
    "vars"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_colocate.TestGriddedUngriddedCollocate.test_NetCDF_Gridded_onto_GASSP_li_with_extrapolation": {
  "data": {
   "lineno": 725,
   "symbols_in_volume": [
    "cis.cis_main.col_cmd",
    "cis.parse.parse_args",
    "escape_colons",
    "vars"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_colocate.TestGriddedUngriddedCollocate.test_NetCDF_Gridded_onto_GASSP_li_with_nn_in_the_vertical": {
  "data": {
   "lineno": 742,
   "symbols_in_volume": [
    "cis.cis_main.col_cmd",
    "cis.parse.parse_args",
    "escape_colons",
    "vars"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_colocate.TestGriddedUngriddedCollocate.test_NetCDF_Gridded_onto_GASSP_li_with_nn_in_the_vertical_and_extrapolation": {
  "data": {
   "lineno": 759,
   "symbols_in_volume": [
    "cis.cis_main.col_cmd",
    "cis.parse.parse_args",
    "escape_colons",
    "vars"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_colocate.TestGriddedUngriddedCollocate.test_NetCDF_Gridded_onto_MODIS_L2": {
  "data": {
   "lineno": 776,
   "symbols_in_volume": [
    "cis.cis_main.col_cmd",
    "cis.parse.parse_args",
    "escape_colons",
    "vars"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_colocate.TestGriddedUngriddedCollocate.test_NetCDF_Gridded_onto_MODIS_L2_nn": {
  "data": {
   "lineno": 793,
   "symbols_in_volume": [
    "cis.cis_main.col_cmd",
    "cis.parse.parse_args",
    "escape_colons",
    "vars"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_colocate.TestGriddedUngriddedCollocate.test_NetCDF_Gridded_onto_MODIS_L3": {
  "data": {
   "lineno": 810,
   "symbols_in_volume": [
    "cis.cis_main.col_cmd",
    "cis.parse.parse_args",
    "escape_colons",
    "vars"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_colocate.TestGriddedUngriddedCollocate.test_NetCDF_Gridded_onto_NCAR_RAF": {
  "data": {
   "lineno": 933,
   "symbols_in_volume": [
    "cis.cis_main.col_cmd",
    "cis.parse.parse_args",
    "escape_colons",
    "vars"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_colocate.TestGriddedUngriddedCollocate.test_NetCDF_Gridded_onto_NCAR_RAF_with_var": {
  "data": {
   "lineno": 918,
   "symbols_in_volume": [
    "cis.cis_main.col_cmd",
    "cis.parse.parse_args",
    "escape_colons",
    "vars"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_colocate.TestGriddedUngriddedCollocate.test_NetCDF_Gridded_onto_aerosol_cci": {
  "data": {
   "lineno": 903,
   "symbols_in_volume": [
    "cis.cis_main.col_cmd",
    "cis.parse.parse_args",
    "escape_colons",
    "vars"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_colocate.TestGriddedUngriddedCollocate.test_NetCDF_Gridded_onto_cis_output_data": {
  "data": {
   "lineno": 948,
   "symbols_in_volume": [
    "cis.cis_main.col_cmd",
    "cis.parse.parse_args",
    "escape_colons",
    "vars"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_colocate.TestGriddedUngriddedCollocate.test_NetCDF_Gridded_onto_cloud_cci": {
  "data": {
   "lineno": 888,
   "symbols_in_volume": [
    "cis.cis_main.col_cmd",
    "cis.parse.parse_args",
    "escape_colons",
    "vars"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_colocate.TestGriddedUngriddedCollocate.test_NetCDF_Gridded_onto_cloudsat_PRECIP": {
  "data": {
   "lineno": 856,
   "symbols_in_volume": [
    "cis.cis_main.col_cmd",
    "cis.parse.parse_args",
    "escape_colons",
    "vars"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_colocate.TestGriddedUngriddedCollocate.test_NetCDF_Gridded_onto_cloudsat_RVOD": {
  "data": {
   "lineno": 872,
   "symbols_in_volume": [
    "cis.cis_main.col_cmd",
    "cis.parse.parse_args",
    "escape_colons",
    "vars"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_colocate.TestGriddedUngriddedCollocate.test_hybrid_height_onto_GASSP_li": {
  "data": {
   "lineno": 694,
   "symbols_in_volume": [
    "cis.cis_main.col_cmd",
    "cis.parse.parse_args",
    "cis.test.integration.test_colocate.unittest",
    "escape_colons",
    "vars"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_colocate.TestGriddedUngriddedCollocate.test_hybrid_height_onto_GASSP_nn": {
  "data": {
   "lineno": 663,
   "symbols_in_volume": [
    "cis.cis_main.col_cmd",
    "cis.parse.parse_args",
    "cis.test.integration.test_colocate.unittest",
    "escape_colons",
    "vars"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_colocate.TestGriddedUngriddedCollocate.test_hybrid_pressure_onto_GASSP_li": {
  "data": {
   "lineno": 710,
   "symbols_in_volume": [
    "cis.cis_main.col_cmd",
    "cis.parse.parse_args",
    "escape_colons",
    "vars"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_colocate.TestGriddedUngriddedCollocate.test_hybrid_pressure_onto_GASSP_nn": {
  "data": {
   "lineno": 679,
   "symbols_in_volume": [
    "cis.cis_main.col_cmd",
    "cis.parse.parse_args",
    "escape_colons",
    "vars"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_colocate.TestUngriddedGriddedCollocate": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "cis.test.integration.base_integration_test.BaseIntegrationTest"
   ]
  },
  "type": "class"
 },
 "cis.test.integration.test_colocate.TestUngriddedGriddedCollocate.test_ASCII_onto_NetCDF_Gridded": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "cis.cis_main.col_cmd",
    "cis.parse.parse_args",
    "escape_colons",
    "vars"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_colocate.TestUngriddedGriddedCollocate.test_Aeronet_onto_NetCDF_Gridded": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "cis.cis_main.col_cmd",
    "cis.parse.parse_args",
    "escape_colons",
    "vars"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_colocate.TestUngriddedGriddedCollocate.test_CALIOP_L1_onto_NetCDF_Gridded": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "cis.cis_main.col_cmd",
    "cis.parse.parse_args",
    "cis.test.integration.test_colocate.unittest",
    "escape_colons",
    "vars"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_colocate.TestUngriddedGriddedCollocate.test_CALIOP_L2_onto_NetCDF_Gridded": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "cis.cis_main.col_cmd",
    "cis.parse.parse_args",
    "cis.test.integration.test_colocate.unittest",
    "escape_colons",
    "vars"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_colocate.TestUngriddedGriddedCollocate.test_GASSP_aux_onto_NetCDF_Gridded": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "cis.cis_main.col_cmd",
    "cis.parse.parse_args",
    "escape_colons"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_colocate.TestUngriddedGriddedCollocate.test_GASSP_plane_onto_NetCDF_Gridded": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "cis.cis_main.col_cmd",
    "cis.parse.parse_args",
    "escape_colons",
    "vars"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_colocate.TestUngriddedGriddedCollocate.test_GASSP_ship_onto_NetCDF_Gridded": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "cis.cis_main.col_cmd",
    "cis.parse.parse_args",
    "escape_colons",
    "vars"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_colocate.TestUngriddedGriddedCollocate.test_GASSP_station_onto_NetCDF_Gridded": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "cis.cis_main.col_cmd",
    "cis.parse.parse_args",
    "escape_colons"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_colocate.TestUngriddedGriddedCollocate.test_GIVEN_multiple_variables_on_same_coords_WHEN_collocate_THEN_successful_collocation": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "cis.cis_main.col_cmd",
    "cis.parse.parse_args",
    "escape_colons"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_colocate.TestUngriddedGriddedCollocate.test_GIVEN_multiple_variables_on_same_coords_plus_dim_vars_WHEN_collocate_THEN_successful_collocation": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "cis.cis_main.col_cmd",
    "cis.parse.parse_args",
    "escape_colons"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_colocate.TestUngriddedGriddedCollocate.test_GIVEN_single_variable_WHEN_collocate_THEN_successful_collocation": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "cis.cis_main.col_cmd",
    "cis.parse.parse_args",
    "escape_colons"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_colocate.TestUngriddedGriddedCollocate.test_MODIS_L2_onto_NetCDF_Gridded": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "cis.cis_main.col_cmd",
    "cis.parse.parse_args",
    "escape_colons",
    "vars"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_colocate.TestUngriddedGriddedCollocate.test_MODIS_L2_onto_NetCDF_Gridded_with_moments_kernel": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "cis.cis_main.col_cmd",
    "cis.parse.parse_args",
    "escape_colons",
    "vars"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_colocate.TestUngriddedGriddedCollocate.test_cis_output_onto_NetCDF_Gridded": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "cis.cis_main.col_cmd",
    "cis.parse.parse_args",
    "escape_colons",
    "vars"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_colocate.TestUngriddedGriddedCollocate.test_cloud_cci_onto_NetCDF_Gridded": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "cis.cis_main.col_cmd",
    "cis.parse.parse_args",
    "escape_colons"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_colocate.TestUngriddedGriddedCollocate.test_cloudsat_PRECIP_onto_NetCDF_Gridded": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "cis.cis_main.col_cmd",
    "cis.parse.parse_args",
    "escape_colons",
    "vars"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_colocate.TestUngriddedGriddedCollocate.test_cloudsat_PRECIP_onto_NetCDF_Gridded_using_moments_kernel": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "cis.cis_main.col_cmd",
    "cis.parse.parse_args",
    "escape_colons",
    "vars"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_colocate.TestUngriddedGriddedCollocate.test_cloudsat_RVOD_onto_NetCDF_Gridded": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "cis.cis_main.col_cmd",
    "cis.parse.parse_args",
    "escape_colons",
    "vars"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_colocate.TestUngriddedUngriddedCollocate": {
  "data": {
   "lineno": 432,
   "symbols_in_volume": [
    "cis.test.integration.base_integration_test.BaseIntegrationTest"
   ]
  },
  "type": "class"
 },
 "cis.test.integration.test_colocate.TestUngriddedUngriddedCollocate.test_Aeronet_onto_CloudSat": {
  "data": {
   "lineno": 540,
   "symbols_in_volume": [
    "cis.cis_main.col_cmd",
    "cis.parse.parse_args",
    "escape_colons"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_colocate.TestUngriddedUngriddedCollocate.test_Aeronet_onto_CloudSat_nn": {
  "data": {
   "lineno": 526,
   "symbols_in_volume": [
    "cis.cis_main.col_cmd",
    "cis.parse.parse_args",
    "escape_colons"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_colocate.TestUngriddedUngriddedCollocate.test_Aeronet_onto_GASSP": {
  "data": {
   "lineno": 458,
   "symbols_in_volume": [
    "cis.cis_main.col_cmd",
    "cis.parse.parse_args",
    "escape_colons"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_colocate.TestUngriddedUngriddedCollocate.test_GASSP_aux_coord_onto_Aeronet": {
  "data": {
   "lineno": 485,
   "symbols_in_volume": [
    "cis.cis_main.col_cmd",
    "cis.parse.parse_args",
    "escape_colons"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_colocate.TestUngriddedUngriddedCollocate.test_GASSP_onto_Aeronet": {
  "data": {
   "lineno": 472,
   "symbols_in_volume": [
    "cis.cis_main.col_cmd",
    "cis.parse.parse_args",
    "escape_colons"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_colocate.TestUngriddedUngriddedCollocate.test_GASSP_onto_Aeronet_using_moments_kernel": {
  "data": {
   "lineno": 498,
   "symbols_in_volume": [
    "cis.cis_main.col_cmd",
    "cis.parse.parse_args",
    "escape_colons"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_colocate.TestUngriddedUngriddedCollocate.test_GASSP_onto_CALIOP_L1": {
  "data": {
   "lineno": 433,
   "symbols_in_volume": [
    "cis.cis_main.col_cmd",
    "cis.parse.parse_args",
    "cis.test.integration.test_colocate.unittest",
    "escape_colons"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_colocate.TestUngriddedUngriddedCollocate.test_GASSP_onto_CALIOP_L2": {
  "data": {
   "lineno": 446,
   "symbols_in_volume": [
    "cis.cis_main.col_cmd",
    "cis.parse.parse_args",
    "cis.test.integration.test_colocate.unittest",
    "escape_colons"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_colocate.TestUngriddedUngriddedCollocate.test_GASSP_onto_GASSP": {
  "data": {
   "lineno": 513,
   "symbols_in_volume": [
    "cis.cis_main.col_cmd",
    "cis.parse.parse_args",
    "escape_colons",
    "vars"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_colocate.col_cmd": {
  "data": {
   "shadows": "cis.cis_main.col_cmd"
  },
  "type": "import"
 },
 "cis.test.integration.test_colocate.parse_args": {
  "data": {
   "shadows": "cis.parse.parse_args"
  },
  "type": "import"
 },
 "cis.test.integration.test_colocate.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "cis.test.integration.test_eval": {
  "data": {},
  "type": "module"
 },
 "cis.test.integration.test_eval.BaseIntegrationTest": {
  "data": {
   "shadows": "cis.test.integration.base_integration_test.BaseIntegrationTest"
  },
  "type": "import"
 },
 "cis.test.integration.test_eval.TestEval": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "cis.test.integration.base_integration_test.BaseIntegrationTest"
   ]
  },
  "type": "class"
 },
 "cis.test.integration.test_eval.TestEval.test_Aeronet_wavelength_calculation": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "cis.cis_main.evaluate_cmd",
    "cis.parse.parse_args",
    "cis.test.integration.test_eval.netCDF4",
    "cis.test.integration.test_eval.numpy",
    "escape_colons",
    "hamcrest.assert_that",
    "hamcrest.is_"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_eval.TestEval.test_CloudSat": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "cis.cis_main.evaluate_cmd",
    "cis.parse.parse_args",
    "cis.test.integration.test_eval.netCDF4",
    "escape_colons",
    "hamcrest.assert_that",
    "hamcrest.is_"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_eval.TestEval.test_ECHAMHAM_wavelength_sum": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "cis.cis_main.evaluate_cmd",
    "cis.parse.parse_args",
    "cis.test.integration.test_eval.netCDF4",
    "cis.test.integration.test_eval.numpy",
    "escape_colons",
    "hamcrest.assert_that",
    "hamcrest.is_"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_eval.TestEval.test_can_specify_attributes_gridded": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "cis.cis_main.evaluate_cmd",
    "cis.parse.parse_args",
    "cis.test.integration.test_eval.netCDF4",
    "escape_colons",
    "hamcrest.assert_that",
    "hamcrest.is_"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_eval.TestEval.test_can_specify_output_variable": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "cis.cis_main.evaluate_cmd",
    "cis.parse.parse_args",
    "cis.test.integration.test_eval.netCDF4",
    "escape_colons"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_eval.TestEval.test_can_specify_units_gridded": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "cis.cis_main.evaluate_cmd",
    "cis.parse.parse_args",
    "cis.test.integration.test_eval.netCDF4",
    "escape_colons",
    "hamcrest.assert_that",
    "hamcrest.is_"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_eval.TestEval.test_can_specify_units_gridded_no_output_var": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "cis.cis_main.evaluate_cmd",
    "cis.parse.parse_args",
    "cis.test.integration.test_eval.netCDF4",
    "escape_colons",
    "hamcrest.assert_that",
    "hamcrest.is_"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_eval.TestEval.test_collocated_NetCDF_Gridded_onto_GASSP": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "cis.cis_main.col_cmd",
    "cis.cis_main.evaluate_cmd",
    "cis.parse.parse_args",
    "cis.test.integration.test_eval.netCDF4",
    "cis.test.integration.test_eval.numpy",
    "cis.test.unit.eval.test_calc.compare_masked_arrays",
    "escape_colons",
    "float",
    "hamcrest.assert_that",
    "hamcrest.is_",
    "vars"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_eval.assert_that": {
  "data": {
   "shadows": "hamcrest.assert_that"
  },
  "type": "import"
 },
 "cis.test.integration.test_eval.col_cmd": {
  "data": {
   "shadows": "cis.cis_main.col_cmd"
  },
  "type": "import"
 },
 "cis.test.integration.test_eval.compare_masked_arrays": {
  "data": {
   "shadows": "cis.test.unit.eval.test_calc.compare_masked_arrays"
  },
  "type": "import"
 },
 "cis.test.integration.test_eval.evaluate_cmd": {
  "data": {
   "shadows": "cis.cis_main.evaluate_cmd"
  },
  "type": "import"
 },
 "cis.test.integration.test_eval.is_": {
  "data": {
   "shadows": "hamcrest.is_"
  },
  "type": "import"
 },
 "cis.test.integration.test_eval.netCDF4": {
  "data": {
   "shadows": "netCDF4"
  },
  "type": "import"
 },
 "cis.test.integration.test_eval.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "cis.test.integration.test_eval.parse_args": {
  "data": {
   "shadows": "cis.parse.parse_args"
  },
  "type": "import"
 },
 "cis.test.integration.test_eval.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "cis.test.integration.test_io": {
  "data": {},
  "type": "module"
 },
 "cis.test.integration.test_io.test_aeronet": {
  "data": {},
  "type": "module"
 },
 "cis.test.integration.test_io.test_aeronet.InvalidVariableError": {
  "data": {
   "shadows": "cis.exceptions.InvalidVariableError"
  },
  "type": "import"
 },
 "cis.test.integration.test_io.test_aeronet.TestAeronet": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "cis.test.integration.test_io.test_aeronet.unittest"
   ]
  },
  "type": "class"
 },
 "cis.test.integration.test_io.test_aeronet.TestAeronet.test_aeronet_missing_variable": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "cis.data_io.aeronet.load_aeronet",
    "cis.exceptions.InvalidVariableError",
    "cis.test.integration_test_data.valid_aeronet_filename",
    "nose.tools.raises"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_io.test_aeronet.TestAeronet.test_aeronet_time_parsing": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "cis.data_io.aeronet.load_aeronet",
    "cis.test.integration_test_data.valid_aeronet_filename",
    "cis.test.integration_test_data.valid_aeronet_variable",
    "cis.time_util.cis_standard_time_unit.date2num",
    "datetime.datetime",
    "nose.tools.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_io.test_aeronet.TestAeronet.test_aeronet_variable_name_parsing": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "cf_units.Unit",
    "cis.read_data_list",
    "cis.test.integration_test_data.valid_aeronet_filename",
    "nose.tools.assert_equal"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_io.test_aeronet.Unit": {
  "data": {
   "shadows": "cf_units.Unit"
  },
  "type": "import"
 },
 "cis.test.integration.test_io.test_aeronet.assert_almost_equal": {
  "data": {
   "shadows": "nose.tools.assert_almost_equal"
  },
  "type": "import"
 },
 "cis.test.integration.test_io.test_aeronet.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "cis.test.integration.test_io.test_aeronet.ct": {
  "data": {
   "shadows": "cis.time_util.cis_standard_time_unit"
  },
  "type": "import"
 },
 "cis.test.integration.test_io.test_aeronet.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "cis.test.integration.test_io.test_aeronet.load_aeronet": {
  "data": {
   "shadows": "cis.data_io.aeronet.load_aeronet"
  },
  "type": "import"
 },
 "cis.test.integration.test_io.test_aeronet.raises": {
  "data": {
   "shadows": "nose.tools.raises"
  },
  "type": "import"
 },
 "cis.test.integration.test_io.test_aeronet.read_data_list": {
  "data": {
   "shadows": "cis.read_data_list"
  },
  "type": "import"
 },
 "cis.test.integration.test_io.test_aeronet.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "cis.test.integration.test_io.test_aeronet.valid_aeronet_filename": {
  "data": {
   "shadows": "cis.test.integration_test_data.valid_aeronet_filename"
  },
  "type": "import"
 },
 "cis.test.integration.test_io.test_aeronet.valid_aeronet_variable": {
  "data": {
   "shadows": "cis.test.integration_test_data.valid_aeronet_variable"
  },
  "type": "import"
 },
 "cis.test.integration.test_io.test_hdf": {
  "data": {},
  "type": "module"
 },
 "cis.test.integration.test_io.test_hdf.InvalidVariableError": {
  "data": {
   "shadows": "cis.exceptions.InvalidVariableError"
  },
  "type": "import"
 },
 "cis.test.integration.test_io.test_hdf._read_hdf4": {
  "data": {
   "shadows": "cis.data_io.hdf._read_hdf4"
  },
  "type": "import"
 },
 "cis.test.integration.test_io.test_hdf.eq_": {
  "data": {
   "shadows": "nose.tools.eq_"
  },
  "type": "import"
 },
 "cis.test.integration.test_io.test_hdf.istest": {
  "data": {
   "shadows": "nose.tools.istest"
  },
  "type": "import"
 },
 "cis.test.integration.test_io.test_hdf.raises": {
  "data": {
   "shadows": "nose.tools.raises"
  },
  "type": "import"
 },
 "cis.test.integration.test_io.test_hdf.should_raise_io_error_with_non_hdf_file": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "IOError",
    "cis.data_io.hdf._read_hdf4",
    "nose.tools.istest",
    "nose.tools.raises"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_io.test_hdf.test_read_hdf4": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "cis.data_io.hdf._read_hdf4",
    "escape_colons",
    "nose.tools.eq_",
    "nose.tools.istest"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_io.test_hdf.test_that_cannot_read_unknown_variables": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "cis.data_io.hdf._read_hdf4",
    "cis.exceptions.InvalidVariableError",
    "escape_colons",
    "nose.tools.istest",
    "nose.tools.raises"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_io.test_hdf.test_that_cannot_read_unknown_variables_and_valid_variables": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "cis.data_io.hdf._read_hdf4",
    "cis.exceptions.InvalidVariableError",
    "escape_colons",
    "nose.tools.istest",
    "nose.tools.raises"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_io.test_hdf_sd": {
  "data": {},
  "type": "module"
 },
 "cis.test.integration.test_io.test_hdf_sd.eq_": {
  "data": {
   "shadows": "nose.tools.eq_"
  },
  "type": "import"
 },
 "cis.test.integration.test_io.test_hdf_sd.escape_colons": {
  "data": {
   "shadows": "cis.test.integration_test_data.escape_colons"
  },
  "type": "import"
 },
 "cis.test.integration.test_io.test_hdf_sd.hdf_sd": {
  "data": {
   "shadows": "cis.data_io.hdf_sd"
  },
  "type": "import"
 },
 "cis.test.integration.test_io.test_hdf_sd.istest": {
  "data": {
   "shadows": "nose.tools.istest"
  },
  "type": "import"
 },
 "cis.test.integration.test_io.test_hdf_sd.skip_pyhdf": {
  "data": {
   "shadows": "cis.test.integration_test_data.skip_pyhdf"
  },
  "type": "import"
 },
 "cis.test.integration.test_io.test_hdf_sd.test_that_can_get_data": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "cis.data_io.hdf_sd.get_data",
    "cis.data_io.hdf_sd.read",
    "cis.test.integration_test_data.escape_colons",
    "cis.test.integration_test_data.skip_pyhdf",
    "cis.test.integration_test_data.valid_hdf_sd_file",
    "nose.tools.eq_",
    "nose.tools.istest"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_io.test_hdf_sd.test_that_can_get_metadata_for_known_variable": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "cis.data_io.hdf_sd.get_metadata",
    "cis.data_io.hdf_sd.read",
    "cis.test.integration_test_data.escape_colons",
    "cis.test.integration_test_data.skip_pyhdf",
    "cis.test.integration_test_data.valid_hdf_sd_file",
    "len",
    "nose.tools.eq_",
    "nose.tools.istest"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_io.test_hdf_sd.test_that_can_read_all_variables": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "cis.data_io.hdf_sd.read",
    "cis.test.integration_test_data.escape_colons",
    "cis.test.integration_test_data.skip_pyhdf",
    "cis.test.integration_test_data.valid_hdf_sd_file",
    "len",
    "nose.tools.eq_",
    "nose.tools.istest"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_io.test_hdf_sd.test_that_can_read_known_variables": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "cis.data_io.hdf_sd.read",
    "cis.test.integration_test_data.escape_colons",
    "cis.test.integration_test_data.skip_pyhdf",
    "cis.test.integration_test_data.valid_hdf_sd_file",
    "len",
    "nose.tools.eq_",
    "nose.tools.istest"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_io.test_hdf_sd.valid_hdf_sd_file": {
  "data": {
   "shadows": "cis.test.integration_test_data.valid_hdf_sd_file"
  },
  "type": "import"
 },
 "cis.test.integration.test_io.test_hdf_vd": {
  "data": {},
  "type": "module"
 },
 "cis.test.integration.test_io.test_hdf_vd.eq_": {
  "data": {
   "shadows": "nose.tools.eq_"
  },
  "type": "import"
 },
 "cis.test.integration.test_io.test_hdf_vd.escape_colons": {
  "data": {
   "shadows": "cis.test.integration_test_data.escape_colons"
  },
  "type": "import"
 },
 "cis.test.integration.test_io.test_hdf_vd.hdf_vd": {
  "data": {
   "shadows": "cis.data_io.hdf_vd"
  },
  "type": "import"
 },
 "cis.test.integration.test_io.test_hdf_vd.istest": {
  "data": {
   "shadows": "nose.tools.istest"
  },
  "type": "import"
 },
 "cis.test.integration.test_io.test_hdf_vd.skip_pyhdf": {
  "data": {
   "shadows": "cis.test.integration_test_data.skip_pyhdf"
  },
  "type": "import"
 },
 "cis.test.integration.test_io.test_hdf_vd.test_that_can_get_coord_metadata": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "cis.data_io.hdf_vd.get_metadata",
    "cis.data_io.hdf_vd.read",
    "cis.test.integration_test_data.escape_colons",
    "cis.test.integration_test_data.skip_pyhdf",
    "cis.test.integration_test_data.valid_hdf_vd_file",
    "nose.tools.eq_",
    "nose.tools.istest"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_io.test_hdf_vd.test_that_can_get_data": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "cis.data_io.hdf_vd.get_data",
    "cis.data_io.hdf_vd.read",
    "cis.test.integration_test_data.escape_colons",
    "cis.test.integration_test_data.skip_pyhdf",
    "cis.test.integration_test_data.valid_hdf_vd_file",
    "len",
    "nose.tools.eq_",
    "nose.tools.istest"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_io.test_hdf_vd.test_that_can_get_variable_metadata": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "cis.data_io.hdf_vd.get_metadata",
    "cis.data_io.hdf_vd.read",
    "cis.test.integration_test_data.escape_colons",
    "cis.test.integration_test_data.skip_pyhdf",
    "cis.test.integration_test_data.valid_hdf_vd_file",
    "nose.tools.eq_",
    "nose.tools.istest"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_io.test_hdf_vd.test_that_can_read_all_variables": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "cis.data_io.hdf_vd.get_hdf_VD_file_variables",
    "cis.test.integration_test_data.escape_colons",
    "cis.test.integration_test_data.skip_pyhdf",
    "cis.test.integration_test_data.valid_hdf_vd_file",
    "dict",
    "len",
    "nose.tools.eq_",
    "nose.tools.istest"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_io.test_hdf_vd.valid_hdf_vd_file": {
  "data": {
   "shadows": "cis.test.integration_test_data.valid_hdf_vd_file"
  },
  "type": "import"
 },
 "cis.test.integration.test_io.test_netcdf": {
  "data": {},
  "type": "module"
 },
 "cis.test.integration.test_io.test_netcdf.TestNetCDF": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "cis.test.integration.test_io.test_netcdf.unittest"
   ]
  },
  "type": "class"
 },
 "cis.test.integration.test_io.test_netcdf.TestNetCDF.should_raise_io_error_with_file_that_is_not_netcdf": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "IOError",
    "nose.tools.raises",
    "read"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_io.test_netcdf.TestNetCDF.test_that_can_get_data": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "nose.tools.eq_",
    "read"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_io.test_netcdf.TestNetCDF.test_that_can_get_metadata_for_known_variable": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "get_metadata",
    "nose.tools.eq_",
    "read",
    "str"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_io.test_netcdf.TestNetCDF.test_that_can_read_all_variables": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "dict",
    "get_netcdf_file_variables",
    "len",
    "nose.tools.eq_"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_io.test_netcdf.TestNetCDF.test_that_can_read_known_variable": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "isinstance",
    "netCDF4.Variable",
    "read"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_io.test_netcdf.TestNetCDF.test_that_respect_valid_range_metadata": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "get_data",
    "read"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_io.test_netcdf.TestNetCDFGroups": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "cis.test.integration.test_io.test_netcdf.unittest"
   ]
  },
  "type": "class"
 },
 "cis.test.integration.test_io.test_netcdf.TestNetCDFGroups._get_fully_qualified_vars": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "vars"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_io.test_netcdf.TestNetCDFGroups.test_can_get_netcdf_file_variables": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "assert_that",
    "get_netcdf_file_variables",
    "is_",
    "set"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_io.test_netcdf.TestNetCDFGroups.test_can_get_variables_nested_groups": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "assert_that",
    "contains_inanyorder",
    "get_netcdf_file_variables",
    "list"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_io.test_netcdf.TestNetCDFGroups.test_can_read": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "assert_that",
    "contains",
    "is_",
    "read"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_io.test_netcdf.TestNetCDFGroups.test_can_read_many_files_individually": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "assert_that",
    "contains",
    "is_",
    "read_many_files_individually"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_io.test_netcdf.TestNetCDFGroups.test_can_read_nested_groups": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "assert_that",
    "is_",
    "read"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_io.test_netcdf.TestNetCDFGroups.test_can_remove_variables_with_non_spatiotemporal_dimensions": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "assert_that",
    "contains_inanyorder",
    "get_netcdf_file_variables",
    "list",
    "remove_variables_with_non_spatiotemporal_dimensions"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_io.test_netcdf.Variable": {
  "data": {
   "shadows": "netCDF4.Variable"
  },
  "type": "import"
 },
 "cis.test.integration.test_io.test_netcdf.eq_": {
  "data": {
   "shadows": "nose.tools.eq_"
  },
  "type": "import"
 },
 "cis.test.integration.test_io.test_netcdf.istest": {
  "data": {
   "shadows": "nose.tools.istest"
  },
  "type": "import"
 },
 "cis.test.integration.test_io.test_netcdf.raises": {
  "data": {
   "shadows": "nose.tools.raises"
  },
  "type": "import"
 },
 "cis.test.integration.test_io.test_netcdf.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "cis.test.integration.test_io.test_products": {
  "data": {},
  "type": "module"
 },
 "cis.test.integration.test_io.test_products.__author__": {
  "data": {
   "lineno": 1
  },
  "type": "constant"
 },
 "cis.test.integration.test_io.test_products.test_Aproduct": {
  "data": {},
  "type": "module"
 },
 "cis.test.integration.test_io.test_products.test_Aproduct.AProduct": {
  "data": {
   "shadows": "cis.data_io.products.AProduct.AProduct"
  },
  "type": "import"
 },
 "cis.test.integration.test_io.test_products.test_Aproduct.ClassNotFoundError": {
  "data": {
   "shadows": "cis.exceptions.ClassNotFoundError"
  },
  "type": "import"
 },
 "cis.test.integration.test_io.test_products.test_Aproduct.CloudSat": {
  "data": {
   "shadows": "cis.data_io.products.CloudSat"
  },
  "type": "import"
 },
 "cis.test.integration.test_io.test_products.test_Aproduct.TestAProduct": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "unittest.TestCase"
   ]
  },
  "type": "class"
 },
 "cis.test.integration.test_io.test_products.test_Aproduct.TestAProduct.test_automatic_detection_of_product_for_existing_product": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "cis.data_io.products.AProduct.__get_class",
    "nose.tools.eq_"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_io.test_products.test_Aproduct.TestAProduct.test_given_class_which_implements_file_test_as_true_WHEN_call_get_data_for_product_THEN_test_is_checked": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "assert_that",
    "cis.data_io.products.AProduct.get_coordinates",
    "is_"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_io.test_products.test_Aproduct.TestAProduct.test_given_class_which_implements_file_test_as_true_WHEN_call_get_data_for_product_THEN_test_is_checked.MyTestProductTestFileTypeTrue": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "cis.data_io.products.AProduct.AProduct"
   ]
  },
  "type": "class"
 },
 "cis.test.integration.test_io.test_products.test_Aproduct.TestAProduct.test_given_class_which_implements_file_test_as_true_WHEN_call_get_data_for_product_THEN_test_is_checked.MyTestProductTestFileTypeTrue.create_coords": {
  "data": {
   "lineno": 69
  },
  "type": "function"
 },
 "cis.test.integration.test_io.test_products.test_Aproduct.TestAProduct.test_given_class_which_implements_file_test_as_true_WHEN_call_get_data_for_product_THEN_test_is_checked.MyTestProductTestFileTypeTrue.create_data_object": {
  "data": {
   "lineno": 66
  },
  "type": "function"
 },
 "cis.test.integration.test_io.test_products.test_Aproduct.TestAProduct.test_given_class_which_implements_file_test_as_true_WHEN_call_get_data_for_product_THEN_test_is_checked.MyTestProductTestFileTypeTrue.get_file_signature": {
  "data": {
   "lineno": 72
  },
  "type": "function"
 },
 "cis.test.integration.test_io.test_products.test_Aproduct.TestAProduct.test_given_class_which_implements_file_test_as_true_WHEN_call_get_data_for_product_THEN_test_is_checked.MyTestProductTestFileTypeTrue.get_file_type_error": {
  "data": {
   "lineno": 75
  },
  "type": "function"
 },
 "cis.test.integration.test_io.test_products.test_Aproduct.TestAProduct.test_given_cls_which_implements_file_test_as_false_WHEN_call_get_data_for_product_THEN_cls_no_found_error": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "cis.data_io.products.AProduct.get_coordinates",
    "cis.exceptions.ClassNotFoundError",
    "nose.tools.raises"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_io.test_products.test_Aproduct.TestAProduct.test_given_cls_which_implements_file_test_as_false_WHEN_call_get_data_for_product_THEN_cls_no_found_error.MyTestProduct": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "cis.data_io.products.AProduct.AProduct"
   ]
  },
  "type": "class"
 },
 "cis.test.integration.test_io.test_products.test_Aproduct.TestAProduct.test_given_cls_which_implements_file_test_as_false_WHEN_call_get_data_for_product_THEN_cls_no_found_error.MyTestProduct.create_coords": {
  "data": {
   "lineno": 46
  },
  "type": "function"
 },
 "cis.test.integration.test_io.test_products.test_Aproduct.TestAProduct.test_given_cls_which_implements_file_test_as_false_WHEN_call_get_data_for_product_THEN_cls_no_found_error.MyTestProduct.create_data_object": {
  "data": {
   "lineno": 43
  },
  "type": "function"
 },
 "cis.test.integration.test_io.test_products.test_Aproduct.TestAProduct.test_given_cls_which_implements_file_test_as_false_WHEN_call_get_data_for_product_THEN_cls_no_found_error.MyTestProduct.get_file_signature": {
  "data": {
   "lineno": 49
  },
  "type": "function"
 },
 "cis.test.integration.test_io.test_products.test_Aproduct.TestAProduct.test_given_cls_which_implements_file_test_as_false_WHEN_call_get_data_for_product_THEN_cls_no_found_error.MyTestProduct.get_file_type_error": {
  "data": {
   "lineno": 52
  },
  "type": "function"
 },
 "cis.test.integration.test_io.test_products.test_Aproduct.TestAProduct.test_that_get_class_raises_ClassNotFoundError_for_non_existing_product": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "cis.data_io.products.AProduct.__get_class",
    "cis.exceptions.ClassNotFoundError",
    "nose.tools.raises"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_io.test_products.test_Aproduct.TestAProduct.test_that_get_data_accepts_valid_product": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "cis.data_io.products.AProduct.__get_class"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_io.test_products.test_Aproduct.TestAProduct.test_that_get_data_raises_ClassNotFoundError_for_missing_product": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "cis.data_io.products.AProduct.get_data",
    "cis.exceptions.ClassNotFoundError",
    "nose.tools.raises"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_io.test_products.test_Aproduct.TestAProduct.test_that_get_product_full_name_returns_version_product_and_cis": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "assert_that",
    "cis.__version__",
    "cis.data_io.products.AProduct.get_product_full_name",
    "cis.data_io.products.CloudSat.__name__",
    "contains_string"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_io.test_products.test_Aproduct.TestCase": {
  "data": {
   "shadows": "unittest.TestCase"
  },
  "type": "import"
 },
 "cis.test.integration.test_io.test_products.test_Aproduct.__version__": {
  "data": {
   "shadows": "cis.__version__"
  },
  "type": "import"
 },
 "cis.test.integration.test_io.test_products.test_Aproduct._get_class": {
  "data": {
   "shadows": "cis.data_io.products.AProduct.__get_class"
  },
  "type": "import"
 },
 "cis.test.integration.test_io.test_products.test_Aproduct.eq_": {
  "data": {
   "shadows": "nose.tools.eq_"
  },
  "type": "import"
 },
 "cis.test.integration.test_io.test_products.test_Aproduct.get_coordinates": {
  "data": {
   "shadows": "cis.data_io.products.AProduct.get_coordinates"
  },
  "type": "import"
 },
 "cis.test.integration.test_io.test_products.test_Aproduct.get_data": {
  "data": {
   "shadows": "cis.data_io.products.AProduct.get_data"
  },
  "type": "import"
 },
 "cis.test.integration.test_io.test_products.test_Aproduct.get_product_full_name": {
  "data": {
   "shadows": "cis.data_io.products.AProduct.get_product_full_name"
  },
  "type": "import"
 },
 "cis.test.integration.test_io.test_products.test_Aproduct.raises": {
  "data": {
   "shadows": "nose.tools.raises"
  },
  "type": "import"
 },
 "cis.test.integration.test_io.test_products.test_NetCDF_CF_Gridded": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "cis.test.integration.test_io.test_products.test_NetCDF_CF_Gridded.unittest"
   ]
  },
  "type": "module"
 },
 "cis.test.integration.test_io.test_products.test_NetCDF_CF_Gridded.TestNetCDF_CF_Gridded_ECHAM_Hybrid_Pressure_Geopotential": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "cis.test.integration.test_io.test_products.test_NetCDF_CF_Gridded.unittest"
   ]
  },
  "type": "class"
 },
 "cis.test.integration.test_io.test_products.test_NetCDF_CF_Gridded.TestNetCDF_CF_Gridded_ECHAM_Hybrid_Pressure_Geopotential.read_data": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "cis.read_data"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_io.test_products.test_NetCDF_CF_Gridded.TestNetCDF_CF_Gridded_ECHAM_Hybrid_Pressure_Geopotential.test_GIVEN_altitude_not_read_by_iris_WHEN_read_THEN_pressure_coordinate_present": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "hamcrest.assert_that",
    "hamcrest.close_to",
    "hamcrest.is_",
    "str"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_io.test_products.test_NetCDF_CF_Gridded.TestNetCDF_CF_Gridded_ECHAM_Hybrid_Pressure_Geopotential.test_GIVEN_hybrid_pressure_readable_by_iris_WHEN_read_THEN_pressure_coordinate_present": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "hamcrest.assert_that",
    "hamcrest.is_"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_io.test_products.test_NetCDF_CF_Gridded.TestNetCDF_CF_Gridded_ECHAM_Hybrid_Pressure_Geopotential_Height": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "cis.test.integration.test_io.test_products.test_NetCDF_CF_Gridded.unittest"
   ]
  },
  "type": "class"
 },
 "cis.test.integration.test_io.test_products.test_NetCDF_CF_Gridded.TestNetCDF_CF_Gridded_ECHAM_Hybrid_Pressure_Geopotential_Height.read_data": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "cis.read_data"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_io.test_products.test_NetCDF_CF_Gridded.TestNetCDF_CF_Gridded_ECHAM_Hybrid_Pressure_Geopotential_Height.test_GIVEN_altitude_not_read_by_iris_WHEN_read_THEN_pressure_coordinate_present": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "hamcrest.assert_that",
    "hamcrest.is_"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_io.test_products.test_NetCDF_CF_Gridded.TestNetCDF_CF_Gridded_ECHAM_Hybrid_Pressure_Geopotential_Height.test_GIVEN_hybrid_pressure_readable_by_iris_WHEN_read_THEN_pressure_coordinate_present": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "hamcrest.assert_that",
    "hamcrest.is_"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_io.test_products.test_NetCDF_CF_Gridded.assert_that": {
  "data": {
   "shadows": "hamcrest.assert_that"
  },
  "type": "import"
 },
 "cis.test.integration.test_io.test_products.test_NetCDF_CF_Gridded.close_to": {
  "data": {
   "shadows": "hamcrest.close_to"
  },
  "type": "import"
 },
 "cis.test.integration.test_io.test_products.test_NetCDF_CF_Gridded.is_": {
  "data": {
   "shadows": "hamcrest.is_"
  },
  "type": "import"
 },
 "cis.test.integration.test_io.test_products.test_NetCDF_CF_Gridded.read_data": {
  "data": {
   "shadows": "cis.read_data"
  },
  "type": "import"
 },
 "cis.test.integration.test_io.test_products.test_NetCDF_CF_Gridded.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "cis.test.integration.test_io.test_products.test_data_products": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "cis.test.integration.test_io.test_products.test_data_products.os",
    "cis.test.integration.test_io.test_products.test_data_products.pandas",
    "cis.test.integration.test_io.test_products.test_data_products.unittest",
    "cis.test.integration_test_data.non_netcdf_file",
    "tempfile.mkdtemp"
   ]
  },
  "type": "module"
 },
 "cis.test.integration.test_io.test_products.test_data_products.CloudSat": {
  "data": {
   "shadows": "cis.data_io.products.CloudSat"
  },
  "type": "import"
 },
 "cis.test.integration.test_io.test_products.test_data_products.CommonData": {
  "data": {
   "shadows": "cis.data_io.common_data.CommonData"
  },
  "type": "import"
 },
 "cis.test.integration.test_io.test_products.test_data_products.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "cis.test.integration.test_io.test_products.test_data_products.FileFormatError": {
  "data": {
   "shadows": "cis.exceptions.FileFormatError"
  },
  "type": "import"
 },
 "cis.test.integration.test_io.test_products.test_data_products.InvalidVariableError": {
  "data": {
   "shadows": "cis.exceptions.InvalidVariableError"
  },
  "type": "import"
 },
 "cis.test.integration.test_io.test_products.test_data_products.ProductTests": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "object",
    "vars"
   ]
  },
  "type": "class"
 },
 "cis.test.integration.test_io.test_products.test_data_products.ProductTests.check_valid_vars": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "assert_that",
    "is_",
    "len",
    "set",
    "vars"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_io.test_products.test_data_products.ProductTests.setup": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "cis.test.integration_test_data.TestFileTestData",
    "isinstance",
    "nose.tools.nottest"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_io.test_products.test_data_products.ProductTests.test_create_coords": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "all",
    "cis.test.integration.test_io.test_products.test_data_products.logging"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_io.test_products.test_data_products.ProductTests.test_create_data_object": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "cis.data_io.common_data.CommonData",
    "nose.tools.assert_is_instance"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_io.test_products.test_data_products.ProductTests.test_create_pandas_object": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "cis.test.integration.test_io.test_products.test_data_products.skip_pandas",
    "nose.tools.assert_is_instance",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_io.test_products.test_data_products.ProductTests.test_file_format": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "assert_that",
    "is_"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_io.test_products.test_data_products.ProductTests.test_file_regex_matching": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "cis.test.integration.test_io.test_products.test_data_products.check_regex_matching",
    "nose.tools.istest"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_io.test_products.test_data_products.ProductTests.test_file_regex_matching_for_full_path": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "cis.test.integration.test_io.test_products.test_data_products.check_regex_matching",
    "cis.test.integration.test_io.test_products.test_data_products.os",
    "nose.tools.istest"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_io.test_products.test_data_products.ProductTests.test_should_raise_error_when_variable_does_not_exist_in_file": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "cis.exceptions.InvalidVariableError",
    "cis.test.integration.test_io.test_products.test_data_products.invalid_variable",
    "nose.tools.raises"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_io.test_products.test_data_products.ProductTests.test_should_raise_ioerror_or_translationerror_with_file_that_is_not_a_recognised_format": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "IOError",
    "cis.exceptions.FileFormatError",
    "cis.test.integration.test_io.test_products.test_data_products.invalid_format",
    "nose.tools.raises"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_io.test_products.test_data_products.ProductTests.test_should_raise_ioerror_with_invalid_filename": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "IOError",
    "cis.test.integration.test_io.test_products.test_data_products.invalid_filename",
    "nose.tools.raises"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_io.test_products.test_data_products.ProductTests.test_variable_printing": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "cis.test.integration.test_io.test_products.test_data_products.six",
    "nose.tools.assert_is_instance",
    "nose.tools.istest"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_io.test_products.test_data_products.ProductTests.test_variable_wildcarding": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "nose.tools.istest",
    "vars"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_io.test_products.test_data_products.ProductTests.test_write_coords": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "cis.data_io.write_netcdf.write_coordinates",
    "cis.test.integration.test_io.test_products.test_data_products.remove_test_file",
    "cis.test.integration.test_io.test_products.test_data_products.test_file",
    "nose.tools.with_setup"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_io.test_products.test_data_products.TestASCII": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": [
    "cis.test.integration.test_io.test_products.test_data_products.ProductTests",
    "cis.test.integration.test_io.test_products.test_data_products.unittest"
   ]
  },
  "type": "class"
 },
 "cis.test.integration.test_io.test_products.test_data_products.TestASCII.setUp": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": [
    "cis.test.integration_test_data.ascii_filename_with_no_values",
    "cis.test.integration_test_data.cis_test_files"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_io.test_products.test_data_products.TestASCII.test_create_data_object_with_missing_values": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": [
    "all",
    "nose.tools.istest"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_io.test_products.test_data_products.TestASCII.test_create_data_object_with_valid_datetime": {
  "data": {
   "lineno": 317,
   "symbols_in_volume": [
    "cis.test.integration.test_io.test_products.test_data_products.datetime",
    "cis.time_util.convert_datetime_to_std_time",
    "nose.tools.istest"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_io.test_products.test_data_products.TestASCII.test_should_raise_error_when_variable_does_not_exist_in_file": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "IOError",
    "nose.tools.raises"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_io.test_products.test_data_products.TestAeronet": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "cis.test.integration.test_io.test_products.test_data_products.ProductTests",
    "cis.test.integration.test_io.test_products.test_data_products.unittest"
   ]
  },
  "type": "class"
 },
 "cis.test.integration.test_io.test_products.test_data_products.TestAeronet.setUp": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "cis.test.integration_test_data.another_valid_aeronet_filename",
    "cis.test.integration_test_data.cis_test_files",
    "cis.test.integration_test_data.valid_aeronet_filename"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_io.test_products.test_data_products.TestAeronet.test_create_data_object_from_multiple_files": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "nose.tools.istest"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_io.test_products.test_data_products.TestAerosol_CCI": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "cis.test.integration.test_io.test_products.test_data_products.ProductTests",
    "cis.test.integration.test_io.test_products.test_data_products.unittest"
   ]
  },
  "type": "class"
 },
 "cis.test.integration.test_io.test_products.test_data_products.TestAerosol_CCI.check_valid_vars": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "len",
    "vars"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_io.test_products.test_data_products.TestAerosol_CCI.setUp": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "cis.test.integration_test_data.cis_test_files"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_io.test_products.test_data_products.TestCaliop_L1": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "cis.test.integration.test_io.test_products.test_data_products.ProductTests",
    "cis.test.integration.test_io.test_products.test_data_products.unittest",
    "cis.test.integration_test_data.skip_pyhdf"
   ]
  },
  "type": "class"
 },
 "cis.test.integration.test_io.test_products.test_data_products.TestCaliop_L1.setUp": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "cis.test.integration_test_data.cis_test_files"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_io.test_products.test_data_products.TestCaliop_L2": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "cis.test.integration.test_io.test_products.test_data_products.ProductTests",
    "cis.test.integration.test_io.test_products.test_data_products.unittest",
    "cis.test.integration_test_data.skip_pyhdf"
   ]
  },
  "type": "class"
 },
 "cis.test.integration.test_io.test_products.test_data_products.TestCaliop_L2.setUp": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "cis.test.integration_test_data.cis_test_files"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_io.test_products.test_data_products.TestCis": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "cis.test.integration.test_io.test_products.test_data_products.ProductTests",
    "cis.test.integration.test_io.test_products.test_data_products.unittest"
   ]
  },
  "type": "class"
 },
 "cis.test.integration.test_io.test_products.test_data_products.TestCis.setUp": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "cis.test.integration_test_data.cis_test_files"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_io.test_products.test_data_products.TestCloud_CCI": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "cis.test.integration.test_io.test_products.test_data_products.ProductTests",
    "cis.test.integration.test_io.test_products.test_data_products.unittest"
   ]
  },
  "type": "class"
 },
 "cis.test.integration.test_io.test_products.test_data_products.TestCloud_CCI.setUp": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "cis.test.integration_test_data.cis_test_files"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_io.test_products.test_data_products.TestCloudsatPRECIP": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "cis.test.integration.test_io.test_products.test_data_products.ProductTests",
    "cis.test.integration.test_io.test_products.test_data_products.unittest",
    "cis.test.integration_test_data.skip_pyhdf"
   ]
  },
  "type": "class"
 },
 "cis.test.integration.test_io.test_products.test_data_products.TestCloudsatPRECIP.setUp": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "cis.data_io.products.CloudSat",
    "cis.test.integration_test_data.valid_cloudsat_PRECIP_file",
    "cis.test.integration_test_data.valid_cloudsat_PRECIP_file_format",
    "cis.test.integration_test_data.valid_cloudsat_PRECIP_variable"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_io.test_products.test_data_products.TestCloudsatRVODsdata": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "cis.test.integration.test_io.test_products.test_data_products.ProductTests",
    "cis.test.integration.test_io.test_products.test_data_products.unittest",
    "cis.test.integration_test_data.skip_pyhdf"
   ]
  },
  "type": "class"
 },
 "cis.test.integration.test_io.test_products.test_data_products.TestCloudsatRVODsdata.check_valid_vars": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "len",
    "vars"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_io.test_products.test_data_products.TestCloudsatRVODsdata.setUp": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "cis.data_io.products.CloudSat",
    "cis.test.integration_test_data.valid_cloudsat_RVOD_file",
    "cis.test.integration_test_data.valid_cloudsat_RVOD_file_format",
    "cis.test.integration_test_data.valid_cloudsat_RVOD_sdata_variable"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_io.test_products.test_data_products.TestCloudsatRVODvdata": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "cis.test.integration.test_io.test_products.test_data_products.ProductTests",
    "cis.test.integration.test_io.test_products.test_data_products.unittest",
    "cis.test.integration_test_data.skip_pyhdf"
   ]
  },
  "type": "class"
 },
 "cis.test.integration.test_io.test_products.test_data_products.TestCloudsatRVODvdata.check_valid_vars": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "len",
    "vars"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_io.test_products.test_data_products.TestCloudsatRVODvdata.setUp": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "cis.data_io.products.CloudSat",
    "cis.test.integration_test_data.valid_cloudsat_RVOD_file",
    "cis.test.integration_test_data.valid_cloudsat_RVOD_file_format",
    "cis.test.integration_test_data.valid_cloudsat_RVOD_vdata_variable"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_io.test_products.test_data_products.TestFileTestData": {
  "data": {
   "shadows": "cis.test.integration_test_data.TestFileTestData"
  },
  "type": "import"
 },
 "cis.test.integration.test_io.test_products.test_data_products.TestMODIS_L2": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "cis.test.integration.test_io.test_products.test_data_products.ProductTests",
    "cis.test.integration.test_io.test_products.test_data_products.unittest",
    "cis.test.integration_test_data.skip_pyhdf"
   ]
  },
  "type": "class"
 },
 "cis.test.integration.test_io.test_products.test_data_products.TestMODIS_L2.setUp": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "cis.test.integration_test_data.cis_test_files"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_io.test_products.test_data_products.TestMODIS_L3": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "cis.test.integration.test_io.test_products.test_data_products.ProductTests",
    "cis.test.integration.test_io.test_products.test_data_products.unittest",
    "cis.test.integration_test_data.skip_pyhdf"
   ]
  },
  "type": "class"
 },
 "cis.test.integration.test_io.test_products.test_data_products.TestMODIS_L3.check_valid_vars": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "len",
    "vars"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_io.test_products.test_data_products.TestMODIS_L3.setUp": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "cis.test.integration_test_data.cis_test_files"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_io.test_products.test_data_products.TestMODIS_L3.test_create_pandas_object": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "nose.tools.nottest"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_io.test_products.test_data_products.TestMODIS_L3.test_write_coords": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "nose.tools.nottest"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_io.test_products.test_data_products.TestNetCDF_Gridded_HadGEM": {
  "data": {
   "lineno": 387,
   "symbols_in_volume": [
    "cis.test.integration.test_io.test_products.test_data_products.ProductTests",
    "cis.test.integration.test_io.test_products.test_data_products.unittest"
   ]
  },
  "type": "class"
 },
 "cis.test.integration.test_io.test_products.test_data_products.TestNetCDF_Gridded_HadGEM.setUp": {
  "data": {
   "lineno": 388,
   "symbols_in_volume": [
    "cis.test.integration_test_data.valid_hadgem_filename",
    "cis.test.integration_test_data.valid_hadgem_variable"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_io.test_products.test_data_products.TestNetCDF_Gridded_HadGEM.test_create_pandas_object": {
  "data": {
   "lineno": 402,
   "symbols_in_volume": [
    "nose.tools.nottest"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_io.test_products.test_data_products.TestNetCDF_Gridded_HadGEM.test_write_coords": {
  "data": {
   "lineno": 397,
   "symbols_in_volume": [
    "nose.tools.nottest"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_io.test_products.test_data_products.TestNetCDF_Gridded_xenida": {
  "data": {
   "lineno": 327,
   "symbols_in_volume": [
    "cis.test.integration.test_io.test_products.test_data_products.ProductTests",
    "cis.test.integration.test_io.test_products.test_data_products.unittest"
   ]
  },
  "type": "class"
 },
 "cis.test.integration.test_io.test_products.test_data_products.TestNetCDF_Gridded_xenida.setUp": {
  "data": {
   "lineno": 328,
   "symbols_in_volume": [
    "cis.test.integration_test_data.valid_xenida_filename",
    "cis.test.integration_test_data.valid_xenida_variable"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_io.test_products.test_data_products.TestNetCDF_Gridded_xenida.test_create_coords": {
  "data": {
   "lineno": 346,
   "symbols_in_volume": [
    "nose.tools.nottest"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_io.test_products.test_data_products.TestNetCDF_Gridded_xenida.test_create_pandas_object": {
  "data": {
   "lineno": 351,
   "symbols_in_volume": [
    "nose.tools.nottest"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_io.test_products.test_data_products.TestNetCDF_Gridded_xenida.test_variable_wildcarding": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": [
    "nose.tools.nottest"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_io.test_products.test_data_products.TestNetCDF_Gridded_xenida.test_write_coords": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": [
    "nose.tools.nottest"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_io.test_products.test_data_products.TestNetCDF_Gridded_xglnwa": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "cis.test.integration.test_io.test_products.test_data_products.ProductTests",
    "cis.test.integration.test_io.test_products.test_data_products.unittest"
   ]
  },
  "type": "class"
 },
 "cis.test.integration.test_io.test_products.test_data_products.TestNetCDF_Gridded_xglnwa.setUp": {
  "data": {
   "lineno": 358,
   "symbols_in_volume": [
    "cis.test.integration_test_data.valid_1d_filename",
    "cis.test.integration_test_data.valid_1d_variable"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_io.test_products.test_data_products.TestNetCDF_Gridded_xglnwa.test_create_coords": {
  "data": {
   "lineno": 376,
   "symbols_in_volume": [
    "nose.tools.nottest"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_io.test_products.test_data_products.TestNetCDF_Gridded_xglnwa.test_create_pandas_object": {
  "data": {
   "lineno": 381,
   "symbols_in_volume": [
    "nose.tools.nottest"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_io.test_products.test_data_products.TestNetCDF_Gridded_xglnwa.test_variable_wildcarding": {
  "data": {
   "lineno": 366,
   "symbols_in_volume": [
    "nose.tools.nottest"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_io.test_products.test_data_products.TestNetCDF_Gridded_xglnwa.test_write_coords": {
  "data": {
   "lineno": 371,
   "symbols_in_volume": [
    "nose.tools.nottest"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_io.test_products.test_data_products.__get_class": {
  "data": {
   "shadows": "cis.data_io.products.AProduct.__get_class"
  },
  "type": "import"
 },
 "cis.test.integration.test_io.test_products.test_data_products.another_valid_aeronet_filename": {
  "data": {
   "shadows": "cis.test.integration_test_data.another_valid_aeronet_filename"
  },
  "type": "import"
 },
 "cis.test.integration.test_io.test_products.test_data_products.ascii_filename_with_no_values": {
  "data": {
   "shadows": "cis.test.integration_test_data.ascii_filename_with_no_values"
  },
  "type": "import"
 },
 "cis.test.integration.test_io.test_products.test_data_products.assert_is_instance": {
  "data": {
   "shadows": "nose.tools.assert_is_instance"
  },
  "type": "import"
 },
 "cis.test.integration.test_io.test_products.test_data_products.check_regex_matching": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "cis.data_io.products.AProduct.__get_class",
    "nose.tools.eq_"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_io.test_products.test_data_products.cis_test_files": {
  "data": {
   "shadows": "cis.test.integration_test_data.cis_test_files"
  },
  "type": "import"
 },
 "cis.test.integration.test_io.test_products.test_data_products.convert_datetime_to_std_time": {
  "data": {
   "shadows": "cis.time_util.convert_datetime_to_std_time"
  },
  "type": "import"
 },
 "cis.test.integration.test_io.test_products.test_data_products.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "cis.test.integration.test_io.test_products.test_data_products.eq_": {
  "data": {
   "shadows": "nose.tools.eq_"
  },
  "type": "import"
 },
 "cis.test.integration.test_io.test_products.test_data_products.invalid_filename": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "cis.test.integration.test_io.test_products.test_data_products.invalid_format": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "cis.test.integration.test_io.test_products.test_data_products.invalid_variable": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "cis.test.integration.test_io.test_products.test_data_products.isfile": {
  "data": {
   "shadows": "os.path.isfile"
  },
  "type": "import"
 },
 "cis.test.integration.test_io.test_products.test_data_products.istest": {
  "data": {
   "shadows": "nose.tools.istest"
  },
  "type": "import"
 },
 "cis.test.integration.test_io.test_products.test_data_products.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "cis.test.integration.test_io.test_products.test_data_products.mkdtemp": {
  "data": {
   "shadows": "tempfile.mkdtemp"
  },
  "type": "import"
 },
 "cis.test.integration.test_io.test_products.test_data_products.non_netcdf_file": {
  "data": {
   "shadows": "cis.test.integration_test_data.non_netcdf_file"
  },
  "type": "import"
 },
 "cis.test.integration.test_io.test_products.test_data_products.nottest": {
  "data": {
   "shadows": "nose.tools.nottest"
  },
  "type": "import"
 },
 "cis.test.integration.test_io.test_products.test_data_products.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "cis.test.integration.test_io.test_products.test_data_products.pandas": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "cis.test.integration.test_io.test_products.test_data_products.raises": {
  "data": {
   "shadows": "nose.tools.raises"
  },
  "type": "import"
 },
 "cis.test.integration.test_io.test_products.test_data_products.remove": {
  "data": {
   "shadows": "os.remove"
  },
  "type": "import"
 },
 "cis.test.integration.test_io.test_products.test_data_products.remove_test_file": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "cis.test.integration.test_io.test_products.test_data_products.test_file",
    "os.path.isfile",
    "os.remove"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_io.test_products.test_data_products.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "cis.test.integration.test_io.test_products.test_data_products.skip_pandas": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "cis.test.integration.test_io.test_products.test_data_products.skip_pyhdf": {
  "data": {
   "shadows": "cis.test.integration_test_data.skip_pyhdf"
  },
  "type": "import"
 },
 "cis.test.integration.test_io.test_products.test_data_products.test_file": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "cis.test.integration.test_io.test_products.test_data_products.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "cis.test.integration.test_io.test_products.test_data_products.valid_1d_filename": {
  "data": {
   "shadows": "cis.test.integration_test_data.valid_1d_filename"
  },
  "type": "import"
 },
 "cis.test.integration.test_io.test_products.test_data_products.valid_1d_variable": {
  "data": {
   "shadows": "cis.test.integration_test_data.valid_1d_variable"
  },
  "type": "import"
 },
 "cis.test.integration.test_io.test_products.test_data_products.valid_aeronet_filename": {
  "data": {
   "shadows": "cis.test.integration_test_data.valid_aeronet_filename"
  },
  "type": "import"
 },
 "cis.test.integration.test_io.test_products.test_data_products.valid_cloudsat_PRECIP_file": {
  "data": {
   "shadows": "cis.test.integration_test_data.valid_cloudsat_PRECIP_file"
  },
  "type": "import"
 },
 "cis.test.integration.test_io.test_products.test_data_products.valid_cloudsat_PRECIP_file_format": {
  "data": {
   "shadows": "cis.test.integration_test_data.valid_cloudsat_PRECIP_file_format"
  },
  "type": "import"
 },
 "cis.test.integration.test_io.test_products.test_data_products.valid_cloudsat_PRECIP_variable": {
  "data": {
   "shadows": "cis.test.integration_test_data.valid_cloudsat_PRECIP_variable"
  },
  "type": "import"
 },
 "cis.test.integration.test_io.test_products.test_data_products.valid_cloudsat_RVOD_file": {
  "data": {
   "shadows": "cis.test.integration_test_data.valid_cloudsat_RVOD_file"
  },
  "type": "import"
 },
 "cis.test.integration.test_io.test_products.test_data_products.valid_cloudsat_RVOD_file_format": {
  "data": {
   "shadows": "cis.test.integration_test_data.valid_cloudsat_RVOD_file_format"
  },
  "type": "import"
 },
 "cis.test.integration.test_io.test_products.test_data_products.valid_cloudsat_RVOD_sdata_variable": {
  "data": {
   "shadows": "cis.test.integration_test_data.valid_cloudsat_RVOD_sdata_variable"
  },
  "type": "import"
 },
 "cis.test.integration.test_io.test_products.test_data_products.valid_cloudsat_RVOD_vdata_variable": {
  "data": {
   "shadows": "cis.test.integration_test_data.valid_cloudsat_RVOD_vdata_variable"
  },
  "type": "import"
 },
 "cis.test.integration.test_io.test_products.test_data_products.valid_hadgem_filename": {
  "data": {
   "shadows": "cis.test.integration_test_data.valid_hadgem_filename"
  },
  "type": "import"
 },
 "cis.test.integration.test_io.test_products.test_data_products.valid_hadgem_variable": {
  "data": {
   "shadows": "cis.test.integration_test_data.valid_hadgem_variable"
  },
  "type": "import"
 },
 "cis.test.integration.test_io.test_products.test_data_products.valid_xenida_filename": {
  "data": {
   "shadows": "cis.test.integration_test_data.valid_xenida_filename"
  },
  "type": "import"
 },
 "cis.test.integration.test_io.test_products.test_data_products.valid_xenida_variable": {
  "data": {
   "shadows": "cis.test.integration_test_data.valid_xenida_variable"
  },
  "type": "import"
 },
 "cis.test.integration.test_io.test_products.test_data_products.with_setup": {
  "data": {
   "shadows": "nose.tools.with_setup"
  },
  "type": "import"
 },
 "cis.test.integration.test_io.test_products.test_data_products.write_coordinates": {
  "data": {
   "shadows": "cis.data_io.write_netcdf.write_coordinates"
  },
  "type": "import"
 },
 "cis.test.integration.test_io.test_products.test_ncar_raf": {
  "data": {},
  "type": "module"
 },
 "cis.test.integration.test_io.test_products.test_ncar_raf.NCAR_NetCDF_RAF": {
  "data": {
   "shadows": "cis.data_io.products.NCAR_NetCDF_RAF.NCAR_NetCDF_RAF"
  },
  "type": "import"
 },
 "cis.test.integration.test_io.test_products.test_ncar_raf.ProductTests": {
  "data": {
   "shadows": "cis.test.integration.test_io.test_products.test_data_products.ProductTests"
  },
  "type": "import"
 },
 "cis.test.integration.test_io.test_products.test_ncar_raf.TestNCAR_NetCDF_RAF": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "cis.test.integration.test_io.test_products.test_data_products.ProductTests",
    "cis.test.integration.test_io.test_products.test_ncar_raf.unittest"
   ]
  },
  "type": "class"
 },
 "cis.test.integration.test_io.test_products.test_ncar_raf.TestNCAR_NetCDF_RAF.setUp": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "cis.data_io.products.NCAR_NetCDF_RAF.NCAR_NetCDF_RAF",
    "cis.test.integration_test_data.cis_test_files"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_io.test_products.test_ncar_raf.TestNCAR_NetCDF_RAF.test_can_concatenate_aircraft_files": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "assert_that",
    "cis.read_data",
    "cis.test.integration_test_data.valid_GASSP_aircraft_files_with_different_timestamps",
    "cis.test.integration_test_data.valid_GASSP_aircraft_var_with_different_timestamps",
    "equal_to",
    "len"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_io.test_products.test_ncar_raf.TestNCAR_NetCDF_RAF.test_can_concatenate_files_with_different_time_stamps": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "assert_that",
    "cis.read_data",
    "cis.test.integration_test_data.valid_GASSP_station_files_with_different_timestamps",
    "cis.test.integration_test_data.valid_GASSP_station_var_with_different_timestamps",
    "close_to",
    "numpy.max",
    "numpy.min"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_io.test_products.test_ncar_raf.TestNCAR_NetCDF_RAF_get_file_type_error": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "cis.test.integration.test_io.test_products.test_ncar_raf.unittest"
   ]
  },
  "type": "class"
 },
 "cis.test.integration.test_io.test_products.test_ncar_raf.TestNCAR_NetCDF_RAF_get_file_type_error.test_WHEN_file_dose_not_exist_THEN_errors": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "assert_that",
    "cis.data_io.products.NCAR_NetCDF_RAF.NCAR_NetCDF_RAF",
    "cis.test.integration_test_data.invalid_filename",
    "is_"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_io.test_products.test_ncar_raf.TestNCAR_NetCDF_RAF_get_file_type_error.test_WHEN_file_is_GASSP_THEN_no_errors": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "assert_that",
    "cis.data_io.products.NCAR_NetCDF_RAF.NCAR_NetCDF_RAF",
    "cis.test.integration_test_data.valid_GASSP_station_filename",
    "is_"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_io.test_products.test_ncar_raf.TestNCAR_NetCDF_RAF_get_file_type_error.test_WHEN_file_is_NCAR_RAF_THEN_no_errors": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "assert_that",
    "cis.data_io.products.NCAR_NetCDF_RAF.NCAR_NetCDF_RAF",
    "cis.test.integration_test_data.valid_NCAR_NetCDF_RAF_filename",
    "is_"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_io.test_products.test_ncar_raf.TestNCAR_NetCDF_RAF_get_file_type_error.test_WHEN_file_is_not_NCAR_RAF_OR_GASSP_THEN_errors": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "assert_that",
    "cis.data_io.products.NCAR_NetCDF_RAF.NCAR_NetCDF_RAF",
    "cis.test.integration_test_data.valid_hadgem_filename",
    "is_",
    "len"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_io.test_products.test_ncar_raf.TestNCAR_NetCDF_RAF_get_file_type_error.test_WHEN_file_is_not_netcdf_THEN_errors": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "assert_that",
    "cis.data_io.products.NCAR_NetCDF_RAF.NCAR_NetCDF_RAF",
    "cis.test.integration_test_data.valid_aeronet_filename",
    "is_",
    "len"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_io.test_products.test_ncar_raf.TestNCAR_NetCDF_RAF_with_GASSP_aeroplane": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "cis.test.integration.test_io.test_products.test_data_products.ProductTests",
    "cis.test.integration.test_io.test_products.test_ncar_raf.unittest"
   ]
  },
  "type": "class"
 },
 "cis.test.integration.test_io.test_products.test_ncar_raf.TestNCAR_NetCDF_RAF_with_GASSP_aeroplane.setUp": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "cis.data_io.products.NCAR_NetCDF_RAF.NCAR_NetCDF_RAF",
    "cis.test.integration_test_data.cis_test_files"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_io.test_products.test_ncar_raf.TestNCAR_NetCDF_RAF_with_GASSP_aux_coord": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "cis.test.integration.test_io.test_products.test_data_products.ProductTests",
    "cis.test.integration.test_io.test_products.test_ncar_raf.unittest"
   ]
  },
  "type": "class"
 },
 "cis.test.integration.test_io.test_products.test_ncar_raf.TestNCAR_NetCDF_RAF_with_GASSP_aux_coord.setUp": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "cis.data_io.products.NCAR_NetCDF_RAF.NCAR_NetCDF_RAF",
    "cis.test.integration_test_data.cis_test_files"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_io.test_products.test_ncar_raf.TestNCAR_NetCDF_RAF_with_GASSP_aux_coord.test_variable_wildcarding": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "cis.test.integration.test_io.test_products.test_ncar_raf.TestNCAR_NetCDF_RAF_with_GASSP_aux_coord",
    "super"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_io.test_products.test_ncar_raf.TestNCAR_NetCDF_RAF_with_GASSP_ship": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "cis.test.integration.test_io.test_products.test_data_products.ProductTests",
    "cis.test.integration.test_io.test_products.test_ncar_raf.unittest"
   ]
  },
  "type": "class"
 },
 "cis.test.integration.test_io.test_products.test_ncar_raf.TestNCAR_NetCDF_RAF_with_GASSP_ship.setUp": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "cis.data_io.products.NCAR_NetCDF_RAF.NCAR_NetCDF_RAF",
    "cis.test.integration_test_data.cis_test_files"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_io.test_products.test_ncar_raf.TestNCAR_NetCDF_RAF_with_GASSP_station": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "cis.test.integration.test_io.test_products.test_data_products.ProductTests",
    "cis.test.integration.test_io.test_products.test_ncar_raf.unittest"
   ]
  },
  "type": "class"
 },
 "cis.test.integration.test_io.test_products.test_ncar_raf.TestNCAR_NetCDF_RAF_with_GASSP_station.setUp": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "cis.data_io.products.NCAR_NetCDF_RAF.NCAR_NetCDF_RAF",
    "cis.test.integration_test_data.cis_test_files"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_io.test_products.test_ncar_raf.cis_test_files": {
  "data": {
   "shadows": "cis.test.integration_test_data.cis_test_files"
  },
  "type": "import"
 },
 "cis.test.integration.test_io.test_products.test_ncar_raf.invalid_filename": {
  "data": {
   "shadows": "cis.test.integration_test_data.invalid_filename"
  },
  "type": "import"
 },
 "cis.test.integration.test_io.test_products.test_ncar_raf.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "cis.test.integration.test_io.test_products.test_ncar_raf.read_data": {
  "data": {
   "shadows": "cis.read_data"
  },
  "type": "import"
 },
 "cis.test.integration.test_io.test_products.test_ncar_raf.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "cis.test.integration.test_io.test_products.test_ncar_raf.valid_GASSP_aircraft_files_with_different_timestamps": {
  "data": {
   "shadows": "cis.test.integration_test_data.valid_GASSP_aircraft_files_with_different_timestamps"
  },
  "type": "import"
 },
 "cis.test.integration.test_io.test_products.test_ncar_raf.valid_GASSP_aircraft_var_with_different_timestamps": {
  "data": {
   "shadows": "cis.test.integration_test_data.valid_GASSP_aircraft_var_with_different_timestamps"
  },
  "type": "import"
 },
 "cis.test.integration.test_io.test_products.test_ncar_raf.valid_GASSP_station_filename": {
  "data": {
   "shadows": "cis.test.integration_test_data.valid_GASSP_station_filename"
  },
  "type": "import"
 },
 "cis.test.integration.test_io.test_products.test_ncar_raf.valid_GASSP_station_files_with_different_timestamps": {
  "data": {
   "shadows": "cis.test.integration_test_data.valid_GASSP_station_files_with_different_timestamps"
  },
  "type": "import"
 },
 "cis.test.integration.test_io.test_products.test_ncar_raf.valid_GASSP_station_var_with_different_timestamps": {
  "data": {
   "shadows": "cis.test.integration_test_data.valid_GASSP_station_var_with_different_timestamps"
  },
  "type": "import"
 },
 "cis.test.integration.test_io.test_products.test_ncar_raf.valid_NCAR_NetCDF_RAF_filename": {
  "data": {
   "shadows": "cis.test.integration_test_data.valid_NCAR_NetCDF_RAF_filename"
  },
  "type": "import"
 },
 "cis.test.integration.test_io.test_products.test_ncar_raf.valid_aeronet_filename": {
  "data": {
   "shadows": "cis.test.integration_test_data.valid_aeronet_filename"
  },
  "type": "import"
 },
 "cis.test.integration.test_io.test_products.test_ncar_raf.valid_hadgem_filename": {
  "data": {
   "shadows": "cis.test.integration_test_data.valid_hadgem_filename"
  },
  "type": "import"
 },
 "cis.test.integration.test_io.test_write_netcdf": {
  "data": {},
  "type": "module"
 },
 "cis.test.integration.test_io.test_write_netcdf.Aerosol_CCI_L2": {
  "data": {
   "shadows": "cis.data_io.products.Aerosol_CCI_L2"
  },
  "type": "import"
 },
 "cis.test.integration.test_io.test_write_netcdf.Dataset": {
  "data": {
   "shadows": "netCDF4.Dataset"
  },
  "type": "import"
 },
 "cis.test.integration.test_io.test_write_netcdf.GriddedDataList": {
  "data": {
   "shadows": "cis.data_io.gridded_data.GriddedDataList"
  },
  "type": "import"
 },
 "cis.test.integration.test_io.test_write_netcdf.TestWriteNetcdf": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "cis.test.integration.test_io.test_write_netcdf.unittest"
   ]
  },
  "type": "class"
 },
 "cis.test.integration.test_io.test_write_netcdf.TestWriteNetcdf.tearDown": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "cis.test.integration.test_io.test_write_netcdf.os",
    "cis.test.integration.test_io.test_write_netcdf.tmp_file",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_io.test_write_netcdf.TestWriteNetcdf.test_gridded_list_write_no_time_has_no_unlimited_dimension": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "cis.data_io.gridded_data.GriddedDataList",
    "cis.data_io.gridded_data.make_from_cube",
    "cis.test.integration.test_io.test_write_netcdf.tmp_file",
    "cis.test.util.mock.make_mock_cube",
    "netCDF4.Dataset"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_io.test_write_netcdf.TestWriteNetcdf.test_gridded_list_write_time_as_unlimited_dimension": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "cis.data_io.gridded_data.GriddedDataList",
    "cis.data_io.gridded_data.make_from_cube",
    "cis.test.integration.test_io.test_write_netcdf.tmp_file",
    "cis.test.util.mock.make_mock_cube",
    "netCDF4.Dataset"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_io.test_write_netcdf.TestWriteNetcdf.test_gridded_write_attributes": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "cis.data_io.gridded_data.make_from_cube",
    "cis.test.integration.test_io.test_write_netcdf.tmp_file",
    "cis.test.util.mock.make_mock_cube",
    "getattr",
    "netCDF4.Dataset"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_io.test_write_netcdf.TestWriteNetcdf.test_gridded_write_no_time_has_no_unlimited_dimension": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "cis.data_io.gridded_data.make_from_cube",
    "cis.test.integration.test_io.test_write_netcdf.tmp_file",
    "cis.test.util.mock.make_mock_cube",
    "netCDF4.Dataset"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_io.test_write_netcdf.TestWriteNetcdf.test_gridded_write_time_as_unlimited_dimension": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "cis.data_io.gridded_data.make_from_cube",
    "cis.test.integration.test_io.test_write_netcdf.tmp_file",
    "cis.test.util.mock.make_mock_cube",
    "netCDF4.Dataset"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_io.test_write_netcdf.TestWriteNetcdf.test_gridded_write_units": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "cis.data_io.gridded_data.make_from_cube",
    "cis.test.integration.test_io.test_write_netcdf.tmp_file",
    "cis.test.util.mock.make_mock_cube",
    "netCDF4.Dataset"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_io.test_write_netcdf.TestWriteNetcdf.test_ungridded_write_attributes": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "cis.data_io.write_netcdf.write",
    "cis.test.integration.test_io.test_write_netcdf.tmp_file",
    "cis.test.util.mock.make_dummy_2d_ungridded_data",
    "getattr",
    "netCDF4.Dataset"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_io.test_write_netcdf.TestWriteNetcdf.test_ungridded_write_units": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "cis.data_io.write_netcdf.write",
    "cis.test.integration.test_io.test_write_netcdf.tmp_file",
    "cis.test.util.mock.make_dummy_2d_ungridded_data",
    "netCDF4.Dataset"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_io.test_write_netcdf.TestWriteNetcdf.test_write_col_and_reload_1": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "cis.data_io.products.Aerosol_CCI_L2",
    "cis.data_io.write_netcdf.write",
    "cis.test.integration.test_io.test_write_netcdf.tmp_file",
    "cis.test.integration_test_data.valid_cis_col_file",
    "cis.test.integration_test_data.valid_cis_col_variable",
    "netCDF4.Dataset",
    "print"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_io.test_write_netcdf.TestWriteNetcdf.test_write_col_and_reload_2": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "cis.data_io.products.cis",
    "cis.data_io.write_netcdf.write",
    "cis.test.integration.test_io.test_write_netcdf.tmp_file",
    "cis.test.integration_test_data.valid_cis_col_file",
    "cis.test.integration_test_data.valid_cis_col_variable"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_io.test_write_netcdf.TestWriteNetcdf.test_write_netcdf": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "cis.data_io.write_netcdf.write",
    "cis.test.integration.test_io.test_write_netcdf.tmp_file",
    "cis.test.util.mock.make_dummy_2d_ungridded_data"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_io.test_write_netcdf.cis": {
  "data": {
   "shadows": "cis.data_io.products.cis"
  },
  "type": "import"
 },
 "cis.test.integration.test_io.test_write_netcdf.make_dummy_2d_ungridded_data": {
  "data": {
   "shadows": "cis.test.util.mock.make_dummy_2d_ungridded_data"
  },
  "type": "import"
 },
 "cis.test.integration.test_io.test_write_netcdf.make_from_cube": {
  "data": {
   "shadows": "cis.data_io.gridded_data.make_from_cube"
  },
  "type": "import"
 },
 "cis.test.integration.test_io.test_write_netcdf.make_mock_cube": {
  "data": {
   "shadows": "cis.test.util.mock.make_mock_cube"
  },
  "type": "import"
 },
 "cis.test.integration.test_io.test_write_netcdf.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "cis.test.integration.test_io.test_write_netcdf.tmp_file": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "cis.test.integration.test_io.test_write_netcdf.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "cis.test.integration.test_io.test_write_netcdf.valid_cis_col_file": {
  "data": {
   "shadows": "cis.test.integration_test_data.valid_cis_col_file"
  },
  "type": "import"
 },
 "cis.test.integration.test_io.test_write_netcdf.valid_cis_col_variable": {
  "data": {
   "shadows": "cis.test.integration_test_data.valid_cis_col_variable"
  },
  "type": "import"
 },
 "cis.test.integration.test_io.test_write_netcdf.write": {
  "data": {
   "shadows": "cis.data_io.write_netcdf.write"
  },
  "type": "import"
 },
 "cis.test.integration.test_plot_integration": {
  "data": {},
  "type": "module"
 },
 "cis.test.integration.test_plot_integration.BaseIntegrationTest": {
  "data": {
   "shadows": "cis.test.integration.base_integration_test.BaseIntegrationTest"
  },
  "type": "import"
 },
 "cis.test.integration.test_plot_integration.TestPlotIntegration": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "cis.test.integration.base_integration_test.BaseIntegrationTest"
   ]
  },
  "type": "class"
 },
 "cis.test.integration.test_plot_integration.TestPlotIntegration.test_plot_aggregated_aeronet": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "cis.cis_main.aggregate_cmd",
    "cis.cis_main.plot_cmd",
    "cis.parse.parse_args",
    "escape_colons"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_plot_integration.TestPlotIntegration.test_plot_gridded_2d_with_flattened_time": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "cis.cis_main.plot_cmd",
    "cis.cis_main.subset_cmd",
    "cis.parse.parse_args",
    "escape_colons"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_plot_integration.TestPlotIntegration.test_plot_gridded_3d_exits_with_ValueError": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "ValueError",
    "cis.cis_main.plot_cmd",
    "cis.parse.parse_args",
    "escape_colons",
    "nose.tools.raises"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_plot_integration.TestPlotIntegration.test_plot_heatmap_cbar_scale": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "cis.cis_main.plot_cmd",
    "cis.parse.parse_args",
    "escape_colons"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_plot_integration.TestPlotIntegration.test_plot_heatmap_horizontal_cbar": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "cis.cis_main.plot_cmd",
    "cis.parse.parse_args",
    "escape_colons"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_plot_integration.TestPlotIntegration.test_plot_heatmap_vertical_cbar": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "cis.cis_main.plot_cmd",
    "cis.parse.parse_args",
    "escape_colons"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_plot_integration.TestPlotIntegration.test_plot_ungridded_heatmap": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "cis.cis_main.plot_cmd",
    "cis.exceptions.UserPrintableException",
    "cis.parse.parse_args",
    "escape_colons",
    "nose.tools.raises"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_plot_integration.TestPlotIntegration.test_plot_ungridded_histogram": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "cis.cis_main.plot_cmd",
    "cis.parse.parse_args",
    "escape_colons"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_plot_integration.TestPlotIntegration.test_should_do_heatmap_plot_of_valid_1d_file": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "cis.cis_main.plot_cmd",
    "cis.parse.parse_args",
    "escape_colons"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_plot_integration.TestPlotIntegration.test_should_do_line_plot_of_valid_zonal_time_mean_cmip5_file": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "cis.cis_main.plot_cmd",
    "cis.parse.parse_args",
    "escape_colons"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_plot_integration.TestPlotIntegration.test_should_do_plot_of_hybrid_height_when_formula_terms_not_marked_as_coordinates": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "cis.cis_main.plot_cmd",
    "cis.parse.parse_args",
    "escape_colons"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_plot_integration.TestPlotIntegration.test_should_do_plot_of_hybrid_pressure_using_calculated_air_pressure_variable": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "cis.cis_main.plot_cmd",
    "cis.parse.parse_args",
    "escape_colons"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_plot_integration.TestPlotIntegration.test_should_do_scatter_plot_of_file_valid_aerosol_cci_file": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "cis.cis_main.plot_cmd",
    "cis.parse.parse_args",
    "escape_colons"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_plot_integration.TestPlotIntegration.test_should_do_scatter_plot_of_valid_2d_file": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "cis.cis_main.plot_cmd",
    "cis.parse.parse_args",
    "escape_colons"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_plot_integration.TestPlotIntegration.test_should_do_scatter_plot_of_valid_2d_file_with_x_as_lat_y_as_long": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "cis.cis_main.plot_cmd",
    "cis.parse.parse_args",
    "escape_colons"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_plot_integration.TestPlotIntegration.test_subset_ECHAM_over_0_360_boundary_plots_OK": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "cis.cis_main.plot_cmd",
    "cis.cis_main.subset_cmd",
    "cis.parse.parse_args",
    "escape_colons"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_plot_integration.UserPrintableException": {
  "data": {
   "shadows": "cis.exceptions.UserPrintableException"
  },
  "type": "import"
 },
 "cis.test.integration.test_plot_integration.aggregate_cmd": {
  "data": {
   "shadows": "cis.cis_main.aggregate_cmd"
  },
  "type": "import"
 },
 "cis.test.integration.test_plot_integration.parse_args": {
  "data": {
   "shadows": "cis.parse.parse_args"
  },
  "type": "import"
 },
 "cis.test.integration.test_plot_integration.plot_cmd": {
  "data": {
   "shadows": "cis.cis_main.plot_cmd"
  },
  "type": "import"
 },
 "cis.test.integration.test_plot_integration.raises": {
  "data": {
   "shadows": "nose.tools.raises"
  },
  "type": "import"
 },
 "cis.test.integration.test_plot_integration.subset_cmd": {
  "data": {
   "shadows": "cis.cis_main.subset_cmd"
  },
  "type": "import"
 },
 "cis.test.integration.test_read_api": {
  "data": {},
  "type": "module"
 },
 "cis.test.integration.test_read_api.ProductPluginException": {
  "data": {
   "shadows": "cis.data_io.products.AProduct.ProductPluginException"
  },
  "type": "import"
 },
 "cis.test.integration.test_read_api.cis_test_files": {
  "data": {
   "shadows": "cis.test.integration_test_data.cis_test_files"
  },
  "type": "import"
 },
 "cis.test.integration.test_read_api.invalid_filename": {
  "data": {
   "shadows": "cis.test.integration_test_data.invalid_filename"
  },
  "type": "import"
 },
 "cis.test.integration.test_read_api.istest": {
  "data": {
   "shadows": "nose.tools.istest"
  },
  "type": "import"
 },
 "cis.test.integration.test_read_api.raises": {
  "data": {
   "shadows": "nose.tools.raises"
  },
  "type": "import"
 },
 "cis.test.integration.test_read_api.read_data": {
  "data": {
   "shadows": "cis.read_data"
  },
  "type": "import"
 },
 "cis.test.integration.test_read_api.read_data_list": {
  "data": {
   "shadows": "cis.read_data_list"
  },
  "type": "import"
 },
 "cis.test.integration.test_read_api.test_read_data_list_raises_error_on_invalid_file": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "IOError",
    "cis.read_data_list",
    "cis.test.integration_test_data.cis_test_files.all_variable_names",
    "cis.test.integration_test_data.invalid_filename",
    "nose.tools.istest",
    "nose.tools.raises"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_read_api.test_read_data_list_raises_error_on_invalid_file_wildcard": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "IOError",
    "cis.read_data_list",
    "cis.test.integration_test_data.cis_test_files.all_variable_names",
    "cis.test.integration_test_data.invalid_filename",
    "nose.tools.istest",
    "nose.tools.raises"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_read_api.test_read_data_list_raises_error_on_invalid_variable": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "cis.data_io.products.AProduct.ProductPluginException",
    "cis.read_data_list",
    "cis.test.integration_test_data.cis_test_files.master_filename",
    "nose.tools.istest",
    "nose.tools.raises"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_read_api.test_read_data_raises_error_on_invalid_file": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "IOError",
    "cis.read_data",
    "cis.test.integration_test_data.cis_test_files.all_variable_names",
    "cis.test.integration_test_data.invalid_filename",
    "nose.tools.istest",
    "nose.tools.raises"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_read_api.test_read_data_raises_error_on_invalid_file_wildcard": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "IOError",
    "cis.read_data",
    "cis.test.integration_test_data.cis_test_files.all_variable_names",
    "cis.test.integration_test_data.invalid_filename",
    "nose.tools.istest",
    "nose.tools.raises"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_read_api.test_read_data_raises_error_on_invalid_variable": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "cis.data_io.products.AProduct.ProductPluginException",
    "cis.read_data",
    "cis.test.integration_test_data.cis_test_files.master_filename",
    "nose.tools.istest",
    "nose.tools.raises"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_read_api.test_read_data_raises_error_on_more_than_one_variable_returned": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "ValueError",
    "cis.read_data",
    "cis.test.integration_test_data.cis_test_files.all_variable_names",
    "cis.test.integration_test_data.cis_test_files.master_filename",
    "nose.tools.istest",
    "nose.tools.raises"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_stats": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "cis.test.integration.test_stats.unittest"
   ]
  },
  "type": "module"
 },
 "cis.test.integration.test_stats.BaseIntegrationTest": {
  "data": {
   "shadows": "cis.test.integration.base_integration_test.BaseIntegrationTest"
  },
  "type": "import"
 },
 "cis.test.integration.test_stats.TestStats": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "cis.test.integration.base_integration_test.BaseIntegrationTest"
   ]
  },
  "type": "class"
 },
 "cis.test.integration.test_stats.TestStats.test_Aeronet_wavelength_stats": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "cis.cis_main.stats_cmd",
    "cis.parse.parse_args",
    "escape_colons"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_stats.TestStats.test_CloudSat": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "cis.cis_main.stats_cmd",
    "cis.parse.parse_args",
    "escape_colons"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_stats.TestStats.test_ECHAMHAM_wavelength_stats": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "cis.cis_main.stats_cmd",
    "cis.parse.parse_args",
    "escape_colons"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_stats.TestStats.test_collocated_NetCDF_Gridded_onto_GASSP": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "cis.cis_main.col_cmd",
    "cis.cis_main.stats_cmd",
    "cis.parse.parse_args",
    "escape_colons"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_stats.TestStats.test_no_output_file": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "cis.cis_main.stats_cmd",
    "cis.parse.parse_args",
    "escape_colons"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_stats.col_cmd": {
  "data": {
   "shadows": "cis.cis_main.col_cmd"
  },
  "type": "import"
 },
 "cis.test.integration.test_stats.parse_args": {
  "data": {
   "shadows": "cis.parse.parse_args"
  },
  "type": "import"
 },
 "cis.test.integration.test_stats.stats_cmd": {
  "data": {
   "shadows": "cis.cis_main.stats_cmd"
  },
  "type": "import"
 },
 "cis.test.integration.test_stats.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "cis.test.integration.test_subset": {
  "data": {},
  "type": "module"
 },
 "cis.test.integration.test_subset.BaseIntegrationTest": {
  "data": {
   "shadows": "cis.test.integration.base_integration_test.BaseIntegrationTest"
  },
  "type": "import"
 },
 "cis.test.integration.test_subset.CoordinateNotFoundError": {
  "data": {
   "shadows": "cis.exceptions.CoordinateNotFoundError"
  },
  "type": "import"
 },
 "cis.test.integration.test_subset.Dataset": {
  "data": {
   "shadows": "netCDF4.Dataset"
  },
  "type": "import"
 },
 "cis.test.integration.test_subset.NoDataInSubsetError": {
  "data": {
   "shadows": "cis.exceptions.NoDataInSubsetError"
  },
  "type": "import"
 },
 "cis.test.integration.test_subset.TestAuxSubset": {
  "data": {
   "lineno": 604,
   "symbols_in_volume": [
    "cis.test.integration.base_integration_test.BaseIntegrationTest"
   ]
  },
  "type": "class"
 },
 "cis.test.integration.test_subset.TestAuxSubset.check_aux_subsetting": {
  "data": {
   "lineno": 606,
   "symbols_in_volume": [
    "hamcrest.assert_that",
    "hamcrest.greater_than_or_equal_to",
    "hamcrest.less_than_or_equal_to",
    "netCDF4.Dataset"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_subset.TestAuxSubset.do_subset": {
  "data": {
   "lineno": 613,
   "symbols_in_volume": [
    "cis.cis_main.subset_cmd",
    "cis.parse.parse_args",
    "escape_colons"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_subset.TestAuxSubset.test_subset_GASSP_aux_coord": {
  "data": {
   "lineno": 619
  },
  "type": "function"
 },
 "cis.test.integration.test_subset.TestEmptySubsets": {
  "data": {
   "lineno": 475,
   "symbols_in_volume": [
    "cis.test.integration.base_integration_test.BaseIntegrationTest"
   ]
  },
  "type": "class"
 },
 "cis.test.integration.test_subset.TestEmptySubsets.do_subset": {
  "data": {
   "lineno": 477,
   "symbols_in_volume": [
    "cis.cis_main.subset_cmd",
    "cis.parse.parse_args",
    "escape_colons"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_subset.TestEmptySubsets.test_empty_subset_ungridded_vertical": {
  "data": {
   "lineno": 484,
   "symbols_in_volume": [
    "cis.exceptions.NoDataInSubsetError",
    "nose.tools.raises"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_subset.TestSpatialSubsetAllProductsAllValidVariables": {
  "data": {
   "lineno": 317,
   "symbols_in_volume": [
    "cis.test.integration.base_integration_test.BaseIntegrationTest"
   ]
  },
  "type": "class"
 },
 "cis.test.integration.test_subset.TestSpatialSubsetAllProductsAllValidVariables.do_subset": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": [
    "cis.cis_main.subset_cmd",
    "cis.parse.parse_args",
    "escape_colons"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_subset.TestSpatialSubsetAllProductsAllValidVariables.test_subset_ASCII": {
  "data": {
   "lineno": 466
  },
  "type": "function"
 },
 "cis.test.integration.test_subset.TestSpatialSubsetAllProductsAllValidVariables.test_subset_Aeronet": {
  "data": {
   "lineno": 362
  },
  "type": "function"
 },
 "cis.test.integration.test_subset.TestSpatialSubsetAllProductsAllValidVariables.test_subset_Aerosol_CCI": {
  "data": {
   "lineno": 334
  },
  "type": "function"
 },
 "cis.test.integration.test_subset.TestSpatialSubsetAllProductsAllValidVariables.test_subset_Caliop_L1": {
  "data": {
   "lineno": 352
  },
  "type": "function"
 },
 "cis.test.integration.test_subset.TestSpatialSubsetAllProductsAllValidVariables.test_subset_Caliop_L2": {
  "data": {
   "lineno": 399
  },
  "type": "function"
 },
 "cis.test.integration.test_subset.TestSpatialSubsetAllProductsAllValidVariables.test_subset_CloudSatPRECIP": {
  "data": {
   "lineno": 409
  },
  "type": "function"
 },
 "cis.test.integration.test_subset.TestSpatialSubsetAllProductsAllValidVariables.test_subset_CloudSatRVOD": {
  "data": {
   "lineno": 437
  },
  "type": "function"
 },
 "cis.test.integration.test_subset.TestSpatialSubsetAllProductsAllValidVariables.test_subset_Cloud_CCI": {
  "data": {
   "lineno": 324
  },
  "type": "function"
 },
 "cis.test.integration.test_subset.TestSpatialSubsetAllProductsAllValidVariables.test_subset_GASP": {
  "data": {
   "lineno": 448
  },
  "type": "function"
 },
 "cis.test.integration.test_subset.TestSpatialSubsetAllProductsAllValidVariables.test_subset_GASSP_aux_coord": {
  "data": {
   "lineno": 457
  },
  "type": "function"
 },
 "cis.test.integration.test_subset.TestSpatialSubsetAllProductsAllValidVariables.test_subset_MODIS_L2": {
  "data": {
   "lineno": 371
  },
  "type": "function"
 },
 "cis.test.integration.test_subset.TestSpatialSubsetAllProductsAllValidVariables.test_subset_MODIS_L3": {
  "data": {
   "lineno": 381
  },
  "type": "function"
 },
 "cis.test.integration.test_subset.TestSpatialSubsetAllProductsAllValidVariables.test_subset_NCAR_RAF": {
  "data": {
   "lineno": 343
  },
  "type": "function"
 },
 "cis.test.integration.test_subset.TestSpatialSubsetAllProductsAllValidVariables.test_subset_cis_gridded": {
  "data": {
   "lineno": 419
  },
  "type": "function"
 },
 "cis.test.integration.test_subset.TestSpatialSubsetAllProductsAllValidVariables.test_subset_cis_ungridded": {
  "data": {
   "lineno": 428
  },
  "type": "function"
 },
 "cis.test.integration.test_subset.TestSpatialSubsetAllProductsAllValidVariables.test_subset_netCDF_gridded_HadGem": {
  "data": {
   "lineno": 390
  },
  "type": "function"
 },
 "cis.test.integration.test_subset.TestSubsetIntegration": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "cis.test.integration.base_integration_test.BaseIntegrationTest"
   ]
  },
  "type": "class"
 },
 "cis.test.integration.test_subset.TestSubsetIntegration.test_GIVEN_multiple_variables_in_gridded_file_WHEN_subset_THEN_subsetted_correctly": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "cis.cis_main.subset_cmd",
    "cis.parse.parse_args",
    "escape_colons"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_subset.TestSubsetIntegration.test_GIVEN_multiple_variables_in_ungridded_file_WHEN_subset_THEN_subsetted_correctly": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "cis.cis_main.subset_cmd",
    "cis.parse.parse_args",
    "escape_colons"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_subset.TestSubsetIntegration.test_GIVEN_shape_WHEN_subset_ungridded_data_THEN_subsetted_correctly": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "cis.cis_main.subset_cmd",
    "cis.parse.parse_args",
    "escape_colons"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_subset.TestSubsetIntegration.test_GIVEN_single_variable_as_var_name_in_gridded_file_WHEN_subset_THEN_subsetted_correctly": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "cis.cis_main.subset_cmd",
    "cis.parse.parse_args",
    "escape_colons"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_subset.TestSubsetIntegration.test_GIVEN_single_variable_as_var_name_in_ungridded_file_WHEN_subset_THEN_subsetted_correctly": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "cis.cis_main.subset_cmd",
    "cis.parse.parse_args",
    "escape_colons"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_subset.TestSubsetIntegration.test_GIVEN_single_variable_in_gridded_file_WHEN_subset_THEN_subsetted_correctly": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "cis.cis_main.subset_cmd",
    "cis.parse.parse_args",
    "escape_colons"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_subset.TestSubsetIntegration.test_GIVEN_single_variable_in_ungridded_file_WHEN_subset_THEN_subsetted_correctly": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "cis.cis_main.subset_cmd",
    "cis.parse.parse_args",
    "escape_colons"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_subset.TestSubsetIntegration.test_GIVEN_variables_specified_by_wildcard_WHEN_subset_THEN_subsetted_correctly": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "cis.cis_main.subset_cmd",
    "cis.parse.parse_args",
    "escape_colons"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_subset.TestTemporalSubsetAllProductsNamedVariables": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "cis.test.integration.base_integration_test.BaseIntegrationTest"
   ]
  },
  "type": "class"
 },
 "cis.test.integration.test_subset.TestTemporalSubsetAllProductsNamedVariables.check_temporal_subsetting": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "cf_units.Unit",
    "cis.test.integration.test_subset.datetime",
    "cis.time_util.convert_time_since_to_std_time",
    "hamcrest.assert_that",
    "hamcrest.greater_than_or_equal_to",
    "hamcrest.less_than_or_equal_to",
    "netCDF4.Dataset"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_subset.TestTemporalSubsetAllProductsNamedVariables.do_subset": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "cis.cis_main.subset_cmd",
    "cis.parse.parse_args",
    "escape_colons"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_subset.TestTemporalSubsetAllProductsNamedVariables.test_subset_ASCII": {
  "data": {
   "lineno": 308
  },
  "type": "function"
 },
 "cis.test.integration.test_subset.TestTemporalSubsetAllProductsNamedVariables.test_subset_Aeronet": {
  "data": {
   "lineno": 217
  },
  "type": "function"
 },
 "cis.test.integration.test_subset.TestTemporalSubsetAllProductsNamedVariables.test_subset_Aerosol_CCI": {
  "data": {
   "lineno": 151
  },
  "type": "function"
 },
 "cis.test.integration.test_subset.TestTemporalSubsetAllProductsNamedVariables.test_subset_Caliop_L1": {
  "data": {
   "lineno": 207
  },
  "type": "function"
 },
 "cis.test.integration.test_subset.TestTemporalSubsetAllProductsNamedVariables.test_subset_Caliop_L2": {
  "data": {
   "lineno": 260
  },
  "type": "function"
 },
 "cis.test.integration.test_subset.TestTemporalSubsetAllProductsNamedVariables.test_subset_CloudSatPRECIP": {
  "data": {
   "lineno": 250
  },
  "type": "function"
 },
 "cis.test.integration.test_subset.TestTemporalSubsetAllProductsNamedVariables.test_subset_CloudSatRVOD": {
  "data": {
   "lineno": 271
  },
  "type": "function"
 },
 "cis.test.integration.test_subset.TestTemporalSubsetAllProductsNamedVariables.test_subset_Cloud_CCI": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "cis.exceptions.NoDataInSubsetError",
    "nose.tools.raises"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_subset.TestTemporalSubsetAllProductsNamedVariables.test_subset_GASSP": {
  "data": {
   "lineno": 180
  },
  "type": "function"
 },
 "cis.test.integration.test_subset.TestTemporalSubsetAllProductsNamedVariables.test_subset_GASSP_aux_coord": {
  "data": {
   "lineno": 189
  },
  "type": "function"
 },
 "cis.test.integration.test_subset.TestTemporalSubsetAllProductsNamedVariables.test_subset_GASSP_not_entirely_valid": {
  "data": {
   "lineno": 198
  },
  "type": "function"
 },
 "cis.test.integration.test_subset.TestTemporalSubsetAllProductsNamedVariables.test_subset_MODIS_L2": {
  "data": {
   "lineno": 226
  },
  "type": "function"
 },
 "cis.test.integration.test_subset.TestTemporalSubsetAllProductsNamedVariables.test_subset_MODIS_L3": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "cis.exceptions.CoordinateNotFoundError",
    "nose.tools.raises"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_subset.TestTemporalSubsetAllProductsNamedVariables.test_subset_NCAR_RAF": {
  "data": {
   "lineno": 160
  },
  "type": "function"
 },
 "cis.test.integration.test_subset.TestTemporalSubsetAllProductsNamedVariables.test_subset_NCAR_RAF_with_named_time_variable": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "cis.cis_main.subset_cmd",
    "cis.parse.parse_args",
    "escape_colons"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_subset.TestTemporalSubsetAllProductsNamedVariables.test_subset_cis_gridded": {
  "data": {
   "lineno": 281
  },
  "type": "function"
 },
 "cis.test.integration.test_subset.TestTemporalSubsetAllProductsNamedVariables.test_subset_cis_ungridded": {
  "data": {
   "lineno": 290
  },
  "type": "function"
 },
 "cis.test.integration.test_subset.TestTemporalSubsetAllProductsNamedVariables.test_subset_netCDF_gridded_HadGem": {
  "data": {
   "lineno": 299
  },
  "type": "function"
 },
 "cis.test.integration.test_subset.TestVerticalSubsetAllProducts": {
  "data": {
   "lineno": 496,
   "symbols_in_volume": [
    "cis.test.integration.base_integration_test.BaseIntegrationTest"
   ]
  },
  "type": "class"
 },
 "cis.test.integration.test_subset.TestVerticalSubsetAllProducts.do_subset": {
  "data": {
   "lineno": 497,
   "symbols_in_volume": [
    "cis.cis_main.subset_cmd",
    "cis.parse.parse_args",
    "escape_colons"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_subset.TestVerticalSubsetAllProducts.test_subset_ASCII": {
  "data": {
   "lineno": 596
  },
  "type": "function"
 },
 "cis.test.integration.test_subset.TestVerticalSubsetAllProducts.test_subset_Caliop_L1": {
  "data": {
   "lineno": 528
  },
  "type": "function"
 },
 "cis.test.integration.test_subset.TestVerticalSubsetAllProducts.test_subset_Caliop_L2": {
  "data": {
   "lineno": 562
  },
  "type": "function"
 },
 "cis.test.integration.test_subset.TestVerticalSubsetAllProducts.test_subset_CloudSatRVOD_alt": {
  "data": {
   "lineno": 571
  },
  "type": "function"
 },
 "cis.test.integration.test_subset.TestVerticalSubsetAllProducts.test_subset_GASSP": {
  "data": {
   "lineno": 580
  },
  "type": "function"
 },
 "cis.test.integration.test_subset.TestVerticalSubsetAllProducts.test_subset_GASSP_pres": {
  "data": {
   "lineno": 588,
   "symbols_in_volume": [
    "cis.exceptions.CoordinateNotFoundError",
    "nose.tools.raises"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_subset.TestVerticalSubsetAllProducts.test_subset_NCAR_RAF_alt": {
  "data": {
   "lineno": 504
  },
  "type": "function"
 },
 "cis.test.integration.test_subset.TestVerticalSubsetAllProducts.test_subset_NCAR_RAF_pres": {
  "data": {
   "lineno": 512
  },
  "type": "function"
 },
 "cis.test.integration.test_subset.TestVerticalSubsetAllProducts.test_subset_NCAR_RAF_pres_order_doesnt_matter": {
  "data": {
   "lineno": 520
  },
  "type": "function"
 },
 "cis.test.integration.test_subset.TestVerticalSubsetAllProducts.test_subset_hybrid_pressure_model_field": {
  "data": {
   "lineno": 537
  },
  "type": "function"
 },
 "cis.test.integration.test_subset.TestVerticalSubsetAllProducts.test_subset_hybrid_pressure_model_field_by_variable": {
  "data": {
   "lineno": 549,
   "symbols_in_volume": [
    "cis.exceptions.CoordinateNotFoundError",
    "nose.tools.raises"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_subset.Unit": {
  "data": {
   "shadows": "cf_units.Unit"
  },
  "type": "import"
 },
 "cis.test.integration.test_subset.assert_that": {
  "data": {
   "shadows": "hamcrest.assert_that"
  },
  "type": "import"
 },
 "cis.test.integration.test_subset.convert_time_since_to_std_time": {
  "data": {
   "shadows": "cis.time_util.convert_time_since_to_std_time"
  },
  "type": "import"
 },
 "cis.test.integration.test_subset.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "cis.test.integration.test_subset.greater_than_or_equal_to": {
  "data": {
   "shadows": "hamcrest.greater_than_or_equal_to"
  },
  "type": "import"
 },
 "cis.test.integration.test_subset.less_than_or_equal_to": {
  "data": {
   "shadows": "hamcrest.less_than_or_equal_to"
  },
  "type": "import"
 },
 "cis.test.integration.test_subset.parse_args": {
  "data": {
   "shadows": "cis.parse.parse_args"
  },
  "type": "import"
 },
 "cis.test.integration.test_subset.raises": {
  "data": {
   "shadows": "nose.tools.raises"
  },
  "type": "import"
 },
 "cis.test.integration.test_subset.subset_cmd": {
  "data": {
   "shadows": "cis.cis_main.subset_cmd"
  },
  "type": "import"
 },
 "cis.test.integration.test_subset.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "cis.test.integration.test_version": {
  "data": {},
  "type": "module"
 },
 "cis.test.integration.test_version.TestCase": {
  "data": {
   "shadows": "unittest.TestCase"
  },
  "type": "import"
 },
 "cis.test.integration.test_version.TestVersionIntegration": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "unittest.TestCase"
   ]
  },
  "type": "class"
 },
 "cis.test.integration.test_version.TestVersionIntegration.test_should_do_scatter_plot_of_file_valid_aerosol_cci_file": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "cis.cis_main.parse_and_run_arguments"
   ]
  },
  "type": "function"
 },
 "cis.test.integration.test_version.parse_and_run_arguments": {
  "data": {
   "shadows": "cis.cis_main.parse_and_run_arguments"
  },
  "type": "import"
 },
 "cis.test.integration_test_data": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "cis.test.integration_test_data.TestFileTestData",
    "cis.test.integration_test_data.all_aeronet_variables",
    "cis.test.integration_test_data.cis_test_files",
    "cis.test.integration_test_data.cloudsat_file_format",
    "cis.test.integration_test_data.make_pathname",
    "cis.test.integration_test_data.os",
    "cis.test.integration_test_data.pyhdf",
    "cis.test.integration_test_data.valid_2d_filename",
    "cis.test.integration_test_data.valid_GASSP_aeroplane_filename",
    "cis.test.integration_test_data.valid_GASSP_aeroplane_variable",
    "cis.test.integration_test_data.valid_GASSP_aeroplane_vars",
    "cis.test.integration_test_data.valid_aeronet_filename",
    "cis.test.integration_test_data.valid_aerosol_cci_filename",
    "cis.test.integration_test_data.valid_aerosol_cci_variable",
    "cis.test.integration_test_data.valid_aerosol_cci_variable_2",
    "cis.test.integration_test_data.valid_ascii_filename",
    "cis.test.integration_test_data.valid_caliop_l1_filename",
    "cis.test.integration_test_data.valid_caliop_l1_variables",
    "cis.test.integration_test_data.valid_caliop_l2_filename",
    "cis.test.integration_test_data.valid_caliop_l2_variables",
    "cis.test.integration_test_data.valid_cis_ungridded_output_filename",
    "cis.test.integration_test_data.valid_cis_ungridded_output_variable",
    "cis.test.integration_test_data.valid_cis_ungridded_output_variables",
    "cis.test.integration_test_data.valid_cloud_cci_filename",
    "cis.test.integration_test_data.valid_cloud_cci_variable",
    "cis.test.integration_test_data.valid_cloudsat_RVOD_file",
    "cis.test.integration_test_data.valid_cloudsat_RVOD_sdata_variable",
    "cis.test.integration_test_data.valid_modis_l2_filename",
    "cis.test.integration_test_data.valid_modis_l2_variable",
    "cis.test.integration_test_data.valid_modis_l2_variables",
    "cis.test.integration_test_data.valid_modis_l3_filename",
    "collections.namedtuple",
    "datetime.datetime",
    "len",
    "unittest.skipIf"
   ]
  },
  "type": "module"
 },
 "cis.test.integration_test_data.TestFileTestData": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "cis.test.integration_test_data.aggregated_aeronet_filename": {
  "data": {
   "lineno": 264
  },
  "type": "constant"
 },
 "cis.test.integration_test_data.aggregated_aeronet_variables": {
  "data": {
   "lineno": 265
  },
  "type": "constant"
 },
 "cis.test.integration_test_data.all_aeronet_variables": {
  "data": {
   "lineno": 198
  },
  "type": "constant"
 },
 "cis.test.integration_test_data.another_valid_aeronet_filename": {
  "data": {
   "lineno": 196
  },
  "type": "constant"
 },
 "cis.test.integration_test_data.ascii_filename_with_no_values": {
  "data": {
   "lineno": 393
  },
  "type": "constant"
 },
 "cis.test.integration_test_data.cis_test_files": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "cis.test.integration_test_data.cloudsat_file_format": {
  "data": {
   "lineno": 123
  },
  "type": "constant"
 },
 "cis.test.integration_test_data.data_directory": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "cis.test.integration_test_data.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "cis.test.integration_test_data.escape_colons": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "cis.test.integration_test_data.os"
   ]
  },
  "type": "function"
 },
 "cis.test.integration_test_data.invalid_filename": {
  "data": {
   "lineno": 567
  },
  "type": "constant"
 },
 "cis.test.integration_test_data.make_pathname": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "cis.test.integration_test_data.data_directory",
    "cis.test.integration_test_data.os"
   ]
  },
  "type": "function"
 },
 "cis.test.integration_test_data.modis_myd06_l2_filenames": {
  "data": {
   "lineno": 99
  },
  "type": "constant"
 },
 "cis.test.integration_test_data.modis_myd06_l2_variable": {
  "data": {
   "lineno": 101
  },
  "type": "constant"
 },
 "cis.test.integration_test_data.namedtuple": {
  "data": {
   "shadows": "collections.namedtuple"
  },
  "type": "import"
 },
 "cis.test.integration_test_data.netcdf_cf_compliant_ranges_filename": {
  "data": {
   "lineno": 411
  },
  "type": "constant"
 },
 "cis.test.integration_test_data.netcdf_cf_compliant_ranges_vars": {
  "data": {
   "lineno": 412
  },
  "type": "constant"
 },
 "cis.test.integration_test_data.non_netcdf_file": {
  "data": {
   "lineno": 568
  },
  "type": "constant"
 },
 "cis.test.integration_test_data.non_netcdf_file_with_netcdf_file_extension": {
  "data": {
   "lineno": 569
  },
  "type": "constant"
 },
 "cis.test.integration_test_data.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "cis.test.integration_test_data.pyhdf": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "cis.test.integration_test_data.skipIf": {
  "data": {
   "shadows": "unittest.skipIf"
  },
  "type": "import"
 },
 "cis.test.integration_test_data.skip_pyhdf": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "cis.test.integration_test_data.valid_1d_filename": {
  "data": {
   "lineno": 337
  },
  "type": "constant"
 },
 "cis.test.integration_test_data.valid_1d_variable": {
  "data": {
   "lineno": 338
  },
  "type": "constant"
 },
 "cis.test.integration_test_data.valid_2d_filename": {
  "data": {
   "lineno": 339
  },
  "type": "constant"
 },
 "cis.test.integration_test_data.valid_GASSP_aeroplane_filename": {
  "data": {
   "lineno": 463
  },
  "type": "constant"
 },
 "cis.test.integration_test_data.valid_GASSP_aeroplane_variable": {
  "data": {
   "lineno": 465
  },
  "type": "constant"
 },
 "cis.test.integration_test_data.valid_GASSP_aeroplane_vars": {
  "data": {
   "lineno": 464
  },
  "type": "constant"
 },
 "cis.test.integration_test_data.valid_GASSP_aircraft_files_with_different_timestamps": {
  "data": {
   "lineno": 543
  },
  "type": "constant"
 },
 "cis.test.integration_test_data.valid_GASSP_aircraft_var_with_different_timestamps": {
  "data": {
   "lineno": 545
  },
  "type": "constant"
 },
 "cis.test.integration_test_data.valid_GASSP_attribute": {
  "data": {
   "lineno": 509
  },
  "type": "constant"
 },
 "cis.test.integration_test_data.valid_GASSP_not_entirely_correct_filename": {
  "data": {
   "lineno": 439
  },
  "type": "constant"
 },
 "cis.test.integration_test_data.valid_GASSP_not_entirely_correct_variable": {
  "data": {
   "lineno": 440
  },
  "type": "constant"
 },
 "cis.test.integration_test_data.valid_GASSP_ship_filename": {
  "data": {
   "lineno": 507
  },
  "type": "constant"
 },
 "cis.test.integration_test_data.valid_GASSP_ship_vars": {
  "data": {
   "lineno": 506
  },
  "type": "constant"
 },
 "cis.test.integration_test_data.valid_GASSP_station_filename": {
  "data": {
   "lineno": 536
  },
  "type": "constant"
 },
 "cis.test.integration_test_data.valid_GASSP_station_files_with_different_timestamps": {
  "data": {
   "lineno": 539
  },
  "type": "constant"
 },
 "cis.test.integration_test_data.valid_GASSP_station_var_with_different_timestamps": {
  "data": {
   "lineno": 541
  },
  "type": "constant"
 },
 "cis.test.integration_test_data.valid_GASSP_station_vars": {
  "data": {
   "lineno": 537
  },
  "type": "constant"
 },
 "cis.test.integration_test_data.valid_NCAR_NetCDF_RAF_filename": {
  "data": {
   "lineno": 414
  },
  "type": "constant"
 },
 "cis.test.integration_test_data.valid_NCAR_NetCDF_RAF_variable": {
  "data": {
   "lineno": 415
  },
  "type": "constant"
 },
 "cis.test.integration_test_data.valid_aeronet_filename": {
  "data": {
   "lineno": 195
  },
  "type": "constant"
 },
 "cis.test.integration_test_data.valid_aeronet_variable": {
  "data": {
   "lineno": 197
  },
  "type": "constant"
 },
 "cis.test.integration_test_data.valid_aerosol_cci_filename": {
  "data": {
   "lineno": 150
  },
  "type": "constant"
 },
 "cis.test.integration_test_data.valid_aerosol_cci_variable": {
  "data": {
   "lineno": 151
  },
  "type": "constant"
 },
 "cis.test.integration_test_data.valid_aerosol_cci_variable_2": {
  "data": {
   "lineno": 152
  },
  "type": "constant"
 },
 "cis.test.integration_test_data.valid_ascii_filename": {
  "data": {
   "lineno": 392
  },
  "type": "constant"
 },
 "cis.test.integration_test_data.valid_caliop_l1_filename": {
  "data": {
   "lineno": 308
  },
  "type": "constant"
 },
 "cis.test.integration_test_data.valid_caliop_l1_variable": {
  "data": {
   "lineno": 309
  },
  "type": "constant"
 },
 "cis.test.integration_test_data.valid_caliop_l1_variables": {
  "data": {
   "lineno": 310
  },
  "type": "constant"
 },
 "cis.test.integration_test_data.valid_caliop_l2_filename": {
  "data": {
   "lineno": 268
  },
  "type": "constant"
 },
 "cis.test.integration_test_data.valid_caliop_l2_variable": {
  "data": {
   "lineno": 269
  },
  "type": "constant"
 },
 "cis.test.integration_test_data.valid_caliop_l2_variables": {
  "data": {
   "lineno": 270
  },
  "type": "constant"
 },
 "cis.test.integration_test_data.valid_cis_col_file": {
  "data": {
   "lineno": 365
  },
  "type": "constant"
 },
 "cis.test.integration_test_data.valid_cis_col_variable": {
  "data": {
   "lineno": 366
  },
  "type": "constant"
 },
 "cis.test.integration_test_data.valid_cis_gridded_output_filename": {
  "data": {
   "lineno": 368
  },
  "type": "constant"
 },
 "cis.test.integration_test_data.valid_cis_gridded_output_variable": {
  "data": {
   "lineno": 369
  },
  "type": "constant"
 },
 "cis.test.integration_test_data.valid_cis_ungridded_output_filename": {
  "data": {
   "lineno": 371
  },
  "type": "constant"
 },
 "cis.test.integration_test_data.valid_cis_ungridded_output_variable": {
  "data": {
   "lineno": 372
  },
  "type": "constant"
 },
 "cis.test.integration_test_data.valid_cis_ungridded_output_variables": {
  "data": {
   "lineno": 373
  },
  "type": "constant"
 },
 "cis.test.integration_test_data.valid_cloud_cci_8_bit_variable": {
  "data": {
   "lineno": 173
  },
  "type": "constant"
 },
 "cis.test.integration_test_data.valid_cloud_cci_filename": {
  "data": {
   "lineno": 171
  },
  "type": "constant"
 },
 "cis.test.integration_test_data.valid_cloud_cci_variable": {
  "data": {
   "lineno": 172
  },
  "type": "constant"
 },
 "cis.test.integration_test_data.valid_cloudsat_PRECIP_file": {
  "data": {
   "lineno": 146
  },
  "type": "constant"
 },
 "cis.test.integration_test_data.valid_cloudsat_PRECIP_file_format": {
  "data": {
   "lineno": 148
  },
  "type": "constant"
 },
 "cis.test.integration_test_data.valid_cloudsat_PRECIP_variable": {
  "data": {
   "lineno": 147
  },
  "type": "constant"
 },
 "cis.test.integration_test_data.valid_cloudsat_RVOD_file": {
  "data": {
   "lineno": 124
  },
  "type": "constant"
 },
 "cis.test.integration_test_data.valid_cloudsat_RVOD_file_format": {
  "data": {
   "lineno": 127
  },
  "type": "constant"
 },
 "cis.test.integration_test_data.valid_cloudsat_RVOD_sdata_variable": {
  "data": {
   "lineno": 125
  },
  "type": "constant"
 },
 "cis.test.integration_test_data.valid_cloudsat_RVOD_vdata_variable": {
  "data": {
   "lineno": 126
  },
  "type": "constant"
 },
 "cis.test.integration_test_data.valid_echamham_filename": {
  "data": {
   "lineno": 330
  },
  "type": "constant"
 },
 "cis.test.integration_test_data.valid_echamham_geopotential_filename": {
  "data": {
   "lineno": 342
  },
  "type": "constant"
 },
 "cis.test.integration_test_data.valid_echamham_geopotential_height_filename": {
  "data": {
   "lineno": 345
  },
  "type": "constant"
 },
 "cis.test.integration_test_data.valid_echamham_geopotential_height_variable": {
  "data": {
   "lineno": 346
  },
  "type": "constant"
 },
 "cis.test.integration_test_data.valid_echamham_geopotential_variable": {
  "data": {
   "lineno": 343
  },
  "type": "constant"
 },
 "cis.test.integration_test_data.valid_echamham_variable_1": {
  "data": {
   "lineno": 331
  },
  "type": "constant"
 },
 "cis.test.integration_test_data.valid_echamham_variable_2": {
  "data": {
   "lineno": 332
  },
  "type": "constant"
 },
 "cis.test.integration_test_data.valid_hadgem_filename": {
  "data": {
   "lineno": 192
  },
  "type": "constant"
 },
 "cis.test.integration_test_data.valid_hadgem_variable": {
  "data": {
   "lineno": 193
  },
  "type": "constant"
 },
 "cis.test.integration_test_data.valid_hdf_sd_file": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "cis.test.integration_test_data.valid_hdf_vd_file": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "cis.test.integration_test_data.valid_hybrid_height_filename": {
  "data": {
   "lineno": 557
  },
  "type": "constant"
 },
 "cis.test.integration_test_data.valid_hybrid_height_flat_filename": {
  "data": {
   "lineno": 554
  },
  "type": "constant"
 },
 "cis.test.integration_test_data.valid_hybrid_height_flat_variable": {
  "data": {
   "lineno": 555
  },
  "type": "constant"
 },
 "cis.test.integration_test_data.valid_hybrid_height_variable": {
  "data": {
   "lineno": 558
  },
  "type": "constant"
 },
 "cis.test.integration_test_data.valid_hybrid_pressure_filename": {
  "data": {
   "lineno": 551
  },
  "type": "constant"
 },
 "cis.test.integration_test_data.valid_hybrid_pressure_variable": {
  "data": {
   "lineno": 552
  },
  "type": "constant"
 },
 "cis.test.integration_test_data.valid_modis_l2_filename": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "cis.test.integration_test_data.valid_modis_l2_variable": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "cis.test.integration_test_data.valid_modis_l2_variables": {
  "data": {
   "lineno": 57
  },
  "type": "constant"
 },
 "cis.test.integration_test_data.valid_modis_l3_filename": {
  "data": {
   "lineno": 103
  },
  "type": "constant"
 },
 "cis.test.integration_test_data.valid_modis_l3_filename2": {
  "data": {
   "lineno": 104
  },
  "type": "constant"
 },
 "cis.test.integration_test_data.valid_modis_l3_variable": {
  "data": {
   "lineno": 105
  },
  "type": "constant"
 },
 "cis.test.integration_test_data.valid_nested_groups_file": {
  "data": {
   "lineno": 564
  },
  "type": "constant"
 },
 "cis.test.integration_test_data.valid_nested_groups_variable": {
  "data": {
   "lineno": 565
  },
  "type": "constant"
 },
 "cis.test.integration_test_data.valid_netcdf_groups_file": {
  "data": {
   "lineno": 561
  },
  "type": "constant"
 },
 "cis.test.integration_test_data.valid_netcdf_groups_variable": {
  "data": {
   "lineno": 563
  },
  "type": "constant"
 },
 "cis.test.integration_test_data.valid_xenida_filename": {
  "data": {
   "lineno": 334
  },
  "type": "constant"
 },
 "cis.test.integration_test_data.valid_xenida_variable": {
  "data": {
   "lineno": 335
  },
  "type": "constant"
 },
 "cis.test.integration_test_data.valid_zonal_time_mean_CMIP5_filename": {
  "data": {
   "lineno": 547
  },
  "type": "constant"
 },
 "cis.test.integration_test_data.valid_zonal_time_mean_CMIP5_variable": {
  "data": {
   "lineno": 549
  },
  "type": "constant"
 },
 "cis.test.plot_tests": {
  "data": {},
  "type": "module"
 },
 "cis.test.plot_tests.idiff": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "cis.test.plot_tests.idiff.step_over_diffs"
   ]
  },
  "type": "module"
 },
 "cis.test.plot_tests.idiff.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "cis.test.plot_tests.idiff.cis.test.plot_tests": {
  "data": {
   "shadows": "cis.test.plot_tests"
  },
  "type": "import"
 },
 "cis.test.plot_tests.idiff.diff_viewer": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "matplotlib.image.imread",
    "matplotlib.pyplot.axes",
    "matplotlib.pyplot.figure",
    "matplotlib.pyplot.show",
    "matplotlib.pyplot.subplot",
    "matplotlib.pyplot.suptitle",
    "matplotlib.widgets.Button"
   ]
  },
  "type": "function"
 },
 "cis.test.plot_tests.idiff.diff_viewer.accept": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "cis.test.plot_tests.idiff.shutil",
    "matplotlib.pyplot.close",
    "print"
   ]
  },
  "type": "function"
 },
 "cis.test.plot_tests.idiff.diff_viewer.reject": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "matplotlib.pyplot.close",
    "print"
   ]
  },
  "type": "function"
 },
 "cis.test.plot_tests.idiff.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "cis.test.plot_tests.idiff.mimg": {
  "data": {
   "shadows": "matplotlib.image"
  },
  "type": "import"
 },
 "cis.test.plot_tests.idiff.mwidget": {
  "data": {
   "shadows": "matplotlib.widgets"
  },
  "type": "import"
 },
 "cis.test.plot_tests.idiff.os.path": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "cis.test.plot_tests.idiff.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "cis.test.plot_tests.idiff.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "cis.test.plot_tests.idiff.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "cis.test.plot_tests.idiff.step_over_diffs": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "cis.test.plot_tests.idiff.diff_viewer",
    "sorted"
   ]
  },
  "type": "function"
 },
 "cis.test.plot_tests.test_plotting": {
  "data": {},
  "type": "module"
 },
 "cis.test.plot_tests.test_plotting.BaseIntegrationTest": {
  "data": {
   "shadows": "cis.test.integration.base_integration_test.BaseIntegrationTest"
  },
  "type": "import"
 },
 "cis.test.plot_tests.test_plotting.GriddedData": {
  "data": {
   "shadows": "cis.data_io.gridded_data.GriddedData"
  },
  "type": "import"
 },
 "cis.test.plot_tests.test_plotting.GriddedDataList": {
  "data": {
   "shadows": "cis.data_io.gridded_data.GriddedDataList"
  },
  "type": "import"
 },
 "cis.test.plot_tests.test_plotting.InvalidDimensionError": {
  "data": {
   "shadows": "cis.exceptions.InvalidDimensionError"
  },
  "type": "import"
 },
 "cis.test.plot_tests.test_plotting.Plotter": {
  "data": {
   "shadows": "cis.plotting.formatted_plot.Plotter"
  },
  "type": "import"
 },
 "cis.test.plot_tests.test_plotting.ProductPluginException": {
  "data": {
   "shadows": "cis.data_io.products.AProduct.ProductPluginException"
  },
  "type": "import"
 },
 "cis.test.plot_tests.test_plotting.TestPlotAPIVisual": {
  "data": {
   "lineno": 762,
   "symbols_in_volume": [
    "cis.test.plot_tests.test_plotting.VisualTest"
   ]
  },
  "type": "class"
 },
 "cis.test.plot_tests.test_plotting.TestPlotAPIVisual.test_can_specify_yaxis_altitude": {
  "data": {
   "lineno": 986,
   "symbols_in_volume": [
    "cis.read_data"
   ]
  },
  "type": "function"
 },
 "cis.test.plot_tests.test_plotting.TestPlotAPIVisual.test_contour_over_bluemarble": {
  "data": {
   "lineno": 826,
   "symbols_in_volume": [
    "cis.data_io.gridded_data.GriddedData.make_from_cube",
    "cis.test.util.mock.make_mock_cube"
   ]
  },
  "type": "function"
 },
 "cis.test.plot_tests.test_plotting.TestPlotAPIVisual.test_explicit_comparative_scatter": {
  "data": {
   "lineno": 777,
   "symbols_in_volume": [
    "cis.data_io.ungridded_data.UngriddedDataList",
    "cis.test.util.mock.make_regular_2d_ungridded_data"
   ]
  },
  "type": "function"
 },
 "cis.test.plot_tests.test_plotting.TestPlotAPIVisual.test_heatmap": {
  "data": {
   "lineno": 817,
   "symbols_in_volume": [
    "cis.data_io.gridded_data.GriddedData.make_from_cube",
    "cis.test.util.mock.make_mock_cube"
   ]
  },
  "type": "function"
 },
 "cis.test.plot_tests.test_plotting.TestPlotAPIVisual.test_histogram": {
  "data": {
   "lineno": 907,
   "symbols_in_volume": [
    "cis.test.util.mock.make_regular_2d_ungridded_data"
   ]
  },
  "type": "function"
 },
 "cis.test.plot_tests.test_plotting.TestPlotAPIVisual.test_histogram_2d": {
  "data": {
   "lineno": 915,
   "symbols_in_volume": [
    "cis.data_io.gridded_data.GriddedDataList",
    "cis.test.util.mock.make_mock_cube"
   ]
  },
  "type": "function"
 },
 "cis.test.plot_tests.test_plotting.TestPlotAPIVisual.test_implicit_comparative_scatter": {
  "data": {
   "lineno": 764,
   "symbols_in_volume": [
    "cis.data_io.ungridded_data.UngriddedDataList",
    "cis.test.util.mock.make_regular_2d_ungridded_data"
   ]
  },
  "type": "function"
 },
 "cis.test.plot_tests.test_plotting.TestPlotAPIVisual.test_invalid_args": {
  "data": {
   "lineno": 927,
   "symbols_in_volume": [
    "AttributeError",
    "cis.test.util.mock.make_regular_2d_ungridded_data",
    "nose.tools.assert_raises"
   ]
  },
  "type": "function"
 },
 "cis.test.plot_tests.test_plotting.TestPlotAPIVisual.test_iris_comparative_scatter": {
  "data": {
   "lineno": 805,
   "symbols_in_volume": [
    "cis.data_io.gridded_data.GriddedDataList",
    "cis.test.util.mock.make_mock_cube"
   ]
  },
  "type": "function"
 },
 "cis.test.plot_tests.test_plotting.TestPlotAPIVisual.test_iris_multiple_scatter": {
  "data": {
   "lineno": 791,
   "symbols_in_volume": [
    "cis.data_io.gridded_data.GriddedDataList",
    "cis.test.util.mock.make_mock_cube"
   ]
  },
  "type": "function"
 },
 "cis.test.plot_tests.test_plotting.TestPlotAPIVisual.test_layer_opts": {
  "data": {
   "lineno": 892,
   "symbols_in_volume": [
    "cis.data_io.ungridded_data.UngriddedDataList",
    "cis.test.util.mock.make_dummy_ungridded_data_time_series",
    "dict"
   ]
  },
  "type": "function"
 },
 "cis.test.plot_tests.test_plotting.TestPlotAPIVisual.test_log_colorbar_scale": {
  "data": {
   "lineno": 993,
   "symbols_in_volume": [
    "cis.read_data"
   ]
  },
  "type": "function"
 },
 "cis.test.plot_tests.test_plotting.TestPlotAPIVisual.test_mercator_projection": {
  "data": {
   "lineno": 974,
   "symbols_in_volume": [
    "cartopy.crs.Mercator",
    "cis.read_data"
   ]
  },
  "type": "function"
 },
 "cis.test.plot_tests.test_plotting.TestPlotAPIVisual.test_mpl_kwargs": {
  "data": {
   "lineno": 883,
   "symbols_in_volume": [
    "cis.test.util.mock.make_dummy_ungridded_data_time_series"
   ]
  },
  "type": "function"
 },
 "cis.test.plot_tests.test_plotting.TestPlotAPIVisual.test_multiple_line": {
  "data": {
   "lineno": 836,
   "symbols_in_volume": [
    "cis.data_io.ungridded_data.UngriddedDataList",
    "cis.test.util.mock.make_dummy_ungridded_data_time_series"
   ]
  },
  "type": "function"
 },
 "cis.test.plot_tests.test_plotting.TestPlotAPIVisual.test_orographic_projection": {
  "data": {
   "lineno": 950,
   "symbols_in_volume": [
    "cartopy.crs.Orthographic",
    "cis.read_data",
    "matplotlib.pyplot.subplot"
   ]
  },
  "type": "function"
 },
 "cis.test.plot_tests.test_plotting.TestPlotAPIVisual.test_polar_projection": {
  "data": {
   "lineno": 964,
   "symbols_in_volume": [
    "cartopy.crs.NorthPolarStereo",
    "cis.read_data"
   ]
  },
  "type": "function"
 },
 "cis.test.plot_tests.test_plotting.TestPlotAPIVisual.test_scatter2d_over_bluemarble": {
  "data": {
   "lineno": 849,
   "symbols_in_volume": [
    "cis.test.util.mock.make_regular_2d_ungridded_data"
   ]
  },
  "type": "function"
 },
 "cis.test.plot_tests.test_plotting.TestPlotAPIVisual.test_scatter2d_over_bluemarble_coord_axis": {
  "data": {
   "lineno": 871,
   "symbols_in_volume": [
    "cis.test.util.mock.make_regular_2d_ungridded_data"
   ]
  },
  "type": "function"
 },
 "cis.test.plot_tests.test_plotting.TestPlotAPIVisual.test_scatter2d_over_bluemarble_explicit_axis": {
  "data": {
   "lineno": 859,
   "symbols_in_volume": [
    "cis.test.util.mock.make_regular_2d_ungridded_data"
   ]
  },
  "type": "function"
 },
 "cis.test.plot_tests.test_plotting.TestPlotAPIVisual.test_taylor_diagram_gridded": {
  "data": {
   "lineno": 938,
   "symbols_in_volume": [
    "cis.data_io.gridded_data.GriddedDataList",
    "cis.test.util.mock.make_mock_cube"
   ]
  },
  "type": "function"
 },
 "cis.test.plot_tests.test_plotting.TestPlotVisual": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "cis.test.plot_tests.test_plotting.VisualTest"
   ]
  },
  "type": "class"
 },
 "cis.test.plot_tests.test_plotting.TestPlotVisual.test_aeronet_default_axes": {
  "data": {
   "lineno": 683,
   "symbols_in_volume": [
    "cis.cis_main.plot_cmd",
    "cis.parse.parse_args",
    "escape_colons"
   ]
  },
  "type": "function"
 },
 "cis.test.plot_tests.test_plotting.TestPlotVisual.test_aeronet_multiple_variable_plots": {
  "data": {
   "lineno": 748,
   "symbols_in_volume": [
    "cis.cis_main.plot_cmd",
    "cis.data_io.products.AProduct.ProductPluginException",
    "cis.parse.parse_args",
    "escape_colons",
    "nose.tools.raises"
   ]
  },
  "type": "function"
 },
 "cis.test.plot_tests.test_plotting.TestPlotVisual.test_aerosol_cci_default_axes": {
  "data": {
   "lineno": 638,
   "symbols_in_volume": [
    "cis.cis_main.plot_cmd",
    "cis.parse.parse_args",
    "escape_colons"
   ]
  },
  "type": "function"
 },
 "cis.test.plot_tests.test_plotting.TestPlotVisual.test_bluemarble_0_360": {
  "data": {
   "lineno": 484,
   "symbols_in_volume": [
    "cis.plotting.formatted_plot.Plotter",
    "cis.test.util.mock.make_regular_2d_ungridded_data"
   ]
  },
  "type": "function"
 },
 "cis.test.plot_tests.test_plotting.TestPlotVisual.test_bluemarble_minus_180_180": {
  "data": {
   "lineno": 470,
   "symbols_in_volume": [
    "cis.plotting.formatted_plot.Plotter",
    "cis.test.util.mock.make_regular_2d_ungridded_data"
   ]
  },
  "type": "function"
 },
 "cis.test.plot_tests.test_plotting.TestPlotVisual.test_coastline_color": {
  "data": {
   "lineno": 498,
   "symbols_in_volume": [
    "cis.plotting.formatted_plot.Plotter",
    "cis.test.util.mock.make_regular_2d_ungridded_data"
   ]
  },
  "type": "function"
 },
 "cis.test.plot_tests.test_plotting.TestPlotVisual.test_filled_contour_over_scatter2d": {
  "data": {
   "lineno": 582,
   "symbols_in_volume": [
    "cis.cis_main.plot_cmd",
    "cis.parse.parse_args",
    "escape_colons",
    "unittest.skip"
   ]
  },
  "type": "function"
 },
 "cis.test.plot_tests.test_plotting.TestPlotVisual.test_filled_contour_over_scatter2d_with_cmin": {
  "data": {
   "lineno": 597,
   "symbols_in_volume": [
    "cis.cis_main.plot_cmd",
    "cis.parse.parse_args",
    "escape_colons",
    "unittest.skip"
   ]
  },
  "type": "function"
 },
 "cis.test.plot_tests.test_plotting.TestPlotVisual.test_iris_comparative_scatter": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "cis.cis_main.plot_cmd",
    "cis.parse.parse_args",
    "escape_colons"
   ]
  },
  "type": "function"
 },
 "cis.test.plot_tests.test_plotting.TestPlotVisual.test_iris_contour": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "cis.cis_main.plot_cmd",
    "cis.parse.parse_args",
    "escape_colons"
   ]
  },
  "type": "function"
 },
 "cis.test.plot_tests.test_plotting.TestPlotVisual.test_iris_contour_over_heatmap": {
  "data": {
   "lineno": 545,
   "symbols_in_volume": [
    "cis.cis_main.plot_cmd",
    "cis.parse.parse_args",
    "escape_colons"
   ]
  },
  "type": "function"
 },
 "cis.test.plot_tests.test_plotting.TestPlotVisual.test_iris_contour_over_heatmap_binary_cmap": {
  "data": {
   "lineno": 557,
   "symbols_in_volume": [
    "cis.cis_main.plot_cmd",
    "cis.parse.parse_args",
    "escape_colons"
   ]
  },
  "type": "function"
 },
 "cis.test.plot_tests.test_plotting.TestPlotVisual.test_iris_contourf": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "cis.cis_main.plot_cmd",
    "cis.parse.parse_args",
    "escape_colons"
   ]
  },
  "type": "function"
 },
 "cis.test.plot_tests.test_plotting.TestPlotVisual.test_iris_heatmap": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "cis.cis_main.plot_cmd",
    "cis.parse.parse_args",
    "escape_colons"
   ]
  },
  "type": "function"
 },
 "cis.test.plot_tests.test_plotting.TestPlotVisual.test_iris_heatmap_force_minus_180_to_180": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "cis.cis_main.plot_cmd",
    "cis.parse.parse_args",
    "escape_colons"
   ]
  },
  "type": "function"
 },
 "cis.test.plot_tests.test_plotting.TestPlotVisual.test_iris_histogram": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "cis.cis_main.plot_cmd",
    "cis.parse.parse_args",
    "escape_colons"
   ]
  },
  "type": "function"
 },
 "cis.test.plot_tests.test_plotting.TestPlotVisual.test_iris_histogram2d": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "cis.cis_main.plot_cmd",
    "cis.parse.parse_args",
    "escape_colons"
   ]
  },
  "type": "function"
 },
 "cis.test.plot_tests.test_plotting.TestPlotVisual.test_iris_many_lines": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "cis.cis_main.plot_cmd",
    "cis.parse.parse_args",
    "escape_colons"
   ]
  },
  "type": "function"
 },
 "cis.test.plot_tests.test_plotting.TestPlotVisual.test_iris_one_line": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "cis.cis_main.plot_cmd",
    "cis.parse.parse_args",
    "escape_colons"
   ]
  },
  "type": "function"
 },
 "cis.test.plot_tests.test_plotting.TestPlotVisual.test_iris_one_line_with_step": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "cis.cis_main.plot_cmd",
    "cis.parse.parse_args",
    "escape_colons"
   ]
  },
  "type": "function"
 },
 "cis.test.plot_tests.test_plotting.TestPlotVisual.test_iris_scatter": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "cis.cis_main.plot_cmd",
    "cis.parse.parse_args",
    "escape_colons"
   ]
  },
  "type": "function"
 },
 "cis.test.plot_tests.test_plotting.TestPlotVisual.test_iris_scatter2d": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "cis.cis_main.plot_cmd",
    "cis.parse.parse_args",
    "escape_colons"
   ]
  },
  "type": "function"
 },
 "cis.test.plot_tests.test_plotting.TestPlotVisual.test_iris_scatter2d_overlay": {
  "data": {
   "lineno": 625,
   "symbols_in_volume": [
    "cis.cis_main.plot_cmd",
    "cis.parse.parse_args",
    "escape_colons"
   ]
  },
  "type": "function"
 },
 "cis.test.plot_tests.test_plotting.TestPlotVisual.test_mercator_projection": {
  "data": {
   "lineno": 660,
   "symbols_in_volume": [
    "cis.cis_main.plot_cmd",
    "cis.parse.parse_args",
    "escape_colons"
   ]
  },
  "type": "function"
 },
 "cis.test.plot_tests.test_plotting.TestPlotVisual.test_multiple_time_series_default_axes": {
  "data": {
   "lineno": 694,
   "symbols_in_volume": [
    "cis.cis_main.plot_cmd",
    "cis.parse.parse_args",
    "escape_colons"
   ]
  },
  "type": "function"
 },
 "cis.test.plot_tests.test_plotting.TestPlotVisual.test_multiple_time_series_default_axes_files_with_named_xaxis": {
  "data": {
   "lineno": 723,
   "symbols_in_volume": [
    "cis.cis_main.plot_cmd",
    "cis.parse.parse_args",
    "escape_colons"
   ]
  },
  "type": "function"
 },
 "cis.test.plot_tests.test_plotting.TestPlotVisual.test_multiple_time_series_incompatible_axes": {
  "data": {
   "lineno": 708,
   "symbols_in_volume": [
    "cis.cis_main.plot_cmd",
    "cis.parse.parse_args",
    "escape_colons"
   ]
  },
  "type": "function"
 },
 "cis.test.plot_tests.test_plotting.TestPlotVisual.test_other_comparative_scatter": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "cis.cis_main.plot_cmd",
    "cis.parse.parse_args",
    "escape_colons"
   ]
  },
  "type": "function"
 },
 "cis.test.plot_tests.test_plotting.TestPlotVisual.test_other_contour": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "cis.cis_main.plot_cmd",
    "cis.parse.parse_args",
    "escape_colons"
   ]
  },
  "type": "function"
 },
 "cis.test.plot_tests.test_plotting.TestPlotVisual.test_other_contourf": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "cis.cis_main.plot_cmd",
    "cis.parse.parse_args",
    "escape_colons"
   ]
  },
  "type": "function"
 },
 "cis.test.plot_tests.test_plotting.TestPlotVisual.test_other_histogram": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "cis.cis_main.plot_cmd",
    "cis.parse.parse_args",
    "escape_colons"
   ]
  },
  "type": "function"
 },
 "cis.test.plot_tests.test_plotting.TestPlotVisual.test_other_histogram2d": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": [
    "cis.cis_main.plot_cmd",
    "cis.parse.parse_args",
    "escape_colons"
   ]
  },
  "type": "function"
 },
 "cis.test.plot_tests.test_plotting.TestPlotVisual.test_other_histogram2d_doesnt_plot_coastlines": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": [
    "cis.cis_main.plot_cmd",
    "cis.parse.parse_args",
    "escape_colons"
   ]
  },
  "type": "function"
 },
 "cis.test.plot_tests.test_plotting.TestPlotVisual.test_other_histogram_bin_width": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": [
    "cis.cis_main.plot_cmd",
    "cis.parse.parse_args",
    "escape_colons"
   ]
  },
  "type": "function"
 },
 "cis.test.plot_tests.test_plotting.TestPlotVisual.test_other_longitude_wrapping_0_360": {
  "data": {
   "lineno": 413,
   "symbols_in_volume": [
    "cis.plotting.formatted_plot.Plotter",
    "cis.test.util.mock.make_regular_2d_ungridded_data"
   ]
  },
  "type": "function"
 },
 "cis.test.plot_tests.test_plotting.TestPlotVisual.test_other_longitude_wrapping_0_360_forced_minus_180_to_180": {
  "data": {
   "lineno": 427,
   "symbols_in_volume": [
    "cis.plotting.formatted_plot.Plotter",
    "cis.test.util.mock.make_regular_2d_ungridded_data"
   ]
  },
  "type": "function"
 },
 "cis.test.plot_tests.test_plotting.TestPlotVisual.test_other_longitude_wrapping_minus_180_180": {
  "data": {
   "lineno": 441,
   "symbols_in_volume": [
    "cis.plotting.formatted_plot.Plotter",
    "cis.test.util.mock.make_regular_2d_ungridded_data"
   ]
  },
  "type": "function"
 },
 "cis.test.plot_tests.test_plotting.TestPlotVisual.test_other_longitude_wrapping_minus_180_180_forced_0_to_360": {
  "data": {
   "lineno": 455,
   "symbols_in_volume": [
    "cis.plotting.formatted_plot.Plotter",
    "cis.test.util.mock.make_regular_2d_ungridded_data",
    "unittest.skip"
   ]
  },
  "type": "function"
 },
 "cis.test.plot_tests.test_plotting.TestPlotVisual.test_other_longitude_wrapping_multiple_ranges_forced_0_to_360": {
  "data": {
   "lineno": 512,
   "symbols_in_volume": [
    "cis.plotting.formatted_plot.Plotter",
    "cis.test.util.mock.make_regular_2d_ungridded_data",
    "unittest.skip"
   ]
  },
  "type": "function"
 },
 "cis.test.plot_tests.test_plotting.TestPlotVisual.test_other_longitude_wrapping_multiple_ranges_forced_minus_180_to_180": {
  "data": {
   "lineno": 529,
   "symbols_in_volume": [
    "cis.plotting.formatted_plot.Plotter",
    "cis.test.util.mock.make_regular_2d_ungridded_data"
   ]
  },
  "type": "function"
 },
 "cis.test.plot_tests.test_plotting.TestPlotVisual.test_other_many_lines": {
  "data": {
   "lineno": 368,
   "symbols_in_volume": [
    "cis.cis_main.plot_cmd",
    "cis.parse.parse_args",
    "escape_colons"
   ]
  },
  "type": "function"
 },
 "cis.test.plot_tests.test_plotting.TestPlotVisual.test_other_many_scatter_points": {
  "data": {
   "lineno": 346,
   "symbols_in_volume": [
    "cis.cis_main.plot_cmd",
    "cis.parse.parse_args",
    "escape_colons"
   ]
  },
  "type": "function"
 },
 "cis.test.plot_tests.test_plotting.TestPlotVisual.test_other_many_scatter_points_given_color": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "cis.cis_main.plot_cmd",
    "cis.parse.parse_args",
    "escape_colons"
   ]
  },
  "type": "function"
 },
 "cis.test.plot_tests.test_plotting.TestPlotVisual.test_other_one_line": {
  "data": {
   "lineno": 380,
   "symbols_in_volume": [
    "cis.cis_main.plot_cmd",
    "cis.parse.parse_args",
    "escape_colons"
   ]
  },
  "type": "function"
 },
 "cis.test.plot_tests.test_plotting.TestPlotVisual.test_other_scatter": {
  "data": {
   "lineno": 391,
   "symbols_in_volume": [
    "cis.cis_main.plot_cmd",
    "cis.parse.parse_args",
    "escape_colons"
   ]
  },
  "type": "function"
 },
 "cis.test.plot_tests.test_plotting.TestPlotVisual.test_other_scatter2d": {
  "data": {
   "lineno": 402,
   "symbols_in_volume": [
    "cis.cis_main.plot_cmd",
    "cis.parse.parse_args",
    "escape_colons"
   ]
  },
  "type": "function"
 },
 "cis.test.plot_tests.test_plotting.TestPlotVisual.test_other_taylor_diagram": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "cis.cis_main.plot_cmd",
    "cis.parse.parse_args",
    "escape_colons"
   ]
  },
  "type": "function"
 },
 "cis.test.plot_tests.test_plotting.TestPlotVisual.test_plotting_heatmap_of_aggregated_ungridded_data": {
  "data": {
   "lineno": 736,
   "symbols_in_volume": [
    "cis.cis_main.plot_cmd",
    "cis.parse.parse_args",
    "escape_colons",
    "make_pathname"
   ]
  },
  "type": "function"
 },
 "cis.test.plot_tests.test_plotting.TestPlotVisual.test_polar_projection": {
  "data": {
   "lineno": 649,
   "symbols_in_volume": [
    "cis.cis_main.plot_cmd",
    "cis.parse.parse_args",
    "escape_colons"
   ]
  },
  "type": "function"
 },
 "cis.test.plot_tests.test_plotting.TestPlotVisual.test_scatter2d_over_contour": {
  "data": {
   "lineno": 612,
   "symbols_in_volume": [
    "cis.cis_main.plot_cmd",
    "cis.parse.parse_args",
    "escape_colons"
   ]
  },
  "type": "function"
 },
 "cis.test.plot_tests.test_plotting.TestPlotVisual.test_setting_xrange_using_datetimes": {
  "data": {
   "lineno": 672,
   "symbols_in_volume": [
    "cis.cis_main.plot_cmd",
    "cis.parse.parse_args",
    "escape_colons"
   ]
  },
  "type": "function"
 },
 "cis.test.plot_tests.test_plotting.TestPlotVisual.test_transparent_contour_over_bluemarble": {
  "data": {
   "lineno": 569,
   "symbols_in_volume": [
    "cis.cis_main.plot_cmd",
    "cis.parse.parse_args",
    "escape_colons",
    "unittest.skip"
   ]
  },
  "type": "function"
 },
 "cis.test.plot_tests.test_plotting.UngriddedDataList": {
  "data": {
   "shadows": "cis.data_io.ungridded_data.UngriddedDataList"
  },
  "type": "import"
 },
 "cis.test.plot_tests.test_plotting.VisualTest": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "cis.test.integration.base_integration_test.BaseIntegrationTest"
   ]
  },
  "type": "class"
 },
 "cis.test.plot_tests.test_plotting.VisualTest.check_graphic": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "IOError",
    "OSError",
    "ValueError",
    "cis.test.plot_tests.test_plotting._DISPLAY_FIGURES",
    "cis.test.plot_tests.test_plotting.logging",
    "cis.test.plot_tests.test_plotting.shutil",
    "matplotlib.pyplot.close",
    "matplotlib.pyplot.gcf",
    "matplotlib.pyplot.show",
    "matplotlib.testing.compare.compare_images",
    "matplotlib.testing.compare.make_test_filename",
    "print"
   ]
  },
  "type": "function"
 },
 "cis.test.plot_tests.test_plotting.VisualTest.id": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "cis.test.plot_tests.test_plotting.VisualTest",
    "super"
   ]
  },
  "type": "function"
 },
 "cis.test.plot_tests.test_plotting.VisualTest.setUp": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "cis.test.plot_tests.test_plotting._DISPLAY_FIGURES",
    "matplotlib.pyplot.close"
   ]
  },
  "type": "function"
 },
 "cis.test.plot_tests.test_plotting.VisualTest.tearDown": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "cis.test.plot_tests.test_plotting._DISPLAY_FIGURES",
    "matplotlib.pyplot.close"
   ]
  },
  "type": "function"
 },
 "cis.test.plot_tests.test_plotting._DISPLAY_FIGURES": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "cis.test.plot_tests.test_plotting.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "cis.test.plot_tests.test_plotting.ccrs": {
  "data": {
   "shadows": "cartopy.crs"
  },
  "type": "import"
 },
 "cis.test.plot_tests.test_plotting.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "cis.test.plot_tests.test_plotting.make_dummy_ungridded_data_time_series": {
  "data": {
   "shadows": "cis.test.util.mock.make_dummy_ungridded_data_time_series"
  },
  "type": "import"
 },
 "cis.test.plot_tests.test_plotting.make_mock_cube": {
  "data": {
   "shadows": "cis.test.util.mock.make_mock_cube"
  },
  "type": "import"
 },
 "cis.test.plot_tests.test_plotting.make_regular_2d_ungridded_data": {
  "data": {
   "shadows": "cis.test.util.mock.make_regular_2d_ungridded_data"
  },
  "type": "import"
 },
 "cis.test.plot_tests.test_plotting.mcompare": {
  "data": {
   "shadows": "matplotlib.testing.compare"
  },
  "type": "import"
 },
 "cis.test.plot_tests.test_plotting.parse_args": {
  "data": {
   "shadows": "cis.parse.parse_args"
  },
  "type": "import"
 },
 "cis.test.plot_tests.test_plotting.plot_cmd": {
  "data": {
   "shadows": "cis.cis_main.plot_cmd"
  },
  "type": "import"
 },
 "cis.test.plot_tests.test_plotting.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "cis.test.plot_tests.test_plotting.raises": {
  "data": {
   "shadows": "nose.tools.raises"
  },
  "type": "import"
 },
 "cis.test.plot_tests.test_plotting.read_data": {
  "data": {
   "shadows": "cis.read_data"
  },
  "type": "import"
 },
 "cis.test.plot_tests.test_plotting.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "cis.test.plot_tests.test_plotting.skip": {
  "data": {
   "shadows": "unittest.skip"
  },
  "type": "import"
 },
 "cis.test.runner": {
  "data": {},
  "type": "module"
 },
 "cis.test.runner.TestCommand": {
  "data": {
   "shadows": "setuptools.command.test.test"
  },
  "type": "import"
 },
 "cis.test.runner.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "cis.test.runner.multiprocessing": {
  "data": {
   "shadows": "multiprocessing"
  },
  "type": "import"
 },
 "cis.test.runner.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "cis.test.runner.nose_test": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "setuptools.command.test.test"
   ]
  },
  "type": "class"
 },
 "cis.test.runner.nose_test.finalize_options": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "cis.test.runner.multiprocessing",
    "int",
    "setuptools.command.test.test.finalize_options"
   ]
  },
  "type": "function"
 },
 "cis.test.runner.nose_test.initialize_options": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "setuptools.command.test.test.initialize_options"
   ]
  },
  "type": "function"
 },
 "cis.test.runner.nose_test.run_tests": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "cis.test.runner.run"
   ]
  },
  "type": "function"
 },
 "cis.test.runner.run": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "cis.test.runner.logging",
    "cis.test.runner.nose",
    "cis.test.runner.sys"
   ]
  },
  "type": "function"
 },
 "cis.test.runner.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "cis.test.unit": {
  "data": {
   "symbols_in_volume": [
    "cis.test.unit.matplotlib"
   ]
  },
  "type": "module"
 },
 "cis.test.unit.aggregation": {
  "data": {},
  "type": "module"
 },
 "cis.test.unit.aggregation.test_aggregation_kernels": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "cis.test.unit.aggregation.test_aggregation_kernels.unittest"
   ]
  },
  "type": "module"
 },
 "cis.test.unit.aggregation.test_aggregation_kernels.CountKernel": {
  "data": {
   "shadows": "cis.aggregation.collapse_kernels.CountKernel"
  },
  "type": "import"
 },
 "cis.test.unit.aggregation.test_aggregation_kernels.TestCountKernel": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "cis.test.unit.aggregation.test_aggregation_kernels.unittest"
   ]
  },
  "type": "class"
 },
 "cis.test.unit.aggregation.test_aggregation_kernels.TestCountKernel.test_GIVEN_missing_data_WHEN_count_THEN_calculation_correct": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "assert_that",
    "cis.aggregation.collapse_kernels.CountKernel",
    "cis.test.util.mock.make_5x3_lon_lat_2d_cube_with_missing_data"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.aggregation.test_aggregation_kernels.TestMomentsKernel": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "cis.test.unit.aggregation.test_aggregation_kernels.unittest"
   ]
  },
  "type": "class"
 },
 "cis.test.unit.aggregation.test_aggregation_kernels.TestMomentsKernel.test_GIVEN_grid_contains_single_points_WHEN_collapse_THEN_stddev_undefined": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "assert_that",
    "cis.aggregation.collapse_kernels.aggregation_kernels",
    "cis.data_io.gridded_data.make_from_cube",
    "cis.test.util.mock.make_mock_cube",
    "float"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.aggregation.test_aggregation_kernels.TestMomentsKernel.test_GIVEN_gridded_data_WHEN_full_collapse_THEN_calculations_correct": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "assert_that",
    "cis.aggregation.collapse_kernels.aggregation_kernels",
    "cis.data_io.gridded_data.make_from_cube",
    "cis.test.util.mock.make_mock_cube",
    "is_",
    "len"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.aggregation.test_aggregation_kernels.TestMomentsKernel.test_GIVEN_gridded_data_WHEN_full_collapse_THEN_metadata_correct": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "assert_that",
    "cis.aggregation.collapse_kernels.aggregation_kernels",
    "cis.data_io.gridded_data.make_from_cube",
    "cis.test.util.mock.make_mock_cube",
    "is_"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.aggregation.test_aggregation_kernels.TestMomentsKernel.test_GIVEN_ungridded_data_WHEN_collapse_THEN_calculations_correct": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "assert_arrays_almost_equal",
    "assert_that",
    "cis.collocation.col_framework.get_kernel",
    "cis.test.util.mock.make_regular_2d_ungridded_data",
    "is_",
    "kernel_class",
    "len",
    "slice"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.aggregation.test_aggregation_kernels.TestMomentsKernel.test_GIVEN_ungridded_data_WHEN_collapse_THEN_metadata_correct": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "assert_that",
    "cis.collocation.col_framework.get_kernel",
    "cis.test.util.mock.make_regular_2d_ungridded_data",
    "is_",
    "kernel_class",
    "slice"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.aggregation.test_aggregation_kernels.aggregation_kernels": {
  "data": {
   "shadows": "cis.aggregation.collapse_kernels.aggregation_kernels"
  },
  "type": "import"
 },
 "cis.test.unit.aggregation.test_aggregation_kernels.get_kernel": {
  "data": {
   "shadows": "cis.collocation.col_framework.get_kernel"
  },
  "type": "import"
 },
 "cis.test.unit.aggregation.test_aggregation_kernels.make_from_cube": {
  "data": {
   "shadows": "cis.data_io.gridded_data.make_from_cube"
  },
  "type": "import"
 },
 "cis.test.unit.aggregation.test_aggregation_kernels.mock": {
  "data": {
   "shadows": "cis.test.util.mock"
  },
  "type": "import"
 },
 "cis.test.unit.aggregation.test_aggregation_kernels.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "cis.test.unit.aggregation.test_gridded_aggregation": {
  "data": {},
  "type": "module"
 },
 "cis.test.unit.aggregation.test_gridded_aggregation.CountKernel": {
  "data": {
   "shadows": "cis.aggregation.collapse_kernels.CountKernel"
  },
  "type": "import"
 },
 "cis.test.unit.aggregation.test_gridded_aggregation.GriddedCollapsor": {
  "data": {
   "shadows": "cis.aggregation.gridded_collapsor.GriddedCollapsor"
  },
  "type": "import"
 },
 "cis.test.unit.aggregation.test_gridded_aggregation.GriddedDataList": {
  "data": {
   "shadows": "cis.data_io.gridded_data.GriddedDataList"
  },
  "type": "import"
 },
 "cis.test.unit.aggregation.test_gridded_aggregation.MultiKernel": {
  "data": {
   "shadows": "cis.aggregation.collapse_kernels.MultiKernel"
  },
  "type": "import"
 },
 "cis.test.unit.aggregation.test_gridded_aggregation.StddevKernel": {
  "data": {
   "shadows": "cis.aggregation.collapse_kernels.StddevKernel"
  },
  "type": "import"
 },
 "cis.test.unit.aggregation.test_gridded_aggregation.TestCase": {
  "data": {
   "shadows": "unittest.TestCase"
  },
  "type": "import"
 },
 "cis.test.unit.aggregation.test_gridded_aggregation.TestGriddedCollapse": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "unittest.TestCase"
   ]
  },
  "type": "class"
 },
 "cis.test.unit.aggregation.test_gridded_aggregation.TestGriddedCollapse.setUp": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "cis.data_io.gridded_data.make_from_cube",
    "make_mock_cube"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.aggregation.test_gridded_aggregation.TestGriddedCollapse.test_aggregating_using_max_kernel_returns_maximums": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "assert_arrays_almost_equal",
    "nose.tools.istest"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.aggregation.test_gridded_aggregation.TestGriddedCollapse.test_aggregating_using_min_kernel_returns_minimums": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "assert_arrays_almost_equal",
    "nose.tools.istest"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.aggregation.test_gridded_aggregation.TestGriddedCollapse.test_aggregating_using_std_dev_kernel_returns_sample_standard_deviation": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "assert_arrays_almost_equal",
    "nose.tools.istest"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.aggregation.test_gridded_aggregation.TestGriddedCollapse.test_aggregation_on_three_dimensional_grid_with_time": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "assert_arrays_almost_equal",
    "cis.data_io.gridded_data.make_from_cube",
    "make_mock_cube",
    "nose.tools.istest"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.aggregation.test_gridded_aggregation.TestGriddedCollapse.test_aggregation_over_multidimensional_coord": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "assert_arrays_almost_equal",
    "cis.data_io.gridded_data.make_from_cube",
    "make_mock_cube"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.aggregation.test_gridded_aggregation.TestGriddedCollapse.test_calc_new_dims": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "cis.aggregation.gridded_collapsor.GriddedCollapsor._calc_new_dims",
    "nose.tools.eq_"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.aggregation.test_gridded_aggregation.TestGriddedCollapse.test_can_name_variables_by_standard_name": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "assert_arrays_almost_equal",
    "nose.tools.istest"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.aggregation.test_gridded_aggregation.TestGriddedCollapse.test_can_name_variables_by_variable_name": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "assert_arrays_almost_equal",
    "nose.tools.istest"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.aggregation.test_gridded_aggregation.TestGriddedCollapse.test_collapsing_coordinate_collapses_coordinate": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "assert_arrays_almost_equal",
    "nose.tools.istest"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.aggregation.test_gridded_aggregation.TestGriddedCollapse.test_collapsing_coordinate_takes_start_end_but_ignores_them": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "assert_arrays_almost_equal",
    "nose.tools.istest"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.aggregation.test_gridded_aggregation.TestGriddedCollapse.test_collapsing_everything_returns_a_single_value": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "assert_arrays_almost_equal",
    "nose.tools.istest"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.aggregation.test_gridded_aggregation.TestGriddedCollapse.test_collapsing_everything_returns_a_single_value_with_missing_values": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "cis.data_io.gridded_data.make_from_cube",
    "make_5x3_lon_lat_2d_cube_with_missing_data",
    "nose.tools.istest"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.aggregation.test_gridded_aggregation.TestGriddedCollapse.test_partial_aggregation_over_more_than_one_dim_on_multidimensional_coord": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "assert_arrays_almost_equal",
    "cis.data_io.gridded_data.make_from_cube",
    "make_mock_cube"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.aggregation.test_gridded_aggregation.TestGriddedCollapse.test_partial_aggregation_over_more_than_one_multidimensional_coord": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "assert_arrays_almost_equal",
    "cis.data_io.gridded_data.make_from_cube",
    "make_mock_cube"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.aggregation.test_gridded_aggregation.TestGriddedCollapse.test_partial_aggregation_over_multidimensional_coord": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "assert_arrays_almost_equal",
    "cis.data_io.gridded_data.make_from_cube",
    "make_mock_cube"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.aggregation.test_gridded_aggregation.TestGriddedCollapse.test_partial_aggregation_over_multidimensional_coord_along_middle_of_cube": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "assert_arrays_almost_equal",
    "cis.data_io.gridded_data.make_from_cube",
    "make_mock_cube"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.aggregation.test_gridded_aggregation.TestGriddedCollapse.test_partial_aggregation_over_multidimensional_coord_with_multi_kernel": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "assert_arrays_almost_equal",
    "cis.aggregation.collapse_kernels.CountKernel",
    "cis.aggregation.collapse_kernels.MultiKernel",
    "cis.aggregation.collapse_kernels.StddevKernel",
    "cis.data_io.gridded_data.make_from_cube",
    "make_mock_cube"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.aggregation.test_gridded_aggregation.TestGriddedListAggregation": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": [
    "unittest.TestCase"
   ]
  },
  "type": "class"
 },
 "cis.test.unit.aggregation.test_gridded_aggregation.TestGriddedListAggregation.setUp": {
  "data": {
   "lineno": 315
  },
  "type": "function"
 },
 "cis.test.unit.aggregation.test_gridded_aggregation.TestGriddedListAggregation.test_aggregate_mean": {
  "data": {
   "lineno": 375,
   "symbols_in_volume": [
    "assert_arrays_almost_equal",
    "cis.data_io.gridded_data.GriddedDataList",
    "cis.data_io.gridded_data.make_from_cube",
    "isinstance",
    "make_mock_cube"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.aggregation.test_gridded_aggregation.TestGriddedListAggregation.test_collapse_coordinate": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": [
    "assert_arrays_almost_equal",
    "cis.data_io.gridded_data.GriddedDataList",
    "cis.data_io.gridded_data.make_from_cube",
    "isinstance",
    "make_mock_cube"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.aggregation.test_gridded_aggregation.TestGriddedListAggregation.test_collapse_vertical_coordinate": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": [
    "assert_arrays_almost_equal",
    "cis.data_io.gridded_data.GriddedDataList",
    "cis.data_io.gridded_data.make_from_cube",
    "isinstance",
    "make_mock_cube"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.aggregation.test_gridded_aggregation.TestGriddedListAggregation.test_collapse_vertical_coordinate_weighted_aggregator": {
  "data": {
   "lineno": 354,
   "symbols_in_volume": [
    "assert_arrays_almost_equal",
    "cis.data_io.gridded_data.GriddedDataList",
    "cis.data_io.gridded_data.make_from_cube",
    "isinstance",
    "make_mock_cube"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.aggregation.test_gridded_aggregation.TestGriddedListAggregation.test_complete_collapse_one_dim_using_moments_kernel": {
  "data": {
   "lineno": 392,
   "symbols_in_volume": [
    "assert_arrays_almost_equal",
    "cis.aggregation.collapse_kernels.aggregation_kernels",
    "cis.data_io.gridded_data.GriddedDataList",
    "cis.data_io.gridded_data.make_from_cube",
    "isinstance",
    "len",
    "make_5x3_lon_lat_2d_cube_with_missing_data"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.aggregation.test_gridded_aggregation.TestGriddedListAggregation.test_complete_collapse_two_dims_using_moments_kernel": {
  "data": {
   "lineno": 423,
   "symbols_in_volume": [
    "cis.aggregation.collapse_kernels.aggregation_kernels",
    "cis.data_io.gridded_data.GriddedDataList",
    "cis.data_io.gridded_data.make_from_cube",
    "isinstance",
    "len",
    "make_5x3_lon_lat_2d_cube_with_missing_data"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.aggregation.test_gridded_aggregation.TestGriddedListAggregation.test_partial_aggregation_over_more_than_one_dim_on_multidimensional_coord": {
  "data": {
   "lineno": 454,
   "symbols_in_volume": [
    "assert_arrays_almost_equal",
    "cis.data_io.gridded_data.GriddedDataList",
    "cis.data_io.gridded_data.make_from_cube",
    "make_mock_cube"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.aggregation.test_gridded_aggregation.aggregation_kernels": {
  "data": {
   "shadows": "cis.aggregation.collapse_kernels.aggregation_kernels"
  },
  "type": "import"
 },
 "cis.test.unit.aggregation.test_gridded_aggregation.eq_": {
  "data": {
   "shadows": "nose.tools.eq_"
  },
  "type": "import"
 },
 "cis.test.unit.aggregation.test_gridded_aggregation.iris.analysis": {
  "data": {
   "shadows": "iris.analysis"
  },
  "type": "import"
 },
 "cis.test.unit.aggregation.test_gridded_aggregation.istest": {
  "data": {
   "shadows": "nose.tools.istest"
  },
  "type": "import"
 },
 "cis.test.unit.aggregation.test_gridded_aggregation.make_from_cube": {
  "data": {
   "shadows": "cis.data_io.gridded_data.make_from_cube"
  },
  "type": "import"
 },
 "cis.test.unit.aggregation.test_ungridded_aggregation": {
  "data": {},
  "type": "module"
 },
 "cis.test.unit.aggregation.test_ungridded_aggregation.GriddedDataList": {
  "data": {
   "shadows": "cis.data_io.gridded_data.GriddedDataList"
  },
  "type": "import"
 },
 "cis.test.unit.aggregation.test_ungridded_aggregation.PartialDateTime": {
  "data": {
   "shadows": "cis.time_util.PartialDateTime"
  },
  "type": "import"
 },
 "cis.test.unit.aggregation.test_ungridded_aggregation.TestCase": {
  "data": {
   "shadows": "unittest.TestCase"
  },
  "type": "import"
 },
 "cis.test.unit.aggregation.test_ungridded_aggregation.TestUngriddedAggregation": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "unittest.TestCase"
   ]
  },
  "type": "class"
 },
 "cis.test.unit.aggregation.test_ungridded_aggregation.TestUngriddedAggregation.setUp": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.mean"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.aggregation.test_ungridded_aggregation.TestUngriddedAggregation.test_aggregating_coord_to_length_one_with_explicit_bounds_gets_output_as_length_one": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "assert_that",
    "is_",
    "make_regular_2d_ungridded_data",
    "slice"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.aggregation.test_ungridded_aggregation.TestUngriddedAggregation.test_aggregating_defaults": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "assert_arrays_almost_equal",
    "make_regular_2d_ungridded_data",
    "nose.tools.istest",
    "slice"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.aggregation.test_ungridded_aggregation.TestUngriddedAggregation.test_aggregating_edge_cases": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "assert_arrays_almost_equal",
    "make_regular_2d_ungridded_data",
    "nose.tools.istest",
    "slice"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.aggregation.test_ungridded_aggregation.TestUngriddedAggregation.test_aggregating_on_grid_0_to_360_when_data_is_minus_180_to_180": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "assert_arrays_equal",
    "make_regular_2d_ungridded_data",
    "slice"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.aggregation.test_ungridded_aggregation.TestUngriddedAggregation.test_aggregating_on_grid_minus_180_to_180_when_data_is_0_to_360": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "assert_arrays_equal",
    "make_regular_2d_ungridded_data",
    "slice"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.aggregation.test_ungridded_aggregation.TestUngriddedAggregation.test_aggregating_over_time": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "assert_arrays_equal",
    "cis.time_util.cis_standard_time_unit.date2num",
    "datetime.datetime",
    "datetime.timedelta",
    "make_regular_2d_with_time_ungridded_data",
    "slice"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.aggregation.test_ungridded_aggregation.TestUngriddedAggregation.test_aggregating_over_time_with_default_times": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "assert_arrays_equal",
    "cis.time_util.cis_standard_time_unit.date2num",
    "datetime.datetime",
    "datetime.timedelta",
    "make_regular_2d_with_time_ungridded_data",
    "slice"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.aggregation.test_ungridded_aggregation.TestUngriddedAggregation.test_aggregating_over_time_with_partial_datetime": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": [
    "assert_arrays_almost_equal",
    "cis.time_util.PartialDateTime",
    "cis.time_util.cis_standard_time_unit.date2num",
    "datetime.datetime",
    "datetime.timedelta",
    "make_regular_2d_with_time_ungridded_data"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.aggregation.test_ungridded_aggregation.TestUngriddedAggregation.test_aggregating_simple_dataset_in_two_dimensions_with_missing_values": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "compare_masked_arrays",
    "float",
    "make_regular_2d_ungridded_data_with_missing_values",
    "nose.tools.istest",
    "slice"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.aggregation.test_ungridded_aggregation.TestUngriddedAggregation.test_aggregating_single_point_in_one_dimension": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "compare_masked_arrays",
    "float",
    "make_dummy_ungridded_data_single_point",
    "nose.tools.istest",
    "slice"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.aggregation.test_ungridded_aggregation.TestUngriddedAggregation.test_aggregating_single_point_in_one_dimension_lower_bound_edge_case": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "compare_masked_arrays",
    "float",
    "make_dummy_ungridded_data_single_point",
    "nose.tools.istest",
    "slice"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.aggregation.test_ungridded_aggregation.TestUngriddedAggregation.test_aggregating_single_point_in_one_dimension_upper_bound_edge_case": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "compare_masked_arrays",
    "float",
    "make_dummy_ungridded_data_single_point",
    "nose.tools.istest",
    "slice"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.aggregation.test_ungridded_aggregation.TestUngriddedAggregation.test_aggregating_to_length_one_with_explicit_bounds_get_correct_bounds": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": [
    "assert_arrays_equal",
    "make_regular_2d_ungridded_data",
    "slice"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.aggregation.test_ungridded_aggregation.TestUngriddedAggregation.test_aggregation_one_dim_using_moments_kernel": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "assert_arrays_almost_equal",
    "cis.data_io.gridded_data.GriddedDataList",
    "isinstance",
    "len",
    "make_regular_2d_ungridded_data_with_missing_values",
    "slice"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.aggregation.test_ungridded_aggregation.TestUngriddedAggregation.test_aggregation_two_dims_using_moments_kernel": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "assert_arrays_almost_equal",
    "cis.data_io.gridded_data.GriddedDataList",
    "isinstance",
    "len",
    "make_regular_2d_ungridded_data_with_missing_values",
    "slice"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.aggregation.test_ungridded_aggregation.TestUngriddedAggregation.test_can_name_variables_by_standard_name": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "compare_masked_arrays",
    "float",
    "make_dummy_ungridded_data_single_point",
    "nose.tools.istest",
    "slice"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.aggregation.test_ungridded_aggregation.TestUngriddedAggregation.test_collapsed_coords_get_max_min_bounds": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "assert_arrays_equal",
    "make_regular_2d_ungridded_data",
    "slice"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.aggregation.test_ungridded_aggregation.TestUngriddedAggregation.test_collapsed_coords_get_output_as_length_1": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "assert_that",
    "is_",
    "make_regular_2d_ungridded_data",
    "slice"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.aggregation.test_ungridded_aggregation.TestUngriddedAggregation.test_empty_step_raises_error": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": [
    "ValueError",
    "make_regular_2d_with_time_ungridded_data",
    "raises",
    "slice"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.aggregation.test_ungridded_aggregation.TestUngriddedAggregation.test_empty_step_raises_error_with_partial_datetime": {
  "data": {
   "lineno": 317,
   "symbols_in_volume": [
    "ValueError",
    "cis.time_util.PartialDateTime",
    "make_regular_2d_with_time_ungridded_data",
    "raises"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.aggregation.test_ungridded_aggregation.TestUngriddedAggregation.test_max_kernel_with_dataset_in_two_dimensions_with_missing_values": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.max",
    "compare_masked_arrays",
    "float",
    "make_regular_2d_ungridded_data_with_missing_values",
    "nose.tools.istest",
    "slice"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.aggregation.test_ungridded_aggregation.TestUngriddedAggregation.test_mean_kernel_with_dataset_in_two_dimensions_with_missing_values": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "compare_masked_arrays",
    "float",
    "make_regular_2d_ungridded_data_with_missing_values",
    "nose.tools.istest",
    "slice"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.aggregation.test_ungridded_aggregation.TestUngriddedAggregation.test_min_kernel_with_dataset_in_two_dimensions_with_missing_values": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.min",
    "compare_masked_arrays",
    "float",
    "make_regular_2d_ungridded_data_with_missing_values",
    "nose.tools.istest",
    "slice"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.aggregation.test_ungridded_aggregation.TestUngriddedAggregation.test_stddev_kernel_with_dataset_in_two_dimensions_with_missing_values": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.stddev",
    "compare_masked_arrays",
    "float",
    "make_regular_2d_ungridded_data_with_missing_values",
    "nose.tools.istest",
    "slice"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.aggregation.test_ungridded_aggregation.TestUngriddedListAggregation": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": [
    "unittest.TestCase"
   ]
  },
  "type": "class"
 },
 "cis.test.unit.aggregation.test_ungridded_aggregation.TestUngriddedListAggregation.setUp": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.mean"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.aggregation.test_ungridded_aggregation.TestUngriddedListAggregation.test_aggregating_list_of_datasets_over_two_dims": {
  "data": {
   "lineno": 335,
   "symbols_in_volume": [
    "cis.data_io.ungridded_data.UngriddedDataList",
    "compare_masked_arrays",
    "float",
    "len",
    "make_regular_2d_ungridded_data_with_missing_values",
    "nose.tools.istest",
    "slice"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.aggregation.test_ungridded_aggregation.TestUngriddedListAggregation.test_aggregating_list_of_datasets_over_two_dims_with_diff_masks": {
  "data": {
   "lineno": 422,
   "symbols_in_volume": [
    "cis.data_io.ungridded_data.UngriddedDataList",
    "compare_masked_arrays",
    "float",
    "len",
    "make_regular_2d_ungridded_data_with_missing_values",
    "nose.tools.istest",
    "print",
    "slice"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.aggregation.test_ungridded_aggregation.TestUngriddedListAggregation.test_aggregation_one_dim_using_moments_kernel": {
  "data": {
   "lineno": 359,
   "symbols_in_volume": [
    "assert_arrays_almost_equal",
    "cis.collocation.col_implementations.moments",
    "cis.data_io.gridded_data.GriddedDataList",
    "cis.data_io.ungridded_data.UngriddedDataList",
    "isinstance",
    "len",
    "make_regular_2d_ungridded_data_with_missing_values",
    "slice"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.aggregation.test_ungridded_aggregation.TestUngriddedListAggregation.test_aggregation_two_dims_using_moments_kernel": {
  "data": {
   "lineno": 390,
   "symbols_in_volume": [
    "assert_arrays_almost_equal",
    "cis.collocation.col_implementations.moments",
    "cis.data_io.gridded_data.GriddedDataList",
    "cis.data_io.ungridded_data.UngriddedDataList",
    "isinstance",
    "len",
    "make_regular_2d_ungridded_data_with_missing_values",
    "slice"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.aggregation.test_ungridded_aggregation.UngriddedDataList": {
  "data": {
   "shadows": "cis.data_io.ungridded_data.UngriddedDataList"
  },
  "type": "import"
 },
 "cis.test.unit.aggregation.test_ungridded_aggregation.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "cis.test.unit.aggregation.test_ungridded_aggregation.istest": {
  "data": {
   "shadows": "nose.tools.istest"
  },
  "type": "import"
 },
 "cis.test.unit.aggregation.test_ungridded_aggregation.max": {
  "data": {
   "shadows": "cis.collocation.col_implementations.max"
  },
  "type": "import"
 },
 "cis.test.unit.aggregation.test_ungridded_aggregation.mean": {
  "data": {
   "shadows": "cis.collocation.col_implementations.mean"
  },
  "type": "import"
 },
 "cis.test.unit.aggregation.test_ungridded_aggregation.min": {
  "data": {
   "shadows": "cis.collocation.col_implementations.min"
  },
  "type": "import"
 },
 "cis.test.unit.aggregation.test_ungridded_aggregation.moments": {
  "data": {
   "shadows": "cis.collocation.col_implementations.moments"
  },
  "type": "import"
 },
 "cis.test.unit.aggregation.test_ungridded_aggregation.stddev": {
  "data": {
   "shadows": "cis.collocation.col_implementations.stddev"
  },
  "type": "import"
 },
 "cis.test.unit.aggregation.test_ungridded_aggregation.timedelta": {
  "data": {
   "shadows": "datetime.timedelta"
  },
  "type": "import"
 },
 "cis.test.unit.aggregation.test_ungridded_aggregation.tunit": {
  "data": {
   "shadows": "cis.time_util.cis_standard_time_unit"
  },
  "type": "import"
 },
 "cis.test.unit.colocate": {
  "data": {},
  "type": "module"
 },
 "cis.test.unit.colocate.test_GridCellBinIndex": {
  "data": {},
  "type": "module"
 },
 "cis.test.unit.colocate.test_GridCellBinIndex.BinnedCubeCellOnlyConstraint": {
  "data": {
   "shadows": "cis.collocation.col_implementations.BinnedCubeCellOnlyConstraint"
  },
  "type": "import"
 },
 "cis.test.unit.colocate.test_GridCellBinIndex.HyperPoint": {
  "data": {
   "shadows": "cis.data_io.hyperpoint.HyperPoint"
  },
  "type": "import"
 },
 "cis.test.unit.colocate.test_GridCellBinIndex.TestGridCellBinIndex": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "cis.test.unit.colocate.test_GridCellBinIndex.unittest"
   ]
  },
  "type": "class"
 },
 "cis.test.unit.colocate.test_GridCellBinIndex.TestGridCellBinIndex.test_GIVEN_single_masked_point_in_cube_WHEN_iterate_THEN_return_no_points": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "NotImplementedError",
    "assert_that",
    "cis.collocation.col_implementations.BinnedCubeCellOnlyConstraint",
    "cis.collocation.col_implementations.make_coord_map",
    "cis.collocation.data_index.create_indexes",
    "is_",
    "len",
    "make_dummy_ungridded_data_single_point",
    "make_square_5x3_2d_cube_with_time"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_GridCellBinIndex.TestGridCellBinIndex.test_GIVEN_single_point_in_cube_WHEN_iterate_THEN_return_point_in_middle": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "NotImplementedError",
    "assert_that",
    "cis.collocation.col_implementations.BinnedCubeCellOnlyConstraint",
    "cis.collocation.col_implementations.make_coord_map",
    "cis.collocation.data_index.create_indexes",
    "cis.data_io.hyperpoint.HyperPoint",
    "cis.time_util.convert_datetime_to_std_time",
    "is_",
    "len",
    "make_dummy_ungridded_data_single_point",
    "make_square_5x3_2d_cube_with_time"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_GridCellBinIndex.convert_datetime_to_std_time": {
  "data": {
   "shadows": "cis.time_util.convert_datetime_to_std_time"
  },
  "type": "import"
 },
 "cis.test.unit.colocate.test_GridCellBinIndex.data_index": {
  "data": {
   "shadows": "cis.collocation.data_index"
  },
  "type": "import"
 },
 "cis.test.unit.colocate.test_GridCellBinIndex.make_coord_map": {
  "data": {
   "shadows": "cis.collocation.col_implementations.make_coord_map"
  },
  "type": "import"
 },
 "cis.test.unit.colocate.test_GridCellBinIndex.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "cis.test.unit.colocate.test_colocate": {
  "data": {},
  "type": "module"
 },
 "cis.test.unit.colocate.test_colocate.TestCollocate": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "cis.test.unit.colocate.test_colocate.unittest"
   ]
  },
  "type": "class"
 },
 "cis.test.unit.colocate.test_colocate.TestCollocate.test_get_kernel": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "ValueError",
    "cis.collocation.col.get_kernel",
    "cis.collocation.col_implementations.mean",
    "cis.collocation.col_implementations.moments",
    "cis.collocation.col_implementations.nn_pressure",
    "isinstance",
    "nose.tools.assert_raises"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_colocate.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "cis.test.unit.colocate.test_colocate.get_kernel": {
  "data": {
   "shadows": "cis.collocation.col.get_kernel"
  },
  "type": "import"
 },
 "cis.test.unit.colocate.test_colocate.mean": {
  "data": {
   "shadows": "cis.collocation.col_implementations.mean"
  },
  "type": "import"
 },
 "cis.test.unit.colocate.test_colocate.moments": {
  "data": {
   "shadows": "cis.collocation.col_implementations.moments"
  },
  "type": "import"
 },
 "cis.test.unit.colocate.test_colocate.nn_pressure": {
  "data": {
   "shadows": "cis.collocation.col_implementations.nn_pressure"
  },
  "type": "import"
 },
 "cis.test.unit.colocate.test_colocate.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "cis.test.unit.colocate.test_constraint": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "cis.test.unit.colocate.test_constraint.unittest"
   ]
  },
  "type": "module"
 },
 "cis.test.unit.colocate.test_constraint.HyperPoint": {
  "data": {
   "shadows": "cis.data_io.hyperpoint.HyperPoint"
  },
  "type": "import"
 },
 "cis.test.unit.colocate.test_constraint.SepConstraint": {
  "data": {
   "shadows": "cis.collocation.col_implementations.SepConstraint"
  },
  "type": "import"
 },
 "cis.test.unit.colocate.test_constraint.TestSepConstraint": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "cis.test.unit.colocate.test_constraint.unittest"
   ]
  },
  "type": "class"
 },
 "cis.test.unit.colocate.test_constraint.TestSepConstraint.test_all_constraint_in_4d": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.SepConstraint",
    "cis.data_io.hyperpoint.HyperPoint",
    "cis.test.util.mock.make_regular_4d_ungridded_data",
    "datetime.datetime",
    "nose.tools.eq_",
    "numpy.array",
    "numpy.equal"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_constraint.TestSepConstraint.test_alt_constraint_in_4d": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.SepConstraint",
    "cis.data_io.hyperpoint.HyperPoint",
    "cis.test.util.mock.make_regular_4d_ungridded_data",
    "datetime.datetime",
    "nose.tools.eq_",
    "numpy.array",
    "numpy.equal"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_constraint.TestSepConstraint.test_horizontal_constraint_in_4d": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.SepConstraint",
    "cis.data_io.hyperpoint.HyperPoint",
    "cis.test.util.mock.make_regular_4d_ungridded_data",
    "datetime.datetime",
    "nose.tools.eq_",
    "numpy.arange",
    "numpy.equal",
    "numpy.reshape"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_constraint.TestSepConstraint.test_pressure_constraint_in_4d": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.SepConstraint",
    "cis.data_io.hyperpoint.HyperPoint",
    "cis.test.util.mock.make_regular_4d_ungridded_data",
    "datetime.datetime",
    "nose.tools.eq_",
    "numpy.array",
    "numpy.equal"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_constraint.TestSepConstraint.test_time_constraint_in_4d": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.SepConstraint",
    "cis.data_io.hyperpoint.HyperPoint",
    "cis.test.util.mock.make_regular_4d_ungridded_data",
    "datetime.datetime",
    "nose.tools.eq_",
    "numpy.arange",
    "numpy.equal",
    "numpy.reshape"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_constraint.dt": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "cis.test.unit.colocate.test_constraint.eq_": {
  "data": {
   "shadows": "nose.tools.eq_"
  },
  "type": "import"
 },
 "cis.test.unit.colocate.test_constraint.mock": {
  "data": {
   "shadows": "cis.test.util.mock"
  },
  "type": "import"
 },
 "cis.test.unit.colocate.test_constraint.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "cis.test.unit.colocate.test_constraint.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "cis.test.unit.colocate.test_dummy_col": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "cis.test.unit.colocate.test_dummy_col.unittest"
   ]
  },
  "type": "module"
 },
 "cis.test.unit.colocate.test_dummy_col.DummyCollocator": {
  "data": {
   "shadows": "cis.collocation.col_implementations.DummyCollocator"
  },
  "type": "import"
 },
 "cis.test.unit.colocate.test_dummy_col.TestDummyCollocator": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "cis.test.unit.colocate.test_dummy_col.unittest"
   ]
  },
  "type": "class"
 },
 "cis.test.unit.colocate.test_dummy_col.TestDummyCollocator.test_list_of_data": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.DummyCollocator",
    "cis.data_io.ungridded_data.UngriddedDataList",
    "cis.test.unit.colocate.test_dummy_col.numpy",
    "cis.test.util.mock.make_regular_2d_ungridded_data",
    "len"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_dummy_col.TestDummyCollocator.test_single_data": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.DummyCollocator",
    "cis.test.unit.colocate.test_dummy_col.numpy",
    "cis.test.util.mock.make_regular_2d_ungridded_data",
    "len"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_dummy_col.UngriddedDataList": {
  "data": {
   "shadows": "cis.data_io.ungridded_data.UngriddedDataList"
  },
  "type": "import"
 },
 "cis.test.unit.colocate.test_dummy_col.mock": {
  "data": {
   "shadows": "cis.test.util.mock"
  },
  "type": "import"
 },
 "cis.test.unit.colocate.test_dummy_col.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "cis.test.unit.colocate.test_dummy_col.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "cis.test.unit.colocate.test_general_gridded_col": {
  "data": {},
  "type": "module"
 },
 "cis.test.unit.colocate.test_general_gridded_col.BinnedCubeCellOnlyConstraint": {
  "data": {
   "shadows": "cis.collocation.col_implementations.BinnedCubeCellOnlyConstraint"
  },
  "type": "import"
 },
 "cis.test.unit.colocate.test_general_gridded_col.BinningCubeCellConstraint": {
  "data": {
   "shadows": "cis.collocation.col_implementations.BinningCubeCellConstraint"
  },
  "type": "import"
 },
 "cis.test.unit.colocate.test_general_gridded_col.CubeCellConstraint": {
  "data": {
   "shadows": "cis.collocation.col_implementations.CubeCellConstraint"
  },
  "type": "import"
 },
 "cis.test.unit.colocate.test_general_gridded_col.FastMean": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "cis.test.unit.colocate.test_general_gridded_col.FastMean.__init__": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.mean"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_general_gridded_col.FastMean.get_value_for_data_only": {
  "data": {
   "lineno": 27
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_general_gridded_col.FastMean.get_variable_details": {
  "data": {
   "lineno": 30
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_general_gridded_col.FastMoments": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "cis.test.unit.colocate.test_general_gridded_col.FastMoments.__init__": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.moments"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_general_gridded_col.FastMoments.get_value_for_data_only": {
  "data": {
   "lineno": 53
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_general_gridded_col.FastMoments.get_variable_details": {
  "data": {
   "lineno": 56
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_general_gridded_col.GeneralGriddedCollocator": {
  "data": {
   "shadows": "cis.collocation.col_implementations.GeneralGriddedCollocator"
  },
  "type": "import"
 },
 "cis.test.unit.colocate.test_general_gridded_col.GriddedDataList": {
  "data": {
   "shadows": "cis.data_io.gridded_data.GriddedDataList"
  },
  "type": "import"
 },
 "cis.test.unit.colocate.test_general_gridded_col.SlowMean": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "cis.test.unit.colocate.test_general_gridded_col.SlowMean.__init__": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.mean"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_general_gridded_col.SlowMean.get_value": {
  "data": {
   "lineno": 40
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_general_gridded_col.SlowMean.get_variable_details": {
  "data": {
   "lineno": 43
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_general_gridded_col.SlowMoments": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "cis.test.unit.colocate.test_general_gridded_col.SlowMoments.__init__": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.moments"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_general_gridded_col.SlowMoments.get_value": {
  "data": {
   "lineno": 66
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_general_gridded_col.SlowMoments.get_variable_details": {
  "data": {
   "lineno": 69
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_general_gridded_col.TestGeneralGriddedCollocator": {
  "data": {
   "lineno": 496,
   "symbols_in_volume": [
    "cis.test.unit.colocate.test_general_gridded_col.unittest"
   ]
  },
  "type": "class"
 },
 "cis.test.unit.colocate.test_general_gridded_col.TestGeneralGriddedCollocator.test_can_collocate_list_of_data": {
  "data": {
   "lineno": 972,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.BinningCubeCellConstraint",
    "cis.test.unit.colocate.test_general_gridded_col.SlowMean",
    "cis.test.unit.colocate.test_general_gridded_col.can_collocate_list_of_data"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_general_gridded_col.TestGeneralGriddedCollocator.test_can_collocate_list_of_data_binned_only_con": {
  "data": {
   "lineno": 978,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.BinnedCubeCellOnlyConstraint",
    "cis.test.unit.colocate.test_general_gridded_col.SlowMean",
    "cis.test.unit.colocate.test_general_gridded_col.can_collocate_list_of_data"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_general_gridded_col.TestGeneralGriddedCollocator.test_can_collocate_list_of_data_binned_only_con_fast_mean": {
  "data": {
   "lineno": 984,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.BinnedCubeCellOnlyConstraint",
    "cis.test.unit.colocate.test_general_gridded_col.FastMean",
    "cis.test.unit.colocate.test_general_gridded_col.can_collocate_list_of_data"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_general_gridded_col.TestGeneralGriddedCollocator.test_data_with_no_standard_name": {
  "data": {
   "lineno": 939,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.CubeCellConstraint",
    "cis.collocation.col_implementations.GeneralGriddedCollocator",
    "cis.test.unit.colocate.test_general_gridded_col.SlowMean",
    "cis.test.util.mock.make_dummy_1d_ungridded_data",
    "cis.test.util.mock.make_mock_cube"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_general_gridded_col.TestGeneralGriddedCollocator.test_fill_value_for_cube_cell_constraint": {
  "data": {
   "lineno": 497,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.CubeCellConstraint",
    "cis.collocation.col_implementations.GeneralGriddedCollocator",
    "cis.test.unit.colocate.test_general_gridded_col.SlowMean",
    "cis.test.unit.colocate.test_general_gridded_col.numpy",
    "cis.test.util.mock.make_dummy_ungridded_data_single_point",
    "cis.test.util.mock.make_mock_cube"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_general_gridded_col.TestGeneralGriddedCollocator.test_fill_value_for_cube_cell_constraint_default_fill_value": {
  "data": {
   "lineno": 514,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.CubeCellConstraint",
    "cis.collocation.col_implementations.GeneralGriddedCollocator",
    "cis.test.unit.colocate.test_general_gridded_col.SlowMean",
    "cis.test.unit.colocate.test_general_gridded_col.numpy",
    "cis.test.util.mock.make_dummy_ungridded_data_single_point",
    "cis.test.util.mock.make_mock_cube",
    "float"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_general_gridded_col.TestGeneralGriddedCollocator.test_gridded_gridded_bin_when_grids_have_different_dims_order": {
  "data": {
   "lineno": 1026,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.BinningCubeCellConstraint",
    "cis.collocation.col_implementations.GeneralGriddedCollocator",
    "cis.collocation.col_implementations.mean",
    "cis.data_io.gridded_data.make_from_cube",
    "cis.test.util.mock.make_mock_cube"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_general_gridded_col.TestGeneralGriddedCollocator.test_gridded_gridded_bin_when_grids_have_different_dims_order_2": {
  "data": {
   "lineno": 1039,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.BinningCubeCellConstraint",
    "cis.collocation.col_implementations.GeneralGriddedCollocator",
    "cis.collocation.col_implementations.mean",
    "cis.data_io.gridded_data.make_from_cube",
    "cis.test.util.mock.make_mock_cube"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_general_gridded_col.TestGeneralGriddedCollocator.test_gridded_gridded_bin_when_sample_has_dimension_data_doesnt": {
  "data": {
   "lineno": 1052,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.BinningCubeCellConstraint",
    "cis.collocation.col_implementations.GeneralGriddedCollocator",
    "cis.collocation.col_implementations.mean",
    "cis.data_io.gridded_data.make_from_cube",
    "cis.test.util.mock.make_mock_cube"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_general_gridded_col.TestGeneralGriddedCollocator.test_list_moments": {
  "data": {
   "lineno": 1008,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.BinningCubeCellConstraint",
    "cis.collocation.col_implementations.moments",
    "cis.test.unit.colocate.test_general_gridded_col.list_moments"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_general_gridded_col.TestGeneralGriddedCollocator.test_list_moments_binned_only_con": {
  "data": {
   "lineno": 1014,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.BinnedCubeCellOnlyConstraint",
    "cis.test.unit.colocate.test_general_gridded_col.SlowMoments",
    "cis.test.unit.colocate.test_general_gridded_col.list_moments"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_general_gridded_col.TestGeneralGriddedCollocator.test_list_moments_binned_only_con_fast_moment": {
  "data": {
   "lineno": 1020,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.BinnedCubeCellOnlyConstraint",
    "cis.test.unit.colocate.test_general_gridded_col.FastMoments",
    "cis.test.unit.colocate.test_general_gridded_col.list_moments"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_general_gridded_col.TestGeneralGriddedCollocator.test_multiple_points_inside_grid_and_outside_using_binned_only": {
  "data": {
   "lineno": 758,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.BinnedCubeCellOnlyConstraint",
    "cis.test.unit.colocate.test_general_gridded_col.SlowMean",
    "cis.test.unit.colocate.test_general_gridded_col.multiple_points_inside_grid_and_outside"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_general_gridded_col.TestGeneralGriddedCollocator.test_multiple_points_inside_grid_and_outside_using_binning": {
  "data": {
   "lineno": 764,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.BinningCubeCellConstraint",
    "cis.test.unit.colocate.test_general_gridded_col.SlowMean",
    "cis.test.unit.colocate.test_general_gridded_col.multiple_points_inside_grid_and_outside"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_general_gridded_col.TestGeneralGriddedCollocator.test_multiple_points_inside_grid_and_outside_using_binning_fast_mean": {
  "data": {
   "lineno": 770,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.BinnedCubeCellOnlyConstraint",
    "cis.test.unit.colocate.test_general_gridded_col.FastMean",
    "cis.test.unit.colocate.test_general_gridded_col.multiple_points_inside_grid_and_outside"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_general_gridded_col.TestGeneralGriddedCollocator.test_point_on_180_is_included_in_lower_bound_binned_only": {
  "data": {
   "lineno": 658,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.BinnedCubeCellOnlyConstraint",
    "cis.test.unit.colocate.test_general_gridded_col.SlowMean",
    "cis.test.unit.colocate.test_general_gridded_col.point_on_180_is_included_in_lower_bound"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_general_gridded_col.TestGeneralGriddedCollocator.test_point_on_180_is_included_in_lower_bound_binned_only_fast_mean": {
  "data": {
   "lineno": 664,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.BinnedCubeCellOnlyConstraint",
    "cis.test.unit.colocate.test_general_gridded_col.FastMean",
    "cis.test.unit.colocate.test_general_gridded_col.point_on_180_is_included_in_lower_bound"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_general_gridded_col.TestGeneralGriddedCollocator.test_point_on_a_lat_boundary_appears_in_higher_cell": {
  "data": {
   "lineno": 610,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.CubeCellConstraint",
    "cis.test.unit.colocate.test_general_gridded_col.SlowMean",
    "cis.test.unit.colocate.test_general_gridded_col.point_on_a_lat_boundary_appears_in_higher_cell"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_general_gridded_col.TestGeneralGriddedCollocator.test_point_on_a_lat_boundary_appears_in_higher_cell_using_binned_only": {
  "data": {
   "lineno": 622,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.BinnedCubeCellOnlyConstraint",
    "cis.test.unit.colocate.test_general_gridded_col.SlowMean",
    "cis.test.unit.colocate.test_general_gridded_col.point_on_a_lat_boundary_appears_in_higher_cell"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_general_gridded_col.TestGeneralGriddedCollocator.test_point_on_a_lat_boundary_appears_in_higher_cell_using_binned_only_fast_mean": {
  "data": {
   "lineno": 628,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.BinnedCubeCellOnlyConstraint",
    "cis.test.unit.colocate.test_general_gridded_col.FastMean",
    "cis.test.unit.colocate.test_general_gridded_col.point_on_a_lat_boundary_appears_in_higher_cell"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_general_gridded_col.TestGeneralGriddedCollocator.test_point_on_a_lat_boundary_appears_in_higher_cell_using_binning": {
  "data": {
   "lineno": 616,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.BinningCubeCellConstraint",
    "cis.test.unit.colocate.test_general_gridded_col.SlowMean",
    "cis.test.unit.colocate.test_general_gridded_col.point_on_a_lat_boundary_appears_in_higher_cell"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_general_gridded_col.TestGeneralGriddedCollocator.test_point_on_a_lat_lon_boundary_appears_in_highest_cell": {
  "data": {
   "lineno": 691,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.CubeCellConstraint",
    "cis.test.unit.colocate.test_general_gridded_col.SlowMean",
    "cis.test.unit.colocate.test_general_gridded_col.point_on_a_lat_lon_boundary_appears_in_highest_cell"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_general_gridded_col.TestGeneralGriddedCollocator.test_point_on_a_lat_lon_boundary_appears_in_highest_cell_using_binned_only": {
  "data": {
   "lineno": 704,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.BinnedCubeCellOnlyConstraint",
    "cis.test.unit.colocate.test_general_gridded_col.SlowMean",
    "cis.test.unit.colocate.test_general_gridded_col.point_on_a_lat_lon_boundary_appears_in_highest_cell"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_general_gridded_col.TestGeneralGriddedCollocator.test_point_on_a_lat_lon_boundary_appears_in_highest_cell_using_binned_only_fast_mean": {
  "data": {
   "lineno": 710,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.BinnedCubeCellOnlyConstraint",
    "cis.test.unit.colocate.test_general_gridded_col.FastMean",
    "cis.test.unit.colocate.test_general_gridded_col.point_on_a_lat_lon_boundary_appears_in_highest_cell"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_general_gridded_col.TestGeneralGriddedCollocator.test_point_on_a_lat_lon_boundary_appears_in_highest_cell_using_binning": {
  "data": {
   "lineno": 698,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.BinningCubeCellConstraint",
    "cis.test.unit.colocate.test_general_gridded_col.SlowMean",
    "cis.test.unit.colocate.test_general_gridded_col.point_on_a_lat_lon_boundary_appears_in_highest_cell"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_general_gridded_col.TestGeneralGriddedCollocator.test_point_on_a_lon_boundary_appears_in_higher_cell": {
  "data": {
   "lineno": 670,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.CubeCellConstraint",
    "cis.test.unit.colocate.test_general_gridded_col.SlowMean",
    "cis.test.unit.colocate.test_general_gridded_col.point_on_a_lon_boundary_appears_in_higher_cell"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_general_gridded_col.TestGeneralGriddedCollocator.test_point_on_a_lon_boundary_appears_in_higher_cell_using_binned_only": {
  "data": {
   "lineno": 681,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.BinnedCubeCellOnlyConstraint",
    "cis.test.unit.colocate.test_general_gridded_col.SlowMean",
    "cis.test.unit.colocate.test_general_gridded_col.point_on_a_lon_boundary_appears_in_higher_cell"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_general_gridded_col.TestGeneralGriddedCollocator.test_point_on_a_lon_boundary_appears_in_higher_cell_using_binned_only_fast_mean": {
  "data": {
   "lineno": 686,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.BinnedCubeCellOnlyConstraint",
    "cis.test.unit.colocate.test_general_gridded_col.FastMean",
    "cis.test.unit.colocate.test_general_gridded_col.point_on_a_lon_boundary_appears_in_higher_cell"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_general_gridded_col.TestGeneralGriddedCollocator.test_point_on_a_lon_boundary_appears_in_higher_cell_using_binning": {
  "data": {
   "lineno": 676,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.BinningCubeCellConstraint",
    "cis.test.unit.colocate.test_general_gridded_col.SlowMean",
    "cis.test.unit.colocate.test_general_gridded_col.point_on_a_lon_boundary_appears_in_higher_cell"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_general_gridded_col.TestGeneralGriddedCollocator.test_point_on_highest_lat_boundary_is_excluded": {
  "data": {
   "lineno": 634,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.CubeCellConstraint",
    "cis.test.unit.colocate.test_general_gridded_col.SlowMean",
    "cis.test.unit.colocate.test_general_gridded_col.point_on_highest_lat_boundary_is_excluded"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_general_gridded_col.TestGeneralGriddedCollocator.test_point_on_highest_lat_boundary_is_excluded_binned_only": {
  "data": {
   "lineno": 646,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.BinnedCubeCellOnlyConstraint",
    "cis.test.unit.colocate.test_general_gridded_col.SlowMean",
    "cis.test.unit.colocate.test_general_gridded_col.point_on_highest_lat_boundary_is_excluded"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_general_gridded_col.TestGeneralGriddedCollocator.test_point_on_highest_lat_boundary_is_excluded_binned_only_fast_mean": {
  "data": {
   "lineno": 652,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.BinnedCubeCellOnlyConstraint",
    "cis.test.unit.colocate.test_general_gridded_col.FastMean",
    "cis.test.unit.colocate.test_general_gridded_col.point_on_highest_lat_boundary_is_excluded"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_general_gridded_col.TestGeneralGriddedCollocator.test_point_on_highest_lat_boundary_is_excluded_binning": {
  "data": {
   "lineno": 640,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.BinningCubeCellConstraint",
    "cis.test.unit.colocate.test_general_gridded_col.SlowMean",
    "cis.test.unit.colocate.test_general_gridded_col.point_on_highest_lat_boundary_is_excluded"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_general_gridded_col.TestGeneralGriddedCollocator.test_single_masked_point_results_in_single_value_in_cell_using_kernel_and_con": {
  "data": {
   "lineno": 553,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.BinnedCubeCellOnlyConstraint",
    "cis.test.unit.colocate.test_general_gridded_col.SlowMean",
    "cis.test.unit.colocate.test_general_gridded_col.single_masked_point_results_in_single_value_in_cell_using_kernel_and_con"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_general_gridded_col.TestGeneralGriddedCollocator.test_single_masked_point_results_in_single_value_in_cell_using_kernel_and_con_binned": {
  "data": {
   "lineno": 558,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.BinnedCubeCellOnlyConstraint",
    "cis.test.unit.colocate.test_general_gridded_col.SlowMean",
    "cis.test.unit.colocate.test_general_gridded_col.single_masked_point_results_in_single_value_in_cell_using_kernel_and_con"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_general_gridded_col.TestGeneralGriddedCollocator.test_single_moments": {
  "data": {
   "lineno": 990,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.BinningCubeCellConstraint",
    "cis.collocation.col_implementations.moments",
    "cis.test.unit.colocate.test_general_gridded_col.single_moments"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_general_gridded_col.TestGeneralGriddedCollocator.test_single_moments_binned_only_con": {
  "data": {
   "lineno": 996,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.BinnedCubeCellOnlyConstraint",
    "cis.test.unit.colocate.test_general_gridded_col.SlowMoments",
    "cis.test.unit.colocate.test_general_gridded_col.single_moments"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_general_gridded_col.TestGeneralGriddedCollocator.test_single_moments_binned_only_con_fast_moment": {
  "data": {
   "lineno": 1002,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.BinnedCubeCellOnlyConstraint",
    "cis.test.unit.colocate.test_general_gridded_col.FastMoments",
    "cis.test.unit.colocate.test_general_gridded_col.single_moments"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_general_gridded_col.TestGeneralGriddedCollocator.test_single_point_gives_single_val_in_cell_w_no_time_with_cube_w_time_and_missing_samples_THEN_error": {
  "data": {
   "lineno": 800,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.BinningCubeCellConstraint",
    "cis.test.unit.colocate.test_general_gridded_col.SlowMean",
    "cis.test.unit.colocate.test_general_gridded_col.single_point_gives_single_val_in_cell_w_no_time_with_cube_w_time_and_missing_samples_THEN_error"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_general_gridded_col.TestGeneralGriddedCollocator.test_single_point_gives_single_val_in_masked_cell_using_fast_kernel_and_con_missing_for_masked_true_binned_only": {
  "data": {
   "lineno": 583,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.BinnedCubeCellOnlyConstraint",
    "cis.test.unit.colocate.test_general_gridded_col.FastMean",
    "cis.test.unit.colocate.test_general_gridded_col.single_point_results_in_single_value_in_masked_cell_using_kernel_and_con_missing_for_masked_true"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_general_gridded_col.TestGeneralGriddedCollocator.test_single_point_gives_single_value_in_masked_cell_using_kernel_and_con_missing_for_masked_true_binned_only": {
  "data": {
   "lineno": 575,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.BinnedCubeCellOnlyConstraint",
    "cis.collocation.col_implementations.max",
    "cis.test.unit.colocate.test_general_gridded_col.single_point_results_in_single_value_in_masked_cell_using_kernel_and_con_missing_for_masked_true"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_general_gridded_col.TestGeneralGriddedCollocator.test_single_point_on_grid_corner_is_counted_once": {
  "data": {
   "lineno": 776,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.CubeCellConstraint",
    "cis.test.unit.colocate.test_general_gridded_col.SlowMean",
    "cis.test.unit.colocate.test_general_gridded_col.single_point_on_grid_corner_is_counted_once"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_general_gridded_col.TestGeneralGriddedCollocator.test_single_point_on_grid_corner_is_counted_once_using_bined_only": {
  "data": {
   "lineno": 788,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.BinnedCubeCellOnlyConstraint",
    "cis.test.unit.colocate.test_general_gridded_col.SlowMean",
    "cis.test.unit.colocate.test_general_gridded_col.single_point_on_grid_corner_is_counted_once"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_general_gridded_col.TestGeneralGriddedCollocator.test_single_point_on_grid_corner_is_counted_once_using_bined_only_fast": {
  "data": {
   "lineno": 794,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.BinnedCubeCellOnlyConstraint",
    "cis.test.unit.colocate.test_general_gridded_col.FastMean",
    "cis.test.unit.colocate.test_general_gridded_col.single_point_on_grid_corner_is_counted_once"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_general_gridded_col.TestGeneralGriddedCollocator.test_single_point_on_grid_corner_is_counted_once_using_binning": {
  "data": {
   "lineno": 782,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.BinningCubeCellConstraint",
    "cis.test.unit.colocate.test_general_gridded_col.SlowMean",
    "cis.test.unit.colocate.test_general_gridded_col.single_point_on_grid_corner_is_counted_once"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_general_gridded_col.TestGeneralGriddedCollocator.test_single_point_outside_grid_and_one_inside_excludes_outside_using_binned_only": {
  "data": {
   "lineno": 746,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.BinnedCubeCellOnlyConstraint",
    "cis.test.unit.colocate.test_general_gridded_col.SlowMean",
    "cis.test.unit.colocate.test_general_gridded_col.single_point_outside_grid_and_one_inside_excludes_outside_using_binned_only"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_general_gridded_col.TestGeneralGriddedCollocator.test_single_point_outside_grid_and_one_inside_excludes_outside_using_binned_only_fast_mean": {
  "data": {
   "lineno": 752,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.BinnedCubeCellOnlyConstraint",
    "cis.test.unit.colocate.test_general_gridded_col.FastMean",
    "cis.test.unit.colocate.test_general_gridded_col.single_point_outside_grid_and_one_inside_excludes_outside_using_binned_only"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_general_gridded_col.TestGeneralGriddedCollocator.test_single_point_outside_grid_and_one_inside_excludes_outside_using_binning": {
  "data": {
   "lineno": 740,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.BinningCubeCellConstraint",
    "cis.test.unit.colocate.test_general_gridded_col.SlowMean",
    "cis.test.unit.colocate.test_general_gridded_col.single_point_outside_grid_and_one_inside_excludes_outside_using_binned_only"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_general_gridded_col.TestGeneralGriddedCollocator.test_single_point_outside_grid_is_excluded": {
  "data": {
   "lineno": 716,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.CubeCellConstraint",
    "cis.test.unit.colocate.test_general_gridded_col.SlowMean",
    "cis.test.unit.colocate.test_general_gridded_col.single_point_outside_grid_is_excluded"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_general_gridded_col.TestGeneralGriddedCollocator.test_single_point_outside_grid_is_excluded_using_binned_only": {
  "data": {
   "lineno": 728,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.BinnedCubeCellOnlyConstraint",
    "cis.test.unit.colocate.test_general_gridded_col.SlowMean",
    "cis.test.unit.colocate.test_general_gridded_col.single_point_outside_grid_is_excluded"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_general_gridded_col.TestGeneralGriddedCollocator.test_single_point_outside_grid_is_excluded_using_binned_only_fast": {
  "data": {
   "lineno": 734,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.BinnedCubeCellOnlyConstraint",
    "cis.test.unit.colocate.test_general_gridded_col.FastMean",
    "cis.test.unit.colocate.test_general_gridded_col.single_point_outside_grid_is_excluded"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_general_gridded_col.TestGeneralGriddedCollocator.test_single_point_outside_grid_is_excluded_using_binning": {
  "data": {
   "lineno": 722,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.BinningCubeCellConstraint",
    "cis.test.unit.colocate.test_general_gridded_col.SlowMean",
    "cis.test.unit.colocate.test_general_gridded_col.single_point_outside_grid_is_excluded"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_general_gridded_col.TestGeneralGriddedCollocator.test_single_point_results_in_single_val_in_cell_with_altitude_with_cube_with_no_altitude_binned_only_fast_mean": {
  "data": {
   "lineno": 854,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.BinnedCubeCellOnlyConstraint",
    "cis.test.unit.colocate.test_general_gridded_col.FastMean",
    "cis.test.unit.colocate.test_general_gridded_col.single_point_results_in_single_value_in_cell_with_altitude_with_cube_with_no_altitude"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_general_gridded_col.TestGeneralGriddedCollocator.test_single_point_results_in_single_val_in_cell_with_no_altitude_with_cube_with_altitude_binned_only_fast_mean": {
  "data": {
   "lineno": 872,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.BinnedCubeCellOnlyConstraint",
    "cis.test.unit.colocate.test_general_gridded_col.FastMean",
    "cis.test.unit.colocate.test_general_gridded_col.single_point_results_in_single_value_in_cell_with_no_altitude_with_cube_with_altitude"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_general_gridded_col.TestGeneralGriddedCollocator.test_single_point_results_in_single_val_in_cell_with_no_pressure_with_cube_with_pressure_binned_only_fast_mean": {
  "data": {
   "lineno": 910,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.BinnedCubeCellOnlyConstraint",
    "cis.test.unit.colocate.test_general_gridded_col.FastMean",
    "cis.test.unit.colocate.test_general_gridded_col.single_point_results_in_single_value_in_cell_with_no_pressure_with_cube_with_pressure"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_general_gridded_col.TestGeneralGriddedCollocator.test_single_point_results_in_single_val_in_cell_with_time_on_boundary_with_cube_with_time_binned_only_fast_mean": {
  "data": {
   "lineno": 837,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.BinnedCubeCellOnlyConstraint",
    "cis.test.unit.colocate.test_general_gridded_col.FastMean",
    "cis.test.unit.colocate.test_general_gridded_col.single_point_results_in_single_value_in_cell_with_time_on_boundary_with_cube_with_time"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_general_gridded_col.TestGeneralGriddedCollocator.test_single_point_results_in_single_value_in_cell": {
  "data": {
   "lineno": 531,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.CubeCellConstraint",
    "cis.test.unit.colocate.test_general_gridded_col.SlowMean",
    "cis.test.unit.colocate.test_general_gridded_col.single_point_results_in_single_value_in_cell_using_kernel_and_con"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_general_gridded_col.TestGeneralGriddedCollocator.test_single_point_results_in_single_value_in_cell_using_binned_cells_only": {
  "data": {
   "lineno": 541,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.BinnedCubeCellOnlyConstraint",
    "cis.test.unit.colocate.test_general_gridded_col.SlowMean",
    "cis.test.unit.colocate.test_general_gridded_col.single_point_results_in_single_value_in_cell_using_kernel_and_con"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_general_gridded_col.TestGeneralGriddedCollocator.test_single_point_results_in_single_value_in_cell_using_binned_cells_only_and_fast_kernel": {
  "data": {
   "lineno": 547,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.BinnedCubeCellOnlyConstraint",
    "cis.test.unit.colocate.test_general_gridded_col.FastMean",
    "cis.test.unit.colocate.test_general_gridded_col.single_point_results_in_single_value_in_cell_using_kernel_and_con"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_general_gridded_col.TestGeneralGriddedCollocator.test_single_point_results_in_single_value_in_cell_using_binning": {
  "data": {
   "lineno": 536,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.BinningCubeCellConstraint",
    "cis.test.unit.colocate.test_general_gridded_col.SlowMean",
    "cis.test.unit.colocate.test_general_gridded_col.single_point_results_in_single_value_in_cell_using_kernel_and_con"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_general_gridded_col.TestGeneralGriddedCollocator.test_single_point_results_in_single_value_in_cell_with_altitude_with_cube_with_altitude": {
  "data": {
   "lineno": 879,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.BinningCubeCellConstraint",
    "cis.test.unit.colocate.test_general_gridded_col.SlowMean",
    "cis.test.unit.colocate.test_general_gridded_col.single_point_results_in_single_value_in_cell_with_altitude_with_cube_with_altitude"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_general_gridded_col.TestGeneralGriddedCollocator.test_single_point_results_in_single_value_in_cell_with_altitude_with_cube_with_altitude_binned_only": {
  "data": {
   "lineno": 885,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.BinnedCubeCellOnlyConstraint",
    "cis.test.unit.colocate.test_general_gridded_col.SlowMean",
    "cis.test.unit.colocate.test_general_gridded_col.single_point_results_in_single_value_in_cell_with_altitude_with_cube_with_altitude"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_general_gridded_col.TestGeneralGriddedCollocator.test_single_point_results_in_single_value_in_cell_with_altitude_with_cube_with_altitude_binned_only_fast_mean": {
  "data": {
   "lineno": 891,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.BinnedCubeCellOnlyConstraint",
    "cis.test.unit.colocate.test_general_gridded_col.FastMean",
    "cis.test.unit.colocate.test_general_gridded_col.single_point_results_in_single_value_in_cell_with_altitude_with_cube_with_altitude"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_general_gridded_col.TestGeneralGriddedCollocator.test_single_point_results_in_single_value_in_cell_with_altitude_with_cube_with_no_altitude": {
  "data": {
   "lineno": 844,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.BinningCubeCellConstraint",
    "cis.test.unit.colocate.test_general_gridded_col.SlowMean",
    "cis.test.unit.colocate.test_general_gridded_col.single_point_results_in_single_value_in_cell_with_altitude_with_cube_with_no_altitude"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_general_gridded_col.TestGeneralGriddedCollocator.test_single_point_results_in_single_value_in_cell_with_altitude_with_cube_with_no_altitude_binned_only": {
  "data": {
   "lineno": 849,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.BinnedCubeCellOnlyConstraint",
    "cis.test.unit.colocate.test_general_gridded_col.SlowMean",
    "cis.test.unit.colocate.test_general_gridded_col.single_point_results_in_single_value_in_cell_with_altitude_with_cube_with_no_altitude"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_general_gridded_col.TestGeneralGriddedCollocator.test_single_point_results_in_single_value_in_cell_with_decreasing_latitude": {
  "data": {
   "lineno": 948,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.CubeCellConstraint",
    "cis.test.unit.colocate.test_general_gridded_col.SlowMean",
    "cis.test.unit.colocate.test_general_gridded_col.single_point_results_in_single_value_in_cell_with_decreasing_latitude"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_general_gridded_col.TestGeneralGriddedCollocator.test_single_point_results_in_single_value_in_cell_with_decreasing_latitude_binned_only_con": {
  "data": {
   "lineno": 954,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.BinnedCubeCellOnlyConstraint",
    "cis.test.unit.colocate.test_general_gridded_col.SlowMean",
    "cis.test.unit.colocate.test_general_gridded_col.single_point_results_in_single_value_in_cell_with_decreasing_latitude"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_general_gridded_col.TestGeneralGriddedCollocator.test_single_point_results_in_single_value_in_cell_with_decreasing_latitude_using_binned_fast_mean": {
  "data": {
   "lineno": 966,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.BinnedCubeCellOnlyConstraint",
    "cis.test.unit.colocate.test_general_gridded_col.FastMean",
    "cis.test.unit.colocate.test_general_gridded_col.single_point_results_in_single_value_in_cell_with_decreasing_latitude"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_general_gridded_col.TestGeneralGriddedCollocator.test_single_point_results_in_single_value_in_cell_with_decreasing_latitude_using_binning": {
  "data": {
   "lineno": 960,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.BinningCubeCellConstraint",
    "cis.test.unit.colocate.test_general_gridded_col.SlowMean",
    "cis.test.unit.colocate.test_general_gridded_col.single_point_results_in_single_value_in_cell_with_decreasing_latitude"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_general_gridded_col.TestGeneralGriddedCollocator.test_single_point_results_in_single_value_in_cell_with_no_altitude_with_cube_with_altitude": {
  "data": {
   "lineno": 860,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.BinningCubeCellConstraint",
    "cis.test.unit.colocate.test_general_gridded_col.SlowMean",
    "cis.test.unit.colocate.test_general_gridded_col.single_point_results_in_single_value_in_cell_with_no_altitude_with_cube_with_altitude"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_general_gridded_col.TestGeneralGriddedCollocator.test_single_point_results_in_single_value_in_cell_with_no_altitude_with_cube_with_altitude_binned_only": {
  "data": {
   "lineno": 866,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.BinnedCubeCellOnlyConstraint",
    "cis.test.unit.colocate.test_general_gridded_col.SlowMean",
    "cis.test.unit.colocate.test_general_gridded_col.single_point_results_in_single_value_in_cell_with_no_altitude_with_cube_with_altitude"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_general_gridded_col.TestGeneralGriddedCollocator.test_single_point_results_in_single_value_in_cell_with_no_pressure_with_cube_with_pressure": {
  "data": {
   "lineno": 898,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.BinningCubeCellConstraint",
    "cis.test.unit.colocate.test_general_gridded_col.SlowMean",
    "cis.test.unit.colocate.test_general_gridded_col.single_point_results_in_single_value_in_cell_with_no_pressure_with_cube_with_pressure"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_general_gridded_col.TestGeneralGriddedCollocator.test_single_point_results_in_single_value_in_cell_with_no_pressure_with_cube_with_pressure_binned_only": {
  "data": {
   "lineno": 904,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.BinnedCubeCellOnlyConstraint",
    "cis.test.unit.colocate.test_general_gridded_col.SlowMean",
    "cis.test.unit.colocate.test_general_gridded_col.single_point_results_in_single_value_in_cell_with_no_pressure_with_cube_with_pressure"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_general_gridded_col.TestGeneralGriddedCollocator.test_single_point_results_in_single_value_in_cell_with_no_time_with_cube_with_time": {
  "data": {
   "lineno": 807,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.BinningCubeCellConstraint",
    "cis.test.unit.colocate.test_general_gridded_col.SlowMean",
    "cis.test.unit.colocate.test_general_gridded_col.single_point_results_in_single_value_in_cell_with_no_time_with_cube_with_time"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_general_gridded_col.TestGeneralGriddedCollocator.test_single_point_results_in_single_value_in_cell_with_no_time_with_cube_with_time_binned_only": {
  "data": {
   "lineno": 813,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.BinnedCubeCellOnlyConstraint",
    "cis.test.unit.colocate.test_general_gridded_col.SlowMean",
    "cis.test.unit.colocate.test_general_gridded_col.single_point_results_in_single_value_in_cell_with_no_time_with_cube_with_time"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_general_gridded_col.TestGeneralGriddedCollocator.test_single_point_results_in_single_value_in_cell_with_no_time_with_cube_with_time_binned_only_fast_mean": {
  "data": {
   "lineno": 819,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.BinnedCubeCellOnlyConstraint",
    "cis.test.unit.colocate.test_general_gridded_col.FastMean",
    "cis.test.unit.colocate.test_general_gridded_col.single_point_results_in_single_value_in_cell_with_no_time_with_cube_with_time"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_general_gridded_col.TestGeneralGriddedCollocator.test_single_point_results_in_single_value_in_cell_with_pressure_with_cube_with_pressure": {
  "data": {
   "lineno": 917,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.BinningCubeCellConstraint",
    "cis.test.unit.colocate.test_general_gridded_col.SlowMean",
    "cis.test.unit.colocate.test_general_gridded_col.single_point_results_in_single_value_in_cell_with_pressure_with_cube_with_pressure"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_general_gridded_col.TestGeneralGriddedCollocator.test_single_point_results_in_single_value_in_cell_with_pressure_with_cube_with_pressure_binned_only": {
  "data": {
   "lineno": 924,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.BinnedCubeCellOnlyConstraint",
    "cis.test.unit.colocate.test_general_gridded_col.SlowMean",
    "cis.test.unit.colocate.test_general_gridded_col.single_point_results_in_single_value_in_cell_with_pressure_with_cube_with_pressure"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_general_gridded_col.TestGeneralGriddedCollocator.test_single_point_results_in_single_value_in_cell_with_pressure_with_cube_with_pressure_binned_only_fast_mean": {
  "data": {
   "lineno": 931,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.BinnedCubeCellOnlyConstraint",
    "cis.test.unit.colocate.test_general_gridded_col.FastMean",
    "cis.test.unit.colocate.test_general_gridded_col.single_point_results_in_single_value_in_cell_with_pressure_with_cube_with_pressure"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_general_gridded_col.TestGeneralGriddedCollocator.test_single_point_results_in_single_value_in_cell_with_time_on_boundary_with_cube_with_time": {
  "data": {
   "lineno": 825,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.BinningCubeCellConstraint",
    "cis.test.unit.colocate.test_general_gridded_col.SlowMean",
    "cis.test.unit.colocate.test_general_gridded_col.single_point_results_in_single_value_in_cell_with_time_on_boundary_with_cube_with_time"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_general_gridded_col.TestGeneralGriddedCollocator.test_single_point_results_in_single_value_in_cell_with_time_on_boundary_with_cube_with_time_binned_only": {
  "data": {
   "lineno": 831,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.BinnedCubeCellOnlyConstraint",
    "cis.test.unit.colocate.test_general_gridded_col.SlowMean",
    "cis.test.unit.colocate.test_general_gridded_col.single_point_results_in_single_value_in_cell_with_time_on_boundary_with_cube_with_time"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_general_gridded_col.TestGeneralGriddedCollocator.test_single_point_results_in_single_value_in_masked_cell_using_fast_kernel_and_con_missing_for_masked_true": {
  "data": {
   "lineno": 569,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.BinningCubeCellConstraint",
    "cis.test.unit.colocate.test_general_gridded_col.SlowMean",
    "cis.test.unit.colocate.test_general_gridded_col.single_masked_point_results_in_single_value_in_cell_using_kernel_and_con"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_general_gridded_col.TestGeneralGriddedCollocator.test_single_point_results_in_single_value_in_masked_cell_using_kernel_and_con_missing_for_masked_true": {
  "data": {
   "lineno": 564,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.BinningCubeCellConstraint",
    "cis.test.unit.colocate.test_general_gridded_col.SlowMean",
    "cis.test.unit.colocate.test_general_gridded_col.single_masked_point_results_in_single_value_in_cell_using_kernel_and_con"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_general_gridded_col.TestGeneralGriddedCollocator.test_two_points_in_a_cell_results_in_fast_mean_value_in_cell_using_binned_cells_only": {
  "data": {
   "lineno": 605,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.BinnedCubeCellOnlyConstraint",
    "cis.test.unit.colocate.test_general_gridded_col.FastMean",
    "cis.test.unit.colocate.test_general_gridded_col.two_points_in_a_cell_results_in_mean_value_in_cell"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_general_gridded_col.TestGeneralGriddedCollocator.test_two_points_in_a_cell_results_in_mean_value_in_cell": {
  "data": {
   "lineno": 590,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.CubeCellConstraint",
    "cis.test.unit.colocate.test_general_gridded_col.SlowMean",
    "cis.test.unit.colocate.test_general_gridded_col.two_points_in_a_cell_results_in_mean_value_in_cell"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_general_gridded_col.TestGeneralGriddedCollocator.test_two_points_in_a_cell_results_in_mean_value_in_cell_using_binned_cells_only": {
  "data": {
   "lineno": 600,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.BinnedCubeCellOnlyConstraint",
    "cis.test.unit.colocate.test_general_gridded_col.SlowMean",
    "cis.test.unit.colocate.test_general_gridded_col.two_points_in_a_cell_results_in_mean_value_in_cell"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_general_gridded_col.TestGeneralGriddedCollocator.test_two_points_in_a_cell_results_in_mean_value_in_cell_using_binning": {
  "data": {
   "lineno": 595,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.BinningCubeCellConstraint",
    "cis.test.unit.colocate.test_general_gridded_col.SlowMean",
    "cis.test.unit.colocate.test_general_gridded_col.two_points_in_a_cell_results_in_mean_value_in_cell"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_general_gridded_col.UngriddedDataList": {
  "data": {
   "shadows": "cis.data_io.ungridded_data.UngriddedDataList"
  },
  "type": "import"
 },
 "cis.test.unit.colocate.test_general_gridded_col.UserPrintableException": {
  "data": {
   "shadows": "cis.exceptions.UserPrintableException"
  },
  "type": "import"
 },
 "cis.test.unit.colocate.test_general_gridded_col.assert_arrays_almost_equal": {
  "data": {
   "shadows": "cis.test.utils_for_testing.assert_arrays_almost_equal"
  },
  "type": "import"
 },
 "cis.test.unit.colocate.test_general_gridded_col.assert_arrays_equal": {
  "data": {
   "shadows": "cis.test.utils_for_testing.assert_arrays_equal"
  },
  "type": "import"
 },
 "cis.test.unit.colocate.test_general_gridded_col.can_collocate_list_of_data": {
  "data": {
   "lineno": 411,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.GeneralGriddedCollocator",
    "cis.data_io.ungridded_data.UngriddedDataList",
    "cis.test.unit.colocate.test_general_gridded_col.numpy",
    "cis.test.util.mock.make_regular_2d_ungridded_data",
    "cis.test.util.mock.make_square_5x3_2d_cube",
    "cis.test.utils_for_testing.assert_arrays_equal",
    "len"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_general_gridded_col.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "cis.test.unit.colocate.test_general_gridded_col.list_moments": {
  "data": {
   "lineno": 464,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.GeneralGriddedCollocator",
    "cis.data_io.ungridded_data.UngriddedDataList",
    "cis.test.unit.colocate.test_general_gridded_col.numpy",
    "cis.test.util.mock.make_regular_2d_ungridded_data",
    "cis.test.util.mock.make_square_5x3_2d_cube",
    "len"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_general_gridded_col.make_dummy_1d_ungridded_data": {
  "data": {
   "shadows": "cis.test.util.mock.make_dummy_1d_ungridded_data"
  },
  "type": "import"
 },
 "cis.test.unit.colocate.test_general_gridded_col.make_dummy_1d_ungridded_data_with_invalid_standard_name": {
  "data": {
   "shadows": "cis.test.util.mock.make_dummy_1d_ungridded_data_with_invalid_standard_name"
  },
  "type": "import"
 },
 "cis.test.unit.colocate.test_general_gridded_col.make_dummy_ungridded_data_single_point": {
  "data": {
   "shadows": "cis.test.util.mock.make_dummy_ungridded_data_single_point"
  },
  "type": "import"
 },
 "cis.test.unit.colocate.test_general_gridded_col.make_dummy_ungridded_data_two_points_with_different_values": {
  "data": {
   "shadows": "cis.test.util.mock.make_dummy_ungridded_data_two_points_with_different_values"
  },
  "type": "import"
 },
 "cis.test.unit.colocate.test_general_gridded_col.make_from_cube": {
  "data": {
   "shadows": "cis.data_io.gridded_data.make_from_cube"
  },
  "type": "import"
 },
 "cis.test.unit.colocate.test_general_gridded_col.make_mock_cube": {
  "data": {
   "shadows": "cis.test.util.mock.make_mock_cube"
  },
  "type": "import"
 },
 "cis.test.unit.colocate.test_general_gridded_col.make_regular_2d_ungridded_data": {
  "data": {
   "shadows": "cis.test.util.mock.make_regular_2d_ungridded_data"
  },
  "type": "import"
 },
 "cis.test.unit.colocate.test_general_gridded_col.make_square_5x3_2d_cube": {
  "data": {
   "shadows": "cis.test.util.mock.make_square_5x3_2d_cube"
  },
  "type": "import"
 },
 "cis.test.unit.colocate.test_general_gridded_col.make_square_5x3_2d_cube_with_altitude": {
  "data": {
   "shadows": "cis.test.util.mock.make_square_5x3_2d_cube_with_altitude"
  },
  "type": "import"
 },
 "cis.test.unit.colocate.test_general_gridded_col.make_square_5x3_2d_cube_with_decreasing_latitude": {
  "data": {
   "shadows": "cis.test.util.mock.make_square_5x3_2d_cube_with_decreasing_latitude"
  },
  "type": "import"
 },
 "cis.test.unit.colocate.test_general_gridded_col.make_square_5x3_2d_cube_with_extra_dim": {
  "data": {
   "shadows": "cis.test.util.mock.make_square_5x3_2d_cube_with_extra_dim"
  },
  "type": "import"
 },
 "cis.test.unit.colocate.test_general_gridded_col.make_square_5x3_2d_cube_with_pressure": {
  "data": {
   "shadows": "cis.test.util.mock.make_square_5x3_2d_cube_with_pressure"
  },
  "type": "import"
 },
 "cis.test.unit.colocate.test_general_gridded_col.make_square_5x3_2d_cube_with_time": {
  "data": {
   "shadows": "cis.test.util.mock.make_square_5x3_2d_cube_with_time"
  },
  "type": "import"
 },
 "cis.test.unit.colocate.test_general_gridded_col.make_square_NxM_2d_cube_with_time": {
  "data": {
   "shadows": "cis.test.util.mock.make_square_NxM_2d_cube_with_time"
  },
  "type": "import"
 },
 "cis.test.unit.colocate.test_general_gridded_col.max": {
  "data": {
   "shadows": "cis.collocation.col_implementations.max"
  },
  "type": "import"
 },
 "cis.test.unit.colocate.test_general_gridded_col.mean": {
  "data": {
   "shadows": "cis.collocation.col_implementations.mean"
  },
  "type": "import"
 },
 "cis.test.unit.colocate.test_general_gridded_col.moments": {
  "data": {
   "shadows": "cis.collocation.col_implementations.moments"
  },
  "type": "import"
 },
 "cis.test.unit.colocate.test_general_gridded_col.multiple_points_inside_grid_and_outside": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.GeneralGriddedCollocator",
    "cis.test.unit.colocate.test_general_gridded_col.numpy",
    "cis.test.util.mock.make_dummy_ungridded_data_single_point",
    "cis.test.util.mock.make_mock_cube",
    "cis.test.utils_for_testing.assert_arrays_equal"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_general_gridded_col.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "cis.test.unit.colocate.test_general_gridded_col.point_on_180_is_included_in_lower_bound": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.GeneralGriddedCollocator",
    "cis.test.unit.colocate.test_general_gridded_col.numpy",
    "cis.test.util.mock.make_dummy_ungridded_data_single_point",
    "cis.test.util.mock.make_square_NxM_2d_cube_with_time",
    "cis.test.utils_for_testing.assert_arrays_almost_equal"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_general_gridded_col.point_on_a_lat_boundary_appears_in_higher_cell": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.GeneralGriddedCollocator",
    "cis.test.unit.colocate.test_general_gridded_col.numpy",
    "cis.test.util.mock.make_dummy_ungridded_data_single_point",
    "cis.test.util.mock.make_mock_cube",
    "cis.test.utils_for_testing.assert_arrays_almost_equal"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_general_gridded_col.point_on_a_lat_lon_boundary_appears_in_highest_cell": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.GeneralGriddedCollocator",
    "cis.test.unit.colocate.test_general_gridded_col.numpy",
    "cis.test.util.mock.make_dummy_ungridded_data_single_point",
    "cis.test.util.mock.make_mock_cube",
    "cis.test.utils_for_testing.assert_arrays_almost_equal"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_general_gridded_col.point_on_a_lon_boundary_appears_in_higher_cell": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.GeneralGriddedCollocator",
    "cis.test.unit.colocate.test_general_gridded_col.numpy",
    "cis.test.util.mock.make_dummy_ungridded_data_single_point",
    "cis.test.util.mock.make_mock_cube",
    "cis.test.utils_for_testing.assert_arrays_almost_equal"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_general_gridded_col.point_on_highest_lat_boundary_is_excluded": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.GeneralGriddedCollocator",
    "cis.test.unit.colocate.test_general_gridded_col.numpy",
    "cis.test.util.mock.make_dummy_ungridded_data_single_point",
    "cis.test.util.mock.make_mock_cube",
    "cis.test.utils_for_testing.assert_arrays_almost_equal"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_general_gridded_col.single_masked_point_results_in_single_value_in_cell_using_kernel_and_con": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.GeneralGriddedCollocator",
    "cis.test.unit.colocate.test_general_gridded_col.numpy",
    "cis.test.util.mock.make_dummy_ungridded_data_single_point",
    "cis.test.util.mock.make_mock_cube",
    "cis.test.utils_for_testing.assert_arrays_equal"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_general_gridded_col.single_moments": {
  "data": {
   "lineno": 442,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.GeneralGriddedCollocator",
    "cis.data_io.gridded_data.GriddedDataList",
    "cis.test.unit.colocate.test_general_gridded_col.numpy",
    "cis.test.util.mock.make_regular_2d_ungridded_data",
    "cis.test.util.mock.make_square_5x3_2d_cube",
    "cis.test.utils_for_testing.assert_arrays_equal",
    "isinstance",
    "len"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_general_gridded_col.single_point_gives_single_val_in_cell_w_no_time_with_cube_w_time_and_missing_samples_THEN_error": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": [
    "assert_that",
    "calling",
    "cis.collocation.col_implementations.GeneralGriddedCollocator",
    "cis.exceptions.UserPrintableException",
    "cis.test.util.mock.make_dummy_ungridded_data_single_point",
    "cis.test.util.mock.make_square_5x3_2d_cube_with_time",
    "raises"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_general_gridded_col.single_point_on_grid_corner_is_counted_once": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.GeneralGriddedCollocator",
    "cis.test.unit.colocate.test_general_gridded_col.numpy",
    "cis.test.util.mock.make_dummy_ungridded_data_single_point",
    "cis.test.util.mock.make_mock_cube",
    "cis.test.utils_for_testing.assert_arrays_equal"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_general_gridded_col.single_point_outside_grid_and_one_inside_excludes_outside_using_binned_only": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.GeneralGriddedCollocator",
    "cis.test.unit.colocate.test_general_gridded_col.numpy",
    "cis.test.util.mock.make_dummy_ungridded_data_single_point",
    "cis.test.util.mock.make_mock_cube",
    "cis.test.utils_for_testing.assert_arrays_equal"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_general_gridded_col.single_point_outside_grid_is_excluded": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.GeneralGriddedCollocator",
    "cis.test.unit.colocate.test_general_gridded_col.numpy",
    "cis.test.util.mock.make_dummy_ungridded_data_single_point",
    "cis.test.util.mock.make_mock_cube",
    "cis.test.utils_for_testing.assert_arrays_equal"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_general_gridded_col.single_point_results_in_single_value_in_cell_using_kernel_and_con": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.GeneralGriddedCollocator",
    "cis.test.unit.colocate.test_general_gridded_col.numpy",
    "cis.test.util.mock.make_dummy_ungridded_data_single_point",
    "cis.test.util.mock.make_mock_cube",
    "cis.test.utils_for_testing.assert_arrays_equal"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_general_gridded_col.single_point_results_in_single_value_in_cell_with_altitude_with_cube_with_altitude": {
  "data": {
   "lineno": 342,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.GeneralGriddedCollocator",
    "cis.test.unit.colocate.test_general_gridded_col.numpy",
    "cis.test.util.mock.make_dummy_ungridded_data_single_point",
    "cis.test.util.mock.make_square_5x3_2d_cube_with_altitude",
    "cis.test.utils_for_testing.assert_arrays_equal"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_general_gridded_col.single_point_results_in_single_value_in_cell_with_altitude_with_cube_with_no_altitude": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.GeneralGriddedCollocator",
    "cis.test.unit.colocate.test_general_gridded_col.numpy",
    "cis.test.util.mock.make_dummy_ungridded_data_single_point",
    "cis.test.util.mock.make_square_5x3_2d_cube_with_extra_dim",
    "cis.test.utils_for_testing.assert_arrays_equal",
    "print"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_general_gridded_col.single_point_results_in_single_value_in_cell_with_decreasing_latitude": {
  "data": {
   "lineno": 428,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.GeneralGriddedCollocator",
    "cis.test.unit.colocate.test_general_gridded_col.numpy",
    "cis.test.util.mock.make_dummy_ungridded_data_single_point",
    "cis.test.util.mock.make_square_5x3_2d_cube_with_decreasing_latitude",
    "cis.test.utils_for_testing.assert_arrays_equal"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_general_gridded_col.single_point_results_in_single_value_in_cell_with_no_altitude_with_cube_with_altitude": {
  "data": {
   "lineno": 328,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.GeneralGriddedCollocator",
    "cis.test.unit.colocate.test_general_gridded_col.numpy",
    "cis.test.util.mock.make_dummy_ungridded_data_single_point",
    "cis.test.util.mock.make_square_5x3_2d_cube_with_altitude",
    "cis.test.utils_for_testing.assert_arrays_equal",
    "print"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_general_gridded_col.single_point_results_in_single_value_in_cell_with_no_pressure_with_cube_with_pressure": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.GeneralGriddedCollocator",
    "cis.test.unit.colocate.test_general_gridded_col.numpy",
    "cis.test.util.mock.make_dummy_ungridded_data_single_point",
    "cis.test.util.mock.make_square_5x3_2d_cube_with_pressure",
    "cis.test.utils_for_testing.assert_arrays_equal",
    "print"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_general_gridded_col.single_point_results_in_single_value_in_cell_with_no_time_with_cube_with_time": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.GeneralGriddedCollocator",
    "cis.test.unit.colocate.test_general_gridded_col.numpy",
    "cis.test.util.mock.make_dummy_ungridded_data_single_point",
    "cis.test.util.mock.make_square_5x3_2d_cube_with_time",
    "cis.test.utils_for_testing.assert_arrays_equal"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_general_gridded_col.single_point_results_in_single_value_in_cell_with_pressure_with_cube_with_pressure": {
  "data": {
   "lineno": 383,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.GeneralGriddedCollocator",
    "cis.test.unit.colocate.test_general_gridded_col.numpy",
    "cis.test.util.mock.make_dummy_ungridded_data_single_point",
    "cis.test.util.mock.make_square_5x3_2d_cube_with_pressure",
    "cis.test.utils_for_testing.assert_arrays_equal",
    "print"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_general_gridded_col.single_point_results_in_single_value_in_cell_with_time_on_boundary_with_cube_with_time": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.GeneralGriddedCollocator",
    "cis.test.unit.colocate.test_general_gridded_col.datetime",
    "cis.test.unit.colocate.test_general_gridded_col.numpy",
    "cis.test.util.mock.make_dummy_ungridded_data_single_point",
    "cis.test.util.mock.make_square_5x3_2d_cube_with_time",
    "cis.test.utils_for_testing.assert_arrays_equal"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_general_gridded_col.single_point_results_in_single_value_in_masked_cell_using_kernel_and_con_missing_for_masked_false": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.GeneralGriddedCollocator",
    "cis.test.unit.colocate.test_general_gridded_col.numpy",
    "cis.test.util.mock.make_dummy_ungridded_data_single_point",
    "cis.test.util.mock.make_mock_cube",
    "cis.test.utils_for_testing.assert_arrays_equal"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_general_gridded_col.single_point_results_in_single_value_in_masked_cell_using_kernel_and_con_missing_for_masked_true": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.GeneralGriddedCollocator",
    "cis.test.unit.colocate.test_general_gridded_col.numpy",
    "cis.test.util.mock.make_dummy_ungridded_data_single_point",
    "cis.test.util.mock.make_mock_cube",
    "cis.test.utils_for_testing.assert_arrays_equal"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_general_gridded_col.two_points_in_a_cell_results_in_mean_value_in_cell": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.GeneralGriddedCollocator",
    "cis.test.unit.colocate.test_general_gridded_col.numpy",
    "cis.test.util.mock.make_dummy_ungridded_data_two_points_with_different_values",
    "cis.test.util.mock.make_mock_cube",
    "cis.test.utils_for_testing.assert_arrays_almost_equal"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_general_gridded_col.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "cis.test.unit.colocate.test_general_ungridded_col": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "cis.test.unit.colocate.test_general_ungridded_col.nose"
   ]
  },
  "type": "module"
 },
 "cis.test.unit.colocate.test_general_ungridded_col.DummyConstraint": {
  "data": {
   "shadows": "cis.collocation.col_implementations.DummyConstraint"
  },
  "type": "import"
 },
 "cis.test.unit.colocate.test_general_ungridded_col.GeneralUngriddedCollocator": {
  "data": {
   "shadows": "cis.collocation.col_implementations.GeneralUngriddedCollocator"
  },
  "type": "import"
 },
 "cis.test.unit.colocate.test_general_ungridded_col.GriddedDataList": {
  "data": {
   "shadows": "cis.data_io.gridded_data.GriddedDataList"
  },
  "type": "import"
 },
 "cis.test.unit.colocate.test_general_ungridded_col.HyperPoint": {
  "data": {
   "shadows": "cis.data_io.hyperpoint.HyperPoint"
  },
  "type": "import"
 },
 "cis.test.unit.colocate.test_general_ungridded_col.SepConstraintKdtree": {
  "data": {
   "shadows": "cis.collocation.col_implementations.SepConstraintKdtree"
  },
  "type": "import"
 },
 "cis.test.unit.colocate.test_general_ungridded_col.TestGeneralUngriddedCollocator": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "cis.test.unit.colocate.test_general_ungridded_col.unittest"
   ]
  },
  "type": "class"
 },
 "cis.test.unit.colocate.test_general_ungridded_col.TestGeneralUngriddedCollocator.test_averaging_basic_col_in_4d": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.GeneralUngriddedCollocator",
    "cis.collocation.col_implementations.SepConstraintKdtree",
    "cis.collocation.col_implementations.moments",
    "cis.data_io.hyperpoint.HyperPoint",
    "cis.data_io.ungridded_data.UngriddedData.from_points_array",
    "cis.test.util.mock.make_regular_4d_ungridded_data",
    "datetime.datetime",
    "nose.tools.eq_"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_general_ungridded_col.TestGeneralUngriddedCollocator.test_list_ungridded_ungridded_box_mean": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "all",
    "cis.collocation.col_implementations.GeneralUngriddedCollocator",
    "cis.collocation.col_implementations.SepConstraintKdtree",
    "cis.collocation.col_implementations.moments",
    "cis.data_io.ungridded_data.UngriddedDataList",
    "cis.test.util.mock.make_regular_2d_ungridded_data",
    "isinstance",
    "len",
    "list",
    "numpy.allclose",
    "numpy.array",
    "range"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_general_ungridded_col.TestGeneralUngriddedCollocator.test_ungridded_ungridded_box_moments": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.GeneralUngriddedCollocator",
    "cis.collocation.col_implementations.SepConstraintKdtree",
    "cis.collocation.col_implementations.moments",
    "cis.data_io.hyperpoint.HyperPoint",
    "cis.data_io.ungridded_data.UngriddedData.from_points_array",
    "cis.data_io.ungridded_data.UngriddedDataList",
    "cis.test.util.mock.make_regular_2d_ungridded_data",
    "datetime.datetime",
    "isinstance",
    "len",
    "numpy.allclose",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_general_ungridded_col.TestGeneralUngriddedCollocator.test_ungridded_ungridded_box_moments_missing_data_for_missing_sample": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.GeneralUngriddedCollocator",
    "cis.collocation.col_implementations.SepConstraintKdtree",
    "cis.collocation.col_implementations.moments",
    "cis.data_io.hyperpoint.HyperPoint",
    "cis.data_io.ungridded_data.UngriddedData.from_points_array",
    "cis.data_io.ungridded_data.UngriddedDataList",
    "cis.test.util.mock.make_regular_2d_ungridded_data",
    "datetime.datetime",
    "isinstance",
    "len",
    "numpy.array_equal",
    "numpy.ma.array"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_general_ungridded_col.TestGeneralUngriddedCollocator.test_ungridded_ungridded_box_moments_no_missing_data_for_missing_sample": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "any",
    "cis.collocation.col_implementations.GeneralUngriddedCollocator",
    "cis.collocation.col_implementations.SepConstraintKdtree",
    "cis.collocation.col_implementations.moments",
    "cis.data_io.hyperpoint.HyperPoint",
    "cis.data_io.ungridded_data.UngriddedData.from_points_array",
    "cis.data_io.ungridded_data.UngriddedDataList",
    "cis.test.util.mock.make_regular_2d_ungridded_data",
    "datetime.datetime",
    "isinstance",
    "len",
    "numpy.ma.array"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_general_ungridded_col.UngriddedData": {
  "data": {
   "shadows": "cis.data_io.ungridded_data.UngriddedData"
  },
  "type": "import"
 },
 "cis.test.unit.colocate.test_general_ungridded_col.UngriddedDataList": {
  "data": {
   "shadows": "cis.data_io.ungridded_data.UngriddedDataList"
  },
  "type": "import"
 },
 "cis.test.unit.colocate.test_general_ungridded_col.dt": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "cis.test.unit.colocate.test_general_ungridded_col.eq_": {
  "data": {
   "shadows": "nose.tools.eq_"
  },
  "type": "import"
 },
 "cis.test.unit.colocate.test_general_ungridded_col.make_from_cube": {
  "data": {
   "shadows": "cis.data_io.gridded_data.make_from_cube"
  },
  "type": "import"
 },
 "cis.test.unit.colocate.test_general_ungridded_col.mock": {
  "data": {
   "shadows": "cis.test.util.mock"
  },
  "type": "import"
 },
 "cis.test.unit.colocate.test_general_ungridded_col.moments": {
  "data": {
   "shadows": "cis.collocation.col_implementations.moments"
  },
  "type": "import"
 },
 "cis.test.unit.colocate.test_general_ungridded_col.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "cis.test.unit.colocate.test_general_ungridded_col.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "cis.test.unit.colocate.test_general_ungridded_col.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "cis.test.unit.colocate.test_gridded_gridded_col": {
  "data": {},
  "type": "module"
 },
 "cis.test.unit.colocate.test_gridded_gridded_col.ClassNotFoundError": {
  "data": {
   "shadows": "cis.exceptions.ClassNotFoundError"
  },
  "type": "import"
 },
 "cis.test.unit.colocate.test_gridded_gridded_col.CoordinateNotFoundError": {
  "data": {
   "shadows": "iris.exceptions.CoordinateNotFoundError"
  },
  "type": "import"
 },
 "cis.test.unit.colocate.test_gridded_gridded_col.GriddedCollocator": {
  "data": {
   "shadows": "cis.collocation.col_implementations.GriddedCollocator"
  },
  "type": "import"
 },
 "cis.test.unit.colocate.test_gridded_gridded_col.GriddedDataList": {
  "data": {
   "shadows": "cis.data_io.gridded_data.GriddedDataList"
  },
  "type": "import"
 },
 "cis.test.unit.colocate.test_gridded_gridded_col.GriddedGriddedCollocatorTests": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "cis.test.unit.colocate.test_gridded_gridded_col.GriddedGriddedCollocatorTests.invalid_kernel_throws_error": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.nn_p",
    "cis.data_io.gridded_data.make_from_cube",
    "cis.exceptions.ClassNotFoundError",
    "cis.test.util.mock.make_mock_cube",
    "nose.tools.istest",
    "nose.tools.raises"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_gridded_gridded_col.GriddedGriddedCollocatorTests.setUp": {
  "data": {
   "lineno": 27
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_gridded_gridded_col.GriddedGriddedCollocatorTests.test_gridded_gridded_for_one_grid_with_slight_offset_in_lat_and_lon_different_grid_size_using_li": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.gridded_gridded_li",
    "cis.data_io.gridded_data.make_from_cube",
    "cis.test.unit.colocate.test_gridded_gridded_col.numpy",
    "cis.test.util.mock.make_mock_cube",
    "nose.tools.istest"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_gridded_gridded_col.GriddedGriddedCollocatorTests.test_gridded_gridded_for_one_grid_with_slight_offset_in_lat_and_lon_different_grid_size_using_nn": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.gridded_gridded_nn",
    "cis.data_io.gridded_data.make_from_cube",
    "cis.test.unit.colocate.test_gridded_gridded_col.numpy",
    "cis.test.util.mock.make_mock_cube",
    "nose.tools.istest"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_gridded_gridded_col.GriddedGriddedCollocatorTests.test_gridded_gridded_for_one_grid_with_slight_offset_in_lat_and_lon_using_li": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.gridded_gridded_li",
    "cis.data_io.gridded_data.make_from_cube",
    "cis.test.unit.colocate.test_gridded_gridded_col.numpy",
    "cis.test.util.mock.make_dummy_2d_cube",
    "cis.test.util.mock.make_dummy_2d_cube_with_small_offset_in_lat_and_lon",
    "nose.tools.istest"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_gridded_gridded_col.GriddedGriddedCollocatorTests.test_gridded_gridded_for_one_grid_with_slight_offset_in_lat_and_lon_using_nn": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.gridded_gridded_nn",
    "cis.data_io.gridded_data.make_from_cube",
    "cis.test.unit.colocate.test_gridded_gridded_col.numpy",
    "cis.test.util.mock.make_mock_cube",
    "nose.tools.istest"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_gridded_gridded_col.GriddedGriddedCollocatorTests.test_gridded_gridded_for_one_grid_with_slight_offset_in_lat_using_li": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.gridded_gridded_li",
    "cis.data_io.gridded_data.make_from_cube",
    "cis.test.unit.colocate.test_gridded_gridded_col.numpy",
    "cis.test.util.mock.make_dummy_2d_cube",
    "cis.test.util.mock.make_dummy_2d_cube_with_small_offset_in_lat",
    "nose.tools.istest"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_gridded_gridded_col.GriddedGriddedCollocatorTests.test_gridded_gridded_for_one_grid_with_slight_offset_in_lon_using_li": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.gridded_gridded_li",
    "cis.data_io.gridded_data.make_from_cube",
    "cis.test.unit.colocate.test_gridded_gridded_col.numpy",
    "cis.test.util.mock.make_dummy_2d_cube",
    "cis.test.util.mock.make_dummy_2d_cube_with_small_offset_in_lon",
    "nose.tools.istest"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_gridded_gridded_col.GriddedGriddedCollocatorTests.test_gridded_gridded_for_two_grids_offset_by_half_grid_spacing_using_li": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.gridded_gridded_li",
    "cis.data_io.gridded_data.make_from_cube",
    "cis.test.unit.colocate.test_gridded_gridded_col.numpy",
    "cis.test.util.mock.make_list_with_2_dummy_2d_cubes_where_verticies_are_in_cell_centres",
    "nose.tools.istest"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_gridded_gridded_col.GriddedGriddedCollocatorTests.test_gridded_gridded_for_two_grids_offset_by_half_grid_spacing_using_nn": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.gridded_gridded_nn",
    "cis.data_io.gridded_data.make_from_cube",
    "cis.test.unit.colocate.test_gridded_gridded_col.numpy",
    "cis.test.util.mock.make_list_with_2_dummy_2d_cubes_where_verticies_are_in_cell_centres",
    "nose.tools.istest"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_gridded_gridded_col.GriddedGriddedCollocatorTests.test_gridded_gridded_li_for_same_grids_check_returns_original_data": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.gridded_gridded_li",
    "cis.data_io.gridded_data.make_from_cube",
    "cis.test.unit.colocate.test_gridded_gridded_col.numpy",
    "cis.test.util.mock.make_dummy_2d_cube",
    "nose.tools.istest"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_gridded_gridded_col.GriddedGriddedCollocatorTests.test_gridded_gridded_li_with_one_grid_containing_altitude": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.gridded_gridded_li",
    "cis.data_io.gridded_data.make_from_cube",
    "cis.test.unit.colocate.test_gridded_gridded_col.numpy",
    "cis.test.util.mock.make_mock_cube",
    "nose.tools.istest"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_gridded_gridded_col.GriddedGriddedCollocatorTests.test_gridded_gridded_li_with_one_grid_containing_time_and_slightly_offset": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.gridded_gridded_li",
    "cis.data_io.gridded_data.make_from_cube",
    "cis.test.unit.colocate.test_gridded_gridded_col.numpy",
    "cis.test.util.mock.make_mock_cube",
    "nose.tools.istest"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_gridded_gridded_col.GriddedGriddedCollocatorTests.test_gridded_gridded_li_with_sample_grid_4d_and_slightly_offset": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.gridded_gridded_li",
    "cis.data_io.gridded_data.make_from_cube",
    "cis.test.unit.colocate.test_gridded_gridded_col.does_coord_exist_in_cube",
    "cis.test.unit.colocate.test_gridded_gridded_col.numpy",
    "cis.test.util.mock.make_mock_cube",
    "nose.tools.istest"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_gridded_gridded_col.GriddedGriddedCollocatorTests.test_gridded_gridded_nn_for_same_grids_check_returns_original_data": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.gridded_gridded_nn",
    "cis.data_io.gridded_data.make_from_cube",
    "cis.test.unit.colocate.test_gridded_gridded_col.numpy",
    "cis.test.util.mock.make_mock_cube",
    "nose.tools.istest"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_gridded_gridded_col.GriddedGriddedCollocatorTests.test_gridded_gridded_nn_with_one_grid_containing_time": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.gridded_gridded_nn",
    "cis.data_io.gridded_data.make_from_cube",
    "cis.test.unit.colocate.test_gridded_gridded_col.numpy",
    "cis.test.util.mock.make_mock_cube",
    "nose.tools.istest"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_gridded_gridded_col.GriddedGriddedCollocatorTests.test_gridded_gridded_nn_with_one_grid_containing_time_and_moderate_offset": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.gridded_gridded_nn",
    "cis.data_io.gridded_data.make_from_cube",
    "cis.test.unit.colocate.test_gridded_gridded_col.numpy",
    "cis.test.util.mock.make_mock_cube",
    "nose.tools.istest"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_gridded_gridded_col.GriddedGriddedCollocatorTests.test_gridded_gridded_nn_with_one_grid_containing_time_and_slightly_offset": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.gridded_gridded_nn",
    "cis.data_io.gridded_data.make_from_cube",
    "cis.test.unit.colocate.test_gridded_gridded_col.numpy",
    "cis.test.util.mock.make_mock_cube",
    "nose.tools.istest"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_gridded_gridded_col.GriddedGriddedCollocatorTests.test_gridded_gridded_nn_with_sample_containing_time_and_pressure_and_small_offset": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.gridded_gridded_nn",
    "cis.data_io.gridded_data.make_from_cube",
    "cis.test.unit.colocate.test_gridded_gridded_col.does_coord_exist_in_cube",
    "cis.test.unit.colocate.test_gridded_gridded_col.numpy",
    "cis.test.util.mock.make_mock_cube",
    "nose.tools.istest"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_gridded_gridded_col.TestCase": {
  "data": {
   "shadows": "unittest.TestCase"
  },
  "type": "import"
 },
 "cis.test.unit.colocate.test_gridded_gridded_col.TestGriddedGriddedCollocator": {
  "data": {
   "lineno": 348,
   "symbols_in_volume": [
    "cis.test.unit.colocate.test_gridded_gridded_col.GriddedGriddedCollocatorTests",
    "unittest.TestCase"
   ]
  },
  "type": "class"
 },
 "cis.test.unit.colocate.test_gridded_gridded_col.TestGriddedGriddedCollocator.setUp": {
  "data": {
   "lineno": 353,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.GriddedCollocator"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_gridded_gridded_col.TestGriddedGriddedCollocator.test_gridded_gridded_li_for_GriddedDataList": {
  "data": {
   "lineno": 1170,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.gridded_gridded_li",
    "cis.data_io.gridded_data.GriddedDataList",
    "cis.data_io.gridded_data.make_from_cube",
    "cis.test.unit.colocate.test_gridded_gridded_col.numpy",
    "cis.test.util.mock.make_mock_cube"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_gridded_gridded_col.TestGriddedGriddedCollocator.test_gridded_gridded_li_when_grids_have_different_dims_order": {
  "data": {
   "lineno": 1262,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.gridded_gridded_li",
    "cis.data_io.gridded_data.make_from_cube",
    "cis.test.util.mock.make_mock_cube"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_gridded_gridded_col.TestGriddedGriddedCollocator.test_gridded_gridded_li_with_4d_data_and_small_offset": {
  "data": {
   "lineno": 658,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.gridded_gridded_li",
    "cis.data_io.gridded_data.make_from_cube",
    "cis.test.unit.colocate.test_gridded_gridded_col.numpy",
    "cis.test.util.mock.make_mock_cube",
    "nose.tools.istest"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_gridded_gridded_col.TestGriddedGriddedCollocator.test_gridded_gridded_li_with_both_grids_containing_time_and_offset": {
  "data": {
   "lineno": 533,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.gridded_gridded_li",
    "cis.data_io.gridded_data.make_from_cube",
    "cis.test.unit.colocate.test_gridded_gridded_col.numpy",
    "cis.test.util.mock.make_mock_cube",
    "nose.tools.istest"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_gridded_gridded_col.TestGriddedGriddedCollocator.test_gridded_gridded_li_with_both_grids_containing_time_with_moderate_offset_and_different_grids": {
  "data": {
   "lineno": 604,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.gridded_gridded_li",
    "cis.data_io.gridded_data.make_from_cube",
    "cis.test.unit.colocate.test_gridded_gridded_col.numpy",
    "cis.test.util.mock.make_mock_cube",
    "nose.tools.istest"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_gridded_gridded_col.TestGriddedGriddedCollocator.test_gridded_gridded_li_with_data_grid_4d_sample_grid_with_time_with_moderate_offset_and_different_grids": {
  "data": {
   "lineno": 894,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.gridded_gridded_li",
    "cis.data_io.gridded_data.make_from_cube",
    "cis.test.unit.colocate.test_gridded_gridded_col.numpy",
    "cis.test.util.mock.make_mock_cube",
    "nose.tools.istest"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_gridded_gridded_col.TestGriddedGriddedCollocator.test_gridded_gridded_li_with_data_grid_containing_scalar_time": {
  "data": {
   "lineno": 473,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.gridded_gridded_li",
    "cis.data_io.gridded_data.make_from_cube",
    "cis.test.unit.colocate.test_gridded_gridded_col.datetime",
    "cis.test.unit.colocate.test_gridded_gridded_col.numpy",
    "cis.test.util.mock.make_mock_cube",
    "cis.time_util.convert_datetime_to_std_time",
    "nose.tools.istest"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_gridded_gridded_col.TestGriddedGriddedCollocator.test_gridded_gridded_li_with_data_grid_containing_time_length_one": {
  "data": {
   "lineno": 448,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.gridded_gridded_li",
    "cis.data_io.gridded_data.make_from_cube",
    "cis.test.unit.colocate.test_gridded_gridded_col.numpy",
    "cis.test.util.mock.make_mock_cube",
    "nose.tools.istest"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_gridded_gridded_col.TestGriddedGriddedCollocator.test_gridded_gridded_li_with_different_grids_and_missing_sample_values_1": {
  "data": {
   "lineno": 1075,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.GriddedCollocator",
    "cis.collocation.col_implementations.gridded_gridded_li",
    "cis.data_io.gridded_data.make_from_cube",
    "cis.test.unit.colocate.test_gridded_gridded_col.numpy",
    "cis.test.util.mock.make_mock_cube",
    "nose.tools.istest"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_gridded_gridded_col.TestGriddedGriddedCollocator.test_gridded_gridded_li_with_different_grids_and_missing_sample_values_2": {
  "data": {
   "lineno": 1106,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.GriddedCollocator",
    "cis.collocation.col_implementations.gridded_gridded_li",
    "cis.data_io.gridded_data.make_from_cube",
    "cis.test.unit.colocate.test_gridded_gridded_col.numpy",
    "cis.test.util.mock.make_mock_cube",
    "nose.tools.istest"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_gridded_gridded_col.TestGriddedGriddedCollocator.test_gridded_gridded_li_with_different_grids_and_missing_sample_values_3": {
  "data": {
   "lineno": 1137,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.GriddedCollocator",
    "cis.collocation.col_implementations.gridded_gridded_li",
    "cis.data_io.gridded_data.make_from_cube",
    "cis.test.unit.colocate.test_gridded_gridded_col.numpy",
    "cis.test.util.mock.make_mock_cube",
    "nose.tools.istest"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_gridded_gridded_col.TestGriddedGriddedCollocator.test_gridded_gridded_li_with_sample_grid_4d_data_grid_with_time_with_moderate_offset_and_different_grids": {
  "data": {
   "lineno": 721,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.gridded_gridded_li",
    "cis.data_io.gridded_data.make_from_cube",
    "cis.test.unit.colocate.test_gridded_gridded_col.numpy",
    "cis.test.util.mock.make_mock_cube",
    "nose.tools.istest"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_gridded_gridded_col.TestGriddedGriddedCollocator.test_gridded_gridded_li_with_very_different_grids": {
  "data": {
   "lineno": 978,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.gridded_gridded_li",
    "cis.data_io.gridded_data.make_from_cube",
    "cis.test.unit.colocate.test_gridded_gridded_col.does_coord_exist_in_cube",
    "cis.test.unit.colocate.test_gridded_gridded_col.numpy",
    "cis.test.util.mock.make_mock_cube",
    "nose.tools.istest"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_gridded_gridded_col.TestGriddedGriddedCollocator.test_gridded_gridded_nn_for_GriddedDataList": {
  "data": {
   "lineno": 1217,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.gridded_gridded_nn",
    "cis.data_io.gridded_data.GriddedDataList",
    "cis.data_io.gridded_data.make_from_cube",
    "cis.test.unit.colocate.test_gridded_gridded_col.numpy",
    "cis.test.util.mock.make_mock_cube",
    "nose.tools.istest"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_gridded_gridded_col.TestGriddedGriddedCollocator.test_gridded_gridded_nn_when_grids_have_different_dims_order": {
  "data": {
   "lineno": 1272,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.gridded_gridded_nn",
    "cis.data_io.gridded_data.make_from_cube",
    "cis.test.util.mock.make_mock_cube"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_gridded_gridded_col.TestGriddedGriddedCollocator.test_gridded_gridded_nn_with_4d_data_and_small_offset": {
  "data": {
   "lineno": 640,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.gridded_gridded_nn",
    "cis.data_io.gridded_data.make_from_cube",
    "cis.test.unit.colocate.test_gridded_gridded_col.numpy",
    "cis.test.util.mock.make_mock_cube",
    "nose.tools.istest"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_gridded_gridded_col.TestGriddedGriddedCollocator.test_gridded_gridded_nn_with_both_grids_containing_time_and_moderate_offset": {
  "data": {
   "lineno": 498,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.gridded_gridded_nn",
    "cis.data_io.gridded_data.make_from_cube",
    "cis.test.unit.colocate.test_gridded_gridded_col.numpy",
    "cis.test.util.mock.make_mock_cube",
    "nose.tools.istest"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_gridded_gridded_col.TestGriddedGriddedCollocator.test_gridded_gridded_nn_with_both_grids_containing_time_and_small_offset": {
  "data": {
   "lineno": 356,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.gridded_gridded_nn",
    "cis.data_io.gridded_data.make_from_cube",
    "cis.test.unit.colocate.test_gridded_gridded_col.numpy",
    "cis.test.util.mock.make_mock_cube",
    "nose.tools.istest"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_gridded_gridded_col.TestGriddedGriddedCollocator.test_gridded_gridded_nn_with_both_grids_containing_time_with_moderate_offset_and_different_grids": {
  "data": {
   "lineno": 568,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.gridded_gridded_nn",
    "cis.data_io.gridded_data.make_from_cube",
    "cis.test.unit.colocate.test_gridded_gridded_col.numpy",
    "cis.test.util.mock.make_mock_cube",
    "nose.tools.istest"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_gridded_gridded_col.TestGriddedGriddedCollocator.test_gridded_gridded_nn_with_data_grid_4d_sample_grid_with_time_with_moderate_offset_and_different_grids": {
  "data": {
   "lineno": 757,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.gridded_gridded_nn",
    "cis.data_io.gridded_data.make_from_cube",
    "cis.test.unit.colocate.test_gridded_gridded_col.numpy",
    "cis.test.util.mock.make_mock_cube",
    "nose.tools.istest"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_gridded_gridded_col.TestGriddedGriddedCollocator.test_gridded_gridded_nn_with_data_grid_containing_no_time": {
  "data": {
   "lineno": 420,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.gridded_gridded_nn",
    "cis.data_io.gridded_data.make_from_cube",
    "cis.test.unit.colocate.test_gridded_gridded_col.numpy",
    "cis.test.util.mock.make_mock_cube",
    "nose.tools.istest"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_gridded_gridded_col.TestGriddedGriddedCollocator.test_gridded_gridded_nn_with_data_grid_containing_scalar_time": {
  "data": {
   "lineno": 371,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.gridded_gridded_nn",
    "cis.data_io.gridded_data.make_from_cube",
    "cis.test.unit.colocate.test_gridded_gridded_col.datetime",
    "cis.test.unit.colocate.test_gridded_gridded_col.numpy",
    "cis.test.util.mock.make_mock_cube",
    "cis.time_util.convert_datetime_to_std_time",
    "nose.tools.istest"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_gridded_gridded_col.TestGriddedGriddedCollocator.test_gridded_gridded_nn_with_data_grid_containing_time_length_one": {
  "data": {
   "lineno": 396,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.gridded_gridded_nn",
    "cis.data_io.gridded_data.make_from_cube",
    "cis.test.unit.colocate.test_gridded_gridded_col.numpy",
    "cis.test.util.mock.make_mock_cube",
    "nose.tools.istest"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_gridded_gridded_col.TestGriddedGriddedCollocator.test_gridded_gridded_nn_with_different_grids_and_missing_sample_values_in_2d": {
  "data": {
   "lineno": 1001,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.GriddedCollocator",
    "cis.collocation.col_implementations.gridded_gridded_nn",
    "cis.data_io.gridded_data.make_from_cube",
    "cis.test.unit.colocate.test_gridded_gridded_col.numpy",
    "cis.test.util.mock.make_mock_cube",
    "nose.tools.istest"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_gridded_gridded_col.TestGriddedGriddedCollocator.test_gridded_gridded_nn_with_different_grids_and_missing_sample_values_in_3d": {
  "data": {
   "lineno": 1038,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.GriddedCollocator",
    "cis.collocation.col_implementations.gridded_gridded_nn",
    "cis.data_io.gridded_data.make_from_cube",
    "cis.test.unit.colocate.test_gridded_gridded_col.numpy",
    "cis.test.util.mock.make_mock_cube",
    "nose.tools.istest"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_gridded_gridded_col.TestGriddedGriddedCollocator.test_gridded_gridded_nn_with_sample_grid_containing_no_time": {
  "data": {
   "lineno": 434,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.gridded_gridded_nn",
    "cis.data_io.gridded_data.make_from_cube",
    "cis.test.unit.colocate.test_gridded_gridded_col.numpy",
    "cis.test.util.mock.make_mock_cube",
    "nose.tools.istest"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_gridded_gridded_col.TestGriddedGriddedCollocator.test_gridded_gridded_nn_with_very_different_grids": {
  "data": {
   "lineno": 956,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.gridded_gridded_nn",
    "cis.data_io.gridded_data.make_from_cube",
    "cis.test.unit.colocate.test_gridded_gridded_col.does_coord_exist_in_cube",
    "cis.test.unit.colocate.test_gridded_gridded_col.numpy",
    "cis.test.util.mock.make_mock_cube",
    "nose.tools.istest"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_gridded_gridded_col.convert_datetime_to_std_time": {
  "data": {
   "shadows": "cis.time_util.convert_datetime_to_std_time"
  },
  "type": "import"
 },
 "cis.test.unit.colocate.test_gridded_gridded_col.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "cis.test.unit.colocate.test_gridded_gridded_col.does_coord_exist_in_cube": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "iris.exceptions.CoordinateNotFoundError"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_gridded_gridded_col.gridded_data": {
  "data": {
   "shadows": "cis.data_io.gridded_data"
  },
  "type": "import"
 },
 "cis.test.unit.colocate.test_gridded_gridded_col.gridded_gridded_li": {
  "data": {
   "shadows": "cis.collocation.col_implementations.gridded_gridded_li"
  },
  "type": "import"
 },
 "cis.test.unit.colocate.test_gridded_gridded_col.gridded_gridded_nn": {
  "data": {
   "shadows": "cis.collocation.col_implementations.gridded_gridded_nn"
  },
  "type": "import"
 },
 "cis.test.unit.colocate.test_gridded_gridded_col.iris.coords": {
  "data": {
   "shadows": "iris.coords"
  },
  "type": "import"
 },
 "cis.test.unit.colocate.test_gridded_gridded_col.istest": {
  "data": {
   "shadows": "nose.tools.istest"
  },
  "type": "import"
 },
 "cis.test.unit.colocate.test_gridded_gridded_col.make_dummy_2d_cube": {
  "data": {
   "shadows": "cis.test.util.mock.make_dummy_2d_cube"
  },
  "type": "import"
 },
 "cis.test.unit.colocate.test_gridded_gridded_col.make_dummy_2d_cube_with_small_offset_in_lat": {
  "data": {
   "shadows": "cis.test.util.mock.make_dummy_2d_cube_with_small_offset_in_lat"
  },
  "type": "import"
 },
 "cis.test.unit.colocate.test_gridded_gridded_col.make_dummy_2d_cube_with_small_offset_in_lat_and_lon": {
  "data": {
   "shadows": "cis.test.util.mock.make_dummy_2d_cube_with_small_offset_in_lat_and_lon"
  },
  "type": "import"
 },
 "cis.test.unit.colocate.test_gridded_gridded_col.make_dummy_2d_cube_with_small_offset_in_lon": {
  "data": {
   "shadows": "cis.test.util.mock.make_dummy_2d_cube_with_small_offset_in_lon"
  },
  "type": "import"
 },
 "cis.test.unit.colocate.test_gridded_gridded_col.make_list_with_2_dummy_2d_cubes_where_verticies_are_in_cell_centres": {
  "data": {
   "shadows": "cis.test.util.mock.make_list_with_2_dummy_2d_cubes_where_verticies_are_in_cell_centres"
  },
  "type": "import"
 },
 "cis.test.unit.colocate.test_gridded_gridded_col.make_mock_cube": {
  "data": {
   "shadows": "cis.test.util.mock.make_mock_cube"
  },
  "type": "import"
 },
 "cis.test.unit.colocate.test_gridded_gridded_col.nn_p": {
  "data": {
   "shadows": "cis.collocation.col_implementations.nn_p"
  },
  "type": "import"
 },
 "cis.test.unit.colocate.test_gridded_gridded_col.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "cis.test.unit.colocate.test_gridded_gridded_col.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "cis.test.unit.colocate.test_gridded_gridded_col.raises": {
  "data": {
   "shadows": "nose.tools.raises"
  },
  "type": "import"
 },
 "cis.test.unit.colocate.test_gridded_interpolation": {
  "data": {},
  "type": "module"
 },
 "cis.test.unit.colocate.test_gridded_interpolation.GriddedUngriddedInterpolator": {
  "data": {
   "shadows": "cis.collocation.gridded_interpolation.GriddedUngriddedInterpolator"
  },
  "type": "import"
 },
 "cis.test.unit.colocate.test_gridded_interpolation.HyperPoint": {
  "data": {
   "shadows": "cis.data_io.hyperpoint.HyperPoint"
  },
  "type": "import"
 },
 "cis.test.unit.colocate.test_gridded_interpolation.LinearNDInterpolator": {
  "data": {
   "shadows": "scipy.interpolate.LinearNDInterpolator"
  },
  "type": "import"
 },
 "cis.test.unit.colocate.test_gridded_interpolation.MyValue": {
  "data": {
   "lineno": 391,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "cis.test.unit.colocate.test_gridded_interpolation.MyValue.__array__": {
  "data": {
   "lineno": 407,
   "symbols_in_volume": [
    "RuntimeError"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_gridded_interpolation.MyValue.__array_interface__": {
  "data": {
   "lineno": 404
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_gridded_interpolation.MyValue.__getitem__": {
  "data": {
   "lineno": 401
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_gridded_interpolation.MyValue.__init__": {
  "data": {
   "lineno": 396,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.prod"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_gridded_interpolation.NearestNDInterpolator": {
  "data": {
   "shadows": "scipy.interpolate.NearestNDInterpolator"
  },
  "type": "import"
 },
 "cis.test.unit.colocate.test_gridded_interpolation.TestCase": {
  "data": {
   "shadows": "numpy.testing.TestCase"
  },
  "type": "import"
 },
 "cis.test.unit.colocate.test_gridded_interpolation.TestRegularGridInterpolator": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "numpy.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "cis.test.unit.colocate.test_gridded_interpolation.TestRegularGridInterpolator._get_sample_4d": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.newaxis"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_gridded_interpolation.TestRegularGridInterpolator._get_sample_4d_2": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.newaxis"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_gridded_interpolation.TestRegularGridInterpolator.test_2d_cube": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "cis.collocation.gridded_interpolation.GriddedUngriddedInterpolator",
    "cis.data_io.hyperpoint.HyperPoint",
    "cis.data_io.ungridded_data.UngriddedData.from_points_array",
    "cis.test.util.mock.make_square_5x3_2d_cube",
    "interpolator",
    "numpy.asarray",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_gridded_interpolation.TestRegularGridInterpolator.test_complex": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "cis.collocation.gridded_interpolation._RegularGridInterpolator",
    "iinterp",
    "interp",
    "numpy.asarray",
    "numpy.testing.assert_allclose",
    "rinterp"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_gridded_interpolation.TestRegularGridInterpolator.test_fillvalue_type": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": [
    "cis.collocation.gridded_interpolation._RegularGridInterpolator",
    "interpolator",
    "numpy.arange",
    "numpy.asarray",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_gridded_interpolation.TestRegularGridInterpolator.test_hybrid_Coord": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "cis.collocation.gridded_interpolation.GriddedUngriddedInterpolator",
    "cis.data_io.hyperpoint.HyperPoint",
    "cis.data_io.ungridded_data.UngriddedData.from_points_array",
    "cis.test.util.mock.make_mock_cube",
    "datetime.datetime",
    "interpolator",
    "numpy.ma.array",
    "numpy.ma.masked_invalid",
    "numpy.nan",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_gridded_interpolation.TestRegularGridInterpolator.test_hybrid_Coord_nn": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "cis.collocation.gridded_interpolation.GriddedUngriddedInterpolator",
    "cis.data_io.hyperpoint.HyperPoint",
    "cis.data_io.ungridded_data.UngriddedData.from_points_array",
    "cis.test.util.mock.make_mock_cube",
    "datetime.datetime",
    "interpolator",
    "numpy.ma.array",
    "numpy.ma.masked_invalid",
    "numpy.nan",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_gridded_interpolation.TestRegularGridInterpolator.test_hybrid_Coord_without_hybrid_coord": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "cis.collocation.gridded_interpolation.GriddedUngriddedInterpolator",
    "cis.data_io.hyperpoint.HyperPoint",
    "cis.data_io.ungridded_data.UngriddedData.from_points_array",
    "cis.test.util.mock.make_mock_cube",
    "datetime.datetime",
    "interpolator",
    "numpy.asarray",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_gridded_interpolation.TestRegularGridInterpolator.test_hybrid_alt_Coord_order_doesnt_matter": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "cis.collocation.gridded_interpolation.GriddedUngriddedInterpolator",
    "cis.data_io.hyperpoint.HyperPoint",
    "cis.data_io.ungridded_data.UngriddedData.from_points_array",
    "cis.test.util.mock.make_mock_cube",
    "datetime.datetime",
    "interpolator",
    "numpy.asarray",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_gridded_interpolation.TestRegularGridInterpolator.test_hybrid_pres_Coord_order_doesnt_matter": {
  "data": {
   "lineno": 284,
   "symbols_in_volume": [
    "cis.collocation.gridded_interpolation.GriddedUngriddedInterpolator",
    "cis.data_io.hyperpoint.HyperPoint",
    "cis.data_io.ungridded_data.UngriddedData.from_points_array",
    "cis.test.util.mock.make_mock_cube",
    "datetime.datetime",
    "interpolator",
    "numpy.ma.array",
    "numpy.ma.masked_invalid",
    "numpy.nan",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_gridded_interpolation.TestRegularGridInterpolator.test_invalid_fill_value": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": [
    "ValueError",
    "cis.collocation.gridded_interpolation._RegularGridInterpolator",
    "interp",
    "numpy.linspace",
    "numpy.random.rand",
    "numpy.random.seed",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_gridded_interpolation.TestRegularGridInterpolator.test_linear_compare_qhull": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "cis.collocation.gridded_interpolation._RegularGridInterpolator",
    "cis.test.unit.colocate.test_gridded_interpolation.itertools",
    "interp",
    "interp_qhull",
    "numpy.asarray",
    "numpy.testing.assert_array_almost_equal",
    "scipy.interpolate.LinearNDInterpolator"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_gridded_interpolation.TestRegularGridInterpolator.test_linear_edges": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "cis.collocation.gridded_interpolation._RegularGridInterpolator",
    "interp",
    "numpy.asarray",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_gridded_interpolation.TestRegularGridInterpolator.test_linear_xi1d": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "cis.collocation.gridded_interpolation._RegularGridInterpolator",
    "interp",
    "numpy.asarray",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_gridded_interpolation.TestRegularGridInterpolator.test_linear_xi3d": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "cis.collocation.gridded_interpolation._RegularGridInterpolator",
    "interp",
    "numpy.asarray",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_gridded_interpolation.TestRegularGridInterpolator.test_list_input": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "cis.collocation.gridded_interpolation._RegularGridInterpolator",
    "interp",
    "numpy.asarray",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_gridded_interpolation.TestRegularGridInterpolator.test_missing_values": {
  "data": {
   "lineno": 347,
   "symbols_in_volume": [
    "cis.collocation.gridded_interpolation.GriddedUngriddedInterpolator",
    "cis.data_io.hyperpoint.HyperPoint",
    "cis.data_io.ungridded_data.UngriddedData.from_points_array",
    "cis.test.util.mock.make_square_5x3_2d_cube_with_missing_data",
    "interpolator",
    "numpy.ma.array",
    "numpy.nan",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_gridded_interpolation.TestRegularGridInterpolator.test_missing_values_with_extrapolation": {
  "data": {
   "lineno": 368,
   "symbols_in_volume": [
    "cis.collocation.gridded_interpolation.GriddedUngriddedInterpolator",
    "cis.data_io.hyperpoint.HyperPoint",
    "cis.data_io.ungridded_data.UngriddedData.from_points_array",
    "cis.test.util.mock.make_square_5x3_2d_cube_with_missing_data",
    "interpolator",
    "numpy.ma.array",
    "numpy.nan",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_gridded_interpolation.TestRegularGridInterpolator.test_nearest": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "cis.collocation.gridded_interpolation._RegularGridInterpolator",
    "interp",
    "numpy.asarray",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_gridded_interpolation.TestRegularGridInterpolator.test_nearest_compare_qhull": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "cis.collocation.gridded_interpolation._RegularGridInterpolator",
    "cis.test.unit.colocate.test_gridded_interpolation.itertools",
    "interp",
    "interp_qhull",
    "numpy.asarray",
    "numpy.testing.assert_array_almost_equal",
    "scipy.interpolate.NearestNDInterpolator"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_gridded_interpolation.TestRegularGridInterpolator.test_out_of_bounds_extrap": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "cis.collocation.gridded_interpolation._RegularGridInterpolator",
    "interp",
    "numpy.asarray",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_gridded_interpolation.TestRegularGridInterpolator.test_out_of_bounds_extrap2": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "cis.collocation.gridded_interpolation._RegularGridInterpolator",
    "interp",
    "numpy.asarray",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_gridded_interpolation.TestRegularGridInterpolator.test_out_of_bounds_fill": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "all",
    "cis.collocation.gridded_interpolation._RegularGridInterpolator",
    "interp",
    "numpy.asarray",
    "numpy.nan",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_gridded_interpolation.TestRegularGridInterpolator.test_valid_call": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "ValueError",
    "cis.collocation.gridded_interpolation._RegularGridInterpolator",
    "interp",
    "numpy.asarray",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_gridded_interpolation.TestRegularGridInterpolator.test_valid_create": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "ValueError",
    "cis.collocation.gridded_interpolation._RegularGridInterpolator",
    "numpy.asarray",
    "numpy.newaxis",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_gridded_interpolation.UngriddedData": {
  "data": {
   "shadows": "cis.data_io.ungridded_data.UngriddedData"
  },
  "type": "import"
 },
 "cis.test.unit.colocate.test_gridded_interpolation._RegularGridInterpolator": {
  "data": {
   "shadows": "cis.collocation.gridded_interpolation._RegularGridInterpolator"
  },
  "type": "import"
 },
 "cis.test.unit.colocate.test_gridded_interpolation.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "cis.test.unit.colocate.test_gridded_interpolation.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "cis.test.unit.colocate.test_gridded_interpolation.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "cis.test.unit.colocate.test_gridded_interpolation.assert_raises": {
  "data": {
   "shadows": "numpy.testing.assert_raises"
  },
  "type": "import"
 },
 "cis.test.unit.colocate.test_gridded_interpolation.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "cis.test.unit.colocate.test_gridded_interpolation.dt": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "cis.test.unit.colocate.test_gridded_interpolation.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "cis.test.unit.colocate.test_gridded_interpolation.make_mock_cube": {
  "data": {
   "shadows": "cis.test.util.mock.make_mock_cube"
  },
  "type": "import"
 },
 "cis.test.unit.colocate.test_gridded_interpolation.make_square_5x3_2d_cube": {
  "data": {
   "shadows": "cis.test.util.mock.make_square_5x3_2d_cube"
  },
  "type": "import"
 },
 "cis.test.unit.colocate.test_gridded_interpolation.make_square_5x3_2d_cube_with_missing_data": {
  "data": {
   "shadows": "cis.test.util.mock.make_square_5x3_2d_cube_with_missing_data"
  },
  "type": "import"
 },
 "cis.test.unit.colocate.test_gridded_interpolation.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "cis.test.unit.colocate.test_gridded_interpolation.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "cis.test.unit.colocate.test_gridded_ungridded_col": {
  "data": {},
  "type": "module"
 },
 "cis.test.unit.colocate.test_gridded_ungridded_col.Coord": {
  "data": {
   "shadows": "cis.data_io.Coord.Coord"
  },
  "type": "import"
 },
 "cis.test.unit.colocate.test_gridded_ungridded_col.Cube": {
  "data": {
   "shadows": "iris.cube.Cube"
  },
  "type": "import"
 },
 "cis.test.unit.colocate.test_gridded_ungridded_col.DimCoord": {
  "data": {
   "shadows": "iris.coords.DimCoord"
  },
  "type": "import"
 },
 "cis.test.unit.colocate.test_gridded_ungridded_col.GriddedUngriddedCollocator": {
  "data": {
   "shadows": "cis.collocation.col_implementations.GriddedUngriddedCollocator"
  },
  "type": "import"
 },
 "cis.test.unit.colocate.test_gridded_ungridded_col.HyperPoint": {
  "data": {
   "shadows": "cis.data_io.hyperpoint.HyperPoint"
  },
  "type": "import"
 },
 "cis.test.unit.colocate.test_gridded_ungridded_col.Metadata": {
  "data": {
   "shadows": "cis.data_io.ungridded_data.Metadata"
  },
  "type": "import"
 },
 "cis.test.unit.colocate.test_gridded_ungridded_col.TestGriddedUngriddedCollocator": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "cis.test.unit.colocate.test_gridded_ungridded_col.unittest"
   ]
  },
  "type": "class"
 },
 "cis.test.unit.colocate.test_gridded_ungridded_col.TestGriddedUngriddedCollocator.test_collocation_of_pres_points_on_hybrid_altitude_coordinates": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "ValueError",
    "cis.collocation.col_implementations.GriddedUngriddedCollocator",
    "cis.data_io.gridded_data.make_from_cube",
    "cis.data_io.hyperpoint.HyperPoint",
    "cis.data_io.ungridded_data.UngriddedData.from_points_array",
    "cis.test.util.mock.make_mock_cube",
    "datetime.datetime",
    "numpy.NAN",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_gridded_ungridded_col.TestGriddedUngriddedCollocator.test_gridded_ungridded_lin": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.GriddedUngriddedCollocator",
    "cis.data_io.gridded_data.make_from_cube",
    "cis.data_io.hyperpoint.HyperPoint",
    "cis.data_io.ungridded_data.UngriddedData.from_points_array",
    "cis.data_io.ungridded_data.UngriddedDataList",
    "cis.test.util.mock.make_mock_cube",
    "datetime.datetime",
    "isinstance",
    "len",
    "numpy.allclose",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_gridded_ungridded_col.TestGriddedUngriddedCollocator.test_gridded_ungridded_nn": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.GriddedUngriddedCollocator",
    "cis.data_io.gridded_data.make_from_cube",
    "cis.data_io.hyperpoint.HyperPoint",
    "cis.data_io.ungridded_data.UngriddedData.from_points_array",
    "cis.data_io.ungridded_data.UngriddedDataList",
    "cis.test.util.mock.make_mock_cube",
    "datetime.datetime",
    "isinstance",
    "len",
    "numpy.allclose",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_gridded_ungridded_col.TestGriddedUngriddedCollocator.test_missing_data_for_missing_sample": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.GriddedUngriddedCollocator",
    "cis.data_io.gridded_data.make_from_cube",
    "cis.data_io.hyperpoint.HyperPoint",
    "cis.data_io.ungridded_data.UngriddedData.from_points_array",
    "cis.data_io.ungridded_data.UngriddedDataList",
    "cis.test.util.mock.make_mock_cube",
    "datetime.datetime",
    "isinstance",
    "len",
    "numpy.array_equal",
    "numpy.ma.array"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_gridded_ungridded_col.TestGriddedUngriddedCollocator.test_missing_data_for_missing_sample_with_no_extrapolation": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.GriddedUngriddedCollocator",
    "cis.data_io.gridded_data.make_from_cube",
    "cis.data_io.hyperpoint.HyperPoint",
    "cis.data_io.ungridded_data.UngriddedData.from_points_array",
    "cis.test.util.mock.make_mock_cube",
    "datetime.datetime",
    "numpy.NAN",
    "numpy.ma.array",
    "numpy.ma.is_masked",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_gridded_ungridded_col.TestGriddedUngriddedCollocator.test_no_missing_data_for_missing_sample": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "any",
    "cis.collocation.col_implementations.GriddedUngriddedCollocator",
    "cis.data_io.gridded_data.make_from_cube",
    "cis.data_io.hyperpoint.HyperPoint",
    "cis.data_io.ungridded_data.UngriddedData.from_points_array",
    "cis.data_io.ungridded_data.UngriddedDataList",
    "cis.test.util.mock.make_mock_cube",
    "datetime.datetime",
    "isinstance",
    "len",
    "numpy.ma.array"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_gridded_ungridded_col.TestGriddedUngriddedCollocator.test_order_of_coords_doesnt_matter": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.GriddedUngriddedCollocator",
    "cis.data_io.Coord.Coord",
    "cis.data_io.gridded_data.make_from_cube",
    "cis.data_io.ungridded_data.Metadata",
    "cis.data_io.ungridded_data.UngriddedCoordinates",
    "iris.coords.DimCoord",
    "iris.cube.Cube",
    "numpy.arange",
    "numpy.linspace",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_gridded_ungridded_col.TestLinear": {
  "data": {
   "lineno": 436,
   "symbols_in_volume": [
    "cis.test.unit.colocate.test_gridded_ungridded_col.unittest"
   ]
  },
  "type": "class"
 },
 "cis.test.unit.colocate.test_gridded_ungridded_col.TestLinear.test_alt_extrapolation": {
  "data": {
   "lineno": 538,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.GriddedUngriddedCollocator",
    "cis.data_io.gridded_data.make_from_cube",
    "cis.data_io.hyperpoint.HyperPoint",
    "cis.data_io.ungridded_data.UngriddedData.from_points_array",
    "cis.test.util.mock.make_mock_cube",
    "datetime.datetime",
    "numpy.NAN",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_gridded_ungridded_col.TestLinear.test_basic_col_gridded_to_ungridded_using_li_in_2d": {
  "data": {
   "lineno": 437,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.GriddedUngriddedCollocator",
    "cis.data_io.gridded_data.make_from_cube",
    "cis.data_io.hyperpoint.HyperPoint",
    "cis.data_io.ungridded_data.UngriddedData.from_points_array",
    "cis.test.util.mock.make_square_5x3_2d_cube",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_gridded_ungridded_col.TestLinear.test_basic_col_with_circular_lon": {
  "data": {
   "lineno": 447,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.GriddedUngriddedCollocator",
    "cis.data_io.gridded_data.make_from_cube",
    "cis.data_io.hyperpoint.HyperPoint",
    "cis.data_io.ungridded_data.UngriddedData.from_points_array",
    "cis.test.util.mock.make_dummy_2d_cube_with_circular_lon",
    "numpy.asarray",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_gridded_ungridded_col.TestLinear.test_collocation_of_alt_points_on_hybrid_altitude_and_pressure_coordinates": {
  "data": {
   "lineno": 693,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.GriddedUngriddedCollocator",
    "cis.data_io.gridded_data.make_from_cube",
    "cis.data_io.hyperpoint.HyperPoint",
    "cis.data_io.ungridded_data.UngriddedData.from_points_array",
    "cis.test.util.mock.make_mock_cube",
    "datetime.datetime",
    "numpy.NAN",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_gridded_ungridded_col.TestLinear.test_collocation_of_alt_pres_points_on_hybrid_altitude_and_pressure_coordinates": {
  "data": {
   "lineno": 708,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.GriddedUngriddedCollocator",
    "cis.data_io.gridded_data.make_from_cube",
    "cis.data_io.hyperpoint.HyperPoint",
    "cis.data_io.ungridded_data.UngriddedData.from_points_array",
    "cis.test.util.mock.make_mock_cube",
    "datetime.datetime",
    "numpy.NAN",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_gridded_ungridded_col.TestLinear.test_collocation_of_alt_pres_points_on_hybrid_altitude_coordinates": {
  "data": {
   "lineno": 523,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.GriddedUngriddedCollocator",
    "cis.data_io.gridded_data.make_from_cube",
    "cis.data_io.hyperpoint.HyperPoint",
    "cis.data_io.ungridded_data.UngriddedData.from_points_array",
    "cis.test.util.mock.make_mock_cube",
    "datetime.datetime",
    "numpy.NAN",
    "numpy.ma.is_masked",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_gridded_ungridded_col.TestLinear.test_collocation_of_points_on_hybrid_altitude_coordinates": {
  "data": {
   "lineno": 474,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.GriddedUngriddedCollocator",
    "cis.data_io.gridded_data.make_from_cube",
    "cis.data_io.hyperpoint.HyperPoint",
    "cis.data_io.ungridded_data.UngriddedData.from_points_array",
    "cis.test.util.mock.make_mock_cube",
    "datetime.datetime",
    "numpy.NAN",
    "numpy.ma.is_masked",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_gridded_ungridded_col.TestLinear.test_collocation_of_pres_alt_points_on_hybrid_pressure_coordinates": {
  "data": {
   "lineno": 567,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.GriddedUngriddedCollocator",
    "cis.data_io.gridded_data.make_from_cube",
    "cis.data_io.hyperpoint.HyperPoint",
    "cis.data_io.ungridded_data.UngriddedData.from_points_array",
    "cis.test.util.mock.make_mock_cube",
    "datetime.datetime",
    "numpy.ma.is_masked",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_gridded_ungridded_col.TestLinear.test_collocation_of_pres_alt_points_on_hybrid_pressure_coordinates_multi_var": {
  "data": {
   "lineno": 605,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.GriddedUngriddedCollocator",
    "cis.data_io.gridded_data.make_from_cube",
    "cis.data_io.hyperpoint.HyperPoint",
    "cis.data_io.ungridded_data.UngriddedData.from_points_array",
    "cis.test.util.mock.make_mock_cube",
    "datetime.datetime",
    "numpy.ma.is_masked",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_gridded_ungridded_col.TestLinear.test_collocation_of_pres_alt_points_on_hybrid_pressure_coordinates_nn": {
  "data": {
   "lineno": 586,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.GriddedUngriddedCollocator",
    "cis.data_io.gridded_data.make_from_cube",
    "cis.data_io.hyperpoint.HyperPoint",
    "cis.data_io.ungridded_data.UngriddedData.from_points_array",
    "cis.test.util.mock.make_mock_cube",
    "datetime.datetime",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_gridded_ungridded_col.TestLinear.test_collocation_of_pres_points_on_hybrid_pressure_coordinates": {
  "data": {
   "lineno": 548,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.GriddedUngriddedCollocator",
    "cis.data_io.gridded_data.make_from_cube",
    "cis.data_io.hyperpoint.HyperPoint",
    "cis.data_io.ungridded_data.UngriddedData.from_points_array",
    "cis.test.util.mock.make_mock_cube",
    "datetime.datetime",
    "numpy.ma.is_masked",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_gridded_ungridded_col.TestLinear.test_collocation_over_scalar_coord": {
  "data": {
   "lineno": 721,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.GriddedUngriddedCollocator",
    "cis.data_io.gridded_data.make_from_cube",
    "cis.data_io.hyperpoint.HyperPoint",
    "cis.data_io.ungridded_data.UngriddedData.from_points_array",
    "cis.test.util.mock.make_square_5x3_2d_cube_with_scalar_time",
    "datetime.datetime",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_gridded_ungridded_col.TestLinear.test_extrapolation_of_pres_points_on_hybrid_pressure_coordinates": {
  "data": {
   "lineno": 668,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.GriddedUngriddedCollocator",
    "cis.data_io.gridded_data.make_from_cube",
    "cis.data_io.hyperpoint.HyperPoint",
    "cis.data_io.ungridded_data.UngriddedData.from_points_array",
    "cis.test.util.mock.make_mock_cube",
    "datetime.datetime",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_gridded_ungridded_col.TestLinear.test_extrapolation_of_pres_points_on_hybrid_pressure_coordinates_multi_var": {
  "data": {
   "lineno": 678,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.GriddedUngriddedCollocator",
    "cis.data_io.gridded_data.make_from_cube",
    "cis.data_io.hyperpoint.HyperPoint",
    "cis.data_io.ungridded_data.UngriddedData.from_points_array",
    "cis.test.util.mock.make_mock_cube",
    "datetime.datetime",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_gridded_ungridded_col.TestLinear.test_negative_lon_points_in_2d_dont_matter": {
  "data": {
   "lineno": 461,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.GriddedUngriddedCollocator",
    "cis.data_io.gridded_data.make_from_cube",
    "cis.data_io.hyperpoint.HyperPoint",
    "cis.data_io.ungridded_data.UngriddedData.from_points_array",
    "cis.test.util.mock.make_square_5x3_2d_cube",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_gridded_ungridded_col.TestLinear.test_negative_lon_points_on_hybrid_altitude_coordinates_dont_matter": {
  "data": {
   "lineno": 489,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.GriddedUngriddedCollocator",
    "cis.data_io.gridded_data.make_from_cube",
    "cis.data_io.hyperpoint.HyperPoint",
    "cis.data_io.ungridded_data.UngriddedData.from_points_array",
    "cis.test.util.mock.make_mock_cube",
    "datetime.datetime",
    "numpy.NAN",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_gridded_ungridded_col.TestLinear.test_negative_lon_points_on_hybrid_pressure_coordinates_dont_matter": {
  "data": {
   "lineno": 640,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.GriddedUngriddedCollocator",
    "cis.data_io.gridded_data.make_from_cube",
    "cis.data_io.hyperpoint.HyperPoint",
    "cis.data_io.ungridded_data.UngriddedData.from_points_array",
    "cis.test.util.mock.make_mock_cube",
    "datetime.datetime",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_gridded_ungridded_col.TestLinear.test_wrapping_of_alt_points_on_hybrid_height_coordinates_on_0_360_grid": {
  "data": {
   "lineno": 505,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.GriddedUngriddedCollocator",
    "cis.data_io.gridded_data.make_from_cube",
    "cis.data_io.hyperpoint.HyperPoint",
    "cis.data_io.ungridded_data.UngriddedData.from_points_array",
    "cis.test.util.mock.make_mock_cube",
    "datetime.datetime",
    "nose.tools.eq_"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_gridded_ungridded_col.TestLinear.test_wrapping_of_pres_points_on_hybrid_pressure_coordinates_on_0_360_grid": {
  "data": {
   "lineno": 653,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.GriddedUngriddedCollocator",
    "cis.data_io.gridded_data.make_from_cube",
    "cis.data_io.hyperpoint.HyperPoint",
    "cis.data_io.ungridded_data.UngriddedData.from_points_array",
    "cis.test.util.mock.make_mock_cube",
    "datetime.datetime",
    "nose.tools.eq_"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_gridded_ungridded_col.TestNN": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "cis.test.unit.colocate.test_gridded_ungridded_col.unittest"
   ]
  },
  "type": "class"
 },
 "cis.test.unit.colocate.test_gridded_ungridded_col.TestNN.test_already_collocated_in_col_gridded_to_ungridded_in_2d": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.GriddedUngriddedCollocator",
    "cis.data_io.gridded_data.make_from_cube",
    "cis.data_io.hyperpoint.HyperPoint",
    "cis.data_io.ungridded_data.UngriddedData.from_points_array",
    "cis.test.util.mock.make_square_5x3_2d_cube",
    "nose.tools.eq_"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_gridded_ungridded_col.TestNN.test_basic_col_gridded_to_ungridded_in_2d": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.GriddedUngriddedCollocator",
    "cis.data_io.gridded_data.make_from_cube",
    "cis.data_io.hyperpoint.HyperPoint",
    "cis.data_io.ungridded_data.UngriddedData.from_points_array",
    "cis.test.util.mock.make_square_5x3_2d_cube",
    "nose.tools.eq_"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_gridded_ungridded_col.TestNN.test_basic_col_gridded_to_ungridded_in_2d_with_time": {
  "data": {
   "lineno": 422,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.GriddedUngriddedCollocator",
    "cis.data_io.gridded_data.make_from_cube",
    "cis.data_io.hyperpoint.HyperPoint",
    "cis.data_io.ungridded_data.UngriddedData.from_points_array",
    "cis.test.util.mock.make_square_5x3_2d_cube_with_time",
    "datetime.datetime",
    "nose.tools.eq_"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_gridded_ungridded_col.TestNN.test_basic_col_with_circular_lon": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.GriddedUngriddedCollocator",
    "cis.data_io.gridded_data.make_from_cube",
    "cis.data_io.hyperpoint.HyperPoint",
    "cis.data_io.ungridded_data.UngriddedData.from_points_array",
    "cis.test.util.mock.make_dummy_2d_cube_with_circular_lon",
    "numpy.asarray",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_gridded_ungridded_col.TestNN.test_collocation_of_alt_points_on_hybrid_altitude_coordinates": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.GriddedUngriddedCollocator",
    "cis.data_io.gridded_data.make_from_cube",
    "cis.data_io.hyperpoint.HyperPoint",
    "cis.data_io.ungridded_data.UngriddedData.from_points_array",
    "cis.test.util.mock.make_mock_cube",
    "datetime.datetime",
    "nose.tools.eq_"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_gridded_ungridded_col.TestNN.test_collocation_of_alt_points_on_hybrid_altitude_coordinates_on_0_360_grid": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.GriddedUngriddedCollocator",
    "cis.data_io.gridded_data.make_from_cube",
    "cis.data_io.hyperpoint.HyperPoint",
    "cis.data_io.ungridded_data.UngriddedData.from_points_array",
    "cis.test.util.mock.make_mock_cube",
    "datetime.datetime",
    "nose.tools.eq_"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_gridded_ungridded_col.TestNN.test_collocation_of_alt_points_on_hybrid_pressure_and_altitude_coordinates": {
  "data": {
   "lineno": 374,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.GriddedUngriddedCollocator",
    "cis.data_io.gridded_data.make_from_cube",
    "cis.data_io.hyperpoint.HyperPoint",
    "cis.data_io.ungridded_data.UngriddedData.from_points_array",
    "cis.test.util.mock.make_mock_cube",
    "datetime.datetime",
    "float",
    "nose.tools.eq_"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_gridded_ungridded_col.TestNN.test_collocation_of_alt_pres_points_on_hybrid_altitude_coordinates": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.GriddedUngriddedCollocator",
    "cis.data_io.gridded_data.make_from_cube",
    "cis.data_io.hyperpoint.HyperPoint",
    "cis.data_io.ungridded_data.UngriddedData.from_points_array",
    "cis.test.util.mock.make_mock_cube",
    "datetime.datetime",
    "float",
    "nose.tools.eq_"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_gridded_ungridded_col.TestNN.test_collocation_of_alt_pres_points_on_hybrid_pressure_and_altitude_coordinates": {
  "data": {
   "lineno": 353,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.GriddedUngriddedCollocator",
    "cis.data_io.gridded_data.make_from_cube",
    "cis.data_io.hyperpoint.HyperPoint",
    "cis.data_io.ungridded_data.UngriddedData.from_points_array",
    "cis.test.util.mock.make_mock_cube",
    "datetime.datetime",
    "float",
    "nose.tools.eq_"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_gridded_ungridded_col.TestNN.test_collocation_of_pres_points_on_hybrid_pressure_coordinates_and_altitude_coordinates": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.GriddedUngriddedCollocator",
    "cis.data_io.gridded_data.make_from_cube",
    "cis.data_io.hyperpoint.HyperPoint",
    "cis.data_io.ungridded_data.UngriddedData.from_points_array",
    "cis.test.util.mock.make_mock_cube",
    "datetime.datetime",
    "float",
    "nose.tools.eq_"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_gridded_ungridded_col.TestNN.test_coordinates_exactly_between_points_in_col_gridded_to_ungridded_in_2d": {
  "data": {
   "lineno": 394,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.GriddedUngriddedCollocator",
    "cis.data_io.gridded_data.make_from_cube",
    "cis.data_io.hyperpoint.HyperPoint",
    "cis.data_io.ungridded_data.UngriddedData.from_points_array",
    "cis.test.util.mock.make_square_5x3_2d_cube",
    "nose.tools.eq_"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_gridded_ungridded_col.TestNN.test_coordinates_outside_grid_in_col_gridded_to_ungridded_in_2d": {
  "data": {
   "lineno": 411,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.GriddedUngriddedCollocator",
    "cis.data_io.gridded_data.make_from_cube",
    "cis.data_io.hyperpoint.HyperPoint",
    "cis.data_io.ungridded_data.UngriddedData.from_points_array",
    "cis.test.util.mock.make_square_5x3_2d_cube",
    "nose.tools.eq_"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_gridded_ungridded_col.TestNN.test_guessing_the_bounds_on_a_cube_doesnt_matter_for_negative_lon_points_on_a_0_360_grid_in_2d": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.GriddedUngriddedCollocator",
    "cis.data_io.gridded_data.make_from_cube",
    "cis.data_io.hyperpoint.HyperPoint",
    "cis.data_io.ungridded_data.UngriddedData.from_points_array",
    "cis.test.util.mock.make_dummy_2d_cube",
    "nose.tools.eq_"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_gridded_ungridded_col.TestNN.test_lon_points_over_360_dont_matter_with_0_360_grid_in_2d": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.GriddedUngriddedCollocator",
    "cis.data_io.gridded_data.make_from_cube",
    "cis.data_io.hyperpoint.HyperPoint",
    "cis.data_io.ungridded_data.UngriddedData.from_points_array",
    "cis.test.util.mock.make_dummy_2d_cube",
    "nose.tools.eq_"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_gridded_ungridded_col.TestNN.test_negative_lon_points_dont_matter_with_0_360_grid_in_2d": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.GriddedUngriddedCollocator",
    "cis.data_io.gridded_data.make_from_cube",
    "cis.data_io.hyperpoint.HyperPoint",
    "cis.data_io.ungridded_data.UngriddedData.from_points_array",
    "cis.test.util.mock.make_dummy_2d_cube",
    "nose.tools.eq_"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_gridded_ungridded_col.TestNN.test_negative_lon_points_on_hybrid_altitude_coordinates_dont_matter": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.GriddedUngriddedCollocator",
    "cis.data_io.gridded_data.make_from_cube",
    "cis.data_io.hyperpoint.HyperPoint",
    "cis.data_io.ungridded_data.UngriddedData.from_points_array",
    "cis.test.util.mock.make_mock_cube",
    "datetime.datetime",
    "nose.tools.eq_"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_gridded_ungridded_col.TestNN.test_negative_lon_points_on_hybrid_altitude_coordinates_with_0_360_grid": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.GriddedUngriddedCollocator",
    "cis.data_io.gridded_data.make_from_cube",
    "cis.data_io.hyperpoint.HyperPoint",
    "cis.data_io.ungridded_data.UngriddedData.from_points_array",
    "cis.test.util.mock.make_mock_cube",
    "datetime.datetime",
    "nose.tools.eq_"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_gridded_ungridded_col.UngriddedCoordinates": {
  "data": {
   "shadows": "cis.data_io.ungridded_data.UngriddedCoordinates"
  },
  "type": "import"
 },
 "cis.test.unit.colocate.test_gridded_ungridded_col.UngriddedData": {
  "data": {
   "shadows": "cis.data_io.ungridded_data.UngriddedData"
  },
  "type": "import"
 },
 "cis.test.unit.colocate.test_gridded_ungridded_col.UngriddedDataList": {
  "data": {
   "shadows": "cis.data_io.ungridded_data.UngriddedDataList"
  },
  "type": "import"
 },
 "cis.test.unit.colocate.test_gridded_ungridded_col.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "cis.test.unit.colocate.test_gridded_ungridded_col.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "cis.test.unit.colocate.test_gridded_ungridded_col.assert_raises": {
  "data": {
   "shadows": "numpy.testing.assert_raises"
  },
  "type": "import"
 },
 "cis.test.unit.colocate.test_gridded_ungridded_col.dt": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "cis.test.unit.colocate.test_gridded_ungridded_col.eq_": {
  "data": {
   "shadows": "nose.tools.eq_"
  },
  "type": "import"
 },
 "cis.test.unit.colocate.test_gridded_ungridded_col.make_from_cube": {
  "data": {
   "shadows": "cis.data_io.gridded_data.make_from_cube"
  },
  "type": "import"
 },
 "cis.test.unit.colocate.test_gridded_ungridded_col.mock": {
  "data": {
   "shadows": "cis.test.util.mock"
  },
  "type": "import"
 },
 "cis.test.unit.colocate.test_gridded_ungridded_col.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "cis.test.unit.colocate.test_gridded_ungridded_col.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "cis.test.unit.colocate.test_kernel": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "cis.test.unit.colocate.test_kernel.unittest"
   ]
  },
  "type": "module"
 },
 "cis.test.unit.colocate.test_kernel.GeneralUngriddedCollocator": {
  "data": {
   "shadows": "cis.collocation.col_implementations.GeneralUngriddedCollocator"
  },
  "type": "import"
 },
 "cis.test.unit.colocate.test_kernel.HyperPoint": {
  "data": {
   "shadows": "cis.data_io.hyperpoint.HyperPoint"
  },
  "type": "import"
 },
 "cis.test.unit.colocate.test_kernel.HyperPointList": {
  "data": {
   "shadows": "cis.data_io.hyperpoint.HyperPointList"
  },
  "type": "import"
 },
 "cis.test.unit.colocate.test_kernel.SepConstraintKdtree": {
  "data": {
   "shadows": "cis.collocation.col_implementations.SepConstraintKdtree"
  },
  "type": "import"
 },
 "cis.test.unit.colocate.test_kernel.TestFullAverage": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "cis.test.unit.colocate.test_kernel.unittest"
   ]
  },
  "type": "class"
 },
 "cis.test.unit.colocate.test_kernel.TestFullAverage.test_basic_col_in_4d": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.GeneralUngriddedCollocator",
    "cis.collocation.col_implementations.SepConstraintKdtree",
    "cis.collocation.col_implementations.moments",
    "cis.data_io.hyperpoint.HyperPoint",
    "cis.data_io.ungridded_data.UngriddedData.from_points_array",
    "cis.test.util.mock.make_regular_4d_ungridded_data",
    "datetime.datetime",
    "nose.tools.eq_",
    "numpy.sqrt",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_kernel.TestFullAverage.test_basic_col_in_4d_with_pressure_not_altitude": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.GeneralUngriddedCollocator",
    "cis.collocation.col_implementations.SepConstraintKdtree",
    "cis.collocation.col_implementations.moments",
    "cis.data_io.hyperpoint.HyperPoint",
    "cis.data_io.ungridded_data.UngriddedData.from_points_array",
    "cis.test.util.mock.make_regular_4d_ungridded_data",
    "datetime.datetime",
    "nose.tools.eq_",
    "numpy.sqrt",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_kernel.TestMean": {
  "data": {
   "lineno": 361,
   "symbols_in_volume": [
    "cis.test.unit.colocate.test_kernel.unittest"
   ]
  },
  "type": "class"
 },
 "cis.test.unit.colocate.test_kernel.TestMean.test_basic_col_in_4d": {
  "data": {
   "lineno": 362,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.GeneralUngriddedCollocator",
    "cis.collocation.col_implementations.SepConstraintKdtree",
    "cis.collocation.col_implementations.mean",
    "cis.data_io.hyperpoint.HyperPoint",
    "cis.data_io.ungridded_data.UngriddedData.from_points_array",
    "cis.test.util.mock.make_regular_4d_ungridded_data",
    "datetime.datetime",
    "nose.tools.eq_"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_kernel.TestNNAltitude": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "cis.test.unit.colocate.test_kernel.unittest"
   ]
  },
  "type": "class"
 },
 "cis.test.unit.colocate.test_kernel.TestNNAltitude.test_already_collocated_in_col_ungridded_to_ungridded_in_2d": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.GeneralUngriddedCollocator",
    "cis.collocation.col_implementations.SepConstraintKdtree",
    "cis.collocation.col_implementations.nn_altitude",
    "cis.data_io.hyperpoint.HyperPoint",
    "cis.data_io.ungridded_data.UngriddedData.from_points_array",
    "cis.test.util.mock.make_regular_4d_ungridded_data",
    "datetime.datetime",
    "nose.tools.eq_"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_kernel.TestNNAltitude.test_basic_col_in_4d": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.GeneralUngriddedCollocator",
    "cis.collocation.col_implementations.SepConstraintKdtree",
    "cis.collocation.col_implementations.nn_altitude",
    "cis.data_io.hyperpoint.HyperPoint",
    "cis.data_io.hyperpoint.HyperPointList",
    "cis.data_io.ungridded_data.UngriddedData.from_points_array",
    "cis.test.util.mock.make_regular_4d_ungridded_data",
    "datetime.datetime",
    "nose.tools.eq_"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_kernel.TestNNAltitude.test_basic_col_with_incompatible_points_throws_a_TypeError": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "AttributeError",
    "cis.collocation.col_implementations.GeneralUngriddedCollocator",
    "cis.collocation.col_implementations.SepConstraintKdtree",
    "cis.collocation.col_implementations.nn_altitude",
    "cis.data_io.hyperpoint.HyperPoint",
    "cis.data_io.ungridded_data.UngriddedData.from_points_array",
    "cis.test.util.mock.make_regular_4d_ungridded_data"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_kernel.TestNNAltitude.test_coordinates_exactly_between_points_in_col_ungridded_to_ungridded_in_2d": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.GeneralUngriddedCollocator",
    "cis.collocation.col_implementations.SepConstraintKdtree",
    "cis.collocation.col_implementations.nn_altitude",
    "cis.data_io.hyperpoint.HyperPoint",
    "cis.data_io.ungridded_data.UngriddedData.from_points_array",
    "cis.test.util.mock.make_regular_4d_ungridded_data",
    "datetime.datetime",
    "nose.tools.eq_"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_kernel.TestNNAltitude.test_coordinates_outside_grid_in_col_ungridded_to_ungridded_in_2d": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.GeneralUngriddedCollocator",
    "cis.collocation.col_implementations.SepConstraintKdtree",
    "cis.collocation.col_implementations.nn_altitude",
    "cis.data_io.hyperpoint.HyperPoint",
    "cis.data_io.hyperpoint.HyperPointList",
    "cis.data_io.ungridded_data.UngriddedData.from_points_array",
    "cis.test.util.mock.make_regular_4d_ungridded_data",
    "datetime.datetime",
    "nose.tools.eq_"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_kernel.TestNNHorizontal": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "cis.test.unit.colocate.test_kernel.unittest"
   ]
  },
  "type": "class"
 },
 "cis.test.unit.colocate.test_kernel.TestNNHorizontal.test_already_collocated_in_col_ungridded_to_ungridded_in_2d": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.GeneralUngriddedCollocator",
    "cis.collocation.col_implementations.SepConstraintKdtree",
    "cis.collocation.col_implementations.nn_horizontal",
    "cis.data_io.hyperpoint.HyperPoint",
    "cis.data_io.ungridded_data.UngriddedData.from_points_array",
    "cis.test.util.mock.make_regular_2d_ungridded_data",
    "nose.tools.eq_"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_kernel.TestNNHorizontal.test_basic_col_in_2d": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.GeneralUngriddedCollocator",
    "cis.collocation.col_implementations.SepConstraintKdtree",
    "cis.collocation.col_implementations.nn_horizontal",
    "cis.data_io.hyperpoint.HyperPoint",
    "cis.data_io.ungridded_data.UngriddedData.from_points_array",
    "cis.test.util.mock.make_regular_2d_ungridded_data",
    "nose.tools.eq_"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_kernel.TestNNHorizontal.test_coordinates_exactly_between_points_in_col_ungridded_to_ungridded_in_2d": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.GeneralUngriddedCollocator",
    "cis.collocation.col_implementations.SepConstraintKdtree",
    "cis.collocation.col_implementations.nn_horizontal",
    "cis.data_io.hyperpoint.HyperPoint",
    "cis.data_io.ungridded_data.UngriddedData.from_points_array",
    "cis.test.util.mock.make_regular_2d_ungridded_data",
    "nose.tools.eq_"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_kernel.TestNNHorizontal.test_coordinates_outside_grid_in_col_ungridded_to_ungridded_in_2d": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.GeneralUngriddedCollocator",
    "cis.collocation.col_implementations.SepConstraintKdtree",
    "cis.collocation.col_implementations.nn_horizontal",
    "cis.data_io.hyperpoint.HyperPoint",
    "cis.data_io.ungridded_data.UngriddedData.from_points_array",
    "cis.test.util.mock.make_regular_2d_ungridded_data",
    "nose.tools.eq_"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_kernel.TestNNPressure": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "cis.test.unit.colocate.test_kernel.unittest"
   ]
  },
  "type": "class"
 },
 "cis.test.unit.colocate.test_kernel.TestNNPressure.test_already_collocated_in_col_ungridded_to_ungridded_in_2d": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.GeneralUngriddedCollocator",
    "cis.collocation.col_implementations.SepConstraintKdtree",
    "cis.collocation.col_implementations.nn_pressure",
    "cis.data_io.hyperpoint.HyperPoint",
    "cis.data_io.ungridded_data.UngriddedData.from_points_array",
    "cis.test.util.mock.make_regular_4d_ungridded_data",
    "datetime.datetime",
    "nose.tools.eq_"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_kernel.TestNNPressure.test_basic_col_in_4d": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.GeneralUngriddedCollocator",
    "cis.collocation.col_implementations.SepConstraintKdtree",
    "cis.collocation.col_implementations.nn_pressure",
    "cis.data_io.hyperpoint.HyperPoint",
    "cis.data_io.hyperpoint.HyperPointList",
    "cis.data_io.ungridded_data.UngriddedData.from_points_array",
    "cis.test.util.mock.make_regular_4d_ungridded_data",
    "datetime.datetime",
    "nose.tools.eq_"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_kernel.TestNNPressure.test_basic_col_with_incompatible_points_throws_a_TypeError": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "AttributeError",
    "cis.collocation.col_implementations.GeneralUngriddedCollocator",
    "cis.collocation.col_implementations.SepConstraintKdtree",
    "cis.collocation.col_implementations.nn_pressure",
    "cis.data_io.hyperpoint.HyperPoint",
    "cis.data_io.ungridded_data.UngriddedData.from_points_array",
    "cis.test.util.mock.make_regular_4d_ungridded_data"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_kernel.TestNNPressure.test_coordinates_exactly_between_points_in_col_ungridded_to_ungridded_in_2d": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.GeneralUngriddedCollocator",
    "cis.collocation.col_implementations.SepConstraintKdtree",
    "cis.collocation.col_implementations.nn_pressure",
    "cis.data_io.hyperpoint.HyperPoint",
    "cis.data_io.ungridded_data.UngriddedData.from_points_array",
    "cis.test.util.mock.make_regular_4d_ungridded_data",
    "datetime.datetime",
    "nose.tools.eq_"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_kernel.TestNNPressure.test_coordinates_outside_grid_in_col_ungridded_to_ungridded_in_2d": {
  "data": {
   "lineno": 344,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.GeneralUngriddedCollocator",
    "cis.collocation.col_implementations.SepConstraintKdtree",
    "cis.collocation.col_implementations.nn_pressure",
    "cis.data_io.hyperpoint.HyperPoint",
    "cis.data_io.hyperpoint.HyperPointList",
    "cis.data_io.ungridded_data.UngriddedData.from_points_array",
    "cis.test.util.mock.make_regular_4d_ungridded_data",
    "datetime.datetime",
    "nose.tools.eq_"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_kernel.TestNNTime": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "cis.test.unit.colocate.test_kernel.unittest"
   ]
  },
  "type": "class"
 },
 "cis.test.unit.colocate.test_kernel.TestNNTime.test_already_collocated_in_col_ungridded_to_ungridded_in_2d": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.GeneralUngriddedCollocator",
    "cis.collocation.col_implementations.SepConstraintKdtree",
    "cis.collocation.col_implementations.nn_time",
    "cis.data_io.hyperpoint.HyperPoint",
    "cis.data_io.hyperpoint.HyperPointList",
    "cis.data_io.ungridded_data.UngriddedData.from_points_array",
    "cis.test.util.mock.make_regular_2d_with_time_ungridded_data",
    "datetime.datetime",
    "datetime.timedelta",
    "numpy.arange",
    "numpy.equal",
    "range"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_kernel.TestNNTime.test_basic_col_in_2d_with_time": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.GeneralUngriddedCollocator",
    "cis.collocation.col_implementations.SepConstraintKdtree",
    "cis.collocation.col_implementations.nn_time",
    "cis.data_io.hyperpoint.HyperPoint",
    "cis.data_io.hyperpoint.HyperPointList",
    "cis.data_io.ungridded_data.UngriddedData.from_points_array",
    "cis.test.util.mock.make_regular_2d_with_time_ungridded_data",
    "datetime.datetime",
    "nose.tools.eq_"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_kernel.TestNNTime.test_basic_col_with_incompatible_points_throws_an_AttributeError": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "AttributeError",
    "cis.collocation.col_implementations.GeneralUngriddedCollocator",
    "cis.collocation.col_implementations.SepConstraintKdtree",
    "cis.collocation.col_implementations.nn_time",
    "cis.data_io.hyperpoint.HyperPoint",
    "cis.data_io.ungridded_data.UngriddedData.from_points_array",
    "cis.test.util.mock.make_regular_2d_with_time_ungridded_data"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_kernel.TestNNTime.test_basic_col_with_time": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.GeneralUngriddedCollocator",
    "cis.collocation.col_implementations.SepConstraintKdtree",
    "cis.collocation.col_implementations.nn_time",
    "cis.data_io.hyperpoint.HyperPoint",
    "cis.data_io.hyperpoint.HyperPointList",
    "cis.data_io.ungridded_data.UngriddedData.from_points_array",
    "cis.test.util.mock.make_MODIS_time_steps",
    "numpy.array",
    "numpy.equal"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_kernel.TestNNTime.test_coordinates_exactly_between_points_in_col_ungridded_to_ungridded_in_2d": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.GeneralUngriddedCollocator",
    "cis.collocation.col_implementations.SepConstraintKdtree",
    "cis.collocation.col_implementations.nn_time",
    "cis.data_io.hyperpoint.HyperPoint",
    "cis.data_io.ungridded_data.UngriddedData.from_points_array",
    "cis.test.util.mock.make_regular_2d_with_time_ungridded_data",
    "datetime.datetime",
    "nose.tools.eq_"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_kernel.TestNNTime.test_coordinates_outside_grid_in_col_ungridded_to_ungridded_in_2d": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.GeneralUngriddedCollocator",
    "cis.collocation.col_implementations.SepConstraintKdtree",
    "cis.collocation.col_implementations.nn_time",
    "cis.data_io.hyperpoint.HyperPoint",
    "cis.data_io.hyperpoint.HyperPointList",
    "cis.data_io.ungridded_data.UngriddedData.from_points_array",
    "cis.test.util.mock.make_regular_2d_with_time_ungridded_data",
    "datetime.datetime",
    "nose.tools.eq_"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.colocate.test_kernel.UngriddedData": {
  "data": {
   "shadows": "cis.data_io.ungridded_data.UngriddedData"
  },
  "type": "import"
 },
 "cis.test.unit.colocate.test_kernel.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "cis.test.unit.colocate.test_kernel.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "cis.test.unit.colocate.test_kernel.dt": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "cis.test.unit.colocate.test_kernel.eq_": {
  "data": {
   "shadows": "nose.tools.eq_"
  },
  "type": "import"
 },
 "cis.test.unit.colocate.test_kernel.gridded_data": {
  "data": {
   "shadows": "cis.data_io.gridded_data"
  },
  "type": "import"
 },
 "cis.test.unit.colocate.test_kernel.mean": {
  "data": {
   "shadows": "cis.collocation.col_implementations.mean"
  },
  "type": "import"
 },
 "cis.test.unit.colocate.test_kernel.mock": {
  "data": {
   "shadows": "cis.test.util.mock"
  },
  "type": "import"
 },
 "cis.test.unit.colocate.test_kernel.moments": {
  "data": {
   "shadows": "cis.collocation.col_implementations.moments"
  },
  "type": "import"
 },
 "cis.test.unit.colocate.test_kernel.nn_altitude": {
  "data": {
   "shadows": "cis.collocation.col_implementations.nn_altitude"
  },
  "type": "import"
 },
 "cis.test.unit.colocate.test_kernel.nn_horizontal": {
  "data": {
   "shadows": "cis.collocation.col_implementations.nn_horizontal"
  },
  "type": "import"
 },
 "cis.test.unit.colocate.test_kernel.nn_pressure": {
  "data": {
   "shadows": "cis.collocation.col_implementations.nn_pressure"
  },
  "type": "import"
 },
 "cis.test.unit.colocate.test_kernel.nn_time": {
  "data": {
   "shadows": "cis.collocation.col_implementations.nn_time"
  },
  "type": "import"
 },
 "cis.test.unit.colocate.test_kernel.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "cis.test.unit.colocate.test_kernel.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "cis.test.unit.eval": {
  "data": {},
  "type": "module"
 },
 "cis.test.unit.eval.test_calc": {
  "data": {},
  "type": "module"
 },
 "cis.test.unit.eval.test_calc.Calculator": {
  "data": {
   "shadows": "cis.evaluate.Calculator"
  },
  "type": "import"
 },
 "cis.test.unit.eval.test_calc.EvaluationError": {
  "data": {
   "shadows": "cis.evaluate.EvaluationError"
  },
  "type": "import"
 },
 "cis.test.unit.eval.test_calc.GriddedData": {
  "data": {
   "shadows": "cis.data_io.gridded_data.GriddedData"
  },
  "type": "import"
 },
 "cis.test.unit.eval.test_calc.GriddedDataList": {
  "data": {
   "shadows": "cis.data_io.gridded_data.GriddedDataList"
  },
  "type": "import"
 },
 "cis.test.unit.eval.test_calc.TestCalculator": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "cis.test.unit.eval.test_calc.unittest"
   ]
  },
  "type": "class"
 },
 "cis.test.unit.eval.test_calc.TestCalculator._make_two_gridded": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "cis.data_io.gridded_data.GriddedDataList",
    "cis.data_io.gridded_data.make_from_cube",
    "cis.test.util.mock.make_mock_cube"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.eval.test_calc.TestCalculator._make_two_ungridded_data": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "cis.test.util.mock.make_regular_2d_ungridded_data_with_missing_values"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.eval.test_calc.TestCalculator.setUp": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "cis.data_io.gridded_data.GriddedDataList",
    "cis.data_io.gridded_data.make_from_cube",
    "cis.evaluate.Calculator",
    "cis.test.util.mock.make_mock_cube"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.eval.test_calc.TestCalculator.test_GIVEN_attributes_WHEN_calculate_gridded_THEN_attributes_set_on_output": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "hamcrest.assert_that",
    "hamcrest.is_"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.eval.test_calc.TestCalculator.test_GIVEN_attributes_WHEN_calculate_ungridded_THEN_attributes_set_on_output": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "hamcrest.assert_that",
    "hamcrest.is_"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.eval.test_calc.TestCalculator.test_GIVEN_expr_using_allowed_builtins_WHEN_calculate_THEN_allowed": {
  "data": {
   "lineno": 53
  },
  "type": "function"
 },
 "cis.test.unit.eval.test_calc.TestCalculator.test_GIVEN_expr_using_disallowed_builtins_WHEN_calculate_THEN_raises_EvaluationError": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "cis.evaluate.EvaluationError"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.eval.test_calc.TestCalculator.test_GIVEN_expr_using_numpy_WHEN_calculate_THEN_allowed": {
  "data": {
   "lineno": 49
  },
  "type": "function"
 },
 "cis.test.unit.eval.test_calc.TestCalculator.test_GIVEN_expr_with_double_underscores_WHEN_calculate_THEN_raises_EvaluationError": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "cis.evaluate.EvaluationError"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.eval.test_calc.TestCalculator.test_GIVEN_operation_results_in_wrong_shape_THEN_raises_EvaluationError": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "cis.evaluate.EvaluationError",
    "cis.test.util.mock.make_regular_2d_ungridded_data"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.eval.test_calc.TestCalculator.test_GIVEN_output_var_name_WHEN_calculate_THEN_output_uses_var_name": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "hamcrest.assert_that",
    "hamcrest.is_"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.eval.test_calc.TestCalculator.test_GIVEN_two_cubes_and_basic_addition_WHEN_calculate_THEN_addition_successful": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "cis.test.unit.eval.test_calc.numpy",
    "hamcrest.assert_that"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.eval.test_calc.TestCalculator.test_GIVEN_two_cubes_basic_addition_WHEN_calculate_THEN_metadata_correct": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "cis.data_io.gridded_data.GriddedData",
    "hamcrest.assert_that",
    "hamcrest.is_",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.eval.test_calc.TestCalculator.test_GIVEN_two_cubes_interpolated_WHEN_calculate_THEN_interpolation_successful": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "cis.test.unit.eval.test_calc.numpy",
    "hamcrest.assert_that"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.eval.test_calc.TestCalculator.test_GIVEN_two_variables_WHEN_calculate_THEN_variable_values_not_changed": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "cis.test.unit.eval.test_calc.numpy",
    "cis.test.util.mock.make_regular_2d_ungridded_data",
    "hamcrest.assert_that"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.eval.test_calc.TestCalculator.test_GIVEN_ungridded_data_basic_addition_WHEN_calculate_THEN_addition_successful": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "cis.test.unit.eval.test_calc.numpy",
    "cis.test.util.mock.make_regular_2d_ungridded_data",
    "hamcrest.assert_that"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.eval.test_calc.TestCalculator.test_GIVEN_ungridded_data_one_flattened_WHEN_calculate_THEN_compared_on_flattened_grid": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "cis.test.unit.eval.test_calc.numpy",
    "cis.test.util.mock.make_regular_2d_ungridded_data",
    "hamcrest.assert_that",
    "hamcrest.is_"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.eval.test_calc.TestCalculator.test_GIVEN_ungridded_missing_values_WHEN_calculate_THEN_missing_values_preserved": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "cis.test.unit.eval.test_calc.numpy",
    "cis.test.util.mock.make_regular_2d_ungridded_data_with_missing_values",
    "cis.test.utils_for_testing.compare_masked_arrays",
    "float"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.eval.test_calc.TestCalculator.test_GIVEN_units_string_WHEN_calculate_gridded_THEN_units_set_on_output": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "hamcrest.assert_that",
    "hamcrest.is_"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.eval.test_calc.TestCalculator.test_GIVEN_units_string_WHEN_calculate_ungridded_THEN_units_set_on_output": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "hamcrest.assert_that",
    "hamcrest.is_"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.eval.test_calc.TestCalculator.test_GIVEN_variables_from_different_files_WHEN_calculate_THEN_history_added": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "cis.__version__",
    "hamcrest.assert_that",
    "hamcrest.ends_with"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.eval.test_calc.TestCalculator.test_GIVEN_variables_from_same_file_WHEN_calculate_THEN_history_added": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "cis.__version__",
    "hamcrest.assert_that",
    "hamcrest.ends_with"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.eval.test_calc.TestCalculator.test_GIVEN_variables_not_compatible_shape_THEN_raises_EvaluationError": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "cis.evaluate.EvaluationError",
    "cis.test.util.mock.make_regular_2d_ungridded_data"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.eval.test_calc.__version__": {
  "data": {
   "shadows": "cis.__version__"
  },
  "type": "import"
 },
 "cis.test.unit.eval.test_calc.assert_that": {
  "data": {
   "shadows": "hamcrest.assert_that"
  },
  "type": "import"
 },
 "cis.test.unit.eval.test_calc.compare_masked_arrays": {
  "data": {
   "shadows": "cis.test.utils_for_testing.compare_masked_arrays"
  },
  "type": "import"
 },
 "cis.test.unit.eval.test_calc.ends_with": {
  "data": {
   "shadows": "hamcrest.ends_with"
  },
  "type": "import"
 },
 "cis.test.unit.eval.test_calc.is_": {
  "data": {
   "shadows": "hamcrest.is_"
  },
  "type": "import"
 },
 "cis.test.unit.eval.test_calc.make_from_cube": {
  "data": {
   "shadows": "cis.data_io.gridded_data.make_from_cube"
  },
  "type": "import"
 },
 "cis.test.unit.eval.test_calc.mock": {
  "data": {
   "shadows": "cis.test.util.mock"
  },
  "type": "import"
 },
 "cis.test.unit.eval.test_calc.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "cis.test.unit.eval.test_calc.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "cis.test.unit.matplotlib": {
  "data": {
   "shadows": "matplotlib"
  },
  "type": "import"
 },
 "cis.test.unit.stats": {
  "data": {},
  "type": "module"
 },
 "cis.test.unit.stats.test_stats_analyser": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "cis.test.unit.stats.test_stats_analyser.unittest"
   ]
  },
  "type": "module"
 },
 "cis.test.unit.stats.test_stats_analyser.GriddedData": {
  "data": {
   "shadows": "cis.data_io.gridded_data.GriddedData"
  },
  "type": "import"
 },
 "cis.test.unit.stats.test_stats_analyser.StatsAnalyzer": {
  "data": {
   "shadows": "cis.stats.StatsAnalyzer"
  },
  "type": "import"
 },
 "cis.test.unit.stats.test_stats_analyser.TestStatsAnalyser": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "cis.test.unit.stats.test_stats_analyser.unittest"
   ]
  },
  "type": "class"
 },
 "cis.test.unit.stats.test_stats_analyser.TestStatsAnalyser.setUp": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "cis.data_io.gridded_data.GriddedData",
    "numpy.array",
    "numpy.ma.masked_equal"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.stats.test_stats_analyser.TestStatsAnalyser.test_GIVEN_datasets_WHEN_analyze_THEN_StatisticsResults_returned": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "cis.stats.StatsAnalyzer",
    "hamcrest.assert_that",
    "hamcrest.is_",
    "len"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.stats.test_stats_analyser.TestStatsAnalyser.test_GIVEN_divide_by_zeros_WHEN_rel_mean_THEN_rel_mean_correct": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "cis.stats.StatsAnalyzer",
    "hamcrest.assert_that",
    "hamcrest.close_to"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.stats.test_stats_analyser.TestStatsAnalyser.test_GIVEN_divide_by_zeros_WHEN_rel_stddev_THEN_rel_stddev_correct": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "cis.stats.StatsAnalyzer",
    "hamcrest.assert_that",
    "hamcrest.close_to"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.stats.test_stats_analyser.TestStatsAnalyser.test_GIVEN_flattened_and_unflattened_datasets_WHEN_analyze_THEN_StatisticsResults_returned": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "cis.stats.StatsAnalyzer",
    "cis.test.util.mock.make_regular_2d_ungridded_data",
    "hamcrest.assert_that",
    "hamcrest.is_",
    "len"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.stats.test_stats_analyser.TestStatsAnalyser.test_GIVEN_missing_vals_WHEN_abs_mean_THEN_abs_mean_correct": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "cis.stats.StatsAnalyzer",
    "hamcrest.assert_that",
    "hamcrest.close_to"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.stats.test_stats_analyser.TestStatsAnalyser.test_GIVEN_missing_vals_WHEN_abs_stddev_THEN_abs_stddev_correct": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "cis.stats.StatsAnalyzer",
    "hamcrest.assert_that",
    "hamcrest.close_to"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.stats.test_stats_analyser.TestStatsAnalyser.test_GIVEN_missing_vals_WHEN_count_THEN_mean_correct": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "cis.stats.StatsAnalyzer",
    "hamcrest.assert_that",
    "hamcrest.close_to"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.stats.test_stats_analyser.TestStatsAnalyser.test_GIVEN_missing_vals_WHEN_count_THEN_points_count_correct": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "cis.stats.StatsAnalyzer",
    "hamcrest.assert_that",
    "hamcrest.is_"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.stats.test_stats_analyser.TestStatsAnalyser.test_GIVEN_missing_vals_WHEN_lin_regression_THEN_regression_correct": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "cis.stats.StatsAnalyzer",
    "hamcrest.assert_that",
    "numpy.allclose"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.stats.test_stats_analyser.TestStatsAnalyser.test_GIVEN_missing_vals_WHEN_rel_mean_THEN_rel_mean_correct": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "cis.stats.StatsAnalyzer",
    "hamcrest.assert_that",
    "hamcrest.close_to"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.stats.test_stats_analyser.TestStatsAnalyser.test_GIVEN_missing_vals_WHEN_rel_stddev_THEN_rel_stddev_correct": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "cis.stats.StatsAnalyzer",
    "hamcrest.assert_that",
    "hamcrest.close_to"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.stats.test_stats_analyser.TestStatsAnalyser.test_GIVEN_missing_vals_WHEN_spearman_THEN_spearman_correct": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "cis.stats.StatsAnalyzer",
    "hamcrest.assert_that",
    "hamcrest.close_to"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.stats.test_stats_analyser.TestStatsAnalyser.test_GIVEN_missing_vals_WHEN_stddev_THEN_stddev_correct": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "cis.stats.StatsAnalyzer",
    "hamcrest.assert_that",
    "hamcrest.close_to"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.stats.test_stats_analyser.TestStatsAnalyser.test_GIVEN_missing_values_WHEN_analyze_THEN_original_data_unchanged": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "cis.stats.StatsAnalyzer",
    "hamcrest.assert_that",
    "hamcrest.is_",
    "len"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.stats.test_stats_analyser.TestStatsAnalyser.test_GIVEN_no_missing_vals_WHEN_abs_mean_THEN_abs_mean_correct": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "cis.stats.StatsAnalyzer",
    "hamcrest.assert_that",
    "hamcrest.close_to"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.stats.test_stats_analyser.TestStatsAnalyser.test_GIVEN_no_missing_vals_WHEN_abs_stddev_THEN_abs_stddev_correct": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "cis.stats.StatsAnalyzer",
    "hamcrest.assert_that",
    "hamcrest.close_to"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.stats.test_stats_analyser.TestStatsAnalyser.test_GIVEN_no_missing_vals_WHEN_count_THEN_points_count_correct": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "cis.stats.StatsAnalyzer",
    "hamcrest.assert_that",
    "hamcrest.is_"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.stats.test_stats_analyser.TestStatsAnalyser.test_GIVEN_no_missing_vals_WHEN_lin_regression_THEN_regression_correct": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "cis.stats.StatsAnalyzer",
    "hamcrest.assert_that",
    "numpy.allclose"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.stats.test_stats_analyser.TestStatsAnalyser.test_GIVEN_no_missing_vals_WHEN_mean_THEN_mean_correct": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "cis.stats.StatsAnalyzer",
    "hamcrest.assert_that",
    "hamcrest.close_to"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.stats.test_stats_analyser.TestStatsAnalyser.test_GIVEN_no_missing_vals_WHEN_rel_mean_THEN_rel_mean_correct": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "cis.stats.StatsAnalyzer",
    "hamcrest.assert_that",
    "hamcrest.close_to"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.stats.test_stats_analyser.TestStatsAnalyser.test_GIVEN_no_missing_vals_WHEN_rel_stddev_THEN_rel_stddev_correct": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "cis.stats.StatsAnalyzer",
    "hamcrest.assert_that",
    "hamcrest.close_to"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.stats.test_stats_analyser.TestStatsAnalyser.test_GIVEN_no_missing_vals_WHEN_spearman_THEN_spearman_correct": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "cis.stats.StatsAnalyzer",
    "hamcrest.assert_that",
    "hamcrest.close_to"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.stats.test_stats_analyser.TestStatsAnalyser.test_GIVEN_no_missing_vals_WHEN_stddev_THEN_stddev_correct": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "cis.stats.StatsAnalyzer",
    "hamcrest.assert_that",
    "hamcrest.close_to"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.stats.test_stats_analyser.TestStatsAnalyser.test_GIVEN_one_masked_one_nparray_WHEN_abs_mean_THEN_abs_mean_correct": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "cis.stats.StatsAnalyzer",
    "hamcrest.assert_that",
    "hamcrest.close_to"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.stats.test_stats_analyser.TestStatsAnalyser.test_GIVEN_one_masked_one_nparray_WHEN_abs_stddev_THEN_abs_stddev_correct": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "cis.stats.StatsAnalyzer",
    "hamcrest.assert_that",
    "hamcrest.close_to"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.stats.test_stats_analyser.TestStatsAnalyser.test_GIVEN_one_masked_one_nparray_WHEN_lin_regression_THEN_regression_correct": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "cis.stats.StatsAnalyzer",
    "hamcrest.assert_that",
    "numpy.allclose"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.stats.test_stats_analyser.TestStatsAnalyser.test_GIVEN_one_masked_one_nparray_WHEN_points_count_THEN_count_correct": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "cis.stats.StatsAnalyzer",
    "hamcrest.assert_that",
    "hamcrest.is_"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.stats.test_stats_analyser.TestStatsAnalyser.test_GIVEN_one_masked_one_nparray_WHEN_rel_mean_THEN_rel_mean_correct": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "cis.stats.StatsAnalyzer",
    "hamcrest.assert_that",
    "hamcrest.close_to"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.stats.test_stats_analyser.TestStatsAnalyser.test_GIVEN_one_masked_one_nparray_WHEN_rel_stddev_THEN_rel_stddev_correct": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "cis.stats.StatsAnalyzer",
    "hamcrest.assert_that",
    "hamcrest.close_to"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.stats.test_stats_analyser.TestStatsAnalyser.test_GIVEN_one_masked_one_nparray_WHEN_spearman_THEN_spearman_correct": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "cis.stats.StatsAnalyzer",
    "hamcrest.assert_that",
    "hamcrest.close_to"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.stats.test_stats_analyser.assert_that": {
  "data": {
   "shadows": "hamcrest.assert_that"
  },
  "type": "import"
 },
 "cis.test.unit.stats.test_stats_analyser.close_to": {
  "data": {
   "shadows": "hamcrest.close_to"
  },
  "type": "import"
 },
 "cis.test.unit.stats.test_stats_analyser.is_": {
  "data": {
   "shadows": "hamcrest.is_"
  },
  "type": "import"
 },
 "cis.test.unit.stats.test_stats_analyser.mock": {
  "data": {
   "shadows": "cis.test.util.mock"
  },
  "type": "import"
 },
 "cis.test.unit.stats.test_stats_analyser.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "cis.test.unit.stats.test_stats_analyser.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "cis.test.unit.stats.test_stats_results": {
  "data": {},
  "type": "module"
 },
 "cis.test.unit.stats.test_stats_results.TestAbsoluteMean": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "cis.test.unit.stats.test_stats_results.unittest"
   ]
  },
  "type": "class"
 },
 "cis.test.unit.stats.test_stats_results.TestAbsoluteMean.setUp": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "AbsoluteMean"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.stats.test_stats_results.TestAbsoluteMean.test_GIVEN_abs_mean_WHEN_as_cube_THEN_cube_data_is_correct": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "hamcrest.assert_that",
    "numpy.array_equal"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.stats.test_stats_results.TestAbsoluteMean.test_GIVEN_abs_mean_WHEN_as_cube_THEN_cube_metadata_is_correct": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "hamcrest.assert_that",
    "hamcrest.is_"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.stats.test_stats_results.TestAbsoluteMean.test_GIVEN_abs_mean_WHEN_pretty_print_THEN_pprint_is_correct": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "hamcrest.assert_that",
    "hamcrest.is_"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.stats.test_stats_results.TestAbsoluteStddev": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "cis.test.unit.stats.test_stats_results.unittest"
   ]
  },
  "type": "class"
 },
 "cis.test.unit.stats.test_stats_results.TestAbsoluteStddev.setUp": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "AbsoluteStddev"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.stats.test_stats_results.TestAbsoluteStddev.test_GIVEN_abs_stddev_WHEN_as_cube_THEN_cube_data_is_correct": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "hamcrest.assert_that",
    "numpy.array_equal"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.stats.test_stats_results.TestAbsoluteStddev.test_GIVEN_abs_stddev_WHEN_as_cube_THEN_cube_metadata_is_correct": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "hamcrest.assert_that",
    "hamcrest.is_"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.stats.test_stats_results.TestAbsoluteStddev.test_GIVEN_abs_stddev_WHEN_pretty_print_THEN_pprint_is_correct": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "hamcrest.assert_that",
    "hamcrest.is_"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.stats.test_stats_results.TestDatasetMean": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "cis.test.unit.stats.test_stats_results.unittest"
   ]
  },
  "type": "class"
 },
 "cis.test.unit.stats.test_stats_results.TestDatasetMean.setUp": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "DatasetMean"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.stats.test_stats_results.TestDatasetMean.test_GIVEN_dataset_mean_WHEN_as_cube_THEN_cube_data_is_correct": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "hamcrest.assert_that",
    "hamcrest.is_"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.stats.test_stats_results.TestDatasetMean.test_GIVEN_dataset_mean_WHEN_as_cube_THEN_cube_metadata_is_correct": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "hamcrest.assert_that",
    "hamcrest.is_"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.stats.test_stats_results.TestDatasetMean.test_GIVEN_dataset_mean_WHEN_pretty_print_THEN_pprint_is_correct": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "hamcrest.assert_that",
    "hamcrest.is_"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.stats.test_stats_results.TestDatasetStddev": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "cis.test.unit.stats.test_stats_results.unittest"
   ]
  },
  "type": "class"
 },
 "cis.test.unit.stats.test_stats_results.TestDatasetStddev.setUp": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "DatasetStddev"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.stats.test_stats_results.TestDatasetStddev.test_GIVEN_dataset_stddev_WHEN_as_cube_THEN_cube_data_is_correct": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "hamcrest.assert_that",
    "hamcrest.is_"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.stats.test_stats_results.TestDatasetStddev.test_GIVEN_dataset_stddev_WHEN_as_cube_THEN_cube_metadata_is_correct": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "hamcrest.assert_that",
    "hamcrest.is_"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.stats.test_stats_results.TestDatasetStddev.test_GIVEN_dataset_stddev_WHEN_pretty_print_THEN_pprint_is_correct": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "hamcrest.assert_that",
    "hamcrest.is_"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.stats.test_stats_results.TestLinearRegressionGradient": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "cis.test.unit.stats.test_stats_results.unittest"
   ]
  },
  "type": "class"
 },
 "cis.test.unit.stats.test_stats_results.TestLinearRegressionGradient.setUp": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "LinearRegressionGradient"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.stats.test_stats_results.TestLinearRegressionGradient.test_GIVEN_regression_WHEN_as_cube_THEN_cube_data_is_correct": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "hamcrest.assert_that",
    "hamcrest.is_"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.stats.test_stats_results.TestLinearRegressionGradient.test_GIVEN_regression_WHEN_as_cube_THEN_cube_metadata_is_correct": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "hamcrest.assert_that",
    "hamcrest.is_"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.stats.test_stats_results.TestLinearRegressionGradient.test_GIVEN_regression_WHEN_pretty_print_THEN_pprint_is_correct": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "hamcrest.assert_that",
    "hamcrest.is_"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.stats.test_stats_results.TestLinearRegressionIntercept": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "cis.test.unit.stats.test_stats_results.unittest"
   ]
  },
  "type": "class"
 },
 "cis.test.unit.stats.test_stats_results.TestLinearRegressionIntercept.setUp": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "LinearRegressionIntercept"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.stats.test_stats_results.TestLinearRegressionIntercept.test_GIVEN_regression_WHEN_as_cube_THEN_cube_data_is_correct": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "hamcrest.assert_that",
    "hamcrest.is_"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.stats.test_stats_results.TestLinearRegressionIntercept.test_GIVEN_regression_WHEN_as_cube_THEN_cube_metadata_is_correct": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "hamcrest.assert_that",
    "hamcrest.is_"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.stats.test_stats_results.TestLinearRegressionIntercept.test_GIVEN_regression_WHEN_pretty_print_THEN_pprint_is_correct": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "hamcrest.assert_that",
    "hamcrest.is_"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.stats.test_stats_results.TestLinearRegressionRValue": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "cis.test.unit.stats.test_stats_results.unittest"
   ]
  },
  "type": "class"
 },
 "cis.test.unit.stats.test_stats_results.TestLinearRegressionRValue.setUp": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "LinearRegressionRValue"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.stats.test_stats_results.TestLinearRegressionRValue.test_GIVEN_regression_WHEN_as_cube_THEN_cube_data_is_correct": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "hamcrest.assert_that",
    "hamcrest.is_"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.stats.test_stats_results.TestLinearRegressionRValue.test_GIVEN_regression_WHEN_as_cube_THEN_cube_metadata_is_correct": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "hamcrest.assert_that",
    "hamcrest.is_"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.stats.test_stats_results.TestLinearRegressionRValue.test_GIVEN_regression_WHEN_pretty_print_THEN_pprint_is_correct": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "hamcrest.assert_that",
    "hamcrest.is_"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.stats.test_stats_results.TestLinearRegressionStderr": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "cis.test.unit.stats.test_stats_results.unittest"
   ]
  },
  "type": "class"
 },
 "cis.test.unit.stats.test_stats_results.TestLinearRegressionStderr.setUp": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "LinearRegressionStderr"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.stats.test_stats_results.TestLinearRegressionStderr.test_GIVEN_regression_WHEN_as_cube_THEN_cube_data_is_correct": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "hamcrest.assert_that",
    "hamcrest.is_"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.stats.test_stats_results.TestLinearRegressionStderr.test_GIVEN_regression_WHEN_as_cube_THEN_cube_metadata_is_correct": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "hamcrest.assert_that",
    "hamcrest.is_"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.stats.test_stats_results.TestLinearRegressionStderr.test_GIVEN_regression_WHEN_pretty_print_THEN_pprint_is_correct": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "hamcrest.assert_that",
    "hamcrest.is_"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.stats.test_stats_results.TestNumPoints": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "cis.test.unit.stats.test_stats_results.unittest"
   ]
  },
  "type": "class"
 },
 "cis.test.unit.stats.test_stats_results.TestNumPoints.setUp": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "PointsCount"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.stats.test_stats_results.TestNumPoints.test_GIVEN_num_points_WHEN_as_cube_THEN_cube_data_is_correct": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "hamcrest.assert_that",
    "hamcrest.is_"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.stats.test_stats_results.TestNumPoints.test_GIVEN_num_points_WHEN_as_cube_THEN_cube_metadata_is_correct": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "hamcrest.assert_that",
    "hamcrest.is_"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.stats.test_stats_results.TestNumPoints.test_GIVEN_num_points_WHEN_pretty_print_THEN_pprint_is_correct": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "hamcrest.assert_that",
    "hamcrest.is_"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.stats.test_stats_results.TestRelativeMean": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "cis.test.unit.stats.test_stats_results.unittest"
   ]
  },
  "type": "class"
 },
 "cis.test.unit.stats.test_stats_results.TestRelativeMean.setUp": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "RelativeMean"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.stats.test_stats_results.TestRelativeMean.test_GIVEN_rel_mean_WHEN_as_cube_THEN_cube_data_is_correct": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "hamcrest.assert_that",
    "numpy.array_equal"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.stats.test_stats_results.TestRelativeMean.test_GIVEN_rel_mean_WHEN_as_cube_THEN_cube_metadata_is_correct": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "hamcrest.assert_that",
    "hamcrest.is_"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.stats.test_stats_results.TestRelativeMean.test_GIVEN_rel_mean_WHEN_pretty_print_THEN_pprint_is_correct": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "hamcrest.assert_that",
    "hamcrest.is_"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.stats.test_stats_results.TestRelativeStddev": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "cis.test.unit.stats.test_stats_results.unittest"
   ]
  },
  "type": "class"
 },
 "cis.test.unit.stats.test_stats_results.TestRelativeStddev.setUp": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "RelativeStddev"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.stats.test_stats_results.TestRelativeStddev.test_GIVEN_rel_stddev_WHEN_as_cube_THEN_cube_data_is_correct": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "hamcrest.assert_that",
    "numpy.array_equal"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.stats.test_stats_results.TestRelativeStddev.test_GIVEN_rel_stddev_WHEN_as_cube_THEN_cube_metadata_is_correct": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "hamcrest.assert_that",
    "hamcrest.is_"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.stats.test_stats_results.TestRelativeStddev.test_GIVEN_rel_stddev_WHEN_pretty_print_THEN_pprint_is_correct": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "hamcrest.assert_that",
    "hamcrest.is_"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.stats.test_stats_results.TestSpearmansRank": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "cis.test.unit.stats.test_stats_results.unittest"
   ]
  },
  "type": "class"
 },
 "cis.test.unit.stats.test_stats_results.TestSpearmansRank.setUp": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "SpearmansRank"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.stats.test_stats_results.TestSpearmansRank.test_GIVEN_spearmans_WHEN_as_cube_THEN_cube_data_is_correct": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "hamcrest.assert_that",
    "numpy.array_equal"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.stats.test_stats_results.TestSpearmansRank.test_GIVEN_spearmans_WHEN_as_cube_THEN_cube_metadata_is_correct": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "hamcrest.assert_that",
    "hamcrest.is_"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.stats.test_stats_results.TestSpearmansRank.test_GIVEN_spearmans_WHEN_pretty_print_THEN_pprint_is_correct": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "hamcrest.assert_that",
    "hamcrest.is_"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.stats.test_stats_results.array_equal": {
  "data": {
   "shadows": "numpy.array_equal"
  },
  "type": "import"
 },
 "cis.test.unit.stats.test_stats_results.assert_that": {
  "data": {
   "shadows": "hamcrest.assert_that"
  },
  "type": "import"
 },
 "cis.test.unit.stats.test_stats_results.is_": {
  "data": {
   "shadows": "hamcrest.is_"
  },
  "type": "import"
 },
 "cis.test.unit.stats.test_stats_results.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "cis.test.unit.subset": {
  "data": {},
  "type": "module"
 },
 "cis.test.unit.subset.test_subset": {
  "data": {},
  "type": "module"
 },
 "cis.test.unit.subset.test_subset.GriddedDataList": {
  "data": {
   "shadows": "cis.data_io.gridded_data.GriddedDataList"
  },
  "type": "import"
 },
 "cis.test.unit.subset.test_subset.Metadata": {
  "data": {
   "shadows": "cis.data_io.ungridded_data.Metadata"
  },
  "type": "import"
 },
 "cis.test.unit.subset.test_subset.PartialDateTime": {
  "data": {
   "shadows": "cis.time_util.PartialDateTime"
  },
  "type": "import"
 },
 "cis.test.unit.subset.test_subset.TestCase": {
  "data": {
   "shadows": "unittest.TestCase"
  },
  "type": "import"
 },
 "cis.test.unit.subset.test_subset.TestGriddedSubsetConstraint": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "unittest.TestCase"
   ]
  },
  "type": "class"
 },
 "cis.test.unit.subset.test_subset.TestGriddedSubsetConstraint.test_GIVEN_GriddedDataList_WHEN_constrain_THEN_correctly_subsetted_GriddedDataList_returned": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "cis.data_io.gridded_data.GriddedDataList",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.subset.test_subset.TestGriddedSubsetConstraint.test_can_subset_2d_gridded_data_by_latitude": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "cis.data_io.gridded_data.make_from_cube"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.subset.test_subset.TestGriddedSubsetConstraint.test_can_subset_2d_gridded_data_by_latitude_with_None_max": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "cis.data_io.gridded_data.make_from_cube"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.subset.test_subset.TestGriddedSubsetConstraint.test_can_subset_2d_gridded_data_by_latitude_with_None_min": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "cis.data_io.gridded_data.make_from_cube"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.subset.test_subset.TestGriddedSubsetConstraint.test_can_subset_2d_gridded_data_by_longitude": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "cis.data_io.gridded_data.make_from_cube"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.subset.test_subset.TestGriddedSubsetConstraint.test_can_subset_2d_gridded_data_by_longitude_latitude": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "cis.data_io.gridded_data.make_from_cube"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.subset.test_subset.TestGriddedSubsetConstraint.test_can_subset_2d_gridded_data_by_longitude_with_wrapping_at_180": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "cis.data_io.gridded_data.make_from_cube",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.subset.test_subset.TestGriddedSubsetConstraint.test_can_subset_2d_gridded_data_by_longitude_with_wrapping_at_360": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "cis.data_io.gridded_data.make_from_cube",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.subset.test_subset.TestGriddedSubsetConstraint.test_can_subset_2d_gridded_data_by_time": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "cis.data_io.gridded_data.make_from_cube"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.subset.test_subset.TestGriddedSubsetConstraint.test_can_subset_2d_gridded_data_with_missing_data": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "cis.data_io.gridded_data.make_from_cube"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.subset.test_subset.TestGriddedSubsetConstraint.test_can_subset_3d_gridded_data_by_altitude": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "cis.data_io.gridded_data.make_from_cube"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.subset.test_subset.TestGriddedSubsetConstraint.test_can_subset_3d_gridded_data_by_pressure": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "cis.data_io.gridded_data.make_from_cube"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.subset.test_subset.TestGriddedSubsetConstraint.test_can_subset_gridded_data_by_shape": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "cis.data_io.gridded_data.make_from_cube",
    "numpy.ma.is_masked"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.subset.test_subset.TestGriddedSubsetConstraint.test_can_subset_gridded_data_using_multiple_extract_constraints": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "cis.data_io.gridded_data.make_from_cube",
    "cis.time_util.convert_std_time_to_datetime"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.subset.test_subset.TestGriddedSubsetConstraint.test_edge_cases_with_bounds_for_2d_gridded_data_subset_by_longitude_latitude": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "cis.data_io.gridded_data.make_from_cube"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.subset.test_subset.TestGriddedSubsetConstraint.test_edge_cases_with_no_bounds_for_2d_gridded_data_subset_by_longitude_latitude": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "cis.data_io.gridded_data.make_from_cube"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.subset.test_subset.TestGriddedSubsetConstraint.test_empty_longitude_subset_of_gridded_data_list_returns_no_data": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "cis.data_io.gridded_data.GriddedDataList"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.subset.test_subset.TestGriddedSubsetConstraint.test_empty_time_subset_of_gridded_data_list_returns_no_data": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "cis.data_io.gridded_data.GriddedDataList"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.subset.test_subset.TestGriddedSubsetConstraint.test_null_subset_2d_gridded_data": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "cis.data_io.gridded_data.make_from_cube",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.subset.test_subset.TestUngriddedSubsetConstraint": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "unittest.TestCase"
   ]
  },
  "type": "class"
 },
 "cis.test.unit.subset.test_subset.TestUngriddedSubsetConstraint.test_GIVEN_UngriddedDataList_WHEN_constrain_THEN_correctly_subsetted_UngriddedDataList_returned": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "cis.data_io.ungridded_data.Metadata",
    "cis.data_io.ungridded_data.UngriddedData",
    "cis.data_io.ungridded_data.UngriddedDataList",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.subset.test_subset.TestUngriddedSubsetConstraint.test_can_subset_2d_ungridded_data_by_longitude": {
  "data": {
   "lineno": 187
  },
  "type": "function"
 },
 "cis.test.unit.subset.test_subset.TestUngriddedSubsetConstraint.test_can_subset_2d_ungridded_data_by_longitude_latitude": {
  "data": {
   "lineno": 215
  },
  "type": "function"
 },
 "cis.test.unit.subset.test_subset.TestUngriddedSubsetConstraint.test_can_subset_2d_ungridded_data_by_longitude_with_None_min": {
  "data": {
   "lineno": 192
  },
  "type": "function"
 },
 "cis.test.unit.subset.test_subset.TestUngriddedSubsetConstraint.test_can_subset_2d_ungridded_data_by_longitude_with_wrapping_at_180": {
  "data": {
   "lineno": 197
  },
  "type": "function"
 },
 "cis.test.unit.subset.test_subset.TestUngriddedSubsetConstraint.test_can_subset_2d_ungridded_data_by_longitude_with_wrapping_at_360": {
  "data": {
   "lineno": 203
  },
  "type": "function"
 },
 "cis.test.unit.subset.test_subset.TestUngriddedSubsetConstraint.test_can_subset_2d_ungridded_data_with_missing_values": {
  "data": {
   "lineno": 260
  },
  "type": "function"
 },
 "cis.test.unit.subset.test_subset.TestUngriddedSubsetConstraint.test_can_subset_ungridded_data_by_partial_date_time": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "cis.time_util.PartialDateTime"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.subset.test_subset.TestUngriddedSubsetConstraint.test_can_subset_ungridded_data_by_shape": {
  "data": {
   "lineno": 246
  },
  "type": "function"
 },
 "cis.test.unit.subset.test_subset.TestUngriddedSubsetConstraint.test_can_subset_ungridded_data_by_shape_and_time": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "cis.test.unit.subset.test_subset.datetime"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.subset.test_subset.TestUngriddedSubsetConstraint.test_can_subset_ungridded_data_by_time": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "cis.test.unit.subset.test_subset.datetime"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.subset.test_subset.TestUngriddedSubsetConstraint.test_can_subset_ungridded_data_by_time_altitude": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "cis.test.unit.subset.test_subset.datetime"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.subset.test_subset.TestUngriddedSubsetConstraint.test_empty_subset_of_ungridded_data_returns_no_data": {
  "data": {
   "lineno": 220
  },
  "type": "function"
 },
 "cis.test.unit.subset.test_subset.TestUngriddedSubsetConstraint.test_null_subset_of_2d_ungridded_data": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.subset.test_subset.TestUngriddedSubsetConstraint.test_original_data_not_altered_when_subsetting": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.subset.test_subset.UngriddedData": {
  "data": {
   "shadows": "cis.data_io.ungridded_data.UngriddedData"
  },
  "type": "import"
 },
 "cis.test.unit.subset.test_subset.UngriddedDataList": {
  "data": {
   "shadows": "cis.data_io.ungridded_data.UngriddedDataList"
  },
  "type": "import"
 },
 "cis.test.unit.subset.test_subset.cis.test.util.mock": {
  "data": {
   "shadows": "cis.test.util.mock"
  },
  "type": "import"
 },
 "cis.test.unit.subset.test_subset.convert_std_time_to_datetime": {
  "data": {
   "shadows": "cis.time_util.convert_std_time_to_datetime"
  },
  "type": "import"
 },
 "cis.test.unit.subset.test_subset.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "cis.test.unit.subset.test_subset.make_from_cube": {
  "data": {
   "shadows": "cis.data_io.gridded_data.make_from_cube"
  },
  "type": "import"
 },
 "cis.test.unit.subset.test_subset.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "cis.test.unit.test_api": {
  "data": {},
  "type": "module"
 },
 "cis.test.unit.test_api.TestAPI": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "unittest.TestCase"
   ]
  },
  "type": "class"
 },
 "cis.test.unit.test_api.TestAPI.setUp": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "cis.data_io.gridded_data.make_from_cube",
    "cis.test.util.mock.make_mock_cube",
    "cis.test.util.mock.make_regular_2d_ungridded_data"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_api.TestAPI.test_CAN_add_gridded_and_ungridded_data_objects_of_same_shape": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "numpy.testing.utils.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_api.TestAPI.test_basic_gridded_collapse": {
  "data": {
   "lineno": 133
  },
  "type": "function"
 },
 "cis.test.unit.test_api.TestAPI.test_basic_gridded_collapse_using_coord_objects": {
  "data": {
   "lineno": 138
  },
  "type": "function"
 },
 "cis.test.unit.test_api.TestAPI.test_basic_gridded_subsetting": {
  "data": {
   "lineno": 123
  },
  "type": "function"
 },
 "cis.test.unit.test_api.TestAPI.test_basic_gridded_to_gridded_collocation": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "numpy.testing.utils.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_api.TestAPI.test_basic_gridded_to_ungridded_collocation": {
  "data": {
   "lineno": 89
  },
  "type": "function"
 },
 "cis.test.unit.test_api.TestAPI.test_basic_ungridded_aggregation": {
  "data": {
   "lineno": 143
  },
  "type": "function"
 },
 "cis.test.unit.test_api.TestAPI.test_basic_ungridded_subsetting": {
  "data": {
   "lineno": 128
  },
  "type": "function"
 },
 "cis.test.unit.test_api.TestAPI.test_basic_ungridded_to_gridded_collocation": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "numpy.testing.utils.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_api.TestAPI.test_basic_ungridded_to_ungridded_collocation": {
  "data": {
   "lineno": 97
  },
  "type": "function"
 },
 "cis.test.unit.test_api.TestAPI.test_can_add_numpy_arrays_and_ungridded_data_objects": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "cis.test.util.mock.make_regular_2d_ungridded_data",
    "numpy.testing.utils.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_api.TestAPI.test_can_add_scalar_and_ungridded_data_objects": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "numpy.testing.utils.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_api.TestAPI.test_can_add_ungridded_data_objects": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "numpy.testing.utils.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_api.TestAPI.test_can_do_basic_coord_math": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "numpy.testing.utils.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_api.TestAPI.test_can_perform_in_place_maths": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "numpy.testing.utils.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_api.TestAPI.test_can_perform_unary_op_on_ungridded_data": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "cis.maths.abs",
    "numpy.abs",
    "numpy.testing.utils.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_api.TestAPI.test_can_slice_multidim_ungridded_data": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "numpy.testing.utils.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_api.TestAPI.test_can_slice_single_row_of_ungridded_data": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "numpy.testing.utils.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_api.TestAPI.test_can_slice_ungridded_data": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "numpy.testing.utils.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_api.TestAPI.test_cannot_add_gridded_and_ungridded_data_objects_of_different_shape": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "ValueError",
    "nose.tools.assert_raises"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_api.TestAPI.test_change_units": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "numpy.testing.assert_almost_equal",
    "str"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_api.TestAPI.test_change_units_throws_ValueError_for_invalid_units_or_conversion": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "ValueError",
    "nose.tools.assert_raises"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_api.TestAPI.test_copy_copies_metadata": {
  "data": {
   "lineno": 148
  },
  "type": "function"
 },
 "cis.test.unit.test_api.TestCase": {
  "data": {
   "shadows": "unittest.TestCase"
  },
  "type": "import"
 },
 "cis.test.unit.test_api.abs": {
  "data": {
   "shadows": "cis.maths.abs"
  },
  "type": "import"
 },
 "cis.test.unit.test_api.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "cis.test.unit.test_api.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.utils.assert_array_almost_equal"
  },
  "type": "import"
 },
 "cis.test.unit.test_api.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "cis.test.unit.test_api.make_from_cube": {
  "data": {
   "shadows": "cis.data_io.gridded_data.make_from_cube"
  },
  "type": "import"
 },
 "cis.test.unit.test_api.make_mock_cube": {
  "data": {
   "shadows": "cis.test.util.mock.make_mock_cube"
  },
  "type": "import"
 },
 "cis.test.unit.test_api.make_regular_2d_ungridded_data": {
  "data": {
   "shadows": "cis.test.util.mock.make_regular_2d_ungridded_data"
  },
  "type": "import"
 },
 "cis.test.unit.test_api.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "cis.test.unit.test_coord": {
  "data": {},
  "type": "module"
 },
 "cis.test.unit.test_coord.Coord": {
  "data": {
   "shadows": "cis.data_io.Coord.Coord"
  },
  "type": "import"
 },
 "cis.test.unit.test_coord.CoordList": {
  "data": {
   "shadows": "cis.data_io.Coord.CoordList"
  },
  "type": "import"
 },
 "cis.test.unit.test_coord.DuplicateCoordinateError": {
  "data": {
   "shadows": "cis.exceptions.DuplicateCoordinateError"
  },
  "type": "import"
 },
 "cis.test.unit.test_coord.Metadata": {
  "data": {
   "shadows": "cis.data_io.ungridded_data.Metadata"
  },
  "type": "import"
 },
 "cis.test.unit.test_coord.append_a_duplicate_to_a_list_of_coordinates_fails": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "cis.data_io.Coord.Coord",
    "cis.data_io.ungridded_data.Metadata",
    "cis.exceptions.DuplicateCoordinateError",
    "cis.test.unit.test_coord.create_dummy_coordinates_list",
    "cis.test.unit.test_coord.numpy",
    "list",
    "list.append",
    "nose.tools.istest",
    "nose.tools.raises"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_coord.can_append_to_list_of_coordinates": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "cis.data_io.Coord.Coord",
    "cis.data_io.ungridded_data.Metadata",
    "cis.test.unit.test_coord.create_dummy_coordinates_list",
    "cis.test.unit.test_coord.numpy",
    "len",
    "list",
    "list.append",
    "list.axis",
    "list.standard_name",
    "nose.tools.istest"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_coord.can_convert_time_with_since_in_units": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "assert_that",
    "cis.data_io.Coord.Coord",
    "cis.data_io.ungridded_data.Metadata",
    "cis.test.unit.test_coord.numpy",
    "is_",
    "nose.tools.istest"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_coord.can_convert_time_without_since_in_units": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "assert_that",
    "cis.data_io.Coord.Coord",
    "cis.data_io.ungridded_data.Metadata",
    "cis.test.unit.test_coord.numpy",
    "is_",
    "nose.tools.istest"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_coord.can_create_a_valid_list_of_coordinates": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "cis.test.unit.test_coord.create_dummy_coordinates_list",
    "len",
    "list",
    "list.axis",
    "list.standard_name",
    "nose.tools.istest"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_coord.can_find_a_coord_from_a_list_of_coordinates": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "cis.test.unit.test_coord.create_dummy_coordinates_list",
    "list",
    "list.get_coord",
    "nose.tools.istest"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_coord.can_find_many_coords_from_a_list_of_coordinates": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "cis.data_io.Coord.Coord",
    "cis.data_io.ungridded_data.Metadata",
    "cis.test.unit.test_coord.create_dummy_coordinates_list",
    "cis.test.unit.test_coord.numpy",
    "len",
    "list",
    "list.append",
    "list.get_coords",
    "nose.tools.istest"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_coord.can_not_convert_time_without_since_in_units_but_no_timestamp": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "ValueError",
    "cis.data_io.Coord.Coord",
    "cis.data_io.ungridded_data.Metadata",
    "cis.test.unit.test_coord.numpy",
    "nose.tools.istest",
    "nose.tools.raises"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_coord.can_not_convert_time_without_since_in_units_with_no_units": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "ValueError",
    "cis.data_io.Coord.Coord",
    "cis.data_io.ungridded_data.Metadata",
    "cis.test.unit.test_coord.numpy",
    "nose.tools.istest",
    "nose.tools.raises"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_coord.create_dummy_coordinates_list": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "cis.data_io.Coord.Coord",
    "cis.data_io.Coord.CoordList",
    "cis.data_io.ungridded_data.Metadata",
    "cis.test.unit.test_coord.numpy"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_coord.istest": {
  "data": {
   "shadows": "nose.tools.istest"
  },
  "type": "import"
 },
 "cis.test.unit.test_coord.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "cis.test.unit.test_coord.raises": {
  "data": {
   "shadows": "nose.tools.raises"
  },
  "type": "import"
 },
 "cis.test.unit.test_hyperpoint": {
  "data": {},
  "type": "module"
 },
 "cis.test.unit.test_hyperpoint.HyperPoint": {
  "data": {
   "shadows": "cis.data_io.hyperpoint.HyperPoint"
  },
  "type": "import"
 },
 "cis.test.unit.test_hyperpoint.assert_almost_equal": {
  "data": {
   "shadows": "nose.tools.assert_almost_equal"
  },
  "type": "import"
 },
 "cis.test.unit.test_hyperpoint.can_get_valid_coord_tuple_lat": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "cis.data_io.hyperpoint.HyperPoint",
    "nose.tools.eq_",
    "nose.tools.istest"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_hyperpoint.can_get_valid_coord_tuple_lat_lon": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "cis.data_io.hyperpoint.HyperPoint",
    "nose.tools.eq_",
    "nose.tools.istest"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_hyperpoint.check_compdist_returns_false_when_p1_is_closer_than_p2": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "cis.data_io.hyperpoint.HyperPoint",
    "nose.tools.istest"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_hyperpoint.check_compdist_returns_false_when_p1_is_the_same_as_p2": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "cis.data_io.hyperpoint.HyperPoint",
    "nose.tools.istest"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_hyperpoint.check_compdist_returns_true_when_p2_is_closer_than_p1": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "cis.data_io.hyperpoint.HyperPoint",
    "nose.tools.istest"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_hyperpoint.check_dist_between_2d_points_at_pole": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "cis.data_io.hyperpoint.HyperPoint",
    "nose.tools.assert_almost_equal",
    "nose.tools.istest"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_hyperpoint.check_dist_between_2d_points_on_equator": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "cis.data_io.hyperpoint.HyperPoint",
    "nose.tools.assert_almost_equal",
    "nose.tools.istest"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_hyperpoint.check_dist_between_opposite_2d_points": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "cis.data_io.hyperpoint.HyperPoint",
    "cis.test.unit.test_hyperpoint.math",
    "nose.tools.assert_almost_equal",
    "nose.tools.istest"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_hyperpoint.check_furthest_point": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "cis.data_io.hyperpoint.HyperPoint",
    "nose.tools.eq_",
    "nose.tools.istest"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_hyperpoint.check_furthest_point_on_equator": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "cis.data_io.hyperpoint.HyperPoint",
    "nose.tools.eq_",
    "nose.tools.istest"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_hyperpoint.check_furthest_point_on_pole": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "cis.data_io.hyperpoint.HyperPoint",
    "nose.tools.eq_",
    "nose.tools.istest"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_hyperpoint.eq_": {
  "data": {
   "shadows": "nose.tools.eq_"
  },
  "type": "import"
 },
 "cis.test.unit.test_hyperpoint.istest": {
  "data": {
   "shadows": "nose.tools.istest"
  },
  "type": "import"
 },
 "cis.test.unit.test_hyperpoint.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "cis.test.unit.test_hyperpoint.test_is_not_same_point_in_space_and_time_with_points_with_different_values": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "cis.data_io.hyperpoint.HyperPoint",
    "nose.tools.istest"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_hyperpoint.test_is_not_same_point_in_space_with_points_with_different_times": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "cis.data_io.hyperpoint.HyperPoint",
    "nose.tools.istest"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_hyperpoint.test_is_not_same_point_in_space_with_pressure_and_altitude_with_points_with_different_times": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "cis.data_io.hyperpoint.HyperPoint",
    "nose.tools.istest"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_hyperpoint.test_is_not_same_point_in_space_with_pressure_and_altitude_with_points_with_different_values": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "cis.data_io.hyperpoint.HyperPoint",
    "nose.tools.istest"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_hyperpoint.test_is_not_same_point_in_space_with_pressure_not_altitude_with_points_with_different_times": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "cis.data_io.hyperpoint.HyperPoint",
    "nose.tools.istest"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_hyperpoint.test_is_not_same_point_in_space_with_pressure_not_altitude_with_points_with_different_values": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "cis.data_io.hyperpoint.HyperPoint",
    "nose.tools.istest"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_hyperpoint.test_is_not_same_point_in_time_with_points_with_different_spatial_coords": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "cis.data_io.hyperpoint.HyperPoint",
    "nose.tools.istest"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_hyperpoint.test_is_not_same_point_in_time_with_points_with_different_values": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "cis.data_io.hyperpoint.HyperPoint",
    "nose.tools.istest"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_hyperpoint.test_is_not_same_point_in_time_with_pressure_and_altitude_with_points_with_different_spatial_coords": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "cis.data_io.hyperpoint.HyperPoint",
    "nose.tools.istest"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_hyperpoint.test_is_not_same_point_in_time_with_pressure_and_altitude_with_points_with_different_values": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "cis.data_io.hyperpoint.HyperPoint",
    "nose.tools.istest"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_hyperpoint.test_is_not_same_point_in_time_with_pressure_not_altitude_with_points_with_different_spatial_coords": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "cis.data_io.hyperpoint.HyperPoint",
    "nose.tools.istest"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_hyperpoint.test_is_not_same_point_in_time_with_pressure_not_altitude_with_points_with_different_values": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "cis.data_io.hyperpoint.HyperPoint",
    "nose.tools.istest"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_hyperpoint.test_is_notsame_point_in_space_with_points_with_different_values": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "cis.data_io.hyperpoint.HyperPoint",
    "nose.tools.istest"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_hyperpoint.test_same_point_in_space_and_time_with_points_with_different_values": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "cis.data_io.hyperpoint.HyperPoint",
    "nose.tools.istest"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_hyperpoint.test_same_point_in_space_with_points_with_different_times": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "cis.data_io.hyperpoint.HyperPoint",
    "nose.tools.istest"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_hyperpoint.test_same_point_in_space_with_points_with_different_values": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "cis.data_io.hyperpoint.HyperPoint",
    "nose.tools.istest"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_hyperpoint.test_same_point_in_space_with_pressure_and_altitude_with_points_with_different_times": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "cis.data_io.hyperpoint.HyperPoint",
    "nose.tools.istest"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_hyperpoint.test_same_point_in_space_with_pressure_and_altitude_with_points_with_different_values": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "cis.data_io.hyperpoint.HyperPoint",
    "nose.tools.istest"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_hyperpoint.test_same_point_in_space_with_pressure_not_altitude_with_points_with_different_times": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "cis.data_io.hyperpoint.HyperPoint",
    "nose.tools.istest"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_hyperpoint.test_same_point_in_space_with_pressure_not_altitude_with_points_with_different_values": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "cis.data_io.hyperpoint.HyperPoint",
    "nose.tools.istest"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_hyperpoint.test_same_point_in_time_with_points_with_different_spatial_coords": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "cis.data_io.hyperpoint.HyperPoint",
    "nose.tools.istest"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_hyperpoint.test_same_point_in_time_with_points_with_different_values": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "cis.data_io.hyperpoint.HyperPoint",
    "nose.tools.istest"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_hyperpoint.test_same_point_in_time_with_pressure_and_altitude_with_points_with_different_spatial_coords": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "cis.data_io.hyperpoint.HyperPoint",
    "nose.tools.istest"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_hyperpoint.test_same_point_in_time_with_pressure_and_altitude_with_points_with_different_values": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "cis.data_io.hyperpoint.HyperPoint",
    "nose.tools.istest"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_hyperpoint.test_same_point_in_time_with_pressure_not_altitude_with_points_with_different_spatial_coords": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "cis.data_io.hyperpoint.HyperPoint",
    "nose.tools.istest"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_hyperpoint.test_same_point_in_time_with_pressure_not_altitude_with_points_with_different_values": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "cis.data_io.hyperpoint.HyperPoint",
    "nose.tools.istest"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_io": {
  "data": {},
  "type": "module"
 },
 "cis.test.unit.test_io.test_NCAR_NetCDF_RAF_variable_name_decider": {
  "data": {},
  "type": "module"
 },
 "cis.test.unit.test_io.test_NCAR_NetCDF_RAF_variable_name_decider.InvalidVariableError": {
  "data": {
   "shadows": "cis.exceptions.InvalidVariableError"
  },
  "type": "import"
 },
 "cis.test.unit.test_io.test_NCAR_NetCDF_RAF_variable_name_decider.NCAR_NetCDF_RAF_variable_name_selector": {
  "data": {
   "shadows": "cis.data_io.products.NCAR_NetCDF_RAF.NCAR_NetCDF_RAF_variable_name_selector"
  },
  "type": "import"
 },
 "cis.test.unit.test_io.test_NCAR_NetCDF_RAF_variable_name_decider.TestCase": {
  "data": {
   "shadows": "unittest.TestCase"
  },
  "type": "import"
 },
 "cis.test.unit.test_io.test_NCAR_NetCDF_RAF_variable_name_decider.TestDataReader": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "unittest.TestCase"
   ]
  },
  "type": "class"
 },
 "cis.test.unit.test_io.test_NCAR_NetCDF_RAF_variable_name_decider.TestDataReader.MockVar": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "cis.test.unit.test_io.test_NCAR_NetCDF_RAF_variable_name_decider.TestDataReader.MockVar.__init__": {
  "data": {
   "lineno": 10
  },
  "type": "function"
 },
 "cis.test.unit.test_io.test_NCAR_NetCDF_RAF_variable_name_decider.TestDataReader.test_GIVEN_coordinate_attribute_WHEN_construct_THEN_values_are_set": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "assert_that",
    "cis.data_io.products.NCAR_NetCDF_RAF.NCAR_NetCDF_RAF_variable_name_selector",
    "is_"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_io.test_NCAR_NetCDF_RAF_variable_name_decider.TestDataReader.test_GIVEN_coordinate_attribute_and_pressure_WHEN_construct_THEN_pressure_name_is_set": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": [
    "assert_that",
    "cis.data_io.products.NCAR_NetCDF_RAF.NCAR_NetCDF_RAF_variable_name_selector",
    "is_"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_io.test_NCAR_NetCDF_RAF_variable_name_decider.TestDataReader.test_GIVEN_coordinate_attribute_but_no_variable_for_one_value_WHEN_construct_THEN_throw_exception": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "assert_that",
    "cis.data_io.products.NCAR_NetCDF_RAF.NCAR_NetCDF_RAF_variable_name_selector",
    "cis.exceptions.InvalidVariableError",
    "is_"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_io.test_NCAR_NetCDF_RAF_variable_name_decider.TestDataReader.test_GIVEN_coordinate_attribute_which_does_not_have_four_variables_WHEN_construct_THEN_throw_exception": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "assert_that",
    "cis.data_io.products.NCAR_NetCDF_RAF.NCAR_NetCDF_RAF_variable_name_selector",
    "cis.exceptions.InvalidVariableError",
    "is_"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_io.test_NCAR_NetCDF_RAF_variable_name_decider.TestDataReader.test_GIVEN_no_attributes_WHEN_construct_THEN_throw_exception": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "assert_that",
    "cis.data_io.products.NCAR_NetCDF_RAF.NCAR_NetCDF_RAF_variable_name_selector",
    "cis.exceptions.InvalidVariableError",
    "is_"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_io.test_NCAR_NetCDF_RAF_variable_name_decider.TestDataReader.test_GIVEN_no_attributes_or_variables_WHEN_construct_THEN_throw_exception": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "assert_that",
    "cis.data_io.products.NCAR_NetCDF_RAF.NCAR_NetCDF_RAF_variable_name_selector",
    "cis.exceptions.InvalidVariableError",
    "is_"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_io.test_NCAR_NetCDF_RAF_variable_name_decider.TestDataReader.test_GIVEN_no_time_coordinate_or_general_coordinates_WHEN_construct_THEN_throw_exception": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "assert_that",
    "cis.data_io.products.NCAR_NetCDF_RAF.NCAR_NetCDF_RAF_variable_name_selector",
    "cis.exceptions.InvalidVariableError",
    "is_"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_io.test_NCAR_NetCDF_RAF_variable_name_decider.TestDataReader.test_GIVEN_station_alt_WHEN_construct_THEN_alt_set": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "assert_that",
    "cis.data_io.products.NCAR_NetCDF_RAF.NCAR_NetCDF_RAF_variable_name_selector",
    "is_"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_io.test_NCAR_NetCDF_RAF_variable_name_decider.TestDataReader.test_GIVEN_station_coords_in_different_cases_WHEN_construct_THEN_values_are_correct": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "assert_that",
    "cis.data_io.products.NCAR_NetCDF_RAF.NCAR_NetCDF_RAF_variable_name_selector",
    "is_"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_io.test_NCAR_NetCDF_RAF_variable_name_decider.TestDataReader.test_GIVEN_time_coordinate_but_no_lat_variable_WHEN_construct_THEN_throw_exception": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "assert_that",
    "cis.data_io.products.NCAR_NetCDF_RAF.NCAR_NetCDF_RAF_variable_name_selector",
    "cis.exceptions.InvalidVariableError",
    "is_"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_io.test_NCAR_NetCDF_RAF_variable_name_decider.TestDataReader.test_GIVEN_time_coordinate_but_no_variable_WHEN_construct_THEN_throw_exception": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "assert_that",
    "cis.data_io.products.NCAR_NetCDF_RAF.NCAR_NetCDF_RAF_variable_name_selector",
    "cis.exceptions.InvalidVariableError",
    "is_"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_io.test_NCAR_NetCDF_RAF_variable_name_decider.TestDataReader.test_GIVEN_time_coordinate_station_lat_and_lon_variable_WHEN_construct_THEN_names_are_correct": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "assert_that",
    "cis.data_io.products.NCAR_NetCDF_RAF.NCAR_NetCDF_RAF_variable_name_selector",
    "is_"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_io.test_NCAR_NetCDF_RAF_variable_name_decider.TestDataReader.test_GIVEN_time_coordinate_station_lat_but_no_lon_variable_WHEN_construct_THEN_throw_exception": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "assert_that",
    "cis.data_io.products.NCAR_NetCDF_RAF.NCAR_NetCDF_RAF_variable_name_selector",
    "cis.exceptions.InvalidVariableError",
    "is_"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_io.test_NCAR_NetCDF_RAF_variable_name_decider.TestDataReader.test_GIVEN_time_coordinate_var_lat_lon_alt_but_alt_variable_does_not_exist_WHEN_construct_THEN_throw_exception": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "assert_that",
    "cis.data_io.products.NCAR_NetCDF_RAF.NCAR_NetCDF_RAF_variable_name_selector",
    "cis.exceptions.InvalidVariableError",
    "is_"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_io.test_NCAR_NetCDF_RAF_variable_name_decider.TestDataReader.test_GIVEN_time_coordinate_variable_lat_but_lat_variable_does_not_exist_WHEN_construct_THEN_throw_exception": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "assert_that",
    "cis.data_io.products.NCAR_NetCDF_RAF.NCAR_NetCDF_RAF_variable_name_selector",
    "cis.exceptions.InvalidVariableError",
    "is_"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_io.test_NCAR_NetCDF_RAF_variable_name_decider.TestDataReader.test_GIVEN_time_coordinate_variable_lat_but_no_lon_variable_WHEN_construct_THEN_throw_exception": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "assert_that",
    "cis.data_io.products.NCAR_NetCDF_RAF.NCAR_NetCDF_RAF_variable_name_selector",
    "cis.exceptions.InvalidVariableError",
    "is_"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_io.test_NCAR_NetCDF_RAF_variable_name_decider.TestDataReader.test_GIVEN_time_coordinate_variable_lat_lon_alt_WHEN_construct_THEN_values_are_set": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "assert_that",
    "cis.data_io.products.NCAR_NetCDF_RAF.NCAR_NetCDF_RAF_variable_name_selector",
    "is_"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_io.test_NCAR_NetCDF_RAF_variable_name_decider.TestDataReader.test_GIVEN_time_coordinate_variable_lat_lon_alt_with_timestamp_WHEN_construct_THEN_timestamp_set": {
  "data": {
   "lineno": 346,
   "symbols_in_volume": [
    "assert_that",
    "cis.data_io.products.NCAR_NetCDF_RAF.NCAR_NetCDF_RAF_variable_name_selector",
    "is_"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_io.test_NCAR_NetCDF_RAF_variable_name_decider.TestDataReader.test_GIVEN_time_coordinate_variable_lat_lon_but_lon_variable_does_not_exist_WHEN_construct_THEN_throw_exception": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "assert_that",
    "cis.data_io.products.NCAR_NetCDF_RAF.NCAR_NetCDF_RAF_variable_name_selector",
    "cis.exceptions.InvalidVariableError",
    "is_"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_io.test_NCAR_NetCDF_RAF_variable_name_decider.TestDataReader.test_GIVEN_time_coordinate_variable_lat_lon_with_PRE_WHEN_construct_THEN_pressure_name_is_set": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "assert_that",
    "cis.data_io.products.NCAR_NetCDF_RAF.NCAR_NetCDF_RAF_variable_name_selector",
    "is_"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_io.test_NCAR_NetCDF_RAF_variable_name_decider.TestDataReader.test_GIVEN_time_coordinate_variable_lat_lon_with_PRE_and_PSXC_WHEN_construct_THEN_pressure_name_is_set_to_PSXC": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "assert_that",
    "cis.data_io.products.NCAR_NetCDF_RAF.NCAR_NetCDF_RAF_variable_name_selector",
    "is_"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_io.test_NCAR_NetCDF_RAF_variable_name_decider.TestDataReader.test_GIVEN_time_coordinate_variable_lat_lon_with_PSXC_WHEN_construct_THEN_pressure_name_is_set": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "assert_that",
    "cis.data_io.products.NCAR_NetCDF_RAF.NCAR_NetCDF_RAF_variable_name_selector",
    "is_"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_io.test_NCAR_NetCDF_RAF_variable_name_decider.TestDataReader.test_GIVEN_time_coordinate_variable_lat_lon_with_no_alt_WHEN_construct_THEN_values_are_set": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "assert_that",
    "cis.data_io.products.NCAR_NetCDF_RAF.NCAR_NetCDF_RAF_variable_name_selector",
    "is_"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_io.test_NCAR_NetCDF_RAF_variable_name_decider.TestDataReader.test_GIVEN_valid_file_w_1_var_same_shape_others_not_and_t_is_multid_WHEN_get_vars_THEN_only_same_shape_returned": {
  "data": {
   "lineno": 404,
   "symbols_in_volume": [
    "assert_that",
    "cis.data_io.products.NCAR_NetCDF_RAF.NCAR_NetCDF_RAF_variable_name_selector",
    "is_",
    "list",
    "set",
    "vars"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_io.test_NCAR_NetCDF_RAF_variable_name_decider.TestDataReader.test_GIVEN_valid_file_w_var_with_aux_coords_WHEN_find_auxiliary_coordinates_THEN_returns_aux_coords": {
  "data": {
   "lineno": 431,
   "symbols_in_volume": [
    "assert_that",
    "cis.data_io.products.NCAR_NetCDF_RAF.NCAR_NetCDF_RAF_variable_name_selector",
    "cis.exceptions.InvalidVariableError",
    "is_",
    "list"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_io.test_NCAR_NetCDF_RAF_variable_name_decider.TestDataReader.test_GIVEN_valid_file_w_var_with_unnamed_aux_WHEN_find_auxiliary_coordinates_THEN_returns_aux_coords": {
  "data": {
   "lineno": 456,
   "symbols_in_volume": [
    "assert_that",
    "cis.data_io.products.NCAR_NetCDF_RAF.NCAR_NetCDF_RAF_variable_name_selector",
    "cis.exceptions.InvalidVariableError",
    "is_",
    "list"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_io.test_NCAR_NetCDF_RAF_variable_name_decider.TestDataReader.test_GIVEN_valid_file_with_all_variables_same_shape_as_time_WHEN_get_vars_THEN_all_variables_returned": {
  "data": {
   "lineno": 364,
   "symbols_in_volume": [
    "all",
    "assert_that",
    "cis.data_io.products.NCAR_NetCDF_RAF.NCAR_NetCDF_RAF_variable_name_selector",
    "vars"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_io.test_NCAR_NetCDF_RAF_variable_name_decider.TestDataReader.test_GIVEN_valid_file_with_one_variables_same_shape_others_not_WHEN_get_vars_THEN_only_same_shape_is_returned": {
  "data": {
   "lineno": 380,
   "symbols_in_volume": [
    "assert_that",
    "cis.data_io.products.NCAR_NetCDF_RAF.NCAR_NetCDF_RAF_variable_name_selector",
    "is_",
    "list",
    "set",
    "vars"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_io.test_data_reader": {
  "data": {},
  "type": "module"
 },
 "cis.test.unit.test_io.test_data_reader.DataReader": {
  "data": {
   "shadows": "cis.data_io.data_reader.DataReader"
  },
  "type": "import"
 },
 "cis.test.unit.test_io.test_data_reader.GriddedData": {
  "data": {
   "shadows": "cis.data_io.gridded_data.GriddedData"
  },
  "type": "import"
 },
 "cis.test.unit.test_io.test_data_reader.GriddedDataList": {
  "data": {
   "shadows": "cis.data_io.gridded_data.GriddedDataList"
  },
  "type": "import"
 },
 "cis.test.unit.test_io.test_data_reader.MagicMock": {
  "data": {
   "shadows": "mock.MagicMock"
  },
  "type": "import"
 },
 "cis.test.unit.test_io.test_data_reader.TestCase": {
  "data": {
   "shadows": "unittest.TestCase"
  },
  "type": "import"
 },
 "cis.test.unit.test_io.test_data_reader.TestDataReader": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "unittest.TestCase"
   ]
  },
  "type": "class"
 },
 "cis.test.unit.test_io.test_data_reader.TestDataReader.test_GIVEN_aliases_None_WHEN_read_datagroups_THEN_read_OK_aliases_default_to_var_names": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "cis.data_io.data_reader.DataReader",
    "cis.data_io.gridded_data.make_from_cube",
    "cis.test.util.mock.make_square_5x3_2d_cube",
    "hamcrest.assert_that",
    "hamcrest.is_",
    "mock.MagicMock"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_io.test_data_reader.TestDataReader.test_GIVEN_aliases_WHEN_read_datagroups_THEN_output_data_has_aliases": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "cis.data_io.data_reader.DataReader",
    "cis.data_io.gridded_data.make_from_cube",
    "cis.test.util.mock.make_square_5x3_2d_cube",
    "hamcrest.assert_that",
    "hamcrest.is_",
    "mock.MagicMock"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_io.test_data_reader.TestDataReader.test_GIVEN_aliases_missing_WHEN_read_datagroups_THEN_read_OK_aliases_default_to_var_names": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "cis.data_io.data_reader.DataReader",
    "cis.data_io.gridded_data.make_from_cube",
    "cis.test.util.mock.make_square_5x3_2d_cube",
    "hamcrest.assert_that",
    "hamcrest.is_",
    "mock.MagicMock"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_io.test_data_reader.TestDataReader.test_GIVEN_gridded_datagroups_WHEN_read_datagroups_THEN_data_returned_in_list": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "cis.data_io.data_reader.DataReader",
    "cis.data_io.gridded_data.make_from_cube",
    "cis.test.util.mock.make_square_5x3_2d_cube",
    "hamcrest.assert_that",
    "hamcrest.is_",
    "len",
    "mock.MagicMock"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_io.test_data_reader.TestDataReader.test_GIVEN_multiple_datagroups_WHEN_read_datagroups_THEN_get_data_called_correctly": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "cis.data_io.data_reader.DataReader",
    "cis.test.util.mock.make_regular_2d_ungridded_data",
    "hamcrest.assert_that",
    "hamcrest.is_",
    "mock.MagicMock"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_io.test_data_reader.TestDataReader.test_GIVEN_multiple_variable_gridded_WHEN_read_data_THEN_GriddedDataList_returned": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "cis.data_io.data_reader.DataReader",
    "cis.data_io.gridded_data.GriddedData",
    "cis.data_io.gridded_data.GriddedDataList",
    "cis.test.util.mock.make_square_5x3_2d_cube",
    "hamcrest.assert_that",
    "hamcrest.instance_of",
    "hamcrest.is_",
    "mock.MagicMock"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_io.test_data_reader.TestDataReader.test_GIVEN_multiple_variable_mix_of_gridded_ungridded_WHEN_read_data_THEN_raises_TypeError": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "TypeError",
    "cis.data_io.data_reader.DataReader",
    "cis.data_io.gridded_data.GriddedData",
    "cis.test.util.mock.make_regular_2d_ungridded_data",
    "cis.test.util.mock.make_square_5x3_2d_cube",
    "mock.MagicMock"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_io.test_data_reader.TestDataReader.test_GIVEN_multiple_variable_ungridded_WHEN_read_data_THEN_GriddedDataList_returned": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "cis.data_io.data_reader.DataReader",
    "cis.data_io.ungridded_data.UngriddedDataList",
    "cis.test.util.mock.make_regular_2d_ungridded_data",
    "hamcrest.assert_that",
    "hamcrest.instance_of",
    "hamcrest.is_",
    "mock.MagicMock"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_io.test_data_reader.TestDataReader.test_GIVEN_no_matching_variables_for_wildcards_WHEN_read_data_THEN_no_Error": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "cis.data_io.data_reader.DataReader",
    "cis.test.util.mock.make_regular_2d_ungridded_data",
    "hamcrest.assert_that",
    "hamcrest.is_",
    "mock.MagicMock"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_io.test_data_reader.TestDataReader.test_GIVEN_no_matching_variables_found_overall_WHEN_read_data_THEN_raises_Error": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "ValueError",
    "cis.data_io.data_reader.DataReader",
    "mock.MagicMock"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_io.test_data_reader.TestDataReader.test_GIVEN_not_enough_aliases_WHEN_read_datagroups_THEN_raises_ValueError": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "ValueError",
    "cis.data_io.data_reader.DataReader",
    "cis.data_io.gridded_data.make_from_cube",
    "cis.test.util.mock.make_square_5x3_2d_cube",
    "mock.MagicMock"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_io.test_data_reader.TestDataReader.test_GIVEN_single_variable_gridded_WHEN_read_data_THEN_GriddedData_returned": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "cis.data_io.data_reader.DataReader",
    "cis.data_io.gridded_data.GriddedData",
    "cis.test.util.mock.make_square_5x3_2d_cube",
    "hamcrest.assert_that",
    "hamcrest.instance_of",
    "hamcrest.is_",
    "mock.MagicMock"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_io.test_data_reader.TestDataReader.test_GIVEN_single_variable_ungridded_WHEN_read_data_THEN_GriddedData_returned": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "cis.data_io.data_reader.DataReader",
    "cis.data_io.ungridded_data.UngriddedData",
    "cis.test.util.mock.make_regular_2d_ungridded_data",
    "hamcrest.assert_that",
    "hamcrest.instance_of",
    "hamcrest.is_",
    "mock.MagicMock"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_io.test_data_reader.TestDataReader.test_GIVEN_ungridded_datagroups_with_different_num_vars_WHEN_read_datagroups_THEN_data_returned_in_list": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "cis.data_io.data_reader.DataReader",
    "cis.test.util.mock.make_regular_2d_ungridded_data",
    "hamcrest.assert_that",
    "hamcrest.is_",
    "len",
    "mock.MagicMock"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_io.test_data_reader.TestDataReader.test_GIVEN_wildcards_WHEN_read_data_THEN_matching_variables_identified": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "cis.data_io.data_reader.DataReader",
    "cis.test.util.mock.make_regular_2d_ungridded_data",
    "hamcrest.assert_that",
    "hamcrest.is_",
    "len",
    "mock.MagicMock",
    "range"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_io.test_data_reader.UngriddedData": {
  "data": {
   "shadows": "cis.data_io.ungridded_data.UngriddedData"
  },
  "type": "import"
 },
 "cis.test.unit.test_io.test_data_reader.UngriddedDataList": {
  "data": {
   "shadows": "cis.data_io.ungridded_data.UngriddedDataList"
  },
  "type": "import"
 },
 "cis.test.unit.test_io.test_data_reader.assert_that": {
  "data": {
   "shadows": "hamcrest.assert_that"
  },
  "type": "import"
 },
 "cis.test.unit.test_io.test_data_reader.instance_of": {
  "data": {
   "shadows": "hamcrest.instance_of"
  },
  "type": "import"
 },
 "cis.test.unit.test_io.test_data_reader.is_": {
  "data": {
   "shadows": "hamcrest.is_"
  },
  "type": "import"
 },
 "cis.test.unit.test_io.test_data_reader.make_from_cube": {
  "data": {
   "shadows": "cis.data_io.gridded_data.make_from_cube"
  },
  "type": "import"
 },
 "cis.test.unit.test_io.test_data_reader.make_regular_2d_ungridded_data": {
  "data": {
   "shadows": "cis.test.util.mock.make_regular_2d_ungridded_data"
  },
  "type": "import"
 },
 "cis.test.unit.test_io.test_data_reader.make_square_5x3_2d_cube": {
  "data": {
   "shadows": "cis.test.util.mock.make_square_5x3_2d_cube"
  },
  "type": "import"
 },
 "cis.test.unit.test_io.test_data_reader.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "cis.test.unit.test_io.test_gridded_data": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "cis.test.unit.test_io.test_gridded_data.nose"
   ]
  },
  "type": "module"
 },
 "cis.test.unit.test_io.test_gridded_data.gridded_data": {
  "data": {
   "shadows": "cis.data_io.gridded_data"
  },
  "type": "import"
 },
 "cis.test.unit.test_io.test_gridded_data.istest": {
  "data": {
   "shadows": "nose.tools.istest"
  },
  "type": "import"
 },
 "cis.test.unit.test_io.test_gridded_data.mock": {
  "data": {
   "shadows": "cis.test.util.mock"
  },
  "type": "import"
 },
 "cis.test.unit.test_io.test_gridded_data.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "cis.test.unit.test_io.test_gridded_data.nottest": {
  "data": {
   "shadows": "nose.tools.nottest"
  },
  "type": "import"
 },
 "cis.test.unit.test_io.test_gridded_data.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "cis.test.unit.test_io.test_gridded_data.raises": {
  "data": {
   "shadows": "nose.tools.raises"
  },
  "type": "import"
 },
 "cis.test.unit.test_io.test_gridded_data.test_can_add_history": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "cis.data_io.gridded_data.make_from_cube",
    "cis.test.util.mock.make_5x3_lon_lat_2d_cube_with_missing_data",
    "nose.tools.istest"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_io.test_gridded_data.test_can_create_gridded_data": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "cis.data_io.gridded_data.GriddedData",
    "cis.data_io.gridded_data.make_from_cube",
    "cis.test.util.mock.make_5x3_lon_lat_2d_cube_with_missing_data",
    "isinstance",
    "nose.tools.istest"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_io.test_gridded_data.test_can_set_longitude_wrap_at_180": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "cis.data_io.gridded_data.make_from_cube",
    "cis.test.util.mock.make_mock_cube",
    "nose.tools.istest",
    "numpy.array",
    "numpy.max",
    "numpy.min"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_io.test_gridded_data.test_can_set_longitude_wrap_at_180_2": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "cis.data_io.gridded_data.make_from_cube",
    "cis.test.util.mock.make_mock_cube",
    "nose.tools.istest",
    "numpy.array",
    "numpy.max",
    "numpy.min"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_io.test_gridded_data.test_can_set_longitude_wrap_at_180_3": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "cis.data_io.gridded_data.make_from_cube",
    "cis.test.util.mock.make_mock_cube",
    "nose.tools.istest",
    "numpy.array",
    "numpy.max",
    "numpy.min"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_io.test_gridded_data.test_can_set_longitude_wrap_at_360": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "cis.data_io.gridded_data.make_from_cube",
    "cis.test.util.mock.make_mock_cube",
    "nose.tools.istest",
    "numpy.array",
    "numpy.max",
    "numpy.min"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_io.test_gridded_data.test_can_set_longitude_wrap_at_360_2": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "cis.data_io.gridded_data.make_from_cube",
    "cis.test.util.mock.make_mock_cube",
    "nose.tools.istest",
    "numpy.array",
    "numpy.max",
    "numpy.min"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_io.test_gridded_data.test_can_set_longitude_wrap_at_360_3": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "cis.data_io.gridded_data.make_from_cube",
    "cis.test.util.mock.make_mock_cube",
    "nose.tools.istest",
    "numpy.array",
    "numpy.max",
    "numpy.min"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_io.test_gridded_data.test_get_all_points_returns_points": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "cis.data_io.gridded_data.make_from_cube",
    "cis.test.util.mock.make_5x3_lon_lat_2d_cube_with_missing_data",
    "len",
    "nose.tools.istest"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_io.test_gridded_data.test_get_coordinates_points_returns_points": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "cis.data_io.gridded_data.make_from_cube",
    "cis.test.util.mock.make_5x3_lon_lat_2d_cube_with_missing_data",
    "len",
    "nose.tools.istest"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_io.test_gridded_data.test_get_non_masked_points_returns_points": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "cis.data_io.gridded_data.make_from_cube",
    "cis.test.util.mock.make_5x3_lon_lat_2d_cube_with_missing_data",
    "len",
    "nose.tools.istest"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_io.test_gridded_data.test_name_method": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "cis.data_io.gridded_data.make_from_cube",
    "cis.test.util.mock.make_mock_cube",
    "nose.tools.istest"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_io.test_gridded_data.test_set_longitude_bounds_wrap_at_180": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "cis.data_io.gridded_data.make_from_cube",
    "cis.test.util.mock.make_mock_cube",
    "nose.tools.istest",
    "numpy.array",
    "numpy.max",
    "numpy.min"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_io.test_gridded_data.test_set_longitude_bounds_wrap_at_360": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "cis.data_io.gridded_data.make_from_cube",
    "cis.test.util.mock.make_mock_cube",
    "nose.tools.istest",
    "numpy.array",
    "numpy.max",
    "numpy.min"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_io.test_hdf": {
  "data": {},
  "type": "module"
 },
 "cis.test.unit.test_io.test_hdf.HDFNotInstalledTests": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "cis.test.unit.test_io.test_hdf.HDFNotInstalledTests.setup": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "cis.data_io.hdf",
    "cis.data_io.hdf_sd",
    "cis.data_io.hdf_vd",
    "mock.MagicMock",
    "mock.patch.dict"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_io.test_hdf.HDFNotInstalledTests.teardown": {
  "data": {
   "lineno": 35
  },
  "type": "function"
 },
 "cis.test.unit.test_io.test_hdf.HDFNotInstalledTests.test_no_pyhdf_raises_not_installed_in_HDF_get_metadata": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "ImportError",
    "nose.tools.raises"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_io.test_hdf.HDFNotInstalledTests.test_no_pyhdf_raises_not_installed_in_SD_read": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "ImportError",
    "nose.tools.raises"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_io.test_hdf.HDFNotInstalledTests.test_no_pyhdf_raises_not_installed_in_SD_variables": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "ImportError",
    "nose.tools.raises"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_io.test_hdf.HDFNotInstalledTests.test_no_pyhdf_raises_not_installed_in_VD_read": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "ImportError",
    "nose.tools.raises"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_io.test_hdf.HDFNotInstalledTests.test_no_pyhdf_raises_not_installed_in_VD_variables": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "ImportError",
    "nose.tools.raises"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_io.test_hdf.MagicMock": {
  "data": {
   "shadows": "mock.MagicMock"
  },
  "type": "import"
 },
 "cis.test.unit.test_io.test_hdf.hdf": {
  "data": {
   "shadows": "cis.data_io.hdf"
  },
  "type": "import"
 },
 "cis.test.unit.test_io.test_hdf.hdf_sd": {
  "data": {
   "shadows": "cis.data_io.hdf_sd"
  },
  "type": "import"
 },
 "cis.test.unit.test_io.test_hdf.hdf_vd": {
  "data": {
   "shadows": "cis.data_io.hdf_vd"
  },
  "type": "import"
 },
 "cis.test.unit.test_io.test_hdf.patch": {
  "data": {
   "shadows": "mock.patch"
  },
  "type": "import"
 },
 "cis.test.unit.test_io.test_hdf.raises": {
  "data": {
   "shadows": "nose.tools.raises"
  },
  "type": "import"
 },
 "cis.test.unit.test_io.test_hyperpoint_view": {
  "data": {},
  "type": "module"
 },
 "cis.test.unit.test_io.test_hyperpoint_view.GriddedHyperPointView": {
  "data": {
   "shadows": "cis.data_io.hyperpoint_view.GriddedHyperPointView"
  },
  "type": "import"
 },
 "cis.test.unit.test_io.test_hyperpoint_view.TestGriddedHyperPointView": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "cis.test.unit.test_io.test_hyperpoint_view.TestGriddedHyperPointView.test_accessing_with_invalid_flat_index_raises_error": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "IndexError",
    "cis.data_io.gridded_data.make_from_cube",
    "cis.test.util.mock.make_5x3_lon_lat_2d_cube_with_missing_data",
    "nose.tools.istest",
    "nose.tools.raises"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_io.test_hyperpoint_view.TestGriddedHyperPointView.test_accessing_with_invalid_index_raises_error": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "IndexError",
    "cis.data_io.gridded_data.make_from_cube",
    "cis.test.util.mock.make_5x3_lon_lat_2d_cube_with_missing_data",
    "nose.tools.istest",
    "nose.tools.raises"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_io.test_hyperpoint_view.TestGriddedHyperPointView.test_can_access_point_in_gridded_hyper_point_view_": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "cis.data_io.gridded_data.make_from_cube",
    "cis.test.util.mock.make_5x3_lon_lat_2d_cube_with_missing_data",
    "nose.tools.istest"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_io.test_hyperpoint_view.TestGriddedHyperPointView.test_can_create_gridded_hyper_point_view": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "cis.data_io.gridded_data.make_from_cube",
    "cis.data_io.hyperpoint_view.GriddedHyperPointView",
    "cis.test.util.mock.make_5x3_lon_lat_2d_cube_with_missing_data",
    "len",
    "nose.tools.istest"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_io.test_hyperpoint_view.TestGriddedHyperPointView.test_can_enumerate_non_masked_points": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "cis.data_io.gridded_data.make_from_cube",
    "cis.test.util.mock.make_5x3_lon_lat_2d_cube_with_missing_data",
    "nose.tools.istest"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_io.test_hyperpoint_view.TestGriddedHyperPointView.test_can_iterate_over_all_points": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "cis.data_io.gridded_data.make_from_cube",
    "cis.test.util.mock.make_square_5x3_2d_cube",
    "nose.tools.istest"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_io.test_hyperpoint_view.TestGriddedHyperPointView.test_can_iterate_over_non_masked_points": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "cis.data_io.gridded_data.make_from_cube",
    "cis.test.util.mock.make_5x3_lon_lat_2d_cube_with_missing_data",
    "nose.tools.istest"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_io.test_hyperpoint_view.TestGriddedHyperPointView.test_can_modify_a_hyperpoint_value": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "cis.data_io.gridded_data.make_from_cube",
    "cis.test.util.mock.make_5x3_lon_lat_2d_cube_with_missing_data",
    "nose.tools.istest"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_io.test_hyperpoint_view.TestGriddedHyperPointView.test_can_modify_a_hyperpoint_value_via_flat_index": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "cis.data_io.gridded_data.make_from_cube",
    "cis.test.util.mock.make_5x3_lon_lat_2d_cube_with_missing_data",
    "nose.tools.istest"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_io.test_hyperpoint_view.TestGriddedHyperPointView.test_can_set_a_hyperpoint": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "cis.data_io.gridded_data.make_from_cube",
    "cis.test.util.mock.make_5x3_lon_lat_2d_cube_with_missing_data",
    "nose.tools.istest"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_io.test_hyperpoint_view.TestGriddedHyperPointView.test_can_set_a_hyperpoint_via_flat_index": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "cis.data_io.gridded_data.make_from_cube",
    "cis.test.util.mock.make_5x3_lon_lat_2d_cube_with_missing_data",
    "nose.tools.istest"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_io.test_hyperpoint_view.TestGriddedHyperPointView.test_can_set_longitude_wrap_at_180": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": [
    "cis.data_io.gridded_data.make_from_cube",
    "cis.test.util.mock.make_mock_cube",
    "nose.tools.istest",
    "numpy.array",
    "numpy.max",
    "numpy.min"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_io.test_hyperpoint_view.TestGriddedHyperPointView.test_can_set_longitude_wrap_at_360": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": [
    "cis.data_io.gridded_data.make_from_cube",
    "cis.test.util.mock.make_mock_cube",
    "nose.tools.istest",
    "numpy.array",
    "numpy.max",
    "numpy.min"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_io.test_hyperpoint_view.TestGriddedHyperPointView.test_setting_new_hyperpoint_coord_can_raise_exception": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "ValueError",
    "cis.data_io.gridded_data.make_from_cube",
    "cis.test.util.mock.make_5x3_lon_lat_2d_cube_with_missing_data",
    "nose.tools.istest",
    "nose.tools.raises"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_io.test_hyperpoint_view.TestUngriddedHyperPointView": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "cis.test.unit.test_io.test_hyperpoint_view.TestUngriddedHyperPointView.test_accessing_with_invalid_index_raises_error": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "IndexError",
    "cis.test.util.mock.make_regular_2d_ungridded_data_with_missing_values",
    "nose.tools.istest",
    "nose.tools.raises"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_io.test_hyperpoint_view.TestUngriddedHyperPointView.test_can_access_point_in_ungridded_hyper_point_view": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "cis.test.util.mock.make_regular_2d_ungridded_data_with_missing_values",
    "nose.tools.istest"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_io.test_hyperpoint_view.TestUngriddedHyperPointView.test_can_create_ungridded_hyper_point_view": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "cis.data_io.hyperpoint_view.UngriddedHyperPointView",
    "cis.test.util.mock.make_regular_2d_ungridded_data_with_missing_values",
    "len",
    "nose.tools.istest"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_io.test_hyperpoint_view.TestUngriddedHyperPointView.test_can_enumerate_non_masked_points": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "cis.test.util.mock.make_regular_2d_ungridded_data_with_missing_values",
    "nose.tools.istest"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_io.test_hyperpoint_view.TestUngriddedHyperPointView.test_can_iterate_over_all_points": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "cis.test.util.mock.make_regular_2d_ungridded_data",
    "nose.tools.istest"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_io.test_hyperpoint_view.TestUngriddedHyperPointView.test_can_iterate_over_non_masked_points": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "cis.test.util.mock.make_regular_2d_ungridded_data_with_missing_values",
    "nose.tools.istest"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_io.test_hyperpoint_view.TestUngriddedHyperPointView.test_can_modify_a_hyperpoint_value": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "cis.test.util.mock.make_regular_2d_ungridded_data_with_missing_values",
    "nose.tools.istest"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_io.test_hyperpoint_view.TestUngriddedHyperPointView.test_can_set_a_hyperpoint": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "cis.test.util.mock.make_regular_2d_ungridded_data_with_missing_values",
    "nose.tools.istest"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_io.test_hyperpoint_view.TestUngriddedHyperPointView.test_can_set_longitude_wrap_at_180": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "cis.test.util.mock.make_regular_2d_ungridded_data",
    "nose.tools.istest",
    "numpy.max",
    "numpy.min"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_io.test_hyperpoint_view.TestUngriddedHyperPointView.test_can_set_longitude_wrap_at_360": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "cis.test.util.mock.make_regular_2d_ungridded_data",
    "nose.tools.istest",
    "numpy.max",
    "numpy.min"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_io.test_hyperpoint_view.UngriddedHyperPointView": {
  "data": {
   "shadows": "cis.data_io.hyperpoint_view.UngriddedHyperPointView"
  },
  "type": "import"
 },
 "cis.test.unit.test_io.test_hyperpoint_view.gridded_data": {
  "data": {
   "shadows": "cis.data_io.gridded_data"
  },
  "type": "import"
 },
 "cis.test.unit.test_io.test_hyperpoint_view.istest": {
  "data": {
   "shadows": "nose.tools.istest"
  },
  "type": "import"
 },
 "cis.test.unit.test_io.test_hyperpoint_view.mock": {
  "data": {
   "shadows": "cis.test.util.mock"
  },
  "type": "import"
 },
 "cis.test.unit.test_io.test_hyperpoint_view.nottest": {
  "data": {
   "shadows": "nose.tools.nottest"
  },
  "type": "import"
 },
 "cis.test.unit.test_io.test_hyperpoint_view.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "cis.test.unit.test_io.test_hyperpoint_view.raises": {
  "data": {
   "shadows": "nose.tools.raises"
  },
  "type": "import"
 },
 "cis.test.unit.test_io.test_ungridded_data": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "cis.test.unit.test_io.test_ungridded_data.nose",
    "cis.test.unit.test_io.test_ungridded_data.pandas",
    "unittest.skipIf"
   ]
  },
  "type": "module"
 },
 "cis.test.unit.test_io.test_ungridded_data.Coord": {
  "data": {
   "shadows": "cis.data_io.Coord.Coord"
  },
  "type": "import"
 },
 "cis.test.unit.test_io.test_ungridded_data.CoordList": {
  "data": {
   "shadows": "cis.data_io.Coord.CoordList"
  },
  "type": "import"
 },
 "cis.test.unit.test_io.test_ungridded_data.Metadata": {
  "data": {
   "shadows": "cis.data_io.ungridded_data.Metadata"
  },
  "type": "import"
 },
 "cis.test.unit.test_io.test_ungridded_data.TestCase": {
  "data": {
   "shadows": "unittest.TestCase"
  },
  "type": "import"
 },
 "cis.test.unit.test_io.test_ungridded_data.TestMetadata": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "unittest.TestCase"
   ]
  },
  "type": "class"
 },
 "cis.test.unit.test_io.test_ungridded_data.TestMetadata.test_unit_setter": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "cf_units.Unit",
    "cis.data_io.ungridded_data.Metadata"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_io.test_ungridded_data.TestPandasHelperFunctions": {
  "data": {
   "lineno": 418,
   "symbols_in_volume": [
    "cis.test.unit.test_io.test_ungridded_data.skip_pandas",
    "unittest.TestCase"
   ]
  },
  "type": "class"
 },
 "cis.test.unit.test_io.test_ungridded_data.TestPandasHelperFunctions.test_GIVEN_masked_array_WHEN_call_to_flat_ndarray_NO_copy_THEN_raises_ValueError": {
  "data": {
   "lineno": 421,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "cis.data_io.ungridded_data._to_flat_ndarray",
    "nose.tools.raises",
    "numpy.arange",
    "numpy.ma.masked_array",
    "numpy.reshape",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_io.test_ungridded_data.TestPandasHelperFunctions.test_GIVEN_masked_array_WHEN_call_to_flat_ndarray_with_copy_THEN_returns_a_flat_copy": {
  "data": {
   "lineno": 431,
   "symbols_in_volume": [
    "bool",
    "cis.data_io.ungridded_data._to_flat_ndarray",
    "hamcrest.assert_that",
    "numpy.arange",
    "numpy.isnan",
    "numpy.ma.masked_array",
    "numpy.ravel_multi_index",
    "numpy.reshape",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_io.test_ungridded_data.TestUngriddedCoordinates": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "unittest.TestCase"
   ]
  },
  "type": "class"
 },
 "cis.test.unit.test_io.test_ungridded_data.TestUngriddedCoordinates.setUp": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "cis.data_io.Coord.Coord",
    "cis.data_io.Coord.CoordList",
    "cis.data_io.ungridded_data.Metadata",
    "cis.data_io.ungridded_data.UngriddedCoordinates",
    "numpy.arange",
    "numpy.meshgrid"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_io.test_ungridded_data.TestUngriddedCoordinates.test_GIVEN_missing_coord_values_WHEN_coords_THEN_missing_values_removed": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "bool",
    "cis.data_io.Coord.Coord",
    "cis.data_io.Coord.CoordList",
    "cis.data_io.ungridded_data.Metadata",
    "cis.data_io.ungridded_data.UngriddedCoordinates",
    "hamcrest.assert_that",
    "hamcrest.is_",
    "len",
    "numpy.arange",
    "numpy.ma.masked_array",
    "numpy.meshgrid",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_io.test_ungridded_data.TestUngriddedCoordinates.test_GIVEN_missing_coord_values_WHEN_coords_flattened_THEN_missing_values_removed": {
  "data": {
   "lineno": 284,
   "symbols_in_volume": [
    "bool",
    "cis.data_io.Coord.Coord",
    "cis.data_io.Coord.CoordList",
    "cis.data_io.ungridded_data.Metadata",
    "cis.data_io.ungridded_data.UngriddedCoordinates",
    "hamcrest.assert_that",
    "hamcrest.is_",
    "len",
    "numpy.arange",
    "numpy.ma.masked_array",
    "numpy.meshgrid",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_io.test_ungridded_data.TestUngriddedCoordinates.test_GIVEN_ungridded_coords_WHEN_call_as_data_frame_THEN_returns_valid_data_frame": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "cis.test.unit.test_io.test_ungridded_data.skip_pandas",
    "hamcrest.assert_that"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_io.test_ungridded_data.TestUngriddedCoordinates.test_GIVEN_ungridded_coords_with_time_WHEN_call_as_data_frame_THEN_returns_valid_data_frame": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "cis.data_io.ungridded_data.UngriddedCoordinates",
    "cis.test.unit.test_io.test_ungridded_data.skip_pandas",
    "cis.test.util.mock.make_regular_2d_with_time_ungridded_data",
    "datetime.datetime",
    "hamcrest.assert_that"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_io.test_ungridded_data.TestUngriddedCoordinates.test_can_create_ungridded_coordinates": {
  "data": {
   "lineno": 258
  },
  "type": "function"
 },
 "cis.test.unit.test_io.test_ungridded_data.TestUngriddedCoordinates.test_get_coordinates_points_returns_points": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_io.test_ungridded_data.TestUngriddedData": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "unittest.TestCase"
   ]
  },
  "type": "class"
 },
 "cis.test.unit.test_io.test_ungridded_data.TestUngriddedData.test_GIVEN_numpy_array_data_with_missing_coordinate_values_WHEN_data_THEN_missing_values_removed": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "bool",
    "cis.data_io.Coord.Coord",
    "cis.data_io.Coord.CoordList",
    "cis.data_io.ungridded_data.Metadata",
    "cis.data_io.ungridded_data.UngriddedData",
    "hamcrest.assert_that",
    "hamcrest.is_",
    "len",
    "numpy.arange",
    "numpy.ma.masked_array",
    "numpy.meshgrid",
    "numpy.reshape",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_io.test_ungridded_data.TestUngriddedData.test_GIVEN_ungridded_data_WHEN_call_as_data_frame_THEN_returns_valid_data_frame": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "cis.test.unit.test_io.test_ungridded_data.skip_pandas",
    "cis.test.util.mock.make_regular_4d_ungridded_data",
    "datetime.datetime",
    "hamcrest.assert_that"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_io.test_ungridded_data.TestUngriddedData.test_GIVEN_ungridded_data_with_missing_vals_WHEN_call_as_data_frame_THEN_returns_valid_data_frame": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "cis.test.unit.test_io.test_ungridded_data.skip_pandas",
    "cis.test.util.mock.make_regular_2d_ungridded_data_with_missing_values",
    "hamcrest.assert_that",
    "numpy.isnan"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_io.test_ungridded_data.TestUngriddedData.test_GIVEN_ungridded_data_with_no_time_WHEN_call_as_data_frame_THEN_returns_valid_data_frame": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "cis.test.unit.test_io.test_ungridded_data.skip_pandas",
    "cis.test.util.mock.make_regular_2d_ungridded_data",
    "hamcrest.assert_that"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_io.test_ungridded_data.TestUngriddedData.test_can_add_history": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "cis.test.util.mock.make_regular_2d_ungridded_data"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_io.test_ungridded_data.TestUngriddedData.test_can_create_ungridded_data": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "cis.test.util.mock.make_regular_2d_ungridded_data"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_io.test_ungridded_data.TestUngriddedData.test_get_all_points_returns_points": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "cis.test.util.mock.make_regular_2d_ungridded_data",
    "len"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_io.test_ungridded_data.TestUngriddedData.test_get_coordinates_points_returns_points": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "cis.test.util.mock.make_regular_2d_ungridded_data_with_missing_values",
    "len"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_io.test_ungridded_data.TestUngriddedData.test_get_non_masked_points_returns_points": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "cis.test.util.mock.make_regular_2d_ungridded_data_with_missing_values",
    "len"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_io.test_ungridded_data.TestUngriddedData.test_name_method": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "cis.test.util.mock.make_regular_2d_ungridded_data_with_missing_values"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_io.test_ungridded_data.TestUngriddedDataLazyLoading": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "unittest.TestCase"
   ]
  },
  "type": "class"
 },
 "cis.test.unit.test_io.test_ungridded_data.TestUngriddedDataLazyLoading.test_GIVEN_missing_coord_values_WHEN_coords_data_THEN_missing_values_removed": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "bool",
    "cis.data_io.Coord.Coord",
    "cis.data_io.Coord.CoordList",
    "cis.data_io.ungridded_data.Metadata",
    "cis.data_io.ungridded_data.UngriddedData",
    "hamcrest.assert_that",
    "hamcrest.is_",
    "len",
    "numpy.arange",
    "numpy.ma.masked_array",
    "numpy.meshgrid",
    "numpy.reshape",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_io.test_ungridded_data.TestUngriddedDataLazyLoading.test_GIVEN_missing_coord_values_WHEN_coords_flattened_THEN_missing_values_removed": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "bool",
    "cis.data_io.Coord.Coord",
    "cis.data_io.Coord.CoordList",
    "cis.data_io.ungridded_data.Metadata",
    "cis.data_io.ungridded_data.UngriddedData",
    "hamcrest.assert_that",
    "hamcrest.is_",
    "len",
    "numpy.arange",
    "numpy.ma.masked_array",
    "numpy.meshgrid",
    "numpy.reshape",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_io.test_ungridded_data.TestUngriddedDataLazyLoading.test_GIVEN_missing_coord_values_WHEN_coords_points_THEN_missing_values_removed": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "bool",
    "cis.data_io.Coord.Coord",
    "cis.data_io.Coord.CoordList",
    "cis.data_io.ungridded_data.Metadata",
    "cis.data_io.ungridded_data.UngriddedData",
    "hamcrest.assert_that",
    "hamcrest.is_",
    "len",
    "numpy.arange",
    "numpy.ma.masked_array",
    "numpy.meshgrid",
    "numpy.reshape",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_io.test_ungridded_data.TestUngriddedDataLazyLoading.test_GIVEN_missing_coord_values_WHEN_data_THEN_missing_values_removed": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "bool",
    "cis.data_io.Coord.Coord",
    "cis.data_io.Coord.CoordList",
    "cis.data_io.ungridded_data.Metadata",
    "cis.data_io.ungridded_data.UngriddedData",
    "hamcrest.assert_that",
    "hamcrest.is_",
    "len",
    "numpy.arange",
    "numpy.ma.masked_array",
    "numpy.meshgrid",
    "numpy.reshape",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_io.test_ungridded_data.TestUngriddedDataLazyLoading.test_GIVEN_missing_coord_values_WHEN_data_flattened_THEN_missing_values_removed": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "bool",
    "cis.data_io.Coord.Coord",
    "cis.data_io.Coord.CoordList",
    "cis.data_io.ungridded_data.Metadata",
    "cis.data_io.ungridded_data.UngriddedData",
    "hamcrest.assert_that",
    "hamcrest.is_",
    "len",
    "numpy.arange",
    "numpy.ma.masked_array",
    "numpy.meshgrid",
    "numpy.reshape",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_io.test_ungridded_data.TestUngriddedDataList": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": [
    "unittest.TestCase"
   ]
  },
  "type": "class"
 },
 "cis.test.unit.test_io.test_ungridded_data.TestUngriddedDataList.setUp": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": [
    "cis.data_io.Coord.Coord",
    "cis.data_io.Coord.CoordList",
    "cis.data_io.ungridded_data.Metadata",
    "cis.data_io.ungridded_data.UngriddedData",
    "cis.data_io.ungridded_data.UngriddedDataList",
    "numpy.arange",
    "numpy.meshgrid",
    "numpy.reshape"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_io.test_ungridded_data.TestUngriddedDataList.test_GIVEN_data_containing_multiple_matching_coordinates_WHEN_coords_THEN_only_unique_coords_returned": {
  "data": {
   "lineno": 367,
   "symbols_in_volume": [
    "cis.data_io.Coord.CoordList",
    "hamcrest.assert_that",
    "hamcrest.contains_inanyorder",
    "hamcrest.is_",
    "isinstance",
    "len"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_io.test_ungridded_data.TestUngriddedDataList.test_GIVEN_multiple_ungridded_data_WHEN_call_as_data_frame_THEN_returns_valid_data_frame": {
  "data": {
   "lineno": 384,
   "symbols_in_volume": [
    "cis.test.unit.test_io.test_ungridded_data.skip_pandas",
    "hamcrest.assert_that",
    "nose.tools.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_io.test_ungridded_data.TestUngriddedDataList.test_GIVEN_multiple_ungridded_data_with_missing_data_WHEN_call_as_data_frame_THEN_returns_valid_data_frame": {
  "data": {
   "lineno": 394,
   "symbols_in_volume": [
    "bool",
    "cis.data_io.ungridded_data.Metadata",
    "cis.data_io.ungridded_data.UngriddedData",
    "cis.test.unit.test_io.test_ungridded_data.skip_pandas",
    "hamcrest.assert_that",
    "nose.tools.assert_almost_equal",
    "numpy.arange",
    "numpy.isnan",
    "numpy.ma.masked_array",
    "numpy.ravel_multi_index",
    "numpy.reshape",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_io.test_ungridded_data.TestUngriddedDataList.test_can_create_list_from_generators_and_other_iterators": {
  "data": {
   "lineno": 374,
   "symbols_in_volume": [
    "cis.data_io.ungridded_data.UngriddedDataList",
    "cis.test.unit.test_io.test_ungridded_data.itertools",
    "cis.test.util.mock.make_regular_2d_ungridded_data",
    "dict",
    "dict.values",
    "hamcrest.assert_that",
    "len"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_io.test_ungridded_data.TestUngriddedDataList.test_can_get_string_of_list": {
  "data": {
   "lineno": 362,
   "symbols_in_volume": [
    "hamcrest.assert_that",
    "str"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_io.test_ungridded_data.TestUngriddedDataList.test_combining": {
  "data": {
   "lineno": 349,
   "symbols_in_volume": [
    "TypeError",
    "cis.data_io.ungridded_data.UngriddedDataList",
    "cis.test.util.mock.make_regular_2d_ungridded_data",
    "hamcrest.assert_that",
    "isinstance",
    "len",
    "nose.tools.assert_raises"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_io.test_ungridded_data.TestUngriddedDataList.test_slicing": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": [
    "cis.data_io.ungridded_data.UngriddedData",
    "cis.data_io.ungridded_data.UngriddedDataList",
    "hamcrest.assert_that",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_io.test_ungridded_data.UngriddedCoordinates": {
  "data": {
   "shadows": "cis.data_io.ungridded_data.UngriddedCoordinates"
  },
  "type": "import"
 },
 "cis.test.unit.test_io.test_ungridded_data.UngriddedData": {
  "data": {
   "shadows": "cis.data_io.ungridded_data.UngriddedData"
  },
  "type": "import"
 },
 "cis.test.unit.test_io.test_ungridded_data.UngriddedDataList": {
  "data": {
   "shadows": "cis.data_io.ungridded_data.UngriddedDataList"
  },
  "type": "import"
 },
 "cis.test.unit.test_io.test_ungridded_data.Unit": {
  "data": {
   "shadows": "cf_units.Unit"
  },
  "type": "import"
 },
 "cis.test.unit.test_io.test_ungridded_data._to_flat_ndarray": {
  "data": {
   "shadows": "cis.data_io.ungridded_data._to_flat_ndarray"
  },
  "type": "import"
 },
 "cis.test.unit.test_io.test_ungridded_data.assert_almost_equal": {
  "data": {
   "shadows": "nose.tools.assert_almost_equal"
  },
  "type": "import"
 },
 "cis.test.unit.test_io.test_ungridded_data.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "cis.test.unit.test_io.test_ungridded_data.assert_that": {
  "data": {
   "shadows": "hamcrest.assert_that"
  },
  "type": "import"
 },
 "cis.test.unit.test_io.test_ungridded_data.contains_inanyorder": {
  "data": {
   "shadows": "hamcrest.contains_inanyorder"
  },
  "type": "import"
 },
 "cis.test.unit.test_io.test_ungridded_data.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "cis.test.unit.test_io.test_ungridded_data.is_": {
  "data": {
   "shadows": "hamcrest.is_"
  },
  "type": "import"
 },
 "cis.test.unit.test_io.test_ungridded_data.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "cis.test.unit.test_io.test_ungridded_data.make_regular_2d_ungridded_data": {
  "data": {
   "shadows": "cis.test.util.mock.make_regular_2d_ungridded_data"
  },
  "type": "import"
 },
 "cis.test.unit.test_io.test_ungridded_data.make_regular_2d_ungridded_data_with_missing_values": {
  "data": {
   "shadows": "cis.test.util.mock.make_regular_2d_ungridded_data_with_missing_values"
  },
  "type": "import"
 },
 "cis.test.unit.test_io.test_ungridded_data.make_regular_2d_with_time_ungridded_data": {
  "data": {
   "shadows": "cis.test.util.mock.make_regular_2d_with_time_ungridded_data"
  },
  "type": "import"
 },
 "cis.test.unit.test_io.test_ungridded_data.make_regular_4d_ungridded_data": {
  "data": {
   "shadows": "cis.test.util.mock.make_regular_4d_ungridded_data"
  },
  "type": "import"
 },
 "cis.test.unit.test_io.test_ungridded_data.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "cis.test.unit.test_io.test_ungridded_data.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "cis.test.unit.test_io.test_ungridded_data.pandas": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "cis.test.unit.test_io.test_ungridded_data.raises": {
  "data": {
   "shadows": "nose.tools.raises"
  },
  "type": "import"
 },
 "cis.test.unit.test_io.test_ungridded_data.skipIf": {
  "data": {
   "shadows": "unittest.skipIf"
  },
  "type": "import"
 },
 "cis.test.unit.test_io.test_ungridded_data.skip_pandas": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "cis.test.unit.test_kdtree_col": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "cis.test.unit.test_kdtree_col.nose"
   ]
  },
  "type": "module"
 },
 "cis.test.unit.test_kdtree_col.Coord": {
  "data": {
   "shadows": "cis.data_io.Coord.Coord"
  },
  "type": "import"
 },
 "cis.test.unit.test_kdtree_col.CoordList": {
  "data": {
   "shadows": "cis.data_io.Coord.CoordList"
  },
  "type": "import"
 },
 "cis.test.unit.test_kdtree_col.DummyConstraint": {
  "data": {
   "shadows": "cis.collocation.col_implementations.DummyConstraint"
  },
  "type": "import"
 },
 "cis.test.unit.test_kdtree_col.GeneralUngriddedCollocator": {
  "data": {
   "shadows": "cis.collocation.col_implementations.GeneralUngriddedCollocator"
  },
  "type": "import"
 },
 "cis.test.unit.test_kdtree_col.HaversineDistanceKDTreeIndex": {
  "data": {
   "shadows": "cis.collocation.haversinedistancekdtreeindex.HaversineDistanceKDTreeIndex"
  },
  "type": "import"
 },
 "cis.test.unit.test_kdtree_col.HyperPoint": {
  "data": {
   "shadows": "cis.data_io.hyperpoint.HyperPoint"
  },
  "type": "import"
 },
 "cis.test.unit.test_kdtree_col.HyperPointList": {
  "data": {
   "shadows": "cis.data_io.hyperpoint.HyperPointList"
  },
  "type": "import"
 },
 "cis.test.unit.test_kdtree_col.KDTree": {
  "data": {
   "shadows": "cis.collocation.kdtree.KDTree"
  },
  "type": "import"
 },
 "cis.test.unit.test_kdtree_col.Metadata": {
  "data": {
   "shadows": "cis.data_io.ungridded_data.Metadata"
  },
  "type": "import"
 },
 "cis.test.unit.test_kdtree_col.SepConstraintKdtree": {
  "data": {
   "shadows": "cis.collocation.col_implementations.SepConstraintKdtree"
  },
  "type": "import"
 },
 "cis.test.unit.test_kdtree_col.TestSepConstraint": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "cis.test.unit.test_kdtree_col.TestSepConstraint.get_max_depth": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "cis.collocation.kdtree.KDTree.leafnode",
    "isinstance",
    "max"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_kdtree_col.TestSepConstraint.test_all_constraints_in_4d": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.SepConstraintKdtree",
    "cis.collocation.haversinedistancekdtreeindex.HaversineDistanceKDTreeIndex",
    "cis.test.util.mock.make_regular_4d_ungridded_data",
    "cis.time_util.cis_standard_time_unit.date2num",
    "datetime.datetime",
    "nose.tools.eq_",
    "nose.tools.istest",
    "numpy.array",
    "numpy.equal",
    "numpy.sort",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_kdtree_col.TestSepConstraint.test_horizontal_constraint_in_2d": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.SepConstraintKdtree",
    "cis.collocation.haversinedistancekdtreeindex.HaversineDistanceKDTreeIndex",
    "cis.data_io.Coord.Coord",
    "cis.data_io.Coord.CoordList",
    "cis.data_io.ungridded_data.Metadata",
    "cis.data_io.ungridded_data.UngriddedData",
    "cis.test.util.mock.make_regular_2d_ungridded_data",
    "len",
    "nose.tools.eq_",
    "nose.tools.istest",
    "numpy.array",
    "numpy.equal"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_kdtree_col.TestSepConstraint.test_horizontal_constraint_in_2d_when_lats_are_the_same_produces_a_balanced_tree": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "assert_that",
    "cis.collocation.col_implementations.SepConstraintKdtree",
    "cis.collocation.haversinedistancekdtreeindex.HaversineDistanceKDTreeIndex",
    "cis.test.util.mock.make_regular_2d_ungridded_data",
    "is_",
    "nose.tools.istest",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_kdtree_col.TestSepConstraint.test_horizontal_constraint_in_2d_with_missing_values": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.SepConstraintKdtree",
    "cis.collocation.haversinedistancekdtreeindex.HaversineDistanceKDTreeIndex",
    "cis.test.util.mock.make_regular_2d_ungridded_data_with_missing_values",
    "nose.tools.eq_",
    "nose.tools.istest",
    "numpy.array",
    "numpy.equal",
    "numpy.isnan"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_kdtree_col.TestSepConstraint.test_horizontal_constraint_in_4d": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.SepConstraintKdtree",
    "cis.collocation.haversinedistancekdtreeindex.HaversineDistanceKDTreeIndex",
    "cis.test.util.mock.make_regular_4d_ungridded_data",
    "datetime.datetime",
    "nose.tools.eq_",
    "nose.tools.istest",
    "numpy.arange",
    "numpy.equal",
    "numpy.reshape",
    "numpy.sort",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_kdtree_col.TestSepConstraintWithoutHorizontalSeparation": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "cis.test.unit.test_kdtree_col.TestSepConstraintWithoutHorizontalSeparation.test_alt_constraint_in_4d": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.SepConstraintKdtree",
    "cis.test.util.mock.make_regular_4d_ungridded_data",
    "cis.time_util.cis_standard_time_unit.date2num",
    "datetime.datetime",
    "nose.tools.eq_",
    "nose.tools.istest",
    "numpy.array",
    "numpy.equal",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_kdtree_col.TestSepConstraintWithoutHorizontalSeparation.test_pressure_constraint_in_4d": {
  "data": {
   "lineno": 284,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.SepConstraintKdtree",
    "cis.test.util.mock.make_regular_4d_ungridded_data",
    "cis.time_util.cis_standard_time_unit.date2num",
    "datetime.datetime",
    "nose.tools.eq_",
    "nose.tools.istest",
    "numpy.array",
    "numpy.equal",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_kdtree_col.TestSepConstraintWithoutHorizontalSeparation.test_time_constraint_in_4d": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.SepConstraintKdtree",
    "cis.test.util.mock.make_regular_4d_ungridded_data",
    "cis.time_util.cis_standard_time_unit.date2num",
    "datetime.datetime",
    "nose.tools.eq_",
    "nose.tools.istest",
    "numpy.arange",
    "numpy.equal",
    "numpy.reshape",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_kdtree_col.Test_nn_horizontal_kdtree": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "cis.test.unit.test_kdtree_col.Test_nn_horizontal_kdtree.test_already_collocated_in_col_ungridded_to_ungridded_in_2d": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.GeneralUngriddedCollocator",
    "cis.collocation.col_implementations.SepConstraintKdtree",
    "cis.collocation.col_implementations.nn_horizontal_only",
    "cis.data_io.hyperpoint.HyperPoint",
    "cis.data_io.ungridded_data.UngriddedData.from_points_array",
    "cis.test.util.mock.make_regular_2d_ungridded_data",
    "nose.tools.eq_",
    "nose.tools.istest"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_kdtree_col.Test_nn_horizontal_kdtree.test_basic_col_in_2d": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.GeneralUngriddedCollocator",
    "cis.collocation.col_implementations.SepConstraintKdtree",
    "cis.collocation.col_implementations.nn_horizontal_only",
    "cis.data_io.hyperpoint.HyperPoint",
    "cis.data_io.ungridded_data.UngriddedData.from_points_array",
    "cis.test.util.mock.make_regular_2d_ungridded_data",
    "nose.tools.eq_",
    "nose.tools.istest"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_kdtree_col.Test_nn_horizontal_kdtree.test_coordinates_exactly_between_points_in_col_ungridded_to_ungridded_in_2d": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.GeneralUngriddedCollocator",
    "cis.collocation.col_implementations.SepConstraintKdtree",
    "cis.collocation.col_implementations.nn_horizontal_only",
    "cis.data_io.hyperpoint.HyperPoint",
    "cis.data_io.ungridded_data.UngriddedData.from_points_array",
    "cis.test.util.mock.make_regular_2d_ungridded_data",
    "nose.tools.eq_",
    "nose.tools.istest"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_kdtree_col.Test_nn_horizontal_kdtree.test_coordinates_outside_grid_in_col_ungridded_to_ungridded_in_2d": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "cis.collocation.col_implementations.GeneralUngriddedCollocator",
    "cis.collocation.col_implementations.SepConstraintKdtree",
    "cis.collocation.col_implementations.nn_horizontal_only",
    "cis.data_io.hyperpoint.HyperPoint",
    "cis.data_io.ungridded_data.UngriddedData.from_points_array",
    "cis.test.util.mock.make_regular_2d_ungridded_data",
    "nose.tools.eq_",
    "nose.tools.istest"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_kdtree_col.UngriddedData": {
  "data": {
   "shadows": "cis.data_io.ungridded_data.UngriddedData"
  },
  "type": "import"
 },
 "cis.test.unit.test_kdtree_col.cis_standard_time_unit": {
  "data": {
   "shadows": "cis.time_util.cis_standard_time_unit"
  },
  "type": "import"
 },
 "cis.test.unit.test_kdtree_col.dt": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "cis.test.unit.test_kdtree_col.eq_": {
  "data": {
   "shadows": "nose.tools.eq_"
  },
  "type": "import"
 },
 "cis.test.unit.test_kdtree_col.gridded_data": {
  "data": {
   "shadows": "cis.data_io.gridded_data"
  },
  "type": "import"
 },
 "cis.test.unit.test_kdtree_col.is_collocated": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "enumerate",
    "len"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_kdtree_col.istest": {
  "data": {
   "shadows": "nose.tools.istest"
  },
  "type": "import"
 },
 "cis.test.unit.test_kdtree_col.make_coord_map": {
  "data": {
   "shadows": "cis.collocation.col_implementations.make_coord_map"
  },
  "type": "import"
 },
 "cis.test.unit.test_kdtree_col.mock": {
  "data": {
   "shadows": "cis.test.util.mock"
  },
  "type": "import"
 },
 "cis.test.unit.test_kdtree_col.nn_horizontal_only": {
  "data": {
   "shadows": "cis.collocation.col_implementations.nn_horizontal_only"
  },
  "type": "import"
 },
 "cis.test.unit.test_kdtree_col.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "cis.test.unit.test_kdtree_col.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "cis.test.unit.test_kdtree_col.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "cis.test.unit.test_overide_product": {
  "data": {},
  "type": "module"
 },
 "cis.test.unit.test_overide_product.AProduct": {
  "data": {
   "shadows": "cis.data_io.products.AProduct.AProduct"
  },
  "type": "import"
 },
 "cis.test.unit.test_overide_product.Caliop_L2": {
  "data": {
   "shadows": "cis.data_io.products.caliop.Caliop_L2"
  },
  "type": "import"
 },
 "cis.test.unit.test_overide_product.ClassNotFoundError": {
  "data": {
   "shadows": "cis.exceptions.ClassNotFoundError"
  },
  "type": "import"
 },
 "cis.test.unit.test_overide_product.NetCDF_Gridded": {
  "data": {
   "shadows": "cis.data_io.products.gridded_NetCDF.NetCDF_Gridded"
  },
  "type": "import"
 },
 "cis.test.unit.test_overide_product.__get_class": {
  "data": {
   "shadows": "cis.data_io.products.AProduct.__get_class"
  },
  "type": "import"
 },
 "cis.test.unit.test_overide_product.can_overide_default_product": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "cis.data_io.products.AProduct.__get_class",
    "cis.data_io.products.caliop.Caliop_L2",
    "cis.data_io.products.gridded_NetCDF.NetCDF_Gridded",
    "cis.test.unit.test_overide_product.example_caliop_l2_filename",
    "nose.tools.eq_",
    "nose.tools.istest"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_overide_product.eq_": {
  "data": {
   "shadows": "nose.tools.eq_"
  },
  "type": "import"
 },
 "cis.test.unit.test_overide_product.example_caliop_l2_filename": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "cis.test.unit.test_overide_product.files_which_match_some_of_regexp_but_not_the_end_shouldnt_match": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "cis.data_io.products.AProduct.AProduct",
    "cis.data_io.products.AProduct.__get_class",
    "cis.exceptions.ClassNotFoundError",
    "cis.plugin.find_plugin_classes",
    "cis.test.unit.test_overide_product.example_caliop_l2_filename",
    "nose.tools.istest",
    "nose.tools.raises"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_overide_product.istest": {
  "data": {
   "shadows": "nose.tools.istest"
  },
  "type": "import"
 },
 "cis.test.unit.test_overide_product.parse_args": {
  "data": {
   "shadows": "cis.parse.parse_args"
  },
  "type": "import"
 },
 "cis.test.unit.test_overide_product.plugin": {
  "data": {
   "shadows": "cis.plugin"
  },
  "type": "import"
 },
 "cis.test.unit.test_overide_product.raises": {
  "data": {
   "shadows": "nose.tools.raises"
  },
  "type": "import"
 },
 "cis.test.unit.test_overide_product.should_raise_error_with_unknown_product_specified": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "SystemExit",
    "cis.parse.parse_args",
    "cis.test.unit.test_overide_product.example_caliop_l2_filename",
    "nose.tools.istest"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_parse": {
  "data": {},
  "type": "module"
 },
 "cis.test.unit.test_parse.NamedTemporaryFile": {
  "data": {
   "shadows": "tempfile.NamedTemporaryFile"
  },
  "type": "import"
 },
 "cis.test.unit.test_parse.Namespace": {
  "data": {
   "shadows": "argparse.Namespace"
  },
  "type": "import"
 },
 "cis.test.unit.test_parse.ParseTestFiles": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "unittest.TestCase"
   ]
  },
  "type": "class"
 },
 "cis.test.unit.test_parse.ParseTestFiles.setUp": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "_make_file",
    "cis.test.unit.test_parse.escape_colons",
    "cis.test.unit.test_parse.os",
    "range",
    "tempfile.mkdtemp"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_parse.ParseTestFiles.setUp._make_file": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "open"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_parse.ParseTestFiles.tearDown": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "shutil.rmtree"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_parse.TestCase": {
  "data": {
   "shadows": "unittest.TestCase"
  },
  "type": "import"
 },
 "cis.test.unit.test_parse.TestParse": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "cis.test.unit.test_parse.ParseTestFiles"
   ]
  },
  "type": "class"
 },
 "cis.test.unit.test_parse.TestParse.test_GIVEN_input_contains_output_WHEN_parse_THEN_raises_error": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "SystemExit",
    "cis.parse.parse_args"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_parse.TestParse.test_GIVEN_output_has_file_extension_WHEN_parse_THEN_extension_not_added": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "cis.parse.parse_args",
    "hamcrest.assert_that",
    "hamcrest.is_"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_parse.TestParse.test_GIVEN_output_missing_file_extension_WHEN_parse_THEN_extension_added": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "cis.parse.parse_args",
    "hamcrest.assert_that",
    "hamcrest.is_"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_parse.TestParse.test_GIVEN_plot_output_missing_file_extension_WHEN_parse_THEN_extension_added": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "cis.parse.parse_args",
    "hamcrest.assert_that",
    "hamcrest.is_"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_parse.TestParse.test_can_escape_variables_with_colons": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "cis.parse.parse_args",
    "hamcrest.assert_that"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_parse.TestParse.test_can_specify_a_directory": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "cis.parse.expand_file_list",
    "cis.test.unit.test_parse.argparse",
    "nose.tools.eq_"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_parse.TestParse.test_can_specify_a_file_with_wildcards": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "cis.parse.expand_file_list",
    "cis.test.unit.test_parse.argparse",
    "cis.test.unit.test_parse.os",
    "nose.tools.eq_"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_parse.TestParse.test_can_specify_more_than_one_valid_filename": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "cis.parse.parse_args"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_parse.TestParse.test_can_specify_one_valid_filename": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "cis.parse.parse_args"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_parse.TestParse.test_can_specify_one_valid_filename_and_a_directory": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "cis.parse.expand_file_list",
    "cis.test.unit.test_parse.argparse",
    "nose.tools.eq_"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_parse.TestParse.test_can_specify_one_valid_filename_and_a_wildcarded_file": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "cis.parse.expand_file_list",
    "cis.test.unit.test_parse.argparse",
    "cis.test.unit.test_parse.os",
    "nose.tools.eq_"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_parse.TestParse.test_directories_are_sorted": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "cis.parse.expand_file_list",
    "cis.test.unit.test_parse.argparse",
    "nose.tools.eq_"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_parse.TestParse.test_duplicate_files_are_not_returned_from_expand_file_list": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "cis.parse.expand_file_list",
    "cis.test.unit.test_parse.argparse",
    "cis.test.unit.test_parse.os",
    "nose.tools.eq_"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_parse.TestParse.test_order_is_preserved_when_specifying_files_even_when_wildcards_and_directories_are_specified_too": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "cis.parse.expand_file_list",
    "cis.test.unit.test_parse.argparse",
    "nose.tools.eq_"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_parse.TestParse.test_order_is_preserved_when_specifying_individual_files": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "cis.parse.expand_file_list",
    "cis.test.unit.test_parse.argparse",
    "nose.tools.eq_"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_parse.TestParse.test_output_file_matches_an_existing_file_with_force_overwrite_env": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "argparse.Namespace",
    "cis.parse._file_already_exists_and_no_overwrite",
    "cis.test.unit.test_parse.os",
    "tempfile.NamedTemporaryFile"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_parse.TestParse.test_output_file_matches_an_existing_file_with_force_overwrite_env_FALSE": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "argparse.Namespace",
    "cis.parse._file_already_exists_and_no_overwrite",
    "cis.test.unit.test_parse.os",
    "mock.patch",
    "tempfile.NamedTemporaryFile"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_parse.TestParse.test_output_file_matches_an_existing_file_with_force_overwrite_option": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "argparse.Namespace",
    "cis.parse._file_already_exists_and_no_overwrite",
    "tempfile.NamedTemporaryFile"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_parse.TestParse.test_output_file_matches_an_existing_file_with_no_force_overwrite_will_prompt": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "argparse.Namespace",
    "cis.parse._file_already_exists_and_no_overwrite",
    "mock.patch",
    "tempfile.NamedTemporaryFile"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_parse.TestParse.test_should_raise_error_with_a_mixture_of_valid_and_invalid_filenames": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "SystemExit",
    "cis.parse.parse_args"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_parse.TestParse.test_should_raise_error_with_one_invalid_filename": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "SystemExit",
    "cis.parse.parse_args"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_parse.TestParse.test_wildcarded_files_are_sorted": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "cis.parse.expand_file_list",
    "cis.test.unit.test_parse.argparse",
    "cis.test.unit.test_parse.os",
    "nose.tools.eq_"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_parse.TestParseAggregate": {
  "data": {
   "lineno": 570,
   "symbols_in_volume": [
    "cis.test.unit.test_parse.ParseTestFiles"
   ]
  },
  "type": "class"
 },
 "cis.test.unit.test_parse.TestParseAggregate.test_GIVEN_aggregate_command_WHEN_multiple_variables_in_datagroup_THEN_variables_unpacked": {
  "data": {
   "lineno": 575,
   "symbols_in_volume": [
    "cis.parse.parse_args",
    "hamcrest.assert_that",
    "hamcrest.contains_inanyorder",
    "hamcrest.is_",
    "len"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_parse.TestParseAggregate.test_GIVEN_longitude_limits_not_monotonically_increasing_WHEN_aggregate_THEN_raises_error": {
  "data": {
   "lineno": 589,
   "symbols_in_volume": [
    "SystemExit",
    "cis.parse.parse_args"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_parse.TestParseAggregate.test_GIVEN_longitude_limits_valid_WHEN_aggregate_THEN_parsed_OK": {
  "data": {
   "lineno": 611,
   "symbols_in_volume": [
    "cis.parse.parse_args"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_parse.TestParseAggregate.test_GIVEN_longitude_limits_wider_than_360_WHEN_aggregate_THEN_raises_error": {
  "data": {
   "lineno": 600,
   "symbols_in_volume": [
    "SystemExit",
    "cis.parse.parse_args"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_parse.TestParseAggregate.test_GIVEN_mixed_limits_valid_WHEN_aggregate_THEN_parsed_OK": {
  "data": {
   "lineno": 617,
   "symbols_in_volume": [
    "cis.parse.parse_args"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_parse.TestParseAggregate.test_output_file_matches_an_input_file": {
  "data": {
   "lineno": 624,
   "symbols_in_volume": [
    "argparse.Namespace",
    "cis.parse._output_file_matches_an_input_file",
    "tempfile.NamedTemporaryFile"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_parse.TestParseCollocate": {
  "data": {
   "lineno": 647,
   "symbols_in_volume": [
    "cis.test.unit.test_parse.ParseTestFiles"
   ]
  },
  "type": "class"
 },
 "cis.test.unit.test_parse.TestParseCollocate.test_GIVEN_collocate_command_WHEN_multiple_variables_in_datagroup_THEN_variables_unpacked": {
  "data": {
   "lineno": 652,
   "symbols_in_volume": [
    "cis.parse.parse_args",
    "hamcrest.assert_that",
    "hamcrest.contains_inanyorder",
    "hamcrest.is_",
    "len"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_parse.TestParseCollocate.test_can_leave_collocator_missing": {
  "data": {
   "lineno": 666,
   "symbols_in_volume": [
    "cis.parse.parse_args",
    "hamcrest.assert_that",
    "hamcrest.is_"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_parse.TestParseCollocate.test_can_specify_one_valid_samplefile_and_many_datagroups": {
  "data": {
   "lineno": 693,
   "symbols_in_volume": [
    "cis.parse.parse_args",
    "nose.tools.eq_"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_parse.TestParseCollocate.test_can_specify_one_valid_samplefile_and_one_complete_datagroup": {
  "data": {
   "lineno": 675,
   "symbols_in_volume": [
    "cis.parse.parse_args",
    "nose.tools.eq_"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_parse.TestParseCollocate.test_can_specify_one_valid_samplefile_and_one_datafile_with_internal_options": {
  "data": {
   "lineno": 711,
   "symbols_in_volume": [
    "cis.parse.parse_args",
    "nose.tools.eq_"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_parse.TestParseCollocate.test_can_specify_one_valid_samplefile_and_one_datafile_without_other_options": {
  "data": {
   "lineno": 685,
   "symbols_in_volume": [
    "cis.parse.parse_args",
    "nose.tools.eq_"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_parse.TestParseEvaluate": {
  "data": {
   "lineno": 345,
   "symbols_in_volume": [
    "cis.test.unit.test_parse.ParseTestFiles"
   ]
  },
  "type": "class"
 },
 "cis.test.unit.test_parse.TestParseEvaluate.test_can_specify_attributes": {
  "data": {
   "lineno": 451,
   "symbols_in_volume": [
    "cis.parse.parse_args",
    "hamcrest.assert_that",
    "hamcrest.is_"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_parse.TestParseEvaluate.test_can_specify_attributes_shorthand": {
  "data": {
   "lineno": 458,
   "symbols_in_volume": [
    "cis.parse.parse_args",
    "hamcrest.assert_that",
    "hamcrest.is_"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_parse.TestParseEvaluate.test_invalid_attributes_throws_parser_error": {
  "data": {
   "lineno": 465,
   "symbols_in_volume": [
    "SystemExit",
    "cis.parse.parse_args"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_parse.TestParseEvaluate.test_parse_evaluate_duplicate_aliases": {
  "data": {
   "lineno": 419,
   "symbols_in_volume": [
    "SystemExit",
    "cis.parse.parse_args"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_parse.TestParseEvaluate.test_parse_evaluate_invalid_aliases": {
  "data": {
   "lineno": 429,
   "symbols_in_volume": [
    "SystemExit",
    "cis.parse.parse_args"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_parse.TestParseEvaluate.test_parse_evaluate_invalid_output": {
  "data": {
   "lineno": 399,
   "symbols_in_volume": [
    "SystemExit",
    "cis.parse.parse_args"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_parse.TestParseEvaluate.test_parse_evaluate_missing_units_single_datagroup": {
  "data": {
   "lineno": 441,
   "symbols_in_volume": [
    "SystemExit",
    "cis.parse.parse_args"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_parse.TestParseEvaluate.test_parse_evaluate_multiple_datagroups": {
  "data": {
   "lineno": 363,
   "symbols_in_volume": [
    "cis.parse.parse_args",
    "hamcrest.assert_that",
    "hamcrest.is_",
    "len"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_parse.TestParseEvaluate.test_parse_evaluate_no_output": {
  "data": {
   "lineno": 392,
   "symbols_in_volume": [
    "cis.parse.parse_args",
    "hamcrest.assert_that",
    "hamcrest.is_"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_parse.TestParseEvaluate.test_parse_evaluate_no_output_variable": {
  "data": {
   "lineno": 385,
   "symbols_in_volume": [
    "cis.parse.parse_args",
    "hamcrest.assert_that",
    "hamcrest.is_"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_parse.TestParseEvaluate.test_parse_evaluate_output_variable": {
  "data": {
   "lineno": 377,
   "symbols_in_volume": [
    "cis.parse.parse_args",
    "hamcrest.assert_that",
    "hamcrest.is_"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_parse.TestParseEvaluate.test_parse_evaluate_single_datagroup": {
  "data": {
   "lineno": 350,
   "symbols_in_volume": [
    "cis.parse.parse_args",
    "hamcrest.assert_that",
    "hamcrest.is_",
    "len"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_parse.TestParseEvaluate.test_parse_evaluate_valid_aliases": {
  "data": {
   "lineno": 409,
   "symbols_in_volume": [
    "cis.parse.parse_args",
    "hamcrest.assert_that",
    "hamcrest.is_"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_parse.TestParseInfo": {
  "data": {
   "lineno": 724,
   "symbols_in_volume": [
    "cis.test.unit.test_parse.ParseTestFiles"
   ]
  },
  "type": "class"
 },
 "cis.test.unit.test_parse.TestParseInfo.test_GIVEN_info_command_WHEN_files_and_many_vars_present_THEN_many_variable_and_empty_product": {
  "data": {
   "lineno": 757,
   "symbols_in_volume": [
    "cis.parse.parse_args",
    "hamcrest.assert_that",
    "hamcrest.contains_inanyorder",
    "hamcrest.is_",
    "len"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_parse.TestParseInfo.test_GIVEN_info_command_WHEN_files_and_single_var_present_THEN_single_variable_and_empty_product": {
  "data": {
   "lineno": 747,
   "symbols_in_volume": [
    "cis.parse.parse_args",
    "hamcrest.assert_that",
    "hamcrest.is_",
    "len"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_parse.TestParseInfo.test_GIVEN_info_command_WHEN_files_and_var_and_product_present_THEN_variable_and_product_set": {
  "data": {
   "lineno": 767,
   "symbols_in_volume": [
    "cis.parse.parse_args",
    "hamcrest.assert_that",
    "hamcrest.is_",
    "len"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_parse.TestParseInfo.test_GIVEN_info_command_WHEN_many_files_present_THEN_empty_variable_and_product": {
  "data": {
   "lineno": 738,
   "symbols_in_volume": [
    "cis.parse.parse_args",
    "hamcrest.assert_that",
    "hamcrest.is_",
    "len"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_parse.TestParseInfo.test_GIVEN_info_command_WHEN_single_file_present_THEN_empty_variable_and_product": {
  "data": {
   "lineno": 729,
   "symbols_in_volume": [
    "cis.parse.parse_args",
    "hamcrest.assert_that",
    "hamcrest.is_",
    "len"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_parse.TestParsePlot": {
  "data": {
   "lineno": 284,
   "symbols_in_volume": [
    "cis.test.unit.test_parse.ParseTestFiles"
   ]
  },
  "type": "class"
 },
 "cis.test.unit.test_parse.TestParsePlot.test_can_specify_more_than_one_variable": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": [
    "cis.parse.parse_args"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_parse.TestParsePlot.test_can_specify_valid_chart_type": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "cis.parse.parse_args",
    "cis.plotting.plot.plot_types.keys",
    "list"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_parse.TestParsePlot.test_should_raise_error_when_no_variable_is_specified": {
  "data": {
   "lineno": 317,
   "symbols_in_volume": [
    "SystemExit",
    "cis.parse.parse_args"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_parse.TestParsePlot.test_should_raise_error_with_an_invalid_chart_type": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": [
    "SystemExit",
    "cis.parse.parse_args"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_parse.TestParsePlot.test_should_raise_error_with_invalid_line_style": {
  "data": {
   "lineno": 335,
   "symbols_in_volume": [
    "SystemExit",
    "cis.parse.parse_args"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_parse.TestParsePlot.test_should_raise_error_with_invalid_line_width": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": [
    "SystemExit",
    "cis.parse.parse_args"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_parse.TestParsePlot.test_should_raise_error_with_more_than_one_chart_type": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "SystemExit",
    "cis.parse.parse_args",
    "cis.plotting.plot.plot_types.keys",
    "list"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_parse.TestParseStats": {
  "data": {
   "lineno": 479,
   "symbols_in_volume": [
    "cis.test.unit.test_parse.ParseTestFiles"
   ]
  },
  "type": "class"
 },
 "cis.test.unit.test_parse.TestParseStats.test_GIVEN_more_than_two_variables_WHEN_parse_stats_THEN_parser_error": {
  "data": {
   "lineno": 498,
   "symbols_in_volume": [
    "SystemExit",
    "cis.parse.parse_args"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_parse.TestParseStats.test_GIVEN_no_output_WHEN_parse_stats_THEN_output_is_None": {
  "data": {
   "lineno": 484,
   "symbols_in_volume": [
    "cis.parse.parse_args",
    "hamcrest.assert_that",
    "hamcrest.is_"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_parse.TestParseStats.test_GIVEN_one_variable_WHEN_parse_stats_THEN_parser_error": {
  "data": {
   "lineno": 489,
   "symbols_in_volume": [
    "SystemExit",
    "cis.parse.parse_args"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_parse.TestParseStats.test_GIVEN_output_file_WHEN_parse_stats_THEN_output_file_in_arguments": {
  "data": {
   "lineno": 516,
   "symbols_in_volume": [
    "cis.parse.parse_args",
    "hamcrest.assert_that",
    "hamcrest.is_"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_parse.TestParseStats.test_GIVEN_two_variables_WHEN_parse_stats_THEN_variables_are_in_datagroups": {
  "data": {
   "lineno": 508,
   "symbols_in_volume": [
    "cis.parse.parse_args",
    "hamcrest.assert_that",
    "hamcrest.is_"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_parse.TestParseSubset": {
  "data": {
   "lineno": 522,
   "symbols_in_volume": [
    "cis.test.unit.test_parse.ParseTestFiles"
   ]
  },
  "type": "class"
 },
 "cis.test.unit.test_parse.TestParseSubset.test_GIVEN_longitude_limits_not_monotonically_increasing_WHEN_subset_THEN_raises_error": {
  "data": {
   "lineno": 527,
   "symbols_in_volume": [
    "SystemExit",
    "cis.parse.parse_args"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_parse.TestParseSubset.test_GIVEN_longitude_limits_valid_WHEN_subset_THEN_parsed_OK": {
  "data": {
   "lineno": 549,
   "symbols_in_volume": [
    "cis.parse.parse_args"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_parse.TestParseSubset.test_GIVEN_longitude_limits_wider_than_360_WHEN_subset_THEN_raises_error": {
  "data": {
   "lineno": 538,
   "symbols_in_volume": [
    "SystemExit",
    "cis.parse.parse_args"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_parse.TestParseSubset.test_GIVEN_subset_command_WHEN_multiple_variables_in_datagroup_THEN_variables_unpacked": {
  "data": {
   "lineno": 555,
   "symbols_in_volume": [
    "cis.parse.parse_args",
    "hamcrest.assert_that",
    "hamcrest.contains_inanyorder",
    "hamcrest.is_",
    "len"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_parse._file_already_exists_and_no_overwrite": {
  "data": {
   "shadows": "cis.parse._file_already_exists_and_no_overwrite"
  },
  "type": "import"
 },
 "cis.test.unit.test_parse._output_file_matches_an_input_file": {
  "data": {
   "shadows": "cis.parse._output_file_matches_an_input_file"
  },
  "type": "import"
 },
 "cis.test.unit.test_parse.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "cis.test.unit.test_parse.assert_that": {
  "data": {
   "shadows": "hamcrest.assert_that"
  },
  "type": "import"
 },
 "cis.test.unit.test_parse.contains_inanyorder": {
  "data": {
   "shadows": "hamcrest.contains_inanyorder"
  },
  "type": "import"
 },
 "cis.test.unit.test_parse.eq_": {
  "data": {
   "shadows": "nose.tools.eq_"
  },
  "type": "import"
 },
 "cis.test.unit.test_parse.escape_colons": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "cis.test.unit.test_parse.re"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_parse.expand_file_list": {
  "data": {
   "shadows": "cis.parse.expand_file_list"
  },
  "type": "import"
 },
 "cis.test.unit.test_parse.is_": {
  "data": {
   "shadows": "hamcrest.is_"
  },
  "type": "import"
 },
 "cis.test.unit.test_parse.mkdtemp": {
  "data": {
   "shadows": "tempfile.mkdtemp"
  },
  "type": "import"
 },
 "cis.test.unit.test_parse.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "cis.test.unit.test_parse.parse_args": {
  "data": {
   "shadows": "cis.parse.parse_args"
  },
  "type": "import"
 },
 "cis.test.unit.test_parse.patch": {
  "data": {
   "shadows": "mock.patch"
  },
  "type": "import"
 },
 "cis.test.unit.test_parse.plot_types": {
  "data": {
   "shadows": "cis.plotting.plot.plot_types"
  },
  "type": "import"
 },
 "cis.test.unit.test_parse.raises": {
  "data": {
   "shadows": "nose.tools.raises"
  },
  "type": "import"
 },
 "cis.test.unit.test_parse.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "cis.test.unit.test_parse.rmtree": {
  "data": {
   "shadows": "shutil.rmtree"
  },
  "type": "import"
 },
 "cis.test.unit.test_parse_datetime": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "cis.test.unit.test_parse_datetime.nose"
   ]
  },
  "type": "module"
 },
 "cis.test.unit.test_parse_datetime.PartialDateTime": {
  "data": {
   "shadows": "cis.time_util.PartialDateTime"
  },
  "type": "import"
 },
 "cis.test.unit.test_parse_datetime._parse_partial_datetime": {
  "data": {
   "shadows": "cis.parse_datetime._parse_partial_datetime"
  },
  "type": "import"
 },
 "cis.test.unit.test_parse_datetime.assert_almost_equal": {
  "data": {
   "shadows": "nose.tools.assert_almost_equal"
  },
  "type": "import"
 },
 "cis.test.unit.test_parse_datetime.convert_datetime_to_std_time": {
  "data": {
   "shadows": "cis.time_util.convert_datetime_to_std_time"
  },
  "type": "import"
 },
 "cis.test.unit.test_parse_datetime.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "cis.test.unit.test_parse_datetime.dt": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "cis.test.unit.test_parse_datetime.eq_": {
  "data": {
   "shadows": "nose.tools.eq_"
  },
  "type": "import"
 },
 "cis.test.unit.test_parse_datetime.istest": {
  "data": {
   "shadows": "nose.tools.istest"
  },
  "type": "import"
 },
 "cis.test.unit.test_parse_datetime.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "cis.test.unit.test_parse_datetime.parse_as_number_or_datetime": {
  "data": {
   "shadows": "cis.parse_datetime.parse_as_number_or_datetime"
  },
  "type": "import"
 },
 "cis.test.unit.test_parse_datetime.parse_as_number_or_datetime_can_parse_date_as_datetime": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "cis.parse_datetime.parse_as_number_or_datetime",
    "datetime.datetime",
    "nose.tools.istest"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_parse_datetime.parse_as_number_or_datetime_can_parse_float": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "cis.parse_datetime.parse_as_number_or_datetime",
    "nose.tools.istest"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_parse_datetime.parse_as_number_or_datetime_can_parse_integer": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "cis.parse_datetime.parse_as_number_or_datetime",
    "nose.tools.istest"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_parse_datetime.parse_datetime_can_parse_date": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "cis.parse_datetime._parse_partial_datetime",
    "cis.time_util.PartialDateTime",
    "nose.tools.istest"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_parse_datetime.parse_datetime_can_parse_date_hour": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "cis.parse_datetime._parse_partial_datetime",
    "cis.time_util.PartialDateTime",
    "nose.tools.istest"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_parse_datetime.parse_datetime_can_parse_date_hour_min": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "cis.parse_datetime._parse_partial_datetime",
    "cis.time_util.PartialDateTime",
    "nose.tools.istest"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_parse_datetime.parse_datetime_can_parse_date_hour_min_sec": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "cis.parse_datetime._parse_partial_datetime",
    "cis.time_util.PartialDateTime",
    "nose.tools.istest"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_parse_datetime.parse_datetime_can_parse_date_hour_min_sec_no_leading_zeros": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "cis.parse_datetime._parse_partial_datetime",
    "cis.time_util.PartialDateTime",
    "nose.tools.istest"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_parse_datetime.parse_datetime_can_parse_date_time_with_colon_separator": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "cis.parse_datetime._parse_partial_datetime",
    "cis.time_util.PartialDateTime",
    "nose.tools.istest"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_parse_datetime.parse_datetime_can_parse_date_time_with_space_separator": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "cis.parse_datetime._parse_partial_datetime",
    "cis.time_util.PartialDateTime",
    "nose.tools.istest"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_parse_datetime.parse_datetime_can_parse_year": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "cis.parse_datetime._parse_partial_datetime",
    "cis.time_util.PartialDateTime",
    "nose.tools.istest"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_parse_datetime.parse_datetime_can_parse_year_month": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "cis.parse_datetime._parse_partial_datetime",
    "cis.time_util.PartialDateTime",
    "nose.tools.istest",
    "print"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_parse_datetime.parse_datetime_raises_error_if_invalid_character_in_year": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "ValueError",
    "cis.parse_datetime._parse_partial_datetime",
    "nose.tools.istest",
    "nose.tools.raises"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_parse_datetime.parse_datetime_raises_error_if_invalid_day": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "ValueError",
    "cis.parse_datetime._parse_partial_datetime",
    "nose.tools.istest",
    "nose.tools.raises"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_parse_datetime.parse_datetime_raises_error_if_invalid_month": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "ValueError",
    "cis.parse_datetime._parse_partial_datetime",
    "nose.tools.istest",
    "nose.tools.raises"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_parse_datetime.parse_datetime_raises_error_if_time_but_incomplete_date": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "ValueError",
    "cis.parse_datetime._parse_partial_datetime",
    "nose.tools.istest",
    "nose.tools.raises"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_parse_datetime.parse_datetime_raises_error_if_too_many_date_components": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "ValueError",
    "cis.parse_datetime._parse_partial_datetime",
    "nose.tools.istest",
    "nose.tools.raises"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_parse_datetime.parse_datetime_raises_error_if_too_many_time_components": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "ValueError",
    "cis.parse_datetime._parse_partial_datetime",
    "nose.tools.istest",
    "nose.tools.raises"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_parse_datetime.parse_datetimestr_delta_to_float_days": {
  "data": {
   "shadows": "cis.parse_datetime.parse_datetimestr_delta_to_float_days"
  },
  "type": "import"
 },
 "cis.test.unit.test_parse_datetime.parse_datetimestr_to_std_time": {
  "data": {
   "shadows": "cis.parse_datetime.parse_datetimestr_to_std_time"
  },
  "type": "import"
 },
 "cis.test.unit.test_parse_datetime.raises": {
  "data": {
   "shadows": "nose.tools.raises"
  },
  "type": "import"
 },
 "cis.test.unit.test_parse_datetime.test_that_can_parse_datetimestr_to_obj": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "cis.parse_datetime.parse_datetimestr_to_std_time",
    "cis.time_util.convert_datetime_to_std_time",
    "datetime.datetime.datetime",
    "datetime.datetime.datetime.now",
    "nose.tools.eq_",
    "nose.tools.istest"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_parse_datetime.test_that_can_parse_time_deltas": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "cis.parse_datetime.parse_datetimestr_delta_to_float_days",
    "nose.tools.assert_almost_equal",
    "nose.tools.istest"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_parse_datetime.test_that_raise_an_error_when_datetimestr_delta_is_invalid": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "ValueError",
    "cis.parse_datetime.parse_datetimestr_delta_to_float_days",
    "nose.tools.istest",
    "nose.tools.raises"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_plot": {
  "data": {},
  "type": "module"
 },
 "cis.test.unit.test_plot.Cube": {
  "data": {
   "shadows": "iris.cube.Cube"
  },
  "type": "import"
 },
 "cis.test.unit.test_plot.DimCoord": {
  "data": {
   "shadows": "iris.coords.DimCoord"
  },
  "type": "import"
 },
 "cis.test.unit.test_plot.Generic2DPlot": {
  "data": {
   "shadows": "cis.plotting.genericplot.Generic2DPlot"
  },
  "type": "import"
 },
 "cis.test.unit.test_plot.Plotter": {
  "data": {
   "shadows": "cis.plotting.formatted_plot.Plotter"
  },
  "type": "import"
 },
 "cis.test.unit.test_plot.TestHeatMap": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "cis.test.unit.test_plot.unittest"
   ]
  },
  "type": "class"
 },
 "cis.test.unit.test_plot.TestHeatMap.test_lat_lon_decreasing_no_bounds": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "cis.data_io.gridded_data.make_from_cube",
    "cis.plotting.genericplot.Generic2DPlot._cube_manipulation",
    "cis.test.utils_for_testing.assert_arrays_equal",
    "iris.coords.DimCoord",
    "iris.cube.Cube",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_plot.TestHeatMap.test_lat_lon_increasing_no_bounds": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "cis.data_io.gridded_data.make_from_cube",
    "cis.plotting.genericplot.Generic2DPlot._cube_manipulation",
    "cis.test.utils_for_testing.assert_arrays_equal",
    "iris.coords.DimCoord",
    "iris.cube.Cube",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_plot.TestHeatMap.test_lat_lon_increasing_no_bounds_over_greenwich": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "cis.data_io.gridded_data.make_from_cube",
    "cis.plotting.genericplot.Generic2DPlot._cube_manipulation",
    "cis.test.utils_for_testing.assert_arrays_equal",
    "iris.coords.DimCoord",
    "iris.cube.Cube",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_plot.TestHeatMap.test_longitude_0_360": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "cis.data_io.gridded_data.make_from_cube",
    "cis.plotting.genericplot.Generic2DPlot._cube_manipulation",
    "cis.test.utils_for_testing.assert_arrays_equal",
    "iris.coords.DimCoord",
    "iris.cube.Cube",
    "len",
    "numpy.arange",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_plot.TestHeatMap.test_longitude_0_360_one_degree": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "cis.data_io.gridded_data.make_from_cube",
    "cis.plotting.genericplot.Generic2DPlot._cube_manipulation",
    "cis.test.utils_for_testing.assert_arrays_equal",
    "iris.coords.DimCoord",
    "iris.cube.Cube",
    "len",
    "numpy.arange",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_plot.TestHeatMap.test_wide_longitude": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "cis.data_io.gridded_data.make_from_cube",
    "cis.plotting.genericplot.Generic2DPlot._cube_manipulation",
    "cis.test.utils_for_testing.assert_arrays_equal",
    "iris.coords.DimCoord",
    "iris.cube.Cube",
    "len",
    "numpy.arange",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_plot.TestPlotting": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "cis.test.unit.test_plot.unittest"
   ]
  },
  "type": "class"
 },
 "cis.test.unit.test_plot.TestPlotting.test_get_axis_gridded": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "cis.data_io.gridded_data.make_from_cube",
    "cis.plotting.plot.get_axis",
    "cis.test.util.mock.make_mock_cube"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_plot.TestPlotting.test_get_axis_ungridded": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "cis.plotting.plot.get_axis",
    "cis.test.util.mock.make_dummy_2d_ungridded_data"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_plot.TestPlotting.test_get_label": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "cis.plotting.plot.get_label",
    "cis.test.util.mock.make_dummy_1d_ungridded_data"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_plot.TestPlotting.test_should_raise_io_error_with_invalid_filename": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "IOError",
    "cis.plotting.formatted_plot.Plotter",
    "cis.test.unit.test_plot.iris"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_plot.TestPlotting.test_units_formatting": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "cf_units.Unit",
    "cis.plotting.plot.format_units"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_plot.Unit": {
  "data": {
   "shadows": "cf_units.Unit"
  },
  "type": "import"
 },
 "cis.test.unit.test_plot.assert_arrays_equal": {
  "data": {
   "shadows": "cis.test.utils_for_testing.assert_arrays_equal"
  },
  "type": "import"
 },
 "cis.test.unit.test_plot.format_units": {
  "data": {
   "shadows": "cis.plotting.plot.format_units"
  },
  "type": "import"
 },
 "cis.test.unit.test_plot.get_axis": {
  "data": {
   "shadows": "cis.plotting.plot.get_axis"
  },
  "type": "import"
 },
 "cis.test.unit.test_plot.get_label": {
  "data": {
   "shadows": "cis.plotting.plot.get_label"
  },
  "type": "import"
 },
 "cis.test.unit.test_plot.iris": {
  "data": {
   "shadows": "iris"
  },
  "type": "import"
 },
 "cis.test.unit.test_plot.make_dummy_1d_ungridded_data": {
  "data": {
   "shadows": "cis.test.util.mock.make_dummy_1d_ungridded_data"
  },
  "type": "import"
 },
 "cis.test.unit.test_plot.make_dummy_2d_ungridded_data": {
  "data": {
   "shadows": "cis.test.util.mock.make_dummy_2d_ungridded_data"
  },
  "type": "import"
 },
 "cis.test.unit.test_plot.make_from_cube": {
  "data": {
   "shadows": "cis.data_io.gridded_data.make_from_cube"
  },
  "type": "import"
 },
 "cis.test.unit.test_plot.make_mock_cube": {
  "data": {
   "shadows": "cis.test.util.mock.make_mock_cube"
  },
  "type": "import"
 },
 "cis.test.unit.test_plot.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "cis.test.unit.test_plot.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "cis.test.unit.test_time_util": {
  "data": {},
  "type": "module"
 },
 "cis.test.unit.test_time_util.PartialDateTime": {
  "data": {
   "shadows": "cis.time_util.PartialDateTime"
  },
  "type": "import"
 },
 "cis.test.unit.test_time_util.TestCase": {
  "data": {
   "shadows": "unittest.TestCase"
  },
  "type": "import"
 },
 "cis.test.unit.test_time_util.TestTimeUtils": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "unittest.TestCase"
   ]
  },
  "type": "class"
 },
 "cis.test.unit.test_time_util.TestTimeUtils.test_change_ug_data_year": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "cis.test.util.mock.make_regular_2d_with_time_ungridded_data",
    "cis.time_util.change_year_of_ungridded_data",
    "cis.time_util.convert_datetime_to_std_time",
    "datetime.datetime",
    "nose.tools.eq_"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_time_util.TestTimeUtils.test_convert_datetime_components_to_datetime_can_convert_date_hour_as_lower_limit": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "cis.time_util.PartialDateTime",
    "datetime.datetime"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_time_util.TestTimeUtils.test_convert_datetime_components_to_datetime_can_convert_date_hour_min_as_lower_limit": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "cis.time_util.PartialDateTime",
    "datetime.datetime"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_time_util.TestTimeUtils.test_convert_datetime_components_to_datetime_can_convert_date_hour_min_sec_as_lower_limit": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "cis.time_util.PartialDateTime",
    "datetime.datetime"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_time_util.TestTimeUtils.test_convert_datetime_components_to_datetime_can_convert_year_as_lower_limit": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "cis.time_util.PartialDateTime",
    "datetime.datetime"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_time_util.TestTimeUtils.test_convert_datetime_components_to_datetime_can_convert_year_month_as_lower_limit": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "cis.time_util.PartialDateTime",
    "datetime.datetime"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_time_util.TestTimeUtils.test_convert_datetime_components_to_datetime_can_convert_year_month_day_as_lower_limit": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "cis.time_util.PartialDateTime",
    "datetime.datetime"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_time_util.TestTimeUtils.test_convert_datetime_components_to_datetime_raises_error_if_invalid_date": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "ValueError",
    "cis.time_util.PartialDateTime",
    "nose.tools.raises"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_time_util.TestTimeUtils.test_convert_datetime_components_to_datetime_raises_error_if_invalid_time": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "ValueError",
    "cis.time_util.PartialDateTime",
    "nose.tools.raises"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_time_util.TestTimeUtils.test_convert_julian_date_to_std_time": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "cis.time_util.convert_datetime_to_std_time",
    "cis.time_util.convert_julian_date_to_std_time",
    "datetime.datetime",
    "nose.tools.eq_",
    "numpy.allclose",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_time_util.TestTimeUtils.test_find_last_day_of_month_finds_day_for_dec_2010": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "cis.time_util.find_last_day_of_month"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_time_util.TestTimeUtils.test_find_last_day_of_month_finds_day_for_feb_2000": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "cis.time_util.find_last_day_of_month"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_time_util.TestTimeUtils.test_set_year": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "cis.time_util.set_year",
    "datetime.datetime",
    "nose.tools.eq_"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_time_util.TestTimeUtils.test_that_can_calculate_mid_point_between_two_datetime": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "cis.time_util.calculate_mid_time",
    "cis.time_util.convert_datetime_to_std_time",
    "datetime.datetime",
    "nose.tools.eq_"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_time_util.TestTimeUtils.test_that_can_convert_julian_tai_to_datetime_obj": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "cis.time_util.convert_sec_since_to_std_time",
    "datetime.datetime",
    "nose.tools.assert_almost_equal",
    "nose.tools.eq_",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_time_util.TestTimeUtils.test_that_can_convert_masked_tai_to_datetime_obj": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "cis.time_util.convert_sec_since_to_std_time",
    "datetime.datetime",
    "nose.tools.assert_almost_equal",
    "nose.tools.eq_",
    "numpy.ma.array"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_time_util.TestTimeUtils.test_that_can_convert_tai_to_datetime_obj": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "cis.time_util.convert_sec_since_to_std_time",
    "datetime.datetime",
    "nose.tools.assert_almost_equal",
    "nose.tools.eq_",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_time_util.assert_almost_equal": {
  "data": {
   "shadows": "nose.tools.assert_almost_equal"
  },
  "type": "import"
 },
 "cis.test.unit.test_time_util.calculate_mid_time": {
  "data": {
   "shadows": "cis.time_util.calculate_mid_time"
  },
  "type": "import"
 },
 "cis.test.unit.test_time_util.change_year_of_ungridded_data": {
  "data": {
   "shadows": "cis.time_util.change_year_of_ungridded_data"
  },
  "type": "import"
 },
 "cis.test.unit.test_time_util.convert_datetime_to_std_time": {
  "data": {
   "shadows": "cis.time_util.convert_datetime_to_std_time"
  },
  "type": "import"
 },
 "cis.test.unit.test_time_util.convert_julian_date_to_std_time": {
  "data": {
   "shadows": "cis.time_util.convert_julian_date_to_std_time"
  },
  "type": "import"
 },
 "cis.test.unit.test_time_util.convert_sec_since_to_std_time": {
  "data": {
   "shadows": "cis.time_util.convert_sec_since_to_std_time"
  },
  "type": "import"
 },
 "cis.test.unit.test_time_util.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "cis.test.unit.test_time_util.dt": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "cis.test.unit.test_time_util.eq_": {
  "data": {
   "shadows": "nose.tools.eq_"
  },
  "type": "import"
 },
 "cis.test.unit.test_time_util.find_last_day_of_month": {
  "data": {
   "shadows": "cis.time_util.find_last_day_of_month"
  },
  "type": "import"
 },
 "cis.test.unit.test_time_util.istest": {
  "data": {
   "shadows": "nose.tools.istest"
  },
  "type": "import"
 },
 "cis.test.unit.test_time_util.ma": {
  "data": {
   "shadows": "numpy.ma"
  },
  "type": "import"
 },
 "cis.test.unit.test_time_util.make_regular_2d_with_time_ungridded_data": {
  "data": {
   "shadows": "cis.test.util.mock.make_regular_2d_with_time_ungridded_data"
  },
  "type": "import"
 },
 "cis.test.unit.test_time_util.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "cis.test.unit.test_time_util.raises": {
  "data": {
   "shadows": "nose.tools.raises"
  },
  "type": "import"
 },
 "cis.test.unit.test_time_util.set_year": {
  "data": {
   "shadows": "cis.time_util.set_year"
  },
  "type": "import"
 },
 "cis.test.unit.test_utils": {
  "data": {},
  "type": "module"
 },
 "cis.test.unit.test_utils.TestFindLongitudeWrapStart": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": [
    "cis.test.unit.test_utils.unittest"
   ]
  },
  "type": "class"
 },
 "cis.test.unit.test_utils.TestFindLongitudeWrapStart.test_GIVEN_data_is_minus_0_to_360_THEN_returns_0": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "cis.test.util.mock.make_regular_2d_ungridded_data",
    "find_longitude_wrap_start",
    "nose.tools.eq_"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_utils.TestFindLongitudeWrapStart.test_GIVEN_data_is_minus_180_to_180_THEN_returns_minus_180": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "cis.test.util.mock.make_regular_2d_ungridded_data",
    "find_longitude_wrap_start",
    "nose.tools.eq_"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_utils.TestUtils": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "cis.test.unit.test_utils.unittest"
   ]
  },
  "type": "class"
 },
 "cis.test.unit.test_utils.TestUtils.bin_width_can_be_specified_where_bin_width_does_not_perfectly_divides_range": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "calculate_histogram_bin_edges",
    "len",
    "nose.tools.eq_",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_utils.TestUtils.bin_width_can_be_specified_where_bin_width_perfectly_divides_range": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "calculate_histogram_bin_edges",
    "len",
    "nose.tools.eq_",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_utils.TestUtils.ten_bins_are_created_by_default": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "abs",
    "calculate_histogram_bin_edges",
    "len",
    "nose.tools.eq_",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_utils.TestUtils.ten_bins_are_created_when_max_is_specified": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "abs",
    "calculate_histogram_bin_edges",
    "len",
    "nose.tools.eq_",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_utils.TestUtils.ten_bins_are_created_when_min_and_max_is_specified": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "abs",
    "calculate_histogram_bin_edges",
    "len",
    "nose.tools.eq_",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_utils.TestUtils.ten_bins_are_created_when_min_is_specified": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "abs",
    "calculate_histogram_bin_edges",
    "len",
    "nose.tools.eq_",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_utils.TestUtils.test_GIVEN_list_of_arrays_to_concat_WHEN_some_masked_but_not_first_THEN_returns_masked_array_with_correct_mask": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "cis.test.unit.test_utils.numpy",
    "concatenate",
    "range"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_utils.TestUtils.test_GIVEN_list_of_arrays_to_concatenate_WHEN_all_are_masked_THEN_returns_masked_array_with_correct_mask": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "cis.test.unit.test_utils.numpy",
    "concatenate",
    "range"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_utils.TestUtils.test_GIVEN_list_of_arrays_to_concatenate_WHEN_none_are_masked_THEN_returns_numpy_array": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "cis.test.unit.test_utils.numpy",
    "concatenate",
    "isinstance",
    "range"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_utils.TestUtils.test_GIVEN_list_of_arrays_to_concatenate_WHEN_some_are_masked_THEN_returns_masked_array": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "cis.test.unit.test_utils.numpy",
    "concatenate",
    "range"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_utils.TestUtils.test_GIVEN_lons_write_only_WHEN_fix_longitude_THEN_longitudes_fixed": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "cis.test.unit.test_utils.numpy",
    "fix_longitude_range"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_utils.TestUtils.test_GIVEN_masked_array_WHEN_fix_longitude_THEN_longitudes_fixed_but_masked_values_untouched": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "cis.test.unit.test_utils.numpy",
    "cis.test.utils_for_testing.compare_masked_arrays",
    "fix_longitude_range",
    "float"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_utils.TestUtils.test_GIVEN_unmasked_array_WHEN_fix_longitude_THEN_longitudes_fixed": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "cis.test.unit.test_utils.numpy",
    "fix_longitude_range"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_utils.TestUtils.test_apply_mask_to_numpy_array_with_masked_array": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "apply_mask_to_numpy_array",
    "cis.test.unit.test_utils.numpy"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_utils.TestUtils.test_apply_mask_to_numpy_array_with_masked_array_but_all_unmasked": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "apply_mask_to_numpy_array",
    "cis.test.unit.test_utils.numpy"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_utils.TestUtils.test_apply_mask_to_numpy_array_with_masked_array_with_array_unmasked": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "apply_mask_to_numpy_array",
    "cis.test.unit.test_utils.numpy"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_utils.TestUtils.test_apply_mask_to_numpy_array_with_masked_array_with_nomask": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "apply_mask_to_numpy_array",
    "cis.test.unit.test_utils.numpy"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_utils.TestUtils.test_apply_mask_to_numpy_array_with_unmasked_array": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "apply_mask_to_numpy_array",
    "cis.test.unit.test_utils.numpy"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_utils.TestUtils.test_array_equal_including_nan": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "array_equal_including_nan",
    "cis.test.unit.test_utils.numpy",
    "float"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_utils.TestUtils.test_can_apply_intersection_mask_to_one_masked_and_one_unmasked_array": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "apply_intersection_mask_to_two_arrays",
    "cis.test.unit.test_utils.numpy",
    "numpy.ma.array"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_utils.TestUtils.test_can_apply_intersection_mask_to_three_masked_arrays": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "apply_intersection_mask_to_two_arrays",
    "numpy.ma.array",
    "numpy.ma.equal"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_utils.TestUtils.test_can_apply_intersection_mask_to_two_masked_arrays": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "apply_intersection_mask_to_two_arrays",
    "cis.test.unit.test_utils.numpy",
    "numpy.ma.array"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_utils.TestUtils.test_can_apply_intersection_mask_to_two_unmasked_arrays": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "all",
    "apply_intersection_mask_to_two_arrays",
    "cis.test.unit.test_utils.numpy"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_utils.TestUtils.test_can_expand_1d_array_across": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "cis.test.unit.test_utils.numpy",
    "cis.utils.expand_1d_to_2d_array"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_utils.TestUtils.test_can_expand_1d_array_down": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "cis.test.unit.test_utils.numpy",
    "cis.utils.expand_1d_to_2d_array"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_utils.TestUtils.test_changing_an_element_of_expanded_array_raises_error": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "ValueError",
    "cis.test.unit.test_utils.numpy",
    "cis.utils.expand_1d_to_2d_array",
    "nose.tools.raises"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_utils.TestUtils.test_parse_distance_with_invalid_units": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "nose.tools.eq_",
    "nose.tools.raises",
    "parse_distance_with_units_to_float_km"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_utils.TestUtils.test_parse_distance_with_units_of_km_to_float_km": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "nose.tools.eq_",
    "parse_distance_with_units_to_float_km"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_utils.TestUtils.test_parse_distance_with_units_of_km_to_float_m": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "nose.tools.eq_",
    "parse_distance_with_units_to_float_m"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_utils.TestUtils.test_parse_distance_with_units_of_m_to_float_km": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "nose.tools.eq_",
    "parse_distance_with_units_to_float_km"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_utils.TestUtils.test_parse_distance_with_units_of_m_to_float_m": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "nose.tools.eq_",
    "parse_distance_with_units_to_float_m"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_utils.TestUtils.test_parse_distance_without_units_to_float_km": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "nose.tools.eq_",
    "parse_distance_with_units_to_float_km"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_utils.TestUtils.test_parse_distance_without_units_to_float_m": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "nose.tools.eq_",
    "parse_distance_with_units_to_float_m"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_utils.TestUtils.test_split_into_float_and_units": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "nose.tools.eq_",
    "split_into_float_and_units"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_utils.TestUtils.test_split_into_float_and_units_with_extra_numbers": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "nose.tools.raises",
    "split_into_float_and_units"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_utils.TestUtils.test_split_into_float_and_units_with_extra_units": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "nose.tools.eq_",
    "nose.tools.raises",
    "split_into_float_and_units"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_utils.TestUtils.test_split_into_float_and_units_with_full_float": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "nose.tools.eq_",
    "split_into_float_and_units"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_utils.TestUtils.test_split_into_float_and_units_with_no_numbers": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "nose.tools.raises",
    "split_into_float_and_units"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_utils.TestUtils.test_split_into_float_and_units_with_no_units": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "nose.tools.eq_",
    "split_into_float_and_units"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_utils.TestUtils.test_split_into_float_and_units_with_spaces": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "nose.tools.eq_",
    "split_into_float_and_units"
   ]
  },
  "type": "function"
 },
 "cis.test.unit.test_utils.array": {
  "data": {
   "shadows": "numpy.array"
  },
  "type": "import"
 },
 "cis.test.unit.test_utils.compare_masked_arrays": {
  "data": {
   "shadows": "cis.test.utils_for_testing.compare_masked_arrays"
  },
  "type": "import"
 },
 "cis.test.unit.test_utils.eq_": {
  "data": {
   "shadows": "nose.tools.eq_"
  },
  "type": "import"
 },
 "cis.test.unit.test_utils.expand_1d_to_2d_array": {
  "data": {
   "shadows": "cis.utils.expand_1d_to_2d_array"
  },
  "type": "import"
 },
 "cis.test.unit.test_utils.ma": {
  "data": {
   "shadows": "numpy.ma"
  },
  "type": "import"
 },
 "cis.test.unit.test_utils.make_regular_2d_ungridded_data": {
  "data": {
   "shadows": "cis.test.util.mock.make_regular_2d_ungridded_data"
  },
  "type": "import"
 },
 "cis.test.unit.test_utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "cis.test.unit.test_utils.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "cis.test.unit.test_utils.raises": {
  "data": {
   "shadows": "nose.tools.raises"
  },
  "type": "import"
 },
 "cis.test.unit.test_utils.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "cis.test.util": {
  "data": {},
  "type": "module"
 },
 "cis.test.utils_for_testing": {
  "data": {},
  "type": "module"
 },
 "cis.test.utils_for_testing.assert_arrays_almost_equal": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "cis.test.utils_for_testing.numpy",
    "hamcrest.assert_that",
    "hamcrest.is_"
   ]
  },
  "type": "function"
 },
 "cis.test.utils_for_testing.assert_arrays_equal": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "cis.test.utils_for_testing.numpy",
    "hamcrest.assert_that",
    "hamcrest.is_"
   ]
  },
  "type": "function"
 },
 "cis.test.utils_for_testing.assert_that": {
  "data": {
   "shadows": "hamcrest.assert_that"
  },
  "type": "import"
 },
 "cis.test.utils_for_testing.compare_masked_arrays": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "cis.test.utils_for_testing.numpy",
    "hamcrest.assert_that",
    "hamcrest.is_"
   ]
  },
  "type": "function"
 },
 "cis.test.utils_for_testing.is_": {
  "data": {
   "shadows": "hamcrest.is_"
  },
  "type": "import"
 },
 "cis.test.utils_for_testing.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "cis.time_util": {
  "data": {
   "symbols_in_volume": [
    "cf_units.Unit"
   ]
  },
  "type": "module"
 },
 "cis.time_util.PartialDateTime": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "cis.time_util.PartialDateTime.__eq__": {
  "data": {
   "lineno": 111
  },
  "type": "function"
 },
 "cis.time_util.PartialDateTime.__init__": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "any",
    "getattr"
   ]
  },
  "type": "function"
 },
 "cis.time_util.PartialDateTime.max": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "cis.time_util.find_last_day_of_month",
    "datetime.datetime",
    "getattr",
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "cis.time_util.PartialDateTime.min": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "datetime.datetime",
    "getattr",
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "cis.time_util.PartialDateTime.range": {
  "data": {
   "lineno": 48
  },
  "type": "function"
 },
 "cis.time_util.Unit": {
  "data": {
   "shadows": "cf_units.Unit"
  },
  "type": "import"
 },
 "cis.time_util.calculate_mid_time": {
  "data": {
   "lineno": 128
  },
  "type": "function"
 },
 "cis.time_util.change_year_of_ungridded_data": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "cis.time_util.convert_datetime_to_std_time",
    "cis.time_util.convert_std_time_to_datetime",
    "cis.time_util.set_year",
    "np_set_year",
    "numpy.vectorize"
   ]
  },
  "type": "function"
 },
 "cis.time_util.cis_standard_time_unit": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "cis.time_util.convert_cube_time_coord_to_standard_time": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "cis.time_util.cis_standard_time_unit",
    "len"
   ]
  },
  "type": "function"
 },
 "cis.time_util.convert_datetime_to_std_time": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "cis.time_util.cis_standard_time_unit"
   ]
  },
  "type": "function"
 },
 "cis.time_util.convert_julian_date_to_std_time": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "cf_units.date2julian_day",
    "cis.time_util.cis_standard_time_unit"
   ]
  },
  "type": "function"
 },
 "cis.time_util.convert_sec_since_to_std_time": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "cis.time_util.cis_standard_time_unit",
    "isinstance",
    "numpy.ma.MaskedArray"
   ]
  },
  "type": "function"
 },
 "cis.time_util.convert_std_time_to_datetime": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "cis.time_util.cis_standard_time_unit"
   ]
  },
  "type": "function"
 },
 "cis.time_util.convert_time_since_to_std_time": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "cis.time_util.cis_standard_time_unit"
   ]
  },
  "type": "function"
 },
 "cis.time_util.convert_time_using_time_stamp_info_to_std_time": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "ValueError",
    "cf_units.Unit",
    "cis.time_util.convert_time_since_to_std_time",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "cis.time_util.date2julian_day": {
  "data": {
   "shadows": "cf_units.date2julian_day"
  },
  "type": "import"
 },
 "cis.time_util.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "cis.time_util.find_last_day_of_month": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "datetime.datetime.datetime",
    "datetime.datetime.timedelta"
   ]
  },
  "type": "function"
 },
 "cis.time_util.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "cis.time_util.set_year": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "ValueError",
    "datetime.datetime.replace"
   ]
  },
  "type": "function"
 }
}