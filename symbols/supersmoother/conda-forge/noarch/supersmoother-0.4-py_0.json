{
 "supersmoother": {
  "data": {},
  "type": "module"
 },
 "supersmoother.__all__": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "supersmoother.__version__": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "supersmoother.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "supersmoother.smoother": {
  "data": {},
  "type": "module"
 },
 "supersmoother.smoother.LinearSmoother": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "staticmethod",
    "supersmoother.smoother.SpannedSmoother"
   ]
  },
  "type": "class"
 },
 "supersmoother.smoother.MovingAverageSmoother": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "staticmethod",
    "supersmoother.smoother.SpannedSmoother"
   ]
  },
  "type": "class"
 },
 "supersmoother.smoother.Smoother": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "supersmoother.smoother.Smoother.__init__": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "supersmoother.smoother.Smoother._cv_values": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "supersmoother.smoother.Smoother._fit": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "supersmoother.smoother.Smoother._predict": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "supersmoother.smoother.Smoother._validate_inputs": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "hasattr",
    "numpy.argsort",
    "numpy.broadcast_arrays",
    "slice"
   ]
  },
  "type": "function"
 },
 "supersmoother.smoother.Smoother.cv_error": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "abs",
    "numpy.mean"
   ]
  },
  "type": "function"
 },
 "supersmoother.smoother.Smoother.cv_residuals": {
  "data": {
   "lineno": 55
  },
  "type": "function"
 },
 "supersmoother.smoother.Smoother.cv_values": {
  "data": {
   "lineno": 51
  },
  "type": "function"
 },
 "supersmoother.smoother.Smoother.fit": {
  "data": {
   "lineno": 13
  },
  "type": "function"
 },
 "supersmoother.smoother.Smoother.predict": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.ravel"
   ]
  },
  "type": "function"
 },
 "supersmoother.smoother.SpannedSmoother": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "supersmoother.smoother.Smoother"
   ]
  },
  "type": "class"
 },
 "supersmoother.smoother.SpannedSmoother.__init__": {
  "data": {
   "lineno": 92
  },
  "type": "function"
 },
 "supersmoother.smoother.SpannedSmoother._cv_values": {
  "data": {
   "lineno": 122
  },
  "type": "function"
 },
 "supersmoother.smoother.SpannedSmoother._fit": {
  "data": {
   "lineno": 96
  },
  "type": "function"
 },
 "supersmoother.smoother.SpannedSmoother._predict": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "callable"
   ]
  },
  "type": "function"
 },
 "supersmoother.smoother.SpannedSmoother.span_int": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "callable",
    "iterable",
    "len",
    "numpy.clip"
   ]
  },
  "type": "function"
 },
 "supersmoother.smoother.__all__": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "supersmoother.smoother.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "supersmoother.smoother.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "supersmoother.smoother.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "supersmoother.smoother.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "supersmoother.supersmoother": {
  "data": {},
  "type": "module"
 },
 "supersmoother.supersmoother.SuperSmoother": {
  "data": {
   "lineno": 9
  },
  "type": "class"
 },
 "supersmoother.supersmoother.SuperSmoother.__init__": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "LinearSmoother",
    "numpy.sort",
    "numpy.unique"
   ]
  },
  "type": "function"
 },
 "supersmoother.supersmoother.SuperSmoother._cv_values": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "LinearSmoother._cv_values",
    "setattr_context"
   ]
  },
  "type": "function"
 },
 "supersmoother.supersmoother.SuperSmoother._fit": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "LinearSmoother",
    "abs",
    "multinterp",
    "numpy.argmin",
    "numpy.array",
    "numpy.clip"
   ]
  },
  "type": "function"
 },
 "supersmoother.supersmoother.SuperSmoother._predict": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "LinearSmoother._predict",
    "setattr_context"
   ]
  },
  "type": "function"
 },
 "supersmoother.supersmoother.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "supersmoother.supersmoother.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "supersmoother.supersmoother.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "supersmoother.supersmoother.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "supersmoother.tests": {
  "data": {},
  "type": "module"
 },
 "supersmoother.tests.test_basic_smoothers": {
  "data": {},
  "type": "module"
 },
 "supersmoother.tests.test_basic_smoothers.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "supersmoother.tests.test_basic_smoothers.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "supersmoother.tests.test_basic_smoothers.assert_array_less": {
  "data": {
   "shadows": "numpy.testing.assert_array_less"
  },
  "type": "import"
 },
 "supersmoother.tests.test_basic_smoothers.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "supersmoother.tests.test_basic_smoothers.assert_raises": {
  "data": {
   "shadows": "numpy.testing.assert_raises"
  },
  "type": "import"
 },
 "supersmoother.tests.test_basic_smoothers.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "supersmoother.tests.test_basic_smoothers.make_linear": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "numpy.random.RandomState"
   ]
  },
  "type": "function"
 },
 "supersmoother.tests.test_basic_smoothers.make_sine": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "numpy.pi",
    "numpy.random.RandomState",
    "numpy.sin"
   ]
  },
  "type": "function"
 },
 "supersmoother.tests.test_basic_smoothers.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "supersmoother.tests.test_basic_smoothers.test_baseclass": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "Derived",
    "NotImplementedError",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "supersmoother.tests.test_basic_smoothers.test_baseclass.Derived": {
  "data": {
   "lineno": 208
  },
  "type": "class"
 },
 "supersmoother.tests.test_basic_smoothers.test_baseclass.Derived.__init__": {
  "data": {
   "lineno": 209
  },
  "type": "function"
 },
 "supersmoother.tests.test_basic_smoothers.test_cv_interface": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "LinearSmoother",
    "Model",
    "supersmoother.tests.test_basic_smoothers.make_sine"
   ]
  },
  "type": "function"
 },
 "supersmoother.tests.test_basic_smoothers.test_cv_interface.check_model": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "Model",
    "abs",
    "numpy.mean",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "supersmoother.tests.test_basic_smoothers.test_duplicate_inputs": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "LinearSmoother",
    "ValueError",
    "numpy.arange",
    "numpy.random.RandomState",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "supersmoother.tests.test_basic_smoothers.test_func_span_const": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "LinearSmoother",
    "Model",
    "numpy.ones_like",
    "supersmoother.tests.test_basic_smoothers.make_sine"
   ]
  },
  "type": "function"
 },
 "supersmoother.tests.test_basic_smoothers.test_func_span_const.check_model": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "Model",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "supersmoother.tests.test_basic_smoothers.test_func_span_variable": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "LinearSmoother",
    "Model",
    "spanfunc",
    "supersmoother.tests.test_basic_smoothers.make_sine"
   ]
  },
  "type": "function"
 },
 "supersmoother.tests.test_basic_smoothers.test_func_span_variable.check_model": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "Model",
    "numpy.testing.assert_allclose",
    "spanfunc"
   ]
  },
  "type": "function"
 },
 "supersmoother.tests.test_basic_smoothers.test_line_linear": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "numpy.linspace",
    "supersmoother.tests.test_basic_smoothers.make_linear"
   ]
  },
  "type": "function"
 },
 "supersmoother.tests.test_basic_smoothers.test_line_linear.check_model": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "LinearSmoother",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "supersmoother.tests.test_basic_smoothers.test_periodic": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "LinearSmoother",
    "Model",
    "numpy.concatenate",
    "numpy.linspace",
    "numpy.random.RandomState"
   ]
  },
  "type": "function"
 },
 "supersmoother.tests.test_basic_smoothers.test_periodic.check_model": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "Model",
    "len",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "supersmoother.tests.test_basic_smoothers.test_sine": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "Model",
    "numpy.linspace",
    "numpy.sin",
    "supersmoother.tests.test_basic_smoothers.make_sine",
    "zip"
   ]
  },
  "type": "function"
 },
 "supersmoother.tests.test_basic_smoothers.test_sine.check_model": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "Model",
    "numpy.mean",
    "numpy.testing.assert_array_less"
   ]
  },
  "type": "function"
 },
 "supersmoother.tests.test_basic_smoothers.test_sine_cv": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "Model",
    "numpy.sin",
    "numpy.sort",
    "supersmoother.tests.test_basic_smoothers.make_sine",
    "zip"
   ]
  },
  "type": "function"
 },
 "supersmoother.tests.test_basic_smoothers.test_sine_cv.check_model": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "Model",
    "numpy.mean",
    "numpy.testing.assert_array_less"
   ]
  },
  "type": "function"
 },
 "supersmoother.tests.test_basic_smoothers.test_span_extremes": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "LinearSmoother",
    "Model",
    "supersmoother.tests.test_basic_smoothers.make_sine"
   ]
  },
  "type": "function"
 },
 "supersmoother.tests.test_basic_smoothers.test_span_extremes.check_model": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "Model",
    "numpy.testing.assert_allclose",
    "numpy.zeros_like"
   ]
  },
  "type": "function"
 },
 "supersmoother.tests.test_basic_smoothers.test_variable_sine_crossval": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "LinearSmoother",
    "Model",
    "numpy.linspace",
    "numpy.sin",
    "supersmoother.tests.test_basic_smoothers.make_sine"
   ]
  },
  "type": "function"
 },
 "supersmoother.tests.test_basic_smoothers.test_variable_sine_crossval.check_model": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "Model",
    "numpy.ones_like",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "supersmoother.tests.test_basic_smoothers.test_variable_sine_predict": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "LinearSmoother",
    "Model",
    "numpy.linspace",
    "numpy.sin",
    "supersmoother.tests.test_basic_smoothers.make_sine"
   ]
  },
  "type": "function"
 },
 "supersmoother.tests.test_basic_smoothers.test_variable_sine_predict.check_model": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "Model",
    "numpy.ones_like",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "supersmoother.tests.test_supersmoother": {
  "data": {},
  "type": "module"
 },
 "supersmoother.tests.test_supersmoother.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "supersmoother.tests.test_supersmoother.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "supersmoother.tests.test_supersmoother.assert_array_less": {
  "data": {
   "shadows": "numpy.testing.assert_array_less"
  },
  "type": "import"
 },
 "supersmoother.tests.test_supersmoother.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "supersmoother.tests.test_supersmoother.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "supersmoother.tests.test_supersmoother.make_linear": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "numpy.random.RandomState"
   ]
  },
  "type": "function"
 },
 "supersmoother.tests.test_supersmoother.make_sine": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "numpy.pi",
    "numpy.random.RandomState",
    "numpy.sin"
   ]
  },
  "type": "function"
 },
 "supersmoother.tests.test_supersmoother.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "supersmoother.tests.test_supersmoother.test_bass_enhancement_10": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "LinearSmoother",
    "SuperSmoother",
    "numpy.testing.assert_allclose",
    "supersmoother.tests.test_supersmoother.make_sine"
   ]
  },
  "type": "function"
 },
 "supersmoother.tests.test_supersmoother.test_bass_enhancement_zero": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "SuperSmoother",
    "numpy.testing.assert_allclose",
    "supersmoother.tests.test_supersmoother.make_sine"
   ]
  },
  "type": "function"
 },
 "supersmoother.tests.test_supersmoother.test_cv_interface": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "SuperSmoother",
    "supersmoother.tests.test_supersmoother.make_sine"
   ]
  },
  "type": "function"
 },
 "supersmoother.tests.test_supersmoother.test_cv_interface.check_model": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "abs",
    "numpy.mean",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "supersmoother.tests.test_supersmoother.test_line_linear": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "SuperSmoother",
    "numpy.linspace",
    "numpy.testing.assert_allclose",
    "supersmoother.tests.test_supersmoother.make_linear"
   ]
  },
  "type": "function"
 },
 "supersmoother.tests.test_supersmoother.test_sine": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "SuperSmoother",
    "numpy.linspace",
    "numpy.mean",
    "numpy.sin",
    "numpy.testing.assert_array_less",
    "supersmoother.tests.test_supersmoother.make_sine"
   ]
  },
  "type": "function"
 },
 "supersmoother.tests.test_supersmoother.test_sine_cv": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "SuperSmoother",
    "numpy.mean",
    "numpy.sin",
    "numpy.sort",
    "numpy.testing.assert_array_less",
    "supersmoother.tests.test_supersmoother.make_sine"
   ]
  },
  "type": "function"
 },
 "supersmoother.tests.test_utils": {
  "data": {},
  "type": "module"
 },
 "supersmoother.tests.test_utils._fixed_span_sum": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "len",
    "numpy.convolve",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "supersmoother.tests.test_utils._variable_span_sum": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "enumerate",
    "numpy.asarray",
    "numpy.broadcast_arrays",
    "numpy.unique",
    "supersmoother.tests.test_utils._fixed_span_sum"
   ]
  },
  "type": "function"
 },
 "supersmoother.tests.test_utils.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "supersmoother.tests.test_utils.assert_": {
  "data": {
   "shadows": "numpy.testing.assert_"
  },
  "type": "import"
 },
 "supersmoother.tests.test_utils.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "supersmoother.tests.test_utils.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "supersmoother.tests.test_utils.assert_raises": {
  "data": {
   "shadows": "numpy.testing.assert_raises"
  },
  "type": "import"
 },
 "supersmoother.tests.test_utils.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "supersmoother.tests.test_utils.make_linear": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "numpy.random.RandomState"
   ]
  },
  "type": "function"
 },
 "supersmoother.tests.test_utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "supersmoother.tests.test_utils.test_constant_data": {
  "data": {
   "lineno": 319,
   "symbols_in_volume": [
    "method",
    "numpy.random.RandomState",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "supersmoother.tests.test_utils.test_equal_spaced_linear_data": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": [
    "method",
    "numpy.linspace",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "supersmoother.tests.test_utils.test_iterable": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "supersmoother.tests.test_utils.test_multiinterp": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "numpy.random.RandomState"
   ]
  },
  "type": "function"
 },
 "supersmoother.tests.test_utils.test_multiinterp.check_match": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "numpy.sort",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "supersmoother.tests.test_utils.test_perfect_sine": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": [
    "method",
    "numpy.linspace",
    "numpy.sin",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "supersmoother.tests.test_utils.test_random_linear_data": {
  "data": {
   "lineno": 344,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "supersmoother.tests.test_utils.test_setattr_context": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "Foo",
    "ValueError",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "supersmoother.tests.test_utils.test_setattr_context.Foo": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "supersmoother.tests.test_utils.test_smooth_assertions": {
  "data": {
   "lineno": 370,
   "symbols_in_volume": [
    "ValueError",
    "method",
    "numpy.random.RandomState",
    "numpy.sin",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "supersmoother.tests.test_utils.test_t_vs_t_out": {
  "data": {
   "lineno": 356,
   "symbols_in_volume": [
    "method",
    "numpy.random.RandomState",
    "numpy.sin",
    "numpy.sort",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "supersmoother.tests.test_utils.test_validate_inputs_fail": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "ValueError",
    "numpy.random.RandomState",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "supersmoother.tests.test_utils.test_validate_inputs_nosort": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "supersmoother.tests.test_utils.test_validate_inputs_sort": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "numpy.argsort",
    "numpy.random.RandomState",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "supersmoother.tests.test_utils.test_windowed_sum_bad_args": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "ValueError",
    "numpy.arange",
    "numpy.random.RandomState",
    "numpy.testing.assert_raises",
    "windowed_sum",
    "windowed_sum_slow",
    "wsum"
   ]
  },
  "type": "function"
 },
 "supersmoother.tests.test_utils.test_windowed_sum_fast_vs_slow": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "numpy.random.RandomState"
   ]
  },
  "type": "function"
 },
 "supersmoother.tests.test_utils.test_windowed_sum_fast_vs_slow.check_results": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "len",
    "numpy.asarray",
    "numpy.sort",
    "numpy.testing.assert_allclose",
    "windowed_sum",
    "windowed_sum_slow"
   ]
  },
  "type": "function"
 },
 "supersmoother.tests.test_utils.test_windowed_sum_period_zero": {
  "data": {
   "lineno": 284,
   "symbols_in_volume": [
    "check_results",
    "numpy.random.RandomState",
    "numpy.sort",
    "windowed_sum",
    "windowed_sum_slow",
    "wsum"
   ]
  },
  "type": "function"
 },
 "supersmoother.tests.test_utils.test_windowed_sum_period_zero.check_results": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose",
    "wsum"
   ]
  },
  "type": "function"
 },
 "supersmoother.tests.test_utils.test_windowed_sum_simple": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "range",
    "wsum"
   ]
  },
  "type": "function"
 },
 "supersmoother.tests.test_utils.test_windowed_sum_simple.check_results": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose",
    "supersmoother.tests.test_utils._fixed_span_sum",
    "wsum"
   ]
  },
  "type": "function"
 },
 "supersmoother.tests.test_utils.test_windowed_sum_subtract_mid": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "range",
    "wsum"
   ]
  },
  "type": "function"
 },
 "supersmoother.tests.test_utils.test_windowed_sum_subtract_mid.check_results": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "numpy.sort",
    "numpy.testing.assert_allclose",
    "supersmoother.tests.test_utils._fixed_span_sum",
    "wsum"
   ]
  },
  "type": "function"
 },
 "supersmoother.tests.test_utils.test_windowed_sum_varspan": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "range",
    "wsum"
   ]
  },
  "type": "function"
 },
 "supersmoother.tests.test_utils.test_windowed_sum_varspan.check_results": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose",
    "supersmoother.tests.test_utils._variable_span_sum",
    "wsum"
   ]
  },
  "type": "function"
 },
 "supersmoother.tests.test_utils.test_windowed_sum_with_indices": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "range",
    "wsum"
   ]
  },
  "type": "function"
 },
 "supersmoother.tests.test_utils.test_windowed_sum_with_indices.check_results": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "numpy.sort",
    "numpy.testing.assert_allclose",
    "wsum"
   ]
  },
  "type": "function"
 },
 "supersmoother.tests.test_utils.test_windowed_sum_with_period": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "range",
    "wsum"
   ]
  },
  "type": "function"
 },
 "supersmoother.tests.test_utils.test_windowed_sum_with_period.check_results": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "len",
    "numpy.concatenate",
    "numpy.sort",
    "numpy.testing.assert_allclose",
    "range",
    "wsum"
   ]
  },
  "type": "function"
 },
 "supersmoother.tests.test_utils.test_windowed_sum_with_t": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "range",
    "wsum"
   ]
  },
  "type": "function"
 },
 "supersmoother.tests.test_utils.test_windowed_sum_with_t.check_results": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "numpy.sort",
    "numpy.testing.assert_allclose",
    "supersmoother.tests.test_utils._fixed_span_sum",
    "wsum"
   ]
  },
  "type": "function"
 },
 "supersmoother.utils": {
  "data": {},
  "type": "module"
 },
 "supersmoother.utils._prep_smooth": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "ValueError",
    "numpy.broadcast_arrays",
    "numpy.searchsorted",
    "supersmoother.utils.validate_inputs"
   ]
  },
  "type": "function"
 },
 "supersmoother.utils.contextmanager": {
  "data": {
   "shadows": "contextlib.contextmanager"
  },
  "type": "import"
 },
 "supersmoother.utils.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "supersmoother.utils.interp1d": {
  "data": {
   "shadows": "scipy.interpolate.interp1d"
  },
  "type": "import"
 },
 "supersmoother.utils.iterable": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "iter"
   ]
  },
  "type": "function"
 },
 "supersmoother.utils.linear_smooth": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.any",
    "numpy.asarray",
    "numpy.minimum",
    "numpy.searchsorted",
    "supersmoother.utils._prep_smooth",
    "windowed_sum"
   ]
  },
  "type": "function"
 },
 "supersmoother.utils.moving_average_smooth": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "len",
    "numpy.minimum",
    "numpy.searchsorted",
    "supersmoother.utils._prep_smooth",
    "windowed_sum"
   ]
  },
  "type": "function"
 },
 "supersmoother.utils.multinterp": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "len",
    "map",
    "numpy.arange",
    "numpy.array",
    "numpy.asarray",
    "numpy.clip",
    "numpy.searchsorted",
    "numpy.where",
    "scipy.interpolate.interp1d",
    "zip"
   ]
  },
  "type": "function"
 },
 "supersmoother.utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "supersmoother.utils.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "supersmoother.utils.setattr_context": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "contextlib.contextmanager",
    "dict",
    "getattr",
    "setattr"
   ]
  },
  "type": "function"
 },
 "supersmoother.utils.validate_inputs": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "ValueError",
    "numpy.argsort",
    "numpy.broadcast_arrays",
    "tuple"
   ]
  },
  "type": "function"
 },
 "supersmoother.windowed_sum": {
  "data": {},
  "type": "module"
 },
 "supersmoother.windowed_sum._pad_arrays": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "divmod",
    "len",
    "max",
    "numpy.arange",
    "numpy.concatenate",
    "numpy.max",
    "numpy.min",
    "range",
    "slice"
   ]
  },
  "type": "function"
 },
 "supersmoother.windowed_sum.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "supersmoother.windowed_sum.windowed_sum": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "ValueError",
    "all",
    "convolve_same",
    "int",
    "len",
    "map",
    "numpy.add.reduceat",
    "numpy.all",
    "numpy.append",
    "numpy.arange",
    "numpy.asarray",
    "numpy.broadcast_arrays",
    "numpy.maximum",
    "numpy.minimum",
    "numpy.ones",
    "numpy.vstack",
    "numpy.zeros",
    "slice",
    "supersmoother.windowed_sum._pad_arrays",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "supersmoother.windowed_sum.windowed_sum.convolve_same": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "len",
    "numpy.convolve"
   ]
  },
  "type": "function"
 },
 "supersmoother.windowed_sum.windowed_sum_slow": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "ValueError",
    "all",
    "int",
    "len",
    "map",
    "max",
    "min",
    "numpy.all",
    "numpy.arange",
    "numpy.asarray",
    "numpy.broadcast",
    "numpy.broadcast_arrays",
    "numpy.ones",
    "numpy.zeros",
    "range",
    "sum",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 }
}