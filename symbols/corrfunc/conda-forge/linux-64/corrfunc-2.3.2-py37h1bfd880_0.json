{
 "Corrfunc": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "Corrfunc.call_correlation_functions": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "Corrfunc.call_correlation_functions.main": {
  "lineno": 29,
  "symbols_in_volume": [
   "Corrfunc.__file__",
   "Corrfunc._countpairs.countpairs",
   "Corrfunc._countpairs.countpairs_rp_pi",
   "Corrfunc._countpairs.countpairs_s_mu",
   "Corrfunc._countpairs.countpairs_wp",
   "Corrfunc._countpairs.countpairs_xi",
   "Corrfunc._countpairs.countspheres_vpf",
   "Corrfunc.io.read_catalog",
   "numpy.ones",
   "os.path.abspath",
   "os.path.dirname",
   "os.path.join",
   "time.time"
  ],
  "type": "function"
 },
 "Corrfunc.call_correlation_functions_mocks": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "Corrfunc.call_correlation_functions_mocks.main": {
  "lineno": 14,
  "symbols_in_volume": [
   "Corrfunc.__file__",
   "Corrfunc._countpairs_mocks.countpairs_rp_pi_mocks",
   "Corrfunc._countpairs_mocks.countpairs_s_mu_mocks",
   "Corrfunc._countpairs_mocks.countpairs_theta_mocks",
   "Corrfunc._countpairs_mocks.countspheres_vpf_mocks",
   "Corrfunc.io.read_catalog",
   "numpy.max",
   "numpy.min",
   "numpy.ones",
   "os.path.abspath",
   "os.path.dirname",
   "os.path.join",
   "time.time"
  ],
  "type": "function"
 },
 "Corrfunc.io": {
  "lineno": null,
  "symbols_in_volume": [
   "doctest.testmod",
   "pandas"
  ],
  "type": "module"
 },
 "Corrfunc.io.read_ascii_catalog": {
  "lineno": 163,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.float",
   "numpy.genfromtxt",
   "os.path.exists",
   "pandas",
   "pandas.read_csv"
  ],
  "type": "function"
 },
 "Corrfunc.io.read_catalog": {
  "lineno": 244,
  "symbols_in_volume": [
   "numpy.float",
   "os.path.abspath",
   "os.path.dirname",
   "os.path.exists",
   "os.path.join",
   "os.path.splitext"
  ],
  "type": "function"
 },
 "Corrfunc.io.read_fastfood_catalog": {
  "lineno": 22,
  "symbols_in_volume": [
   "future.utils.bytes_to_native_str",
   "numpy.array",
   "numpy.float",
   "numpy.float32",
   "numpy.fromfile",
   "os.path.exists",
   "struct.unpack"
  ],
  "type": "function"
 },
 "Corrfunc.mocks": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.version_info"
  ],
  "type": "module"
 },
 "Corrfunc.mocks.DDrppi_mocks": {
  "lineno": null,
  "symbols_in_volume": [
   "doctest.testmod"
  ],
  "type": "module"
 },
 "Corrfunc.mocks.DDrppi_mocks.DDrppi_mocks": {
  "lineno": 17,
  "symbols_in_volume": [
   "Corrfunc._countpairs_mocks.countpairs_rp_pi_mocks",
   "Corrfunc.utils.convert_to_native_endian",
   "Corrfunc.utils.fix_ra_dec",
   "Corrfunc.utils.process_weights",
   "Corrfunc.utils.return_file_with_rbins",
   "Corrfunc.utils.sys_pipes",
   "Corrfunc.utils.translate_isa_string_to_enum",
   "future.utils.bytes_to_native_str",
   "numpy.array",
   "numpy.dtype",
   "numpy.empty",
   "numpy.float",
   "numpy.uint64",
   "os.remove"
  ],
  "type": "function"
 },
 "Corrfunc.mocks.DDsmu_mocks": {
  "lineno": null,
  "symbols_in_volume": [
   "doctest.testmod"
  ],
  "type": "module"
 },
 "Corrfunc.mocks.DDsmu_mocks.DDsmu_mocks": {
  "lineno": 16,
  "symbols_in_volume": [
   "Corrfunc._countpairs_mocks.countpairs_s_mu_mocks",
   "Corrfunc.utils.convert_to_native_endian",
   "Corrfunc.utils.fix_ra_dec",
   "Corrfunc.utils.process_weights",
   "Corrfunc.utils.return_file_with_rbins",
   "Corrfunc.utils.sys_pipes",
   "Corrfunc.utils.translate_isa_string_to_enum",
   "future.utils.bytes_to_native_str",
   "numpy.dtype",
   "numpy.empty",
   "numpy.float",
   "numpy.isscalar",
   "numpy.size",
   "numpy.uint64",
   "numpy.zeros",
   "os.remove"
  ],
  "type": "function"
 },
 "Corrfunc.mocks.DDtheta_mocks": {
  "lineno": null,
  "symbols_in_volume": [
   "doctest.testmod"
  ],
  "type": "module"
 },
 "Corrfunc.mocks.DDtheta_mocks.DDtheta_mocks": {
  "lineno": 18,
  "symbols_in_volume": [
   "Corrfunc._countpairs_mocks.countpairs_theta_mocks",
   "Corrfunc.utils.convert_to_native_endian",
   "Corrfunc.utils.fix_ra_dec",
   "Corrfunc.utils.process_weights",
   "Corrfunc.utils.return_file_with_rbins",
   "Corrfunc.utils.sys_pipes",
   "Corrfunc.utils.translate_isa_string_to_enum",
   "future.utils.bytes_to_native_str",
   "numpy.array",
   "numpy.dtype",
   "numpy.empty",
   "numpy.float",
   "numpy.uint64",
   "os.remove"
  ],
  "type": "function"
 },
 "Corrfunc.mocks.vpf_mocks": {
  "lineno": null,
  "symbols_in_volume": [
   "doctest.testmod"
  ],
  "type": "module"
 },
 "Corrfunc.mocks.vpf_mocks.vpf_mocks": {
  "lineno": 17,
  "symbols_in_volume": [
   "Corrfunc._countpairs_mocks.countspheres_vpf_mocks",
   "Corrfunc.utils.convert_to_native_endian",
   "Corrfunc.utils.sys_pipes",
   "Corrfunc.utils.translate_isa_string_to_enum",
   "future.utils.bytes_to_native_str",
   "numpy.dtype",
   "numpy.float",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "Corrfunc.read_text_file": {
  "lineno": 29,
  "symbols_in_volume": [],
  "type": "function"
 },
 "Corrfunc.tests": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.version_info"
  ],
  "type": "module"
 },
 "Corrfunc.tests.tests": {
  "lineno": 13,
  "symbols_in_volume": [
   "Corrfunc.call_correlation_functions.main",
   "Corrfunc.call_correlation_functions_mocks.main"
  ],
  "type": "function"
 },
 "Corrfunc.theory": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.version_info"
  ],
  "type": "module"
 },
 "Corrfunc.theory.DD": {
  "lineno": null,
  "symbols_in_volume": [
   "doctest.testmod"
  ],
  "type": "module"
 },
 "Corrfunc.theory.DD.DD": {
  "lineno": 16,
  "symbols_in_volume": [
   "Corrfunc._countpairs.countpairs",
   "Corrfunc.utils.convert_to_native_endian",
   "Corrfunc.utils.process_weights",
   "Corrfunc.utils.return_file_with_rbins",
   "Corrfunc.utils.sys_pipes",
   "Corrfunc.utils.translate_isa_string_to_enum",
   "future.utils.bytes_to_native_str",
   "numpy.array",
   "numpy.dtype",
   "numpy.float",
   "numpy.uint64",
   "os.remove"
  ],
  "type": "function"
 },
 "Corrfunc.theory.DDrppi": {
  "lineno": null,
  "symbols_in_volume": [
   "doctest.testmod"
  ],
  "type": "module"
 },
 "Corrfunc.theory.DDrppi.DDrppi": {
  "lineno": 16,
  "symbols_in_volume": [
   "Corrfunc._countpairs.countpairs_rp_pi",
   "Corrfunc.utils.convert_to_native_endian",
   "Corrfunc.utils.process_weights",
   "Corrfunc.utils.return_file_with_rbins",
   "Corrfunc.utils.sys_pipes",
   "Corrfunc.utils.translate_isa_string_to_enum",
   "future.utils.bytes_to_native_str",
   "numpy.array",
   "numpy.dtype",
   "numpy.empty",
   "numpy.float",
   "numpy.uint64",
   "os.remove"
  ],
  "type": "function"
 },
 "Corrfunc.theory.DDsmu": {
  "lineno": null,
  "symbols_in_volume": [
   "doctest.testmod"
  ],
  "type": "module"
 },
 "Corrfunc.theory.DDsmu.DDsmu": {
  "lineno": 16,
  "symbols_in_volume": [
   "Corrfunc._countpairs.countpairs_s_mu",
   "Corrfunc.utils.convert_to_native_endian",
   "Corrfunc.utils.process_weights",
   "Corrfunc.utils.return_file_with_rbins",
   "Corrfunc.utils.sys_pipes",
   "Corrfunc.utils.translate_isa_string_to_enum",
   "future.utils.bytes_to_native_str",
   "numpy.array",
   "numpy.dtype",
   "numpy.float",
   "numpy.isscalar",
   "numpy.size",
   "numpy.uint64",
   "os.remove"
  ],
  "type": "function"
 },
 "Corrfunc.theory.vpf": {
  "lineno": null,
  "symbols_in_volume": [
   "doctest.testmod"
  ],
  "type": "module"
 },
 "Corrfunc.theory.vpf.vpf": {
  "lineno": 17,
  "symbols_in_volume": [
   "Corrfunc._countpairs.countspheres_vpf",
   "Corrfunc.utils.convert_to_native_endian",
   "Corrfunc.utils.sys_pipes",
   "Corrfunc.utils.translate_isa_string_to_enum",
   "future.utils.bytes_to_native_str",
   "math.pi",
   "numpy.dtype",
   "numpy.float",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "Corrfunc.theory.wp": {
  "lineno": null,
  "symbols_in_volume": [
   "doctest.testmod"
  ],
  "type": "module"
 },
 "Corrfunc.theory.wp._convert_cell_timer": {
  "lineno": 244,
  "symbols_in_volume": [
   "future.utils.bytes_to_native_str",
   "numpy.array",
   "numpy.dtype",
   "numpy.int32",
   "numpy.int64"
  ],
  "type": "function"
 },
 "Corrfunc.theory.wp.find_fastest_wp_bin_refs": {
  "lineno": 17,
  "symbols_in_volume": [
   "Corrfunc._countpairs.countpairs_wp",
   "Corrfunc.utils.return_file_with_rbins",
   "Corrfunc.utils.translate_isa_string_to_enum",
   "future.utils.bytes_to_native_str",
   "itertools.product",
   "numpy.arange",
   "numpy.dtype",
   "numpy.float",
   "numpy.inf",
   "numpy.int",
   "numpy.sqrt",
   "numpy.zeros",
   "os.remove",
   "time.time"
  ],
  "type": "function"
 },
 "Corrfunc.theory.wp.wp": {
  "lineno": 283,
  "symbols_in_volume": [
   "Corrfunc._countpairs.countpairs_wp",
   "Corrfunc.utils.convert_to_native_endian",
   "Corrfunc.utils.process_weights",
   "Corrfunc.utils.return_file_with_rbins",
   "Corrfunc.utils.sys_pipes",
   "Corrfunc.utils.translate_isa_string_to_enum",
   "future.utils.bytes_to_native_str",
   "numpy.array",
   "numpy.dtype",
   "numpy.float",
   "numpy.uint64",
   "os.remove"
  ],
  "type": "function"
 },
 "Corrfunc.theory.xi": {
  "lineno": null,
  "symbols_in_volume": [
   "doctest.testmod"
  ],
  "type": "module"
 },
 "Corrfunc.theory.xi.xi": {
  "lineno": 18,
  "symbols_in_volume": [
   "Corrfunc._countpairs.countpairs_xi",
   "Corrfunc.utils.convert_to_native_endian",
   "Corrfunc.utils.process_weights",
   "Corrfunc.utils.return_file_with_rbins",
   "Corrfunc.utils.sys_pipes",
   "Corrfunc.utils.translate_isa_string_to_enum",
   "future.utils.bytes_to_native_str",
   "numpy.array",
   "numpy.dtype",
   "numpy.float",
   "numpy.uint64",
   "os.remove"
  ],
  "type": "function"
 },
 "Corrfunc.utils": {
  "lineno": null,
  "symbols_in_volume": [
   "doctest.testmod",
   "sys.version_info"
  ],
  "type": "module"
 },
 "Corrfunc.utils.compute_nbins": {
  "lineno": 517,
  "symbols_in_volume": [],
  "type": "function"
 },
 "Corrfunc.utils.convert_3d_counts_to_cf": {
  "lineno": 24,
  "symbols_in_volume": [
   "numpy.float",
   "numpy.nan",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "Corrfunc.utils.convert_rp_pi_counts_to_wp": {
  "lineno": 163,
  "symbols_in_volume": [
   "numpy.empty",
   "numpy.sum"
  ],
  "type": "function"
 },
 "Corrfunc.utils.convert_to_native_endian": {
  "lineno": 862,
  "symbols_in_volume": [
   "numpy.asanyarray",
   "sys.byteorder",
   "warnings.warn"
  ],
  "type": "function"
 },
 "Corrfunc.utils.fix_cz": {
  "lineno": 380,
  "symbols_in_volume": [],
  "type": "function"
 },
 "Corrfunc.utils.fix_ra_dec": {
  "lineno": 417,
  "symbols_in_volume": [],
  "type": "function"
 },
 "Corrfunc.utils.gridlink_sphere": {
  "lineno": 595,
  "symbols_in_volume": [
   "math.pi",
   "math.radians",
   "numpy.arcsin",
   "numpy.cos",
   "numpy.dtype",
   "numpy.float",
   "numpy.int64",
   "numpy.s_",
   "numpy.sin",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "Corrfunc.utils.is_native_endian": {
  "lineno": 920,
  "symbols_in_volume": [
   "numpy.asanyarray",
   "sys.byteorder"
  ],
  "type": "function"
 },
 "Corrfunc.utils.process_weights": {
  "lineno": 963,
  "symbols_in_volume": [
   "numpy.ones"
  ],
  "type": "function"
 },
 "Corrfunc.utils.process_weights.prep": {
  "lineno": 984,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.atleast_1d",
   "numpy.atleast_2d",
   "numpy.tile"
  ],
  "type": "function"
 },
 "Corrfunc.utils.return_file_with_rbins": {
  "lineno": 320,
  "symbols_in_volume": [
   "os.path.exists",
   "tempfile.NamedTemporaryFile"
  ],
  "type": "function"
 },
 "Corrfunc.utils.sys_pipes": {
  "lineno": 1025,
  "symbols_in_volume": [
   "contextlib.contextmanager",
   "sys.stderr",
   "sys.stderr.isatty",
   "sys.stdout",
   "sys.stdout.isatty",
   "wurlitzer.pipes"
  ],
  "type": "function"
 },
 "Corrfunc.utils.translate_isa_string_to_enum": {
  "lineno": 460,
  "symbols_in_volume": [],
  "type": "function"
 },
 "Corrfunc.which": {
  "lineno": 61,
  "symbols_in_volume": [
   "os.F_OK",
   "os.X_OK",
   "os.defpath",
   "os.environ.get",
   "os.path.join",
   "os.path.split",
   "os.pathsep",
   "shutil.which"
  ],
  "type": "function"
 },
 "Corrfunc.which.is_exe": {
  "lineno": 86,
  "symbols_in_volume": [
   "os.X_OK",
   "os.access",
   "os.path.isfile"
  ],
  "type": "function"
 },
 "Corrfunc.write_text_file": {
  "lineno": 45,
  "symbols_in_volume": [],
  "type": "function"
 }
}