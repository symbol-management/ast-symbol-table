{
 "Corrfunc": {
  "data": {
   "symbols_in_volume": [
    "Corrfunc.__CORRFUNC_SETUP__",
    "NameError"
   ]
  },
  "type": "module"
 },
 "Corrfunc.__CORRFUNC_SETUP__": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "Corrfunc.__author__": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "Corrfunc.__version__": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "Corrfunc.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "Corrfunc.call_correlation_functions": {
  "data": {
   "symbols_in_volume": [
    "Corrfunc.call_correlation_functions.main",
    "__name__"
   ]
  },
  "type": "module"
 },
 "Corrfunc.call_correlation_functions.Corrfunc": {
  "data": {
   "shadows": "Corrfunc"
  },
  "type": "import"
 },
 "Corrfunc.call_correlation_functions.DD_extn": {
  "data": {
   "shadows": "Corrfunc._countpairs.countpairs"
  },
  "type": "import"
 },
 "Corrfunc.call_correlation_functions.DDrppi_extn": {
  "data": {
   "shadows": "Corrfunc._countpairs.countpairs_rp_pi"
  },
  "type": "import"
 },
 "Corrfunc.call_correlation_functions.DDsmu_extn": {
  "data": {
   "shadows": "Corrfunc._countpairs.countpairs_s_mu"
  },
  "type": "import"
 },
 "Corrfunc.call_correlation_functions.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "Corrfunc.call_correlation_functions.abspath": {
  "data": {
   "shadows": "os.path.abspath"
  },
  "type": "import"
 },
 "Corrfunc.call_correlation_functions.dirname": {
  "data": {
   "shadows": "os.path.dirname"
  },
  "type": "import"
 },
 "Corrfunc.call_correlation_functions.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "Corrfunc.call_correlation_functions.main": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "Corrfunc._countpairs.countpairs",
    "Corrfunc._countpairs.countpairs_rp_pi",
    "Corrfunc._countpairs.countpairs_s_mu",
    "Corrfunc._countpairs.countpairs_wp",
    "Corrfunc._countpairs.countpairs_xi",
    "Corrfunc._countpairs.countspheres_vpf",
    "Corrfunc.call_correlation_functions.Corrfunc",
    "Corrfunc.call_correlation_functions.time",
    "Corrfunc.io.read_catalog",
    "len",
    "numpy.ones",
    "os.path.abspath",
    "os.path.dirname",
    "os.path.join",
    "print",
    "range"
   ]
  },
  "type": "function"
 },
 "Corrfunc.call_correlation_functions.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "Corrfunc.call_correlation_functions.pjoin": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "Corrfunc.call_correlation_functions.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "Corrfunc.call_correlation_functions.read_catalog": {
  "data": {
   "shadows": "Corrfunc.io.read_catalog"
  },
  "type": "import"
 },
 "Corrfunc.call_correlation_functions.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "Corrfunc.call_correlation_functions.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "Corrfunc.call_correlation_functions.vpf_extn": {
  "data": {
   "shadows": "Corrfunc._countpairs.countspheres_vpf"
  },
  "type": "import"
 },
 "Corrfunc.call_correlation_functions.wp_extn": {
  "data": {
   "shadows": "Corrfunc._countpairs.countpairs_wp"
  },
  "type": "import"
 },
 "Corrfunc.call_correlation_functions.xi_extn": {
  "data": {
   "shadows": "Corrfunc._countpairs.countpairs_xi"
  },
  "type": "import"
 },
 "Corrfunc.call_correlation_functions_mocks": {
  "data": {
   "symbols_in_volume": [
    "Corrfunc.call_correlation_functions_mocks.main",
    "__name__"
   ]
  },
  "type": "module"
 },
 "Corrfunc.call_correlation_functions_mocks.Corrfunc": {
  "data": {
   "shadows": "Corrfunc"
  },
  "type": "import"
 },
 "Corrfunc.call_correlation_functions_mocks.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "Corrfunc.call_correlation_functions_mocks.abspath": {
  "data": {
   "shadows": "os.path.abspath"
  },
  "type": "import"
 },
 "Corrfunc.call_correlation_functions_mocks.dirname": {
  "data": {
   "shadows": "os.path.dirname"
  },
  "type": "import"
 },
 "Corrfunc.call_correlation_functions_mocks.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "Corrfunc.call_correlation_functions_mocks.main": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "Corrfunc._countpairs_mocks.countpairs_rp_pi_mocks",
    "Corrfunc._countpairs_mocks.countpairs_s_mu_mocks",
    "Corrfunc._countpairs_mocks.countpairs_theta_mocks",
    "Corrfunc._countpairs_mocks.countspheres_vpf_mocks",
    "Corrfunc.call_correlation_functions_mocks.Corrfunc",
    "Corrfunc.call_correlation_functions_mocks.time",
    "Corrfunc.io.read_catalog",
    "len",
    "numpy.max",
    "numpy.min",
    "numpy.ones",
    "os.path.abspath",
    "os.path.dirname",
    "os.path.join",
    "print",
    "range"
   ]
  },
  "type": "function"
 },
 "Corrfunc.call_correlation_functions_mocks.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "Corrfunc.call_correlation_functions_mocks.pjoin": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "Corrfunc.call_correlation_functions_mocks.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "Corrfunc.call_correlation_functions_mocks.read_catalog": {
  "data": {
   "shadows": "Corrfunc.io.read_catalog"
  },
  "type": "import"
 },
 "Corrfunc.call_correlation_functions_mocks.rp_pi_mocks_extn": {
  "data": {
   "shadows": "Corrfunc._countpairs_mocks.countpairs_rp_pi_mocks"
  },
  "type": "import"
 },
 "Corrfunc.call_correlation_functions_mocks.s_mu_mocks_extn": {
  "data": {
   "shadows": "Corrfunc._countpairs_mocks.countpairs_s_mu_mocks"
  },
  "type": "import"
 },
 "Corrfunc.call_correlation_functions_mocks.theta_mocks_extn": {
  "data": {
   "shadows": "Corrfunc._countpairs_mocks.countpairs_theta_mocks"
  },
  "type": "import"
 },
 "Corrfunc.call_correlation_functions_mocks.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "Corrfunc.call_correlation_functions_mocks.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "Corrfunc.call_correlation_functions_mocks.vpf_mocks_extn": {
  "data": {
   "shadows": "Corrfunc._countpairs_mocks.countspheres_vpf_mocks"
  },
  "type": "import"
 },
 "Corrfunc.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "Corrfunc.io": {
  "data": {
   "symbols_in_volume": [
    "Corrfunc.io.doctest",
    "ImportError",
    "__name__",
    "pandas"
   ]
  },
  "type": "module"
 },
 "Corrfunc.io.__all__": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "Corrfunc.io.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "Corrfunc.io.abspath": {
  "data": {
   "shadows": "os.path.abspath"
  },
  "type": "import"
 },
 "Corrfunc.io.bytes_to_native_str": {
  "data": {
   "shadows": "future.utils.bytes_to_native_str"
  },
  "type": "import"
 },
 "Corrfunc.io.dirname": {
  "data": {
   "shadows": "os.path.dirname"
  },
  "type": "import"
 },
 "Corrfunc.io.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "Corrfunc.io.doctest": {
  "data": {
   "shadows": "doctest"
  },
  "type": "import"
 },
 "Corrfunc.io.file_exists": {
  "data": {
   "shadows": "os.path.exists"
  },
  "type": "import"
 },
 "Corrfunc.io.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "Corrfunc.io.pd": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "Corrfunc.io.pjoin": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "Corrfunc.io.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "Corrfunc.io.read_ascii_catalog": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "IOError",
    "numpy.asarray",
    "numpy.float",
    "numpy.genfromtxt",
    "os.path.exists",
    "pandas",
    "pandas.read_csv",
    "return_dtype"
   ]
  },
  "type": "function"
 },
 "Corrfunc.io.read_catalog": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "Corrfunc.io.read_ascii_catalog",
    "Corrfunc.io.read_fastfood_catalog",
    "IOError",
    "f",
    "numpy.float",
    "os.path.abspath",
    "os.path.dirname",
    "os.path.exists",
    "os.path.join",
    "os.path.splitext",
    "return_dtype"
   ]
  },
  "type": "function"
 },
 "Corrfunc.io.read_fastfood_catalog": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "Corrfunc.io.struct",
    "IOError",
    "ImportError",
    "ValueError",
    "future.utils.bytes_to_native_str",
    "numpy.array",
    "numpy.float",
    "numpy.float32",
    "numpy.fromfile",
    "open",
    "os.path.exists",
    "print",
    "return_dtype"
   ]
  },
  "type": "function"
 },
 "Corrfunc.io.splitext": {
  "data": {
   "shadows": "os.path.splitext"
  },
  "type": "import"
 },
 "Corrfunc.io.struct": {
  "data": {
   "shadows": "struct"
  },
  "type": "import"
 },
 "Corrfunc.io.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "Corrfunc.mocks": {
  "data": {
   "symbols_in_volume": [
    "Corrfunc.mocks.sys"
   ]
  },
  "type": "module"
 },
 "Corrfunc.mocks.DDrppi_mocks": {
  "data": {
   "symbols_in_volume": [
    "Corrfunc.mocks.DDrppi_mocks.doctest",
    "__name__"
   ]
  },
  "type": "module"
 },
 "Corrfunc.mocks.DDrppi_mocks.DDrppi_extn": {
  "data": {
   "shadows": "Corrfunc._countpairs_mocks.countpairs_rp_pi_mocks"
  },
  "type": "import"
 },
 "Corrfunc.mocks.DDrppi_mocks.DDrppi_mocks": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "Corrfunc._countpairs_mocks.countpairs_rp_pi_mocks",
    "Corrfunc.mocks.DDrppi_mocks.os",
    "Corrfunc.utils.convert_to_native_endian",
    "Corrfunc.utils.fix_ra_dec",
    "Corrfunc.utils.process_weights",
    "Corrfunc.utils.return_file_with_rbins",
    "Corrfunc.utils.sys_pipes",
    "Corrfunc.utils.translate_isa_string_to_enum",
    "ImportError",
    "RuntimeError",
    "ValueError",
    "future.utils.bytes_to_native_str",
    "locals",
    "numpy.array",
    "numpy.dtype",
    "numpy.empty",
    "numpy.float",
    "numpy.uint64"
   ]
  },
  "type": "function"
 },
 "Corrfunc.mocks.DDrppi_mocks.__all__": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "Corrfunc.mocks.DDrppi_mocks.__author__": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "Corrfunc.mocks.DDrppi_mocks.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "Corrfunc.mocks.DDrppi_mocks.bytes_to_native_str": {
  "data": {
   "shadows": "future.utils.bytes_to_native_str"
  },
  "type": "import"
 },
 "Corrfunc.mocks.DDrppi_mocks.convert_to_native_endian": {
  "data": {
   "shadows": "Corrfunc.utils.convert_to_native_endian"
  },
  "type": "import"
 },
 "Corrfunc.mocks.DDrppi_mocks.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "Corrfunc.mocks.DDrppi_mocks.doctest": {
  "data": {
   "shadows": "doctest"
  },
  "type": "import"
 },
 "Corrfunc.mocks.DDrppi_mocks.fix_ra_dec": {
  "data": {
   "shadows": "Corrfunc.utils.fix_ra_dec"
  },
  "type": "import"
 },
 "Corrfunc.mocks.DDrppi_mocks.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "Corrfunc.mocks.DDrppi_mocks.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "Corrfunc.mocks.DDrppi_mocks.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "Corrfunc.mocks.DDrppi_mocks.process_weights": {
  "data": {
   "shadows": "Corrfunc.utils.process_weights"
  },
  "type": "import"
 },
 "Corrfunc.mocks.DDrppi_mocks.return_file_with_rbins": {
  "data": {
   "shadows": "Corrfunc.utils.return_file_with_rbins"
  },
  "type": "import"
 },
 "Corrfunc.mocks.DDrppi_mocks.sys_pipes": {
  "data": {
   "shadows": "Corrfunc.utils.sys_pipes"
  },
  "type": "import"
 },
 "Corrfunc.mocks.DDrppi_mocks.translate_isa_string_to_enum": {
  "data": {
   "shadows": "Corrfunc.utils.translate_isa_string_to_enum"
  },
  "type": "import"
 },
 "Corrfunc.mocks.DDrppi_mocks.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "Corrfunc.mocks.DDsmu_mocks": {
  "data": {
   "symbols_in_volume": [
    "Corrfunc.mocks.DDsmu_mocks.doctest",
    "__name__"
   ]
  },
  "type": "module"
 },
 "Corrfunc.mocks.DDsmu_mocks.DDsmu_extn": {
  "data": {
   "shadows": "Corrfunc._countpairs_mocks.countpairs_s_mu_mocks"
  },
  "type": "import"
 },
 "Corrfunc.mocks.DDsmu_mocks.DDsmu_mocks": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "Corrfunc._countpairs_mocks.countpairs_s_mu_mocks",
    "Corrfunc.mocks.DDsmu_mocks.os",
    "Corrfunc.utils.convert_to_native_endian",
    "Corrfunc.utils.fix_ra_dec",
    "Corrfunc.utils.process_weights",
    "Corrfunc.utils.return_file_with_rbins",
    "Corrfunc.utils.sys_pipes",
    "Corrfunc.utils.translate_isa_string_to_enum",
    "ImportError",
    "RuntimeError",
    "TypeError",
    "ValueError",
    "enumerate",
    "future.utils.bytes_to_native_str",
    "len",
    "locals",
    "numpy.dtype",
    "numpy.empty",
    "numpy.float",
    "numpy.isscalar",
    "numpy.size",
    "numpy.uint64",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "Corrfunc.mocks.DDsmu_mocks.__all__": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "Corrfunc.mocks.DDsmu_mocks.__author__": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "Corrfunc.mocks.DDsmu_mocks.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "Corrfunc.mocks.DDsmu_mocks.bytes_to_native_str": {
  "data": {
   "shadows": "future.utils.bytes_to_native_str"
  },
  "type": "import"
 },
 "Corrfunc.mocks.DDsmu_mocks.convert_to_native_endian": {
  "data": {
   "shadows": "Corrfunc.utils.convert_to_native_endian"
  },
  "type": "import"
 },
 "Corrfunc.mocks.DDsmu_mocks.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "Corrfunc.mocks.DDsmu_mocks.doctest": {
  "data": {
   "shadows": "doctest"
  },
  "type": "import"
 },
 "Corrfunc.mocks.DDsmu_mocks.fix_ra_dec": {
  "data": {
   "shadows": "Corrfunc.utils.fix_ra_dec"
  },
  "type": "import"
 },
 "Corrfunc.mocks.DDsmu_mocks.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "Corrfunc.mocks.DDsmu_mocks.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "Corrfunc.mocks.DDsmu_mocks.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "Corrfunc.mocks.DDsmu_mocks.process_weights": {
  "data": {
   "shadows": "Corrfunc.utils.process_weights"
  },
  "type": "import"
 },
 "Corrfunc.mocks.DDsmu_mocks.return_file_with_rbins": {
  "data": {
   "shadows": "Corrfunc.utils.return_file_with_rbins"
  },
  "type": "import"
 },
 "Corrfunc.mocks.DDsmu_mocks.sys_pipes": {
  "data": {
   "shadows": "Corrfunc.utils.sys_pipes"
  },
  "type": "import"
 },
 "Corrfunc.mocks.DDsmu_mocks.translate_isa_string_to_enum": {
  "data": {
   "shadows": "Corrfunc.utils.translate_isa_string_to_enum"
  },
  "type": "import"
 },
 "Corrfunc.mocks.DDsmu_mocks.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "Corrfunc.mocks.DDtheta_mocks": {
  "data": {
   "symbols_in_volume": [
    "Corrfunc.mocks.DDtheta_mocks.doctest",
    "__name__"
   ]
  },
  "type": "module"
 },
 "Corrfunc.mocks.DDtheta_mocks.DDtheta_mocks": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "Corrfunc._countpairs_mocks.countpairs_theta_mocks",
    "Corrfunc.mocks.DDtheta_mocks.os",
    "Corrfunc.utils.convert_to_native_endian",
    "Corrfunc.utils.fix_ra_dec",
    "Corrfunc.utils.process_weights",
    "Corrfunc.utils.return_file_with_rbins",
    "Corrfunc.utils.sys_pipes",
    "Corrfunc.utils.translate_isa_string_to_enum",
    "ImportError",
    "RuntimeError",
    "ValueError",
    "future.utils.bytes_to_native_str",
    "locals",
    "numpy.array",
    "numpy.dtype",
    "numpy.empty",
    "numpy.float",
    "numpy.uint64"
   ]
  },
  "type": "function"
 },
 "Corrfunc.mocks.DDtheta_mocks.DDtheta_mocks_extn": {
  "data": {
   "shadows": "Corrfunc._countpairs_mocks.countpairs_theta_mocks"
  },
  "type": "import"
 },
 "Corrfunc.mocks.DDtheta_mocks.__all__": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "Corrfunc.mocks.DDtheta_mocks.__author__": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "Corrfunc.mocks.DDtheta_mocks.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "Corrfunc.mocks.DDtheta_mocks.bytes_to_native_str": {
  "data": {
   "shadows": "future.utils.bytes_to_native_str"
  },
  "type": "import"
 },
 "Corrfunc.mocks.DDtheta_mocks.convert_to_native_endian": {
  "data": {
   "shadows": "Corrfunc.utils.convert_to_native_endian"
  },
  "type": "import"
 },
 "Corrfunc.mocks.DDtheta_mocks.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "Corrfunc.mocks.DDtheta_mocks.doctest": {
  "data": {
   "shadows": "doctest"
  },
  "type": "import"
 },
 "Corrfunc.mocks.DDtheta_mocks.fix_ra_dec": {
  "data": {
   "shadows": "Corrfunc.utils.fix_ra_dec"
  },
  "type": "import"
 },
 "Corrfunc.mocks.DDtheta_mocks.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "Corrfunc.mocks.DDtheta_mocks.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "Corrfunc.mocks.DDtheta_mocks.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "Corrfunc.mocks.DDtheta_mocks.process_weights": {
  "data": {
   "shadows": "Corrfunc.utils.process_weights"
  },
  "type": "import"
 },
 "Corrfunc.mocks.DDtheta_mocks.return_file_with_rbins": {
  "data": {
   "shadows": "Corrfunc.utils.return_file_with_rbins"
  },
  "type": "import"
 },
 "Corrfunc.mocks.DDtheta_mocks.sys_pipes": {
  "data": {
   "shadows": "Corrfunc.utils.sys_pipes"
  },
  "type": "import"
 },
 "Corrfunc.mocks.DDtheta_mocks.translate_isa_string_to_enum": {
  "data": {
   "shadows": "Corrfunc.utils.translate_isa_string_to_enum"
  },
  "type": "import"
 },
 "Corrfunc.mocks.DDtheta_mocks.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "Corrfunc.mocks.__all__": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "Corrfunc.mocks.__author__": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "Corrfunc.mocks.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "Corrfunc.mocks.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "Corrfunc.mocks.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "Corrfunc.mocks.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "Corrfunc.mocks.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "Corrfunc.mocks.vpf_mocks": {
  "data": {
   "symbols_in_volume": [
    "Corrfunc.mocks.vpf_mocks.doctest",
    "__name__"
   ]
  },
  "type": "module"
 },
 "Corrfunc.mocks.vpf_mocks.__all__": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "Corrfunc.mocks.vpf_mocks.__author__": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "Corrfunc.mocks.vpf_mocks.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "Corrfunc.mocks.vpf_mocks.bytes_to_native_str": {
  "data": {
   "shadows": "future.utils.bytes_to_native_str"
  },
  "type": "import"
 },
 "Corrfunc.mocks.vpf_mocks.convert_to_native_endian": {
  "data": {
   "shadows": "Corrfunc.utils.convert_to_native_endian"
  },
  "type": "import"
 },
 "Corrfunc.mocks.vpf_mocks.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "Corrfunc.mocks.vpf_mocks.doctest": {
  "data": {
   "shadows": "doctest"
  },
  "type": "import"
 },
 "Corrfunc.mocks.vpf_mocks.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "Corrfunc.mocks.vpf_mocks.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "Corrfunc.mocks.vpf_mocks.sys_pipes": {
  "data": {
   "shadows": "Corrfunc.utils.sys_pipes"
  },
  "type": "import"
 },
 "Corrfunc.mocks.vpf_mocks.translate_isa_string_to_enum": {
  "data": {
   "shadows": "Corrfunc.utils.translate_isa_string_to_enum"
  },
  "type": "import"
 },
 "Corrfunc.mocks.vpf_mocks.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "Corrfunc.mocks.vpf_mocks.vpf_extn": {
  "data": {
   "shadows": "Corrfunc._countpairs_mocks.countspheres_vpf_mocks"
  },
  "type": "import"
 },
 "Corrfunc.mocks.vpf_mocks.vpf_mocks": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "Corrfunc._countpairs_mocks.countspheres_vpf_mocks",
    "Corrfunc.utils.convert_to_native_endian",
    "Corrfunc.utils.sys_pipes",
    "Corrfunc.utils.translate_isa_string_to_enum",
    "ImportError",
    "RuntimeError",
    "enumerate",
    "future.utils.bytes_to_native_str",
    "len",
    "numpy.dtype",
    "numpy.float",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "Corrfunc.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "Corrfunc.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "Corrfunc.read_text_file": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "TypeError",
    "open"
   ]
  },
  "type": "function"
 },
 "Corrfunc.shwhich": {
  "data": {
   "shadows": "shutil.which"
  },
  "type": "import"
 },
 "Corrfunc.tests": {
  "data": {
   "symbols_in_volume": [
    "Corrfunc.tests.sys",
    "Corrfunc.tests.tests",
    "__name__"
   ]
  },
  "type": "module"
 },
 "Corrfunc.tests.__all__": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "Corrfunc.tests.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "Corrfunc.tests.cm": {
  "data": {
   "shadows": "Corrfunc.call_correlation_functions_mocks"
  },
  "type": "import"
 },
 "Corrfunc.tests.ct": {
  "data": {
   "shadows": "Corrfunc.call_correlation_functions"
  },
  "type": "import"
 },
 "Corrfunc.tests.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "Corrfunc.tests.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "Corrfunc.tests.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "Corrfunc.tests.tests": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "Corrfunc.call_correlation_functions.main",
    "Corrfunc.call_correlation_functions_mocks.main"
   ]
  },
  "type": "function"
 },
 "Corrfunc.tests.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "Corrfunc.theory": {
  "data": {
   "symbols_in_volume": [
    "Corrfunc.theory.sys"
   ]
  },
  "type": "module"
 },
 "Corrfunc.theory.DD": {
  "data": {
   "symbols_in_volume": [
    "Corrfunc.theory.DD.doctest",
    "__name__"
   ]
  },
  "type": "module"
 },
 "Corrfunc.theory.DD.DD": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "Corrfunc._countpairs.countpairs",
    "Corrfunc.theory.DD.os",
    "Corrfunc.utils.convert_to_native_endian",
    "Corrfunc.utils.process_weights",
    "Corrfunc.utils.return_file_with_rbins",
    "Corrfunc.utils.sys_pipes",
    "Corrfunc.utils.translate_isa_string_to_enum",
    "ImportError",
    "RuntimeError",
    "ValueError",
    "future.utils.bytes_to_native_str",
    "locals",
    "numpy.array",
    "numpy.dtype",
    "numpy.float",
    "numpy.uint64"
   ]
  },
  "type": "function"
 },
 "Corrfunc.theory.DD.DD_extn": {
  "data": {
   "shadows": "Corrfunc._countpairs.countpairs"
  },
  "type": "import"
 },
 "Corrfunc.theory.DD.__all__": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "Corrfunc.theory.DD.__author__": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "Corrfunc.theory.DD.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "Corrfunc.theory.DD.bytes_to_native_str": {
  "data": {
   "shadows": "future.utils.bytes_to_native_str"
  },
  "type": "import"
 },
 "Corrfunc.theory.DD.convert_to_native_endian": {
  "data": {
   "shadows": "Corrfunc.utils.convert_to_native_endian"
  },
  "type": "import"
 },
 "Corrfunc.theory.DD.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "Corrfunc.theory.DD.doctest": {
  "data": {
   "shadows": "doctest"
  },
  "type": "import"
 },
 "Corrfunc.theory.DD.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "Corrfunc.theory.DD.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "Corrfunc.theory.DD.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "Corrfunc.theory.DD.process_weights": {
  "data": {
   "shadows": "Corrfunc.utils.process_weights"
  },
  "type": "import"
 },
 "Corrfunc.theory.DD.return_file_with_rbins": {
  "data": {
   "shadows": "Corrfunc.utils.return_file_with_rbins"
  },
  "type": "import"
 },
 "Corrfunc.theory.DD.sys_pipes": {
  "data": {
   "shadows": "Corrfunc.utils.sys_pipes"
  },
  "type": "import"
 },
 "Corrfunc.theory.DD.translate_isa_string_to_enum": {
  "data": {
   "shadows": "Corrfunc.utils.translate_isa_string_to_enum"
  },
  "type": "import"
 },
 "Corrfunc.theory.DD.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "Corrfunc.theory.DDrppi": {
  "data": {
   "symbols_in_volume": [
    "Corrfunc.theory.DDrppi.doctest",
    "__name__"
   ]
  },
  "type": "module"
 },
 "Corrfunc.theory.DDrppi.DDrppi": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "Corrfunc._countpairs.countpairs_rp_pi",
    "Corrfunc.theory.DDrppi.os",
    "Corrfunc.utils.convert_to_native_endian",
    "Corrfunc.utils.process_weights",
    "Corrfunc.utils.return_file_with_rbins",
    "Corrfunc.utils.sys_pipes",
    "Corrfunc.utils.translate_isa_string_to_enum",
    "ImportError",
    "RuntimeError",
    "ValueError",
    "future.utils.bytes_to_native_str",
    "locals",
    "numpy.array",
    "numpy.dtype",
    "numpy.empty",
    "numpy.float",
    "numpy.uint64"
   ]
  },
  "type": "function"
 },
 "Corrfunc.theory.DDrppi.DDrppi_extn": {
  "data": {
   "shadows": "Corrfunc._countpairs.countpairs_rp_pi"
  },
  "type": "import"
 },
 "Corrfunc.theory.DDrppi.__all__": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "Corrfunc.theory.DDrppi.__author__": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "Corrfunc.theory.DDrppi.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "Corrfunc.theory.DDrppi.bytes_to_native_str": {
  "data": {
   "shadows": "future.utils.bytes_to_native_str"
  },
  "type": "import"
 },
 "Corrfunc.theory.DDrppi.convert_to_native_endian": {
  "data": {
   "shadows": "Corrfunc.utils.convert_to_native_endian"
  },
  "type": "import"
 },
 "Corrfunc.theory.DDrppi.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "Corrfunc.theory.DDrppi.doctest": {
  "data": {
   "shadows": "doctest"
  },
  "type": "import"
 },
 "Corrfunc.theory.DDrppi.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "Corrfunc.theory.DDrppi.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "Corrfunc.theory.DDrppi.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "Corrfunc.theory.DDrppi.process_weights": {
  "data": {
   "shadows": "Corrfunc.utils.process_weights"
  },
  "type": "import"
 },
 "Corrfunc.theory.DDrppi.return_file_with_rbins": {
  "data": {
   "shadows": "Corrfunc.utils.return_file_with_rbins"
  },
  "type": "import"
 },
 "Corrfunc.theory.DDrppi.sys_pipes": {
  "data": {
   "shadows": "Corrfunc.utils.sys_pipes"
  },
  "type": "import"
 },
 "Corrfunc.theory.DDrppi.translate_isa_string_to_enum": {
  "data": {
   "shadows": "Corrfunc.utils.translate_isa_string_to_enum"
  },
  "type": "import"
 },
 "Corrfunc.theory.DDrppi.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "Corrfunc.theory.DDsmu": {
  "data": {
   "symbols_in_volume": [
    "Corrfunc.theory.DDsmu.doctest",
    "__name__"
   ]
  },
  "type": "module"
 },
 "Corrfunc.theory.DDsmu.DDsmu": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "Corrfunc._countpairs.countpairs_s_mu",
    "Corrfunc.theory.DDsmu.os",
    "Corrfunc.utils.convert_to_native_endian",
    "Corrfunc.utils.process_weights",
    "Corrfunc.utils.return_file_with_rbins",
    "Corrfunc.utils.sys_pipes",
    "Corrfunc.utils.translate_isa_string_to_enum",
    "ImportError",
    "RuntimeError",
    "TypeError",
    "ValueError",
    "future.utils.bytes_to_native_str",
    "locals",
    "numpy.array",
    "numpy.dtype",
    "numpy.float",
    "numpy.isscalar",
    "numpy.size",
    "numpy.uint64"
   ]
  },
  "type": "function"
 },
 "Corrfunc.theory.DDsmu.DDsmu_extn": {
  "data": {
   "shadows": "Corrfunc._countpairs.countpairs_s_mu"
  },
  "type": "import"
 },
 "Corrfunc.theory.DDsmu.__all__": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "Corrfunc.theory.DDsmu.__author__": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "Corrfunc.theory.DDsmu.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "Corrfunc.theory.DDsmu.bytes_to_native_str": {
  "data": {
   "shadows": "future.utils.bytes_to_native_str"
  },
  "type": "import"
 },
 "Corrfunc.theory.DDsmu.convert_to_native_endian": {
  "data": {
   "shadows": "Corrfunc.utils.convert_to_native_endian"
  },
  "type": "import"
 },
 "Corrfunc.theory.DDsmu.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "Corrfunc.theory.DDsmu.doctest": {
  "data": {
   "shadows": "doctest"
  },
  "type": "import"
 },
 "Corrfunc.theory.DDsmu.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "Corrfunc.theory.DDsmu.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "Corrfunc.theory.DDsmu.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "Corrfunc.theory.DDsmu.process_weights": {
  "data": {
   "shadows": "Corrfunc.utils.process_weights"
  },
  "type": "import"
 },
 "Corrfunc.theory.DDsmu.return_file_with_rbins": {
  "data": {
   "shadows": "Corrfunc.utils.return_file_with_rbins"
  },
  "type": "import"
 },
 "Corrfunc.theory.DDsmu.sys_pipes": {
  "data": {
   "shadows": "Corrfunc.utils.sys_pipes"
  },
  "type": "import"
 },
 "Corrfunc.theory.DDsmu.translate_isa_string_to_enum": {
  "data": {
   "shadows": "Corrfunc.utils.translate_isa_string_to_enum"
  },
  "type": "import"
 },
 "Corrfunc.theory.DDsmu.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "Corrfunc.theory.__all__": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "Corrfunc.theory.__author__": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "Corrfunc.theory.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "Corrfunc.theory.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "Corrfunc.theory.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "Corrfunc.theory.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "Corrfunc.theory.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "Corrfunc.theory.vpf": {
  "data": {
   "symbols_in_volume": [
    "Corrfunc.theory.vpf.doctest",
    "__name__"
   ]
  },
  "type": "module"
 },
 "Corrfunc.theory.vpf.__all__": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "Corrfunc.theory.vpf.__author__": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "Corrfunc.theory.vpf.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "Corrfunc.theory.vpf.bytes_to_native_str": {
  "data": {
   "shadows": "future.utils.bytes_to_native_str"
  },
  "type": "import"
 },
 "Corrfunc.theory.vpf.convert_to_native_endian": {
  "data": {
   "shadows": "Corrfunc.utils.convert_to_native_endian"
  },
  "type": "import"
 },
 "Corrfunc.theory.vpf.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "Corrfunc.theory.vpf.doctest": {
  "data": {
   "shadows": "doctest"
  },
  "type": "import"
 },
 "Corrfunc.theory.vpf.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "Corrfunc.theory.vpf.pi": {
  "data": {
   "shadows": "math.pi"
  },
  "type": "import"
 },
 "Corrfunc.theory.vpf.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "Corrfunc.theory.vpf.sys_pipes": {
  "data": {
   "shadows": "Corrfunc.utils.sys_pipes"
  },
  "type": "import"
 },
 "Corrfunc.theory.vpf.translate_isa_string_to_enum": {
  "data": {
   "shadows": "Corrfunc.utils.translate_isa_string_to_enum"
  },
  "type": "import"
 },
 "Corrfunc.theory.vpf.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "Corrfunc.theory.vpf.vpf": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "Corrfunc._countpairs.countspheres_vpf",
    "Corrfunc.utils.convert_to_native_endian",
    "Corrfunc.utils.sys_pipes",
    "Corrfunc.utils.translate_isa_string_to_enum",
    "ImportError",
    "RuntimeError",
    "ValueError",
    "enumerate",
    "future.utils.bytes_to_native_str",
    "len",
    "math.pi",
    "max",
    "min",
    "numpy.dtype",
    "numpy.float",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "Corrfunc.theory.vpf.vpf_extn": {
  "data": {
   "shadows": "Corrfunc._countpairs.countspheres_vpf"
  },
  "type": "import"
 },
 "Corrfunc.theory.wp": {
  "data": {
   "symbols_in_volume": [
    "Corrfunc.theory.wp.doctest",
    "__name__"
   ]
  },
  "type": "module"
 },
 "Corrfunc.theory.wp.__all__": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "Corrfunc.theory.wp.__author__": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "Corrfunc.theory.wp._convert_cell_timer": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "future.utils.bytes_to_native_str",
    "numpy.array",
    "numpy.dtype",
    "numpy.int32",
    "numpy.int64"
   ]
  },
  "type": "function"
 },
 "Corrfunc.theory.wp.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "Corrfunc.theory.wp.bytes_to_native_str": {
  "data": {
   "shadows": "future.utils.bytes_to_native_str"
  },
  "type": "import"
 },
 "Corrfunc.theory.wp.convert_to_native_endian": {
  "data": {
   "shadows": "Corrfunc.utils.convert_to_native_endian"
  },
  "type": "import"
 },
 "Corrfunc.theory.wp.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "Corrfunc.theory.wp.doctest": {
  "data": {
   "shadows": "doctest"
  },
  "type": "import"
 },
 "Corrfunc.theory.wp.find_fastest_wp_bin_refs": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "Corrfunc._countpairs.countpairs_wp",
    "Corrfunc.theory.wp.itertools",
    "Corrfunc.theory.wp.os",
    "Corrfunc.theory.wp.time",
    "Corrfunc.utils.return_file_with_rbins",
    "Corrfunc.utils.translate_isa_string_to_enum",
    "ImportError",
    "enumerate",
    "future.utils.bytes_to_native_str",
    "numpy.arange",
    "numpy.dtype",
    "numpy.float",
    "numpy.inf",
    "numpy.int",
    "numpy.sqrt",
    "numpy.zeros",
    "print",
    "range"
   ]
  },
  "type": "function"
 },
 "Corrfunc.theory.wp.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "Corrfunc.theory.wp.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "Corrfunc.theory.wp.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "Corrfunc.theory.wp.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "Corrfunc.theory.wp.process_weights": {
  "data": {
   "shadows": "Corrfunc.utils.process_weights"
  },
  "type": "import"
 },
 "Corrfunc.theory.wp.return_file_with_rbins": {
  "data": {
   "shadows": "Corrfunc.utils.return_file_with_rbins"
  },
  "type": "import"
 },
 "Corrfunc.theory.wp.sys_pipes": {
  "data": {
   "shadows": "Corrfunc.utils.sys_pipes"
  },
  "type": "import"
 },
 "Corrfunc.theory.wp.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "Corrfunc.theory.wp.translate_isa_string_to_enum": {
  "data": {
   "shadows": "Corrfunc.utils.translate_isa_string_to_enum"
  },
  "type": "import"
 },
 "Corrfunc.theory.wp.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "Corrfunc.theory.wp.wp": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "Corrfunc._countpairs.countpairs_wp",
    "Corrfunc.theory.wp._convert_cell_timer",
    "Corrfunc.theory.wp.os",
    "Corrfunc.utils.convert_to_native_endian",
    "Corrfunc.utils.process_weights",
    "Corrfunc.utils.return_file_with_rbins",
    "Corrfunc.utils.sys_pipes",
    "Corrfunc.utils.translate_isa_string_to_enum",
    "ImportError",
    "RuntimeError",
    "future.utils.bytes_to_native_str",
    "locals",
    "numpy.array",
    "numpy.dtype",
    "numpy.float",
    "numpy.uint64"
   ]
  },
  "type": "function"
 },
 "Corrfunc.theory.wp.wp_extn": {
  "data": {
   "shadows": "Corrfunc._countpairs.countpairs_wp"
  },
  "type": "import"
 },
 "Corrfunc.theory.xi": {
  "data": {
   "symbols_in_volume": [
    "Corrfunc.theory.xi.doctest",
    "__name__"
   ]
  },
  "type": "module"
 },
 "Corrfunc.theory.xi.__all__": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "Corrfunc.theory.xi.__author__": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "Corrfunc.theory.xi.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "Corrfunc.theory.xi.bytes_to_native_str": {
  "data": {
   "shadows": "future.utils.bytes_to_native_str"
  },
  "type": "import"
 },
 "Corrfunc.theory.xi.convert_to_native_endian": {
  "data": {
   "shadows": "Corrfunc.utils.convert_to_native_endian"
  },
  "type": "import"
 },
 "Corrfunc.theory.xi.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "Corrfunc.theory.xi.doctest": {
  "data": {
   "shadows": "doctest"
  },
  "type": "import"
 },
 "Corrfunc.theory.xi.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "Corrfunc.theory.xi.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "Corrfunc.theory.xi.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "Corrfunc.theory.xi.process_weights": {
  "data": {
   "shadows": "Corrfunc.utils.process_weights"
  },
  "type": "import"
 },
 "Corrfunc.theory.xi.return_file_with_rbins": {
  "data": {
   "shadows": "Corrfunc.utils.return_file_with_rbins"
  },
  "type": "import"
 },
 "Corrfunc.theory.xi.sys_pipes": {
  "data": {
   "shadows": "Corrfunc.utils.sys_pipes"
  },
  "type": "import"
 },
 "Corrfunc.theory.xi.translate_isa_string_to_enum": {
  "data": {
   "shadows": "Corrfunc.utils.translate_isa_string_to_enum"
  },
  "type": "import"
 },
 "Corrfunc.theory.xi.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "Corrfunc.theory.xi.xi": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "Corrfunc._countpairs.countpairs_xi",
    "Corrfunc.theory.xi.os",
    "Corrfunc.utils.convert_to_native_endian",
    "Corrfunc.utils.process_weights",
    "Corrfunc.utils.return_file_with_rbins",
    "Corrfunc.utils.sys_pipes",
    "Corrfunc.utils.translate_isa_string_to_enum",
    "ImportError",
    "RuntimeError",
    "future.utils.bytes_to_native_str",
    "locals",
    "numpy.array",
    "numpy.dtype",
    "numpy.float",
    "numpy.uint64"
   ]
  },
  "type": "function"
 },
 "Corrfunc.theory.xi.xi_extn": {
  "data": {
   "shadows": "Corrfunc._countpairs.countpairs_xi"
  },
  "type": "import"
 },
 "Corrfunc.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "Corrfunc.utils": {
  "data": {
   "symbols_in_volume": [
    "Corrfunc.utils.doctest",
    "Corrfunc.utils.sys",
    "NameError",
    "__name__",
    "range"
   ]
  },
  "type": "module"
 },
 "Corrfunc.utils.__all__": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "Corrfunc.utils.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "Corrfunc.utils.compute_nbins": {
  "data": {
   "lineno": 517,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "max",
    "min"
   ]
  },
  "type": "function"
 },
 "Corrfunc.utils.contextmanager": {
  "data": {
   "shadows": "contextlib.contextmanager"
  },
  "type": "import"
 },
 "Corrfunc.utils.convert_3d_counts_to_cf": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "IndexError",
    "RuntimeError",
    "ValueError",
    "dict",
    "len",
    "numpy.float",
    "numpy.nan",
    "numpy.zeros",
    "zip"
   ]
  },
  "type": "function"
 },
 "Corrfunc.utils.convert_rp_pi_counts_to_wp": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "Corrfunc.utils.convert_3d_counts_to_cf",
    "ValueError",
    "len",
    "numpy.empty",
    "numpy.sum",
    "range"
   ]
  },
  "type": "function"
 },
 "Corrfunc.utils.convert_to_native_endian": {
  "data": {
   "lineno": 862,
   "symbols_in_volume": [
    "Corrfunc.utils.sys",
    "Corrfunc.utils.warnings",
    "numpy.asanyarray"
   ]
  },
  "type": "function"
 },
 "Corrfunc.utils.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "Corrfunc.utils.doctest": {
  "data": {
   "shadows": "doctest"
  },
  "type": "import"
 },
 "Corrfunc.utils.file_exists": {
  "data": {
   "shadows": "os.path.exists"
  },
  "type": "import"
 },
 "Corrfunc.utils.fix_cz": {
  "data": {
   "lineno": 380,
   "symbols_in_volume": [
    "TypeError",
    "max"
   ]
  },
  "type": "function"
 },
 "Corrfunc.utils.fix_ra_dec": {
  "data": {
   "lineno": 417,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "max",
    "min",
    "print"
   ]
  },
  "type": "function"
 },
 "Corrfunc.utils.gridlink_sphere": {
  "data": {
   "lineno": 595,
   "symbols_in_volume": [
    "Corrfunc.utils.compute_nbins",
    "Corrfunc.utils.xrange",
    "ValueError",
    "abs",
    "enumerate",
    "math.pi",
    "math.radians",
    "max",
    "min",
    "numpy.arcsin",
    "numpy.cos",
    "numpy.dtype",
    "numpy.float",
    "numpy.int64",
    "numpy.s_",
    "numpy.sin",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "Corrfunc.utils.is_native_endian": {
  "data": {
   "lineno": 920,
   "symbols_in_volume": [
    "Corrfunc.utils.sys",
    "numpy.asanyarray"
   ]
  },
  "type": "function"
 },
 "Corrfunc.utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "Corrfunc.utils.pi": {
  "data": {
   "shadows": "math.pi"
  },
  "type": "import"
 },
 "Corrfunc.utils.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "Corrfunc.utils.process_weights": {
  "data": {
   "lineno": 963,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.ones",
    "prep"
   ]
  },
  "type": "function"
 },
 "Corrfunc.utils.process_weights.prep": {
  "data": {
   "lineno": 984,
   "symbols_in_volume": [
    "float",
    "isinstance",
    "len",
    "numpy.array",
    "numpy.atleast_1d",
    "numpy.atleast_2d",
    "numpy.tile"
   ]
  },
  "type": "function"
 },
 "Corrfunc.utils.radians": {
  "data": {
   "shadows": "math.radians"
  },
  "type": "import"
 },
 "Corrfunc.utils.return_file_with_rbins": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": [
    "Corrfunc.utils.tempfile",
    "IOError",
    "NameError",
    "TypeError",
    "isinstance",
    "len",
    "os.path.exists",
    "range",
    "sorted",
    "str"
   ]
  },
  "type": "function"
 },
 "Corrfunc.utils.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "Corrfunc.utils.sys_pipes": {
  "data": {
   "lineno": 1025,
   "symbols_in_volume": [
    "Corrfunc.utils.sys",
    "Corrfunc.utils.wurlitzer",
    "contextlib.contextmanager"
   ]
  },
  "type": "function"
 },
 "Corrfunc.utils.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "Corrfunc.utils.translate_isa_string_to_enum": {
  "data": {
   "lineno": 460,
   "symbols_in_volume": [
    "KeyError",
    "NameError",
    "TypeError",
    "ValueError",
    "isinstance",
    "print",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "Corrfunc.utils.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "Corrfunc.utils.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "Corrfunc.utils.wurlitzer": {
  "data": {
   "shadows": "wurlitzer"
  },
  "type": "import"
 },
 "Corrfunc.utils.xrange": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "Corrfunc.which": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "Corrfunc.os",
    "ImportError",
    "is_exe",
    "shutil.which"
   ]
  },
  "type": "function"
 },
 "Corrfunc.which.is_exe": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "Corrfunc.os"
   ]
  },
  "type": "function"
 },
 "Corrfunc.write_text_file": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "TypeError",
    "open"
   ]
  },
  "type": "function"
 }
}